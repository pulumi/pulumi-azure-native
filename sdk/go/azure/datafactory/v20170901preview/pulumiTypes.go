// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Activity dependency information.
type ActivityDependency struct {
	// Activity name.
	Activity string `pulumi:"activity"`
	// Match-Condition for the dependency.
	DependencyConditions []string `pulumi:"dependencyConditions"`
}

// ActivityDependencyInput is an input type that accepts ActivityDependencyArgs and ActivityDependencyOutput values.
// You can construct a concrete instance of `ActivityDependencyInput` via:
//
//          ActivityDependencyArgs{...}
type ActivityDependencyInput interface {
	pulumi.Input

	ToActivityDependencyOutput() ActivityDependencyOutput
	ToActivityDependencyOutputWithContext(context.Context) ActivityDependencyOutput
}

// Activity dependency information.
type ActivityDependencyArgs struct {
	// Activity name.
	Activity pulumi.StringInput `pulumi:"activity"`
	// Match-Condition for the dependency.
	DependencyConditions pulumi.StringArrayInput `pulumi:"dependencyConditions"`
}

func (ActivityDependencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityDependency)(nil)).Elem()
}

func (i ActivityDependencyArgs) ToActivityDependencyOutput() ActivityDependencyOutput {
	return i.ToActivityDependencyOutputWithContext(context.Background())
}

func (i ActivityDependencyArgs) ToActivityDependencyOutputWithContext(ctx context.Context) ActivityDependencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityDependencyOutput)
}

// ActivityDependencyArrayInput is an input type that accepts ActivityDependencyArray and ActivityDependencyArrayOutput values.
// You can construct a concrete instance of `ActivityDependencyArrayInput` via:
//
//          ActivityDependencyArray{ ActivityDependencyArgs{...} }
type ActivityDependencyArrayInput interface {
	pulumi.Input

	ToActivityDependencyArrayOutput() ActivityDependencyArrayOutput
	ToActivityDependencyArrayOutputWithContext(context.Context) ActivityDependencyArrayOutput
}

type ActivityDependencyArray []ActivityDependencyInput

func (ActivityDependencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActivityDependency)(nil)).Elem()
}

func (i ActivityDependencyArray) ToActivityDependencyArrayOutput() ActivityDependencyArrayOutput {
	return i.ToActivityDependencyArrayOutputWithContext(context.Background())
}

func (i ActivityDependencyArray) ToActivityDependencyArrayOutputWithContext(ctx context.Context) ActivityDependencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityDependencyArrayOutput)
}

// Activity dependency information.
type ActivityDependencyOutput struct{ *pulumi.OutputState }

func (ActivityDependencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityDependency)(nil)).Elem()
}

func (o ActivityDependencyOutput) ToActivityDependencyOutput() ActivityDependencyOutput {
	return o
}

func (o ActivityDependencyOutput) ToActivityDependencyOutputWithContext(ctx context.Context) ActivityDependencyOutput {
	return o
}

// Activity name.
func (o ActivityDependencyOutput) Activity() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityDependency) string { return v.Activity }).(pulumi.StringOutput)
}

// Match-Condition for the dependency.
func (o ActivityDependencyOutput) DependencyConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActivityDependency) []string { return v.DependencyConditions }).(pulumi.StringArrayOutput)
}

type ActivityDependencyArrayOutput struct{ *pulumi.OutputState }

func (ActivityDependencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActivityDependency)(nil)).Elem()
}

func (o ActivityDependencyArrayOutput) ToActivityDependencyArrayOutput() ActivityDependencyArrayOutput {
	return o
}

func (o ActivityDependencyArrayOutput) ToActivityDependencyArrayOutputWithContext(ctx context.Context) ActivityDependencyArrayOutput {
	return o
}

func (o ActivityDependencyArrayOutput) Index(i pulumi.IntInput) ActivityDependencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActivityDependency {
		return vs[0].([]ActivityDependency)[vs[1].(int)]
	}).(ActivityDependencyOutput)
}

// Activity dependency information.
type ActivityDependencyResponse struct {
	// Activity name.
	Activity string `pulumi:"activity"`
	// Match-Condition for the dependency.
	DependencyConditions []string `pulumi:"dependencyConditions"`
}

// ActivityDependencyResponseInput is an input type that accepts ActivityDependencyResponseArgs and ActivityDependencyResponseOutput values.
// You can construct a concrete instance of `ActivityDependencyResponseInput` via:
//
//          ActivityDependencyResponseArgs{...}
type ActivityDependencyResponseInput interface {
	pulumi.Input

	ToActivityDependencyResponseOutput() ActivityDependencyResponseOutput
	ToActivityDependencyResponseOutputWithContext(context.Context) ActivityDependencyResponseOutput
}

// Activity dependency information.
type ActivityDependencyResponseArgs struct {
	// Activity name.
	Activity pulumi.StringInput `pulumi:"activity"`
	// Match-Condition for the dependency.
	DependencyConditions pulumi.StringArrayInput `pulumi:"dependencyConditions"`
}

func (ActivityDependencyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityDependencyResponse)(nil)).Elem()
}

func (i ActivityDependencyResponseArgs) ToActivityDependencyResponseOutput() ActivityDependencyResponseOutput {
	return i.ToActivityDependencyResponseOutputWithContext(context.Background())
}

func (i ActivityDependencyResponseArgs) ToActivityDependencyResponseOutputWithContext(ctx context.Context) ActivityDependencyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityDependencyResponseOutput)
}

// ActivityDependencyResponseArrayInput is an input type that accepts ActivityDependencyResponseArray and ActivityDependencyResponseArrayOutput values.
// You can construct a concrete instance of `ActivityDependencyResponseArrayInput` via:
//
//          ActivityDependencyResponseArray{ ActivityDependencyResponseArgs{...} }
type ActivityDependencyResponseArrayInput interface {
	pulumi.Input

	ToActivityDependencyResponseArrayOutput() ActivityDependencyResponseArrayOutput
	ToActivityDependencyResponseArrayOutputWithContext(context.Context) ActivityDependencyResponseArrayOutput
}

type ActivityDependencyResponseArray []ActivityDependencyResponseInput

func (ActivityDependencyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActivityDependencyResponse)(nil)).Elem()
}

func (i ActivityDependencyResponseArray) ToActivityDependencyResponseArrayOutput() ActivityDependencyResponseArrayOutput {
	return i.ToActivityDependencyResponseArrayOutputWithContext(context.Background())
}

func (i ActivityDependencyResponseArray) ToActivityDependencyResponseArrayOutputWithContext(ctx context.Context) ActivityDependencyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityDependencyResponseArrayOutput)
}

// Activity dependency information.
type ActivityDependencyResponseOutput struct{ *pulumi.OutputState }

func (ActivityDependencyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityDependencyResponse)(nil)).Elem()
}

func (o ActivityDependencyResponseOutput) ToActivityDependencyResponseOutput() ActivityDependencyResponseOutput {
	return o
}

func (o ActivityDependencyResponseOutput) ToActivityDependencyResponseOutputWithContext(ctx context.Context) ActivityDependencyResponseOutput {
	return o
}

// Activity name.
func (o ActivityDependencyResponseOutput) Activity() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityDependencyResponse) string { return v.Activity }).(pulumi.StringOutput)
}

// Match-Condition for the dependency.
func (o ActivityDependencyResponseOutput) DependencyConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActivityDependencyResponse) []string { return v.DependencyConditions }).(pulumi.StringArrayOutput)
}

type ActivityDependencyResponseArrayOutput struct{ *pulumi.OutputState }

func (ActivityDependencyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActivityDependencyResponse)(nil)).Elem()
}

func (o ActivityDependencyResponseArrayOutput) ToActivityDependencyResponseArrayOutput() ActivityDependencyResponseArrayOutput {
	return o
}

func (o ActivityDependencyResponseArrayOutput) ToActivityDependencyResponseArrayOutputWithContext(ctx context.Context) ActivityDependencyResponseArrayOutput {
	return o
}

func (o ActivityDependencyResponseArrayOutput) Index(i pulumi.IntInput) ActivityDependencyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActivityDependencyResponse {
		return vs[0].([]ActivityDependencyResponse)[vs[1].(int)]
	}).(ActivityDependencyResponseOutput)
}

// Execution policy for an activity.
type ActivityPolicy struct {
	// Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
	Retry interface{} `pulumi:"retry"`
	// Interval between each retry attempt (in seconds). The default is 30 sec.
	RetryIntervalInSeconds *int `pulumi:"retryIntervalInSeconds"`
	// When set to true, Output from activity is considered as secure and will not be logged to monitoring.
	SecureOutput *bool `pulumi:"secureOutput"`
	// Specifies the timeout for the activity to run. The default timeout is 7 days. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	Timeout interface{} `pulumi:"timeout"`
}

// ActivityPolicyInput is an input type that accepts ActivityPolicyArgs and ActivityPolicyOutput values.
// You can construct a concrete instance of `ActivityPolicyInput` via:
//
//          ActivityPolicyArgs{...}
type ActivityPolicyInput interface {
	pulumi.Input

	ToActivityPolicyOutput() ActivityPolicyOutput
	ToActivityPolicyOutputWithContext(context.Context) ActivityPolicyOutput
}

// Execution policy for an activity.
type ActivityPolicyArgs struct {
	// Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
	Retry pulumi.Input `pulumi:"retry"`
	// Interval between each retry attempt (in seconds). The default is 30 sec.
	RetryIntervalInSeconds pulumi.IntPtrInput `pulumi:"retryIntervalInSeconds"`
	// When set to true, Output from activity is considered as secure and will not be logged to monitoring.
	SecureOutput pulumi.BoolPtrInput `pulumi:"secureOutput"`
	// Specifies the timeout for the activity to run. The default timeout is 7 days. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	Timeout pulumi.Input `pulumi:"timeout"`
}

func (ActivityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityPolicy)(nil)).Elem()
}

func (i ActivityPolicyArgs) ToActivityPolicyOutput() ActivityPolicyOutput {
	return i.ToActivityPolicyOutputWithContext(context.Background())
}

func (i ActivityPolicyArgs) ToActivityPolicyOutputWithContext(ctx context.Context) ActivityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityPolicyOutput)
}

func (i ActivityPolicyArgs) ToActivityPolicyPtrOutput() ActivityPolicyPtrOutput {
	return i.ToActivityPolicyPtrOutputWithContext(context.Background())
}

func (i ActivityPolicyArgs) ToActivityPolicyPtrOutputWithContext(ctx context.Context) ActivityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityPolicyOutput).ToActivityPolicyPtrOutputWithContext(ctx)
}

// ActivityPolicyPtrInput is an input type that accepts ActivityPolicyArgs, ActivityPolicyPtr and ActivityPolicyPtrOutput values.
// You can construct a concrete instance of `ActivityPolicyPtrInput` via:
//
//          ActivityPolicyArgs{...}
//
//  or:
//
//          nil
type ActivityPolicyPtrInput interface {
	pulumi.Input

	ToActivityPolicyPtrOutput() ActivityPolicyPtrOutput
	ToActivityPolicyPtrOutputWithContext(context.Context) ActivityPolicyPtrOutput
}

type activityPolicyPtrType ActivityPolicyArgs

func ActivityPolicyPtr(v *ActivityPolicyArgs) ActivityPolicyPtrInput {
	return (*activityPolicyPtrType)(v)
}

func (*activityPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityPolicy)(nil)).Elem()
}

func (i *activityPolicyPtrType) ToActivityPolicyPtrOutput() ActivityPolicyPtrOutput {
	return i.ToActivityPolicyPtrOutputWithContext(context.Background())
}

func (i *activityPolicyPtrType) ToActivityPolicyPtrOutputWithContext(ctx context.Context) ActivityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityPolicyPtrOutput)
}

// Execution policy for an activity.
type ActivityPolicyOutput struct{ *pulumi.OutputState }

func (ActivityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityPolicy)(nil)).Elem()
}

func (o ActivityPolicyOutput) ToActivityPolicyOutput() ActivityPolicyOutput {
	return o
}

func (o ActivityPolicyOutput) ToActivityPolicyOutputWithContext(ctx context.Context) ActivityPolicyOutput {
	return o
}

func (o ActivityPolicyOutput) ToActivityPolicyPtrOutput() ActivityPolicyPtrOutput {
	return o.ToActivityPolicyPtrOutputWithContext(context.Background())
}

func (o ActivityPolicyOutput) ToActivityPolicyPtrOutputWithContext(ctx context.Context) ActivityPolicyPtrOutput {
	return o.ApplyT(func(v ActivityPolicy) *ActivityPolicy {
		return &v
	}).(ActivityPolicyPtrOutput)
}

// Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
func (o ActivityPolicyOutput) Retry() pulumi.AnyOutput {
	return o.ApplyT(func(v ActivityPolicy) interface{} { return v.Retry }).(pulumi.AnyOutput)
}

// Interval between each retry attempt (in seconds). The default is 30 sec.
func (o ActivityPolicyOutput) RetryIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ActivityPolicy) *int { return v.RetryIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// When set to true, Output from activity is considered as secure and will not be logged to monitoring.
func (o ActivityPolicyOutput) SecureOutput() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActivityPolicy) *bool { return v.SecureOutput }).(pulumi.BoolPtrOutput)
}

// Specifies the timeout for the activity to run. The default timeout is 7 days. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o ActivityPolicyOutput) Timeout() pulumi.AnyOutput {
	return o.ApplyT(func(v ActivityPolicy) interface{} { return v.Timeout }).(pulumi.AnyOutput)
}

type ActivityPolicyPtrOutput struct{ *pulumi.OutputState }

func (ActivityPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityPolicy)(nil)).Elem()
}

func (o ActivityPolicyPtrOutput) ToActivityPolicyPtrOutput() ActivityPolicyPtrOutput {
	return o
}

func (o ActivityPolicyPtrOutput) ToActivityPolicyPtrOutputWithContext(ctx context.Context) ActivityPolicyPtrOutput {
	return o
}

func (o ActivityPolicyPtrOutput) Elem() ActivityPolicyOutput {
	return o.ApplyT(func(v *ActivityPolicy) ActivityPolicy { return *v }).(ActivityPolicyOutput)
}

// Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
func (o ActivityPolicyPtrOutput) Retry() pulumi.AnyOutput {
	return o.ApplyT(func(v *ActivityPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.Retry
	}).(pulumi.AnyOutput)
}

// Interval between each retry attempt (in seconds). The default is 30 sec.
func (o ActivityPolicyPtrOutput) RetryIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ActivityPolicy) *int {
		if v == nil {
			return nil
		}
		return v.RetryIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// When set to true, Output from activity is considered as secure and will not be logged to monitoring.
func (o ActivityPolicyPtrOutput) SecureOutput() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActivityPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.SecureOutput
	}).(pulumi.BoolPtrOutput)
}

// Specifies the timeout for the activity to run. The default timeout is 7 days. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o ActivityPolicyPtrOutput) Timeout() pulumi.AnyOutput {
	return o.ApplyT(func(v *ActivityPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.AnyOutput)
}

// Execution policy for an activity.
type ActivityPolicyResponse struct {
	// Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
	Retry interface{} `pulumi:"retry"`
	// Interval between each retry attempt (in seconds). The default is 30 sec.
	RetryIntervalInSeconds *int `pulumi:"retryIntervalInSeconds"`
	// When set to true, Output from activity is considered as secure and will not be logged to monitoring.
	SecureOutput *bool `pulumi:"secureOutput"`
	// Specifies the timeout for the activity to run. The default timeout is 7 days. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	Timeout interface{} `pulumi:"timeout"`
}

// ActivityPolicyResponseInput is an input type that accepts ActivityPolicyResponseArgs and ActivityPolicyResponseOutput values.
// You can construct a concrete instance of `ActivityPolicyResponseInput` via:
//
//          ActivityPolicyResponseArgs{...}
type ActivityPolicyResponseInput interface {
	pulumi.Input

	ToActivityPolicyResponseOutput() ActivityPolicyResponseOutput
	ToActivityPolicyResponseOutputWithContext(context.Context) ActivityPolicyResponseOutput
}

// Execution policy for an activity.
type ActivityPolicyResponseArgs struct {
	// Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
	Retry pulumi.Input `pulumi:"retry"`
	// Interval between each retry attempt (in seconds). The default is 30 sec.
	RetryIntervalInSeconds pulumi.IntPtrInput `pulumi:"retryIntervalInSeconds"`
	// When set to true, Output from activity is considered as secure and will not be logged to monitoring.
	SecureOutput pulumi.BoolPtrInput `pulumi:"secureOutput"`
	// Specifies the timeout for the activity to run. The default timeout is 7 days. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	Timeout pulumi.Input `pulumi:"timeout"`
}

func (ActivityPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityPolicyResponse)(nil)).Elem()
}

func (i ActivityPolicyResponseArgs) ToActivityPolicyResponseOutput() ActivityPolicyResponseOutput {
	return i.ToActivityPolicyResponseOutputWithContext(context.Background())
}

func (i ActivityPolicyResponseArgs) ToActivityPolicyResponseOutputWithContext(ctx context.Context) ActivityPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityPolicyResponseOutput)
}

func (i ActivityPolicyResponseArgs) ToActivityPolicyResponsePtrOutput() ActivityPolicyResponsePtrOutput {
	return i.ToActivityPolicyResponsePtrOutputWithContext(context.Background())
}

func (i ActivityPolicyResponseArgs) ToActivityPolicyResponsePtrOutputWithContext(ctx context.Context) ActivityPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityPolicyResponseOutput).ToActivityPolicyResponsePtrOutputWithContext(ctx)
}

// ActivityPolicyResponsePtrInput is an input type that accepts ActivityPolicyResponseArgs, ActivityPolicyResponsePtr and ActivityPolicyResponsePtrOutput values.
// You can construct a concrete instance of `ActivityPolicyResponsePtrInput` via:
//
//          ActivityPolicyResponseArgs{...}
//
//  or:
//
//          nil
type ActivityPolicyResponsePtrInput interface {
	pulumi.Input

	ToActivityPolicyResponsePtrOutput() ActivityPolicyResponsePtrOutput
	ToActivityPolicyResponsePtrOutputWithContext(context.Context) ActivityPolicyResponsePtrOutput
}

type activityPolicyResponsePtrType ActivityPolicyResponseArgs

func ActivityPolicyResponsePtr(v *ActivityPolicyResponseArgs) ActivityPolicyResponsePtrInput {
	return (*activityPolicyResponsePtrType)(v)
}

func (*activityPolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityPolicyResponse)(nil)).Elem()
}

func (i *activityPolicyResponsePtrType) ToActivityPolicyResponsePtrOutput() ActivityPolicyResponsePtrOutput {
	return i.ToActivityPolicyResponsePtrOutputWithContext(context.Background())
}

func (i *activityPolicyResponsePtrType) ToActivityPolicyResponsePtrOutputWithContext(ctx context.Context) ActivityPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityPolicyResponsePtrOutput)
}

// Execution policy for an activity.
type ActivityPolicyResponseOutput struct{ *pulumi.OutputState }

func (ActivityPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityPolicyResponse)(nil)).Elem()
}

func (o ActivityPolicyResponseOutput) ToActivityPolicyResponseOutput() ActivityPolicyResponseOutput {
	return o
}

func (o ActivityPolicyResponseOutput) ToActivityPolicyResponseOutputWithContext(ctx context.Context) ActivityPolicyResponseOutput {
	return o
}

func (o ActivityPolicyResponseOutput) ToActivityPolicyResponsePtrOutput() ActivityPolicyResponsePtrOutput {
	return o.ToActivityPolicyResponsePtrOutputWithContext(context.Background())
}

func (o ActivityPolicyResponseOutput) ToActivityPolicyResponsePtrOutputWithContext(ctx context.Context) ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v ActivityPolicyResponse) *ActivityPolicyResponse {
		return &v
	}).(ActivityPolicyResponsePtrOutput)
}

// Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
func (o ActivityPolicyResponseOutput) Retry() pulumi.AnyOutput {
	return o.ApplyT(func(v ActivityPolicyResponse) interface{} { return v.Retry }).(pulumi.AnyOutput)
}

// Interval between each retry attempt (in seconds). The default is 30 sec.
func (o ActivityPolicyResponseOutput) RetryIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ActivityPolicyResponse) *int { return v.RetryIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// When set to true, Output from activity is considered as secure and will not be logged to monitoring.
func (o ActivityPolicyResponseOutput) SecureOutput() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActivityPolicyResponse) *bool { return v.SecureOutput }).(pulumi.BoolPtrOutput)
}

// Specifies the timeout for the activity to run. The default timeout is 7 days. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o ActivityPolicyResponseOutput) Timeout() pulumi.AnyOutput {
	return o.ApplyT(func(v ActivityPolicyResponse) interface{} { return v.Timeout }).(pulumi.AnyOutput)
}

type ActivityPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (ActivityPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityPolicyResponse)(nil)).Elem()
}

func (o ActivityPolicyResponsePtrOutput) ToActivityPolicyResponsePtrOutput() ActivityPolicyResponsePtrOutput {
	return o
}

func (o ActivityPolicyResponsePtrOutput) ToActivityPolicyResponsePtrOutputWithContext(ctx context.Context) ActivityPolicyResponsePtrOutput {
	return o
}

func (o ActivityPolicyResponsePtrOutput) Elem() ActivityPolicyResponseOutput {
	return o.ApplyT(func(v *ActivityPolicyResponse) ActivityPolicyResponse { return *v }).(ActivityPolicyResponseOutput)
}

// Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
func (o ActivityPolicyResponsePtrOutput) Retry() pulumi.AnyOutput {
	return o.ApplyT(func(v *ActivityPolicyResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Retry
	}).(pulumi.AnyOutput)
}

// Interval between each retry attempt (in seconds). The default is 30 sec.
func (o ActivityPolicyResponsePtrOutput) RetryIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ActivityPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetryIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// When set to true, Output from activity is considered as secure and will not be logged to monitoring.
func (o ActivityPolicyResponsePtrOutput) SecureOutput() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActivityPolicyResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SecureOutput
	}).(pulumi.BoolPtrOutput)
}

// Specifies the timeout for the activity to run. The default timeout is 7 days. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o ActivityPolicyResponsePtrOutput) Timeout() pulumi.AnyOutput {
	return o.ApplyT(func(v *ActivityPolicyResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.AnyOutput)
}

// Amazon Marketplace Web Service linked service.
type AmazonMWSLinkedService struct {
	// The access key id used to access data.
	AccessKeyId interface{} `pulumi:"accessKeyId"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)
	Endpoint interface{} `pulumi:"endpoint"`
	// The Amazon Marketplace ID you want to retrieve data from. To retrieve data from multiple Marketplace IDs, separate them with a comma (,). (i.e. A2EUQ1WTGCTBG2)
	MarketplaceID interface{} `pulumi:"marketplaceID"`
	// The Amazon MWS authentication token.
	MwsAuthToken interface{} `pulumi:"mwsAuthToken"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The secret key used to access data.
	SecretKey interface{} `pulumi:"secretKey"`
	// The Amazon seller ID.
	SellerID interface{} `pulumi:"sellerID"`
	// Type of linked service.
	// Expected value is 'AmazonMWS'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// AmazonMWSLinkedServiceInput is an input type that accepts AmazonMWSLinkedServiceArgs and AmazonMWSLinkedServiceOutput values.
// You can construct a concrete instance of `AmazonMWSLinkedServiceInput` via:
//
//          AmazonMWSLinkedServiceArgs{...}
type AmazonMWSLinkedServiceInput interface {
	pulumi.Input

	ToAmazonMWSLinkedServiceOutput() AmazonMWSLinkedServiceOutput
	ToAmazonMWSLinkedServiceOutputWithContext(context.Context) AmazonMWSLinkedServiceOutput
}

// Amazon Marketplace Web Service linked service.
type AmazonMWSLinkedServiceArgs struct {
	// The access key id used to access data.
	AccessKeyId pulumi.Input `pulumi:"accessKeyId"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)
	Endpoint pulumi.Input `pulumi:"endpoint"`
	// The Amazon Marketplace ID you want to retrieve data from. To retrieve data from multiple Marketplace IDs, separate them with a comma (,). (i.e. A2EUQ1WTGCTBG2)
	MarketplaceID pulumi.Input `pulumi:"marketplaceID"`
	// The Amazon MWS authentication token.
	MwsAuthToken pulumi.Input `pulumi:"mwsAuthToken"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The secret key used to access data.
	SecretKey pulumi.Input `pulumi:"secretKey"`
	// The Amazon seller ID.
	SellerID pulumi.Input `pulumi:"sellerID"`
	// Type of linked service.
	// Expected value is 'AmazonMWS'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (AmazonMWSLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonMWSLinkedService)(nil)).Elem()
}

func (i AmazonMWSLinkedServiceArgs) ToAmazonMWSLinkedServiceOutput() AmazonMWSLinkedServiceOutput {
	return i.ToAmazonMWSLinkedServiceOutputWithContext(context.Background())
}

func (i AmazonMWSLinkedServiceArgs) ToAmazonMWSLinkedServiceOutputWithContext(ctx context.Context) AmazonMWSLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmazonMWSLinkedServiceOutput)
}

// Amazon Marketplace Web Service linked service.
type AmazonMWSLinkedServiceOutput struct{ *pulumi.OutputState }

func (AmazonMWSLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonMWSLinkedService)(nil)).Elem()
}

func (o AmazonMWSLinkedServiceOutput) ToAmazonMWSLinkedServiceOutput() AmazonMWSLinkedServiceOutput {
	return o
}

func (o AmazonMWSLinkedServiceOutput) ToAmazonMWSLinkedServiceOutputWithContext(ctx context.Context) AmazonMWSLinkedServiceOutput {
	return o
}

// The access key id used to access data.
func (o AmazonMWSLinkedServiceOutput) AccessKeyId() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedService) interface{} { return v.AccessKeyId }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o AmazonMWSLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AmazonMWSLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AmazonMWSLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v AmazonMWSLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o AmazonMWSLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmazonMWSLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AmazonMWSLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)
func (o AmazonMWSLinkedServiceOutput) Endpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedService) interface{} { return v.Endpoint }).(pulumi.AnyOutput)
}

// The Amazon Marketplace ID you want to retrieve data from. To retrieve data from multiple Marketplace IDs, separate them with a comma (,). (i.e. A2EUQ1WTGCTBG2)
func (o AmazonMWSLinkedServiceOutput) MarketplaceID() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedService) interface{} { return v.MarketplaceID }).(pulumi.AnyOutput)
}

// The Amazon MWS authentication token.
func (o AmazonMWSLinkedServiceOutput) MwsAuthToken() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedService) interface{} { return v.MwsAuthToken }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AmazonMWSLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AmazonMWSLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The secret key used to access data.
func (o AmazonMWSLinkedServiceOutput) SecretKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedService) interface{} { return v.SecretKey }).(pulumi.AnyOutput)
}

// The Amazon seller ID.
func (o AmazonMWSLinkedServiceOutput) SellerID() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedService) interface{} { return v.SellerID }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AmazonMWS'.
func (o AmazonMWSLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AmazonMWSLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o AmazonMWSLinkedServiceOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedService) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o AmazonMWSLinkedServiceOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedService) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o AmazonMWSLinkedServiceOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedService) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Amazon Marketplace Web Service linked service.
type AmazonMWSLinkedServiceResponse struct {
	// The access key id used to access data.
	AccessKeyId interface{} `pulumi:"accessKeyId"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)
	Endpoint interface{} `pulumi:"endpoint"`
	// The Amazon Marketplace ID you want to retrieve data from. To retrieve data from multiple Marketplace IDs, separate them with a comma (,). (i.e. A2EUQ1WTGCTBG2)
	MarketplaceID interface{} `pulumi:"marketplaceID"`
	// The Amazon MWS authentication token.
	MwsAuthToken interface{} `pulumi:"mwsAuthToken"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The secret key used to access data.
	SecretKey interface{} `pulumi:"secretKey"`
	// The Amazon seller ID.
	SellerID interface{} `pulumi:"sellerID"`
	// Type of linked service.
	// Expected value is 'AmazonMWS'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// AmazonMWSLinkedServiceResponseInput is an input type that accepts AmazonMWSLinkedServiceResponseArgs and AmazonMWSLinkedServiceResponseOutput values.
// You can construct a concrete instance of `AmazonMWSLinkedServiceResponseInput` via:
//
//          AmazonMWSLinkedServiceResponseArgs{...}
type AmazonMWSLinkedServiceResponseInput interface {
	pulumi.Input

	ToAmazonMWSLinkedServiceResponseOutput() AmazonMWSLinkedServiceResponseOutput
	ToAmazonMWSLinkedServiceResponseOutputWithContext(context.Context) AmazonMWSLinkedServiceResponseOutput
}

// Amazon Marketplace Web Service linked service.
type AmazonMWSLinkedServiceResponseArgs struct {
	// The access key id used to access data.
	AccessKeyId pulumi.Input `pulumi:"accessKeyId"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)
	Endpoint pulumi.Input `pulumi:"endpoint"`
	// The Amazon Marketplace ID you want to retrieve data from. To retrieve data from multiple Marketplace IDs, separate them with a comma (,). (i.e. A2EUQ1WTGCTBG2)
	MarketplaceID pulumi.Input `pulumi:"marketplaceID"`
	// The Amazon MWS authentication token.
	MwsAuthToken pulumi.Input `pulumi:"mwsAuthToken"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The secret key used to access data.
	SecretKey pulumi.Input `pulumi:"secretKey"`
	// The Amazon seller ID.
	SellerID pulumi.Input `pulumi:"sellerID"`
	// Type of linked service.
	// Expected value is 'AmazonMWS'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (AmazonMWSLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonMWSLinkedServiceResponse)(nil)).Elem()
}

func (i AmazonMWSLinkedServiceResponseArgs) ToAmazonMWSLinkedServiceResponseOutput() AmazonMWSLinkedServiceResponseOutput {
	return i.ToAmazonMWSLinkedServiceResponseOutputWithContext(context.Background())
}

func (i AmazonMWSLinkedServiceResponseArgs) ToAmazonMWSLinkedServiceResponseOutputWithContext(ctx context.Context) AmazonMWSLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmazonMWSLinkedServiceResponseOutput)
}

// Amazon Marketplace Web Service linked service.
type AmazonMWSLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (AmazonMWSLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonMWSLinkedServiceResponse)(nil)).Elem()
}

func (o AmazonMWSLinkedServiceResponseOutput) ToAmazonMWSLinkedServiceResponseOutput() AmazonMWSLinkedServiceResponseOutput {
	return o
}

func (o AmazonMWSLinkedServiceResponseOutput) ToAmazonMWSLinkedServiceResponseOutputWithContext(ctx context.Context) AmazonMWSLinkedServiceResponseOutput {
	return o
}

// The access key id used to access data.
func (o AmazonMWSLinkedServiceResponseOutput) AccessKeyId() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedServiceResponse) interface{} { return v.AccessKeyId }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o AmazonMWSLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AmazonMWSLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AmazonMWSLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v AmazonMWSLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o AmazonMWSLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmazonMWSLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AmazonMWSLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)
func (o AmazonMWSLinkedServiceResponseOutput) Endpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedServiceResponse) interface{} { return v.Endpoint }).(pulumi.AnyOutput)
}

// The Amazon Marketplace ID you want to retrieve data from. To retrieve data from multiple Marketplace IDs, separate them with a comma (,). (i.e. A2EUQ1WTGCTBG2)
func (o AmazonMWSLinkedServiceResponseOutput) MarketplaceID() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedServiceResponse) interface{} { return v.MarketplaceID }).(pulumi.AnyOutput)
}

// The Amazon MWS authentication token.
func (o AmazonMWSLinkedServiceResponseOutput) MwsAuthToken() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedServiceResponse) interface{} { return v.MwsAuthToken }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AmazonMWSLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AmazonMWSLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The secret key used to access data.
func (o AmazonMWSLinkedServiceResponseOutput) SecretKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedServiceResponse) interface{} { return v.SecretKey }).(pulumi.AnyOutput)
}

// The Amazon seller ID.
func (o AmazonMWSLinkedServiceResponseOutput) SellerID() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedServiceResponse) interface{} { return v.SellerID }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AmazonMWS'.
func (o AmazonMWSLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AmazonMWSLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o AmazonMWSLinkedServiceResponseOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedServiceResponse) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o AmazonMWSLinkedServiceResponseOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedServiceResponse) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o AmazonMWSLinkedServiceResponseOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSLinkedServiceResponse) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Amazon Marketplace Web Service dataset.
type AmazonMWSObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AmazonMWSObject'.
	Type string `pulumi:"type"`
}

// AmazonMWSObjectDatasetInput is an input type that accepts AmazonMWSObjectDatasetArgs and AmazonMWSObjectDatasetOutput values.
// You can construct a concrete instance of `AmazonMWSObjectDatasetInput` via:
//
//          AmazonMWSObjectDatasetArgs{...}
type AmazonMWSObjectDatasetInput interface {
	pulumi.Input

	ToAmazonMWSObjectDatasetOutput() AmazonMWSObjectDatasetOutput
	ToAmazonMWSObjectDatasetOutputWithContext(context.Context) AmazonMWSObjectDatasetOutput
}

// Amazon Marketplace Web Service dataset.
type AmazonMWSObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AmazonMWSObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AmazonMWSObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonMWSObjectDataset)(nil)).Elem()
}

func (i AmazonMWSObjectDatasetArgs) ToAmazonMWSObjectDatasetOutput() AmazonMWSObjectDatasetOutput {
	return i.ToAmazonMWSObjectDatasetOutputWithContext(context.Background())
}

func (i AmazonMWSObjectDatasetArgs) ToAmazonMWSObjectDatasetOutputWithContext(ctx context.Context) AmazonMWSObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmazonMWSObjectDatasetOutput)
}

// Amazon Marketplace Web Service dataset.
type AmazonMWSObjectDatasetOutput struct{ *pulumi.OutputState }

func (AmazonMWSObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonMWSObjectDataset)(nil)).Elem()
}

func (o AmazonMWSObjectDatasetOutput) ToAmazonMWSObjectDatasetOutput() AmazonMWSObjectDatasetOutput {
	return o
}

func (o AmazonMWSObjectDatasetOutput) ToAmazonMWSObjectDatasetOutputWithContext(ctx context.Context) AmazonMWSObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AmazonMWSObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AmazonMWSObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o AmazonMWSObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmazonMWSObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o AmazonMWSObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v AmazonMWSObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o AmazonMWSObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AmazonMWSObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AmazonMWSObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AmazonMWSObject'.
func (o AmazonMWSObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AmazonMWSObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Amazon Marketplace Web Service dataset.
type AmazonMWSObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AmazonMWSObject'.
	Type string `pulumi:"type"`
}

// AmazonMWSObjectDatasetResponseInput is an input type that accepts AmazonMWSObjectDatasetResponseArgs and AmazonMWSObjectDatasetResponseOutput values.
// You can construct a concrete instance of `AmazonMWSObjectDatasetResponseInput` via:
//
//          AmazonMWSObjectDatasetResponseArgs{...}
type AmazonMWSObjectDatasetResponseInput interface {
	pulumi.Input

	ToAmazonMWSObjectDatasetResponseOutput() AmazonMWSObjectDatasetResponseOutput
	ToAmazonMWSObjectDatasetResponseOutputWithContext(context.Context) AmazonMWSObjectDatasetResponseOutput
}

// Amazon Marketplace Web Service dataset.
type AmazonMWSObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AmazonMWSObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AmazonMWSObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonMWSObjectDatasetResponse)(nil)).Elem()
}

func (i AmazonMWSObjectDatasetResponseArgs) ToAmazonMWSObjectDatasetResponseOutput() AmazonMWSObjectDatasetResponseOutput {
	return i.ToAmazonMWSObjectDatasetResponseOutputWithContext(context.Background())
}

func (i AmazonMWSObjectDatasetResponseArgs) ToAmazonMWSObjectDatasetResponseOutputWithContext(ctx context.Context) AmazonMWSObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmazonMWSObjectDatasetResponseOutput)
}

// Amazon Marketplace Web Service dataset.
type AmazonMWSObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (AmazonMWSObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonMWSObjectDatasetResponse)(nil)).Elem()
}

func (o AmazonMWSObjectDatasetResponseOutput) ToAmazonMWSObjectDatasetResponseOutput() AmazonMWSObjectDatasetResponseOutput {
	return o
}

func (o AmazonMWSObjectDatasetResponseOutput) ToAmazonMWSObjectDatasetResponseOutputWithContext(ctx context.Context) AmazonMWSObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AmazonMWSObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AmazonMWSObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o AmazonMWSObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmazonMWSObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o AmazonMWSObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v AmazonMWSObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o AmazonMWSObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AmazonMWSObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AmazonMWSObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AmazonMWSObject'.
func (o AmazonMWSObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AmazonMWSObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Amazon Marketplace Web Service source.
type AmazonMWSSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AmazonMWSSource'.
	Type string `pulumi:"type"`
}

// AmazonMWSSourceInput is an input type that accepts AmazonMWSSourceArgs and AmazonMWSSourceOutput values.
// You can construct a concrete instance of `AmazonMWSSourceInput` via:
//
//          AmazonMWSSourceArgs{...}
type AmazonMWSSourceInput interface {
	pulumi.Input

	ToAmazonMWSSourceOutput() AmazonMWSSourceOutput
	ToAmazonMWSSourceOutputWithContext(context.Context) AmazonMWSSourceOutput
}

// A copy activity Amazon Marketplace Web Service source.
type AmazonMWSSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AmazonMWSSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AmazonMWSSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonMWSSource)(nil)).Elem()
}

func (i AmazonMWSSourceArgs) ToAmazonMWSSourceOutput() AmazonMWSSourceOutput {
	return i.ToAmazonMWSSourceOutputWithContext(context.Background())
}

func (i AmazonMWSSourceArgs) ToAmazonMWSSourceOutputWithContext(ctx context.Context) AmazonMWSSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmazonMWSSourceOutput)
}

// A copy activity Amazon Marketplace Web Service source.
type AmazonMWSSourceOutput struct{ *pulumi.OutputState }

func (AmazonMWSSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonMWSSource)(nil)).Elem()
}

func (o AmazonMWSSourceOutput) ToAmazonMWSSourceOutput() AmazonMWSSourceOutput {
	return o
}

func (o AmazonMWSSourceOutput) ToAmazonMWSSourceOutputWithContext(ctx context.Context) AmazonMWSSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o AmazonMWSSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o AmazonMWSSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AmazonMWSSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'AmazonMWSSource'.
func (o AmazonMWSSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AmazonMWSSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Amazon Marketplace Web Service source.
type AmazonMWSSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AmazonMWSSource'.
	Type string `pulumi:"type"`
}

// AmazonMWSSourceResponseInput is an input type that accepts AmazonMWSSourceResponseArgs and AmazonMWSSourceResponseOutput values.
// You can construct a concrete instance of `AmazonMWSSourceResponseInput` via:
//
//          AmazonMWSSourceResponseArgs{...}
type AmazonMWSSourceResponseInput interface {
	pulumi.Input

	ToAmazonMWSSourceResponseOutput() AmazonMWSSourceResponseOutput
	ToAmazonMWSSourceResponseOutputWithContext(context.Context) AmazonMWSSourceResponseOutput
}

// A copy activity Amazon Marketplace Web Service source.
type AmazonMWSSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AmazonMWSSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AmazonMWSSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonMWSSourceResponse)(nil)).Elem()
}

func (i AmazonMWSSourceResponseArgs) ToAmazonMWSSourceResponseOutput() AmazonMWSSourceResponseOutput {
	return i.ToAmazonMWSSourceResponseOutputWithContext(context.Background())
}

func (i AmazonMWSSourceResponseArgs) ToAmazonMWSSourceResponseOutputWithContext(ctx context.Context) AmazonMWSSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmazonMWSSourceResponseOutput)
}

// A copy activity Amazon Marketplace Web Service source.
type AmazonMWSSourceResponseOutput struct{ *pulumi.OutputState }

func (AmazonMWSSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonMWSSourceResponse)(nil)).Elem()
}

func (o AmazonMWSSourceResponseOutput) ToAmazonMWSSourceResponseOutput() AmazonMWSSourceResponseOutput {
	return o
}

func (o AmazonMWSSourceResponseOutput) ToAmazonMWSSourceResponseOutputWithContext(ctx context.Context) AmazonMWSSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o AmazonMWSSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o AmazonMWSSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AmazonMWSSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonMWSSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'AmazonMWSSource'.
func (o AmazonMWSSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AmazonMWSSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Linked service for Amazon Redshift.
type AmazonRedshiftLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// The database name of the Amazon Redshift source. Type: string (or Expression with resultType string).
	Database interface{} `pulumi:"database"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The password of the Amazon Redshift source.
	Password interface{} `pulumi:"password"`
	// The TCP port number that the Amazon Redshift server uses to listen for client connections. The default value is 5439. Type: integer (or Expression with resultType integer).
	Port interface{} `pulumi:"port"`
	// The name of the Amazon Redshift server. Type: string (or Expression with resultType string).
	Server interface{} `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'AmazonRedshift'.
	Type string `pulumi:"type"`
	// The username of the Amazon Redshift source. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// AmazonRedshiftLinkedServiceInput is an input type that accepts AmazonRedshiftLinkedServiceArgs and AmazonRedshiftLinkedServiceOutput values.
// You can construct a concrete instance of `AmazonRedshiftLinkedServiceInput` via:
//
//          AmazonRedshiftLinkedServiceArgs{...}
type AmazonRedshiftLinkedServiceInput interface {
	pulumi.Input

	ToAmazonRedshiftLinkedServiceOutput() AmazonRedshiftLinkedServiceOutput
	ToAmazonRedshiftLinkedServiceOutputWithContext(context.Context) AmazonRedshiftLinkedServiceOutput
}

// Linked service for Amazon Redshift.
type AmazonRedshiftLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// The database name of the Amazon Redshift source. Type: string (or Expression with resultType string).
	Database pulumi.Input `pulumi:"database"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The password of the Amazon Redshift source.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port number that the Amazon Redshift server uses to listen for client connections. The default value is 5439. Type: integer (or Expression with resultType integer).
	Port pulumi.Input `pulumi:"port"`
	// The name of the Amazon Redshift server. Type: string (or Expression with resultType string).
	Server pulumi.Input `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'AmazonRedshift'.
	Type pulumi.StringInput `pulumi:"type"`
	// The username of the Amazon Redshift source. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (AmazonRedshiftLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonRedshiftLinkedService)(nil)).Elem()
}

func (i AmazonRedshiftLinkedServiceArgs) ToAmazonRedshiftLinkedServiceOutput() AmazonRedshiftLinkedServiceOutput {
	return i.ToAmazonRedshiftLinkedServiceOutputWithContext(context.Background())
}

func (i AmazonRedshiftLinkedServiceArgs) ToAmazonRedshiftLinkedServiceOutputWithContext(ctx context.Context) AmazonRedshiftLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmazonRedshiftLinkedServiceOutput)
}

// Linked service for Amazon Redshift.
type AmazonRedshiftLinkedServiceOutput struct{ *pulumi.OutputState }

func (AmazonRedshiftLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonRedshiftLinkedService)(nil)).Elem()
}

func (o AmazonRedshiftLinkedServiceOutput) ToAmazonRedshiftLinkedServiceOutput() AmazonRedshiftLinkedServiceOutput {
	return o
}

func (o AmazonRedshiftLinkedServiceOutput) ToAmazonRedshiftLinkedServiceOutputWithContext(ctx context.Context) AmazonRedshiftLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AmazonRedshiftLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AmazonRedshiftLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// The database name of the Amazon Redshift source. Type: string (or Expression with resultType string).
func (o AmazonRedshiftLinkedServiceOutput) Database() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedService) interface{} { return v.Database }).(pulumi.AnyOutput)
}

// Linked service description.
func (o AmazonRedshiftLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AmazonRedshiftLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AmazonRedshiftLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The password of the Amazon Redshift source.
func (o AmazonRedshiftLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port number that the Amazon Redshift server uses to listen for client connections. The default value is 5439. Type: integer (or Expression with resultType integer).
func (o AmazonRedshiftLinkedServiceOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedService) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The name of the Amazon Redshift server. Type: string (or Expression with resultType string).
func (o AmazonRedshiftLinkedServiceOutput) Server() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedService) interface{} { return v.Server }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AmazonRedshift'.
func (o AmazonRedshiftLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// The username of the Amazon Redshift source. Type: string (or Expression with resultType string).
func (o AmazonRedshiftLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Linked service for Amazon Redshift.
type AmazonRedshiftLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// The database name of the Amazon Redshift source. Type: string (or Expression with resultType string).
	Database interface{} `pulumi:"database"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The password of the Amazon Redshift source.
	Password interface{} `pulumi:"password"`
	// The TCP port number that the Amazon Redshift server uses to listen for client connections. The default value is 5439. Type: integer (or Expression with resultType integer).
	Port interface{} `pulumi:"port"`
	// The name of the Amazon Redshift server. Type: string (or Expression with resultType string).
	Server interface{} `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'AmazonRedshift'.
	Type string `pulumi:"type"`
	// The username of the Amazon Redshift source. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// AmazonRedshiftLinkedServiceResponseInput is an input type that accepts AmazonRedshiftLinkedServiceResponseArgs and AmazonRedshiftLinkedServiceResponseOutput values.
// You can construct a concrete instance of `AmazonRedshiftLinkedServiceResponseInput` via:
//
//          AmazonRedshiftLinkedServiceResponseArgs{...}
type AmazonRedshiftLinkedServiceResponseInput interface {
	pulumi.Input

	ToAmazonRedshiftLinkedServiceResponseOutput() AmazonRedshiftLinkedServiceResponseOutput
	ToAmazonRedshiftLinkedServiceResponseOutputWithContext(context.Context) AmazonRedshiftLinkedServiceResponseOutput
}

// Linked service for Amazon Redshift.
type AmazonRedshiftLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// The database name of the Amazon Redshift source. Type: string (or Expression with resultType string).
	Database pulumi.Input `pulumi:"database"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The password of the Amazon Redshift source.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port number that the Amazon Redshift server uses to listen for client connections. The default value is 5439. Type: integer (or Expression with resultType integer).
	Port pulumi.Input `pulumi:"port"`
	// The name of the Amazon Redshift server. Type: string (or Expression with resultType string).
	Server pulumi.Input `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'AmazonRedshift'.
	Type pulumi.StringInput `pulumi:"type"`
	// The username of the Amazon Redshift source. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (AmazonRedshiftLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonRedshiftLinkedServiceResponse)(nil)).Elem()
}

func (i AmazonRedshiftLinkedServiceResponseArgs) ToAmazonRedshiftLinkedServiceResponseOutput() AmazonRedshiftLinkedServiceResponseOutput {
	return i.ToAmazonRedshiftLinkedServiceResponseOutputWithContext(context.Background())
}

func (i AmazonRedshiftLinkedServiceResponseArgs) ToAmazonRedshiftLinkedServiceResponseOutputWithContext(ctx context.Context) AmazonRedshiftLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmazonRedshiftLinkedServiceResponseOutput)
}

// Linked service for Amazon Redshift.
type AmazonRedshiftLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (AmazonRedshiftLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonRedshiftLinkedServiceResponse)(nil)).Elem()
}

func (o AmazonRedshiftLinkedServiceResponseOutput) ToAmazonRedshiftLinkedServiceResponseOutput() AmazonRedshiftLinkedServiceResponseOutput {
	return o
}

func (o AmazonRedshiftLinkedServiceResponseOutput) ToAmazonRedshiftLinkedServiceResponseOutputWithContext(ctx context.Context) AmazonRedshiftLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AmazonRedshiftLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AmazonRedshiftLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// The database name of the Amazon Redshift source. Type: string (or Expression with resultType string).
func (o AmazonRedshiftLinkedServiceResponseOutput) Database() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedServiceResponse) interface{} { return v.Database }).(pulumi.AnyOutput)
}

// Linked service description.
func (o AmazonRedshiftLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AmazonRedshiftLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AmazonRedshiftLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedServiceResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// The password of the Amazon Redshift source.
func (o AmazonRedshiftLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port number that the Amazon Redshift server uses to listen for client connections. The default value is 5439. Type: integer (or Expression with resultType integer).
func (o AmazonRedshiftLinkedServiceResponseOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedServiceResponse) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The name of the Amazon Redshift server. Type: string (or Expression with resultType string).
func (o AmazonRedshiftLinkedServiceResponseOutput) Server() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedServiceResponse) interface{} { return v.Server }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AmazonRedshift'.
func (o AmazonRedshiftLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The username of the Amazon Redshift source. Type: string (or Expression with resultType string).
func (o AmazonRedshiftLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// A copy activity source for Amazon Redshift Source.
type AmazonRedshiftSource struct {
	// Database query. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.
	RedshiftUnloadSettings *RedshiftUnloadSettings `pulumi:"redshiftUnloadSettings"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AmazonRedshiftSource'.
	Type string `pulumi:"type"`
}

// AmazonRedshiftSourceInput is an input type that accepts AmazonRedshiftSourceArgs and AmazonRedshiftSourceOutput values.
// You can construct a concrete instance of `AmazonRedshiftSourceInput` via:
//
//          AmazonRedshiftSourceArgs{...}
type AmazonRedshiftSourceInput interface {
	pulumi.Input

	ToAmazonRedshiftSourceOutput() AmazonRedshiftSourceOutput
	ToAmazonRedshiftSourceOutputWithContext(context.Context) AmazonRedshiftSourceOutput
}

// A copy activity source for Amazon Redshift Source.
type AmazonRedshiftSourceArgs struct {
	// Database query. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.
	RedshiftUnloadSettings RedshiftUnloadSettingsPtrInput `pulumi:"redshiftUnloadSettings"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AmazonRedshiftSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AmazonRedshiftSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonRedshiftSource)(nil)).Elem()
}

func (i AmazonRedshiftSourceArgs) ToAmazonRedshiftSourceOutput() AmazonRedshiftSourceOutput {
	return i.ToAmazonRedshiftSourceOutputWithContext(context.Background())
}

func (i AmazonRedshiftSourceArgs) ToAmazonRedshiftSourceOutputWithContext(ctx context.Context) AmazonRedshiftSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmazonRedshiftSourceOutput)
}

// A copy activity source for Amazon Redshift Source.
type AmazonRedshiftSourceOutput struct{ *pulumi.OutputState }

func (AmazonRedshiftSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonRedshiftSource)(nil)).Elem()
}

func (o AmazonRedshiftSourceOutput) ToAmazonRedshiftSourceOutput() AmazonRedshiftSourceOutput {
	return o
}

func (o AmazonRedshiftSourceOutput) ToAmazonRedshiftSourceOutputWithContext(ctx context.Context) AmazonRedshiftSourceOutput {
	return o
}

// Database query. Type: string (or Expression with resultType string).
func (o AmazonRedshiftSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.
func (o AmazonRedshiftSourceOutput) RedshiftUnloadSettings() RedshiftUnloadSettingsPtrOutput {
	return o.ApplyT(func(v AmazonRedshiftSource) *RedshiftUnloadSettings { return v.RedshiftUnloadSettings }).(RedshiftUnloadSettingsPtrOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o AmazonRedshiftSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AmazonRedshiftSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'AmazonRedshiftSource'.
func (o AmazonRedshiftSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AmazonRedshiftSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity source for Amazon Redshift Source.
type AmazonRedshiftSourceResponse struct {
	// Database query. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.
	RedshiftUnloadSettings *RedshiftUnloadSettingsResponse `pulumi:"redshiftUnloadSettings"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AmazonRedshiftSource'.
	Type string `pulumi:"type"`
}

// AmazonRedshiftSourceResponseInput is an input type that accepts AmazonRedshiftSourceResponseArgs and AmazonRedshiftSourceResponseOutput values.
// You can construct a concrete instance of `AmazonRedshiftSourceResponseInput` via:
//
//          AmazonRedshiftSourceResponseArgs{...}
type AmazonRedshiftSourceResponseInput interface {
	pulumi.Input

	ToAmazonRedshiftSourceResponseOutput() AmazonRedshiftSourceResponseOutput
	ToAmazonRedshiftSourceResponseOutputWithContext(context.Context) AmazonRedshiftSourceResponseOutput
}

// A copy activity source for Amazon Redshift Source.
type AmazonRedshiftSourceResponseArgs struct {
	// Database query. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.
	RedshiftUnloadSettings RedshiftUnloadSettingsResponsePtrInput `pulumi:"redshiftUnloadSettings"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AmazonRedshiftSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AmazonRedshiftSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonRedshiftSourceResponse)(nil)).Elem()
}

func (i AmazonRedshiftSourceResponseArgs) ToAmazonRedshiftSourceResponseOutput() AmazonRedshiftSourceResponseOutput {
	return i.ToAmazonRedshiftSourceResponseOutputWithContext(context.Background())
}

func (i AmazonRedshiftSourceResponseArgs) ToAmazonRedshiftSourceResponseOutputWithContext(ctx context.Context) AmazonRedshiftSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmazonRedshiftSourceResponseOutput)
}

// A copy activity source for Amazon Redshift Source.
type AmazonRedshiftSourceResponseOutput struct{ *pulumi.OutputState }

func (AmazonRedshiftSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonRedshiftSourceResponse)(nil)).Elem()
}

func (o AmazonRedshiftSourceResponseOutput) ToAmazonRedshiftSourceResponseOutput() AmazonRedshiftSourceResponseOutput {
	return o
}

func (o AmazonRedshiftSourceResponseOutput) ToAmazonRedshiftSourceResponseOutputWithContext(ctx context.Context) AmazonRedshiftSourceResponseOutput {
	return o
}

// Database query. Type: string (or Expression with resultType string).
func (o AmazonRedshiftSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.
func (o AmazonRedshiftSourceResponseOutput) RedshiftUnloadSettings() RedshiftUnloadSettingsResponsePtrOutput {
	return o.ApplyT(func(v AmazonRedshiftSourceResponse) *RedshiftUnloadSettingsResponse { return v.RedshiftUnloadSettings }).(RedshiftUnloadSettingsResponsePtrOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o AmazonRedshiftSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AmazonRedshiftSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonRedshiftSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'AmazonRedshiftSource'.
func (o AmazonRedshiftSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AmazonRedshiftSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A single Amazon Simple Storage Service (S3) object or a set of S3 objects.
type AmazonS3Dataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The name of the Amazon S3 bucket. Type: string (or Expression with resultType string).
	BucketName interface{} `pulumi:"bucketName"`
	// The data compression method used for the Amazon S3 object.
	Compression interface{} `pulumi:"compression"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// The format of files.
	Format interface{} `pulumi:"format"`
	// The key of the Amazon S3 object. Type: string (or Expression with resultType string).
	Key interface{} `pulumi:"key"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The prefix filter for the S3 object name. Type: string (or Expression with resultType string).
	Prefix interface{} `pulumi:"prefix"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AmazonS3Object'.
	Type string `pulumi:"type"`
	// The version for the S3 object. Type: string (or Expression with resultType string).
	Version interface{} `pulumi:"version"`
}

// AmazonS3DatasetInput is an input type that accepts AmazonS3DatasetArgs and AmazonS3DatasetOutput values.
// You can construct a concrete instance of `AmazonS3DatasetInput` via:
//
//          AmazonS3DatasetArgs{...}
type AmazonS3DatasetInput interface {
	pulumi.Input

	ToAmazonS3DatasetOutput() AmazonS3DatasetOutput
	ToAmazonS3DatasetOutputWithContext(context.Context) AmazonS3DatasetOutput
}

// A single Amazon Simple Storage Service (S3) object or a set of S3 objects.
type AmazonS3DatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The name of the Amazon S3 bucket. Type: string (or Expression with resultType string).
	BucketName pulumi.Input `pulumi:"bucketName"`
	// The data compression method used for the Amazon S3 object.
	Compression pulumi.Input `pulumi:"compression"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The format of files.
	Format pulumi.Input `pulumi:"format"`
	// The key of the Amazon S3 object. Type: string (or Expression with resultType string).
	Key pulumi.Input `pulumi:"key"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The prefix filter for the S3 object name. Type: string (or Expression with resultType string).
	Prefix pulumi.Input `pulumi:"prefix"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AmazonS3Object'.
	Type pulumi.StringInput `pulumi:"type"`
	// The version for the S3 object. Type: string (or Expression with resultType string).
	Version pulumi.Input `pulumi:"version"`
}

func (AmazonS3DatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonS3Dataset)(nil)).Elem()
}

func (i AmazonS3DatasetArgs) ToAmazonS3DatasetOutput() AmazonS3DatasetOutput {
	return i.ToAmazonS3DatasetOutputWithContext(context.Background())
}

func (i AmazonS3DatasetArgs) ToAmazonS3DatasetOutputWithContext(ctx context.Context) AmazonS3DatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmazonS3DatasetOutput)
}

// A single Amazon Simple Storage Service (S3) object or a set of S3 objects.
type AmazonS3DatasetOutput struct{ *pulumi.OutputState }

func (AmazonS3DatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonS3Dataset)(nil)).Elem()
}

func (o AmazonS3DatasetOutput) ToAmazonS3DatasetOutput() AmazonS3DatasetOutput {
	return o
}

func (o AmazonS3DatasetOutput) ToAmazonS3DatasetOutputWithContext(ctx context.Context) AmazonS3DatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AmazonS3DatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AmazonS3Dataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The name of the Amazon S3 bucket. Type: string (or Expression with resultType string).
func (o AmazonS3DatasetOutput) BucketName() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3Dataset) interface{} { return v.BucketName }).(pulumi.AnyOutput)
}

// The data compression method used for the Amazon S3 object.
func (o AmazonS3DatasetOutput) Compression() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3Dataset) interface{} { return v.Compression }).(pulumi.AnyOutput)
}

// Dataset description.
func (o AmazonS3DatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmazonS3Dataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The format of files.
func (o AmazonS3DatasetOutput) Format() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3Dataset) interface{} { return v.Format }).(pulumi.AnyOutput)
}

// The key of the Amazon S3 object. Type: string (or Expression with resultType string).
func (o AmazonS3DatasetOutput) Key() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3Dataset) interface{} { return v.Key }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o AmazonS3DatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v AmazonS3Dataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o AmazonS3DatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AmazonS3Dataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The prefix filter for the S3 object name. Type: string (or Expression with resultType string).
func (o AmazonS3DatasetOutput) Prefix() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3Dataset) interface{} { return v.Prefix }).(pulumi.AnyOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AmazonS3DatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3Dataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AmazonS3Object'.
func (o AmazonS3DatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AmazonS3Dataset) string { return v.Type }).(pulumi.StringOutput)
}

// The version for the S3 object. Type: string (or Expression with resultType string).
func (o AmazonS3DatasetOutput) Version() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3Dataset) interface{} { return v.Version }).(pulumi.AnyOutput)
}

// A single Amazon Simple Storage Service (S3) object or a set of S3 objects.
type AmazonS3DatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The name of the Amazon S3 bucket. Type: string (or Expression with resultType string).
	BucketName interface{} `pulumi:"bucketName"`
	// The data compression method used for the Amazon S3 object.
	Compression interface{} `pulumi:"compression"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// The format of files.
	Format interface{} `pulumi:"format"`
	// The key of the Amazon S3 object. Type: string (or Expression with resultType string).
	Key interface{} `pulumi:"key"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The prefix filter for the S3 object name. Type: string (or Expression with resultType string).
	Prefix interface{} `pulumi:"prefix"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AmazonS3Object'.
	Type string `pulumi:"type"`
	// The version for the S3 object. Type: string (or Expression with resultType string).
	Version interface{} `pulumi:"version"`
}

// AmazonS3DatasetResponseInput is an input type that accepts AmazonS3DatasetResponseArgs and AmazonS3DatasetResponseOutput values.
// You can construct a concrete instance of `AmazonS3DatasetResponseInput` via:
//
//          AmazonS3DatasetResponseArgs{...}
type AmazonS3DatasetResponseInput interface {
	pulumi.Input

	ToAmazonS3DatasetResponseOutput() AmazonS3DatasetResponseOutput
	ToAmazonS3DatasetResponseOutputWithContext(context.Context) AmazonS3DatasetResponseOutput
}

// A single Amazon Simple Storage Service (S3) object or a set of S3 objects.
type AmazonS3DatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The name of the Amazon S3 bucket. Type: string (or Expression with resultType string).
	BucketName pulumi.Input `pulumi:"bucketName"`
	// The data compression method used for the Amazon S3 object.
	Compression pulumi.Input `pulumi:"compression"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The format of files.
	Format pulumi.Input `pulumi:"format"`
	// The key of the Amazon S3 object. Type: string (or Expression with resultType string).
	Key pulumi.Input `pulumi:"key"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The prefix filter for the S3 object name. Type: string (or Expression with resultType string).
	Prefix pulumi.Input `pulumi:"prefix"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AmazonS3Object'.
	Type pulumi.StringInput `pulumi:"type"`
	// The version for the S3 object. Type: string (or Expression with resultType string).
	Version pulumi.Input `pulumi:"version"`
}

func (AmazonS3DatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonS3DatasetResponse)(nil)).Elem()
}

func (i AmazonS3DatasetResponseArgs) ToAmazonS3DatasetResponseOutput() AmazonS3DatasetResponseOutput {
	return i.ToAmazonS3DatasetResponseOutputWithContext(context.Background())
}

func (i AmazonS3DatasetResponseArgs) ToAmazonS3DatasetResponseOutputWithContext(ctx context.Context) AmazonS3DatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmazonS3DatasetResponseOutput)
}

// A single Amazon Simple Storage Service (S3) object or a set of S3 objects.
type AmazonS3DatasetResponseOutput struct{ *pulumi.OutputState }

func (AmazonS3DatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonS3DatasetResponse)(nil)).Elem()
}

func (o AmazonS3DatasetResponseOutput) ToAmazonS3DatasetResponseOutput() AmazonS3DatasetResponseOutput {
	return o
}

func (o AmazonS3DatasetResponseOutput) ToAmazonS3DatasetResponseOutputWithContext(ctx context.Context) AmazonS3DatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AmazonS3DatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AmazonS3DatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The name of the Amazon S3 bucket. Type: string (or Expression with resultType string).
func (o AmazonS3DatasetResponseOutput) BucketName() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3DatasetResponse) interface{} { return v.BucketName }).(pulumi.AnyOutput)
}

// The data compression method used for the Amazon S3 object.
func (o AmazonS3DatasetResponseOutput) Compression() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3DatasetResponse) interface{} { return v.Compression }).(pulumi.AnyOutput)
}

// Dataset description.
func (o AmazonS3DatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmazonS3DatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The format of files.
func (o AmazonS3DatasetResponseOutput) Format() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3DatasetResponse) interface{} { return v.Format }).(pulumi.AnyOutput)
}

// The key of the Amazon S3 object. Type: string (or Expression with resultType string).
func (o AmazonS3DatasetResponseOutput) Key() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3DatasetResponse) interface{} { return v.Key }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o AmazonS3DatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v AmazonS3DatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o AmazonS3DatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AmazonS3DatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The prefix filter for the S3 object name. Type: string (or Expression with resultType string).
func (o AmazonS3DatasetResponseOutput) Prefix() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3DatasetResponse) interface{} { return v.Prefix }).(pulumi.AnyOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AmazonS3DatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3DatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AmazonS3Object'.
func (o AmazonS3DatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AmazonS3DatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The version for the S3 object. Type: string (or Expression with resultType string).
func (o AmazonS3DatasetResponseOutput) Version() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3DatasetResponse) interface{} { return v.Version }).(pulumi.AnyOutput)
}

// Linked service for Amazon S3.
type AmazonS3LinkedService struct {
	// The access key identifier of the Amazon S3 Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
	AccessKeyId interface{} `pulumi:"accessKeyId"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The secret access key of the Amazon S3 Identity and Access Management (IAM) user.
	SecretAccessKey interface{} `pulumi:"secretAccessKey"`
	// Type of linked service.
	// Expected value is 'AmazonS3'.
	Type string `pulumi:"type"`
}

// AmazonS3LinkedServiceInput is an input type that accepts AmazonS3LinkedServiceArgs and AmazonS3LinkedServiceOutput values.
// You can construct a concrete instance of `AmazonS3LinkedServiceInput` via:
//
//          AmazonS3LinkedServiceArgs{...}
type AmazonS3LinkedServiceInput interface {
	pulumi.Input

	ToAmazonS3LinkedServiceOutput() AmazonS3LinkedServiceOutput
	ToAmazonS3LinkedServiceOutputWithContext(context.Context) AmazonS3LinkedServiceOutput
}

// Linked service for Amazon S3.
type AmazonS3LinkedServiceArgs struct {
	// The access key identifier of the Amazon S3 Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
	AccessKeyId pulumi.Input `pulumi:"accessKeyId"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The secret access key of the Amazon S3 Identity and Access Management (IAM) user.
	SecretAccessKey pulumi.Input `pulumi:"secretAccessKey"`
	// Type of linked service.
	// Expected value is 'AmazonS3'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AmazonS3LinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonS3LinkedService)(nil)).Elem()
}

func (i AmazonS3LinkedServiceArgs) ToAmazonS3LinkedServiceOutput() AmazonS3LinkedServiceOutput {
	return i.ToAmazonS3LinkedServiceOutputWithContext(context.Background())
}

func (i AmazonS3LinkedServiceArgs) ToAmazonS3LinkedServiceOutputWithContext(ctx context.Context) AmazonS3LinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmazonS3LinkedServiceOutput)
}

// Linked service for Amazon S3.
type AmazonS3LinkedServiceOutput struct{ *pulumi.OutputState }

func (AmazonS3LinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonS3LinkedService)(nil)).Elem()
}

func (o AmazonS3LinkedServiceOutput) ToAmazonS3LinkedServiceOutput() AmazonS3LinkedServiceOutput {
	return o
}

func (o AmazonS3LinkedServiceOutput) ToAmazonS3LinkedServiceOutputWithContext(ctx context.Context) AmazonS3LinkedServiceOutput {
	return o
}

// The access key identifier of the Amazon S3 Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
func (o AmazonS3LinkedServiceOutput) AccessKeyId() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3LinkedService) interface{} { return v.AccessKeyId }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o AmazonS3LinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AmazonS3LinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AmazonS3LinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v AmazonS3LinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o AmazonS3LinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmazonS3LinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AmazonS3LinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3LinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AmazonS3LinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AmazonS3LinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The secret access key of the Amazon S3 Identity and Access Management (IAM) user.
func (o AmazonS3LinkedServiceOutput) SecretAccessKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3LinkedService) interface{} { return v.SecretAccessKey }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AmazonS3'.
func (o AmazonS3LinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AmazonS3LinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Linked service for Amazon S3.
type AmazonS3LinkedServiceResponse struct {
	// The access key identifier of the Amazon S3 Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
	AccessKeyId interface{} `pulumi:"accessKeyId"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The secret access key of the Amazon S3 Identity and Access Management (IAM) user.
	SecretAccessKey interface{} `pulumi:"secretAccessKey"`
	// Type of linked service.
	// Expected value is 'AmazonS3'.
	Type string `pulumi:"type"`
}

// AmazonS3LinkedServiceResponseInput is an input type that accepts AmazonS3LinkedServiceResponseArgs and AmazonS3LinkedServiceResponseOutput values.
// You can construct a concrete instance of `AmazonS3LinkedServiceResponseInput` via:
//
//          AmazonS3LinkedServiceResponseArgs{...}
type AmazonS3LinkedServiceResponseInput interface {
	pulumi.Input

	ToAmazonS3LinkedServiceResponseOutput() AmazonS3LinkedServiceResponseOutput
	ToAmazonS3LinkedServiceResponseOutputWithContext(context.Context) AmazonS3LinkedServiceResponseOutput
}

// Linked service for Amazon S3.
type AmazonS3LinkedServiceResponseArgs struct {
	// The access key identifier of the Amazon S3 Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
	AccessKeyId pulumi.Input `pulumi:"accessKeyId"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The secret access key of the Amazon S3 Identity and Access Management (IAM) user.
	SecretAccessKey pulumi.Input `pulumi:"secretAccessKey"`
	// Type of linked service.
	// Expected value is 'AmazonS3'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AmazonS3LinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonS3LinkedServiceResponse)(nil)).Elem()
}

func (i AmazonS3LinkedServiceResponseArgs) ToAmazonS3LinkedServiceResponseOutput() AmazonS3LinkedServiceResponseOutput {
	return i.ToAmazonS3LinkedServiceResponseOutputWithContext(context.Background())
}

func (i AmazonS3LinkedServiceResponseArgs) ToAmazonS3LinkedServiceResponseOutputWithContext(ctx context.Context) AmazonS3LinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmazonS3LinkedServiceResponseOutput)
}

// Linked service for Amazon S3.
type AmazonS3LinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (AmazonS3LinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmazonS3LinkedServiceResponse)(nil)).Elem()
}

func (o AmazonS3LinkedServiceResponseOutput) ToAmazonS3LinkedServiceResponseOutput() AmazonS3LinkedServiceResponseOutput {
	return o
}

func (o AmazonS3LinkedServiceResponseOutput) ToAmazonS3LinkedServiceResponseOutputWithContext(ctx context.Context) AmazonS3LinkedServiceResponseOutput {
	return o
}

// The access key identifier of the Amazon S3 Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
func (o AmazonS3LinkedServiceResponseOutput) AccessKeyId() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3LinkedServiceResponse) interface{} { return v.AccessKeyId }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o AmazonS3LinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AmazonS3LinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AmazonS3LinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v AmazonS3LinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o AmazonS3LinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmazonS3LinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AmazonS3LinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3LinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AmazonS3LinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AmazonS3LinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The secret access key of the Amazon S3 Identity and Access Management (IAM) user.
func (o AmazonS3LinkedServiceResponseOutput) SecretAccessKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AmazonS3LinkedServiceResponse) interface{} { return v.SecretAccessKey }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AmazonS3'.
func (o AmazonS3LinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AmazonS3LinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The data stored in Avro format.
type AvroFormat struct {
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer interface{} `pulumi:"deserializer"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer interface{} `pulumi:"serializer"`
	// Type of dataset storage format.
	// Expected value is 'AvroFormat'.
	Type string `pulumi:"type"`
}

// AvroFormatInput is an input type that accepts AvroFormatArgs and AvroFormatOutput values.
// You can construct a concrete instance of `AvroFormatInput` via:
//
//          AvroFormatArgs{...}
type AvroFormatInput interface {
	pulumi.Input

	ToAvroFormatOutput() AvroFormatOutput
	ToAvroFormatOutputWithContext(context.Context) AvroFormatOutput
}

// The data stored in Avro format.
type AvroFormatArgs struct {
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer pulumi.Input `pulumi:"deserializer"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer pulumi.Input `pulumi:"serializer"`
	// Type of dataset storage format.
	// Expected value is 'AvroFormat'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AvroFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvroFormat)(nil)).Elem()
}

func (i AvroFormatArgs) ToAvroFormatOutput() AvroFormatOutput {
	return i.ToAvroFormatOutputWithContext(context.Background())
}

func (i AvroFormatArgs) ToAvroFormatOutputWithContext(ctx context.Context) AvroFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvroFormatOutput)
}

// The data stored in Avro format.
type AvroFormatOutput struct{ *pulumi.OutputState }

func (AvroFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvroFormat)(nil)).Elem()
}

func (o AvroFormatOutput) ToAvroFormatOutput() AvroFormatOutput {
	return o
}

func (o AvroFormatOutput) ToAvroFormatOutputWithContext(ctx context.Context) AvroFormatOutput {
	return o
}

// Deserializer. Type: string (or Expression with resultType string).
func (o AvroFormatOutput) Deserializer() pulumi.AnyOutput {
	return o.ApplyT(func(v AvroFormat) interface{} { return v.Deserializer }).(pulumi.AnyOutput)
}

// Serializer. Type: string (or Expression with resultType string).
func (o AvroFormatOutput) Serializer() pulumi.AnyOutput {
	return o.ApplyT(func(v AvroFormat) interface{} { return v.Serializer }).(pulumi.AnyOutput)
}

// Type of dataset storage format.
// Expected value is 'AvroFormat'.
func (o AvroFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AvroFormat) string { return v.Type }).(pulumi.StringOutput)
}

// The data stored in Avro format.
type AvroFormatResponse struct {
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer interface{} `pulumi:"deserializer"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer interface{} `pulumi:"serializer"`
	// Type of dataset storage format.
	// Expected value is 'AvroFormat'.
	Type string `pulumi:"type"`
}

// AvroFormatResponseInput is an input type that accepts AvroFormatResponseArgs and AvroFormatResponseOutput values.
// You can construct a concrete instance of `AvroFormatResponseInput` via:
//
//          AvroFormatResponseArgs{...}
type AvroFormatResponseInput interface {
	pulumi.Input

	ToAvroFormatResponseOutput() AvroFormatResponseOutput
	ToAvroFormatResponseOutputWithContext(context.Context) AvroFormatResponseOutput
}

// The data stored in Avro format.
type AvroFormatResponseArgs struct {
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer pulumi.Input `pulumi:"deserializer"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer pulumi.Input `pulumi:"serializer"`
	// Type of dataset storage format.
	// Expected value is 'AvroFormat'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AvroFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvroFormatResponse)(nil)).Elem()
}

func (i AvroFormatResponseArgs) ToAvroFormatResponseOutput() AvroFormatResponseOutput {
	return i.ToAvroFormatResponseOutputWithContext(context.Background())
}

func (i AvroFormatResponseArgs) ToAvroFormatResponseOutputWithContext(ctx context.Context) AvroFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvroFormatResponseOutput)
}

// The data stored in Avro format.
type AvroFormatResponseOutput struct{ *pulumi.OutputState }

func (AvroFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvroFormatResponse)(nil)).Elem()
}

func (o AvroFormatResponseOutput) ToAvroFormatResponseOutput() AvroFormatResponseOutput {
	return o
}

func (o AvroFormatResponseOutput) ToAvroFormatResponseOutputWithContext(ctx context.Context) AvroFormatResponseOutput {
	return o
}

// Deserializer. Type: string (or Expression with resultType string).
func (o AvroFormatResponseOutput) Deserializer() pulumi.AnyOutput {
	return o.ApplyT(func(v AvroFormatResponse) interface{} { return v.Deserializer }).(pulumi.AnyOutput)
}

// Serializer. Type: string (or Expression with resultType string).
func (o AvroFormatResponseOutput) Serializer() pulumi.AnyOutput {
	return o.ApplyT(func(v AvroFormatResponse) interface{} { return v.Serializer }).(pulumi.AnyOutput)
}

// Type of dataset storage format.
// Expected value is 'AvroFormat'.
func (o AvroFormatResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AvroFormatResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Azure Batch linked service.
type AzureBatchLinkedService struct {
	// The Azure Batch account access key.
	AccessKey interface{} `pulumi:"accessKey"`
	// The Azure Batch account name. Type: string (or Expression with resultType string).
	AccountName interface{} `pulumi:"accountName"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The Azure Batch URI. Type: string (or Expression with resultType string).
	BatchUri interface{} `pulumi:"batchUri"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The Azure Storage linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The Azure Batch pool name. Type: string (or Expression with resultType string).
	PoolName interface{} `pulumi:"poolName"`
	// Type of linked service.
	// Expected value is 'AzureBatch'.
	Type string `pulumi:"type"`
}

// AzureBatchLinkedServiceInput is an input type that accepts AzureBatchLinkedServiceArgs and AzureBatchLinkedServiceOutput values.
// You can construct a concrete instance of `AzureBatchLinkedServiceInput` via:
//
//          AzureBatchLinkedServiceArgs{...}
type AzureBatchLinkedServiceInput interface {
	pulumi.Input

	ToAzureBatchLinkedServiceOutput() AzureBatchLinkedServiceOutput
	ToAzureBatchLinkedServiceOutputWithContext(context.Context) AzureBatchLinkedServiceOutput
}

// Azure Batch linked service.
type AzureBatchLinkedServiceArgs struct {
	// The Azure Batch account access key.
	AccessKey pulumi.Input `pulumi:"accessKey"`
	// The Azure Batch account name. Type: string (or Expression with resultType string).
	AccountName pulumi.Input `pulumi:"accountName"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The Azure Batch URI. Type: string (or Expression with resultType string).
	BatchUri pulumi.Input `pulumi:"batchUri"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The Azure Storage linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The Azure Batch pool name. Type: string (or Expression with resultType string).
	PoolName pulumi.Input `pulumi:"poolName"`
	// Type of linked service.
	// Expected value is 'AzureBatch'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureBatchLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBatchLinkedService)(nil)).Elem()
}

func (i AzureBatchLinkedServiceArgs) ToAzureBatchLinkedServiceOutput() AzureBatchLinkedServiceOutput {
	return i.ToAzureBatchLinkedServiceOutputWithContext(context.Background())
}

func (i AzureBatchLinkedServiceArgs) ToAzureBatchLinkedServiceOutputWithContext(ctx context.Context) AzureBatchLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBatchLinkedServiceOutput)
}

// Azure Batch linked service.
type AzureBatchLinkedServiceOutput struct{ *pulumi.OutputState }

func (AzureBatchLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBatchLinkedService)(nil)).Elem()
}

func (o AzureBatchLinkedServiceOutput) ToAzureBatchLinkedServiceOutput() AzureBatchLinkedServiceOutput {
	return o
}

func (o AzureBatchLinkedServiceOutput) ToAzureBatchLinkedServiceOutputWithContext(ctx context.Context) AzureBatchLinkedServiceOutput {
	return o
}

// The Azure Batch account access key.
func (o AzureBatchLinkedServiceOutput) AccessKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBatchLinkedService) interface{} { return v.AccessKey }).(pulumi.AnyOutput)
}

// The Azure Batch account name. Type: string (or Expression with resultType string).
func (o AzureBatchLinkedServiceOutput) AccountName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBatchLinkedService) interface{} { return v.AccountName }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o AzureBatchLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureBatchLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The Azure Batch URI. Type: string (or Expression with resultType string).
func (o AzureBatchLinkedServiceOutput) BatchUri() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBatchLinkedService) interface{} { return v.BatchUri }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o AzureBatchLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v AzureBatchLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o AzureBatchLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBatchLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureBatchLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBatchLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The Azure Storage linked service reference.
func (o AzureBatchLinkedServiceOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v AzureBatchLinkedService) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for linked service.
func (o AzureBatchLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureBatchLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The Azure Batch pool name. Type: string (or Expression with resultType string).
func (o AzureBatchLinkedServiceOutput) PoolName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBatchLinkedService) interface{} { return v.PoolName }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AzureBatch'.
func (o AzureBatchLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBatchLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Azure Batch linked service.
type AzureBatchLinkedServiceResponse struct {
	// The Azure Batch account access key.
	AccessKey interface{} `pulumi:"accessKey"`
	// The Azure Batch account name. Type: string (or Expression with resultType string).
	AccountName interface{} `pulumi:"accountName"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The Azure Batch URI. Type: string (or Expression with resultType string).
	BatchUri interface{} `pulumi:"batchUri"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The Azure Storage linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The Azure Batch pool name. Type: string (or Expression with resultType string).
	PoolName interface{} `pulumi:"poolName"`
	// Type of linked service.
	// Expected value is 'AzureBatch'.
	Type string `pulumi:"type"`
}

// AzureBatchLinkedServiceResponseInput is an input type that accepts AzureBatchLinkedServiceResponseArgs and AzureBatchLinkedServiceResponseOutput values.
// You can construct a concrete instance of `AzureBatchLinkedServiceResponseInput` via:
//
//          AzureBatchLinkedServiceResponseArgs{...}
type AzureBatchLinkedServiceResponseInput interface {
	pulumi.Input

	ToAzureBatchLinkedServiceResponseOutput() AzureBatchLinkedServiceResponseOutput
	ToAzureBatchLinkedServiceResponseOutputWithContext(context.Context) AzureBatchLinkedServiceResponseOutput
}

// Azure Batch linked service.
type AzureBatchLinkedServiceResponseArgs struct {
	// The Azure Batch account access key.
	AccessKey pulumi.Input `pulumi:"accessKey"`
	// The Azure Batch account name. Type: string (or Expression with resultType string).
	AccountName pulumi.Input `pulumi:"accountName"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The Azure Batch URI. Type: string (or Expression with resultType string).
	BatchUri pulumi.Input `pulumi:"batchUri"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The Azure Storage linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The Azure Batch pool name. Type: string (or Expression with resultType string).
	PoolName pulumi.Input `pulumi:"poolName"`
	// Type of linked service.
	// Expected value is 'AzureBatch'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureBatchLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBatchLinkedServiceResponse)(nil)).Elem()
}

func (i AzureBatchLinkedServiceResponseArgs) ToAzureBatchLinkedServiceResponseOutput() AzureBatchLinkedServiceResponseOutput {
	return i.ToAzureBatchLinkedServiceResponseOutputWithContext(context.Background())
}

func (i AzureBatchLinkedServiceResponseArgs) ToAzureBatchLinkedServiceResponseOutputWithContext(ctx context.Context) AzureBatchLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBatchLinkedServiceResponseOutput)
}

// Azure Batch linked service.
type AzureBatchLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (AzureBatchLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBatchLinkedServiceResponse)(nil)).Elem()
}

func (o AzureBatchLinkedServiceResponseOutput) ToAzureBatchLinkedServiceResponseOutput() AzureBatchLinkedServiceResponseOutput {
	return o
}

func (o AzureBatchLinkedServiceResponseOutput) ToAzureBatchLinkedServiceResponseOutputWithContext(ctx context.Context) AzureBatchLinkedServiceResponseOutput {
	return o
}

// The Azure Batch account access key.
func (o AzureBatchLinkedServiceResponseOutput) AccessKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBatchLinkedServiceResponse) interface{} { return v.AccessKey }).(pulumi.AnyOutput)
}

// The Azure Batch account name. Type: string (or Expression with resultType string).
func (o AzureBatchLinkedServiceResponseOutput) AccountName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBatchLinkedServiceResponse) interface{} { return v.AccountName }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o AzureBatchLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureBatchLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The Azure Batch URI. Type: string (or Expression with resultType string).
func (o AzureBatchLinkedServiceResponseOutput) BatchUri() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBatchLinkedServiceResponse) interface{} { return v.BatchUri }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o AzureBatchLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v AzureBatchLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o AzureBatchLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBatchLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureBatchLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBatchLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The Azure Storage linked service reference.
func (o AzureBatchLinkedServiceResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v AzureBatchLinkedServiceResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for linked service.
func (o AzureBatchLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureBatchLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The Azure Batch pool name. Type: string (or Expression with resultType string).
func (o AzureBatchLinkedServiceResponseOutput) PoolName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBatchLinkedServiceResponse) interface{} { return v.PoolName }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AzureBatch'.
func (o AzureBatchLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBatchLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The Azure Blob storage.
type AzureBlobDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The data compression method used for the blob storage.
	Compression interface{} `pulumi:"compression"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// The name of the Azure Blob. Type: string (or Expression with resultType string).
	FileName interface{} `pulumi:"fileName"`
	// The path of the Azure Blob storage. Type: string (or Expression with resultType string).
	FolderPath interface{} `pulumi:"folderPath"`
	// The format of the Azure Blob storage.
	Format interface{} `pulumi:"format"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The root of blob path. Type: string (or Expression with resultType string).
	TableRootLocation interface{} `pulumi:"tableRootLocation"`
	// Type of dataset.
	// Expected value is 'AzureBlob'.
	Type string `pulumi:"type"`
}

// AzureBlobDatasetInput is an input type that accepts AzureBlobDatasetArgs and AzureBlobDatasetOutput values.
// You can construct a concrete instance of `AzureBlobDatasetInput` via:
//
//          AzureBlobDatasetArgs{...}
type AzureBlobDatasetInput interface {
	pulumi.Input

	ToAzureBlobDatasetOutput() AzureBlobDatasetOutput
	ToAzureBlobDatasetOutputWithContext(context.Context) AzureBlobDatasetOutput
}

// The Azure Blob storage.
type AzureBlobDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The data compression method used for the blob storage.
	Compression pulumi.Input `pulumi:"compression"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the Azure Blob. Type: string (or Expression with resultType string).
	FileName pulumi.Input `pulumi:"fileName"`
	// The path of the Azure Blob storage. Type: string (or Expression with resultType string).
	FolderPath pulumi.Input `pulumi:"folderPath"`
	// The format of the Azure Blob storage.
	Format pulumi.Input `pulumi:"format"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The root of blob path. Type: string (or Expression with resultType string).
	TableRootLocation pulumi.Input `pulumi:"tableRootLocation"`
	// Type of dataset.
	// Expected value is 'AzureBlob'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureBlobDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobDataset)(nil)).Elem()
}

func (i AzureBlobDatasetArgs) ToAzureBlobDatasetOutput() AzureBlobDatasetOutput {
	return i.ToAzureBlobDatasetOutputWithContext(context.Background())
}

func (i AzureBlobDatasetArgs) ToAzureBlobDatasetOutputWithContext(ctx context.Context) AzureBlobDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobDatasetOutput)
}

// The Azure Blob storage.
type AzureBlobDatasetOutput struct{ *pulumi.OutputState }

func (AzureBlobDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobDataset)(nil)).Elem()
}

func (o AzureBlobDatasetOutput) ToAzureBlobDatasetOutput() AzureBlobDatasetOutput {
	return o
}

func (o AzureBlobDatasetOutput) ToAzureBlobDatasetOutputWithContext(ctx context.Context) AzureBlobDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureBlobDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureBlobDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The data compression method used for the blob storage.
func (o AzureBlobDatasetOutput) Compression() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBlobDataset) interface{} { return v.Compression }).(pulumi.AnyOutput)
}

// Dataset description.
func (o AzureBlobDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the Azure Blob. Type: string (or Expression with resultType string).
func (o AzureBlobDatasetOutput) FileName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBlobDataset) interface{} { return v.FileName }).(pulumi.AnyOutput)
}

// The path of the Azure Blob storage. Type: string (or Expression with resultType string).
func (o AzureBlobDatasetOutput) FolderPath() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBlobDataset) interface{} { return v.FolderPath }).(pulumi.AnyOutput)
}

// The format of the Azure Blob storage.
func (o AzureBlobDatasetOutput) Format() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBlobDataset) interface{} { return v.Format }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o AzureBlobDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v AzureBlobDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o AzureBlobDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureBlobDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AzureBlobDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBlobDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The root of blob path. Type: string (or Expression with resultType string).
func (o AzureBlobDatasetOutput) TableRootLocation() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBlobDataset) interface{} { return v.TableRootLocation }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AzureBlob'.
func (o AzureBlobDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The Azure Blob storage.
type AzureBlobDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The data compression method used for the blob storage.
	Compression interface{} `pulumi:"compression"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// The name of the Azure Blob. Type: string (or Expression with resultType string).
	FileName interface{} `pulumi:"fileName"`
	// The path of the Azure Blob storage. Type: string (or Expression with resultType string).
	FolderPath interface{} `pulumi:"folderPath"`
	// The format of the Azure Blob storage.
	Format interface{} `pulumi:"format"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The root of blob path. Type: string (or Expression with resultType string).
	TableRootLocation interface{} `pulumi:"tableRootLocation"`
	// Type of dataset.
	// Expected value is 'AzureBlob'.
	Type string `pulumi:"type"`
}

// AzureBlobDatasetResponseInput is an input type that accepts AzureBlobDatasetResponseArgs and AzureBlobDatasetResponseOutput values.
// You can construct a concrete instance of `AzureBlobDatasetResponseInput` via:
//
//          AzureBlobDatasetResponseArgs{...}
type AzureBlobDatasetResponseInput interface {
	pulumi.Input

	ToAzureBlobDatasetResponseOutput() AzureBlobDatasetResponseOutput
	ToAzureBlobDatasetResponseOutputWithContext(context.Context) AzureBlobDatasetResponseOutput
}

// The Azure Blob storage.
type AzureBlobDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The data compression method used for the blob storage.
	Compression pulumi.Input `pulumi:"compression"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the Azure Blob. Type: string (or Expression with resultType string).
	FileName pulumi.Input `pulumi:"fileName"`
	// The path of the Azure Blob storage. Type: string (or Expression with resultType string).
	FolderPath pulumi.Input `pulumi:"folderPath"`
	// The format of the Azure Blob storage.
	Format pulumi.Input `pulumi:"format"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The root of blob path. Type: string (or Expression with resultType string).
	TableRootLocation pulumi.Input `pulumi:"tableRootLocation"`
	// Type of dataset.
	// Expected value is 'AzureBlob'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureBlobDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobDatasetResponse)(nil)).Elem()
}

func (i AzureBlobDatasetResponseArgs) ToAzureBlobDatasetResponseOutput() AzureBlobDatasetResponseOutput {
	return i.ToAzureBlobDatasetResponseOutputWithContext(context.Background())
}

func (i AzureBlobDatasetResponseArgs) ToAzureBlobDatasetResponseOutputWithContext(ctx context.Context) AzureBlobDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobDatasetResponseOutput)
}

// The Azure Blob storage.
type AzureBlobDatasetResponseOutput struct{ *pulumi.OutputState }

func (AzureBlobDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobDatasetResponse)(nil)).Elem()
}

func (o AzureBlobDatasetResponseOutput) ToAzureBlobDatasetResponseOutput() AzureBlobDatasetResponseOutput {
	return o
}

func (o AzureBlobDatasetResponseOutput) ToAzureBlobDatasetResponseOutputWithContext(ctx context.Context) AzureBlobDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureBlobDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureBlobDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The data compression method used for the blob storage.
func (o AzureBlobDatasetResponseOutput) Compression() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBlobDatasetResponse) interface{} { return v.Compression }).(pulumi.AnyOutput)
}

// Dataset description.
func (o AzureBlobDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the Azure Blob. Type: string (or Expression with resultType string).
func (o AzureBlobDatasetResponseOutput) FileName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBlobDatasetResponse) interface{} { return v.FileName }).(pulumi.AnyOutput)
}

// The path of the Azure Blob storage. Type: string (or Expression with resultType string).
func (o AzureBlobDatasetResponseOutput) FolderPath() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBlobDatasetResponse) interface{} { return v.FolderPath }).(pulumi.AnyOutput)
}

// The format of the Azure Blob storage.
func (o AzureBlobDatasetResponseOutput) Format() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBlobDatasetResponse) interface{} { return v.Format }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o AzureBlobDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v AzureBlobDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o AzureBlobDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureBlobDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AzureBlobDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBlobDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The root of blob path. Type: string (or Expression with resultType string).
func (o AzureBlobDatasetResponseOutput) TableRootLocation() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBlobDatasetResponse) interface{} { return v.TableRootLocation }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AzureBlob'.
func (o AzureBlobDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Azure Data Lake Analytics linked service.
type AzureDataLakeAnalyticsLinkedService struct {
	// The Azure Data Lake Analytics account name. Type: string (or Expression with resultType string).
	AccountName interface{} `pulumi:"accountName"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Azure Data Lake Analytics URI Type: string (or Expression with resultType string).
	DataLakeAnalyticsUri interface{} `pulumi:"dataLakeAnalyticsUri"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Data Lake Analytics account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
	ResourceGroupName interface{} `pulumi:"resourceGroupName"`
	// The ID of the application used to authenticate against the Azure Data Lake Analytics account. Type: string (or Expression with resultType string).
	ServicePrincipalId interface{} `pulumi:"servicePrincipalId"`
	// The Key of the application used to authenticate against the Azure Data Lake Analytics account.
	ServicePrincipalKey interface{} `pulumi:"servicePrincipalKey"`
	// Data Lake Analytics account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
	SubscriptionId interface{} `pulumi:"subscriptionId"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant interface{} `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureDataLakeAnalytics'.
	Type string `pulumi:"type"`
}

// AzureDataLakeAnalyticsLinkedServiceInput is an input type that accepts AzureDataLakeAnalyticsLinkedServiceArgs and AzureDataLakeAnalyticsLinkedServiceOutput values.
// You can construct a concrete instance of `AzureDataLakeAnalyticsLinkedServiceInput` via:
//
//          AzureDataLakeAnalyticsLinkedServiceArgs{...}
type AzureDataLakeAnalyticsLinkedServiceInput interface {
	pulumi.Input

	ToAzureDataLakeAnalyticsLinkedServiceOutput() AzureDataLakeAnalyticsLinkedServiceOutput
	ToAzureDataLakeAnalyticsLinkedServiceOutputWithContext(context.Context) AzureDataLakeAnalyticsLinkedServiceOutput
}

// Azure Data Lake Analytics linked service.
type AzureDataLakeAnalyticsLinkedServiceArgs struct {
	// The Azure Data Lake Analytics account name. Type: string (or Expression with resultType string).
	AccountName pulumi.Input `pulumi:"accountName"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Azure Data Lake Analytics URI Type: string (or Expression with resultType string).
	DataLakeAnalyticsUri pulumi.Input `pulumi:"dataLakeAnalyticsUri"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Data Lake Analytics account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
	ResourceGroupName pulumi.Input `pulumi:"resourceGroupName"`
	// The ID of the application used to authenticate against the Azure Data Lake Analytics account. Type: string (or Expression with resultType string).
	ServicePrincipalId pulumi.Input `pulumi:"servicePrincipalId"`
	// The Key of the application used to authenticate against the Azure Data Lake Analytics account.
	ServicePrincipalKey pulumi.Input `pulumi:"servicePrincipalKey"`
	// Data Lake Analytics account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
	SubscriptionId pulumi.Input `pulumi:"subscriptionId"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant pulumi.Input `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureDataLakeAnalytics'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureDataLakeAnalyticsLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeAnalyticsLinkedService)(nil)).Elem()
}

func (i AzureDataLakeAnalyticsLinkedServiceArgs) ToAzureDataLakeAnalyticsLinkedServiceOutput() AzureDataLakeAnalyticsLinkedServiceOutput {
	return i.ToAzureDataLakeAnalyticsLinkedServiceOutputWithContext(context.Background())
}

func (i AzureDataLakeAnalyticsLinkedServiceArgs) ToAzureDataLakeAnalyticsLinkedServiceOutputWithContext(ctx context.Context) AzureDataLakeAnalyticsLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataLakeAnalyticsLinkedServiceOutput)
}

// Azure Data Lake Analytics linked service.
type AzureDataLakeAnalyticsLinkedServiceOutput struct{ *pulumi.OutputState }

func (AzureDataLakeAnalyticsLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeAnalyticsLinkedService)(nil)).Elem()
}

func (o AzureDataLakeAnalyticsLinkedServiceOutput) ToAzureDataLakeAnalyticsLinkedServiceOutput() AzureDataLakeAnalyticsLinkedServiceOutput {
	return o
}

func (o AzureDataLakeAnalyticsLinkedServiceOutput) ToAzureDataLakeAnalyticsLinkedServiceOutputWithContext(ctx context.Context) AzureDataLakeAnalyticsLinkedServiceOutput {
	return o
}

// The Azure Data Lake Analytics account name. Type: string (or Expression with resultType string).
func (o AzureDataLakeAnalyticsLinkedServiceOutput) AccountName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedService) interface{} { return v.AccountName }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o AzureDataLakeAnalyticsLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzureDataLakeAnalyticsLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Azure Data Lake Analytics URI Type: string (or Expression with resultType string).
func (o AzureDataLakeAnalyticsLinkedServiceOutput) DataLakeAnalyticsUri() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedService) interface{} { return v.DataLakeAnalyticsUri }).(pulumi.AnyOutput)
}

// Linked service description.
func (o AzureDataLakeAnalyticsLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureDataLakeAnalyticsLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureDataLakeAnalyticsLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Data Lake Analytics account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
func (o AzureDataLakeAnalyticsLinkedServiceOutput) ResourceGroupName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedService) interface{} { return v.ResourceGroupName }).(pulumi.AnyOutput)
}

// The ID of the application used to authenticate against the Azure Data Lake Analytics account. Type: string (or Expression with resultType string).
func (o AzureDataLakeAnalyticsLinkedServiceOutput) ServicePrincipalId() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedService) interface{} { return v.ServicePrincipalId }).(pulumi.AnyOutput)
}

// The Key of the application used to authenticate against the Azure Data Lake Analytics account.
func (o AzureDataLakeAnalyticsLinkedServiceOutput) ServicePrincipalKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedService) interface{} { return v.ServicePrincipalKey }).(pulumi.AnyOutput)
}

// Data Lake Analytics account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
func (o AzureDataLakeAnalyticsLinkedServiceOutput) SubscriptionId() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedService) interface{} { return v.SubscriptionId }).(pulumi.AnyOutput)
}

// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
func (o AzureDataLakeAnalyticsLinkedServiceOutput) Tenant() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedService) interface{} { return v.Tenant }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AzureDataLakeAnalytics'.
func (o AzureDataLakeAnalyticsLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Azure Data Lake Analytics linked service.
type AzureDataLakeAnalyticsLinkedServiceResponse struct {
	// The Azure Data Lake Analytics account name. Type: string (or Expression with resultType string).
	AccountName interface{} `pulumi:"accountName"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Azure Data Lake Analytics URI Type: string (or Expression with resultType string).
	DataLakeAnalyticsUri interface{} `pulumi:"dataLakeAnalyticsUri"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Data Lake Analytics account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
	ResourceGroupName interface{} `pulumi:"resourceGroupName"`
	// The ID of the application used to authenticate against the Azure Data Lake Analytics account. Type: string (or Expression with resultType string).
	ServicePrincipalId interface{} `pulumi:"servicePrincipalId"`
	// The Key of the application used to authenticate against the Azure Data Lake Analytics account.
	ServicePrincipalKey interface{} `pulumi:"servicePrincipalKey"`
	// Data Lake Analytics account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
	SubscriptionId interface{} `pulumi:"subscriptionId"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant interface{} `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureDataLakeAnalytics'.
	Type string `pulumi:"type"`
}

// AzureDataLakeAnalyticsLinkedServiceResponseInput is an input type that accepts AzureDataLakeAnalyticsLinkedServiceResponseArgs and AzureDataLakeAnalyticsLinkedServiceResponseOutput values.
// You can construct a concrete instance of `AzureDataLakeAnalyticsLinkedServiceResponseInput` via:
//
//          AzureDataLakeAnalyticsLinkedServiceResponseArgs{...}
type AzureDataLakeAnalyticsLinkedServiceResponseInput interface {
	pulumi.Input

	ToAzureDataLakeAnalyticsLinkedServiceResponseOutput() AzureDataLakeAnalyticsLinkedServiceResponseOutput
	ToAzureDataLakeAnalyticsLinkedServiceResponseOutputWithContext(context.Context) AzureDataLakeAnalyticsLinkedServiceResponseOutput
}

// Azure Data Lake Analytics linked service.
type AzureDataLakeAnalyticsLinkedServiceResponseArgs struct {
	// The Azure Data Lake Analytics account name. Type: string (or Expression with resultType string).
	AccountName pulumi.Input `pulumi:"accountName"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Azure Data Lake Analytics URI Type: string (or Expression with resultType string).
	DataLakeAnalyticsUri pulumi.Input `pulumi:"dataLakeAnalyticsUri"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Data Lake Analytics account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
	ResourceGroupName pulumi.Input `pulumi:"resourceGroupName"`
	// The ID of the application used to authenticate against the Azure Data Lake Analytics account. Type: string (or Expression with resultType string).
	ServicePrincipalId pulumi.Input `pulumi:"servicePrincipalId"`
	// The Key of the application used to authenticate against the Azure Data Lake Analytics account.
	ServicePrincipalKey pulumi.Input `pulumi:"servicePrincipalKey"`
	// Data Lake Analytics account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
	SubscriptionId pulumi.Input `pulumi:"subscriptionId"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant pulumi.Input `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureDataLakeAnalytics'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureDataLakeAnalyticsLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeAnalyticsLinkedServiceResponse)(nil)).Elem()
}

func (i AzureDataLakeAnalyticsLinkedServiceResponseArgs) ToAzureDataLakeAnalyticsLinkedServiceResponseOutput() AzureDataLakeAnalyticsLinkedServiceResponseOutput {
	return i.ToAzureDataLakeAnalyticsLinkedServiceResponseOutputWithContext(context.Background())
}

func (i AzureDataLakeAnalyticsLinkedServiceResponseArgs) ToAzureDataLakeAnalyticsLinkedServiceResponseOutputWithContext(ctx context.Context) AzureDataLakeAnalyticsLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataLakeAnalyticsLinkedServiceResponseOutput)
}

// Azure Data Lake Analytics linked service.
type AzureDataLakeAnalyticsLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (AzureDataLakeAnalyticsLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeAnalyticsLinkedServiceResponse)(nil)).Elem()
}

func (o AzureDataLakeAnalyticsLinkedServiceResponseOutput) ToAzureDataLakeAnalyticsLinkedServiceResponseOutput() AzureDataLakeAnalyticsLinkedServiceResponseOutput {
	return o
}

func (o AzureDataLakeAnalyticsLinkedServiceResponseOutput) ToAzureDataLakeAnalyticsLinkedServiceResponseOutputWithContext(ctx context.Context) AzureDataLakeAnalyticsLinkedServiceResponseOutput {
	return o
}

// The Azure Data Lake Analytics account name. Type: string (or Expression with resultType string).
func (o AzureDataLakeAnalyticsLinkedServiceResponseOutput) AccountName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedServiceResponse) interface{} { return v.AccountName }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o AzureDataLakeAnalyticsLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzureDataLakeAnalyticsLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedServiceResponse) *IntegrationRuntimeReferenceResponse {
		return v.ConnectVia
	}).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Azure Data Lake Analytics URI Type: string (or Expression with resultType string).
func (o AzureDataLakeAnalyticsLinkedServiceResponseOutput) DataLakeAnalyticsUri() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedServiceResponse) interface{} { return v.DataLakeAnalyticsUri }).(pulumi.AnyOutput)
}

// Linked service description.
func (o AzureDataLakeAnalyticsLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureDataLakeAnalyticsLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureDataLakeAnalyticsLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedServiceResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// Data Lake Analytics account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
func (o AzureDataLakeAnalyticsLinkedServiceResponseOutput) ResourceGroupName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedServiceResponse) interface{} { return v.ResourceGroupName }).(pulumi.AnyOutput)
}

// The ID of the application used to authenticate against the Azure Data Lake Analytics account. Type: string (or Expression with resultType string).
func (o AzureDataLakeAnalyticsLinkedServiceResponseOutput) ServicePrincipalId() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedServiceResponse) interface{} { return v.ServicePrincipalId }).(pulumi.AnyOutput)
}

// The Key of the application used to authenticate against the Azure Data Lake Analytics account.
func (o AzureDataLakeAnalyticsLinkedServiceResponseOutput) ServicePrincipalKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedServiceResponse) interface{} { return v.ServicePrincipalKey }).(pulumi.AnyOutput)
}

// Data Lake Analytics account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
func (o AzureDataLakeAnalyticsLinkedServiceResponseOutput) SubscriptionId() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedServiceResponse) interface{} { return v.SubscriptionId }).(pulumi.AnyOutput)
}

// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
func (o AzureDataLakeAnalyticsLinkedServiceResponseOutput) Tenant() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedServiceResponse) interface{} { return v.Tenant }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AzureDataLakeAnalytics'.
func (o AzureDataLakeAnalyticsLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeAnalyticsLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Azure Data Lake Store dataset.
type AzureDataLakeStoreDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The data compression method used for the item(s) in the Azure Data Lake Store.
	Compression interface{} `pulumi:"compression"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// The name of the file in the Azure Data Lake Store. Type: string (or Expression with resultType string).
	FileName interface{} `pulumi:"fileName"`
	// Path to the folder in the Azure Data Lake Store. Type: string (or Expression with resultType string).
	FolderPath interface{} `pulumi:"folderPath"`
	// The format of the Data Lake Store.
	Format interface{} `pulumi:"format"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AzureDataLakeStoreFile'.
	Type string `pulumi:"type"`
}

// AzureDataLakeStoreDatasetInput is an input type that accepts AzureDataLakeStoreDatasetArgs and AzureDataLakeStoreDatasetOutput values.
// You can construct a concrete instance of `AzureDataLakeStoreDatasetInput` via:
//
//          AzureDataLakeStoreDatasetArgs{...}
type AzureDataLakeStoreDatasetInput interface {
	pulumi.Input

	ToAzureDataLakeStoreDatasetOutput() AzureDataLakeStoreDatasetOutput
	ToAzureDataLakeStoreDatasetOutputWithContext(context.Context) AzureDataLakeStoreDatasetOutput
}

// Azure Data Lake Store dataset.
type AzureDataLakeStoreDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The data compression method used for the item(s) in the Azure Data Lake Store.
	Compression pulumi.Input `pulumi:"compression"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the file in the Azure Data Lake Store. Type: string (or Expression with resultType string).
	FileName pulumi.Input `pulumi:"fileName"`
	// Path to the folder in the Azure Data Lake Store. Type: string (or Expression with resultType string).
	FolderPath pulumi.Input `pulumi:"folderPath"`
	// The format of the Data Lake Store.
	Format pulumi.Input `pulumi:"format"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AzureDataLakeStoreFile'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureDataLakeStoreDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreDataset)(nil)).Elem()
}

func (i AzureDataLakeStoreDatasetArgs) ToAzureDataLakeStoreDatasetOutput() AzureDataLakeStoreDatasetOutput {
	return i.ToAzureDataLakeStoreDatasetOutputWithContext(context.Background())
}

func (i AzureDataLakeStoreDatasetArgs) ToAzureDataLakeStoreDatasetOutputWithContext(ctx context.Context) AzureDataLakeStoreDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataLakeStoreDatasetOutput)
}

// Azure Data Lake Store dataset.
type AzureDataLakeStoreDatasetOutput struct{ *pulumi.OutputState }

func (AzureDataLakeStoreDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreDataset)(nil)).Elem()
}

func (o AzureDataLakeStoreDatasetOutput) ToAzureDataLakeStoreDatasetOutput() AzureDataLakeStoreDatasetOutput {
	return o
}

func (o AzureDataLakeStoreDatasetOutput) ToAzureDataLakeStoreDatasetOutputWithContext(ctx context.Context) AzureDataLakeStoreDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureDataLakeStoreDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The data compression method used for the item(s) in the Azure Data Lake Store.
func (o AzureDataLakeStoreDatasetOutput) Compression() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDataset) interface{} { return v.Compression }).(pulumi.AnyOutput)
}

// Dataset description.
func (o AzureDataLakeStoreDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the file in the Azure Data Lake Store. Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreDatasetOutput) FileName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDataset) interface{} { return v.FileName }).(pulumi.AnyOutput)
}

// Path to the folder in the Azure Data Lake Store. Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreDatasetOutput) FolderPath() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDataset) interface{} { return v.FolderPath }).(pulumi.AnyOutput)
}

// The format of the Data Lake Store.
func (o AzureDataLakeStoreDatasetOutput) Format() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDataset) interface{} { return v.Format }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o AzureDataLakeStoreDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o AzureDataLakeStoreDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AzureDataLakeStoreDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AzureDataLakeStoreFile'.
func (o AzureDataLakeStoreDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Azure Data Lake Store dataset.
type AzureDataLakeStoreDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The data compression method used for the item(s) in the Azure Data Lake Store.
	Compression interface{} `pulumi:"compression"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// The name of the file in the Azure Data Lake Store. Type: string (or Expression with resultType string).
	FileName interface{} `pulumi:"fileName"`
	// Path to the folder in the Azure Data Lake Store. Type: string (or Expression with resultType string).
	FolderPath interface{} `pulumi:"folderPath"`
	// The format of the Data Lake Store.
	Format interface{} `pulumi:"format"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AzureDataLakeStoreFile'.
	Type string `pulumi:"type"`
}

// AzureDataLakeStoreDatasetResponseInput is an input type that accepts AzureDataLakeStoreDatasetResponseArgs and AzureDataLakeStoreDatasetResponseOutput values.
// You can construct a concrete instance of `AzureDataLakeStoreDatasetResponseInput` via:
//
//          AzureDataLakeStoreDatasetResponseArgs{...}
type AzureDataLakeStoreDatasetResponseInput interface {
	pulumi.Input

	ToAzureDataLakeStoreDatasetResponseOutput() AzureDataLakeStoreDatasetResponseOutput
	ToAzureDataLakeStoreDatasetResponseOutputWithContext(context.Context) AzureDataLakeStoreDatasetResponseOutput
}

// Azure Data Lake Store dataset.
type AzureDataLakeStoreDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The data compression method used for the item(s) in the Azure Data Lake Store.
	Compression pulumi.Input `pulumi:"compression"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the file in the Azure Data Lake Store. Type: string (or Expression with resultType string).
	FileName pulumi.Input `pulumi:"fileName"`
	// Path to the folder in the Azure Data Lake Store. Type: string (or Expression with resultType string).
	FolderPath pulumi.Input `pulumi:"folderPath"`
	// The format of the Data Lake Store.
	Format pulumi.Input `pulumi:"format"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AzureDataLakeStoreFile'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureDataLakeStoreDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreDatasetResponse)(nil)).Elem()
}

func (i AzureDataLakeStoreDatasetResponseArgs) ToAzureDataLakeStoreDatasetResponseOutput() AzureDataLakeStoreDatasetResponseOutput {
	return i.ToAzureDataLakeStoreDatasetResponseOutputWithContext(context.Background())
}

func (i AzureDataLakeStoreDatasetResponseArgs) ToAzureDataLakeStoreDatasetResponseOutputWithContext(ctx context.Context) AzureDataLakeStoreDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataLakeStoreDatasetResponseOutput)
}

// Azure Data Lake Store dataset.
type AzureDataLakeStoreDatasetResponseOutput struct{ *pulumi.OutputState }

func (AzureDataLakeStoreDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreDatasetResponse)(nil)).Elem()
}

func (o AzureDataLakeStoreDatasetResponseOutput) ToAzureDataLakeStoreDatasetResponseOutput() AzureDataLakeStoreDatasetResponseOutput {
	return o
}

func (o AzureDataLakeStoreDatasetResponseOutput) ToAzureDataLakeStoreDatasetResponseOutputWithContext(ctx context.Context) AzureDataLakeStoreDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureDataLakeStoreDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The data compression method used for the item(s) in the Azure Data Lake Store.
func (o AzureDataLakeStoreDatasetResponseOutput) Compression() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDatasetResponse) interface{} { return v.Compression }).(pulumi.AnyOutput)
}

// Dataset description.
func (o AzureDataLakeStoreDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the file in the Azure Data Lake Store. Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreDatasetResponseOutput) FileName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDatasetResponse) interface{} { return v.FileName }).(pulumi.AnyOutput)
}

// Path to the folder in the Azure Data Lake Store. Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreDatasetResponseOutput) FolderPath() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDatasetResponse) interface{} { return v.FolderPath }).(pulumi.AnyOutput)
}

// The format of the Data Lake Store.
func (o AzureDataLakeStoreDatasetResponseOutput) Format() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDatasetResponse) interface{} { return v.Format }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o AzureDataLakeStoreDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o AzureDataLakeStoreDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDatasetResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AzureDataLakeStoreDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AzureDataLakeStoreFile'.
func (o AzureDataLakeStoreDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeStoreDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Azure Data Lake Store linked service.
type AzureDataLakeStoreLinkedService struct {
	// Data Lake Store account name. Type: string (or Expression with resultType string).
	AccountName interface{} `pulumi:"accountName"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Data Lake Store service URI. Type: string (or Expression with resultType string).
	DataLakeStoreUri interface{} `pulumi:"dataLakeStoreUri"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Data Lake Store account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
	ResourceGroupName interface{} `pulumi:"resourceGroupName"`
	// The ID of the application used to authenticate against the Azure Data Lake Store account. Type: string (or Expression with resultType string).
	ServicePrincipalId interface{} `pulumi:"servicePrincipalId"`
	// The Key of the application used to authenticate against the Azure Data Lake Store account.
	ServicePrincipalKey interface{} `pulumi:"servicePrincipalKey"`
	// Data Lake Store account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
	SubscriptionId interface{} `pulumi:"subscriptionId"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant interface{} `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureDataLakeStore'.
	Type string `pulumi:"type"`
}

// AzureDataLakeStoreLinkedServiceInput is an input type that accepts AzureDataLakeStoreLinkedServiceArgs and AzureDataLakeStoreLinkedServiceOutput values.
// You can construct a concrete instance of `AzureDataLakeStoreLinkedServiceInput` via:
//
//          AzureDataLakeStoreLinkedServiceArgs{...}
type AzureDataLakeStoreLinkedServiceInput interface {
	pulumi.Input

	ToAzureDataLakeStoreLinkedServiceOutput() AzureDataLakeStoreLinkedServiceOutput
	ToAzureDataLakeStoreLinkedServiceOutputWithContext(context.Context) AzureDataLakeStoreLinkedServiceOutput
}

// Azure Data Lake Store linked service.
type AzureDataLakeStoreLinkedServiceArgs struct {
	// Data Lake Store account name. Type: string (or Expression with resultType string).
	AccountName pulumi.Input `pulumi:"accountName"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Data Lake Store service URI. Type: string (or Expression with resultType string).
	DataLakeStoreUri pulumi.Input `pulumi:"dataLakeStoreUri"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Data Lake Store account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
	ResourceGroupName pulumi.Input `pulumi:"resourceGroupName"`
	// The ID of the application used to authenticate against the Azure Data Lake Store account. Type: string (or Expression with resultType string).
	ServicePrincipalId pulumi.Input `pulumi:"servicePrincipalId"`
	// The Key of the application used to authenticate against the Azure Data Lake Store account.
	ServicePrincipalKey pulumi.Input `pulumi:"servicePrincipalKey"`
	// Data Lake Store account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
	SubscriptionId pulumi.Input `pulumi:"subscriptionId"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant pulumi.Input `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureDataLakeStore'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureDataLakeStoreLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreLinkedService)(nil)).Elem()
}

func (i AzureDataLakeStoreLinkedServiceArgs) ToAzureDataLakeStoreLinkedServiceOutput() AzureDataLakeStoreLinkedServiceOutput {
	return i.ToAzureDataLakeStoreLinkedServiceOutputWithContext(context.Background())
}

func (i AzureDataLakeStoreLinkedServiceArgs) ToAzureDataLakeStoreLinkedServiceOutputWithContext(ctx context.Context) AzureDataLakeStoreLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataLakeStoreLinkedServiceOutput)
}

// Azure Data Lake Store linked service.
type AzureDataLakeStoreLinkedServiceOutput struct{ *pulumi.OutputState }

func (AzureDataLakeStoreLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreLinkedService)(nil)).Elem()
}

func (o AzureDataLakeStoreLinkedServiceOutput) ToAzureDataLakeStoreLinkedServiceOutput() AzureDataLakeStoreLinkedServiceOutput {
	return o
}

func (o AzureDataLakeStoreLinkedServiceOutput) ToAzureDataLakeStoreLinkedServiceOutputWithContext(ctx context.Context) AzureDataLakeStoreLinkedServiceOutput {
	return o
}

// Data Lake Store account name. Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreLinkedServiceOutput) AccountName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedService) interface{} { return v.AccountName }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o AzureDataLakeStoreLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzureDataLakeStoreLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Data Lake Store service URI. Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreLinkedServiceOutput) DataLakeStoreUri() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedService) interface{} { return v.DataLakeStoreUri }).(pulumi.AnyOutput)
}

// Linked service description.
func (o AzureDataLakeStoreLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureDataLakeStoreLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Data Lake Store account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreLinkedServiceOutput) ResourceGroupName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedService) interface{} { return v.ResourceGroupName }).(pulumi.AnyOutput)
}

// The ID of the application used to authenticate against the Azure Data Lake Store account. Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreLinkedServiceOutput) ServicePrincipalId() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedService) interface{} { return v.ServicePrincipalId }).(pulumi.AnyOutput)
}

// The Key of the application used to authenticate against the Azure Data Lake Store account.
func (o AzureDataLakeStoreLinkedServiceOutput) ServicePrincipalKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedService) interface{} { return v.ServicePrincipalKey }).(pulumi.AnyOutput)
}

// Data Lake Store account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreLinkedServiceOutput) SubscriptionId() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedService) interface{} { return v.SubscriptionId }).(pulumi.AnyOutput)
}

// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreLinkedServiceOutput) Tenant() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedService) interface{} { return v.Tenant }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AzureDataLakeStore'.
func (o AzureDataLakeStoreLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Azure Data Lake Store linked service.
type AzureDataLakeStoreLinkedServiceResponse struct {
	// Data Lake Store account name. Type: string (or Expression with resultType string).
	AccountName interface{} `pulumi:"accountName"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Data Lake Store service URI. Type: string (or Expression with resultType string).
	DataLakeStoreUri interface{} `pulumi:"dataLakeStoreUri"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Data Lake Store account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
	ResourceGroupName interface{} `pulumi:"resourceGroupName"`
	// The ID of the application used to authenticate against the Azure Data Lake Store account. Type: string (or Expression with resultType string).
	ServicePrincipalId interface{} `pulumi:"servicePrincipalId"`
	// The Key of the application used to authenticate against the Azure Data Lake Store account.
	ServicePrincipalKey interface{} `pulumi:"servicePrincipalKey"`
	// Data Lake Store account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
	SubscriptionId interface{} `pulumi:"subscriptionId"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant interface{} `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureDataLakeStore'.
	Type string `pulumi:"type"`
}

// AzureDataLakeStoreLinkedServiceResponseInput is an input type that accepts AzureDataLakeStoreLinkedServiceResponseArgs and AzureDataLakeStoreLinkedServiceResponseOutput values.
// You can construct a concrete instance of `AzureDataLakeStoreLinkedServiceResponseInput` via:
//
//          AzureDataLakeStoreLinkedServiceResponseArgs{...}
type AzureDataLakeStoreLinkedServiceResponseInput interface {
	pulumi.Input

	ToAzureDataLakeStoreLinkedServiceResponseOutput() AzureDataLakeStoreLinkedServiceResponseOutput
	ToAzureDataLakeStoreLinkedServiceResponseOutputWithContext(context.Context) AzureDataLakeStoreLinkedServiceResponseOutput
}

// Azure Data Lake Store linked service.
type AzureDataLakeStoreLinkedServiceResponseArgs struct {
	// Data Lake Store account name. Type: string (or Expression with resultType string).
	AccountName pulumi.Input `pulumi:"accountName"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Data Lake Store service URI. Type: string (or Expression with resultType string).
	DataLakeStoreUri pulumi.Input `pulumi:"dataLakeStoreUri"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Data Lake Store account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
	ResourceGroupName pulumi.Input `pulumi:"resourceGroupName"`
	// The ID of the application used to authenticate against the Azure Data Lake Store account. Type: string (or Expression with resultType string).
	ServicePrincipalId pulumi.Input `pulumi:"servicePrincipalId"`
	// The Key of the application used to authenticate against the Azure Data Lake Store account.
	ServicePrincipalKey pulumi.Input `pulumi:"servicePrincipalKey"`
	// Data Lake Store account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
	SubscriptionId pulumi.Input `pulumi:"subscriptionId"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant pulumi.Input `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureDataLakeStore'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureDataLakeStoreLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreLinkedServiceResponse)(nil)).Elem()
}

func (i AzureDataLakeStoreLinkedServiceResponseArgs) ToAzureDataLakeStoreLinkedServiceResponseOutput() AzureDataLakeStoreLinkedServiceResponseOutput {
	return i.ToAzureDataLakeStoreLinkedServiceResponseOutputWithContext(context.Background())
}

func (i AzureDataLakeStoreLinkedServiceResponseArgs) ToAzureDataLakeStoreLinkedServiceResponseOutputWithContext(ctx context.Context) AzureDataLakeStoreLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataLakeStoreLinkedServiceResponseOutput)
}

// Azure Data Lake Store linked service.
type AzureDataLakeStoreLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (AzureDataLakeStoreLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreLinkedServiceResponse)(nil)).Elem()
}

func (o AzureDataLakeStoreLinkedServiceResponseOutput) ToAzureDataLakeStoreLinkedServiceResponseOutput() AzureDataLakeStoreLinkedServiceResponseOutput {
	return o
}

func (o AzureDataLakeStoreLinkedServiceResponseOutput) ToAzureDataLakeStoreLinkedServiceResponseOutputWithContext(ctx context.Context) AzureDataLakeStoreLinkedServiceResponseOutput {
	return o
}

// Data Lake Store account name. Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreLinkedServiceResponseOutput) AccountName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedServiceResponse) interface{} { return v.AccountName }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o AzureDataLakeStoreLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzureDataLakeStoreLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedServiceResponse) *IntegrationRuntimeReferenceResponse {
		return v.ConnectVia
	}).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Data Lake Store service URI. Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreLinkedServiceResponseOutput) DataLakeStoreUri() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedServiceResponse) interface{} { return v.DataLakeStoreUri }).(pulumi.AnyOutput)
}

// Linked service description.
func (o AzureDataLakeStoreLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureDataLakeStoreLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedServiceResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// Data Lake Store account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreLinkedServiceResponseOutput) ResourceGroupName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedServiceResponse) interface{} { return v.ResourceGroupName }).(pulumi.AnyOutput)
}

// The ID of the application used to authenticate against the Azure Data Lake Store account. Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreLinkedServiceResponseOutput) ServicePrincipalId() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedServiceResponse) interface{} { return v.ServicePrincipalId }).(pulumi.AnyOutput)
}

// The Key of the application used to authenticate against the Azure Data Lake Store account.
func (o AzureDataLakeStoreLinkedServiceResponseOutput) ServicePrincipalKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedServiceResponse) interface{} { return v.ServicePrincipalKey }).(pulumi.AnyOutput)
}

// Data Lake Store account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreLinkedServiceResponseOutput) SubscriptionId() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedServiceResponse) interface{} { return v.SubscriptionId }).(pulumi.AnyOutput)
}

// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
func (o AzureDataLakeStoreLinkedServiceResponseOutput) Tenant() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedServiceResponse) interface{} { return v.Tenant }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AzureDataLakeStore'.
func (o AzureDataLakeStoreLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeStoreLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Azure Data Lake Store sink.
type AzureDataLakeStoreSink struct {
	// The type of copy behavior for copy sink.
	CopyBehavior interface{} `pulumi:"copyBehavior"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'AzureDataLakeStoreSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// AzureDataLakeStoreSinkInput is an input type that accepts AzureDataLakeStoreSinkArgs and AzureDataLakeStoreSinkOutput values.
// You can construct a concrete instance of `AzureDataLakeStoreSinkInput` via:
//
//          AzureDataLakeStoreSinkArgs{...}
type AzureDataLakeStoreSinkInput interface {
	pulumi.Input

	ToAzureDataLakeStoreSinkOutput() AzureDataLakeStoreSinkOutput
	ToAzureDataLakeStoreSinkOutputWithContext(context.Context) AzureDataLakeStoreSinkOutput
}

// A copy activity Azure Data Lake Store sink.
type AzureDataLakeStoreSinkArgs struct {
	// The type of copy behavior for copy sink.
	CopyBehavior pulumi.Input `pulumi:"copyBehavior"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'AzureDataLakeStoreSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (AzureDataLakeStoreSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreSink)(nil)).Elem()
}

func (i AzureDataLakeStoreSinkArgs) ToAzureDataLakeStoreSinkOutput() AzureDataLakeStoreSinkOutput {
	return i.ToAzureDataLakeStoreSinkOutputWithContext(context.Background())
}

func (i AzureDataLakeStoreSinkArgs) ToAzureDataLakeStoreSinkOutputWithContext(ctx context.Context) AzureDataLakeStoreSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataLakeStoreSinkOutput)
}

// A copy activity Azure Data Lake Store sink.
type AzureDataLakeStoreSinkOutput struct{ *pulumi.OutputState }

func (AzureDataLakeStoreSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreSink)(nil)).Elem()
}

func (o AzureDataLakeStoreSinkOutput) ToAzureDataLakeStoreSinkOutput() AzureDataLakeStoreSinkOutput {
	return o
}

func (o AzureDataLakeStoreSinkOutput) ToAzureDataLakeStoreSinkOutputWithContext(ctx context.Context) AzureDataLakeStoreSinkOutput {
	return o
}

// The type of copy behavior for copy sink.
func (o AzureDataLakeStoreSinkOutput) CopyBehavior() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSink) interface{} { return v.CopyBehavior }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o AzureDataLakeStoreSinkOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSink) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureDataLakeStoreSinkOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSink) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'AzureDataLakeStoreSink'.
func (o AzureDataLakeStoreSinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSink) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o AzureDataLakeStoreSinkOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSink) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureDataLakeStoreSinkOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSink) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity Azure Data Lake Store sink.
type AzureDataLakeStoreSinkResponse struct {
	// The type of copy behavior for copy sink.
	CopyBehavior interface{} `pulumi:"copyBehavior"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'AzureDataLakeStoreSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// AzureDataLakeStoreSinkResponseInput is an input type that accepts AzureDataLakeStoreSinkResponseArgs and AzureDataLakeStoreSinkResponseOutput values.
// You can construct a concrete instance of `AzureDataLakeStoreSinkResponseInput` via:
//
//          AzureDataLakeStoreSinkResponseArgs{...}
type AzureDataLakeStoreSinkResponseInput interface {
	pulumi.Input

	ToAzureDataLakeStoreSinkResponseOutput() AzureDataLakeStoreSinkResponseOutput
	ToAzureDataLakeStoreSinkResponseOutputWithContext(context.Context) AzureDataLakeStoreSinkResponseOutput
}

// A copy activity Azure Data Lake Store sink.
type AzureDataLakeStoreSinkResponseArgs struct {
	// The type of copy behavior for copy sink.
	CopyBehavior pulumi.Input `pulumi:"copyBehavior"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'AzureDataLakeStoreSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (AzureDataLakeStoreSinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreSinkResponse)(nil)).Elem()
}

func (i AzureDataLakeStoreSinkResponseArgs) ToAzureDataLakeStoreSinkResponseOutput() AzureDataLakeStoreSinkResponseOutput {
	return i.ToAzureDataLakeStoreSinkResponseOutputWithContext(context.Background())
}

func (i AzureDataLakeStoreSinkResponseArgs) ToAzureDataLakeStoreSinkResponseOutputWithContext(ctx context.Context) AzureDataLakeStoreSinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataLakeStoreSinkResponseOutput)
}

// A copy activity Azure Data Lake Store sink.
type AzureDataLakeStoreSinkResponseOutput struct{ *pulumi.OutputState }

func (AzureDataLakeStoreSinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreSinkResponse)(nil)).Elem()
}

func (o AzureDataLakeStoreSinkResponseOutput) ToAzureDataLakeStoreSinkResponseOutput() AzureDataLakeStoreSinkResponseOutput {
	return o
}

func (o AzureDataLakeStoreSinkResponseOutput) ToAzureDataLakeStoreSinkResponseOutputWithContext(ctx context.Context) AzureDataLakeStoreSinkResponseOutput {
	return o
}

// The type of copy behavior for copy sink.
func (o AzureDataLakeStoreSinkResponseOutput) CopyBehavior() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSinkResponse) interface{} { return v.CopyBehavior }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o AzureDataLakeStoreSinkResponseOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSinkResponse) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureDataLakeStoreSinkResponseOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSinkResponse) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'AzureDataLakeStoreSink'.
func (o AzureDataLakeStoreSinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o AzureDataLakeStoreSinkResponseOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSinkResponse) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureDataLakeStoreSinkResponseOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSinkResponse) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity Azure Data Lake source.
type AzureDataLakeStoreSource struct {
	// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
	Recursive interface{} `pulumi:"recursive"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AzureDataLakeStoreSource'.
	Type string `pulumi:"type"`
}

// AzureDataLakeStoreSourceInput is an input type that accepts AzureDataLakeStoreSourceArgs and AzureDataLakeStoreSourceOutput values.
// You can construct a concrete instance of `AzureDataLakeStoreSourceInput` via:
//
//          AzureDataLakeStoreSourceArgs{...}
type AzureDataLakeStoreSourceInput interface {
	pulumi.Input

	ToAzureDataLakeStoreSourceOutput() AzureDataLakeStoreSourceOutput
	ToAzureDataLakeStoreSourceOutputWithContext(context.Context) AzureDataLakeStoreSourceOutput
}

// A copy activity Azure Data Lake source.
type AzureDataLakeStoreSourceArgs struct {
	// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
	Recursive pulumi.Input `pulumi:"recursive"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AzureDataLakeStoreSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureDataLakeStoreSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreSource)(nil)).Elem()
}

func (i AzureDataLakeStoreSourceArgs) ToAzureDataLakeStoreSourceOutput() AzureDataLakeStoreSourceOutput {
	return i.ToAzureDataLakeStoreSourceOutputWithContext(context.Background())
}

func (i AzureDataLakeStoreSourceArgs) ToAzureDataLakeStoreSourceOutputWithContext(ctx context.Context) AzureDataLakeStoreSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataLakeStoreSourceOutput)
}

// A copy activity Azure Data Lake source.
type AzureDataLakeStoreSourceOutput struct{ *pulumi.OutputState }

func (AzureDataLakeStoreSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreSource)(nil)).Elem()
}

func (o AzureDataLakeStoreSourceOutput) ToAzureDataLakeStoreSourceOutput() AzureDataLakeStoreSourceOutput {
	return o
}

func (o AzureDataLakeStoreSourceOutput) ToAzureDataLakeStoreSourceOutputWithContext(ctx context.Context) AzureDataLakeStoreSourceOutput {
	return o
}

// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
func (o AzureDataLakeStoreSourceOutput) Recursive() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSource) interface{} { return v.Recursive }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o AzureDataLakeStoreSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureDataLakeStoreSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'AzureDataLakeStoreSource'.
func (o AzureDataLakeStoreSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Azure Data Lake source.
type AzureDataLakeStoreSourceResponse struct {
	// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
	Recursive interface{} `pulumi:"recursive"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AzureDataLakeStoreSource'.
	Type string `pulumi:"type"`
}

// AzureDataLakeStoreSourceResponseInput is an input type that accepts AzureDataLakeStoreSourceResponseArgs and AzureDataLakeStoreSourceResponseOutput values.
// You can construct a concrete instance of `AzureDataLakeStoreSourceResponseInput` via:
//
//          AzureDataLakeStoreSourceResponseArgs{...}
type AzureDataLakeStoreSourceResponseInput interface {
	pulumi.Input

	ToAzureDataLakeStoreSourceResponseOutput() AzureDataLakeStoreSourceResponseOutput
	ToAzureDataLakeStoreSourceResponseOutputWithContext(context.Context) AzureDataLakeStoreSourceResponseOutput
}

// A copy activity Azure Data Lake source.
type AzureDataLakeStoreSourceResponseArgs struct {
	// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
	Recursive pulumi.Input `pulumi:"recursive"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AzureDataLakeStoreSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureDataLakeStoreSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreSourceResponse)(nil)).Elem()
}

func (i AzureDataLakeStoreSourceResponseArgs) ToAzureDataLakeStoreSourceResponseOutput() AzureDataLakeStoreSourceResponseOutput {
	return i.ToAzureDataLakeStoreSourceResponseOutputWithContext(context.Background())
}

func (i AzureDataLakeStoreSourceResponseArgs) ToAzureDataLakeStoreSourceResponseOutputWithContext(ctx context.Context) AzureDataLakeStoreSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataLakeStoreSourceResponseOutput)
}

// A copy activity Azure Data Lake source.
type AzureDataLakeStoreSourceResponseOutput struct{ *pulumi.OutputState }

func (AzureDataLakeStoreSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreSourceResponse)(nil)).Elem()
}

func (o AzureDataLakeStoreSourceResponseOutput) ToAzureDataLakeStoreSourceResponseOutput() AzureDataLakeStoreSourceResponseOutput {
	return o
}

func (o AzureDataLakeStoreSourceResponseOutput) ToAzureDataLakeStoreSourceResponseOutputWithContext(ctx context.Context) AzureDataLakeStoreSourceResponseOutput {
	return o
}

// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
func (o AzureDataLakeStoreSourceResponseOutput) Recursive() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSourceResponse) interface{} { return v.Recursive }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o AzureDataLakeStoreSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureDataLakeStoreSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'AzureDataLakeStoreSource'.
func (o AzureDataLakeStoreSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeStoreSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Azure Databricks linked service.
type AzureDatabricksLinkedService struct {
	// Access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string (or Expression with resultType string).
	AccessToken interface{} `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// <REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string).
	Domain interface{} `pulumi:"domain"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The id of an existing cluster that will be used for all runs of this job. Type: string (or Expression with resultType string).
	ExistingClusterId interface{} `pulumi:"existingClusterId"`
	// The node types of new cluster. Type: string (or Expression with resultType string).
	NewClusterNodeType interface{} `pulumi:"newClusterNodeType"`
	// Number of worker nodes that new cluster should have. A string formatted Int32, like '1' means numOfWorker is 1 or '1:10' means auto-scale from 1 as min and 10 as max. Type: string (or Expression with resultType string).
	NewClusterNumOfWorker interface{} `pulumi:"newClusterNumOfWorker"`
	// a set of optional, user-specified Spark configuration key-value pairs.
	NewClusterSparkConf map[string]interface{} `pulumi:"newClusterSparkConf"`
	// The Spark version of new cluster. Type: string (or Expression with resultType string).
	NewClusterVersion interface{} `pulumi:"newClusterVersion"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzureDatabricks'.
	Type string `pulumi:"type"`
}

// AzureDatabricksLinkedServiceInput is an input type that accepts AzureDatabricksLinkedServiceArgs and AzureDatabricksLinkedServiceOutput values.
// You can construct a concrete instance of `AzureDatabricksLinkedServiceInput` via:
//
//          AzureDatabricksLinkedServiceArgs{...}
type AzureDatabricksLinkedServiceInput interface {
	pulumi.Input

	ToAzureDatabricksLinkedServiceOutput() AzureDatabricksLinkedServiceOutput
	ToAzureDatabricksLinkedServiceOutputWithContext(context.Context) AzureDatabricksLinkedServiceOutput
}

// Azure Databricks linked service.
type AzureDatabricksLinkedServiceArgs struct {
	// Access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string (or Expression with resultType string).
	AccessToken pulumi.Input `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// <REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string).
	Domain pulumi.Input `pulumi:"domain"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The id of an existing cluster that will be used for all runs of this job. Type: string (or Expression with resultType string).
	ExistingClusterId pulumi.Input `pulumi:"existingClusterId"`
	// The node types of new cluster. Type: string (or Expression with resultType string).
	NewClusterNodeType pulumi.Input `pulumi:"newClusterNodeType"`
	// Number of worker nodes that new cluster should have. A string formatted Int32, like '1' means numOfWorker is 1 or '1:10' means auto-scale from 1 as min and 10 as max. Type: string (or Expression with resultType string).
	NewClusterNumOfWorker pulumi.Input `pulumi:"newClusterNumOfWorker"`
	// a set of optional, user-specified Spark configuration key-value pairs.
	NewClusterSparkConf pulumi.MapInput `pulumi:"newClusterSparkConf"`
	// The Spark version of new cluster. Type: string (or Expression with resultType string).
	NewClusterVersion pulumi.Input `pulumi:"newClusterVersion"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzureDatabricks'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureDatabricksLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDatabricksLinkedService)(nil)).Elem()
}

func (i AzureDatabricksLinkedServiceArgs) ToAzureDatabricksLinkedServiceOutput() AzureDatabricksLinkedServiceOutput {
	return i.ToAzureDatabricksLinkedServiceOutputWithContext(context.Background())
}

func (i AzureDatabricksLinkedServiceArgs) ToAzureDatabricksLinkedServiceOutputWithContext(ctx context.Context) AzureDatabricksLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDatabricksLinkedServiceOutput)
}

// Azure Databricks linked service.
type AzureDatabricksLinkedServiceOutput struct{ *pulumi.OutputState }

func (AzureDatabricksLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDatabricksLinkedService)(nil)).Elem()
}

func (o AzureDatabricksLinkedServiceOutput) ToAzureDatabricksLinkedServiceOutput() AzureDatabricksLinkedServiceOutput {
	return o
}

func (o AzureDatabricksLinkedServiceOutput) ToAzureDatabricksLinkedServiceOutputWithContext(ctx context.Context) AzureDatabricksLinkedServiceOutput {
	return o
}

// Access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string (or Expression with resultType string).
func (o AzureDatabricksLinkedServiceOutput) AccessToken() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedService) interface{} { return v.AccessToken }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o AzureDatabricksLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzureDatabricksLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o AzureDatabricksLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// <REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string).
func (o AzureDatabricksLinkedServiceOutput) Domain() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedService) interface{} { return v.Domain }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureDatabricksLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The id of an existing cluster that will be used for all runs of this job. Type: string (or Expression with resultType string).
func (o AzureDatabricksLinkedServiceOutput) ExistingClusterId() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedService) interface{} { return v.ExistingClusterId }).(pulumi.AnyOutput)
}

// The node types of new cluster. Type: string (or Expression with resultType string).
func (o AzureDatabricksLinkedServiceOutput) NewClusterNodeType() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedService) interface{} { return v.NewClusterNodeType }).(pulumi.AnyOutput)
}

// Number of worker nodes that new cluster should have. A string formatted Int32, like '1' means numOfWorker is 1 or '1:10' means auto-scale from 1 as min and 10 as max. Type: string (or Expression with resultType string).
func (o AzureDatabricksLinkedServiceOutput) NewClusterNumOfWorker() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedService) interface{} { return v.NewClusterNumOfWorker }).(pulumi.AnyOutput)
}

// a set of optional, user-specified Spark configuration key-value pairs.
func (o AzureDatabricksLinkedServiceOutput) NewClusterSparkConf() pulumi.MapOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedService) map[string]interface{} { return v.NewClusterSparkConf }).(pulumi.MapOutput)
}

// The Spark version of new cluster. Type: string (or Expression with resultType string).
func (o AzureDatabricksLinkedServiceOutput) NewClusterVersion() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedService) interface{} { return v.NewClusterVersion }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureDatabricksLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'AzureDatabricks'.
func (o AzureDatabricksLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Azure Databricks linked service.
type AzureDatabricksLinkedServiceResponse struct {
	// Access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string (or Expression with resultType string).
	AccessToken interface{} `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// <REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string).
	Domain interface{} `pulumi:"domain"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The id of an existing cluster that will be used for all runs of this job. Type: string (or Expression with resultType string).
	ExistingClusterId interface{} `pulumi:"existingClusterId"`
	// The node types of new cluster. Type: string (or Expression with resultType string).
	NewClusterNodeType interface{} `pulumi:"newClusterNodeType"`
	// Number of worker nodes that new cluster should have. A string formatted Int32, like '1' means numOfWorker is 1 or '1:10' means auto-scale from 1 as min and 10 as max. Type: string (or Expression with resultType string).
	NewClusterNumOfWorker interface{} `pulumi:"newClusterNumOfWorker"`
	// a set of optional, user-specified Spark configuration key-value pairs.
	NewClusterSparkConf map[string]interface{} `pulumi:"newClusterSparkConf"`
	// The Spark version of new cluster. Type: string (or Expression with resultType string).
	NewClusterVersion interface{} `pulumi:"newClusterVersion"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzureDatabricks'.
	Type string `pulumi:"type"`
}

// AzureDatabricksLinkedServiceResponseInput is an input type that accepts AzureDatabricksLinkedServiceResponseArgs and AzureDatabricksLinkedServiceResponseOutput values.
// You can construct a concrete instance of `AzureDatabricksLinkedServiceResponseInput` via:
//
//          AzureDatabricksLinkedServiceResponseArgs{...}
type AzureDatabricksLinkedServiceResponseInput interface {
	pulumi.Input

	ToAzureDatabricksLinkedServiceResponseOutput() AzureDatabricksLinkedServiceResponseOutput
	ToAzureDatabricksLinkedServiceResponseOutputWithContext(context.Context) AzureDatabricksLinkedServiceResponseOutput
}

// Azure Databricks linked service.
type AzureDatabricksLinkedServiceResponseArgs struct {
	// Access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string (or Expression with resultType string).
	AccessToken pulumi.Input `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// <REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string).
	Domain pulumi.Input `pulumi:"domain"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The id of an existing cluster that will be used for all runs of this job. Type: string (or Expression with resultType string).
	ExistingClusterId pulumi.Input `pulumi:"existingClusterId"`
	// The node types of new cluster. Type: string (or Expression with resultType string).
	NewClusterNodeType pulumi.Input `pulumi:"newClusterNodeType"`
	// Number of worker nodes that new cluster should have. A string formatted Int32, like '1' means numOfWorker is 1 or '1:10' means auto-scale from 1 as min and 10 as max. Type: string (or Expression with resultType string).
	NewClusterNumOfWorker pulumi.Input `pulumi:"newClusterNumOfWorker"`
	// a set of optional, user-specified Spark configuration key-value pairs.
	NewClusterSparkConf pulumi.MapInput `pulumi:"newClusterSparkConf"`
	// The Spark version of new cluster. Type: string (or Expression with resultType string).
	NewClusterVersion pulumi.Input `pulumi:"newClusterVersion"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzureDatabricks'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureDatabricksLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDatabricksLinkedServiceResponse)(nil)).Elem()
}

func (i AzureDatabricksLinkedServiceResponseArgs) ToAzureDatabricksLinkedServiceResponseOutput() AzureDatabricksLinkedServiceResponseOutput {
	return i.ToAzureDatabricksLinkedServiceResponseOutputWithContext(context.Background())
}

func (i AzureDatabricksLinkedServiceResponseArgs) ToAzureDatabricksLinkedServiceResponseOutputWithContext(ctx context.Context) AzureDatabricksLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDatabricksLinkedServiceResponseOutput)
}

// Azure Databricks linked service.
type AzureDatabricksLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (AzureDatabricksLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDatabricksLinkedServiceResponse)(nil)).Elem()
}

func (o AzureDatabricksLinkedServiceResponseOutput) ToAzureDatabricksLinkedServiceResponseOutput() AzureDatabricksLinkedServiceResponseOutput {
	return o
}

func (o AzureDatabricksLinkedServiceResponseOutput) ToAzureDatabricksLinkedServiceResponseOutputWithContext(ctx context.Context) AzureDatabricksLinkedServiceResponseOutput {
	return o
}

// Access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string (or Expression with resultType string).
func (o AzureDatabricksLinkedServiceResponseOutput) AccessToken() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedServiceResponse) interface{} { return v.AccessToken }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o AzureDatabricksLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzureDatabricksLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o AzureDatabricksLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// <REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string).
func (o AzureDatabricksLinkedServiceResponseOutput) Domain() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedServiceResponse) interface{} { return v.Domain }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureDatabricksLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The id of an existing cluster that will be used for all runs of this job. Type: string (or Expression with resultType string).
func (o AzureDatabricksLinkedServiceResponseOutput) ExistingClusterId() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedServiceResponse) interface{} { return v.ExistingClusterId }).(pulumi.AnyOutput)
}

// The node types of new cluster. Type: string (or Expression with resultType string).
func (o AzureDatabricksLinkedServiceResponseOutput) NewClusterNodeType() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedServiceResponse) interface{} { return v.NewClusterNodeType }).(pulumi.AnyOutput)
}

// Number of worker nodes that new cluster should have. A string formatted Int32, like '1' means numOfWorker is 1 or '1:10' means auto-scale from 1 as min and 10 as max. Type: string (or Expression with resultType string).
func (o AzureDatabricksLinkedServiceResponseOutput) NewClusterNumOfWorker() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedServiceResponse) interface{} { return v.NewClusterNumOfWorker }).(pulumi.AnyOutput)
}

// a set of optional, user-specified Spark configuration key-value pairs.
func (o AzureDatabricksLinkedServiceResponseOutput) NewClusterSparkConf() pulumi.MapOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedServiceResponse) map[string]interface{} { return v.NewClusterSparkConf }).(pulumi.MapOutput)
}

// The Spark version of new cluster. Type: string (or Expression with resultType string).
func (o AzureDatabricksLinkedServiceResponseOutput) NewClusterVersion() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedServiceResponse) interface{} { return v.NewClusterVersion }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureDatabricksLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedServiceResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'AzureDatabricks'.
func (o AzureDatabricksLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDatabricksLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Azure Key Vault linked service.
type AzureKeyVaultLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string (or Expression with resultType string).
	BaseUrl interface{} `pulumi:"baseUrl"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzureKeyVault'.
	Type string `pulumi:"type"`
}

// AzureKeyVaultLinkedServiceInput is an input type that accepts AzureKeyVaultLinkedServiceArgs and AzureKeyVaultLinkedServiceOutput values.
// You can construct a concrete instance of `AzureKeyVaultLinkedServiceInput` via:
//
//          AzureKeyVaultLinkedServiceArgs{...}
type AzureKeyVaultLinkedServiceInput interface {
	pulumi.Input

	ToAzureKeyVaultLinkedServiceOutput() AzureKeyVaultLinkedServiceOutput
	ToAzureKeyVaultLinkedServiceOutputWithContext(context.Context) AzureKeyVaultLinkedServiceOutput
}

// Azure Key Vault linked service.
type AzureKeyVaultLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string (or Expression with resultType string).
	BaseUrl pulumi.Input `pulumi:"baseUrl"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzureKeyVault'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureKeyVaultLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureKeyVaultLinkedService)(nil)).Elem()
}

func (i AzureKeyVaultLinkedServiceArgs) ToAzureKeyVaultLinkedServiceOutput() AzureKeyVaultLinkedServiceOutput {
	return i.ToAzureKeyVaultLinkedServiceOutputWithContext(context.Background())
}

func (i AzureKeyVaultLinkedServiceArgs) ToAzureKeyVaultLinkedServiceOutputWithContext(ctx context.Context) AzureKeyVaultLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureKeyVaultLinkedServiceOutput)
}

// Azure Key Vault linked service.
type AzureKeyVaultLinkedServiceOutput struct{ *pulumi.OutputState }

func (AzureKeyVaultLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureKeyVaultLinkedService)(nil)).Elem()
}

func (o AzureKeyVaultLinkedServiceOutput) ToAzureKeyVaultLinkedServiceOutput() AzureKeyVaultLinkedServiceOutput {
	return o
}

func (o AzureKeyVaultLinkedServiceOutput) ToAzureKeyVaultLinkedServiceOutputWithContext(ctx context.Context) AzureKeyVaultLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureKeyVaultLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureKeyVaultLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string (or Expression with resultType string).
func (o AzureKeyVaultLinkedServiceOutput) BaseUrl() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureKeyVaultLinkedService) interface{} { return v.BaseUrl }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o AzureKeyVaultLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v AzureKeyVaultLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o AzureKeyVaultLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureKeyVaultLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Parameters for linked service.
func (o AzureKeyVaultLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureKeyVaultLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'AzureKeyVault'.
func (o AzureKeyVaultLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureKeyVaultLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Azure Key Vault linked service.
type AzureKeyVaultLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string (or Expression with resultType string).
	BaseUrl interface{} `pulumi:"baseUrl"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzureKeyVault'.
	Type string `pulumi:"type"`
}

// AzureKeyVaultLinkedServiceResponseInput is an input type that accepts AzureKeyVaultLinkedServiceResponseArgs and AzureKeyVaultLinkedServiceResponseOutput values.
// You can construct a concrete instance of `AzureKeyVaultLinkedServiceResponseInput` via:
//
//          AzureKeyVaultLinkedServiceResponseArgs{...}
type AzureKeyVaultLinkedServiceResponseInput interface {
	pulumi.Input

	ToAzureKeyVaultLinkedServiceResponseOutput() AzureKeyVaultLinkedServiceResponseOutput
	ToAzureKeyVaultLinkedServiceResponseOutputWithContext(context.Context) AzureKeyVaultLinkedServiceResponseOutput
}

// Azure Key Vault linked service.
type AzureKeyVaultLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string (or Expression with resultType string).
	BaseUrl pulumi.Input `pulumi:"baseUrl"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzureKeyVault'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureKeyVaultLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureKeyVaultLinkedServiceResponse)(nil)).Elem()
}

func (i AzureKeyVaultLinkedServiceResponseArgs) ToAzureKeyVaultLinkedServiceResponseOutput() AzureKeyVaultLinkedServiceResponseOutput {
	return i.ToAzureKeyVaultLinkedServiceResponseOutputWithContext(context.Background())
}

func (i AzureKeyVaultLinkedServiceResponseArgs) ToAzureKeyVaultLinkedServiceResponseOutputWithContext(ctx context.Context) AzureKeyVaultLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureKeyVaultLinkedServiceResponseOutput)
}

// Azure Key Vault linked service.
type AzureKeyVaultLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (AzureKeyVaultLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureKeyVaultLinkedServiceResponse)(nil)).Elem()
}

func (o AzureKeyVaultLinkedServiceResponseOutput) ToAzureKeyVaultLinkedServiceResponseOutput() AzureKeyVaultLinkedServiceResponseOutput {
	return o
}

func (o AzureKeyVaultLinkedServiceResponseOutput) ToAzureKeyVaultLinkedServiceResponseOutputWithContext(ctx context.Context) AzureKeyVaultLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureKeyVaultLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureKeyVaultLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string (or Expression with resultType string).
func (o AzureKeyVaultLinkedServiceResponseOutput) BaseUrl() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureKeyVaultLinkedServiceResponse) interface{} { return v.BaseUrl }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o AzureKeyVaultLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v AzureKeyVaultLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o AzureKeyVaultLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureKeyVaultLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Parameters for linked service.
func (o AzureKeyVaultLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureKeyVaultLinkedServiceResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'AzureKeyVault'.
func (o AzureKeyVaultLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureKeyVaultLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Azure Key Vault secret reference.
type AzureKeyVaultSecretReference struct {
	// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
	SecretName interface{} `pulumi:"secretName"`
	// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
	SecretVersion interface{} `pulumi:"secretVersion"`
	// The Azure Key Vault linked service reference.
	Store LinkedServiceReference `pulumi:"store"`
	// Type of the secret.
	// Expected value is 'AzureKeyVaultSecret'.
	Type string `pulumi:"type"`
}

// AzureKeyVaultSecretReferenceInput is an input type that accepts AzureKeyVaultSecretReferenceArgs and AzureKeyVaultSecretReferenceOutput values.
// You can construct a concrete instance of `AzureKeyVaultSecretReferenceInput` via:
//
//          AzureKeyVaultSecretReferenceArgs{...}
type AzureKeyVaultSecretReferenceInput interface {
	pulumi.Input

	ToAzureKeyVaultSecretReferenceOutput() AzureKeyVaultSecretReferenceOutput
	ToAzureKeyVaultSecretReferenceOutputWithContext(context.Context) AzureKeyVaultSecretReferenceOutput
}

// Azure Key Vault secret reference.
type AzureKeyVaultSecretReferenceArgs struct {
	// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
	SecretName pulumi.Input `pulumi:"secretName"`
	// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
	SecretVersion pulumi.Input `pulumi:"secretVersion"`
	// The Azure Key Vault linked service reference.
	Store LinkedServiceReferenceInput `pulumi:"store"`
	// Type of the secret.
	// Expected value is 'AzureKeyVaultSecret'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureKeyVaultSecretReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureKeyVaultSecretReference)(nil)).Elem()
}

func (i AzureKeyVaultSecretReferenceArgs) ToAzureKeyVaultSecretReferenceOutput() AzureKeyVaultSecretReferenceOutput {
	return i.ToAzureKeyVaultSecretReferenceOutputWithContext(context.Background())
}

func (i AzureKeyVaultSecretReferenceArgs) ToAzureKeyVaultSecretReferenceOutputWithContext(ctx context.Context) AzureKeyVaultSecretReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureKeyVaultSecretReferenceOutput)
}

// Azure Key Vault secret reference.
type AzureKeyVaultSecretReferenceOutput struct{ *pulumi.OutputState }

func (AzureKeyVaultSecretReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureKeyVaultSecretReference)(nil)).Elem()
}

func (o AzureKeyVaultSecretReferenceOutput) ToAzureKeyVaultSecretReferenceOutput() AzureKeyVaultSecretReferenceOutput {
	return o
}

func (o AzureKeyVaultSecretReferenceOutput) ToAzureKeyVaultSecretReferenceOutputWithContext(ctx context.Context) AzureKeyVaultSecretReferenceOutput {
	return o
}

// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
func (o AzureKeyVaultSecretReferenceOutput) SecretName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureKeyVaultSecretReference) interface{} { return v.SecretName }).(pulumi.AnyOutput)
}

// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
func (o AzureKeyVaultSecretReferenceOutput) SecretVersion() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureKeyVaultSecretReference) interface{} { return v.SecretVersion }).(pulumi.AnyOutput)
}

// The Azure Key Vault linked service reference.
func (o AzureKeyVaultSecretReferenceOutput) Store() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v AzureKeyVaultSecretReference) LinkedServiceReference { return v.Store }).(LinkedServiceReferenceOutput)
}

// Type of the secret.
// Expected value is 'AzureKeyVaultSecret'.
func (o AzureKeyVaultSecretReferenceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureKeyVaultSecretReference) string { return v.Type }).(pulumi.StringOutput)
}

// Azure Key Vault secret reference.
type AzureKeyVaultSecretReferenceResponse struct {
	// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
	SecretName interface{} `pulumi:"secretName"`
	// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
	SecretVersion interface{} `pulumi:"secretVersion"`
	// The Azure Key Vault linked service reference.
	Store LinkedServiceReferenceResponse `pulumi:"store"`
	// Type of the secret.
	// Expected value is 'AzureKeyVaultSecret'.
	Type string `pulumi:"type"`
}

// AzureKeyVaultSecretReferenceResponseInput is an input type that accepts AzureKeyVaultSecretReferenceResponseArgs and AzureKeyVaultSecretReferenceResponseOutput values.
// You can construct a concrete instance of `AzureKeyVaultSecretReferenceResponseInput` via:
//
//          AzureKeyVaultSecretReferenceResponseArgs{...}
type AzureKeyVaultSecretReferenceResponseInput interface {
	pulumi.Input

	ToAzureKeyVaultSecretReferenceResponseOutput() AzureKeyVaultSecretReferenceResponseOutput
	ToAzureKeyVaultSecretReferenceResponseOutputWithContext(context.Context) AzureKeyVaultSecretReferenceResponseOutput
}

// Azure Key Vault secret reference.
type AzureKeyVaultSecretReferenceResponseArgs struct {
	// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
	SecretName pulumi.Input `pulumi:"secretName"`
	// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
	SecretVersion pulumi.Input `pulumi:"secretVersion"`
	// The Azure Key Vault linked service reference.
	Store LinkedServiceReferenceResponseInput `pulumi:"store"`
	// Type of the secret.
	// Expected value is 'AzureKeyVaultSecret'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureKeyVaultSecretReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureKeyVaultSecretReferenceResponse)(nil)).Elem()
}

func (i AzureKeyVaultSecretReferenceResponseArgs) ToAzureKeyVaultSecretReferenceResponseOutput() AzureKeyVaultSecretReferenceResponseOutput {
	return i.ToAzureKeyVaultSecretReferenceResponseOutputWithContext(context.Background())
}

func (i AzureKeyVaultSecretReferenceResponseArgs) ToAzureKeyVaultSecretReferenceResponseOutputWithContext(ctx context.Context) AzureKeyVaultSecretReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureKeyVaultSecretReferenceResponseOutput)
}

// Azure Key Vault secret reference.
type AzureKeyVaultSecretReferenceResponseOutput struct{ *pulumi.OutputState }

func (AzureKeyVaultSecretReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureKeyVaultSecretReferenceResponse)(nil)).Elem()
}

func (o AzureKeyVaultSecretReferenceResponseOutput) ToAzureKeyVaultSecretReferenceResponseOutput() AzureKeyVaultSecretReferenceResponseOutput {
	return o
}

func (o AzureKeyVaultSecretReferenceResponseOutput) ToAzureKeyVaultSecretReferenceResponseOutputWithContext(ctx context.Context) AzureKeyVaultSecretReferenceResponseOutput {
	return o
}

// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
func (o AzureKeyVaultSecretReferenceResponseOutput) SecretName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureKeyVaultSecretReferenceResponse) interface{} { return v.SecretName }).(pulumi.AnyOutput)
}

// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
func (o AzureKeyVaultSecretReferenceResponseOutput) SecretVersion() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureKeyVaultSecretReferenceResponse) interface{} { return v.SecretVersion }).(pulumi.AnyOutput)
}

// The Azure Key Vault linked service reference.
func (o AzureKeyVaultSecretReferenceResponseOutput) Store() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v AzureKeyVaultSecretReferenceResponse) LinkedServiceReferenceResponse { return v.Store }).(LinkedServiceReferenceResponseOutput)
}

// Type of the secret.
// Expected value is 'AzureKeyVaultSecret'.
func (o AzureKeyVaultSecretReferenceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureKeyVaultSecretReferenceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Azure ML Batch Execution activity.
type AzureMLBatchExecutionActivity struct {
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint. Keys must match the names of web service parameters defined in the published Azure ML web service. Values will be passed in the GlobalParameters property of the Azure ML batch execution request.
	GlobalParameters map[string]interface{} `pulumi:"globalParameters"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReference `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicy `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
	// Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Inputs to AzureMLWebServiceFile objects specifying the input Blob locations.. This information will be passed in the WebServiceInputs property of the Azure ML batch execution request.
	WebServiceInputs map[string]AzureMLWebServiceFile `pulumi:"webServiceInputs"`
	// Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Outputs to AzureMLWebServiceFile objects specifying the output Blob locations. This information will be passed in the WebServiceOutputs property of the Azure ML batch execution request.
	WebServiceOutputs map[string]AzureMLWebServiceFile `pulumi:"webServiceOutputs"`
}

// AzureMLBatchExecutionActivityInput is an input type that accepts AzureMLBatchExecutionActivityArgs and AzureMLBatchExecutionActivityOutput values.
// You can construct a concrete instance of `AzureMLBatchExecutionActivityInput` via:
//
//          AzureMLBatchExecutionActivityArgs{...}
type AzureMLBatchExecutionActivityInput interface {
	pulumi.Input

	ToAzureMLBatchExecutionActivityOutput() AzureMLBatchExecutionActivityOutput
	ToAzureMLBatchExecutionActivityOutputWithContext(context.Context) AzureMLBatchExecutionActivityOutput
}

// Azure ML Batch Execution activity.
type AzureMLBatchExecutionActivityArgs struct {
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint. Keys must match the names of web service parameters defined in the published Azure ML web service. Values will be passed in the GlobalParameters property of the Azure ML batch execution request.
	GlobalParameters pulumi.MapInput `pulumi:"globalParameters"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferencePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyPtrInput `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
	// Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Inputs to AzureMLWebServiceFile objects specifying the input Blob locations.. This information will be passed in the WebServiceInputs property of the Azure ML batch execution request.
	WebServiceInputs AzureMLWebServiceFileMapInput `pulumi:"webServiceInputs"`
	// Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Outputs to AzureMLWebServiceFile objects specifying the output Blob locations. This information will be passed in the WebServiceOutputs property of the Azure ML batch execution request.
	WebServiceOutputs AzureMLWebServiceFileMapInput `pulumi:"webServiceOutputs"`
}

func (AzureMLBatchExecutionActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMLBatchExecutionActivity)(nil)).Elem()
}

func (i AzureMLBatchExecutionActivityArgs) ToAzureMLBatchExecutionActivityOutput() AzureMLBatchExecutionActivityOutput {
	return i.ToAzureMLBatchExecutionActivityOutputWithContext(context.Background())
}

func (i AzureMLBatchExecutionActivityArgs) ToAzureMLBatchExecutionActivityOutputWithContext(ctx context.Context) AzureMLBatchExecutionActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMLBatchExecutionActivityOutput)
}

// Azure ML Batch Execution activity.
type AzureMLBatchExecutionActivityOutput struct{ *pulumi.OutputState }

func (AzureMLBatchExecutionActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMLBatchExecutionActivity)(nil)).Elem()
}

func (o AzureMLBatchExecutionActivityOutput) ToAzureMLBatchExecutionActivityOutput() AzureMLBatchExecutionActivityOutput {
	return o
}

func (o AzureMLBatchExecutionActivityOutput) ToAzureMLBatchExecutionActivityOutputWithContext(ctx context.Context) AzureMLBatchExecutionActivityOutput {
	return o
}

// Activity depends on condition.
func (o AzureMLBatchExecutionActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o AzureMLBatchExecutionActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint. Keys must match the names of web service parameters defined in the published Azure ML web service. Values will be passed in the GlobalParameters property of the Azure ML batch execution request.
func (o AzureMLBatchExecutionActivityOutput) GlobalParameters() pulumi.MapOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivity) map[string]interface{} { return v.GlobalParameters }).(pulumi.MapOutput)
}

// Linked service reference.
func (o AzureMLBatchExecutionActivityOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivity) *LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// Activity name.
func (o AzureMLBatchExecutionActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o AzureMLBatchExecutionActivityOutput) Policy() ActivityPolicyPtrOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivity) *ActivityPolicy { return v.Policy }).(ActivityPolicyPtrOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o AzureMLBatchExecutionActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivity) string { return v.Type }).(pulumi.StringOutput)
}

// Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Inputs to AzureMLWebServiceFile objects specifying the input Blob locations.. This information will be passed in the WebServiceInputs property of the Azure ML batch execution request.
func (o AzureMLBatchExecutionActivityOutput) WebServiceInputs() AzureMLWebServiceFileMapOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivity) map[string]AzureMLWebServiceFile { return v.WebServiceInputs }).(AzureMLWebServiceFileMapOutput)
}

// Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Outputs to AzureMLWebServiceFile objects specifying the output Blob locations. This information will be passed in the WebServiceOutputs property of the Azure ML batch execution request.
func (o AzureMLBatchExecutionActivityOutput) WebServiceOutputs() AzureMLWebServiceFileMapOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivity) map[string]AzureMLWebServiceFile { return v.WebServiceOutputs }).(AzureMLWebServiceFileMapOutput)
}

// Azure ML Batch Execution activity.
type AzureMLBatchExecutionActivityResponse struct {
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint. Keys must match the names of web service parameters defined in the published Azure ML web service. Values will be passed in the GlobalParameters property of the Azure ML batch execution request.
	GlobalParameters map[string]interface{} `pulumi:"globalParameters"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicyResponse `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
	// Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Inputs to AzureMLWebServiceFile objects specifying the input Blob locations.. This information will be passed in the WebServiceInputs property of the Azure ML batch execution request.
	WebServiceInputs map[string]AzureMLWebServiceFileResponse `pulumi:"webServiceInputs"`
	// Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Outputs to AzureMLWebServiceFile objects specifying the output Blob locations. This information will be passed in the WebServiceOutputs property of the Azure ML batch execution request.
	WebServiceOutputs map[string]AzureMLWebServiceFileResponse `pulumi:"webServiceOutputs"`
}

// AzureMLBatchExecutionActivityResponseInput is an input type that accepts AzureMLBatchExecutionActivityResponseArgs and AzureMLBatchExecutionActivityResponseOutput values.
// You can construct a concrete instance of `AzureMLBatchExecutionActivityResponseInput` via:
//
//          AzureMLBatchExecutionActivityResponseArgs{...}
type AzureMLBatchExecutionActivityResponseInput interface {
	pulumi.Input

	ToAzureMLBatchExecutionActivityResponseOutput() AzureMLBatchExecutionActivityResponseOutput
	ToAzureMLBatchExecutionActivityResponseOutputWithContext(context.Context) AzureMLBatchExecutionActivityResponseOutput
}

// Azure ML Batch Execution activity.
type AzureMLBatchExecutionActivityResponseArgs struct {
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint. Keys must match the names of web service parameters defined in the published Azure ML web service. Values will be passed in the GlobalParameters property of the Azure ML batch execution request.
	GlobalParameters pulumi.MapInput `pulumi:"globalParameters"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyResponsePtrInput `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
	// Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Inputs to AzureMLWebServiceFile objects specifying the input Blob locations.. This information will be passed in the WebServiceInputs property of the Azure ML batch execution request.
	WebServiceInputs AzureMLWebServiceFileResponseMapInput `pulumi:"webServiceInputs"`
	// Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Outputs to AzureMLWebServiceFile objects specifying the output Blob locations. This information will be passed in the WebServiceOutputs property of the Azure ML batch execution request.
	WebServiceOutputs AzureMLWebServiceFileResponseMapInput `pulumi:"webServiceOutputs"`
}

func (AzureMLBatchExecutionActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMLBatchExecutionActivityResponse)(nil)).Elem()
}

func (i AzureMLBatchExecutionActivityResponseArgs) ToAzureMLBatchExecutionActivityResponseOutput() AzureMLBatchExecutionActivityResponseOutput {
	return i.ToAzureMLBatchExecutionActivityResponseOutputWithContext(context.Background())
}

func (i AzureMLBatchExecutionActivityResponseArgs) ToAzureMLBatchExecutionActivityResponseOutputWithContext(ctx context.Context) AzureMLBatchExecutionActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMLBatchExecutionActivityResponseOutput)
}

// Azure ML Batch Execution activity.
type AzureMLBatchExecutionActivityResponseOutput struct{ *pulumi.OutputState }

func (AzureMLBatchExecutionActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMLBatchExecutionActivityResponse)(nil)).Elem()
}

func (o AzureMLBatchExecutionActivityResponseOutput) ToAzureMLBatchExecutionActivityResponseOutput() AzureMLBatchExecutionActivityResponseOutput {
	return o
}

func (o AzureMLBatchExecutionActivityResponseOutput) ToAzureMLBatchExecutionActivityResponseOutputWithContext(ctx context.Context) AzureMLBatchExecutionActivityResponseOutput {
	return o
}

// Activity depends on condition.
func (o AzureMLBatchExecutionActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o AzureMLBatchExecutionActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint. Keys must match the names of web service parameters defined in the published Azure ML web service. Values will be passed in the GlobalParameters property of the Azure ML batch execution request.
func (o AzureMLBatchExecutionActivityResponseOutput) GlobalParameters() pulumi.MapOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivityResponse) map[string]interface{} { return v.GlobalParameters }).(pulumi.MapOutput)
}

// Linked service reference.
func (o AzureMLBatchExecutionActivityResponseOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivityResponse) *LinkedServiceReferenceResponse {
		return v.LinkedServiceName
	}).(LinkedServiceReferenceResponsePtrOutput)
}

// Activity name.
func (o AzureMLBatchExecutionActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o AzureMLBatchExecutionActivityResponseOutput) Policy() ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivityResponse) *ActivityPolicyResponse { return v.Policy }).(ActivityPolicyResponsePtrOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o AzureMLBatchExecutionActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Inputs to AzureMLWebServiceFile objects specifying the input Blob locations.. This information will be passed in the WebServiceInputs property of the Azure ML batch execution request.
func (o AzureMLBatchExecutionActivityResponseOutput) WebServiceInputs() AzureMLWebServiceFileResponseMapOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivityResponse) map[string]AzureMLWebServiceFileResponse {
		return v.WebServiceInputs
	}).(AzureMLWebServiceFileResponseMapOutput)
}

// Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Outputs to AzureMLWebServiceFile objects specifying the output Blob locations. This information will be passed in the WebServiceOutputs property of the Azure ML batch execution request.
func (o AzureMLBatchExecutionActivityResponseOutput) WebServiceOutputs() AzureMLWebServiceFileResponseMapOutput {
	return o.ApplyT(func(v AzureMLBatchExecutionActivityResponse) map[string]AzureMLWebServiceFileResponse {
		return v.WebServiceOutputs
	}).(AzureMLWebServiceFileResponseMapOutput)
}

// Azure ML Web Service linked service.
type AzureMLLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The API key for accessing the Azure ML model endpoint.
	ApiKey interface{} `pulumi:"apiKey"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The Batch Execution REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string).
	MlEndpoint interface{} `pulumi:"mlEndpoint"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The ID of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML web service. Type: string (or Expression with resultType string).
	ServicePrincipalId interface{} `pulumi:"servicePrincipalId"`
	// The key of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML web service.
	ServicePrincipalKey interface{} `pulumi:"servicePrincipalKey"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant interface{} `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureML'.
	Type string `pulumi:"type"`
	// The Update Resource REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string).
	UpdateResourceEndpoint interface{} `pulumi:"updateResourceEndpoint"`
}

// AzureMLLinkedServiceInput is an input type that accepts AzureMLLinkedServiceArgs and AzureMLLinkedServiceOutput values.
// You can construct a concrete instance of `AzureMLLinkedServiceInput` via:
//
//          AzureMLLinkedServiceArgs{...}
type AzureMLLinkedServiceInput interface {
	pulumi.Input

	ToAzureMLLinkedServiceOutput() AzureMLLinkedServiceOutput
	ToAzureMLLinkedServiceOutputWithContext(context.Context) AzureMLLinkedServiceOutput
}

// Azure ML Web Service linked service.
type AzureMLLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The API key for accessing the Azure ML model endpoint.
	ApiKey pulumi.Input `pulumi:"apiKey"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The Batch Execution REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string).
	MlEndpoint pulumi.Input `pulumi:"mlEndpoint"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The ID of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML web service. Type: string (or Expression with resultType string).
	ServicePrincipalId pulumi.Input `pulumi:"servicePrincipalId"`
	// The key of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML web service.
	ServicePrincipalKey pulumi.Input `pulumi:"servicePrincipalKey"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant pulumi.Input `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureML'.
	Type pulumi.StringInput `pulumi:"type"`
	// The Update Resource REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string).
	UpdateResourceEndpoint pulumi.Input `pulumi:"updateResourceEndpoint"`
}

func (AzureMLLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMLLinkedService)(nil)).Elem()
}

func (i AzureMLLinkedServiceArgs) ToAzureMLLinkedServiceOutput() AzureMLLinkedServiceOutput {
	return i.ToAzureMLLinkedServiceOutputWithContext(context.Background())
}

func (i AzureMLLinkedServiceArgs) ToAzureMLLinkedServiceOutputWithContext(ctx context.Context) AzureMLLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMLLinkedServiceOutput)
}

// Azure ML Web Service linked service.
type AzureMLLinkedServiceOutput struct{ *pulumi.OutputState }

func (AzureMLLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMLLinkedService)(nil)).Elem()
}

func (o AzureMLLinkedServiceOutput) ToAzureMLLinkedServiceOutput() AzureMLLinkedServiceOutput {
	return o
}

func (o AzureMLLinkedServiceOutput) ToAzureMLLinkedServiceOutputWithContext(ctx context.Context) AzureMLLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureMLLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureMLLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The API key for accessing the Azure ML model endpoint.
func (o AzureMLLinkedServiceOutput) ApiKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLLinkedService) interface{} { return v.ApiKey }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o AzureMLLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v AzureMLLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o AzureMLLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMLLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureMLLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The Batch Execution REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string).
func (o AzureMLLinkedServiceOutput) MlEndpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLLinkedService) interface{} { return v.MlEndpoint }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureMLLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureMLLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The ID of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML web service. Type: string (or Expression with resultType string).
func (o AzureMLLinkedServiceOutput) ServicePrincipalId() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLLinkedService) interface{} { return v.ServicePrincipalId }).(pulumi.AnyOutput)
}

// The key of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML web service.
func (o AzureMLLinkedServiceOutput) ServicePrincipalKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLLinkedService) interface{} { return v.ServicePrincipalKey }).(pulumi.AnyOutput)
}

// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
func (o AzureMLLinkedServiceOutput) Tenant() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLLinkedService) interface{} { return v.Tenant }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AzureML'.
func (o AzureMLLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMLLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// The Update Resource REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string).
func (o AzureMLLinkedServiceOutput) UpdateResourceEndpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLLinkedService) interface{} { return v.UpdateResourceEndpoint }).(pulumi.AnyOutput)
}

// Azure ML Web Service linked service.
type AzureMLLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The API key for accessing the Azure ML model endpoint.
	ApiKey interface{} `pulumi:"apiKey"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The Batch Execution REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string).
	MlEndpoint interface{} `pulumi:"mlEndpoint"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The ID of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML web service. Type: string (or Expression with resultType string).
	ServicePrincipalId interface{} `pulumi:"servicePrincipalId"`
	// The key of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML web service.
	ServicePrincipalKey interface{} `pulumi:"servicePrincipalKey"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant interface{} `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureML'.
	Type string `pulumi:"type"`
	// The Update Resource REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string).
	UpdateResourceEndpoint interface{} `pulumi:"updateResourceEndpoint"`
}

// AzureMLLinkedServiceResponseInput is an input type that accepts AzureMLLinkedServiceResponseArgs and AzureMLLinkedServiceResponseOutput values.
// You can construct a concrete instance of `AzureMLLinkedServiceResponseInput` via:
//
//          AzureMLLinkedServiceResponseArgs{...}
type AzureMLLinkedServiceResponseInput interface {
	pulumi.Input

	ToAzureMLLinkedServiceResponseOutput() AzureMLLinkedServiceResponseOutput
	ToAzureMLLinkedServiceResponseOutputWithContext(context.Context) AzureMLLinkedServiceResponseOutput
}

// Azure ML Web Service linked service.
type AzureMLLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The API key for accessing the Azure ML model endpoint.
	ApiKey pulumi.Input `pulumi:"apiKey"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The Batch Execution REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string).
	MlEndpoint pulumi.Input `pulumi:"mlEndpoint"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The ID of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML web service. Type: string (or Expression with resultType string).
	ServicePrincipalId pulumi.Input `pulumi:"servicePrincipalId"`
	// The key of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML web service.
	ServicePrincipalKey pulumi.Input `pulumi:"servicePrincipalKey"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant pulumi.Input `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureML'.
	Type pulumi.StringInput `pulumi:"type"`
	// The Update Resource REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string).
	UpdateResourceEndpoint pulumi.Input `pulumi:"updateResourceEndpoint"`
}

func (AzureMLLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMLLinkedServiceResponse)(nil)).Elem()
}

func (i AzureMLLinkedServiceResponseArgs) ToAzureMLLinkedServiceResponseOutput() AzureMLLinkedServiceResponseOutput {
	return i.ToAzureMLLinkedServiceResponseOutputWithContext(context.Background())
}

func (i AzureMLLinkedServiceResponseArgs) ToAzureMLLinkedServiceResponseOutputWithContext(ctx context.Context) AzureMLLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMLLinkedServiceResponseOutput)
}

// Azure ML Web Service linked service.
type AzureMLLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (AzureMLLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMLLinkedServiceResponse)(nil)).Elem()
}

func (o AzureMLLinkedServiceResponseOutput) ToAzureMLLinkedServiceResponseOutput() AzureMLLinkedServiceResponseOutput {
	return o
}

func (o AzureMLLinkedServiceResponseOutput) ToAzureMLLinkedServiceResponseOutputWithContext(ctx context.Context) AzureMLLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureMLLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureMLLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The API key for accessing the Azure ML model endpoint.
func (o AzureMLLinkedServiceResponseOutput) ApiKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLLinkedServiceResponse) interface{} { return v.ApiKey }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o AzureMLLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v AzureMLLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o AzureMLLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMLLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureMLLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The Batch Execution REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string).
func (o AzureMLLinkedServiceResponseOutput) MlEndpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLLinkedServiceResponse) interface{} { return v.MlEndpoint }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureMLLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureMLLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The ID of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML web service. Type: string (or Expression with resultType string).
func (o AzureMLLinkedServiceResponseOutput) ServicePrincipalId() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLLinkedServiceResponse) interface{} { return v.ServicePrincipalId }).(pulumi.AnyOutput)
}

// The key of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML web service.
func (o AzureMLLinkedServiceResponseOutput) ServicePrincipalKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLLinkedServiceResponse) interface{} { return v.ServicePrincipalKey }).(pulumi.AnyOutput)
}

// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
func (o AzureMLLinkedServiceResponseOutput) Tenant() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLLinkedServiceResponse) interface{} { return v.Tenant }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AzureML'.
func (o AzureMLLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMLLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The Update Resource REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string).
func (o AzureMLLinkedServiceResponseOutput) UpdateResourceEndpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLLinkedServiceResponse) interface{} { return v.UpdateResourceEndpoint }).(pulumi.AnyOutput)
}

// Azure ML Update Resource management activity.
type AzureMLUpdateResourceActivity struct {
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReference `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicy `pulumi:"policy"`
	// The relative file path in trainedModelLinkedService to represent the .ilearner file that will be uploaded by the update operation.  Type: string (or Expression with resultType string).
	TrainedModelFilePath interface{} `pulumi:"trainedModelFilePath"`
	// Name of Azure Storage linked service holding the .ilearner file that will be uploaded by the update operation.
	TrainedModelLinkedServiceName LinkedServiceReference `pulumi:"trainedModelLinkedServiceName"`
	// Name of the Trained Model module in the Web Service experiment to be updated. Type: string (or Expression with resultType string).
	TrainedModelName interface{} `pulumi:"trainedModelName"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// AzureMLUpdateResourceActivityInput is an input type that accepts AzureMLUpdateResourceActivityArgs and AzureMLUpdateResourceActivityOutput values.
// You can construct a concrete instance of `AzureMLUpdateResourceActivityInput` via:
//
//          AzureMLUpdateResourceActivityArgs{...}
type AzureMLUpdateResourceActivityInput interface {
	pulumi.Input

	ToAzureMLUpdateResourceActivityOutput() AzureMLUpdateResourceActivityOutput
	ToAzureMLUpdateResourceActivityOutputWithContext(context.Context) AzureMLUpdateResourceActivityOutput
}

// Azure ML Update Resource management activity.
type AzureMLUpdateResourceActivityArgs struct {
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferencePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyPtrInput `pulumi:"policy"`
	// The relative file path in trainedModelLinkedService to represent the .ilearner file that will be uploaded by the update operation.  Type: string (or Expression with resultType string).
	TrainedModelFilePath pulumi.Input `pulumi:"trainedModelFilePath"`
	// Name of Azure Storage linked service holding the .ilearner file that will be uploaded by the update operation.
	TrainedModelLinkedServiceName LinkedServiceReferenceInput `pulumi:"trainedModelLinkedServiceName"`
	// Name of the Trained Model module in the Web Service experiment to be updated. Type: string (or Expression with resultType string).
	TrainedModelName pulumi.Input `pulumi:"trainedModelName"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureMLUpdateResourceActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMLUpdateResourceActivity)(nil)).Elem()
}

func (i AzureMLUpdateResourceActivityArgs) ToAzureMLUpdateResourceActivityOutput() AzureMLUpdateResourceActivityOutput {
	return i.ToAzureMLUpdateResourceActivityOutputWithContext(context.Background())
}

func (i AzureMLUpdateResourceActivityArgs) ToAzureMLUpdateResourceActivityOutputWithContext(ctx context.Context) AzureMLUpdateResourceActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMLUpdateResourceActivityOutput)
}

// Azure ML Update Resource management activity.
type AzureMLUpdateResourceActivityOutput struct{ *pulumi.OutputState }

func (AzureMLUpdateResourceActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMLUpdateResourceActivity)(nil)).Elem()
}

func (o AzureMLUpdateResourceActivityOutput) ToAzureMLUpdateResourceActivityOutput() AzureMLUpdateResourceActivityOutput {
	return o
}

func (o AzureMLUpdateResourceActivityOutput) ToAzureMLUpdateResourceActivityOutputWithContext(ctx context.Context) AzureMLUpdateResourceActivityOutput {
	return o
}

// Activity depends on condition.
func (o AzureMLUpdateResourceActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o AzureMLUpdateResourceActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o AzureMLUpdateResourceActivityOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivity) *LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// Activity name.
func (o AzureMLUpdateResourceActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o AzureMLUpdateResourceActivityOutput) Policy() ActivityPolicyPtrOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivity) *ActivityPolicy { return v.Policy }).(ActivityPolicyPtrOutput)
}

// The relative file path in trainedModelLinkedService to represent the .ilearner file that will be uploaded by the update operation.  Type: string (or Expression with resultType string).
func (o AzureMLUpdateResourceActivityOutput) TrainedModelFilePath() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivity) interface{} { return v.TrainedModelFilePath }).(pulumi.AnyOutput)
}

// Name of Azure Storage linked service holding the .ilearner file that will be uploaded by the update operation.
func (o AzureMLUpdateResourceActivityOutput) TrainedModelLinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivity) LinkedServiceReference { return v.TrainedModelLinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Name of the Trained Model module in the Web Service experiment to be updated. Type: string (or Expression with resultType string).
func (o AzureMLUpdateResourceActivityOutput) TrainedModelName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivity) interface{} { return v.TrainedModelName }).(pulumi.AnyOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o AzureMLUpdateResourceActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivity) string { return v.Type }).(pulumi.StringOutput)
}

// Azure ML Update Resource management activity.
type AzureMLUpdateResourceActivityResponse struct {
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicyResponse `pulumi:"policy"`
	// The relative file path in trainedModelLinkedService to represent the .ilearner file that will be uploaded by the update operation.  Type: string (or Expression with resultType string).
	TrainedModelFilePath interface{} `pulumi:"trainedModelFilePath"`
	// Name of Azure Storage linked service holding the .ilearner file that will be uploaded by the update operation.
	TrainedModelLinkedServiceName LinkedServiceReferenceResponse `pulumi:"trainedModelLinkedServiceName"`
	// Name of the Trained Model module in the Web Service experiment to be updated. Type: string (or Expression with resultType string).
	TrainedModelName interface{} `pulumi:"trainedModelName"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// AzureMLUpdateResourceActivityResponseInput is an input type that accepts AzureMLUpdateResourceActivityResponseArgs and AzureMLUpdateResourceActivityResponseOutput values.
// You can construct a concrete instance of `AzureMLUpdateResourceActivityResponseInput` via:
//
//          AzureMLUpdateResourceActivityResponseArgs{...}
type AzureMLUpdateResourceActivityResponseInput interface {
	pulumi.Input

	ToAzureMLUpdateResourceActivityResponseOutput() AzureMLUpdateResourceActivityResponseOutput
	ToAzureMLUpdateResourceActivityResponseOutputWithContext(context.Context) AzureMLUpdateResourceActivityResponseOutput
}

// Azure ML Update Resource management activity.
type AzureMLUpdateResourceActivityResponseArgs struct {
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyResponsePtrInput `pulumi:"policy"`
	// The relative file path in trainedModelLinkedService to represent the .ilearner file that will be uploaded by the update operation.  Type: string (or Expression with resultType string).
	TrainedModelFilePath pulumi.Input `pulumi:"trainedModelFilePath"`
	// Name of Azure Storage linked service holding the .ilearner file that will be uploaded by the update operation.
	TrainedModelLinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"trainedModelLinkedServiceName"`
	// Name of the Trained Model module in the Web Service experiment to be updated. Type: string (or Expression with resultType string).
	TrainedModelName pulumi.Input `pulumi:"trainedModelName"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureMLUpdateResourceActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMLUpdateResourceActivityResponse)(nil)).Elem()
}

func (i AzureMLUpdateResourceActivityResponseArgs) ToAzureMLUpdateResourceActivityResponseOutput() AzureMLUpdateResourceActivityResponseOutput {
	return i.ToAzureMLUpdateResourceActivityResponseOutputWithContext(context.Background())
}

func (i AzureMLUpdateResourceActivityResponseArgs) ToAzureMLUpdateResourceActivityResponseOutputWithContext(ctx context.Context) AzureMLUpdateResourceActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMLUpdateResourceActivityResponseOutput)
}

// Azure ML Update Resource management activity.
type AzureMLUpdateResourceActivityResponseOutput struct{ *pulumi.OutputState }

func (AzureMLUpdateResourceActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMLUpdateResourceActivityResponse)(nil)).Elem()
}

func (o AzureMLUpdateResourceActivityResponseOutput) ToAzureMLUpdateResourceActivityResponseOutput() AzureMLUpdateResourceActivityResponseOutput {
	return o
}

func (o AzureMLUpdateResourceActivityResponseOutput) ToAzureMLUpdateResourceActivityResponseOutputWithContext(ctx context.Context) AzureMLUpdateResourceActivityResponseOutput {
	return o
}

// Activity depends on condition.
func (o AzureMLUpdateResourceActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o AzureMLUpdateResourceActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o AzureMLUpdateResourceActivityResponseOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivityResponse) *LinkedServiceReferenceResponse {
		return v.LinkedServiceName
	}).(LinkedServiceReferenceResponsePtrOutput)
}

// Activity name.
func (o AzureMLUpdateResourceActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o AzureMLUpdateResourceActivityResponseOutput) Policy() ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivityResponse) *ActivityPolicyResponse { return v.Policy }).(ActivityPolicyResponsePtrOutput)
}

// The relative file path in trainedModelLinkedService to represent the .ilearner file that will be uploaded by the update operation.  Type: string (or Expression with resultType string).
func (o AzureMLUpdateResourceActivityResponseOutput) TrainedModelFilePath() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivityResponse) interface{} { return v.TrainedModelFilePath }).(pulumi.AnyOutput)
}

// Name of Azure Storage linked service holding the .ilearner file that will be uploaded by the update operation.
func (o AzureMLUpdateResourceActivityResponseOutput) TrainedModelLinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivityResponse) LinkedServiceReferenceResponse {
		return v.TrainedModelLinkedServiceName
	}).(LinkedServiceReferenceResponseOutput)
}

// Name of the Trained Model module in the Web Service experiment to be updated. Type: string (or Expression with resultType string).
func (o AzureMLUpdateResourceActivityResponseOutput) TrainedModelName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivityResponse) interface{} { return v.TrainedModelName }).(pulumi.AnyOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o AzureMLUpdateResourceActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMLUpdateResourceActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Azure ML WebService Input/Output file
type AzureMLWebServiceFile struct {
	// The relative file path, including container name, in the Azure Blob Storage specified by the LinkedService. Type: string (or Expression with resultType string).
	FilePath interface{} `pulumi:"filePath"`
	// Reference to an Azure Storage LinkedService, where Azure ML WebService Input/Output file located.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
}

// AzureMLWebServiceFileInput is an input type that accepts AzureMLWebServiceFileArgs and AzureMLWebServiceFileOutput values.
// You can construct a concrete instance of `AzureMLWebServiceFileInput` via:
//
//          AzureMLWebServiceFileArgs{...}
type AzureMLWebServiceFileInput interface {
	pulumi.Input

	ToAzureMLWebServiceFileOutput() AzureMLWebServiceFileOutput
	ToAzureMLWebServiceFileOutputWithContext(context.Context) AzureMLWebServiceFileOutput
}

// Azure ML WebService Input/Output file
type AzureMLWebServiceFileArgs struct {
	// The relative file path, including container name, in the Azure Blob Storage specified by the LinkedService. Type: string (or Expression with resultType string).
	FilePath pulumi.Input `pulumi:"filePath"`
	// Reference to an Azure Storage LinkedService, where Azure ML WebService Input/Output file located.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
}

func (AzureMLWebServiceFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMLWebServiceFile)(nil)).Elem()
}

func (i AzureMLWebServiceFileArgs) ToAzureMLWebServiceFileOutput() AzureMLWebServiceFileOutput {
	return i.ToAzureMLWebServiceFileOutputWithContext(context.Background())
}

func (i AzureMLWebServiceFileArgs) ToAzureMLWebServiceFileOutputWithContext(ctx context.Context) AzureMLWebServiceFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMLWebServiceFileOutput)
}

// AzureMLWebServiceFileMapInput is an input type that accepts AzureMLWebServiceFileMap and AzureMLWebServiceFileMapOutput values.
// You can construct a concrete instance of `AzureMLWebServiceFileMapInput` via:
//
//          AzureMLWebServiceFileMap{ "key": AzureMLWebServiceFileArgs{...} }
type AzureMLWebServiceFileMapInput interface {
	pulumi.Input

	ToAzureMLWebServiceFileMapOutput() AzureMLWebServiceFileMapOutput
	ToAzureMLWebServiceFileMapOutputWithContext(context.Context) AzureMLWebServiceFileMapOutput
}

type AzureMLWebServiceFileMap map[string]AzureMLWebServiceFileInput

func (AzureMLWebServiceFileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AzureMLWebServiceFile)(nil)).Elem()
}

func (i AzureMLWebServiceFileMap) ToAzureMLWebServiceFileMapOutput() AzureMLWebServiceFileMapOutput {
	return i.ToAzureMLWebServiceFileMapOutputWithContext(context.Background())
}

func (i AzureMLWebServiceFileMap) ToAzureMLWebServiceFileMapOutputWithContext(ctx context.Context) AzureMLWebServiceFileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMLWebServiceFileMapOutput)
}

// Azure ML WebService Input/Output file
type AzureMLWebServiceFileOutput struct{ *pulumi.OutputState }

func (AzureMLWebServiceFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMLWebServiceFile)(nil)).Elem()
}

func (o AzureMLWebServiceFileOutput) ToAzureMLWebServiceFileOutput() AzureMLWebServiceFileOutput {
	return o
}

func (o AzureMLWebServiceFileOutput) ToAzureMLWebServiceFileOutputWithContext(ctx context.Context) AzureMLWebServiceFileOutput {
	return o
}

// The relative file path, including container name, in the Azure Blob Storage specified by the LinkedService. Type: string (or Expression with resultType string).
func (o AzureMLWebServiceFileOutput) FilePath() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLWebServiceFile) interface{} { return v.FilePath }).(pulumi.AnyOutput)
}

// Reference to an Azure Storage LinkedService, where Azure ML WebService Input/Output file located.
func (o AzureMLWebServiceFileOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v AzureMLWebServiceFile) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

type AzureMLWebServiceFileMapOutput struct{ *pulumi.OutputState }

func (AzureMLWebServiceFileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AzureMLWebServiceFile)(nil)).Elem()
}

func (o AzureMLWebServiceFileMapOutput) ToAzureMLWebServiceFileMapOutput() AzureMLWebServiceFileMapOutput {
	return o
}

func (o AzureMLWebServiceFileMapOutput) ToAzureMLWebServiceFileMapOutputWithContext(ctx context.Context) AzureMLWebServiceFileMapOutput {
	return o
}

func (o AzureMLWebServiceFileMapOutput) MapIndex(k pulumi.StringInput) AzureMLWebServiceFileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AzureMLWebServiceFile {
		return vs[0].(map[string]AzureMLWebServiceFile)[vs[1].(string)]
	}).(AzureMLWebServiceFileOutput)
}

// Azure ML WebService Input/Output file
type AzureMLWebServiceFileResponse struct {
	// The relative file path, including container name, in the Azure Blob Storage specified by the LinkedService. Type: string (or Expression with resultType string).
	FilePath interface{} `pulumi:"filePath"`
	// Reference to an Azure Storage LinkedService, where Azure ML WebService Input/Output file located.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
}

// AzureMLWebServiceFileResponseInput is an input type that accepts AzureMLWebServiceFileResponseArgs and AzureMLWebServiceFileResponseOutput values.
// You can construct a concrete instance of `AzureMLWebServiceFileResponseInput` via:
//
//          AzureMLWebServiceFileResponseArgs{...}
type AzureMLWebServiceFileResponseInput interface {
	pulumi.Input

	ToAzureMLWebServiceFileResponseOutput() AzureMLWebServiceFileResponseOutput
	ToAzureMLWebServiceFileResponseOutputWithContext(context.Context) AzureMLWebServiceFileResponseOutput
}

// Azure ML WebService Input/Output file
type AzureMLWebServiceFileResponseArgs struct {
	// The relative file path, including container name, in the Azure Blob Storage specified by the LinkedService. Type: string (or Expression with resultType string).
	FilePath pulumi.Input `pulumi:"filePath"`
	// Reference to an Azure Storage LinkedService, where Azure ML WebService Input/Output file located.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
}

func (AzureMLWebServiceFileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMLWebServiceFileResponse)(nil)).Elem()
}

func (i AzureMLWebServiceFileResponseArgs) ToAzureMLWebServiceFileResponseOutput() AzureMLWebServiceFileResponseOutput {
	return i.ToAzureMLWebServiceFileResponseOutputWithContext(context.Background())
}

func (i AzureMLWebServiceFileResponseArgs) ToAzureMLWebServiceFileResponseOutputWithContext(ctx context.Context) AzureMLWebServiceFileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMLWebServiceFileResponseOutput)
}

// AzureMLWebServiceFileResponseMapInput is an input type that accepts AzureMLWebServiceFileResponseMap and AzureMLWebServiceFileResponseMapOutput values.
// You can construct a concrete instance of `AzureMLWebServiceFileResponseMapInput` via:
//
//          AzureMLWebServiceFileResponseMap{ "key": AzureMLWebServiceFileResponseArgs{...} }
type AzureMLWebServiceFileResponseMapInput interface {
	pulumi.Input

	ToAzureMLWebServiceFileResponseMapOutput() AzureMLWebServiceFileResponseMapOutput
	ToAzureMLWebServiceFileResponseMapOutputWithContext(context.Context) AzureMLWebServiceFileResponseMapOutput
}

type AzureMLWebServiceFileResponseMap map[string]AzureMLWebServiceFileResponseInput

func (AzureMLWebServiceFileResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AzureMLWebServiceFileResponse)(nil)).Elem()
}

func (i AzureMLWebServiceFileResponseMap) ToAzureMLWebServiceFileResponseMapOutput() AzureMLWebServiceFileResponseMapOutput {
	return i.ToAzureMLWebServiceFileResponseMapOutputWithContext(context.Background())
}

func (i AzureMLWebServiceFileResponseMap) ToAzureMLWebServiceFileResponseMapOutputWithContext(ctx context.Context) AzureMLWebServiceFileResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMLWebServiceFileResponseMapOutput)
}

// Azure ML WebService Input/Output file
type AzureMLWebServiceFileResponseOutput struct{ *pulumi.OutputState }

func (AzureMLWebServiceFileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMLWebServiceFileResponse)(nil)).Elem()
}

func (o AzureMLWebServiceFileResponseOutput) ToAzureMLWebServiceFileResponseOutput() AzureMLWebServiceFileResponseOutput {
	return o
}

func (o AzureMLWebServiceFileResponseOutput) ToAzureMLWebServiceFileResponseOutputWithContext(ctx context.Context) AzureMLWebServiceFileResponseOutput {
	return o
}

// The relative file path, including container name, in the Azure Blob Storage specified by the LinkedService. Type: string (or Expression with resultType string).
func (o AzureMLWebServiceFileResponseOutput) FilePath() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMLWebServiceFileResponse) interface{} { return v.FilePath }).(pulumi.AnyOutput)
}

// Reference to an Azure Storage LinkedService, where Azure ML WebService Input/Output file located.
func (o AzureMLWebServiceFileResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v AzureMLWebServiceFileResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

type AzureMLWebServiceFileResponseMapOutput struct{ *pulumi.OutputState }

func (AzureMLWebServiceFileResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AzureMLWebServiceFileResponse)(nil)).Elem()
}

func (o AzureMLWebServiceFileResponseMapOutput) ToAzureMLWebServiceFileResponseMapOutput() AzureMLWebServiceFileResponseMapOutput {
	return o
}

func (o AzureMLWebServiceFileResponseMapOutput) ToAzureMLWebServiceFileResponseMapOutputWithContext(ctx context.Context) AzureMLWebServiceFileResponseMapOutput {
	return o
}

func (o AzureMLWebServiceFileResponseMapOutput) MapIndex(k pulumi.StringInput) AzureMLWebServiceFileResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AzureMLWebServiceFileResponse {
		return vs[0].(map[string]AzureMLWebServiceFileResponse)[vs[1].(string)]
	}).(AzureMLWebServiceFileResponseOutput)
}

// Azure MySQL database linked service.
type AzureMySqlLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzureMySql'.
	Type string `pulumi:"type"`
}

// AzureMySqlLinkedServiceInput is an input type that accepts AzureMySqlLinkedServiceArgs and AzureMySqlLinkedServiceOutput values.
// You can construct a concrete instance of `AzureMySqlLinkedServiceInput` via:
//
//          AzureMySqlLinkedServiceArgs{...}
type AzureMySqlLinkedServiceInput interface {
	pulumi.Input

	ToAzureMySqlLinkedServiceOutput() AzureMySqlLinkedServiceOutput
	ToAzureMySqlLinkedServiceOutputWithContext(context.Context) AzureMySqlLinkedServiceOutput
}

// Azure MySQL database linked service.
type AzureMySqlLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzureMySql'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureMySqlLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMySqlLinkedService)(nil)).Elem()
}

func (i AzureMySqlLinkedServiceArgs) ToAzureMySqlLinkedServiceOutput() AzureMySqlLinkedServiceOutput {
	return i.ToAzureMySqlLinkedServiceOutputWithContext(context.Background())
}

func (i AzureMySqlLinkedServiceArgs) ToAzureMySqlLinkedServiceOutputWithContext(ctx context.Context) AzureMySqlLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMySqlLinkedServiceOutput)
}

// Azure MySQL database linked service.
type AzureMySqlLinkedServiceOutput struct{ *pulumi.OutputState }

func (AzureMySqlLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMySqlLinkedService)(nil)).Elem()
}

func (o AzureMySqlLinkedServiceOutput) ToAzureMySqlLinkedServiceOutput() AzureMySqlLinkedServiceOutput {
	return o
}

func (o AzureMySqlLinkedServiceOutput) ToAzureMySqlLinkedServiceOutputWithContext(ctx context.Context) AzureMySqlLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureMySqlLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureMySqlLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzureMySqlLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v AzureMySqlLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o AzureMySqlLinkedServiceOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMySqlLinkedService) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o AzureMySqlLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureMySqlLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMySqlLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureMySqlLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureMySqlLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'AzureMySql'.
func (o AzureMySqlLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMySqlLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Azure MySQL database linked service.
type AzureMySqlLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzureMySql'.
	Type string `pulumi:"type"`
}

// AzureMySqlLinkedServiceResponseInput is an input type that accepts AzureMySqlLinkedServiceResponseArgs and AzureMySqlLinkedServiceResponseOutput values.
// You can construct a concrete instance of `AzureMySqlLinkedServiceResponseInput` via:
//
//          AzureMySqlLinkedServiceResponseArgs{...}
type AzureMySqlLinkedServiceResponseInput interface {
	pulumi.Input

	ToAzureMySqlLinkedServiceResponseOutput() AzureMySqlLinkedServiceResponseOutput
	ToAzureMySqlLinkedServiceResponseOutputWithContext(context.Context) AzureMySqlLinkedServiceResponseOutput
}

// Azure MySQL database linked service.
type AzureMySqlLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzureMySql'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureMySqlLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMySqlLinkedServiceResponse)(nil)).Elem()
}

func (i AzureMySqlLinkedServiceResponseArgs) ToAzureMySqlLinkedServiceResponseOutput() AzureMySqlLinkedServiceResponseOutput {
	return i.ToAzureMySqlLinkedServiceResponseOutputWithContext(context.Background())
}

func (i AzureMySqlLinkedServiceResponseArgs) ToAzureMySqlLinkedServiceResponseOutputWithContext(ctx context.Context) AzureMySqlLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMySqlLinkedServiceResponseOutput)
}

// Azure MySQL database linked service.
type AzureMySqlLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (AzureMySqlLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMySqlLinkedServiceResponse)(nil)).Elem()
}

func (o AzureMySqlLinkedServiceResponseOutput) ToAzureMySqlLinkedServiceResponseOutput() AzureMySqlLinkedServiceResponseOutput {
	return o
}

func (o AzureMySqlLinkedServiceResponseOutput) ToAzureMySqlLinkedServiceResponseOutputWithContext(ctx context.Context) AzureMySqlLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureMySqlLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureMySqlLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzureMySqlLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v AzureMySqlLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o AzureMySqlLinkedServiceResponseOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMySqlLinkedServiceResponse) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o AzureMySqlLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureMySqlLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMySqlLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureMySqlLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureMySqlLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'AzureMySql'.
func (o AzureMySqlLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMySqlLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Azure MySQL source.
type AzureMySqlSource struct {
	// Database query. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AzureMySqlSource'.
	Type string `pulumi:"type"`
}

// AzureMySqlSourceInput is an input type that accepts AzureMySqlSourceArgs and AzureMySqlSourceOutput values.
// You can construct a concrete instance of `AzureMySqlSourceInput` via:
//
//          AzureMySqlSourceArgs{...}
type AzureMySqlSourceInput interface {
	pulumi.Input

	ToAzureMySqlSourceOutput() AzureMySqlSourceOutput
	ToAzureMySqlSourceOutputWithContext(context.Context) AzureMySqlSourceOutput
}

// A copy activity Azure MySQL source.
type AzureMySqlSourceArgs struct {
	// Database query. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AzureMySqlSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureMySqlSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMySqlSource)(nil)).Elem()
}

func (i AzureMySqlSourceArgs) ToAzureMySqlSourceOutput() AzureMySqlSourceOutput {
	return i.ToAzureMySqlSourceOutputWithContext(context.Background())
}

func (i AzureMySqlSourceArgs) ToAzureMySqlSourceOutputWithContext(ctx context.Context) AzureMySqlSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMySqlSourceOutput)
}

// A copy activity Azure MySQL source.
type AzureMySqlSourceOutput struct{ *pulumi.OutputState }

func (AzureMySqlSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMySqlSource)(nil)).Elem()
}

func (o AzureMySqlSourceOutput) ToAzureMySqlSourceOutput() AzureMySqlSourceOutput {
	return o
}

func (o AzureMySqlSourceOutput) ToAzureMySqlSourceOutputWithContext(ctx context.Context) AzureMySqlSourceOutput {
	return o
}

// Database query. Type: string (or Expression with resultType string).
func (o AzureMySqlSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMySqlSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o AzureMySqlSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMySqlSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureMySqlSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMySqlSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'AzureMySqlSource'.
func (o AzureMySqlSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMySqlSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Azure MySQL source.
type AzureMySqlSourceResponse struct {
	// Database query. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AzureMySqlSource'.
	Type string `pulumi:"type"`
}

// AzureMySqlSourceResponseInput is an input type that accepts AzureMySqlSourceResponseArgs and AzureMySqlSourceResponseOutput values.
// You can construct a concrete instance of `AzureMySqlSourceResponseInput` via:
//
//          AzureMySqlSourceResponseArgs{...}
type AzureMySqlSourceResponseInput interface {
	pulumi.Input

	ToAzureMySqlSourceResponseOutput() AzureMySqlSourceResponseOutput
	ToAzureMySqlSourceResponseOutputWithContext(context.Context) AzureMySqlSourceResponseOutput
}

// A copy activity Azure MySQL source.
type AzureMySqlSourceResponseArgs struct {
	// Database query. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AzureMySqlSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureMySqlSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMySqlSourceResponse)(nil)).Elem()
}

func (i AzureMySqlSourceResponseArgs) ToAzureMySqlSourceResponseOutput() AzureMySqlSourceResponseOutput {
	return i.ToAzureMySqlSourceResponseOutputWithContext(context.Background())
}

func (i AzureMySqlSourceResponseArgs) ToAzureMySqlSourceResponseOutputWithContext(ctx context.Context) AzureMySqlSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMySqlSourceResponseOutput)
}

// A copy activity Azure MySQL source.
type AzureMySqlSourceResponseOutput struct{ *pulumi.OutputState }

func (AzureMySqlSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMySqlSourceResponse)(nil)).Elem()
}

func (o AzureMySqlSourceResponseOutput) ToAzureMySqlSourceResponseOutput() AzureMySqlSourceResponseOutput {
	return o
}

func (o AzureMySqlSourceResponseOutput) ToAzureMySqlSourceResponseOutputWithContext(ctx context.Context) AzureMySqlSourceResponseOutput {
	return o
}

// Database query. Type: string (or Expression with resultType string).
func (o AzureMySqlSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMySqlSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o AzureMySqlSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMySqlSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureMySqlSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMySqlSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'AzureMySqlSource'.
func (o AzureMySqlSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMySqlSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The Azure MySQL database dataset.
type AzureMySqlTableDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The Azure MySQL database table name. Type: string (or Expression with resultType string).
	TableName interface{} `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'AzureMySqlTable'.
	Type string `pulumi:"type"`
}

// AzureMySqlTableDatasetInput is an input type that accepts AzureMySqlTableDatasetArgs and AzureMySqlTableDatasetOutput values.
// You can construct a concrete instance of `AzureMySqlTableDatasetInput` via:
//
//          AzureMySqlTableDatasetArgs{...}
type AzureMySqlTableDatasetInput interface {
	pulumi.Input

	ToAzureMySqlTableDatasetOutput() AzureMySqlTableDatasetOutput
	ToAzureMySqlTableDatasetOutputWithContext(context.Context) AzureMySqlTableDatasetOutput
}

// The Azure MySQL database dataset.
type AzureMySqlTableDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The Azure MySQL database table name. Type: string (or Expression with resultType string).
	TableName pulumi.Input `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'AzureMySqlTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureMySqlTableDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMySqlTableDataset)(nil)).Elem()
}

func (i AzureMySqlTableDatasetArgs) ToAzureMySqlTableDatasetOutput() AzureMySqlTableDatasetOutput {
	return i.ToAzureMySqlTableDatasetOutputWithContext(context.Background())
}

func (i AzureMySqlTableDatasetArgs) ToAzureMySqlTableDatasetOutputWithContext(ctx context.Context) AzureMySqlTableDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMySqlTableDatasetOutput)
}

// The Azure MySQL database dataset.
type AzureMySqlTableDatasetOutput struct{ *pulumi.OutputState }

func (AzureMySqlTableDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMySqlTableDataset)(nil)).Elem()
}

func (o AzureMySqlTableDatasetOutput) ToAzureMySqlTableDatasetOutput() AzureMySqlTableDatasetOutput {
	return o
}

func (o AzureMySqlTableDatasetOutput) ToAzureMySqlTableDatasetOutputWithContext(ctx context.Context) AzureMySqlTableDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureMySqlTableDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureMySqlTableDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o AzureMySqlTableDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlTableDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o AzureMySqlTableDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v AzureMySqlTableDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o AzureMySqlTableDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureMySqlTableDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AzureMySqlTableDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMySqlTableDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The Azure MySQL database table name. Type: string (or Expression with resultType string).
func (o AzureMySqlTableDatasetOutput) TableName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMySqlTableDataset) interface{} { return v.TableName }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AzureMySqlTable'.
func (o AzureMySqlTableDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMySqlTableDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The Azure MySQL database dataset.
type AzureMySqlTableDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The Azure MySQL database table name. Type: string (or Expression with resultType string).
	TableName interface{} `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'AzureMySqlTable'.
	Type string `pulumi:"type"`
}

// AzureMySqlTableDatasetResponseInput is an input type that accepts AzureMySqlTableDatasetResponseArgs and AzureMySqlTableDatasetResponseOutput values.
// You can construct a concrete instance of `AzureMySqlTableDatasetResponseInput` via:
//
//          AzureMySqlTableDatasetResponseArgs{...}
type AzureMySqlTableDatasetResponseInput interface {
	pulumi.Input

	ToAzureMySqlTableDatasetResponseOutput() AzureMySqlTableDatasetResponseOutput
	ToAzureMySqlTableDatasetResponseOutputWithContext(context.Context) AzureMySqlTableDatasetResponseOutput
}

// The Azure MySQL database dataset.
type AzureMySqlTableDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The Azure MySQL database table name. Type: string (or Expression with resultType string).
	TableName pulumi.Input `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'AzureMySqlTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureMySqlTableDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMySqlTableDatasetResponse)(nil)).Elem()
}

func (i AzureMySqlTableDatasetResponseArgs) ToAzureMySqlTableDatasetResponseOutput() AzureMySqlTableDatasetResponseOutput {
	return i.ToAzureMySqlTableDatasetResponseOutputWithContext(context.Background())
}

func (i AzureMySqlTableDatasetResponseArgs) ToAzureMySqlTableDatasetResponseOutputWithContext(ctx context.Context) AzureMySqlTableDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMySqlTableDatasetResponseOutput)
}

// The Azure MySQL database dataset.
type AzureMySqlTableDatasetResponseOutput struct{ *pulumi.OutputState }

func (AzureMySqlTableDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMySqlTableDatasetResponse)(nil)).Elem()
}

func (o AzureMySqlTableDatasetResponseOutput) ToAzureMySqlTableDatasetResponseOutput() AzureMySqlTableDatasetResponseOutput {
	return o
}

func (o AzureMySqlTableDatasetResponseOutput) ToAzureMySqlTableDatasetResponseOutputWithContext(ctx context.Context) AzureMySqlTableDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureMySqlTableDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureMySqlTableDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o AzureMySqlTableDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlTableDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o AzureMySqlTableDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v AzureMySqlTableDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o AzureMySqlTableDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureMySqlTableDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AzureMySqlTableDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMySqlTableDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The Azure MySQL database table name. Type: string (or Expression with resultType string).
func (o AzureMySqlTableDatasetResponseOutput) TableName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureMySqlTableDatasetResponse) interface{} { return v.TableName }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AzureMySqlTable'.
func (o AzureMySqlTableDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMySqlTableDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Azure PostgreSQL linked service.
type AzurePostgreSqlLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzurePostgreSql'.
	Type string `pulumi:"type"`
}

// AzurePostgreSqlLinkedServiceInput is an input type that accepts AzurePostgreSqlLinkedServiceArgs and AzurePostgreSqlLinkedServiceOutput values.
// You can construct a concrete instance of `AzurePostgreSqlLinkedServiceInput` via:
//
//          AzurePostgreSqlLinkedServiceArgs{...}
type AzurePostgreSqlLinkedServiceInput interface {
	pulumi.Input

	ToAzurePostgreSqlLinkedServiceOutput() AzurePostgreSqlLinkedServiceOutput
	ToAzurePostgreSqlLinkedServiceOutputWithContext(context.Context) AzurePostgreSqlLinkedServiceOutput
}

// Azure PostgreSQL linked service.
type AzurePostgreSqlLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzurePostgreSql'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzurePostgreSqlLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePostgreSqlLinkedService)(nil)).Elem()
}

func (i AzurePostgreSqlLinkedServiceArgs) ToAzurePostgreSqlLinkedServiceOutput() AzurePostgreSqlLinkedServiceOutput {
	return i.ToAzurePostgreSqlLinkedServiceOutputWithContext(context.Background())
}

func (i AzurePostgreSqlLinkedServiceArgs) ToAzurePostgreSqlLinkedServiceOutputWithContext(ctx context.Context) AzurePostgreSqlLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzurePostgreSqlLinkedServiceOutput)
}

// Azure PostgreSQL linked service.
type AzurePostgreSqlLinkedServiceOutput struct{ *pulumi.OutputState }

func (AzurePostgreSqlLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePostgreSqlLinkedService)(nil)).Elem()
}

func (o AzurePostgreSqlLinkedServiceOutput) ToAzurePostgreSqlLinkedServiceOutput() AzurePostgreSqlLinkedServiceOutput {
	return o
}

func (o AzurePostgreSqlLinkedServiceOutput) ToAzurePostgreSqlLinkedServiceOutputWithContext(ctx context.Context) AzurePostgreSqlLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzurePostgreSqlLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzurePostgreSqlLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzurePostgreSqlLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o AzurePostgreSqlLinkedServiceOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v AzurePostgreSqlLinkedService) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o AzurePostgreSqlLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzurePostgreSqlLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzurePostgreSqlLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzurePostgreSqlLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzurePostgreSqlLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'AzurePostgreSql'.
func (o AzurePostgreSqlLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzurePostgreSqlLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Azure PostgreSQL linked service.
type AzurePostgreSqlLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzurePostgreSql'.
	Type string `pulumi:"type"`
}

// AzurePostgreSqlLinkedServiceResponseInput is an input type that accepts AzurePostgreSqlLinkedServiceResponseArgs and AzurePostgreSqlLinkedServiceResponseOutput values.
// You can construct a concrete instance of `AzurePostgreSqlLinkedServiceResponseInput` via:
//
//          AzurePostgreSqlLinkedServiceResponseArgs{...}
type AzurePostgreSqlLinkedServiceResponseInput interface {
	pulumi.Input

	ToAzurePostgreSqlLinkedServiceResponseOutput() AzurePostgreSqlLinkedServiceResponseOutput
	ToAzurePostgreSqlLinkedServiceResponseOutputWithContext(context.Context) AzurePostgreSqlLinkedServiceResponseOutput
}

// Azure PostgreSQL linked service.
type AzurePostgreSqlLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzurePostgreSql'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzurePostgreSqlLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePostgreSqlLinkedServiceResponse)(nil)).Elem()
}

func (i AzurePostgreSqlLinkedServiceResponseArgs) ToAzurePostgreSqlLinkedServiceResponseOutput() AzurePostgreSqlLinkedServiceResponseOutput {
	return i.ToAzurePostgreSqlLinkedServiceResponseOutputWithContext(context.Background())
}

func (i AzurePostgreSqlLinkedServiceResponseArgs) ToAzurePostgreSqlLinkedServiceResponseOutputWithContext(ctx context.Context) AzurePostgreSqlLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzurePostgreSqlLinkedServiceResponseOutput)
}

// Azure PostgreSQL linked service.
type AzurePostgreSqlLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (AzurePostgreSqlLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePostgreSqlLinkedServiceResponse)(nil)).Elem()
}

func (o AzurePostgreSqlLinkedServiceResponseOutput) ToAzurePostgreSqlLinkedServiceResponseOutput() AzurePostgreSqlLinkedServiceResponseOutput {
	return o
}

func (o AzurePostgreSqlLinkedServiceResponseOutput) ToAzurePostgreSqlLinkedServiceResponseOutputWithContext(ctx context.Context) AzurePostgreSqlLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzurePostgreSqlLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzurePostgreSqlLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzurePostgreSqlLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o AzurePostgreSqlLinkedServiceResponseOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v AzurePostgreSqlLinkedServiceResponse) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o AzurePostgreSqlLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzurePostgreSqlLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzurePostgreSqlLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzurePostgreSqlLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzurePostgreSqlLinkedServiceResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'AzurePostgreSql'.
func (o AzurePostgreSqlLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzurePostgreSqlLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Azure PostgreSQL source.
type AzurePostgreSqlSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AzurePostgreSqlSource'.
	Type string `pulumi:"type"`
}

// AzurePostgreSqlSourceInput is an input type that accepts AzurePostgreSqlSourceArgs and AzurePostgreSqlSourceOutput values.
// You can construct a concrete instance of `AzurePostgreSqlSourceInput` via:
//
//          AzurePostgreSqlSourceArgs{...}
type AzurePostgreSqlSourceInput interface {
	pulumi.Input

	ToAzurePostgreSqlSourceOutput() AzurePostgreSqlSourceOutput
	ToAzurePostgreSqlSourceOutputWithContext(context.Context) AzurePostgreSqlSourceOutput
}

// A copy activity Azure PostgreSQL source.
type AzurePostgreSqlSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AzurePostgreSqlSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzurePostgreSqlSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePostgreSqlSource)(nil)).Elem()
}

func (i AzurePostgreSqlSourceArgs) ToAzurePostgreSqlSourceOutput() AzurePostgreSqlSourceOutput {
	return i.ToAzurePostgreSqlSourceOutputWithContext(context.Background())
}

func (i AzurePostgreSqlSourceArgs) ToAzurePostgreSqlSourceOutputWithContext(ctx context.Context) AzurePostgreSqlSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzurePostgreSqlSourceOutput)
}

// A copy activity Azure PostgreSQL source.
type AzurePostgreSqlSourceOutput struct{ *pulumi.OutputState }

func (AzurePostgreSqlSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePostgreSqlSource)(nil)).Elem()
}

func (o AzurePostgreSqlSourceOutput) ToAzurePostgreSqlSourceOutput() AzurePostgreSqlSourceOutput {
	return o
}

func (o AzurePostgreSqlSourceOutput) ToAzurePostgreSqlSourceOutputWithContext(ctx context.Context) AzurePostgreSqlSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o AzurePostgreSqlSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v AzurePostgreSqlSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o AzurePostgreSqlSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AzurePostgreSqlSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzurePostgreSqlSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AzurePostgreSqlSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'AzurePostgreSqlSource'.
func (o AzurePostgreSqlSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzurePostgreSqlSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Azure PostgreSQL source.
type AzurePostgreSqlSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AzurePostgreSqlSource'.
	Type string `pulumi:"type"`
}

// AzurePostgreSqlSourceResponseInput is an input type that accepts AzurePostgreSqlSourceResponseArgs and AzurePostgreSqlSourceResponseOutput values.
// You can construct a concrete instance of `AzurePostgreSqlSourceResponseInput` via:
//
//          AzurePostgreSqlSourceResponseArgs{...}
type AzurePostgreSqlSourceResponseInput interface {
	pulumi.Input

	ToAzurePostgreSqlSourceResponseOutput() AzurePostgreSqlSourceResponseOutput
	ToAzurePostgreSqlSourceResponseOutputWithContext(context.Context) AzurePostgreSqlSourceResponseOutput
}

// A copy activity Azure PostgreSQL source.
type AzurePostgreSqlSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AzurePostgreSqlSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzurePostgreSqlSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePostgreSqlSourceResponse)(nil)).Elem()
}

func (i AzurePostgreSqlSourceResponseArgs) ToAzurePostgreSqlSourceResponseOutput() AzurePostgreSqlSourceResponseOutput {
	return i.ToAzurePostgreSqlSourceResponseOutputWithContext(context.Background())
}

func (i AzurePostgreSqlSourceResponseArgs) ToAzurePostgreSqlSourceResponseOutputWithContext(ctx context.Context) AzurePostgreSqlSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzurePostgreSqlSourceResponseOutput)
}

// A copy activity Azure PostgreSQL source.
type AzurePostgreSqlSourceResponseOutput struct{ *pulumi.OutputState }

func (AzurePostgreSqlSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePostgreSqlSourceResponse)(nil)).Elem()
}

func (o AzurePostgreSqlSourceResponseOutput) ToAzurePostgreSqlSourceResponseOutput() AzurePostgreSqlSourceResponseOutput {
	return o
}

func (o AzurePostgreSqlSourceResponseOutput) ToAzurePostgreSqlSourceResponseOutputWithContext(ctx context.Context) AzurePostgreSqlSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o AzurePostgreSqlSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v AzurePostgreSqlSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o AzurePostgreSqlSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AzurePostgreSqlSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzurePostgreSqlSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AzurePostgreSqlSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'AzurePostgreSqlSource'.
func (o AzurePostgreSqlSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzurePostgreSqlSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Azure PostgreSQL dataset.
type AzurePostgreSqlTableDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AzurePostgreSqlTable'.
	Type string `pulumi:"type"`
}

// AzurePostgreSqlTableDatasetInput is an input type that accepts AzurePostgreSqlTableDatasetArgs and AzurePostgreSqlTableDatasetOutput values.
// You can construct a concrete instance of `AzurePostgreSqlTableDatasetInput` via:
//
//          AzurePostgreSqlTableDatasetArgs{...}
type AzurePostgreSqlTableDatasetInput interface {
	pulumi.Input

	ToAzurePostgreSqlTableDatasetOutput() AzurePostgreSqlTableDatasetOutput
	ToAzurePostgreSqlTableDatasetOutputWithContext(context.Context) AzurePostgreSqlTableDatasetOutput
}

// Azure PostgreSQL dataset.
type AzurePostgreSqlTableDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AzurePostgreSqlTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzurePostgreSqlTableDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePostgreSqlTableDataset)(nil)).Elem()
}

func (i AzurePostgreSqlTableDatasetArgs) ToAzurePostgreSqlTableDatasetOutput() AzurePostgreSqlTableDatasetOutput {
	return i.ToAzurePostgreSqlTableDatasetOutputWithContext(context.Background())
}

func (i AzurePostgreSqlTableDatasetArgs) ToAzurePostgreSqlTableDatasetOutputWithContext(ctx context.Context) AzurePostgreSqlTableDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzurePostgreSqlTableDatasetOutput)
}

// Azure PostgreSQL dataset.
type AzurePostgreSqlTableDatasetOutput struct{ *pulumi.OutputState }

func (AzurePostgreSqlTableDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePostgreSqlTableDataset)(nil)).Elem()
}

func (o AzurePostgreSqlTableDatasetOutput) ToAzurePostgreSqlTableDatasetOutput() AzurePostgreSqlTableDatasetOutput {
	return o
}

func (o AzurePostgreSqlTableDatasetOutput) ToAzurePostgreSqlTableDatasetOutputWithContext(ctx context.Context) AzurePostgreSqlTableDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzurePostgreSqlTableDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzurePostgreSqlTableDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o AzurePostgreSqlTableDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlTableDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o AzurePostgreSqlTableDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v AzurePostgreSqlTableDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o AzurePostgreSqlTableDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzurePostgreSqlTableDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AzurePostgreSqlTableDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AzurePostgreSqlTableDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AzurePostgreSqlTable'.
func (o AzurePostgreSqlTableDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzurePostgreSqlTableDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Azure PostgreSQL dataset.
type AzurePostgreSqlTableDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AzurePostgreSqlTable'.
	Type string `pulumi:"type"`
}

// AzurePostgreSqlTableDatasetResponseInput is an input type that accepts AzurePostgreSqlTableDatasetResponseArgs and AzurePostgreSqlTableDatasetResponseOutput values.
// You can construct a concrete instance of `AzurePostgreSqlTableDatasetResponseInput` via:
//
//          AzurePostgreSqlTableDatasetResponseArgs{...}
type AzurePostgreSqlTableDatasetResponseInput interface {
	pulumi.Input

	ToAzurePostgreSqlTableDatasetResponseOutput() AzurePostgreSqlTableDatasetResponseOutput
	ToAzurePostgreSqlTableDatasetResponseOutputWithContext(context.Context) AzurePostgreSqlTableDatasetResponseOutput
}

// Azure PostgreSQL dataset.
type AzurePostgreSqlTableDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AzurePostgreSqlTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzurePostgreSqlTableDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePostgreSqlTableDatasetResponse)(nil)).Elem()
}

func (i AzurePostgreSqlTableDatasetResponseArgs) ToAzurePostgreSqlTableDatasetResponseOutput() AzurePostgreSqlTableDatasetResponseOutput {
	return i.ToAzurePostgreSqlTableDatasetResponseOutputWithContext(context.Background())
}

func (i AzurePostgreSqlTableDatasetResponseArgs) ToAzurePostgreSqlTableDatasetResponseOutputWithContext(ctx context.Context) AzurePostgreSqlTableDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzurePostgreSqlTableDatasetResponseOutput)
}

// Azure PostgreSQL dataset.
type AzurePostgreSqlTableDatasetResponseOutput struct{ *pulumi.OutputState }

func (AzurePostgreSqlTableDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePostgreSqlTableDatasetResponse)(nil)).Elem()
}

func (o AzurePostgreSqlTableDatasetResponseOutput) ToAzurePostgreSqlTableDatasetResponseOutput() AzurePostgreSqlTableDatasetResponseOutput {
	return o
}

func (o AzurePostgreSqlTableDatasetResponseOutput) ToAzurePostgreSqlTableDatasetResponseOutputWithContext(ctx context.Context) AzurePostgreSqlTableDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzurePostgreSqlTableDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzurePostgreSqlTableDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o AzurePostgreSqlTableDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlTableDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o AzurePostgreSqlTableDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v AzurePostgreSqlTableDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o AzurePostgreSqlTableDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzurePostgreSqlTableDatasetResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AzurePostgreSqlTableDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AzurePostgreSqlTableDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AzurePostgreSqlTable'.
func (o AzurePostgreSqlTableDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzurePostgreSqlTableDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Azure Queue sink.
type AzureQueueSink struct {
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'AzureQueueSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// AzureQueueSinkInput is an input type that accepts AzureQueueSinkArgs and AzureQueueSinkOutput values.
// You can construct a concrete instance of `AzureQueueSinkInput` via:
//
//          AzureQueueSinkArgs{...}
type AzureQueueSinkInput interface {
	pulumi.Input

	ToAzureQueueSinkOutput() AzureQueueSinkOutput
	ToAzureQueueSinkOutputWithContext(context.Context) AzureQueueSinkOutput
}

// A copy activity Azure Queue sink.
type AzureQueueSinkArgs struct {
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'AzureQueueSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (AzureQueueSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureQueueSink)(nil)).Elem()
}

func (i AzureQueueSinkArgs) ToAzureQueueSinkOutput() AzureQueueSinkOutput {
	return i.ToAzureQueueSinkOutputWithContext(context.Background())
}

func (i AzureQueueSinkArgs) ToAzureQueueSinkOutputWithContext(ctx context.Context) AzureQueueSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureQueueSinkOutput)
}

// A copy activity Azure Queue sink.
type AzureQueueSinkOutput struct{ *pulumi.OutputState }

func (AzureQueueSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureQueueSink)(nil)).Elem()
}

func (o AzureQueueSinkOutput) ToAzureQueueSinkOutput() AzureQueueSinkOutput {
	return o
}

func (o AzureQueueSinkOutput) ToAzureQueueSinkOutputWithContext(ctx context.Context) AzureQueueSinkOutput {
	return o
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o AzureQueueSinkOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureQueueSink) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureQueueSinkOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureQueueSink) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'AzureQueueSink'.
func (o AzureQueueSinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureQueueSink) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o AzureQueueSinkOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureQueueSink) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureQueueSinkOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureQueueSink) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity Azure Queue sink.
type AzureQueueSinkResponse struct {
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'AzureQueueSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// AzureQueueSinkResponseInput is an input type that accepts AzureQueueSinkResponseArgs and AzureQueueSinkResponseOutput values.
// You can construct a concrete instance of `AzureQueueSinkResponseInput` via:
//
//          AzureQueueSinkResponseArgs{...}
type AzureQueueSinkResponseInput interface {
	pulumi.Input

	ToAzureQueueSinkResponseOutput() AzureQueueSinkResponseOutput
	ToAzureQueueSinkResponseOutputWithContext(context.Context) AzureQueueSinkResponseOutput
}

// A copy activity Azure Queue sink.
type AzureQueueSinkResponseArgs struct {
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'AzureQueueSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (AzureQueueSinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureQueueSinkResponse)(nil)).Elem()
}

func (i AzureQueueSinkResponseArgs) ToAzureQueueSinkResponseOutput() AzureQueueSinkResponseOutput {
	return i.ToAzureQueueSinkResponseOutputWithContext(context.Background())
}

func (i AzureQueueSinkResponseArgs) ToAzureQueueSinkResponseOutputWithContext(ctx context.Context) AzureQueueSinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureQueueSinkResponseOutput)
}

// A copy activity Azure Queue sink.
type AzureQueueSinkResponseOutput struct{ *pulumi.OutputState }

func (AzureQueueSinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureQueueSinkResponse)(nil)).Elem()
}

func (o AzureQueueSinkResponseOutput) ToAzureQueueSinkResponseOutput() AzureQueueSinkResponseOutput {
	return o
}

func (o AzureQueueSinkResponseOutput) ToAzureQueueSinkResponseOutputWithContext(ctx context.Context) AzureQueueSinkResponseOutput {
	return o
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o AzureQueueSinkResponseOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureQueueSinkResponse) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureQueueSinkResponseOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureQueueSinkResponse) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'AzureQueueSink'.
func (o AzureQueueSinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureQueueSinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o AzureQueueSinkResponseOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureQueueSinkResponse) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureQueueSinkResponseOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureQueueSinkResponse) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// The Azure Search Index.
type AzureSearchIndexDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// The name of the Azure Search Index. Type: string (or Expression with resultType string).
	IndexName interface{} `pulumi:"indexName"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AzureSearchIndex'.
	Type string `pulumi:"type"`
}

// AzureSearchIndexDatasetInput is an input type that accepts AzureSearchIndexDatasetArgs and AzureSearchIndexDatasetOutput values.
// You can construct a concrete instance of `AzureSearchIndexDatasetInput` via:
//
//          AzureSearchIndexDatasetArgs{...}
type AzureSearchIndexDatasetInput interface {
	pulumi.Input

	ToAzureSearchIndexDatasetOutput() AzureSearchIndexDatasetOutput
	ToAzureSearchIndexDatasetOutputWithContext(context.Context) AzureSearchIndexDatasetOutput
}

// The Azure Search Index.
type AzureSearchIndexDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the Azure Search Index. Type: string (or Expression with resultType string).
	IndexName pulumi.Input `pulumi:"indexName"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AzureSearchIndex'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureSearchIndexDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSearchIndexDataset)(nil)).Elem()
}

func (i AzureSearchIndexDatasetArgs) ToAzureSearchIndexDatasetOutput() AzureSearchIndexDatasetOutput {
	return i.ToAzureSearchIndexDatasetOutputWithContext(context.Background())
}

func (i AzureSearchIndexDatasetArgs) ToAzureSearchIndexDatasetOutputWithContext(ctx context.Context) AzureSearchIndexDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSearchIndexDatasetOutput)
}

// The Azure Search Index.
type AzureSearchIndexDatasetOutput struct{ *pulumi.OutputState }

func (AzureSearchIndexDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSearchIndexDataset)(nil)).Elem()
}

func (o AzureSearchIndexDatasetOutput) ToAzureSearchIndexDatasetOutput() AzureSearchIndexDatasetOutput {
	return o
}

func (o AzureSearchIndexDatasetOutput) ToAzureSearchIndexDatasetOutputWithContext(ctx context.Context) AzureSearchIndexDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureSearchIndexDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureSearchIndexDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o AzureSearchIndexDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSearchIndexDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the Azure Search Index. Type: string (or Expression with resultType string).
func (o AzureSearchIndexDatasetOutput) IndexName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchIndexDataset) interface{} { return v.IndexName }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o AzureSearchIndexDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v AzureSearchIndexDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o AzureSearchIndexDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureSearchIndexDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AzureSearchIndexDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchIndexDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AzureSearchIndex'.
func (o AzureSearchIndexDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSearchIndexDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The Azure Search Index.
type AzureSearchIndexDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// The name of the Azure Search Index. Type: string (or Expression with resultType string).
	IndexName interface{} `pulumi:"indexName"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AzureSearchIndex'.
	Type string `pulumi:"type"`
}

// AzureSearchIndexDatasetResponseInput is an input type that accepts AzureSearchIndexDatasetResponseArgs and AzureSearchIndexDatasetResponseOutput values.
// You can construct a concrete instance of `AzureSearchIndexDatasetResponseInput` via:
//
//          AzureSearchIndexDatasetResponseArgs{...}
type AzureSearchIndexDatasetResponseInput interface {
	pulumi.Input

	ToAzureSearchIndexDatasetResponseOutput() AzureSearchIndexDatasetResponseOutput
	ToAzureSearchIndexDatasetResponseOutputWithContext(context.Context) AzureSearchIndexDatasetResponseOutput
}

// The Azure Search Index.
type AzureSearchIndexDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the Azure Search Index. Type: string (or Expression with resultType string).
	IndexName pulumi.Input `pulumi:"indexName"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'AzureSearchIndex'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureSearchIndexDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSearchIndexDatasetResponse)(nil)).Elem()
}

func (i AzureSearchIndexDatasetResponseArgs) ToAzureSearchIndexDatasetResponseOutput() AzureSearchIndexDatasetResponseOutput {
	return i.ToAzureSearchIndexDatasetResponseOutputWithContext(context.Background())
}

func (i AzureSearchIndexDatasetResponseArgs) ToAzureSearchIndexDatasetResponseOutputWithContext(ctx context.Context) AzureSearchIndexDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSearchIndexDatasetResponseOutput)
}

// The Azure Search Index.
type AzureSearchIndexDatasetResponseOutput struct{ *pulumi.OutputState }

func (AzureSearchIndexDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSearchIndexDatasetResponse)(nil)).Elem()
}

func (o AzureSearchIndexDatasetResponseOutput) ToAzureSearchIndexDatasetResponseOutput() AzureSearchIndexDatasetResponseOutput {
	return o
}

func (o AzureSearchIndexDatasetResponseOutput) ToAzureSearchIndexDatasetResponseOutputWithContext(ctx context.Context) AzureSearchIndexDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureSearchIndexDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureSearchIndexDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o AzureSearchIndexDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSearchIndexDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the Azure Search Index. Type: string (or Expression with resultType string).
func (o AzureSearchIndexDatasetResponseOutput) IndexName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchIndexDatasetResponse) interface{} { return v.IndexName }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o AzureSearchIndexDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v AzureSearchIndexDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o AzureSearchIndexDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureSearchIndexDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AzureSearchIndexDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchIndexDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AzureSearchIndex'.
func (o AzureSearchIndexDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSearchIndexDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Azure Search Index sink.
type AzureSearchIndexSink struct {
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'AzureSearchIndexSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
	// Specify the write behavior when upserting documents into Azure Search Index.
	WriteBehavior *string `pulumi:"writeBehavior"`
}

// AzureSearchIndexSinkInput is an input type that accepts AzureSearchIndexSinkArgs and AzureSearchIndexSinkOutput values.
// You can construct a concrete instance of `AzureSearchIndexSinkInput` via:
//
//          AzureSearchIndexSinkArgs{...}
type AzureSearchIndexSinkInput interface {
	pulumi.Input

	ToAzureSearchIndexSinkOutput() AzureSearchIndexSinkOutput
	ToAzureSearchIndexSinkOutputWithContext(context.Context) AzureSearchIndexSinkOutput
}

// A copy activity Azure Search Index sink.
type AzureSearchIndexSinkArgs struct {
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'AzureSearchIndexSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
	// Specify the write behavior when upserting documents into Azure Search Index.
	WriteBehavior pulumi.StringPtrInput `pulumi:"writeBehavior"`
}

func (AzureSearchIndexSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSearchIndexSink)(nil)).Elem()
}

func (i AzureSearchIndexSinkArgs) ToAzureSearchIndexSinkOutput() AzureSearchIndexSinkOutput {
	return i.ToAzureSearchIndexSinkOutputWithContext(context.Background())
}

func (i AzureSearchIndexSinkArgs) ToAzureSearchIndexSinkOutputWithContext(ctx context.Context) AzureSearchIndexSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSearchIndexSinkOutput)
}

// A copy activity Azure Search Index sink.
type AzureSearchIndexSinkOutput struct{ *pulumi.OutputState }

func (AzureSearchIndexSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSearchIndexSink)(nil)).Elem()
}

func (o AzureSearchIndexSinkOutput) ToAzureSearchIndexSinkOutput() AzureSearchIndexSinkOutput {
	return o
}

func (o AzureSearchIndexSinkOutput) ToAzureSearchIndexSinkOutputWithContext(ctx context.Context) AzureSearchIndexSinkOutput {
	return o
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o AzureSearchIndexSinkOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchIndexSink) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureSearchIndexSinkOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchIndexSink) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'AzureSearchIndexSink'.
func (o AzureSearchIndexSinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSearchIndexSink) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o AzureSearchIndexSinkOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchIndexSink) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureSearchIndexSinkOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchIndexSink) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// Specify the write behavior when upserting documents into Azure Search Index.
func (o AzureSearchIndexSinkOutput) WriteBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSearchIndexSink) *string { return v.WriteBehavior }).(pulumi.StringPtrOutput)
}

// A copy activity Azure Search Index sink.
type AzureSearchIndexSinkResponse struct {
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'AzureSearchIndexSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
	// Specify the write behavior when upserting documents into Azure Search Index.
	WriteBehavior *string `pulumi:"writeBehavior"`
}

// AzureSearchIndexSinkResponseInput is an input type that accepts AzureSearchIndexSinkResponseArgs and AzureSearchIndexSinkResponseOutput values.
// You can construct a concrete instance of `AzureSearchIndexSinkResponseInput` via:
//
//          AzureSearchIndexSinkResponseArgs{...}
type AzureSearchIndexSinkResponseInput interface {
	pulumi.Input

	ToAzureSearchIndexSinkResponseOutput() AzureSearchIndexSinkResponseOutput
	ToAzureSearchIndexSinkResponseOutputWithContext(context.Context) AzureSearchIndexSinkResponseOutput
}

// A copy activity Azure Search Index sink.
type AzureSearchIndexSinkResponseArgs struct {
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'AzureSearchIndexSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
	// Specify the write behavior when upserting documents into Azure Search Index.
	WriteBehavior pulumi.StringPtrInput `pulumi:"writeBehavior"`
}

func (AzureSearchIndexSinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSearchIndexSinkResponse)(nil)).Elem()
}

func (i AzureSearchIndexSinkResponseArgs) ToAzureSearchIndexSinkResponseOutput() AzureSearchIndexSinkResponseOutput {
	return i.ToAzureSearchIndexSinkResponseOutputWithContext(context.Background())
}

func (i AzureSearchIndexSinkResponseArgs) ToAzureSearchIndexSinkResponseOutputWithContext(ctx context.Context) AzureSearchIndexSinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSearchIndexSinkResponseOutput)
}

// A copy activity Azure Search Index sink.
type AzureSearchIndexSinkResponseOutput struct{ *pulumi.OutputState }

func (AzureSearchIndexSinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSearchIndexSinkResponse)(nil)).Elem()
}

func (o AzureSearchIndexSinkResponseOutput) ToAzureSearchIndexSinkResponseOutput() AzureSearchIndexSinkResponseOutput {
	return o
}

func (o AzureSearchIndexSinkResponseOutput) ToAzureSearchIndexSinkResponseOutputWithContext(ctx context.Context) AzureSearchIndexSinkResponseOutput {
	return o
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o AzureSearchIndexSinkResponseOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchIndexSinkResponse) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureSearchIndexSinkResponseOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchIndexSinkResponse) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'AzureSearchIndexSink'.
func (o AzureSearchIndexSinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSearchIndexSinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o AzureSearchIndexSinkResponseOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchIndexSinkResponse) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureSearchIndexSinkResponseOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchIndexSinkResponse) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// Specify the write behavior when upserting documents into Azure Search Index.
func (o AzureSearchIndexSinkResponseOutput) WriteBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSearchIndexSinkResponse) *string { return v.WriteBehavior }).(pulumi.StringPtrOutput)
}

// Linked service for Windows Azure Search Service.
type AzureSearchLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Admin Key for Azure Search service
	Key interface{} `pulumi:"key"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzureSearch'.
	Type string `pulumi:"type"`
	// URL for Azure Search service. Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
}

// AzureSearchLinkedServiceInput is an input type that accepts AzureSearchLinkedServiceArgs and AzureSearchLinkedServiceOutput values.
// You can construct a concrete instance of `AzureSearchLinkedServiceInput` via:
//
//          AzureSearchLinkedServiceArgs{...}
type AzureSearchLinkedServiceInput interface {
	pulumi.Input

	ToAzureSearchLinkedServiceOutput() AzureSearchLinkedServiceOutput
	ToAzureSearchLinkedServiceOutputWithContext(context.Context) AzureSearchLinkedServiceOutput
}

// Linked service for Windows Azure Search Service.
type AzureSearchLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Admin Key for Azure Search service
	Key pulumi.Input `pulumi:"key"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzureSearch'.
	Type pulumi.StringInput `pulumi:"type"`
	// URL for Azure Search service. Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
}

func (AzureSearchLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSearchLinkedService)(nil)).Elem()
}

func (i AzureSearchLinkedServiceArgs) ToAzureSearchLinkedServiceOutput() AzureSearchLinkedServiceOutput {
	return i.ToAzureSearchLinkedServiceOutputWithContext(context.Background())
}

func (i AzureSearchLinkedServiceArgs) ToAzureSearchLinkedServiceOutputWithContext(ctx context.Context) AzureSearchLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSearchLinkedServiceOutput)
}

// Linked service for Windows Azure Search Service.
type AzureSearchLinkedServiceOutput struct{ *pulumi.OutputState }

func (AzureSearchLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSearchLinkedService)(nil)).Elem()
}

func (o AzureSearchLinkedServiceOutput) ToAzureSearchLinkedServiceOutput() AzureSearchLinkedServiceOutput {
	return o
}

func (o AzureSearchLinkedServiceOutput) ToAzureSearchLinkedServiceOutputWithContext(ctx context.Context) AzureSearchLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureSearchLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureSearchLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzureSearchLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v AzureSearchLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o AzureSearchLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSearchLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureSearchLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Admin Key for Azure Search service
func (o AzureSearchLinkedServiceOutput) Key() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchLinkedService) interface{} { return v.Key }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureSearchLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureSearchLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'AzureSearch'.
func (o AzureSearchLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSearchLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// URL for Azure Search service. Type: string (or Expression with resultType string).
func (o AzureSearchLinkedServiceOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchLinkedService) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// Linked service for Windows Azure Search Service.
type AzureSearchLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Admin Key for Azure Search service
	Key interface{} `pulumi:"key"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzureSearch'.
	Type string `pulumi:"type"`
	// URL for Azure Search service. Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
}

// AzureSearchLinkedServiceResponseInput is an input type that accepts AzureSearchLinkedServiceResponseArgs and AzureSearchLinkedServiceResponseOutput values.
// You can construct a concrete instance of `AzureSearchLinkedServiceResponseInput` via:
//
//          AzureSearchLinkedServiceResponseArgs{...}
type AzureSearchLinkedServiceResponseInput interface {
	pulumi.Input

	ToAzureSearchLinkedServiceResponseOutput() AzureSearchLinkedServiceResponseOutput
	ToAzureSearchLinkedServiceResponseOutputWithContext(context.Context) AzureSearchLinkedServiceResponseOutput
}

// Linked service for Windows Azure Search Service.
type AzureSearchLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Admin Key for Azure Search service
	Key pulumi.Input `pulumi:"key"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'AzureSearch'.
	Type pulumi.StringInput `pulumi:"type"`
	// URL for Azure Search service. Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
}

func (AzureSearchLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSearchLinkedServiceResponse)(nil)).Elem()
}

func (i AzureSearchLinkedServiceResponseArgs) ToAzureSearchLinkedServiceResponseOutput() AzureSearchLinkedServiceResponseOutput {
	return i.ToAzureSearchLinkedServiceResponseOutputWithContext(context.Background())
}

func (i AzureSearchLinkedServiceResponseArgs) ToAzureSearchLinkedServiceResponseOutputWithContext(ctx context.Context) AzureSearchLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSearchLinkedServiceResponseOutput)
}

// Linked service for Windows Azure Search Service.
type AzureSearchLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (AzureSearchLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSearchLinkedServiceResponse)(nil)).Elem()
}

func (o AzureSearchLinkedServiceResponseOutput) ToAzureSearchLinkedServiceResponseOutput() AzureSearchLinkedServiceResponseOutput {
	return o
}

func (o AzureSearchLinkedServiceResponseOutput) ToAzureSearchLinkedServiceResponseOutputWithContext(ctx context.Context) AzureSearchLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureSearchLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureSearchLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzureSearchLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v AzureSearchLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o AzureSearchLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSearchLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureSearchLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Admin Key for Azure Search service
func (o AzureSearchLinkedServiceResponseOutput) Key() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchLinkedServiceResponse) interface{} { return v.Key }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureSearchLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureSearchLinkedServiceResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'AzureSearch'.
func (o AzureSearchLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSearchLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// URL for Azure Search service. Type: string (or Expression with resultType string).
func (o AzureSearchLinkedServiceResponseOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSearchLinkedServiceResponse) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// Azure SQL Data Warehouse linked service.
type AzureSqlDWLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
	ServicePrincipalId interface{} `pulumi:"servicePrincipalId"`
	// The key of the service principal used to authenticate against Azure SQL Data Warehouse.
	ServicePrincipalKey interface{} `pulumi:"servicePrincipalKey"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant interface{} `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureSqlDW'.
	Type string `pulumi:"type"`
}

// AzureSqlDWLinkedServiceInput is an input type that accepts AzureSqlDWLinkedServiceArgs and AzureSqlDWLinkedServiceOutput values.
// You can construct a concrete instance of `AzureSqlDWLinkedServiceInput` via:
//
//          AzureSqlDWLinkedServiceArgs{...}
type AzureSqlDWLinkedServiceInput interface {
	pulumi.Input

	ToAzureSqlDWLinkedServiceOutput() AzureSqlDWLinkedServiceOutput
	ToAzureSqlDWLinkedServiceOutputWithContext(context.Context) AzureSqlDWLinkedServiceOutput
}

// Azure SQL Data Warehouse linked service.
type AzureSqlDWLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
	ServicePrincipalId pulumi.Input `pulumi:"servicePrincipalId"`
	// The key of the service principal used to authenticate against Azure SQL Data Warehouse.
	ServicePrincipalKey pulumi.Input `pulumi:"servicePrincipalKey"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant pulumi.Input `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureSqlDW'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureSqlDWLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDWLinkedService)(nil)).Elem()
}

func (i AzureSqlDWLinkedServiceArgs) ToAzureSqlDWLinkedServiceOutput() AzureSqlDWLinkedServiceOutput {
	return i.ToAzureSqlDWLinkedServiceOutputWithContext(context.Background())
}

func (i AzureSqlDWLinkedServiceArgs) ToAzureSqlDWLinkedServiceOutputWithContext(ctx context.Context) AzureSqlDWLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDWLinkedServiceOutput)
}

// Azure SQL Data Warehouse linked service.
type AzureSqlDWLinkedServiceOutput struct{ *pulumi.OutputState }

func (AzureSqlDWLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDWLinkedService)(nil)).Elem()
}

func (o AzureSqlDWLinkedServiceOutput) ToAzureSqlDWLinkedServiceOutput() AzureSqlDWLinkedServiceOutput {
	return o
}

func (o AzureSqlDWLinkedServiceOutput) ToAzureSqlDWLinkedServiceOutputWithContext(ctx context.Context) AzureSqlDWLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureSqlDWLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzureSqlDWLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o AzureSqlDWLinkedServiceOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedService) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o AzureSqlDWLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureSqlDWLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureSqlDWLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
func (o AzureSqlDWLinkedServiceOutput) ServicePrincipalId() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedService) interface{} { return v.ServicePrincipalId }).(pulumi.AnyOutput)
}

// The key of the service principal used to authenticate against Azure SQL Data Warehouse.
func (o AzureSqlDWLinkedServiceOutput) ServicePrincipalKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedService) interface{} { return v.ServicePrincipalKey }).(pulumi.AnyOutput)
}

// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
func (o AzureSqlDWLinkedServiceOutput) Tenant() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedService) interface{} { return v.Tenant }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AzureSqlDW'.
func (o AzureSqlDWLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Azure SQL Data Warehouse linked service.
type AzureSqlDWLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
	ServicePrincipalId interface{} `pulumi:"servicePrincipalId"`
	// The key of the service principal used to authenticate against Azure SQL Data Warehouse.
	ServicePrincipalKey interface{} `pulumi:"servicePrincipalKey"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant interface{} `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureSqlDW'.
	Type string `pulumi:"type"`
}

// AzureSqlDWLinkedServiceResponseInput is an input type that accepts AzureSqlDWLinkedServiceResponseArgs and AzureSqlDWLinkedServiceResponseOutput values.
// You can construct a concrete instance of `AzureSqlDWLinkedServiceResponseInput` via:
//
//          AzureSqlDWLinkedServiceResponseArgs{...}
type AzureSqlDWLinkedServiceResponseInput interface {
	pulumi.Input

	ToAzureSqlDWLinkedServiceResponseOutput() AzureSqlDWLinkedServiceResponseOutput
	ToAzureSqlDWLinkedServiceResponseOutputWithContext(context.Context) AzureSqlDWLinkedServiceResponseOutput
}

// Azure SQL Data Warehouse linked service.
type AzureSqlDWLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
	ServicePrincipalId pulumi.Input `pulumi:"servicePrincipalId"`
	// The key of the service principal used to authenticate against Azure SQL Data Warehouse.
	ServicePrincipalKey pulumi.Input `pulumi:"servicePrincipalKey"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant pulumi.Input `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureSqlDW'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureSqlDWLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDWLinkedServiceResponse)(nil)).Elem()
}

func (i AzureSqlDWLinkedServiceResponseArgs) ToAzureSqlDWLinkedServiceResponseOutput() AzureSqlDWLinkedServiceResponseOutput {
	return i.ToAzureSqlDWLinkedServiceResponseOutputWithContext(context.Background())
}

func (i AzureSqlDWLinkedServiceResponseArgs) ToAzureSqlDWLinkedServiceResponseOutputWithContext(ctx context.Context) AzureSqlDWLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDWLinkedServiceResponseOutput)
}

// Azure SQL Data Warehouse linked service.
type AzureSqlDWLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlDWLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDWLinkedServiceResponse)(nil)).Elem()
}

func (o AzureSqlDWLinkedServiceResponseOutput) ToAzureSqlDWLinkedServiceResponseOutput() AzureSqlDWLinkedServiceResponseOutput {
	return o
}

func (o AzureSqlDWLinkedServiceResponseOutput) ToAzureSqlDWLinkedServiceResponseOutputWithContext(ctx context.Context) AzureSqlDWLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureSqlDWLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzureSqlDWLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o AzureSqlDWLinkedServiceResponseOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedServiceResponse) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o AzureSqlDWLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureSqlDWLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureSqlDWLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
func (o AzureSqlDWLinkedServiceResponseOutput) ServicePrincipalId() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedServiceResponse) interface{} { return v.ServicePrincipalId }).(pulumi.AnyOutput)
}

// The key of the service principal used to authenticate against Azure SQL Data Warehouse.
func (o AzureSqlDWLinkedServiceResponseOutput) ServicePrincipalKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedServiceResponse) interface{} { return v.ServicePrincipalKey }).(pulumi.AnyOutput)
}

// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
func (o AzureSqlDWLinkedServiceResponseOutput) Tenant() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedServiceResponse) interface{} { return v.Tenant }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AzureSqlDW'.
func (o AzureSqlDWLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDWLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The Azure SQL Data Warehouse dataset.
type AzureSqlDWTableDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The table name of the Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
	TableName interface{} `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'AzureSqlDWTable'.
	Type string `pulumi:"type"`
}

// AzureSqlDWTableDatasetInput is an input type that accepts AzureSqlDWTableDatasetArgs and AzureSqlDWTableDatasetOutput values.
// You can construct a concrete instance of `AzureSqlDWTableDatasetInput` via:
//
//          AzureSqlDWTableDatasetArgs{...}
type AzureSqlDWTableDatasetInput interface {
	pulumi.Input

	ToAzureSqlDWTableDatasetOutput() AzureSqlDWTableDatasetOutput
	ToAzureSqlDWTableDatasetOutputWithContext(context.Context) AzureSqlDWTableDatasetOutput
}

// The Azure SQL Data Warehouse dataset.
type AzureSqlDWTableDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The table name of the Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
	TableName pulumi.Input `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'AzureSqlDWTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureSqlDWTableDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDWTableDataset)(nil)).Elem()
}

func (i AzureSqlDWTableDatasetArgs) ToAzureSqlDWTableDatasetOutput() AzureSqlDWTableDatasetOutput {
	return i.ToAzureSqlDWTableDatasetOutputWithContext(context.Background())
}

func (i AzureSqlDWTableDatasetArgs) ToAzureSqlDWTableDatasetOutputWithContext(ctx context.Context) AzureSqlDWTableDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDWTableDatasetOutput)
}

// The Azure SQL Data Warehouse dataset.
type AzureSqlDWTableDatasetOutput struct{ *pulumi.OutputState }

func (AzureSqlDWTableDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDWTableDataset)(nil)).Elem()
}

func (o AzureSqlDWTableDatasetOutput) ToAzureSqlDWTableDatasetOutput() AzureSqlDWTableDatasetOutput {
	return o
}

func (o AzureSqlDWTableDatasetOutput) ToAzureSqlDWTableDatasetOutputWithContext(ctx context.Context) AzureSqlDWTableDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureSqlDWTableDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureSqlDWTableDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o AzureSqlDWTableDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDWTableDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o AzureSqlDWTableDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v AzureSqlDWTableDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o AzureSqlDWTableDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureSqlDWTableDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AzureSqlDWTableDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDWTableDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The table name of the Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
func (o AzureSqlDWTableDatasetOutput) TableName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDWTableDataset) interface{} { return v.TableName }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AzureSqlDWTable'.
func (o AzureSqlDWTableDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDWTableDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The Azure SQL Data Warehouse dataset.
type AzureSqlDWTableDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The table name of the Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
	TableName interface{} `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'AzureSqlDWTable'.
	Type string `pulumi:"type"`
}

// AzureSqlDWTableDatasetResponseInput is an input type that accepts AzureSqlDWTableDatasetResponseArgs and AzureSqlDWTableDatasetResponseOutput values.
// You can construct a concrete instance of `AzureSqlDWTableDatasetResponseInput` via:
//
//          AzureSqlDWTableDatasetResponseArgs{...}
type AzureSqlDWTableDatasetResponseInput interface {
	pulumi.Input

	ToAzureSqlDWTableDatasetResponseOutput() AzureSqlDWTableDatasetResponseOutput
	ToAzureSqlDWTableDatasetResponseOutputWithContext(context.Context) AzureSqlDWTableDatasetResponseOutput
}

// The Azure SQL Data Warehouse dataset.
type AzureSqlDWTableDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The table name of the Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
	TableName pulumi.Input `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'AzureSqlDWTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureSqlDWTableDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDWTableDatasetResponse)(nil)).Elem()
}

func (i AzureSqlDWTableDatasetResponseArgs) ToAzureSqlDWTableDatasetResponseOutput() AzureSqlDWTableDatasetResponseOutput {
	return i.ToAzureSqlDWTableDatasetResponseOutputWithContext(context.Background())
}

func (i AzureSqlDWTableDatasetResponseArgs) ToAzureSqlDWTableDatasetResponseOutputWithContext(ctx context.Context) AzureSqlDWTableDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDWTableDatasetResponseOutput)
}

// The Azure SQL Data Warehouse dataset.
type AzureSqlDWTableDatasetResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlDWTableDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDWTableDatasetResponse)(nil)).Elem()
}

func (o AzureSqlDWTableDatasetResponseOutput) ToAzureSqlDWTableDatasetResponseOutput() AzureSqlDWTableDatasetResponseOutput {
	return o
}

func (o AzureSqlDWTableDatasetResponseOutput) ToAzureSqlDWTableDatasetResponseOutputWithContext(ctx context.Context) AzureSqlDWTableDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureSqlDWTableDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureSqlDWTableDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o AzureSqlDWTableDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDWTableDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o AzureSqlDWTableDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v AzureSqlDWTableDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o AzureSqlDWTableDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureSqlDWTableDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AzureSqlDWTableDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDWTableDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The table name of the Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
func (o AzureSqlDWTableDatasetResponseOutput) TableName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDWTableDatasetResponse) interface{} { return v.TableName }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AzureSqlDWTable'.
func (o AzureSqlDWTableDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDWTableDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Microsoft Azure SQL Database linked service.
type AzureSqlDatabaseLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The ID of the service principal used to authenticate against Azure SQL Database. Type: string (or Expression with resultType string).
	ServicePrincipalId interface{} `pulumi:"servicePrincipalId"`
	// The key of the service principal used to authenticate against Azure SQL Database.
	ServicePrincipalKey interface{} `pulumi:"servicePrincipalKey"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant interface{} `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureSqlDatabase'.
	Type string `pulumi:"type"`
}

// AzureSqlDatabaseLinkedServiceInput is an input type that accepts AzureSqlDatabaseLinkedServiceArgs and AzureSqlDatabaseLinkedServiceOutput values.
// You can construct a concrete instance of `AzureSqlDatabaseLinkedServiceInput` via:
//
//          AzureSqlDatabaseLinkedServiceArgs{...}
type AzureSqlDatabaseLinkedServiceInput interface {
	pulumi.Input

	ToAzureSqlDatabaseLinkedServiceOutput() AzureSqlDatabaseLinkedServiceOutput
	ToAzureSqlDatabaseLinkedServiceOutputWithContext(context.Context) AzureSqlDatabaseLinkedServiceOutput
}

// Microsoft Azure SQL Database linked service.
type AzureSqlDatabaseLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The ID of the service principal used to authenticate against Azure SQL Database. Type: string (or Expression with resultType string).
	ServicePrincipalId pulumi.Input `pulumi:"servicePrincipalId"`
	// The key of the service principal used to authenticate against Azure SQL Database.
	ServicePrincipalKey pulumi.Input `pulumi:"servicePrincipalKey"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant pulumi.Input `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureSqlDatabase'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureSqlDatabaseLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseLinkedService)(nil)).Elem()
}

func (i AzureSqlDatabaseLinkedServiceArgs) ToAzureSqlDatabaseLinkedServiceOutput() AzureSqlDatabaseLinkedServiceOutput {
	return i.ToAzureSqlDatabaseLinkedServiceOutputWithContext(context.Background())
}

func (i AzureSqlDatabaseLinkedServiceArgs) ToAzureSqlDatabaseLinkedServiceOutputWithContext(ctx context.Context) AzureSqlDatabaseLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseLinkedServiceOutput)
}

// Microsoft Azure SQL Database linked service.
type AzureSqlDatabaseLinkedServiceOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseLinkedService)(nil)).Elem()
}

func (o AzureSqlDatabaseLinkedServiceOutput) ToAzureSqlDatabaseLinkedServiceOutput() AzureSqlDatabaseLinkedServiceOutput {
	return o
}

func (o AzureSqlDatabaseLinkedServiceOutput) ToAzureSqlDatabaseLinkedServiceOutputWithContext(ctx context.Context) AzureSqlDatabaseLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureSqlDatabaseLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzureSqlDatabaseLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o AzureSqlDatabaseLinkedServiceOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedService) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o AzureSqlDatabaseLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureSqlDatabaseLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureSqlDatabaseLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The ID of the service principal used to authenticate against Azure SQL Database. Type: string (or Expression with resultType string).
func (o AzureSqlDatabaseLinkedServiceOutput) ServicePrincipalId() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedService) interface{} { return v.ServicePrincipalId }).(pulumi.AnyOutput)
}

// The key of the service principal used to authenticate against Azure SQL Database.
func (o AzureSqlDatabaseLinkedServiceOutput) ServicePrincipalKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedService) interface{} { return v.ServicePrincipalKey }).(pulumi.AnyOutput)
}

// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
func (o AzureSqlDatabaseLinkedServiceOutput) Tenant() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedService) interface{} { return v.Tenant }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AzureSqlDatabase'.
func (o AzureSqlDatabaseLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Microsoft Azure SQL Database linked service.
type AzureSqlDatabaseLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The ID of the service principal used to authenticate against Azure SQL Database. Type: string (or Expression with resultType string).
	ServicePrincipalId interface{} `pulumi:"servicePrincipalId"`
	// The key of the service principal used to authenticate against Azure SQL Database.
	ServicePrincipalKey interface{} `pulumi:"servicePrincipalKey"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant interface{} `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureSqlDatabase'.
	Type string `pulumi:"type"`
}

// AzureSqlDatabaseLinkedServiceResponseInput is an input type that accepts AzureSqlDatabaseLinkedServiceResponseArgs and AzureSqlDatabaseLinkedServiceResponseOutput values.
// You can construct a concrete instance of `AzureSqlDatabaseLinkedServiceResponseInput` via:
//
//          AzureSqlDatabaseLinkedServiceResponseArgs{...}
type AzureSqlDatabaseLinkedServiceResponseInput interface {
	pulumi.Input

	ToAzureSqlDatabaseLinkedServiceResponseOutput() AzureSqlDatabaseLinkedServiceResponseOutput
	ToAzureSqlDatabaseLinkedServiceResponseOutputWithContext(context.Context) AzureSqlDatabaseLinkedServiceResponseOutput
}

// Microsoft Azure SQL Database linked service.
type AzureSqlDatabaseLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The ID of the service principal used to authenticate against Azure SQL Database. Type: string (or Expression with resultType string).
	ServicePrincipalId pulumi.Input `pulumi:"servicePrincipalId"`
	// The key of the service principal used to authenticate against Azure SQL Database.
	ServicePrincipalKey pulumi.Input `pulumi:"servicePrincipalKey"`
	// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant pulumi.Input `pulumi:"tenant"`
	// Type of linked service.
	// Expected value is 'AzureSqlDatabase'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureSqlDatabaseLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseLinkedServiceResponse)(nil)).Elem()
}

func (i AzureSqlDatabaseLinkedServiceResponseArgs) ToAzureSqlDatabaseLinkedServiceResponseOutput() AzureSqlDatabaseLinkedServiceResponseOutput {
	return i.ToAzureSqlDatabaseLinkedServiceResponseOutputWithContext(context.Background())
}

func (i AzureSqlDatabaseLinkedServiceResponseArgs) ToAzureSqlDatabaseLinkedServiceResponseOutputWithContext(ctx context.Context) AzureSqlDatabaseLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseLinkedServiceResponseOutput)
}

// Microsoft Azure SQL Database linked service.
type AzureSqlDatabaseLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseLinkedServiceResponse)(nil)).Elem()
}

func (o AzureSqlDatabaseLinkedServiceResponseOutput) ToAzureSqlDatabaseLinkedServiceResponseOutput() AzureSqlDatabaseLinkedServiceResponseOutput {
	return o
}

func (o AzureSqlDatabaseLinkedServiceResponseOutput) ToAzureSqlDatabaseLinkedServiceResponseOutputWithContext(ctx context.Context) AzureSqlDatabaseLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureSqlDatabaseLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzureSqlDatabaseLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedServiceResponse) *IntegrationRuntimeReferenceResponse {
		return v.ConnectVia
	}).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o AzureSqlDatabaseLinkedServiceResponseOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedServiceResponse) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o AzureSqlDatabaseLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureSqlDatabaseLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureSqlDatabaseLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedServiceResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// The ID of the service principal used to authenticate against Azure SQL Database. Type: string (or Expression with resultType string).
func (o AzureSqlDatabaseLinkedServiceResponseOutput) ServicePrincipalId() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedServiceResponse) interface{} { return v.ServicePrincipalId }).(pulumi.AnyOutput)
}

// The key of the service principal used to authenticate against Azure SQL Database.
func (o AzureSqlDatabaseLinkedServiceResponseOutput) ServicePrincipalKey() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedServiceResponse) interface{} { return v.ServicePrincipalKey }).(pulumi.AnyOutput)
}

// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
func (o AzureSqlDatabaseLinkedServiceResponseOutput) Tenant() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedServiceResponse) interface{} { return v.Tenant }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AzureSqlDatabase'.
func (o AzureSqlDatabaseLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDatabaseLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The Azure SQL Server database dataset.
type AzureSqlTableDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The table name of the Azure SQL database. Type: string (or Expression with resultType string).
	TableName interface{} `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'AzureSqlTable'.
	Type string `pulumi:"type"`
}

// AzureSqlTableDatasetInput is an input type that accepts AzureSqlTableDatasetArgs and AzureSqlTableDatasetOutput values.
// You can construct a concrete instance of `AzureSqlTableDatasetInput` via:
//
//          AzureSqlTableDatasetArgs{...}
type AzureSqlTableDatasetInput interface {
	pulumi.Input

	ToAzureSqlTableDatasetOutput() AzureSqlTableDatasetOutput
	ToAzureSqlTableDatasetOutputWithContext(context.Context) AzureSqlTableDatasetOutput
}

// The Azure SQL Server database dataset.
type AzureSqlTableDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The table name of the Azure SQL database. Type: string (or Expression with resultType string).
	TableName pulumi.Input `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'AzureSqlTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureSqlTableDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlTableDataset)(nil)).Elem()
}

func (i AzureSqlTableDatasetArgs) ToAzureSqlTableDatasetOutput() AzureSqlTableDatasetOutput {
	return i.ToAzureSqlTableDatasetOutputWithContext(context.Background())
}

func (i AzureSqlTableDatasetArgs) ToAzureSqlTableDatasetOutputWithContext(ctx context.Context) AzureSqlTableDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlTableDatasetOutput)
}

// The Azure SQL Server database dataset.
type AzureSqlTableDatasetOutput struct{ *pulumi.OutputState }

func (AzureSqlTableDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlTableDataset)(nil)).Elem()
}

func (o AzureSqlTableDatasetOutput) ToAzureSqlTableDatasetOutput() AzureSqlTableDatasetOutput {
	return o
}

func (o AzureSqlTableDatasetOutput) ToAzureSqlTableDatasetOutputWithContext(ctx context.Context) AzureSqlTableDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureSqlTableDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureSqlTableDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o AzureSqlTableDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlTableDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o AzureSqlTableDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v AzureSqlTableDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o AzureSqlTableDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureSqlTableDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AzureSqlTableDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlTableDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The table name of the Azure SQL database. Type: string (or Expression with resultType string).
func (o AzureSqlTableDatasetOutput) TableName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlTableDataset) interface{} { return v.TableName }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AzureSqlTable'.
func (o AzureSqlTableDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlTableDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The Azure SQL Server database dataset.
type AzureSqlTableDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The table name of the Azure SQL database. Type: string (or Expression with resultType string).
	TableName interface{} `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'AzureSqlTable'.
	Type string `pulumi:"type"`
}

// AzureSqlTableDatasetResponseInput is an input type that accepts AzureSqlTableDatasetResponseArgs and AzureSqlTableDatasetResponseOutput values.
// You can construct a concrete instance of `AzureSqlTableDatasetResponseInput` via:
//
//          AzureSqlTableDatasetResponseArgs{...}
type AzureSqlTableDatasetResponseInput interface {
	pulumi.Input

	ToAzureSqlTableDatasetResponseOutput() AzureSqlTableDatasetResponseOutput
	ToAzureSqlTableDatasetResponseOutputWithContext(context.Context) AzureSqlTableDatasetResponseOutput
}

// The Azure SQL Server database dataset.
type AzureSqlTableDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The table name of the Azure SQL database. Type: string (or Expression with resultType string).
	TableName pulumi.Input `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'AzureSqlTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureSqlTableDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlTableDatasetResponse)(nil)).Elem()
}

func (i AzureSqlTableDatasetResponseArgs) ToAzureSqlTableDatasetResponseOutput() AzureSqlTableDatasetResponseOutput {
	return i.ToAzureSqlTableDatasetResponseOutputWithContext(context.Background())
}

func (i AzureSqlTableDatasetResponseArgs) ToAzureSqlTableDatasetResponseOutputWithContext(ctx context.Context) AzureSqlTableDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlTableDatasetResponseOutput)
}

// The Azure SQL Server database dataset.
type AzureSqlTableDatasetResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlTableDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlTableDatasetResponse)(nil)).Elem()
}

func (o AzureSqlTableDatasetResponseOutput) ToAzureSqlTableDatasetResponseOutput() AzureSqlTableDatasetResponseOutput {
	return o
}

func (o AzureSqlTableDatasetResponseOutput) ToAzureSqlTableDatasetResponseOutputWithContext(ctx context.Context) AzureSqlTableDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureSqlTableDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureSqlTableDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o AzureSqlTableDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlTableDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o AzureSqlTableDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v AzureSqlTableDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o AzureSqlTableDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureSqlTableDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AzureSqlTableDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlTableDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The table name of the Azure SQL database. Type: string (or Expression with resultType string).
func (o AzureSqlTableDatasetResponseOutput) TableName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlTableDatasetResponse) interface{} { return v.TableName }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AzureSqlTable'.
func (o AzureSqlTableDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlTableDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The storage account linked service.
type AzureStorageLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// SAS URI of the Azure Storage resource. It is mutually exclusive with connectionString property.
	SasUri interface{} `pulumi:"sasUri"`
	// Type of linked service.
	// Expected value is 'AzureStorage'.
	Type string `pulumi:"type"`
}

// AzureStorageLinkedServiceInput is an input type that accepts AzureStorageLinkedServiceArgs and AzureStorageLinkedServiceOutput values.
// You can construct a concrete instance of `AzureStorageLinkedServiceInput` via:
//
//          AzureStorageLinkedServiceArgs{...}
type AzureStorageLinkedServiceInput interface {
	pulumi.Input

	ToAzureStorageLinkedServiceOutput() AzureStorageLinkedServiceOutput
	ToAzureStorageLinkedServiceOutputWithContext(context.Context) AzureStorageLinkedServiceOutput
}

// The storage account linked service.
type AzureStorageLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// SAS URI of the Azure Storage resource. It is mutually exclusive with connectionString property.
	SasUri pulumi.Input `pulumi:"sasUri"`
	// Type of linked service.
	// Expected value is 'AzureStorage'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureStorageLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageLinkedService)(nil)).Elem()
}

func (i AzureStorageLinkedServiceArgs) ToAzureStorageLinkedServiceOutput() AzureStorageLinkedServiceOutput {
	return i.ToAzureStorageLinkedServiceOutputWithContext(context.Background())
}

func (i AzureStorageLinkedServiceArgs) ToAzureStorageLinkedServiceOutputWithContext(ctx context.Context) AzureStorageLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageLinkedServiceOutput)
}

// The storage account linked service.
type AzureStorageLinkedServiceOutput struct{ *pulumi.OutputState }

func (AzureStorageLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageLinkedService)(nil)).Elem()
}

func (o AzureStorageLinkedServiceOutput) ToAzureStorageLinkedServiceOutput() AzureStorageLinkedServiceOutput {
	return o
}

func (o AzureStorageLinkedServiceOutput) ToAzureStorageLinkedServiceOutputWithContext(ctx context.Context) AzureStorageLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureStorageLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureStorageLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzureStorageLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v AzureStorageLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o AzureStorageLinkedServiceOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureStorageLinkedService) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o AzureStorageLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureStorageLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureStorageLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureStorageLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureStorageLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// SAS URI of the Azure Storage resource. It is mutually exclusive with connectionString property.
func (o AzureStorageLinkedServiceOutput) SasUri() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureStorageLinkedService) interface{} { return v.SasUri }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AzureStorage'.
func (o AzureStorageLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// The storage account linked service.
type AzureStorageLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// SAS URI of the Azure Storage resource. It is mutually exclusive with connectionString property.
	SasUri interface{} `pulumi:"sasUri"`
	// Type of linked service.
	// Expected value is 'AzureStorage'.
	Type string `pulumi:"type"`
}

// AzureStorageLinkedServiceResponseInput is an input type that accepts AzureStorageLinkedServiceResponseArgs and AzureStorageLinkedServiceResponseOutput values.
// You can construct a concrete instance of `AzureStorageLinkedServiceResponseInput` via:
//
//          AzureStorageLinkedServiceResponseArgs{...}
type AzureStorageLinkedServiceResponseInput interface {
	pulumi.Input

	ToAzureStorageLinkedServiceResponseOutput() AzureStorageLinkedServiceResponseOutput
	ToAzureStorageLinkedServiceResponseOutputWithContext(context.Context) AzureStorageLinkedServiceResponseOutput
}

// The storage account linked service.
type AzureStorageLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// SAS URI of the Azure Storage resource. It is mutually exclusive with connectionString property.
	SasUri pulumi.Input `pulumi:"sasUri"`
	// Type of linked service.
	// Expected value is 'AzureStorage'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureStorageLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageLinkedServiceResponse)(nil)).Elem()
}

func (i AzureStorageLinkedServiceResponseArgs) ToAzureStorageLinkedServiceResponseOutput() AzureStorageLinkedServiceResponseOutput {
	return i.ToAzureStorageLinkedServiceResponseOutputWithContext(context.Background())
}

func (i AzureStorageLinkedServiceResponseArgs) ToAzureStorageLinkedServiceResponseOutputWithContext(ctx context.Context) AzureStorageLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageLinkedServiceResponseOutput)
}

// The storage account linked service.
type AzureStorageLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (AzureStorageLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageLinkedServiceResponse)(nil)).Elem()
}

func (o AzureStorageLinkedServiceResponseOutput) ToAzureStorageLinkedServiceResponseOutput() AzureStorageLinkedServiceResponseOutput {
	return o
}

func (o AzureStorageLinkedServiceResponseOutput) ToAzureStorageLinkedServiceResponseOutputWithContext(ctx context.Context) AzureStorageLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureStorageLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureStorageLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o AzureStorageLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v AzureStorageLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o AzureStorageLinkedServiceResponseOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureStorageLinkedServiceResponse) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o AzureStorageLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o AzureStorageLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureStorageLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o AzureStorageLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureStorageLinkedServiceResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// SAS URI of the Azure Storage resource. It is mutually exclusive with connectionString property.
func (o AzureStorageLinkedServiceResponseOutput) SasUri() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureStorageLinkedServiceResponse) interface{} { return v.SasUri }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'AzureStorage'.
func (o AzureStorageLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The Azure Table storage dataset.
type AzureTableDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The table name of the Azure Table storage. Type: string (or Expression with resultType string).
	TableName interface{} `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'AzureTable'.
	Type string `pulumi:"type"`
}

// AzureTableDatasetInput is an input type that accepts AzureTableDatasetArgs and AzureTableDatasetOutput values.
// You can construct a concrete instance of `AzureTableDatasetInput` via:
//
//          AzureTableDatasetArgs{...}
type AzureTableDatasetInput interface {
	pulumi.Input

	ToAzureTableDatasetOutput() AzureTableDatasetOutput
	ToAzureTableDatasetOutputWithContext(context.Context) AzureTableDatasetOutput
}

// The Azure Table storage dataset.
type AzureTableDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The table name of the Azure Table storage. Type: string (or Expression with resultType string).
	TableName pulumi.Input `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'AzureTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureTableDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableDataset)(nil)).Elem()
}

func (i AzureTableDatasetArgs) ToAzureTableDatasetOutput() AzureTableDatasetOutput {
	return i.ToAzureTableDatasetOutputWithContext(context.Background())
}

func (i AzureTableDatasetArgs) ToAzureTableDatasetOutputWithContext(ctx context.Context) AzureTableDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableDatasetOutput)
}

// The Azure Table storage dataset.
type AzureTableDatasetOutput struct{ *pulumi.OutputState }

func (AzureTableDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableDataset)(nil)).Elem()
}

func (o AzureTableDatasetOutput) ToAzureTableDatasetOutput() AzureTableDatasetOutput {
	return o
}

func (o AzureTableDatasetOutput) ToAzureTableDatasetOutputWithContext(ctx context.Context) AzureTableDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureTableDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureTableDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o AzureTableDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureTableDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o AzureTableDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v AzureTableDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o AzureTableDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v AzureTableDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AzureTableDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The table name of the Azure Table storage. Type: string (or Expression with resultType string).
func (o AzureTableDatasetOutput) TableName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableDataset) interface{} { return v.TableName }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AzureTable'.
func (o AzureTableDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureTableDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The Azure Table storage dataset.
type AzureTableDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The table name of the Azure Table storage. Type: string (or Expression with resultType string).
	TableName interface{} `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'AzureTable'.
	Type string `pulumi:"type"`
}

// AzureTableDatasetResponseInput is an input type that accepts AzureTableDatasetResponseArgs and AzureTableDatasetResponseOutput values.
// You can construct a concrete instance of `AzureTableDatasetResponseInput` via:
//
//          AzureTableDatasetResponseArgs{...}
type AzureTableDatasetResponseInput interface {
	pulumi.Input

	ToAzureTableDatasetResponseOutput() AzureTableDatasetResponseOutput
	ToAzureTableDatasetResponseOutputWithContext(context.Context) AzureTableDatasetResponseOutput
}

// The Azure Table storage dataset.
type AzureTableDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The table name of the Azure Table storage. Type: string (or Expression with resultType string).
	TableName pulumi.Input `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'AzureTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureTableDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableDatasetResponse)(nil)).Elem()
}

func (i AzureTableDatasetResponseArgs) ToAzureTableDatasetResponseOutput() AzureTableDatasetResponseOutput {
	return i.ToAzureTableDatasetResponseOutputWithContext(context.Background())
}

func (i AzureTableDatasetResponseArgs) ToAzureTableDatasetResponseOutputWithContext(ctx context.Context) AzureTableDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableDatasetResponseOutput)
}

// The Azure Table storage dataset.
type AzureTableDatasetResponseOutput struct{ *pulumi.OutputState }

func (AzureTableDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableDatasetResponse)(nil)).Elem()
}

func (o AzureTableDatasetResponseOutput) ToAzureTableDatasetResponseOutput() AzureTableDatasetResponseOutput {
	return o
}

func (o AzureTableDatasetResponseOutput) ToAzureTableDatasetResponseOutputWithContext(ctx context.Context) AzureTableDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o AzureTableDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v AzureTableDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o AzureTableDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureTableDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o AzureTableDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v AzureTableDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o AzureTableDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v AzureTableDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o AzureTableDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The table name of the Azure Table storage. Type: string (or Expression with resultType string).
func (o AzureTableDatasetResponseOutput) TableName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableDatasetResponse) interface{} { return v.TableName }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'AzureTable'.
func (o AzureTableDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureTableDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Azure Table sink.
type AzureTableSink struct {
	// Azure Table default partition key value. Type: string (or Expression with resultType string).
	AzureTableDefaultPartitionKeyValue interface{} `pulumi:"azureTableDefaultPartitionKeyValue"`
	// Azure Table insert type. Type: string (or Expression with resultType string).
	AzureTableInsertType interface{} `pulumi:"azureTableInsertType"`
	// Azure Table partition key name. Type: string (or Expression with resultType string).
	AzureTablePartitionKeyName interface{} `pulumi:"azureTablePartitionKeyName"`
	// Azure Table row key name. Type: string (or Expression with resultType string).
	AzureTableRowKeyName interface{} `pulumi:"azureTableRowKeyName"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'AzureTableSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// AzureTableSinkInput is an input type that accepts AzureTableSinkArgs and AzureTableSinkOutput values.
// You can construct a concrete instance of `AzureTableSinkInput` via:
//
//          AzureTableSinkArgs{...}
type AzureTableSinkInput interface {
	pulumi.Input

	ToAzureTableSinkOutput() AzureTableSinkOutput
	ToAzureTableSinkOutputWithContext(context.Context) AzureTableSinkOutput
}

// A copy activity Azure Table sink.
type AzureTableSinkArgs struct {
	// Azure Table default partition key value. Type: string (or Expression with resultType string).
	AzureTableDefaultPartitionKeyValue pulumi.Input `pulumi:"azureTableDefaultPartitionKeyValue"`
	// Azure Table insert type. Type: string (or Expression with resultType string).
	AzureTableInsertType pulumi.Input `pulumi:"azureTableInsertType"`
	// Azure Table partition key name. Type: string (or Expression with resultType string).
	AzureTablePartitionKeyName pulumi.Input `pulumi:"azureTablePartitionKeyName"`
	// Azure Table row key name. Type: string (or Expression with resultType string).
	AzureTableRowKeyName pulumi.Input `pulumi:"azureTableRowKeyName"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'AzureTableSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (AzureTableSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableSink)(nil)).Elem()
}

func (i AzureTableSinkArgs) ToAzureTableSinkOutput() AzureTableSinkOutput {
	return i.ToAzureTableSinkOutputWithContext(context.Background())
}

func (i AzureTableSinkArgs) ToAzureTableSinkOutputWithContext(ctx context.Context) AzureTableSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableSinkOutput)
}

// A copy activity Azure Table sink.
type AzureTableSinkOutput struct{ *pulumi.OutputState }

func (AzureTableSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableSink)(nil)).Elem()
}

func (o AzureTableSinkOutput) ToAzureTableSinkOutput() AzureTableSinkOutput {
	return o
}

func (o AzureTableSinkOutput) ToAzureTableSinkOutputWithContext(ctx context.Context) AzureTableSinkOutput {
	return o
}

// Azure Table default partition key value. Type: string (or Expression with resultType string).
func (o AzureTableSinkOutput) AzureTableDefaultPartitionKeyValue() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSink) interface{} { return v.AzureTableDefaultPartitionKeyValue }).(pulumi.AnyOutput)
}

// Azure Table insert type. Type: string (or Expression with resultType string).
func (o AzureTableSinkOutput) AzureTableInsertType() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSink) interface{} { return v.AzureTableInsertType }).(pulumi.AnyOutput)
}

// Azure Table partition key name. Type: string (or Expression with resultType string).
func (o AzureTableSinkOutput) AzureTablePartitionKeyName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSink) interface{} { return v.AzureTablePartitionKeyName }).(pulumi.AnyOutput)
}

// Azure Table row key name. Type: string (or Expression with resultType string).
func (o AzureTableSinkOutput) AzureTableRowKeyName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSink) interface{} { return v.AzureTableRowKeyName }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o AzureTableSinkOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSink) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureTableSinkOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSink) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'AzureTableSink'.
func (o AzureTableSinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureTableSink) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o AzureTableSinkOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSink) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureTableSinkOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSink) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity Azure Table sink.
type AzureTableSinkResponse struct {
	// Azure Table default partition key value. Type: string (or Expression with resultType string).
	AzureTableDefaultPartitionKeyValue interface{} `pulumi:"azureTableDefaultPartitionKeyValue"`
	// Azure Table insert type. Type: string (or Expression with resultType string).
	AzureTableInsertType interface{} `pulumi:"azureTableInsertType"`
	// Azure Table partition key name. Type: string (or Expression with resultType string).
	AzureTablePartitionKeyName interface{} `pulumi:"azureTablePartitionKeyName"`
	// Azure Table row key name. Type: string (or Expression with resultType string).
	AzureTableRowKeyName interface{} `pulumi:"azureTableRowKeyName"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'AzureTableSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// AzureTableSinkResponseInput is an input type that accepts AzureTableSinkResponseArgs and AzureTableSinkResponseOutput values.
// You can construct a concrete instance of `AzureTableSinkResponseInput` via:
//
//          AzureTableSinkResponseArgs{...}
type AzureTableSinkResponseInput interface {
	pulumi.Input

	ToAzureTableSinkResponseOutput() AzureTableSinkResponseOutput
	ToAzureTableSinkResponseOutputWithContext(context.Context) AzureTableSinkResponseOutput
}

// A copy activity Azure Table sink.
type AzureTableSinkResponseArgs struct {
	// Azure Table default partition key value. Type: string (or Expression with resultType string).
	AzureTableDefaultPartitionKeyValue pulumi.Input `pulumi:"azureTableDefaultPartitionKeyValue"`
	// Azure Table insert type. Type: string (or Expression with resultType string).
	AzureTableInsertType pulumi.Input `pulumi:"azureTableInsertType"`
	// Azure Table partition key name. Type: string (or Expression with resultType string).
	AzureTablePartitionKeyName pulumi.Input `pulumi:"azureTablePartitionKeyName"`
	// Azure Table row key name. Type: string (or Expression with resultType string).
	AzureTableRowKeyName pulumi.Input `pulumi:"azureTableRowKeyName"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'AzureTableSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (AzureTableSinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableSinkResponse)(nil)).Elem()
}

func (i AzureTableSinkResponseArgs) ToAzureTableSinkResponseOutput() AzureTableSinkResponseOutput {
	return i.ToAzureTableSinkResponseOutputWithContext(context.Background())
}

func (i AzureTableSinkResponseArgs) ToAzureTableSinkResponseOutputWithContext(ctx context.Context) AzureTableSinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableSinkResponseOutput)
}

// A copy activity Azure Table sink.
type AzureTableSinkResponseOutput struct{ *pulumi.OutputState }

func (AzureTableSinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableSinkResponse)(nil)).Elem()
}

func (o AzureTableSinkResponseOutput) ToAzureTableSinkResponseOutput() AzureTableSinkResponseOutput {
	return o
}

func (o AzureTableSinkResponseOutput) ToAzureTableSinkResponseOutputWithContext(ctx context.Context) AzureTableSinkResponseOutput {
	return o
}

// Azure Table default partition key value. Type: string (or Expression with resultType string).
func (o AzureTableSinkResponseOutput) AzureTableDefaultPartitionKeyValue() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSinkResponse) interface{} { return v.AzureTableDefaultPartitionKeyValue }).(pulumi.AnyOutput)
}

// Azure Table insert type. Type: string (or Expression with resultType string).
func (o AzureTableSinkResponseOutput) AzureTableInsertType() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSinkResponse) interface{} { return v.AzureTableInsertType }).(pulumi.AnyOutput)
}

// Azure Table partition key name. Type: string (or Expression with resultType string).
func (o AzureTableSinkResponseOutput) AzureTablePartitionKeyName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSinkResponse) interface{} { return v.AzureTablePartitionKeyName }).(pulumi.AnyOutput)
}

// Azure Table row key name. Type: string (or Expression with resultType string).
func (o AzureTableSinkResponseOutput) AzureTableRowKeyName() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSinkResponse) interface{} { return v.AzureTableRowKeyName }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o AzureTableSinkResponseOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSinkResponse) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureTableSinkResponseOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSinkResponse) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'AzureTableSink'.
func (o AzureTableSinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureTableSinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o AzureTableSinkResponseOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSinkResponse) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureTableSinkResponseOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSinkResponse) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity Azure Table source.
type AzureTableSource struct {
	// Azure Table source ignore table not found. Type: boolean (or Expression with resultType boolean).
	AzureTableSourceIgnoreTableNotFound interface{} `pulumi:"azureTableSourceIgnoreTableNotFound"`
	// Azure Table source query. Type: string (or Expression with resultType string).
	AzureTableSourceQuery interface{} `pulumi:"azureTableSourceQuery"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AzureTableSource'.
	Type string `pulumi:"type"`
}

// AzureTableSourceInput is an input type that accepts AzureTableSourceArgs and AzureTableSourceOutput values.
// You can construct a concrete instance of `AzureTableSourceInput` via:
//
//          AzureTableSourceArgs{...}
type AzureTableSourceInput interface {
	pulumi.Input

	ToAzureTableSourceOutput() AzureTableSourceOutput
	ToAzureTableSourceOutputWithContext(context.Context) AzureTableSourceOutput
}

// A copy activity Azure Table source.
type AzureTableSourceArgs struct {
	// Azure Table source ignore table not found. Type: boolean (or Expression with resultType boolean).
	AzureTableSourceIgnoreTableNotFound pulumi.Input `pulumi:"azureTableSourceIgnoreTableNotFound"`
	// Azure Table source query. Type: string (or Expression with resultType string).
	AzureTableSourceQuery pulumi.Input `pulumi:"azureTableSourceQuery"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AzureTableSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureTableSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableSource)(nil)).Elem()
}

func (i AzureTableSourceArgs) ToAzureTableSourceOutput() AzureTableSourceOutput {
	return i.ToAzureTableSourceOutputWithContext(context.Background())
}

func (i AzureTableSourceArgs) ToAzureTableSourceOutputWithContext(ctx context.Context) AzureTableSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableSourceOutput)
}

// A copy activity Azure Table source.
type AzureTableSourceOutput struct{ *pulumi.OutputState }

func (AzureTableSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableSource)(nil)).Elem()
}

func (o AzureTableSourceOutput) ToAzureTableSourceOutput() AzureTableSourceOutput {
	return o
}

func (o AzureTableSourceOutput) ToAzureTableSourceOutputWithContext(ctx context.Context) AzureTableSourceOutput {
	return o
}

// Azure Table source ignore table not found. Type: boolean (or Expression with resultType boolean).
func (o AzureTableSourceOutput) AzureTableSourceIgnoreTableNotFound() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSource) interface{} { return v.AzureTableSourceIgnoreTableNotFound }).(pulumi.AnyOutput)
}

// Azure Table source query. Type: string (or Expression with resultType string).
func (o AzureTableSourceOutput) AzureTableSourceQuery() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSource) interface{} { return v.AzureTableSourceQuery }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o AzureTableSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureTableSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'AzureTableSource'.
func (o AzureTableSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureTableSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Azure Table source.
type AzureTableSourceResponse struct {
	// Azure Table source ignore table not found. Type: boolean (or Expression with resultType boolean).
	AzureTableSourceIgnoreTableNotFound interface{} `pulumi:"azureTableSourceIgnoreTableNotFound"`
	// Azure Table source query. Type: string (or Expression with resultType string).
	AzureTableSourceQuery interface{} `pulumi:"azureTableSourceQuery"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AzureTableSource'.
	Type string `pulumi:"type"`
}

// AzureTableSourceResponseInput is an input type that accepts AzureTableSourceResponseArgs and AzureTableSourceResponseOutput values.
// You can construct a concrete instance of `AzureTableSourceResponseInput` via:
//
//          AzureTableSourceResponseArgs{...}
type AzureTableSourceResponseInput interface {
	pulumi.Input

	ToAzureTableSourceResponseOutput() AzureTableSourceResponseOutput
	ToAzureTableSourceResponseOutputWithContext(context.Context) AzureTableSourceResponseOutput
}

// A copy activity Azure Table source.
type AzureTableSourceResponseArgs struct {
	// Azure Table source ignore table not found. Type: boolean (or Expression with resultType boolean).
	AzureTableSourceIgnoreTableNotFound pulumi.Input `pulumi:"azureTableSourceIgnoreTableNotFound"`
	// Azure Table source query. Type: string (or Expression with resultType string).
	AzureTableSourceQuery pulumi.Input `pulumi:"azureTableSourceQuery"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'AzureTableSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureTableSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableSourceResponse)(nil)).Elem()
}

func (i AzureTableSourceResponseArgs) ToAzureTableSourceResponseOutput() AzureTableSourceResponseOutput {
	return i.ToAzureTableSourceResponseOutputWithContext(context.Background())
}

func (i AzureTableSourceResponseArgs) ToAzureTableSourceResponseOutputWithContext(ctx context.Context) AzureTableSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableSourceResponseOutput)
}

// A copy activity Azure Table source.
type AzureTableSourceResponseOutput struct{ *pulumi.OutputState }

func (AzureTableSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableSourceResponse)(nil)).Elem()
}

func (o AzureTableSourceResponseOutput) ToAzureTableSourceResponseOutput() AzureTableSourceResponseOutput {
	return o
}

func (o AzureTableSourceResponseOutput) ToAzureTableSourceResponseOutputWithContext(ctx context.Context) AzureTableSourceResponseOutput {
	return o
}

// Azure Table source ignore table not found. Type: boolean (or Expression with resultType boolean).
func (o AzureTableSourceResponseOutput) AzureTableSourceIgnoreTableNotFound() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSourceResponse) interface{} { return v.AzureTableSourceIgnoreTableNotFound }).(pulumi.AnyOutput)
}

// Azure Table source query. Type: string (or Expression with resultType string).
func (o AzureTableSourceResponseOutput) AzureTableSourceQuery() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSourceResponse) interface{} { return v.AzureTableSourceQuery }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o AzureTableSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o AzureTableSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureTableSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'AzureTableSource'.
func (o AzureTableSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureTableSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Trigger that runs every time a Blob event occurs.
type BlobEventsTrigger struct {
	// The blob path must begin with the pattern provided for trigger to fire. For example, '/records/blobs/december/' will only fire the trigger for blobs in the december folder under the records container. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.
	BlobPathBeginsWith *string `pulumi:"blobPathBeginsWith"`
	// The blob path must end with the pattern provided for trigger to fire. For example, 'december/boxes.csv' will only fire the trigger for blobs named boxes in a december folder. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.
	BlobPathEndsWith *string `pulumi:"blobPathEndsWith"`
	// Trigger description.
	Description *string `pulumi:"description"`
	// The type of events that cause this trigger to fire.
	Events []string `pulumi:"events"`
	// If set to true, blobs with zero bytes will be ignored.
	IgnoreEmptyBlobs *bool `pulumi:"ignoreEmptyBlobs"`
	// Pipelines that need to be started.
	Pipelines []TriggerPipelineReference `pulumi:"pipelines"`
	// The ARM resource ID of the Storage Account.
	Scope string `pulumi:"scope"`
	// Trigger type.
	// Expected value is 'MultiplePipelineTrigger'.
	Type string `pulumi:"type"`
}

// BlobEventsTriggerInput is an input type that accepts BlobEventsTriggerArgs and BlobEventsTriggerOutput values.
// You can construct a concrete instance of `BlobEventsTriggerInput` via:
//
//          BlobEventsTriggerArgs{...}
type BlobEventsTriggerInput interface {
	pulumi.Input

	ToBlobEventsTriggerOutput() BlobEventsTriggerOutput
	ToBlobEventsTriggerOutputWithContext(context.Context) BlobEventsTriggerOutput
}

// Trigger that runs every time a Blob event occurs.
type BlobEventsTriggerArgs struct {
	// The blob path must begin with the pattern provided for trigger to fire. For example, '/records/blobs/december/' will only fire the trigger for blobs in the december folder under the records container. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.
	BlobPathBeginsWith pulumi.StringPtrInput `pulumi:"blobPathBeginsWith"`
	// The blob path must end with the pattern provided for trigger to fire. For example, 'december/boxes.csv' will only fire the trigger for blobs named boxes in a december folder. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.
	BlobPathEndsWith pulumi.StringPtrInput `pulumi:"blobPathEndsWith"`
	// Trigger description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The type of events that cause this trigger to fire.
	Events pulumi.StringArrayInput `pulumi:"events"`
	// If set to true, blobs with zero bytes will be ignored.
	IgnoreEmptyBlobs pulumi.BoolPtrInput `pulumi:"ignoreEmptyBlobs"`
	// Pipelines that need to be started.
	Pipelines TriggerPipelineReferenceArrayInput `pulumi:"pipelines"`
	// The ARM resource ID of the Storage Account.
	Scope pulumi.StringInput `pulumi:"scope"`
	// Trigger type.
	// Expected value is 'MultiplePipelineTrigger'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BlobEventsTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobEventsTrigger)(nil)).Elem()
}

func (i BlobEventsTriggerArgs) ToBlobEventsTriggerOutput() BlobEventsTriggerOutput {
	return i.ToBlobEventsTriggerOutputWithContext(context.Background())
}

func (i BlobEventsTriggerArgs) ToBlobEventsTriggerOutputWithContext(ctx context.Context) BlobEventsTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobEventsTriggerOutput)
}

// Trigger that runs every time a Blob event occurs.
type BlobEventsTriggerOutput struct{ *pulumi.OutputState }

func (BlobEventsTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobEventsTrigger)(nil)).Elem()
}

func (o BlobEventsTriggerOutput) ToBlobEventsTriggerOutput() BlobEventsTriggerOutput {
	return o
}

func (o BlobEventsTriggerOutput) ToBlobEventsTriggerOutputWithContext(ctx context.Context) BlobEventsTriggerOutput {
	return o
}

// The blob path must begin with the pattern provided for trigger to fire. For example, '/records/blobs/december/' will only fire the trigger for blobs in the december folder under the records container. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.
func (o BlobEventsTriggerOutput) BlobPathBeginsWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobEventsTrigger) *string { return v.BlobPathBeginsWith }).(pulumi.StringPtrOutput)
}

// The blob path must end with the pattern provided for trigger to fire. For example, 'december/boxes.csv' will only fire the trigger for blobs named boxes in a december folder. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.
func (o BlobEventsTriggerOutput) BlobPathEndsWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobEventsTrigger) *string { return v.BlobPathEndsWith }).(pulumi.StringPtrOutput)
}

// Trigger description.
func (o BlobEventsTriggerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobEventsTrigger) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The type of events that cause this trigger to fire.
func (o BlobEventsTriggerOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobEventsTrigger) []string { return v.Events }).(pulumi.StringArrayOutput)
}

// If set to true, blobs with zero bytes will be ignored.
func (o BlobEventsTriggerOutput) IgnoreEmptyBlobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlobEventsTrigger) *bool { return v.IgnoreEmptyBlobs }).(pulumi.BoolPtrOutput)
}

// Pipelines that need to be started.
func (o BlobEventsTriggerOutput) Pipelines() TriggerPipelineReferenceArrayOutput {
	return o.ApplyT(func(v BlobEventsTrigger) []TriggerPipelineReference { return v.Pipelines }).(TriggerPipelineReferenceArrayOutput)
}

// The ARM resource ID of the Storage Account.
func (o BlobEventsTriggerOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v BlobEventsTrigger) string { return v.Scope }).(pulumi.StringOutput)
}

// Trigger type.
// Expected value is 'MultiplePipelineTrigger'.
func (o BlobEventsTriggerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobEventsTrigger) string { return v.Type }).(pulumi.StringOutput)
}

// Trigger that runs every time a Blob event occurs.
type BlobEventsTriggerResponse struct {
	// The blob path must begin with the pattern provided for trigger to fire. For example, '/records/blobs/december/' will only fire the trigger for blobs in the december folder under the records container. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.
	BlobPathBeginsWith *string `pulumi:"blobPathBeginsWith"`
	// The blob path must end with the pattern provided for trigger to fire. For example, 'december/boxes.csv' will only fire the trigger for blobs named boxes in a december folder. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.
	BlobPathEndsWith *string `pulumi:"blobPathEndsWith"`
	// Trigger description.
	Description *string `pulumi:"description"`
	// The type of events that cause this trigger to fire.
	Events []string `pulumi:"events"`
	// If set to true, blobs with zero bytes will be ignored.
	IgnoreEmptyBlobs *bool `pulumi:"ignoreEmptyBlobs"`
	// Pipelines that need to be started.
	Pipelines []TriggerPipelineReferenceResponse `pulumi:"pipelines"`
	// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
	RuntimeState string `pulumi:"runtimeState"`
	// The ARM resource ID of the Storage Account.
	Scope string `pulumi:"scope"`
	// Trigger type.
	// Expected value is 'MultiplePipelineTrigger'.
	Type string `pulumi:"type"`
}

// BlobEventsTriggerResponseInput is an input type that accepts BlobEventsTriggerResponseArgs and BlobEventsTriggerResponseOutput values.
// You can construct a concrete instance of `BlobEventsTriggerResponseInput` via:
//
//          BlobEventsTriggerResponseArgs{...}
type BlobEventsTriggerResponseInput interface {
	pulumi.Input

	ToBlobEventsTriggerResponseOutput() BlobEventsTriggerResponseOutput
	ToBlobEventsTriggerResponseOutputWithContext(context.Context) BlobEventsTriggerResponseOutput
}

// Trigger that runs every time a Blob event occurs.
type BlobEventsTriggerResponseArgs struct {
	// The blob path must begin with the pattern provided for trigger to fire. For example, '/records/blobs/december/' will only fire the trigger for blobs in the december folder under the records container. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.
	BlobPathBeginsWith pulumi.StringPtrInput `pulumi:"blobPathBeginsWith"`
	// The blob path must end with the pattern provided for trigger to fire. For example, 'december/boxes.csv' will only fire the trigger for blobs named boxes in a december folder. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.
	BlobPathEndsWith pulumi.StringPtrInput `pulumi:"blobPathEndsWith"`
	// Trigger description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The type of events that cause this trigger to fire.
	Events pulumi.StringArrayInput `pulumi:"events"`
	// If set to true, blobs with zero bytes will be ignored.
	IgnoreEmptyBlobs pulumi.BoolPtrInput `pulumi:"ignoreEmptyBlobs"`
	// Pipelines that need to be started.
	Pipelines TriggerPipelineReferenceResponseArrayInput `pulumi:"pipelines"`
	// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
	RuntimeState pulumi.StringInput `pulumi:"runtimeState"`
	// The ARM resource ID of the Storage Account.
	Scope pulumi.StringInput `pulumi:"scope"`
	// Trigger type.
	// Expected value is 'MultiplePipelineTrigger'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BlobEventsTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobEventsTriggerResponse)(nil)).Elem()
}

func (i BlobEventsTriggerResponseArgs) ToBlobEventsTriggerResponseOutput() BlobEventsTriggerResponseOutput {
	return i.ToBlobEventsTriggerResponseOutputWithContext(context.Background())
}

func (i BlobEventsTriggerResponseArgs) ToBlobEventsTriggerResponseOutputWithContext(ctx context.Context) BlobEventsTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobEventsTriggerResponseOutput)
}

// Trigger that runs every time a Blob event occurs.
type BlobEventsTriggerResponseOutput struct{ *pulumi.OutputState }

func (BlobEventsTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobEventsTriggerResponse)(nil)).Elem()
}

func (o BlobEventsTriggerResponseOutput) ToBlobEventsTriggerResponseOutput() BlobEventsTriggerResponseOutput {
	return o
}

func (o BlobEventsTriggerResponseOutput) ToBlobEventsTriggerResponseOutputWithContext(ctx context.Context) BlobEventsTriggerResponseOutput {
	return o
}

// The blob path must begin with the pattern provided for trigger to fire. For example, '/records/blobs/december/' will only fire the trigger for blobs in the december folder under the records container. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.
func (o BlobEventsTriggerResponseOutput) BlobPathBeginsWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobEventsTriggerResponse) *string { return v.BlobPathBeginsWith }).(pulumi.StringPtrOutput)
}

// The blob path must end with the pattern provided for trigger to fire. For example, 'december/boxes.csv' will only fire the trigger for blobs named boxes in a december folder. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.
func (o BlobEventsTriggerResponseOutput) BlobPathEndsWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobEventsTriggerResponse) *string { return v.BlobPathEndsWith }).(pulumi.StringPtrOutput)
}

// Trigger description.
func (o BlobEventsTriggerResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobEventsTriggerResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The type of events that cause this trigger to fire.
func (o BlobEventsTriggerResponseOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobEventsTriggerResponse) []string { return v.Events }).(pulumi.StringArrayOutput)
}

// If set to true, blobs with zero bytes will be ignored.
func (o BlobEventsTriggerResponseOutput) IgnoreEmptyBlobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlobEventsTriggerResponse) *bool { return v.IgnoreEmptyBlobs }).(pulumi.BoolPtrOutput)
}

// Pipelines that need to be started.
func (o BlobEventsTriggerResponseOutput) Pipelines() TriggerPipelineReferenceResponseArrayOutput {
	return o.ApplyT(func(v BlobEventsTriggerResponse) []TriggerPipelineReferenceResponse { return v.Pipelines }).(TriggerPipelineReferenceResponseArrayOutput)
}

// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
func (o BlobEventsTriggerResponseOutput) RuntimeState() pulumi.StringOutput {
	return o.ApplyT(func(v BlobEventsTriggerResponse) string { return v.RuntimeState }).(pulumi.StringOutput)
}

// The ARM resource ID of the Storage Account.
func (o BlobEventsTriggerResponseOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v BlobEventsTriggerResponse) string { return v.Scope }).(pulumi.StringOutput)
}

// Trigger type.
// Expected value is 'MultiplePipelineTrigger'.
func (o BlobEventsTriggerResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobEventsTriggerResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Azure Blob sink.
type BlobSink struct {
	// Blob writer add header. Type: boolean (or Expression with resultType boolean).
	BlobWriterAddHeader interface{} `pulumi:"blobWriterAddHeader"`
	// Blob writer date time format. Type: string (or Expression with resultType string).
	BlobWriterDateTimeFormat interface{} `pulumi:"blobWriterDateTimeFormat"`
	// Blob writer overwrite files. Type: boolean (or Expression with resultType boolean).
	BlobWriterOverwriteFiles interface{} `pulumi:"blobWriterOverwriteFiles"`
	// The type of copy behavior for copy sink.
	CopyBehavior interface{} `pulumi:"copyBehavior"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'BlobSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// BlobSinkInput is an input type that accepts BlobSinkArgs and BlobSinkOutput values.
// You can construct a concrete instance of `BlobSinkInput` via:
//
//          BlobSinkArgs{...}
type BlobSinkInput interface {
	pulumi.Input

	ToBlobSinkOutput() BlobSinkOutput
	ToBlobSinkOutputWithContext(context.Context) BlobSinkOutput
}

// A copy activity Azure Blob sink.
type BlobSinkArgs struct {
	// Blob writer add header. Type: boolean (or Expression with resultType boolean).
	BlobWriterAddHeader pulumi.Input `pulumi:"blobWriterAddHeader"`
	// Blob writer date time format. Type: string (or Expression with resultType string).
	BlobWriterDateTimeFormat pulumi.Input `pulumi:"blobWriterDateTimeFormat"`
	// Blob writer overwrite files. Type: boolean (or Expression with resultType boolean).
	BlobWriterOverwriteFiles pulumi.Input `pulumi:"blobWriterOverwriteFiles"`
	// The type of copy behavior for copy sink.
	CopyBehavior pulumi.Input `pulumi:"copyBehavior"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'BlobSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (BlobSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobSink)(nil)).Elem()
}

func (i BlobSinkArgs) ToBlobSinkOutput() BlobSinkOutput {
	return i.ToBlobSinkOutputWithContext(context.Background())
}

func (i BlobSinkArgs) ToBlobSinkOutputWithContext(ctx context.Context) BlobSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobSinkOutput)
}

// A copy activity Azure Blob sink.
type BlobSinkOutput struct{ *pulumi.OutputState }

func (BlobSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobSink)(nil)).Elem()
}

func (o BlobSinkOutput) ToBlobSinkOutput() BlobSinkOutput {
	return o
}

func (o BlobSinkOutput) ToBlobSinkOutputWithContext(ctx context.Context) BlobSinkOutput {
	return o
}

// Blob writer add header. Type: boolean (or Expression with resultType boolean).
func (o BlobSinkOutput) BlobWriterAddHeader() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSink) interface{} { return v.BlobWriterAddHeader }).(pulumi.AnyOutput)
}

// Blob writer date time format. Type: string (or Expression with resultType string).
func (o BlobSinkOutput) BlobWriterDateTimeFormat() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSink) interface{} { return v.BlobWriterDateTimeFormat }).(pulumi.AnyOutput)
}

// Blob writer overwrite files. Type: boolean (or Expression with resultType boolean).
func (o BlobSinkOutput) BlobWriterOverwriteFiles() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSink) interface{} { return v.BlobWriterOverwriteFiles }).(pulumi.AnyOutput)
}

// The type of copy behavior for copy sink.
func (o BlobSinkOutput) CopyBehavior() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSink) interface{} { return v.CopyBehavior }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o BlobSinkOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSink) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o BlobSinkOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSink) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'BlobSink'.
func (o BlobSinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobSink) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o BlobSinkOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSink) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o BlobSinkOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSink) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity Azure Blob sink.
type BlobSinkResponse struct {
	// Blob writer add header. Type: boolean (or Expression with resultType boolean).
	BlobWriterAddHeader interface{} `pulumi:"blobWriterAddHeader"`
	// Blob writer date time format. Type: string (or Expression with resultType string).
	BlobWriterDateTimeFormat interface{} `pulumi:"blobWriterDateTimeFormat"`
	// Blob writer overwrite files. Type: boolean (or Expression with resultType boolean).
	BlobWriterOverwriteFiles interface{} `pulumi:"blobWriterOverwriteFiles"`
	// The type of copy behavior for copy sink.
	CopyBehavior interface{} `pulumi:"copyBehavior"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'BlobSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// BlobSinkResponseInput is an input type that accepts BlobSinkResponseArgs and BlobSinkResponseOutput values.
// You can construct a concrete instance of `BlobSinkResponseInput` via:
//
//          BlobSinkResponseArgs{...}
type BlobSinkResponseInput interface {
	pulumi.Input

	ToBlobSinkResponseOutput() BlobSinkResponseOutput
	ToBlobSinkResponseOutputWithContext(context.Context) BlobSinkResponseOutput
}

// A copy activity Azure Blob sink.
type BlobSinkResponseArgs struct {
	// Blob writer add header. Type: boolean (or Expression with resultType boolean).
	BlobWriterAddHeader pulumi.Input `pulumi:"blobWriterAddHeader"`
	// Blob writer date time format. Type: string (or Expression with resultType string).
	BlobWriterDateTimeFormat pulumi.Input `pulumi:"blobWriterDateTimeFormat"`
	// Blob writer overwrite files. Type: boolean (or Expression with resultType boolean).
	BlobWriterOverwriteFiles pulumi.Input `pulumi:"blobWriterOverwriteFiles"`
	// The type of copy behavior for copy sink.
	CopyBehavior pulumi.Input `pulumi:"copyBehavior"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'BlobSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (BlobSinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobSinkResponse)(nil)).Elem()
}

func (i BlobSinkResponseArgs) ToBlobSinkResponseOutput() BlobSinkResponseOutput {
	return i.ToBlobSinkResponseOutputWithContext(context.Background())
}

func (i BlobSinkResponseArgs) ToBlobSinkResponseOutputWithContext(ctx context.Context) BlobSinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobSinkResponseOutput)
}

// A copy activity Azure Blob sink.
type BlobSinkResponseOutput struct{ *pulumi.OutputState }

func (BlobSinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobSinkResponse)(nil)).Elem()
}

func (o BlobSinkResponseOutput) ToBlobSinkResponseOutput() BlobSinkResponseOutput {
	return o
}

func (o BlobSinkResponseOutput) ToBlobSinkResponseOutputWithContext(ctx context.Context) BlobSinkResponseOutput {
	return o
}

// Blob writer add header. Type: boolean (or Expression with resultType boolean).
func (o BlobSinkResponseOutput) BlobWriterAddHeader() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSinkResponse) interface{} { return v.BlobWriterAddHeader }).(pulumi.AnyOutput)
}

// Blob writer date time format. Type: string (or Expression with resultType string).
func (o BlobSinkResponseOutput) BlobWriterDateTimeFormat() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSinkResponse) interface{} { return v.BlobWriterDateTimeFormat }).(pulumi.AnyOutput)
}

// Blob writer overwrite files. Type: boolean (or Expression with resultType boolean).
func (o BlobSinkResponseOutput) BlobWriterOverwriteFiles() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSinkResponse) interface{} { return v.BlobWriterOverwriteFiles }).(pulumi.AnyOutput)
}

// The type of copy behavior for copy sink.
func (o BlobSinkResponseOutput) CopyBehavior() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSinkResponse) interface{} { return v.CopyBehavior }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o BlobSinkResponseOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSinkResponse) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o BlobSinkResponseOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSinkResponse) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'BlobSink'.
func (o BlobSinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobSinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o BlobSinkResponseOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSinkResponse) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o BlobSinkResponseOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSinkResponse) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity Azure Blob source.
type BlobSource struct {
	// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
	Recursive interface{} `pulumi:"recursive"`
	// Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer).
	SkipHeaderLineCount interface{} `pulumi:"skipHeaderLineCount"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Treat empty as null. Type: boolean (or Expression with resultType boolean).
	TreatEmptyAsNull interface{} `pulumi:"treatEmptyAsNull"`
	// Copy source type.
	// Expected value is 'BlobSource'.
	Type string `pulumi:"type"`
}

// BlobSourceInput is an input type that accepts BlobSourceArgs and BlobSourceOutput values.
// You can construct a concrete instance of `BlobSourceInput` via:
//
//          BlobSourceArgs{...}
type BlobSourceInput interface {
	pulumi.Input

	ToBlobSourceOutput() BlobSourceOutput
	ToBlobSourceOutputWithContext(context.Context) BlobSourceOutput
}

// A copy activity Azure Blob source.
type BlobSourceArgs struct {
	// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
	Recursive pulumi.Input `pulumi:"recursive"`
	// Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer).
	SkipHeaderLineCount pulumi.Input `pulumi:"skipHeaderLineCount"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Treat empty as null. Type: boolean (or Expression with resultType boolean).
	TreatEmptyAsNull pulumi.Input `pulumi:"treatEmptyAsNull"`
	// Copy source type.
	// Expected value is 'BlobSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BlobSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobSource)(nil)).Elem()
}

func (i BlobSourceArgs) ToBlobSourceOutput() BlobSourceOutput {
	return i.ToBlobSourceOutputWithContext(context.Background())
}

func (i BlobSourceArgs) ToBlobSourceOutputWithContext(ctx context.Context) BlobSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobSourceOutput)
}

// A copy activity Azure Blob source.
type BlobSourceOutput struct{ *pulumi.OutputState }

func (BlobSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobSource)(nil)).Elem()
}

func (o BlobSourceOutput) ToBlobSourceOutput() BlobSourceOutput {
	return o
}

func (o BlobSourceOutput) ToBlobSourceOutputWithContext(ctx context.Context) BlobSourceOutput {
	return o
}

// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
func (o BlobSourceOutput) Recursive() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSource) interface{} { return v.Recursive }).(pulumi.AnyOutput)
}

// Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer).
func (o BlobSourceOutput) SkipHeaderLineCount() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSource) interface{} { return v.SkipHeaderLineCount }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o BlobSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o BlobSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Treat empty as null. Type: boolean (or Expression with resultType boolean).
func (o BlobSourceOutput) TreatEmptyAsNull() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSource) interface{} { return v.TreatEmptyAsNull }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'BlobSource'.
func (o BlobSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Azure Blob source.
type BlobSourceResponse struct {
	// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
	Recursive interface{} `pulumi:"recursive"`
	// Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer).
	SkipHeaderLineCount interface{} `pulumi:"skipHeaderLineCount"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Treat empty as null. Type: boolean (or Expression with resultType boolean).
	TreatEmptyAsNull interface{} `pulumi:"treatEmptyAsNull"`
	// Copy source type.
	// Expected value is 'BlobSource'.
	Type string `pulumi:"type"`
}

// BlobSourceResponseInput is an input type that accepts BlobSourceResponseArgs and BlobSourceResponseOutput values.
// You can construct a concrete instance of `BlobSourceResponseInput` via:
//
//          BlobSourceResponseArgs{...}
type BlobSourceResponseInput interface {
	pulumi.Input

	ToBlobSourceResponseOutput() BlobSourceResponseOutput
	ToBlobSourceResponseOutputWithContext(context.Context) BlobSourceResponseOutput
}

// A copy activity Azure Blob source.
type BlobSourceResponseArgs struct {
	// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
	Recursive pulumi.Input `pulumi:"recursive"`
	// Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer).
	SkipHeaderLineCount pulumi.Input `pulumi:"skipHeaderLineCount"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Treat empty as null. Type: boolean (or Expression with resultType boolean).
	TreatEmptyAsNull pulumi.Input `pulumi:"treatEmptyAsNull"`
	// Copy source type.
	// Expected value is 'BlobSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BlobSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobSourceResponse)(nil)).Elem()
}

func (i BlobSourceResponseArgs) ToBlobSourceResponseOutput() BlobSourceResponseOutput {
	return i.ToBlobSourceResponseOutputWithContext(context.Background())
}

func (i BlobSourceResponseArgs) ToBlobSourceResponseOutputWithContext(ctx context.Context) BlobSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobSourceResponseOutput)
}

// A copy activity Azure Blob source.
type BlobSourceResponseOutput struct{ *pulumi.OutputState }

func (BlobSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobSourceResponse)(nil)).Elem()
}

func (o BlobSourceResponseOutput) ToBlobSourceResponseOutput() BlobSourceResponseOutput {
	return o
}

func (o BlobSourceResponseOutput) ToBlobSourceResponseOutputWithContext(ctx context.Context) BlobSourceResponseOutput {
	return o
}

// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
func (o BlobSourceResponseOutput) Recursive() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSourceResponse) interface{} { return v.Recursive }).(pulumi.AnyOutput)
}

// Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer).
func (o BlobSourceResponseOutput) SkipHeaderLineCount() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSourceResponse) interface{} { return v.SkipHeaderLineCount }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o BlobSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o BlobSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Treat empty as null. Type: boolean (or Expression with resultType boolean).
func (o BlobSourceResponseOutput) TreatEmptyAsNull() pulumi.AnyOutput {
	return o.ApplyT(func(v BlobSourceResponse) interface{} { return v.TreatEmptyAsNull }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'BlobSource'.
func (o BlobSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Trigger that runs every time the selected Blob container changes.
type BlobTrigger struct {
	// Trigger description.
	Description *string `pulumi:"description"`
	// The path of the container/folder that will trigger the pipeline.
	FolderPath string `pulumi:"folderPath"`
	// The Azure Storage linked service reference.
	LinkedService LinkedServiceReference `pulumi:"linkedService"`
	// The max number of parallel files to handle when it is triggered.
	MaxConcurrency int `pulumi:"maxConcurrency"`
	// Pipelines that need to be started.
	Pipelines []TriggerPipelineReference `pulumi:"pipelines"`
	// Trigger type.
	// Expected value is 'MultiplePipelineTrigger'.
	Type string `pulumi:"type"`
}

// BlobTriggerInput is an input type that accepts BlobTriggerArgs and BlobTriggerOutput values.
// You can construct a concrete instance of `BlobTriggerInput` via:
//
//          BlobTriggerArgs{...}
type BlobTriggerInput interface {
	pulumi.Input

	ToBlobTriggerOutput() BlobTriggerOutput
	ToBlobTriggerOutputWithContext(context.Context) BlobTriggerOutput
}

// Trigger that runs every time the selected Blob container changes.
type BlobTriggerArgs struct {
	// Trigger description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The path of the container/folder that will trigger the pipeline.
	FolderPath pulumi.StringInput `pulumi:"folderPath"`
	// The Azure Storage linked service reference.
	LinkedService LinkedServiceReferenceInput `pulumi:"linkedService"`
	// The max number of parallel files to handle when it is triggered.
	MaxConcurrency pulumi.IntInput `pulumi:"maxConcurrency"`
	// Pipelines that need to be started.
	Pipelines TriggerPipelineReferenceArrayInput `pulumi:"pipelines"`
	// Trigger type.
	// Expected value is 'MultiplePipelineTrigger'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BlobTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobTrigger)(nil)).Elem()
}

func (i BlobTriggerArgs) ToBlobTriggerOutput() BlobTriggerOutput {
	return i.ToBlobTriggerOutputWithContext(context.Background())
}

func (i BlobTriggerArgs) ToBlobTriggerOutputWithContext(ctx context.Context) BlobTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobTriggerOutput)
}

// Trigger that runs every time the selected Blob container changes.
type BlobTriggerOutput struct{ *pulumi.OutputState }

func (BlobTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobTrigger)(nil)).Elem()
}

func (o BlobTriggerOutput) ToBlobTriggerOutput() BlobTriggerOutput {
	return o
}

func (o BlobTriggerOutput) ToBlobTriggerOutputWithContext(ctx context.Context) BlobTriggerOutput {
	return o
}

// Trigger description.
func (o BlobTriggerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobTrigger) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The path of the container/folder that will trigger the pipeline.
func (o BlobTriggerOutput) FolderPath() pulumi.StringOutput {
	return o.ApplyT(func(v BlobTrigger) string { return v.FolderPath }).(pulumi.StringOutput)
}

// The Azure Storage linked service reference.
func (o BlobTriggerOutput) LinkedService() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v BlobTrigger) LinkedServiceReference { return v.LinkedService }).(LinkedServiceReferenceOutput)
}

// The max number of parallel files to handle when it is triggered.
func (o BlobTriggerOutput) MaxConcurrency() pulumi.IntOutput {
	return o.ApplyT(func(v BlobTrigger) int { return v.MaxConcurrency }).(pulumi.IntOutput)
}

// Pipelines that need to be started.
func (o BlobTriggerOutput) Pipelines() TriggerPipelineReferenceArrayOutput {
	return o.ApplyT(func(v BlobTrigger) []TriggerPipelineReference { return v.Pipelines }).(TriggerPipelineReferenceArrayOutput)
}

// Trigger type.
// Expected value is 'MultiplePipelineTrigger'.
func (o BlobTriggerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobTrigger) string { return v.Type }).(pulumi.StringOutput)
}

// Trigger that runs every time the selected Blob container changes.
type BlobTriggerResponse struct {
	// Trigger description.
	Description *string `pulumi:"description"`
	// The path of the container/folder that will trigger the pipeline.
	FolderPath string `pulumi:"folderPath"`
	// The Azure Storage linked service reference.
	LinkedService LinkedServiceReferenceResponse `pulumi:"linkedService"`
	// The max number of parallel files to handle when it is triggered.
	MaxConcurrency int `pulumi:"maxConcurrency"`
	// Pipelines that need to be started.
	Pipelines []TriggerPipelineReferenceResponse `pulumi:"pipelines"`
	// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
	RuntimeState string `pulumi:"runtimeState"`
	// Trigger type.
	// Expected value is 'MultiplePipelineTrigger'.
	Type string `pulumi:"type"`
}

// BlobTriggerResponseInput is an input type that accepts BlobTriggerResponseArgs and BlobTriggerResponseOutput values.
// You can construct a concrete instance of `BlobTriggerResponseInput` via:
//
//          BlobTriggerResponseArgs{...}
type BlobTriggerResponseInput interface {
	pulumi.Input

	ToBlobTriggerResponseOutput() BlobTriggerResponseOutput
	ToBlobTriggerResponseOutputWithContext(context.Context) BlobTriggerResponseOutput
}

// Trigger that runs every time the selected Blob container changes.
type BlobTriggerResponseArgs struct {
	// Trigger description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The path of the container/folder that will trigger the pipeline.
	FolderPath pulumi.StringInput `pulumi:"folderPath"`
	// The Azure Storage linked service reference.
	LinkedService LinkedServiceReferenceResponseInput `pulumi:"linkedService"`
	// The max number of parallel files to handle when it is triggered.
	MaxConcurrency pulumi.IntInput `pulumi:"maxConcurrency"`
	// Pipelines that need to be started.
	Pipelines TriggerPipelineReferenceResponseArrayInput `pulumi:"pipelines"`
	// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
	RuntimeState pulumi.StringInput `pulumi:"runtimeState"`
	// Trigger type.
	// Expected value is 'MultiplePipelineTrigger'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BlobTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobTriggerResponse)(nil)).Elem()
}

func (i BlobTriggerResponseArgs) ToBlobTriggerResponseOutput() BlobTriggerResponseOutput {
	return i.ToBlobTriggerResponseOutputWithContext(context.Background())
}

func (i BlobTriggerResponseArgs) ToBlobTriggerResponseOutputWithContext(ctx context.Context) BlobTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobTriggerResponseOutput)
}

// Trigger that runs every time the selected Blob container changes.
type BlobTriggerResponseOutput struct{ *pulumi.OutputState }

func (BlobTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobTriggerResponse)(nil)).Elem()
}

func (o BlobTriggerResponseOutput) ToBlobTriggerResponseOutput() BlobTriggerResponseOutput {
	return o
}

func (o BlobTriggerResponseOutput) ToBlobTriggerResponseOutputWithContext(ctx context.Context) BlobTriggerResponseOutput {
	return o
}

// Trigger description.
func (o BlobTriggerResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobTriggerResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The path of the container/folder that will trigger the pipeline.
func (o BlobTriggerResponseOutput) FolderPath() pulumi.StringOutput {
	return o.ApplyT(func(v BlobTriggerResponse) string { return v.FolderPath }).(pulumi.StringOutput)
}

// The Azure Storage linked service reference.
func (o BlobTriggerResponseOutput) LinkedService() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v BlobTriggerResponse) LinkedServiceReferenceResponse { return v.LinkedService }).(LinkedServiceReferenceResponseOutput)
}

// The max number of parallel files to handle when it is triggered.
func (o BlobTriggerResponseOutput) MaxConcurrency() pulumi.IntOutput {
	return o.ApplyT(func(v BlobTriggerResponse) int { return v.MaxConcurrency }).(pulumi.IntOutput)
}

// Pipelines that need to be started.
func (o BlobTriggerResponseOutput) Pipelines() TriggerPipelineReferenceResponseArrayOutput {
	return o.ApplyT(func(v BlobTriggerResponse) []TriggerPipelineReferenceResponse { return v.Pipelines }).(TriggerPipelineReferenceResponseArrayOutput)
}

// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
func (o BlobTriggerResponseOutput) RuntimeState() pulumi.StringOutput {
	return o.ApplyT(func(v BlobTriggerResponse) string { return v.RuntimeState }).(pulumi.StringOutput)
}

// Trigger type.
// Expected value is 'MultiplePipelineTrigger'.
func (o BlobTriggerResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobTriggerResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Linked service for Cassandra data source.
type CassandraLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// AuthenticationType to be used for connection. Type: string (or Expression with resultType string).
	AuthenticationType interface{} `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Host name for connection. Type: string (or Expression with resultType string).
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Password for authentication.
	Password interface{} `pulumi:"password"`
	// The port for the connection. Type: integer (or Expression with resultType integer).
	Port interface{} `pulumi:"port"`
	// Type of linked service.
	// Expected value is 'Cassandra'.
	Type string `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// CassandraLinkedServiceInput is an input type that accepts CassandraLinkedServiceArgs and CassandraLinkedServiceOutput values.
// You can construct a concrete instance of `CassandraLinkedServiceInput` via:
//
//          CassandraLinkedServiceArgs{...}
type CassandraLinkedServiceInput interface {
	pulumi.Input

	ToCassandraLinkedServiceOutput() CassandraLinkedServiceOutput
	ToCassandraLinkedServiceOutputWithContext(context.Context) CassandraLinkedServiceOutput
}

// Linked service for Cassandra data source.
type CassandraLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// AuthenticationType to be used for connection. Type: string (or Expression with resultType string).
	AuthenticationType pulumi.Input `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Host name for connection. Type: string (or Expression with resultType string).
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Password for authentication.
	Password pulumi.Input `pulumi:"password"`
	// The port for the connection. Type: integer (or Expression with resultType integer).
	Port pulumi.Input `pulumi:"port"`
	// Type of linked service.
	// Expected value is 'Cassandra'.
	Type pulumi.StringInput `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (CassandraLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraLinkedService)(nil)).Elem()
}

func (i CassandraLinkedServiceArgs) ToCassandraLinkedServiceOutput() CassandraLinkedServiceOutput {
	return i.ToCassandraLinkedServiceOutputWithContext(context.Background())
}

func (i CassandraLinkedServiceArgs) ToCassandraLinkedServiceOutputWithContext(ctx context.Context) CassandraLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraLinkedServiceOutput)
}

// Linked service for Cassandra data source.
type CassandraLinkedServiceOutput struct{ *pulumi.OutputState }

func (CassandraLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraLinkedService)(nil)).Elem()
}

func (o CassandraLinkedServiceOutput) ToCassandraLinkedServiceOutput() CassandraLinkedServiceOutput {
	return o
}

func (o CassandraLinkedServiceOutput) ToCassandraLinkedServiceOutputWithContext(ctx context.Context) CassandraLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o CassandraLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v CassandraLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// AuthenticationType to be used for connection. Type: string (or Expression with resultType string).
func (o CassandraLinkedServiceOutput) AuthenticationType() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraLinkedService) interface{} { return v.AuthenticationType }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o CassandraLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v CassandraLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o CassandraLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o CassandraLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Host name for connection. Type: string (or Expression with resultType string).
func (o CassandraLinkedServiceOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraLinkedService) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o CassandraLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v CassandraLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Password for authentication.
func (o CassandraLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The port for the connection. Type: integer (or Expression with resultType integer).
func (o CassandraLinkedServiceOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraLinkedService) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Cassandra'.
func (o CassandraLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Username for authentication. Type: string (or Expression with resultType string).
func (o CassandraLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Linked service for Cassandra data source.
type CassandraLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// AuthenticationType to be used for connection. Type: string (or Expression with resultType string).
	AuthenticationType interface{} `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Host name for connection. Type: string (or Expression with resultType string).
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Password for authentication.
	Password interface{} `pulumi:"password"`
	// The port for the connection. Type: integer (or Expression with resultType integer).
	Port interface{} `pulumi:"port"`
	// Type of linked service.
	// Expected value is 'Cassandra'.
	Type string `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// CassandraLinkedServiceResponseInput is an input type that accepts CassandraLinkedServiceResponseArgs and CassandraLinkedServiceResponseOutput values.
// You can construct a concrete instance of `CassandraLinkedServiceResponseInput` via:
//
//          CassandraLinkedServiceResponseArgs{...}
type CassandraLinkedServiceResponseInput interface {
	pulumi.Input

	ToCassandraLinkedServiceResponseOutput() CassandraLinkedServiceResponseOutput
	ToCassandraLinkedServiceResponseOutputWithContext(context.Context) CassandraLinkedServiceResponseOutput
}

// Linked service for Cassandra data source.
type CassandraLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// AuthenticationType to be used for connection. Type: string (or Expression with resultType string).
	AuthenticationType pulumi.Input `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Host name for connection. Type: string (or Expression with resultType string).
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Password for authentication.
	Password pulumi.Input `pulumi:"password"`
	// The port for the connection. Type: integer (or Expression with resultType integer).
	Port pulumi.Input `pulumi:"port"`
	// Type of linked service.
	// Expected value is 'Cassandra'.
	Type pulumi.StringInput `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (CassandraLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraLinkedServiceResponse)(nil)).Elem()
}

func (i CassandraLinkedServiceResponseArgs) ToCassandraLinkedServiceResponseOutput() CassandraLinkedServiceResponseOutput {
	return i.ToCassandraLinkedServiceResponseOutputWithContext(context.Background())
}

func (i CassandraLinkedServiceResponseArgs) ToCassandraLinkedServiceResponseOutputWithContext(ctx context.Context) CassandraLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraLinkedServiceResponseOutput)
}

// Linked service for Cassandra data source.
type CassandraLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (CassandraLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraLinkedServiceResponse)(nil)).Elem()
}

func (o CassandraLinkedServiceResponseOutput) ToCassandraLinkedServiceResponseOutput() CassandraLinkedServiceResponseOutput {
	return o
}

func (o CassandraLinkedServiceResponseOutput) ToCassandraLinkedServiceResponseOutputWithContext(ctx context.Context) CassandraLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o CassandraLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v CassandraLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// AuthenticationType to be used for connection. Type: string (or Expression with resultType string).
func (o CassandraLinkedServiceResponseOutput) AuthenticationType() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraLinkedServiceResponse) interface{} { return v.AuthenticationType }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o CassandraLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v CassandraLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o CassandraLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o CassandraLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Host name for connection. Type: string (or Expression with resultType string).
func (o CassandraLinkedServiceResponseOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraLinkedServiceResponse) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o CassandraLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v CassandraLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Password for authentication.
func (o CassandraLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The port for the connection. Type: integer (or Expression with resultType integer).
func (o CassandraLinkedServiceResponseOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraLinkedServiceResponse) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Cassandra'.
func (o CassandraLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Username for authentication. Type: string (or Expression with resultType string).
func (o CassandraLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// A copy activity source for a Cassandra database.
type CassandraSource struct {
	// The consistency level specifies how many Cassandra servers must respond to a read request before returning data to the client application. Cassandra checks the specified number of Cassandra servers for data to satisfy the read request. Must be one of cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It is case-insensitive.
	ConsistencyLevel *string `pulumi:"consistencyLevel"`
	// Database query. Should be a SQL-92 query expression or Cassandra Query Language (CQL) command. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'CassandraSource'.
	Type string `pulumi:"type"`
}

// CassandraSourceInput is an input type that accepts CassandraSourceArgs and CassandraSourceOutput values.
// You can construct a concrete instance of `CassandraSourceInput` via:
//
//          CassandraSourceArgs{...}
type CassandraSourceInput interface {
	pulumi.Input

	ToCassandraSourceOutput() CassandraSourceOutput
	ToCassandraSourceOutputWithContext(context.Context) CassandraSourceOutput
}

// A copy activity source for a Cassandra database.
type CassandraSourceArgs struct {
	// The consistency level specifies how many Cassandra servers must respond to a read request before returning data to the client application. Cassandra checks the specified number of Cassandra servers for data to satisfy the read request. Must be one of cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It is case-insensitive.
	ConsistencyLevel pulumi.StringPtrInput `pulumi:"consistencyLevel"`
	// Database query. Should be a SQL-92 query expression or Cassandra Query Language (CQL) command. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'CassandraSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CassandraSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraSource)(nil)).Elem()
}

func (i CassandraSourceArgs) ToCassandraSourceOutput() CassandraSourceOutput {
	return i.ToCassandraSourceOutputWithContext(context.Background())
}

func (i CassandraSourceArgs) ToCassandraSourceOutputWithContext(ctx context.Context) CassandraSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraSourceOutput)
}

// A copy activity source for a Cassandra database.
type CassandraSourceOutput struct{ *pulumi.OutputState }

func (CassandraSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraSource)(nil)).Elem()
}

func (o CassandraSourceOutput) ToCassandraSourceOutput() CassandraSourceOutput {
	return o
}

func (o CassandraSourceOutput) ToCassandraSourceOutputWithContext(ctx context.Context) CassandraSourceOutput {
	return o
}

// The consistency level specifies how many Cassandra servers must respond to a read request before returning data to the client application. Cassandra checks the specified number of Cassandra servers for data to satisfy the read request. Must be one of cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It is case-insensitive.
func (o CassandraSourceOutput) ConsistencyLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraSource) *string { return v.ConsistencyLevel }).(pulumi.StringPtrOutput)
}

// Database query. Should be a SQL-92 query expression or Cassandra Query Language (CQL) command. Type: string (or Expression with resultType string).
func (o CassandraSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o CassandraSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o CassandraSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'CassandraSource'.
func (o CassandraSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity source for a Cassandra database.
type CassandraSourceResponse struct {
	// The consistency level specifies how many Cassandra servers must respond to a read request before returning data to the client application. Cassandra checks the specified number of Cassandra servers for data to satisfy the read request. Must be one of cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It is case-insensitive.
	ConsistencyLevel *string `pulumi:"consistencyLevel"`
	// Database query. Should be a SQL-92 query expression or Cassandra Query Language (CQL) command. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'CassandraSource'.
	Type string `pulumi:"type"`
}

// CassandraSourceResponseInput is an input type that accepts CassandraSourceResponseArgs and CassandraSourceResponseOutput values.
// You can construct a concrete instance of `CassandraSourceResponseInput` via:
//
//          CassandraSourceResponseArgs{...}
type CassandraSourceResponseInput interface {
	pulumi.Input

	ToCassandraSourceResponseOutput() CassandraSourceResponseOutput
	ToCassandraSourceResponseOutputWithContext(context.Context) CassandraSourceResponseOutput
}

// A copy activity source for a Cassandra database.
type CassandraSourceResponseArgs struct {
	// The consistency level specifies how many Cassandra servers must respond to a read request before returning data to the client application. Cassandra checks the specified number of Cassandra servers for data to satisfy the read request. Must be one of cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It is case-insensitive.
	ConsistencyLevel pulumi.StringPtrInput `pulumi:"consistencyLevel"`
	// Database query. Should be a SQL-92 query expression or Cassandra Query Language (CQL) command. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'CassandraSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CassandraSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraSourceResponse)(nil)).Elem()
}

func (i CassandraSourceResponseArgs) ToCassandraSourceResponseOutput() CassandraSourceResponseOutput {
	return i.ToCassandraSourceResponseOutputWithContext(context.Background())
}

func (i CassandraSourceResponseArgs) ToCassandraSourceResponseOutputWithContext(ctx context.Context) CassandraSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraSourceResponseOutput)
}

// A copy activity source for a Cassandra database.
type CassandraSourceResponseOutput struct{ *pulumi.OutputState }

func (CassandraSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraSourceResponse)(nil)).Elem()
}

func (o CassandraSourceResponseOutput) ToCassandraSourceResponseOutput() CassandraSourceResponseOutput {
	return o
}

func (o CassandraSourceResponseOutput) ToCassandraSourceResponseOutputWithContext(ctx context.Context) CassandraSourceResponseOutput {
	return o
}

// The consistency level specifies how many Cassandra servers must respond to a read request before returning data to the client application. Cassandra checks the specified number of Cassandra servers for data to satisfy the read request. Must be one of cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It is case-insensitive.
func (o CassandraSourceResponseOutput) ConsistencyLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraSourceResponse) *string { return v.ConsistencyLevel }).(pulumi.StringPtrOutput)
}

// Database query. Should be a SQL-92 query expression or Cassandra Query Language (CQL) command. Type: string (or Expression with resultType string).
func (o CassandraSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o CassandraSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o CassandraSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'CassandraSource'.
func (o CassandraSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The Cassandra database dataset.
type CassandraTableDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// The keyspace of the Cassandra database. Type: string (or Expression with resultType string).
	Keyspace interface{} `pulumi:"keyspace"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The table name of the Cassandra database. Type: string (or Expression with resultType string).
	TableName interface{} `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'CassandraTable'.
	Type string `pulumi:"type"`
}

// CassandraTableDatasetInput is an input type that accepts CassandraTableDatasetArgs and CassandraTableDatasetOutput values.
// You can construct a concrete instance of `CassandraTableDatasetInput` via:
//
//          CassandraTableDatasetArgs{...}
type CassandraTableDatasetInput interface {
	pulumi.Input

	ToCassandraTableDatasetOutput() CassandraTableDatasetOutput
	ToCassandraTableDatasetOutputWithContext(context.Context) CassandraTableDatasetOutput
}

// The Cassandra database dataset.
type CassandraTableDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The keyspace of the Cassandra database. Type: string (or Expression with resultType string).
	Keyspace pulumi.Input `pulumi:"keyspace"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The table name of the Cassandra database. Type: string (or Expression with resultType string).
	TableName pulumi.Input `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'CassandraTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CassandraTableDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableDataset)(nil)).Elem()
}

func (i CassandraTableDatasetArgs) ToCassandraTableDatasetOutput() CassandraTableDatasetOutput {
	return i.ToCassandraTableDatasetOutputWithContext(context.Background())
}

func (i CassandraTableDatasetArgs) ToCassandraTableDatasetOutputWithContext(ctx context.Context) CassandraTableDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableDatasetOutput)
}

// The Cassandra database dataset.
type CassandraTableDatasetOutput struct{ *pulumi.OutputState }

func (CassandraTableDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableDataset)(nil)).Elem()
}

func (o CassandraTableDatasetOutput) ToCassandraTableDatasetOutput() CassandraTableDatasetOutput {
	return o
}

func (o CassandraTableDatasetOutput) ToCassandraTableDatasetOutputWithContext(ctx context.Context) CassandraTableDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o CassandraTableDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v CassandraTableDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o CassandraTableDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraTableDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The keyspace of the Cassandra database. Type: string (or Expression with resultType string).
func (o CassandraTableDatasetOutput) Keyspace() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraTableDataset) interface{} { return v.Keyspace }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o CassandraTableDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v CassandraTableDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o CassandraTableDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v CassandraTableDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o CassandraTableDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraTableDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The table name of the Cassandra database. Type: string (or Expression with resultType string).
func (o CassandraTableDatasetOutput) TableName() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraTableDataset) interface{} { return v.TableName }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'CassandraTable'.
func (o CassandraTableDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The Cassandra database dataset.
type CassandraTableDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// The keyspace of the Cassandra database. Type: string (or Expression with resultType string).
	Keyspace interface{} `pulumi:"keyspace"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The table name of the Cassandra database. Type: string (or Expression with resultType string).
	TableName interface{} `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'CassandraTable'.
	Type string `pulumi:"type"`
}

// CassandraTableDatasetResponseInput is an input type that accepts CassandraTableDatasetResponseArgs and CassandraTableDatasetResponseOutput values.
// You can construct a concrete instance of `CassandraTableDatasetResponseInput` via:
//
//          CassandraTableDatasetResponseArgs{...}
type CassandraTableDatasetResponseInput interface {
	pulumi.Input

	ToCassandraTableDatasetResponseOutput() CassandraTableDatasetResponseOutput
	ToCassandraTableDatasetResponseOutputWithContext(context.Context) CassandraTableDatasetResponseOutput
}

// The Cassandra database dataset.
type CassandraTableDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The keyspace of the Cassandra database. Type: string (or Expression with resultType string).
	Keyspace pulumi.Input `pulumi:"keyspace"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The table name of the Cassandra database. Type: string (or Expression with resultType string).
	TableName pulumi.Input `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'CassandraTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CassandraTableDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableDatasetResponse)(nil)).Elem()
}

func (i CassandraTableDatasetResponseArgs) ToCassandraTableDatasetResponseOutput() CassandraTableDatasetResponseOutput {
	return i.ToCassandraTableDatasetResponseOutputWithContext(context.Background())
}

func (i CassandraTableDatasetResponseArgs) ToCassandraTableDatasetResponseOutputWithContext(ctx context.Context) CassandraTableDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableDatasetResponseOutput)
}

// The Cassandra database dataset.
type CassandraTableDatasetResponseOutput struct{ *pulumi.OutputState }

func (CassandraTableDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableDatasetResponse)(nil)).Elem()
}

func (o CassandraTableDatasetResponseOutput) ToCassandraTableDatasetResponseOutput() CassandraTableDatasetResponseOutput {
	return o
}

func (o CassandraTableDatasetResponseOutput) ToCassandraTableDatasetResponseOutputWithContext(ctx context.Context) CassandraTableDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o CassandraTableDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v CassandraTableDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o CassandraTableDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraTableDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The keyspace of the Cassandra database. Type: string (or Expression with resultType string).
func (o CassandraTableDatasetResponseOutput) Keyspace() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraTableDatasetResponse) interface{} { return v.Keyspace }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o CassandraTableDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v CassandraTableDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o CassandraTableDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v CassandraTableDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o CassandraTableDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraTableDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The table name of the Cassandra database. Type: string (or Expression with resultType string).
func (o CassandraTableDatasetResponseOutput) TableName() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraTableDatasetResponse) interface{} { return v.TableName }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'CassandraTable'.
func (o CassandraTableDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Concur Service linked service.
type ConcurLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Application client_id supplied by Concur App Management.
	ClientId interface{} `pulumi:"clientId"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The password corresponding to the user name that you provided in the username field.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'Concur'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
	// The user name that you use to access Concur Service.
	Username interface{} `pulumi:"username"`
}

// ConcurLinkedServiceInput is an input type that accepts ConcurLinkedServiceArgs and ConcurLinkedServiceOutput values.
// You can construct a concrete instance of `ConcurLinkedServiceInput` via:
//
//          ConcurLinkedServiceArgs{...}
type ConcurLinkedServiceInput interface {
	pulumi.Input

	ToConcurLinkedServiceOutput() ConcurLinkedServiceOutput
	ToConcurLinkedServiceOutputWithContext(context.Context) ConcurLinkedServiceOutput
}

// Concur Service linked service.
type ConcurLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Application client_id supplied by Concur App Management.
	ClientId pulumi.Input `pulumi:"clientId"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The password corresponding to the user name that you provided in the username field.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'Concur'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
	// The user name that you use to access Concur Service.
	Username pulumi.Input `pulumi:"username"`
}

func (ConcurLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConcurLinkedService)(nil)).Elem()
}

func (i ConcurLinkedServiceArgs) ToConcurLinkedServiceOutput() ConcurLinkedServiceOutput {
	return i.ToConcurLinkedServiceOutputWithContext(context.Background())
}

func (i ConcurLinkedServiceArgs) ToConcurLinkedServiceOutputWithContext(ctx context.Context) ConcurLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConcurLinkedServiceOutput)
}

// Concur Service linked service.
type ConcurLinkedServiceOutput struct{ *pulumi.OutputState }

func (ConcurLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConcurLinkedService)(nil)).Elem()
}

func (o ConcurLinkedServiceOutput) ToConcurLinkedServiceOutput() ConcurLinkedServiceOutput {
	return o
}

func (o ConcurLinkedServiceOutput) ToConcurLinkedServiceOutputWithContext(ctx context.Context) ConcurLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ConcurLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConcurLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Application client_id supplied by Concur App Management.
func (o ConcurLinkedServiceOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurLinkedService) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o ConcurLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v ConcurLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o ConcurLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConcurLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o ConcurLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o ConcurLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v ConcurLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The password corresponding to the user name that you provided in the username field.
func (o ConcurLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Concur'.
func (o ConcurLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConcurLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o ConcurLinkedServiceOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurLinkedService) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o ConcurLinkedServiceOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurLinkedService) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o ConcurLinkedServiceOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurLinkedService) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// The user name that you use to access Concur Service.
func (o ConcurLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Concur Service linked service.
type ConcurLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Application client_id supplied by Concur App Management.
	ClientId interface{} `pulumi:"clientId"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The password corresponding to the user name that you provided in the username field.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'Concur'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
	// The user name that you use to access Concur Service.
	Username interface{} `pulumi:"username"`
}

// ConcurLinkedServiceResponseInput is an input type that accepts ConcurLinkedServiceResponseArgs and ConcurLinkedServiceResponseOutput values.
// You can construct a concrete instance of `ConcurLinkedServiceResponseInput` via:
//
//          ConcurLinkedServiceResponseArgs{...}
type ConcurLinkedServiceResponseInput interface {
	pulumi.Input

	ToConcurLinkedServiceResponseOutput() ConcurLinkedServiceResponseOutput
	ToConcurLinkedServiceResponseOutputWithContext(context.Context) ConcurLinkedServiceResponseOutput
}

// Concur Service linked service.
type ConcurLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Application client_id supplied by Concur App Management.
	ClientId pulumi.Input `pulumi:"clientId"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The password corresponding to the user name that you provided in the username field.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'Concur'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
	// The user name that you use to access Concur Service.
	Username pulumi.Input `pulumi:"username"`
}

func (ConcurLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConcurLinkedServiceResponse)(nil)).Elem()
}

func (i ConcurLinkedServiceResponseArgs) ToConcurLinkedServiceResponseOutput() ConcurLinkedServiceResponseOutput {
	return i.ToConcurLinkedServiceResponseOutputWithContext(context.Background())
}

func (i ConcurLinkedServiceResponseArgs) ToConcurLinkedServiceResponseOutputWithContext(ctx context.Context) ConcurLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConcurLinkedServiceResponseOutput)
}

// Concur Service linked service.
type ConcurLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (ConcurLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConcurLinkedServiceResponse)(nil)).Elem()
}

func (o ConcurLinkedServiceResponseOutput) ToConcurLinkedServiceResponseOutput() ConcurLinkedServiceResponseOutput {
	return o
}

func (o ConcurLinkedServiceResponseOutput) ToConcurLinkedServiceResponseOutputWithContext(ctx context.Context) ConcurLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ConcurLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConcurLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Application client_id supplied by Concur App Management.
func (o ConcurLinkedServiceResponseOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurLinkedServiceResponse) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o ConcurLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v ConcurLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o ConcurLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConcurLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o ConcurLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o ConcurLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v ConcurLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The password corresponding to the user name that you provided in the username field.
func (o ConcurLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Concur'.
func (o ConcurLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConcurLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o ConcurLinkedServiceResponseOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurLinkedServiceResponse) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o ConcurLinkedServiceResponseOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurLinkedServiceResponse) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o ConcurLinkedServiceResponseOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurLinkedServiceResponse) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// The user name that you use to access Concur Service.
func (o ConcurLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Concur Service dataset.
type ConcurObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ConcurObject'.
	Type string `pulumi:"type"`
}

// ConcurObjectDatasetInput is an input type that accepts ConcurObjectDatasetArgs and ConcurObjectDatasetOutput values.
// You can construct a concrete instance of `ConcurObjectDatasetInput` via:
//
//          ConcurObjectDatasetArgs{...}
type ConcurObjectDatasetInput interface {
	pulumi.Input

	ToConcurObjectDatasetOutput() ConcurObjectDatasetOutput
	ToConcurObjectDatasetOutputWithContext(context.Context) ConcurObjectDatasetOutput
}

// Concur Service dataset.
type ConcurObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ConcurObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConcurObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConcurObjectDataset)(nil)).Elem()
}

func (i ConcurObjectDatasetArgs) ToConcurObjectDatasetOutput() ConcurObjectDatasetOutput {
	return i.ToConcurObjectDatasetOutputWithContext(context.Background())
}

func (i ConcurObjectDatasetArgs) ToConcurObjectDatasetOutputWithContext(ctx context.Context) ConcurObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConcurObjectDatasetOutput)
}

// Concur Service dataset.
type ConcurObjectDatasetOutput struct{ *pulumi.OutputState }

func (ConcurObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConcurObjectDataset)(nil)).Elem()
}

func (o ConcurObjectDatasetOutput) ToConcurObjectDatasetOutput() ConcurObjectDatasetOutput {
	return o
}

func (o ConcurObjectDatasetOutput) ToConcurObjectDatasetOutputWithContext(ctx context.Context) ConcurObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ConcurObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConcurObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o ConcurObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConcurObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o ConcurObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v ConcurObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o ConcurObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v ConcurObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o ConcurObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'ConcurObject'.
func (o ConcurObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConcurObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Concur Service dataset.
type ConcurObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ConcurObject'.
	Type string `pulumi:"type"`
}

// ConcurObjectDatasetResponseInput is an input type that accepts ConcurObjectDatasetResponseArgs and ConcurObjectDatasetResponseOutput values.
// You can construct a concrete instance of `ConcurObjectDatasetResponseInput` via:
//
//          ConcurObjectDatasetResponseArgs{...}
type ConcurObjectDatasetResponseInput interface {
	pulumi.Input

	ToConcurObjectDatasetResponseOutput() ConcurObjectDatasetResponseOutput
	ToConcurObjectDatasetResponseOutputWithContext(context.Context) ConcurObjectDatasetResponseOutput
}

// Concur Service dataset.
type ConcurObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ConcurObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConcurObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConcurObjectDatasetResponse)(nil)).Elem()
}

func (i ConcurObjectDatasetResponseArgs) ToConcurObjectDatasetResponseOutput() ConcurObjectDatasetResponseOutput {
	return i.ToConcurObjectDatasetResponseOutputWithContext(context.Background())
}

func (i ConcurObjectDatasetResponseArgs) ToConcurObjectDatasetResponseOutputWithContext(ctx context.Context) ConcurObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConcurObjectDatasetResponseOutput)
}

// Concur Service dataset.
type ConcurObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (ConcurObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConcurObjectDatasetResponse)(nil)).Elem()
}

func (o ConcurObjectDatasetResponseOutput) ToConcurObjectDatasetResponseOutput() ConcurObjectDatasetResponseOutput {
	return o
}

func (o ConcurObjectDatasetResponseOutput) ToConcurObjectDatasetResponseOutputWithContext(ctx context.Context) ConcurObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ConcurObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConcurObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o ConcurObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConcurObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o ConcurObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v ConcurObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o ConcurObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v ConcurObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o ConcurObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'ConcurObject'.
func (o ConcurObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConcurObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Concur Service source.
type ConcurSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ConcurSource'.
	Type string `pulumi:"type"`
}

// ConcurSourceInput is an input type that accepts ConcurSourceArgs and ConcurSourceOutput values.
// You can construct a concrete instance of `ConcurSourceInput` via:
//
//          ConcurSourceArgs{...}
type ConcurSourceInput interface {
	pulumi.Input

	ToConcurSourceOutput() ConcurSourceOutput
	ToConcurSourceOutputWithContext(context.Context) ConcurSourceOutput
}

// A copy activity Concur Service source.
type ConcurSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ConcurSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConcurSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConcurSource)(nil)).Elem()
}

func (i ConcurSourceArgs) ToConcurSourceOutput() ConcurSourceOutput {
	return i.ToConcurSourceOutputWithContext(context.Background())
}

func (i ConcurSourceArgs) ToConcurSourceOutputWithContext(ctx context.Context) ConcurSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConcurSourceOutput)
}

// A copy activity Concur Service source.
type ConcurSourceOutput struct{ *pulumi.OutputState }

func (ConcurSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConcurSource)(nil)).Elem()
}

func (o ConcurSourceOutput) ToConcurSourceOutput() ConcurSourceOutput {
	return o
}

func (o ConcurSourceOutput) ToConcurSourceOutputWithContext(ctx context.Context) ConcurSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o ConcurSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o ConcurSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o ConcurSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'ConcurSource'.
func (o ConcurSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConcurSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Concur Service source.
type ConcurSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ConcurSource'.
	Type string `pulumi:"type"`
}

// ConcurSourceResponseInput is an input type that accepts ConcurSourceResponseArgs and ConcurSourceResponseOutput values.
// You can construct a concrete instance of `ConcurSourceResponseInput` via:
//
//          ConcurSourceResponseArgs{...}
type ConcurSourceResponseInput interface {
	pulumi.Input

	ToConcurSourceResponseOutput() ConcurSourceResponseOutput
	ToConcurSourceResponseOutputWithContext(context.Context) ConcurSourceResponseOutput
}

// A copy activity Concur Service source.
type ConcurSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ConcurSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConcurSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConcurSourceResponse)(nil)).Elem()
}

func (i ConcurSourceResponseArgs) ToConcurSourceResponseOutput() ConcurSourceResponseOutput {
	return i.ToConcurSourceResponseOutputWithContext(context.Background())
}

func (i ConcurSourceResponseArgs) ToConcurSourceResponseOutputWithContext(ctx context.Context) ConcurSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConcurSourceResponseOutput)
}

// A copy activity Concur Service source.
type ConcurSourceResponseOutput struct{ *pulumi.OutputState }

func (ConcurSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConcurSourceResponse)(nil)).Elem()
}

func (o ConcurSourceResponseOutput) ToConcurSourceResponseOutput() ConcurSourceResponseOutput {
	return o
}

func (o ConcurSourceResponseOutput) ToConcurSourceResponseOutputWithContext(ctx context.Context) ConcurSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o ConcurSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o ConcurSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o ConcurSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v ConcurSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'ConcurSource'.
func (o ConcurSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConcurSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Base class for all control activities like IfCondition, ForEach , Until.
type ControlActivity struct {
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Activity name.
	Name string `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type string `pulumi:"type"`
}

// ControlActivityInput is an input type that accepts ControlActivityArgs and ControlActivityOutput values.
// You can construct a concrete instance of `ControlActivityInput` via:
//
//          ControlActivityArgs{...}
type ControlActivityInput interface {
	pulumi.Input

	ToControlActivityOutput() ControlActivityOutput
	ToControlActivityOutputWithContext(context.Context) ControlActivityOutput
}

// Base class for all control activities like IfCondition, ForEach , Until.
type ControlActivityArgs struct {
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ControlActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ControlActivity)(nil)).Elem()
}

func (i ControlActivityArgs) ToControlActivityOutput() ControlActivityOutput {
	return i.ToControlActivityOutputWithContext(context.Background())
}

func (i ControlActivityArgs) ToControlActivityOutputWithContext(ctx context.Context) ControlActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlActivityOutput)
}

// Base class for all control activities like IfCondition, ForEach , Until.
type ControlActivityOutput struct{ *pulumi.OutputState }

func (ControlActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ControlActivity)(nil)).Elem()
}

func (o ControlActivityOutput) ToControlActivityOutput() ControlActivityOutput {
	return o
}

func (o ControlActivityOutput) ToControlActivityOutputWithContext(ctx context.Context) ControlActivityOutput {
	return o
}

// Activity depends on condition.
func (o ControlActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v ControlActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o ControlActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ControlActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Activity name.
func (o ControlActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ControlActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Type of activity.
// Expected value is 'Container'.
func (o ControlActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ControlActivity) string { return v.Type }).(pulumi.StringOutput)
}

// Base class for all control activities like IfCondition, ForEach , Until.
type ControlActivityResponse struct {
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Activity name.
	Name string `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type string `pulumi:"type"`
}

// ControlActivityResponseInput is an input type that accepts ControlActivityResponseArgs and ControlActivityResponseOutput values.
// You can construct a concrete instance of `ControlActivityResponseInput` via:
//
//          ControlActivityResponseArgs{...}
type ControlActivityResponseInput interface {
	pulumi.Input

	ToControlActivityResponseOutput() ControlActivityResponseOutput
	ToControlActivityResponseOutputWithContext(context.Context) ControlActivityResponseOutput
}

// Base class for all control activities like IfCondition, ForEach , Until.
type ControlActivityResponseArgs struct {
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ControlActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ControlActivityResponse)(nil)).Elem()
}

func (i ControlActivityResponseArgs) ToControlActivityResponseOutput() ControlActivityResponseOutput {
	return i.ToControlActivityResponseOutputWithContext(context.Background())
}

func (i ControlActivityResponseArgs) ToControlActivityResponseOutputWithContext(ctx context.Context) ControlActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlActivityResponseOutput)
}

// Base class for all control activities like IfCondition, ForEach , Until.
type ControlActivityResponseOutput struct{ *pulumi.OutputState }

func (ControlActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ControlActivityResponse)(nil)).Elem()
}

func (o ControlActivityResponseOutput) ToControlActivityResponseOutput() ControlActivityResponseOutput {
	return o
}

func (o ControlActivityResponseOutput) ToControlActivityResponseOutputWithContext(ctx context.Context) ControlActivityResponseOutput {
	return o
}

// Activity depends on condition.
func (o ControlActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v ControlActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o ControlActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ControlActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Activity name.
func (o ControlActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ControlActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Type of activity.
// Expected value is 'Container'.
func (o ControlActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ControlActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Copy activity.
type CopyActivity struct {
	// Maximum number of cloud data movement units that can be used to perform this data movement. Type: integer (or Expression with resultType integer), minimum: 0.
	CloudDataMovementUnits interface{} `pulumi:"cloudDataMovementUnits"`
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Whether to skip incompatible row. Default value is false. Type: boolean (or Expression with resultType boolean).
	EnableSkipIncompatibleRow interface{} `pulumi:"enableSkipIncompatibleRow"`
	// Specifies whether to copy data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
	EnableStaging interface{} `pulumi:"enableStaging"`
	// List of inputs for the activity.
	Inputs []DatasetReference `pulumi:"inputs"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReference `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// List of outputs for the activity.
	Outputs []DatasetReference `pulumi:"outputs"`
	// Maximum number of concurrent sessions opened on the source or sink to avoid overloading the data store. Type: integer (or Expression with resultType integer), minimum: 0.
	ParallelCopies interface{} `pulumi:"parallelCopies"`
	// Activity policy.
	Policy *ActivityPolicy `pulumi:"policy"`
	// Redirect incompatible row settings when EnableSkipIncompatibleRow is true.
	RedirectIncompatibleRowSettings *RedirectIncompatibleRowSettings `pulumi:"redirectIncompatibleRowSettings"`
	// Copy activity sink.
	Sink interface{} `pulumi:"sink"`
	// Copy activity source.
	Source interface{} `pulumi:"source"`
	// Specifies interim staging settings when EnableStaging is true.
	StagingSettings *StagingSettings `pulumi:"stagingSettings"`
	// Copy activity translator. If not specified, tabular translator is used.
	Translator interface{} `pulumi:"translator"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// CopyActivityInput is an input type that accepts CopyActivityArgs and CopyActivityOutput values.
// You can construct a concrete instance of `CopyActivityInput` via:
//
//          CopyActivityArgs{...}
type CopyActivityInput interface {
	pulumi.Input

	ToCopyActivityOutput() CopyActivityOutput
	ToCopyActivityOutputWithContext(context.Context) CopyActivityOutput
}

// Copy activity.
type CopyActivityArgs struct {
	// Maximum number of cloud data movement units that can be used to perform this data movement. Type: integer (or Expression with resultType integer), minimum: 0.
	CloudDataMovementUnits pulumi.Input `pulumi:"cloudDataMovementUnits"`
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Whether to skip incompatible row. Default value is false. Type: boolean (or Expression with resultType boolean).
	EnableSkipIncompatibleRow pulumi.Input `pulumi:"enableSkipIncompatibleRow"`
	// Specifies whether to copy data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
	EnableStaging pulumi.Input `pulumi:"enableStaging"`
	// List of inputs for the activity.
	Inputs DatasetReferenceArrayInput `pulumi:"inputs"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferencePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// List of outputs for the activity.
	Outputs DatasetReferenceArrayInput `pulumi:"outputs"`
	// Maximum number of concurrent sessions opened on the source or sink to avoid overloading the data store. Type: integer (or Expression with resultType integer), minimum: 0.
	ParallelCopies pulumi.Input `pulumi:"parallelCopies"`
	// Activity policy.
	Policy ActivityPolicyPtrInput `pulumi:"policy"`
	// Redirect incompatible row settings when EnableSkipIncompatibleRow is true.
	RedirectIncompatibleRowSettings RedirectIncompatibleRowSettingsPtrInput `pulumi:"redirectIncompatibleRowSettings"`
	// Copy activity sink.
	Sink pulumi.Input `pulumi:"sink"`
	// Copy activity source.
	Source pulumi.Input `pulumi:"source"`
	// Specifies interim staging settings when EnableStaging is true.
	StagingSettings StagingSettingsPtrInput `pulumi:"stagingSettings"`
	// Copy activity translator. If not specified, tabular translator is used.
	Translator pulumi.Input `pulumi:"translator"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CopyActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CopyActivity)(nil)).Elem()
}

func (i CopyActivityArgs) ToCopyActivityOutput() CopyActivityOutput {
	return i.ToCopyActivityOutputWithContext(context.Background())
}

func (i CopyActivityArgs) ToCopyActivityOutputWithContext(ctx context.Context) CopyActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CopyActivityOutput)
}

// Copy activity.
type CopyActivityOutput struct{ *pulumi.OutputState }

func (CopyActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CopyActivity)(nil)).Elem()
}

func (o CopyActivityOutput) ToCopyActivityOutput() CopyActivityOutput {
	return o
}

func (o CopyActivityOutput) ToCopyActivityOutputWithContext(ctx context.Context) CopyActivityOutput {
	return o
}

// Maximum number of cloud data movement units that can be used to perform this data movement. Type: integer (or Expression with resultType integer), minimum: 0.
func (o CopyActivityOutput) CloudDataMovementUnits() pulumi.AnyOutput {
	return o.ApplyT(func(v CopyActivity) interface{} { return v.CloudDataMovementUnits }).(pulumi.AnyOutput)
}

// Activity depends on condition.
func (o CopyActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v CopyActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o CopyActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CopyActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether to skip incompatible row. Default value is false. Type: boolean (or Expression with resultType boolean).
func (o CopyActivityOutput) EnableSkipIncompatibleRow() pulumi.AnyOutput {
	return o.ApplyT(func(v CopyActivity) interface{} { return v.EnableSkipIncompatibleRow }).(pulumi.AnyOutput)
}

// Specifies whether to copy data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
func (o CopyActivityOutput) EnableStaging() pulumi.AnyOutput {
	return o.ApplyT(func(v CopyActivity) interface{} { return v.EnableStaging }).(pulumi.AnyOutput)
}

// List of inputs for the activity.
func (o CopyActivityOutput) Inputs() DatasetReferenceArrayOutput {
	return o.ApplyT(func(v CopyActivity) []DatasetReference { return v.Inputs }).(DatasetReferenceArrayOutput)
}

// Linked service reference.
func (o CopyActivityOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v CopyActivity) *LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// Activity name.
func (o CopyActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CopyActivity) string { return v.Name }).(pulumi.StringOutput)
}

// List of outputs for the activity.
func (o CopyActivityOutput) Outputs() DatasetReferenceArrayOutput {
	return o.ApplyT(func(v CopyActivity) []DatasetReference { return v.Outputs }).(DatasetReferenceArrayOutput)
}

// Maximum number of concurrent sessions opened on the source or sink to avoid overloading the data store. Type: integer (or Expression with resultType integer), minimum: 0.
func (o CopyActivityOutput) ParallelCopies() pulumi.AnyOutput {
	return o.ApplyT(func(v CopyActivity) interface{} { return v.ParallelCopies }).(pulumi.AnyOutput)
}

// Activity policy.
func (o CopyActivityOutput) Policy() ActivityPolicyPtrOutput {
	return o.ApplyT(func(v CopyActivity) *ActivityPolicy { return v.Policy }).(ActivityPolicyPtrOutput)
}

// Redirect incompatible row settings when EnableSkipIncompatibleRow is true.
func (o CopyActivityOutput) RedirectIncompatibleRowSettings() RedirectIncompatibleRowSettingsPtrOutput {
	return o.ApplyT(func(v CopyActivity) *RedirectIncompatibleRowSettings { return v.RedirectIncompatibleRowSettings }).(RedirectIncompatibleRowSettingsPtrOutput)
}

// Copy activity sink.
func (o CopyActivityOutput) Sink() pulumi.AnyOutput {
	return o.ApplyT(func(v CopyActivity) interface{} { return v.Sink }).(pulumi.AnyOutput)
}

// Copy activity source.
func (o CopyActivityOutput) Source() pulumi.AnyOutput {
	return o.ApplyT(func(v CopyActivity) interface{} { return v.Source }).(pulumi.AnyOutput)
}

// Specifies interim staging settings when EnableStaging is true.
func (o CopyActivityOutput) StagingSettings() StagingSettingsPtrOutput {
	return o.ApplyT(func(v CopyActivity) *StagingSettings { return v.StagingSettings }).(StagingSettingsPtrOutput)
}

// Copy activity translator. If not specified, tabular translator is used.
func (o CopyActivityOutput) Translator() pulumi.AnyOutput {
	return o.ApplyT(func(v CopyActivity) interface{} { return v.Translator }).(pulumi.AnyOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o CopyActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CopyActivity) string { return v.Type }).(pulumi.StringOutput)
}

// Copy activity.
type CopyActivityResponse struct {
	// Maximum number of cloud data movement units that can be used to perform this data movement. Type: integer (or Expression with resultType integer), minimum: 0.
	CloudDataMovementUnits interface{} `pulumi:"cloudDataMovementUnits"`
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Whether to skip incompatible row. Default value is false. Type: boolean (or Expression with resultType boolean).
	EnableSkipIncompatibleRow interface{} `pulumi:"enableSkipIncompatibleRow"`
	// Specifies whether to copy data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
	EnableStaging interface{} `pulumi:"enableStaging"`
	// List of inputs for the activity.
	Inputs []DatasetReferenceResponse `pulumi:"inputs"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// List of outputs for the activity.
	Outputs []DatasetReferenceResponse `pulumi:"outputs"`
	// Maximum number of concurrent sessions opened on the source or sink to avoid overloading the data store. Type: integer (or Expression with resultType integer), minimum: 0.
	ParallelCopies interface{} `pulumi:"parallelCopies"`
	// Activity policy.
	Policy *ActivityPolicyResponse `pulumi:"policy"`
	// Redirect incompatible row settings when EnableSkipIncompatibleRow is true.
	RedirectIncompatibleRowSettings *RedirectIncompatibleRowSettingsResponse `pulumi:"redirectIncompatibleRowSettings"`
	// Copy activity sink.
	Sink interface{} `pulumi:"sink"`
	// Copy activity source.
	Source interface{} `pulumi:"source"`
	// Specifies interim staging settings when EnableStaging is true.
	StagingSettings *StagingSettingsResponse `pulumi:"stagingSettings"`
	// Copy activity translator. If not specified, tabular translator is used.
	Translator interface{} `pulumi:"translator"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// CopyActivityResponseInput is an input type that accepts CopyActivityResponseArgs and CopyActivityResponseOutput values.
// You can construct a concrete instance of `CopyActivityResponseInput` via:
//
//          CopyActivityResponseArgs{...}
type CopyActivityResponseInput interface {
	pulumi.Input

	ToCopyActivityResponseOutput() CopyActivityResponseOutput
	ToCopyActivityResponseOutputWithContext(context.Context) CopyActivityResponseOutput
}

// Copy activity.
type CopyActivityResponseArgs struct {
	// Maximum number of cloud data movement units that can be used to perform this data movement. Type: integer (or Expression with resultType integer), minimum: 0.
	CloudDataMovementUnits pulumi.Input `pulumi:"cloudDataMovementUnits"`
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Whether to skip incompatible row. Default value is false. Type: boolean (or Expression with resultType boolean).
	EnableSkipIncompatibleRow pulumi.Input `pulumi:"enableSkipIncompatibleRow"`
	// Specifies whether to copy data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
	EnableStaging pulumi.Input `pulumi:"enableStaging"`
	// List of inputs for the activity.
	Inputs DatasetReferenceResponseArrayInput `pulumi:"inputs"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// List of outputs for the activity.
	Outputs DatasetReferenceResponseArrayInput `pulumi:"outputs"`
	// Maximum number of concurrent sessions opened on the source or sink to avoid overloading the data store. Type: integer (or Expression with resultType integer), minimum: 0.
	ParallelCopies pulumi.Input `pulumi:"parallelCopies"`
	// Activity policy.
	Policy ActivityPolicyResponsePtrInput `pulumi:"policy"`
	// Redirect incompatible row settings when EnableSkipIncompatibleRow is true.
	RedirectIncompatibleRowSettings RedirectIncompatibleRowSettingsResponsePtrInput `pulumi:"redirectIncompatibleRowSettings"`
	// Copy activity sink.
	Sink pulumi.Input `pulumi:"sink"`
	// Copy activity source.
	Source pulumi.Input `pulumi:"source"`
	// Specifies interim staging settings when EnableStaging is true.
	StagingSettings StagingSettingsResponsePtrInput `pulumi:"stagingSettings"`
	// Copy activity translator. If not specified, tabular translator is used.
	Translator pulumi.Input `pulumi:"translator"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CopyActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CopyActivityResponse)(nil)).Elem()
}

func (i CopyActivityResponseArgs) ToCopyActivityResponseOutput() CopyActivityResponseOutput {
	return i.ToCopyActivityResponseOutputWithContext(context.Background())
}

func (i CopyActivityResponseArgs) ToCopyActivityResponseOutputWithContext(ctx context.Context) CopyActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CopyActivityResponseOutput)
}

// Copy activity.
type CopyActivityResponseOutput struct{ *pulumi.OutputState }

func (CopyActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CopyActivityResponse)(nil)).Elem()
}

func (o CopyActivityResponseOutput) ToCopyActivityResponseOutput() CopyActivityResponseOutput {
	return o
}

func (o CopyActivityResponseOutput) ToCopyActivityResponseOutputWithContext(ctx context.Context) CopyActivityResponseOutput {
	return o
}

// Maximum number of cloud data movement units that can be used to perform this data movement. Type: integer (or Expression with resultType integer), minimum: 0.
func (o CopyActivityResponseOutput) CloudDataMovementUnits() pulumi.AnyOutput {
	return o.ApplyT(func(v CopyActivityResponse) interface{} { return v.CloudDataMovementUnits }).(pulumi.AnyOutput)
}

// Activity depends on condition.
func (o CopyActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v CopyActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o CopyActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CopyActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether to skip incompatible row. Default value is false. Type: boolean (or Expression with resultType boolean).
func (o CopyActivityResponseOutput) EnableSkipIncompatibleRow() pulumi.AnyOutput {
	return o.ApplyT(func(v CopyActivityResponse) interface{} { return v.EnableSkipIncompatibleRow }).(pulumi.AnyOutput)
}

// Specifies whether to copy data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
func (o CopyActivityResponseOutput) EnableStaging() pulumi.AnyOutput {
	return o.ApplyT(func(v CopyActivityResponse) interface{} { return v.EnableStaging }).(pulumi.AnyOutput)
}

// List of inputs for the activity.
func (o CopyActivityResponseOutput) Inputs() DatasetReferenceResponseArrayOutput {
	return o.ApplyT(func(v CopyActivityResponse) []DatasetReferenceResponse { return v.Inputs }).(DatasetReferenceResponseArrayOutput)
}

// Linked service reference.
func (o CopyActivityResponseOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v CopyActivityResponse) *LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponsePtrOutput)
}

// Activity name.
func (o CopyActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CopyActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// List of outputs for the activity.
func (o CopyActivityResponseOutput) Outputs() DatasetReferenceResponseArrayOutput {
	return o.ApplyT(func(v CopyActivityResponse) []DatasetReferenceResponse { return v.Outputs }).(DatasetReferenceResponseArrayOutput)
}

// Maximum number of concurrent sessions opened on the source or sink to avoid overloading the data store. Type: integer (or Expression with resultType integer), minimum: 0.
func (o CopyActivityResponseOutput) ParallelCopies() pulumi.AnyOutput {
	return o.ApplyT(func(v CopyActivityResponse) interface{} { return v.ParallelCopies }).(pulumi.AnyOutput)
}

// Activity policy.
func (o CopyActivityResponseOutput) Policy() ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v CopyActivityResponse) *ActivityPolicyResponse { return v.Policy }).(ActivityPolicyResponsePtrOutput)
}

// Redirect incompatible row settings when EnableSkipIncompatibleRow is true.
func (o CopyActivityResponseOutput) RedirectIncompatibleRowSettings() RedirectIncompatibleRowSettingsResponsePtrOutput {
	return o.ApplyT(func(v CopyActivityResponse) *RedirectIncompatibleRowSettingsResponse {
		return v.RedirectIncompatibleRowSettings
	}).(RedirectIncompatibleRowSettingsResponsePtrOutput)
}

// Copy activity sink.
func (o CopyActivityResponseOutput) Sink() pulumi.AnyOutput {
	return o.ApplyT(func(v CopyActivityResponse) interface{} { return v.Sink }).(pulumi.AnyOutput)
}

// Copy activity source.
func (o CopyActivityResponseOutput) Source() pulumi.AnyOutput {
	return o.ApplyT(func(v CopyActivityResponse) interface{} { return v.Source }).(pulumi.AnyOutput)
}

// Specifies interim staging settings when EnableStaging is true.
func (o CopyActivityResponseOutput) StagingSettings() StagingSettingsResponsePtrOutput {
	return o.ApplyT(func(v CopyActivityResponse) *StagingSettingsResponse { return v.StagingSettings }).(StagingSettingsResponsePtrOutput)
}

// Copy activity translator. If not specified, tabular translator is used.
func (o CopyActivityResponseOutput) Translator() pulumi.AnyOutput {
	return o.ApplyT(func(v CopyActivityResponse) interface{} { return v.Translator }).(pulumi.AnyOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o CopyActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CopyActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Microsoft Azure Cosmos Database (CosmosDB) linked service.
type CosmosDbLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'CosmosDb'.
	Type string `pulumi:"type"`
}

// CosmosDbLinkedServiceInput is an input type that accepts CosmosDbLinkedServiceArgs and CosmosDbLinkedServiceOutput values.
// You can construct a concrete instance of `CosmosDbLinkedServiceInput` via:
//
//          CosmosDbLinkedServiceArgs{...}
type CosmosDbLinkedServiceInput interface {
	pulumi.Input

	ToCosmosDbLinkedServiceOutput() CosmosDbLinkedServiceOutput
	ToCosmosDbLinkedServiceOutputWithContext(context.Context) CosmosDbLinkedServiceOutput
}

// Microsoft Azure Cosmos Database (CosmosDB) linked service.
type CosmosDbLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'CosmosDb'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CosmosDbLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosmosDbLinkedService)(nil)).Elem()
}

func (i CosmosDbLinkedServiceArgs) ToCosmosDbLinkedServiceOutput() CosmosDbLinkedServiceOutput {
	return i.ToCosmosDbLinkedServiceOutputWithContext(context.Background())
}

func (i CosmosDbLinkedServiceArgs) ToCosmosDbLinkedServiceOutputWithContext(ctx context.Context) CosmosDbLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosmosDbLinkedServiceOutput)
}

// Microsoft Azure Cosmos Database (CosmosDB) linked service.
type CosmosDbLinkedServiceOutput struct{ *pulumi.OutputState }

func (CosmosDbLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosmosDbLinkedService)(nil)).Elem()
}

func (o CosmosDbLinkedServiceOutput) ToCosmosDbLinkedServiceOutput() CosmosDbLinkedServiceOutput {
	return o
}

func (o CosmosDbLinkedServiceOutput) ToCosmosDbLinkedServiceOutputWithContext(ctx context.Context) CosmosDbLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o CosmosDbLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v CosmosDbLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o CosmosDbLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v CosmosDbLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o CosmosDbLinkedServiceOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v CosmosDbLinkedService) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o CosmosDbLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosmosDbLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o CosmosDbLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v CosmosDbLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o CosmosDbLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v CosmosDbLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'CosmosDb'.
func (o CosmosDbLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CosmosDbLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Microsoft Azure Cosmos Database (CosmosDB) linked service.
type CosmosDbLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'CosmosDb'.
	Type string `pulumi:"type"`
}

// CosmosDbLinkedServiceResponseInput is an input type that accepts CosmosDbLinkedServiceResponseArgs and CosmosDbLinkedServiceResponseOutput values.
// You can construct a concrete instance of `CosmosDbLinkedServiceResponseInput` via:
//
//          CosmosDbLinkedServiceResponseArgs{...}
type CosmosDbLinkedServiceResponseInput interface {
	pulumi.Input

	ToCosmosDbLinkedServiceResponseOutput() CosmosDbLinkedServiceResponseOutput
	ToCosmosDbLinkedServiceResponseOutputWithContext(context.Context) CosmosDbLinkedServiceResponseOutput
}

// Microsoft Azure Cosmos Database (CosmosDB) linked service.
type CosmosDbLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'CosmosDb'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CosmosDbLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosmosDbLinkedServiceResponse)(nil)).Elem()
}

func (i CosmosDbLinkedServiceResponseArgs) ToCosmosDbLinkedServiceResponseOutput() CosmosDbLinkedServiceResponseOutput {
	return i.ToCosmosDbLinkedServiceResponseOutputWithContext(context.Background())
}

func (i CosmosDbLinkedServiceResponseArgs) ToCosmosDbLinkedServiceResponseOutputWithContext(ctx context.Context) CosmosDbLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosmosDbLinkedServiceResponseOutput)
}

// Microsoft Azure Cosmos Database (CosmosDB) linked service.
type CosmosDbLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (CosmosDbLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosmosDbLinkedServiceResponse)(nil)).Elem()
}

func (o CosmosDbLinkedServiceResponseOutput) ToCosmosDbLinkedServiceResponseOutput() CosmosDbLinkedServiceResponseOutput {
	return o
}

func (o CosmosDbLinkedServiceResponseOutput) ToCosmosDbLinkedServiceResponseOutputWithContext(ctx context.Context) CosmosDbLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o CosmosDbLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v CosmosDbLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o CosmosDbLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v CosmosDbLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o CosmosDbLinkedServiceResponseOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v CosmosDbLinkedServiceResponse) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o CosmosDbLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosmosDbLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o CosmosDbLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v CosmosDbLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o CosmosDbLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v CosmosDbLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'CosmosDb'.
func (o CosmosDbLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CosmosDbLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Couchbase server linked service.
type CouchbaseLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Couchbase'.
	Type string `pulumi:"type"`
}

// CouchbaseLinkedServiceInput is an input type that accepts CouchbaseLinkedServiceArgs and CouchbaseLinkedServiceOutput values.
// You can construct a concrete instance of `CouchbaseLinkedServiceInput` via:
//
//          CouchbaseLinkedServiceArgs{...}
type CouchbaseLinkedServiceInput interface {
	pulumi.Input

	ToCouchbaseLinkedServiceOutput() CouchbaseLinkedServiceOutput
	ToCouchbaseLinkedServiceOutputWithContext(context.Context) CouchbaseLinkedServiceOutput
}

// Couchbase server linked service.
type CouchbaseLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Couchbase'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CouchbaseLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CouchbaseLinkedService)(nil)).Elem()
}

func (i CouchbaseLinkedServiceArgs) ToCouchbaseLinkedServiceOutput() CouchbaseLinkedServiceOutput {
	return i.ToCouchbaseLinkedServiceOutputWithContext(context.Background())
}

func (i CouchbaseLinkedServiceArgs) ToCouchbaseLinkedServiceOutputWithContext(ctx context.Context) CouchbaseLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CouchbaseLinkedServiceOutput)
}

// Couchbase server linked service.
type CouchbaseLinkedServiceOutput struct{ *pulumi.OutputState }

func (CouchbaseLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CouchbaseLinkedService)(nil)).Elem()
}

func (o CouchbaseLinkedServiceOutput) ToCouchbaseLinkedServiceOutput() CouchbaseLinkedServiceOutput {
	return o
}

func (o CouchbaseLinkedServiceOutput) ToCouchbaseLinkedServiceOutputWithContext(ctx context.Context) CouchbaseLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o CouchbaseLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v CouchbaseLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o CouchbaseLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v CouchbaseLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o CouchbaseLinkedServiceOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v CouchbaseLinkedService) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o CouchbaseLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CouchbaseLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o CouchbaseLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v CouchbaseLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o CouchbaseLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v CouchbaseLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'Couchbase'.
func (o CouchbaseLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CouchbaseLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Couchbase server linked service.
type CouchbaseLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Couchbase'.
	Type string `pulumi:"type"`
}

// CouchbaseLinkedServiceResponseInput is an input type that accepts CouchbaseLinkedServiceResponseArgs and CouchbaseLinkedServiceResponseOutput values.
// You can construct a concrete instance of `CouchbaseLinkedServiceResponseInput` via:
//
//          CouchbaseLinkedServiceResponseArgs{...}
type CouchbaseLinkedServiceResponseInput interface {
	pulumi.Input

	ToCouchbaseLinkedServiceResponseOutput() CouchbaseLinkedServiceResponseOutput
	ToCouchbaseLinkedServiceResponseOutputWithContext(context.Context) CouchbaseLinkedServiceResponseOutput
}

// Couchbase server linked service.
type CouchbaseLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Couchbase'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CouchbaseLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CouchbaseLinkedServiceResponse)(nil)).Elem()
}

func (i CouchbaseLinkedServiceResponseArgs) ToCouchbaseLinkedServiceResponseOutput() CouchbaseLinkedServiceResponseOutput {
	return i.ToCouchbaseLinkedServiceResponseOutputWithContext(context.Background())
}

func (i CouchbaseLinkedServiceResponseArgs) ToCouchbaseLinkedServiceResponseOutputWithContext(ctx context.Context) CouchbaseLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CouchbaseLinkedServiceResponseOutput)
}

// Couchbase server linked service.
type CouchbaseLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (CouchbaseLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CouchbaseLinkedServiceResponse)(nil)).Elem()
}

func (o CouchbaseLinkedServiceResponseOutput) ToCouchbaseLinkedServiceResponseOutput() CouchbaseLinkedServiceResponseOutput {
	return o
}

func (o CouchbaseLinkedServiceResponseOutput) ToCouchbaseLinkedServiceResponseOutputWithContext(ctx context.Context) CouchbaseLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o CouchbaseLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v CouchbaseLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o CouchbaseLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v CouchbaseLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o CouchbaseLinkedServiceResponseOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v CouchbaseLinkedServiceResponse) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o CouchbaseLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CouchbaseLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o CouchbaseLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v CouchbaseLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o CouchbaseLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v CouchbaseLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'Couchbase'.
func (o CouchbaseLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CouchbaseLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Couchbase server source.
type CouchbaseSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'CouchbaseSource'.
	Type string `pulumi:"type"`
}

// CouchbaseSourceInput is an input type that accepts CouchbaseSourceArgs and CouchbaseSourceOutput values.
// You can construct a concrete instance of `CouchbaseSourceInput` via:
//
//          CouchbaseSourceArgs{...}
type CouchbaseSourceInput interface {
	pulumi.Input

	ToCouchbaseSourceOutput() CouchbaseSourceOutput
	ToCouchbaseSourceOutputWithContext(context.Context) CouchbaseSourceOutput
}

// A copy activity Couchbase server source.
type CouchbaseSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'CouchbaseSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CouchbaseSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CouchbaseSource)(nil)).Elem()
}

func (i CouchbaseSourceArgs) ToCouchbaseSourceOutput() CouchbaseSourceOutput {
	return i.ToCouchbaseSourceOutputWithContext(context.Background())
}

func (i CouchbaseSourceArgs) ToCouchbaseSourceOutputWithContext(ctx context.Context) CouchbaseSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CouchbaseSourceOutput)
}

// A copy activity Couchbase server source.
type CouchbaseSourceOutput struct{ *pulumi.OutputState }

func (CouchbaseSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CouchbaseSource)(nil)).Elem()
}

func (o CouchbaseSourceOutput) ToCouchbaseSourceOutput() CouchbaseSourceOutput {
	return o
}

func (o CouchbaseSourceOutput) ToCouchbaseSourceOutputWithContext(ctx context.Context) CouchbaseSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o CouchbaseSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v CouchbaseSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o CouchbaseSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v CouchbaseSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o CouchbaseSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v CouchbaseSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'CouchbaseSource'.
func (o CouchbaseSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CouchbaseSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Couchbase server source.
type CouchbaseSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'CouchbaseSource'.
	Type string `pulumi:"type"`
}

// CouchbaseSourceResponseInput is an input type that accepts CouchbaseSourceResponseArgs and CouchbaseSourceResponseOutput values.
// You can construct a concrete instance of `CouchbaseSourceResponseInput` via:
//
//          CouchbaseSourceResponseArgs{...}
type CouchbaseSourceResponseInput interface {
	pulumi.Input

	ToCouchbaseSourceResponseOutput() CouchbaseSourceResponseOutput
	ToCouchbaseSourceResponseOutputWithContext(context.Context) CouchbaseSourceResponseOutput
}

// A copy activity Couchbase server source.
type CouchbaseSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'CouchbaseSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CouchbaseSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CouchbaseSourceResponse)(nil)).Elem()
}

func (i CouchbaseSourceResponseArgs) ToCouchbaseSourceResponseOutput() CouchbaseSourceResponseOutput {
	return i.ToCouchbaseSourceResponseOutputWithContext(context.Background())
}

func (i CouchbaseSourceResponseArgs) ToCouchbaseSourceResponseOutputWithContext(ctx context.Context) CouchbaseSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CouchbaseSourceResponseOutput)
}

// A copy activity Couchbase server source.
type CouchbaseSourceResponseOutput struct{ *pulumi.OutputState }

func (CouchbaseSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CouchbaseSourceResponse)(nil)).Elem()
}

func (o CouchbaseSourceResponseOutput) ToCouchbaseSourceResponseOutput() CouchbaseSourceResponseOutput {
	return o
}

func (o CouchbaseSourceResponseOutput) ToCouchbaseSourceResponseOutputWithContext(ctx context.Context) CouchbaseSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o CouchbaseSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v CouchbaseSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o CouchbaseSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v CouchbaseSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o CouchbaseSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v CouchbaseSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'CouchbaseSource'.
func (o CouchbaseSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CouchbaseSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Couchbase server dataset.
type CouchbaseTableDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'CouchbaseTable'.
	Type string `pulumi:"type"`
}

// CouchbaseTableDatasetInput is an input type that accepts CouchbaseTableDatasetArgs and CouchbaseTableDatasetOutput values.
// You can construct a concrete instance of `CouchbaseTableDatasetInput` via:
//
//          CouchbaseTableDatasetArgs{...}
type CouchbaseTableDatasetInput interface {
	pulumi.Input

	ToCouchbaseTableDatasetOutput() CouchbaseTableDatasetOutput
	ToCouchbaseTableDatasetOutputWithContext(context.Context) CouchbaseTableDatasetOutput
}

// Couchbase server dataset.
type CouchbaseTableDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'CouchbaseTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CouchbaseTableDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CouchbaseTableDataset)(nil)).Elem()
}

func (i CouchbaseTableDatasetArgs) ToCouchbaseTableDatasetOutput() CouchbaseTableDatasetOutput {
	return i.ToCouchbaseTableDatasetOutputWithContext(context.Background())
}

func (i CouchbaseTableDatasetArgs) ToCouchbaseTableDatasetOutputWithContext(ctx context.Context) CouchbaseTableDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CouchbaseTableDatasetOutput)
}

// Couchbase server dataset.
type CouchbaseTableDatasetOutput struct{ *pulumi.OutputState }

func (CouchbaseTableDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CouchbaseTableDataset)(nil)).Elem()
}

func (o CouchbaseTableDatasetOutput) ToCouchbaseTableDatasetOutput() CouchbaseTableDatasetOutput {
	return o
}

func (o CouchbaseTableDatasetOutput) ToCouchbaseTableDatasetOutputWithContext(ctx context.Context) CouchbaseTableDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o CouchbaseTableDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v CouchbaseTableDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o CouchbaseTableDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CouchbaseTableDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o CouchbaseTableDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v CouchbaseTableDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o CouchbaseTableDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v CouchbaseTableDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o CouchbaseTableDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v CouchbaseTableDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'CouchbaseTable'.
func (o CouchbaseTableDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CouchbaseTableDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Couchbase server dataset.
type CouchbaseTableDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'CouchbaseTable'.
	Type string `pulumi:"type"`
}

// CouchbaseTableDatasetResponseInput is an input type that accepts CouchbaseTableDatasetResponseArgs and CouchbaseTableDatasetResponseOutput values.
// You can construct a concrete instance of `CouchbaseTableDatasetResponseInput` via:
//
//          CouchbaseTableDatasetResponseArgs{...}
type CouchbaseTableDatasetResponseInput interface {
	pulumi.Input

	ToCouchbaseTableDatasetResponseOutput() CouchbaseTableDatasetResponseOutput
	ToCouchbaseTableDatasetResponseOutputWithContext(context.Context) CouchbaseTableDatasetResponseOutput
}

// Couchbase server dataset.
type CouchbaseTableDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'CouchbaseTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CouchbaseTableDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CouchbaseTableDatasetResponse)(nil)).Elem()
}

func (i CouchbaseTableDatasetResponseArgs) ToCouchbaseTableDatasetResponseOutput() CouchbaseTableDatasetResponseOutput {
	return i.ToCouchbaseTableDatasetResponseOutputWithContext(context.Background())
}

func (i CouchbaseTableDatasetResponseArgs) ToCouchbaseTableDatasetResponseOutputWithContext(ctx context.Context) CouchbaseTableDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CouchbaseTableDatasetResponseOutput)
}

// Couchbase server dataset.
type CouchbaseTableDatasetResponseOutput struct{ *pulumi.OutputState }

func (CouchbaseTableDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CouchbaseTableDatasetResponse)(nil)).Elem()
}

func (o CouchbaseTableDatasetResponseOutput) ToCouchbaseTableDatasetResponseOutput() CouchbaseTableDatasetResponseOutput {
	return o
}

func (o CouchbaseTableDatasetResponseOutput) ToCouchbaseTableDatasetResponseOutputWithContext(ctx context.Context) CouchbaseTableDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o CouchbaseTableDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v CouchbaseTableDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o CouchbaseTableDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CouchbaseTableDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o CouchbaseTableDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v CouchbaseTableDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o CouchbaseTableDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v CouchbaseTableDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o CouchbaseTableDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v CouchbaseTableDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'CouchbaseTable'.
func (o CouchbaseTableDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CouchbaseTableDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Custom activity type.
type CustomActivity struct {
	// Command for custom activity Type: string (or Expression with resultType string).
	Command interface{} `pulumi:"command"`
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// User defined property bag. There is no restriction on the keys or values that can be used. The user specified custom activity has the full responsibility to consume and interpret the content defined.
	ExtendedProperties map[string]interface{} `pulumi:"extendedProperties"`
	// Folder path for resource files Type: string (or Expression with resultType string).
	FolderPath interface{} `pulumi:"folderPath"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReference `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicy `pulumi:"policy"`
	// Reference objects
	ReferenceObjects *CustomActivityReferenceObject `pulumi:"referenceObjects"`
	// Resource linked service reference.
	ResourceLinkedService *LinkedServiceReference `pulumi:"resourceLinkedService"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// CustomActivityInput is an input type that accepts CustomActivityArgs and CustomActivityOutput values.
// You can construct a concrete instance of `CustomActivityInput` via:
//
//          CustomActivityArgs{...}
type CustomActivityInput interface {
	pulumi.Input

	ToCustomActivityOutput() CustomActivityOutput
	ToCustomActivityOutputWithContext(context.Context) CustomActivityOutput
}

// Custom activity type.
type CustomActivityArgs struct {
	// Command for custom activity Type: string (or Expression with resultType string).
	Command pulumi.Input `pulumi:"command"`
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// User defined property bag. There is no restriction on the keys or values that can be used. The user specified custom activity has the full responsibility to consume and interpret the content defined.
	ExtendedProperties pulumi.MapInput `pulumi:"extendedProperties"`
	// Folder path for resource files Type: string (or Expression with resultType string).
	FolderPath pulumi.Input `pulumi:"folderPath"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferencePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyPtrInput `pulumi:"policy"`
	// Reference objects
	ReferenceObjects CustomActivityReferenceObjectPtrInput `pulumi:"referenceObjects"`
	// Resource linked service reference.
	ResourceLinkedService LinkedServiceReferencePtrInput `pulumi:"resourceLinkedService"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CustomActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActivity)(nil)).Elem()
}

func (i CustomActivityArgs) ToCustomActivityOutput() CustomActivityOutput {
	return i.ToCustomActivityOutputWithContext(context.Background())
}

func (i CustomActivityArgs) ToCustomActivityOutputWithContext(ctx context.Context) CustomActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActivityOutput)
}

// Custom activity type.
type CustomActivityOutput struct{ *pulumi.OutputState }

func (CustomActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActivity)(nil)).Elem()
}

func (o CustomActivityOutput) ToCustomActivityOutput() CustomActivityOutput {
	return o
}

func (o CustomActivityOutput) ToCustomActivityOutputWithContext(ctx context.Context) CustomActivityOutput {
	return o
}

// Command for custom activity Type: string (or Expression with resultType string).
func (o CustomActivityOutput) Command() pulumi.AnyOutput {
	return o.ApplyT(func(v CustomActivity) interface{} { return v.Command }).(pulumi.AnyOutput)
}

// Activity depends on condition.
func (o CustomActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v CustomActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o CustomActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// User defined property bag. There is no restriction on the keys or values that can be used. The user specified custom activity has the full responsibility to consume and interpret the content defined.
func (o CustomActivityOutput) ExtendedProperties() pulumi.MapOutput {
	return o.ApplyT(func(v CustomActivity) map[string]interface{} { return v.ExtendedProperties }).(pulumi.MapOutput)
}

// Folder path for resource files Type: string (or Expression with resultType string).
func (o CustomActivityOutput) FolderPath() pulumi.AnyOutput {
	return o.ApplyT(func(v CustomActivity) interface{} { return v.FolderPath }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o CustomActivityOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v CustomActivity) *LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// Activity name.
func (o CustomActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o CustomActivityOutput) Policy() ActivityPolicyPtrOutput {
	return o.ApplyT(func(v CustomActivity) *ActivityPolicy { return v.Policy }).(ActivityPolicyPtrOutput)
}

// Reference objects
func (o CustomActivityOutput) ReferenceObjects() CustomActivityReferenceObjectPtrOutput {
	return o.ApplyT(func(v CustomActivity) *CustomActivityReferenceObject { return v.ReferenceObjects }).(CustomActivityReferenceObjectPtrOutput)
}

// Resource linked service reference.
func (o CustomActivityOutput) ResourceLinkedService() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v CustomActivity) *LinkedServiceReference { return v.ResourceLinkedService }).(LinkedServiceReferencePtrOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o CustomActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CustomActivity) string { return v.Type }).(pulumi.StringOutput)
}

// Reference objects for custom activity
type CustomActivityReferenceObject struct {
	// Dataset references.
	Datasets []DatasetReference `pulumi:"datasets"`
	// Linked service references.
	LinkedServices []LinkedServiceReference `pulumi:"linkedServices"`
}

// CustomActivityReferenceObjectInput is an input type that accepts CustomActivityReferenceObjectArgs and CustomActivityReferenceObjectOutput values.
// You can construct a concrete instance of `CustomActivityReferenceObjectInput` via:
//
//          CustomActivityReferenceObjectArgs{...}
type CustomActivityReferenceObjectInput interface {
	pulumi.Input

	ToCustomActivityReferenceObjectOutput() CustomActivityReferenceObjectOutput
	ToCustomActivityReferenceObjectOutputWithContext(context.Context) CustomActivityReferenceObjectOutput
}

// Reference objects for custom activity
type CustomActivityReferenceObjectArgs struct {
	// Dataset references.
	Datasets DatasetReferenceArrayInput `pulumi:"datasets"`
	// Linked service references.
	LinkedServices LinkedServiceReferenceArrayInput `pulumi:"linkedServices"`
}

func (CustomActivityReferenceObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActivityReferenceObject)(nil)).Elem()
}

func (i CustomActivityReferenceObjectArgs) ToCustomActivityReferenceObjectOutput() CustomActivityReferenceObjectOutput {
	return i.ToCustomActivityReferenceObjectOutputWithContext(context.Background())
}

func (i CustomActivityReferenceObjectArgs) ToCustomActivityReferenceObjectOutputWithContext(ctx context.Context) CustomActivityReferenceObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActivityReferenceObjectOutput)
}

func (i CustomActivityReferenceObjectArgs) ToCustomActivityReferenceObjectPtrOutput() CustomActivityReferenceObjectPtrOutput {
	return i.ToCustomActivityReferenceObjectPtrOutputWithContext(context.Background())
}

func (i CustomActivityReferenceObjectArgs) ToCustomActivityReferenceObjectPtrOutputWithContext(ctx context.Context) CustomActivityReferenceObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActivityReferenceObjectOutput).ToCustomActivityReferenceObjectPtrOutputWithContext(ctx)
}

// CustomActivityReferenceObjectPtrInput is an input type that accepts CustomActivityReferenceObjectArgs, CustomActivityReferenceObjectPtr and CustomActivityReferenceObjectPtrOutput values.
// You can construct a concrete instance of `CustomActivityReferenceObjectPtrInput` via:
//
//          CustomActivityReferenceObjectArgs{...}
//
//  or:
//
//          nil
type CustomActivityReferenceObjectPtrInput interface {
	pulumi.Input

	ToCustomActivityReferenceObjectPtrOutput() CustomActivityReferenceObjectPtrOutput
	ToCustomActivityReferenceObjectPtrOutputWithContext(context.Context) CustomActivityReferenceObjectPtrOutput
}

type customActivityReferenceObjectPtrType CustomActivityReferenceObjectArgs

func CustomActivityReferenceObjectPtr(v *CustomActivityReferenceObjectArgs) CustomActivityReferenceObjectPtrInput {
	return (*customActivityReferenceObjectPtrType)(v)
}

func (*customActivityReferenceObjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActivityReferenceObject)(nil)).Elem()
}

func (i *customActivityReferenceObjectPtrType) ToCustomActivityReferenceObjectPtrOutput() CustomActivityReferenceObjectPtrOutput {
	return i.ToCustomActivityReferenceObjectPtrOutputWithContext(context.Background())
}

func (i *customActivityReferenceObjectPtrType) ToCustomActivityReferenceObjectPtrOutputWithContext(ctx context.Context) CustomActivityReferenceObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActivityReferenceObjectPtrOutput)
}

// Reference objects for custom activity
type CustomActivityReferenceObjectOutput struct{ *pulumi.OutputState }

func (CustomActivityReferenceObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActivityReferenceObject)(nil)).Elem()
}

func (o CustomActivityReferenceObjectOutput) ToCustomActivityReferenceObjectOutput() CustomActivityReferenceObjectOutput {
	return o
}

func (o CustomActivityReferenceObjectOutput) ToCustomActivityReferenceObjectOutputWithContext(ctx context.Context) CustomActivityReferenceObjectOutput {
	return o
}

func (o CustomActivityReferenceObjectOutput) ToCustomActivityReferenceObjectPtrOutput() CustomActivityReferenceObjectPtrOutput {
	return o.ToCustomActivityReferenceObjectPtrOutputWithContext(context.Background())
}

func (o CustomActivityReferenceObjectOutput) ToCustomActivityReferenceObjectPtrOutputWithContext(ctx context.Context) CustomActivityReferenceObjectPtrOutput {
	return o.ApplyT(func(v CustomActivityReferenceObject) *CustomActivityReferenceObject {
		return &v
	}).(CustomActivityReferenceObjectPtrOutput)
}

// Dataset references.
func (o CustomActivityReferenceObjectOutput) Datasets() DatasetReferenceArrayOutput {
	return o.ApplyT(func(v CustomActivityReferenceObject) []DatasetReference { return v.Datasets }).(DatasetReferenceArrayOutput)
}

// Linked service references.
func (o CustomActivityReferenceObjectOutput) LinkedServices() LinkedServiceReferenceArrayOutput {
	return o.ApplyT(func(v CustomActivityReferenceObject) []LinkedServiceReference { return v.LinkedServices }).(LinkedServiceReferenceArrayOutput)
}

type CustomActivityReferenceObjectPtrOutput struct{ *pulumi.OutputState }

func (CustomActivityReferenceObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActivityReferenceObject)(nil)).Elem()
}

func (o CustomActivityReferenceObjectPtrOutput) ToCustomActivityReferenceObjectPtrOutput() CustomActivityReferenceObjectPtrOutput {
	return o
}

func (o CustomActivityReferenceObjectPtrOutput) ToCustomActivityReferenceObjectPtrOutputWithContext(ctx context.Context) CustomActivityReferenceObjectPtrOutput {
	return o
}

func (o CustomActivityReferenceObjectPtrOutput) Elem() CustomActivityReferenceObjectOutput {
	return o.ApplyT(func(v *CustomActivityReferenceObject) CustomActivityReferenceObject { return *v }).(CustomActivityReferenceObjectOutput)
}

// Dataset references.
func (o CustomActivityReferenceObjectPtrOutput) Datasets() DatasetReferenceArrayOutput {
	return o.ApplyT(func(v *CustomActivityReferenceObject) []DatasetReference {
		if v == nil {
			return nil
		}
		return v.Datasets
	}).(DatasetReferenceArrayOutput)
}

// Linked service references.
func (o CustomActivityReferenceObjectPtrOutput) LinkedServices() LinkedServiceReferenceArrayOutput {
	return o.ApplyT(func(v *CustomActivityReferenceObject) []LinkedServiceReference {
		if v == nil {
			return nil
		}
		return v.LinkedServices
	}).(LinkedServiceReferenceArrayOutput)
}

// Reference objects for custom activity
type CustomActivityReferenceObjectResponse struct {
	// Dataset references.
	Datasets []DatasetReferenceResponse `pulumi:"datasets"`
	// Linked service references.
	LinkedServices []LinkedServiceReferenceResponse `pulumi:"linkedServices"`
}

// CustomActivityReferenceObjectResponseInput is an input type that accepts CustomActivityReferenceObjectResponseArgs and CustomActivityReferenceObjectResponseOutput values.
// You can construct a concrete instance of `CustomActivityReferenceObjectResponseInput` via:
//
//          CustomActivityReferenceObjectResponseArgs{...}
type CustomActivityReferenceObjectResponseInput interface {
	pulumi.Input

	ToCustomActivityReferenceObjectResponseOutput() CustomActivityReferenceObjectResponseOutput
	ToCustomActivityReferenceObjectResponseOutputWithContext(context.Context) CustomActivityReferenceObjectResponseOutput
}

// Reference objects for custom activity
type CustomActivityReferenceObjectResponseArgs struct {
	// Dataset references.
	Datasets DatasetReferenceResponseArrayInput `pulumi:"datasets"`
	// Linked service references.
	LinkedServices LinkedServiceReferenceResponseArrayInput `pulumi:"linkedServices"`
}

func (CustomActivityReferenceObjectResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActivityReferenceObjectResponse)(nil)).Elem()
}

func (i CustomActivityReferenceObjectResponseArgs) ToCustomActivityReferenceObjectResponseOutput() CustomActivityReferenceObjectResponseOutput {
	return i.ToCustomActivityReferenceObjectResponseOutputWithContext(context.Background())
}

func (i CustomActivityReferenceObjectResponseArgs) ToCustomActivityReferenceObjectResponseOutputWithContext(ctx context.Context) CustomActivityReferenceObjectResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActivityReferenceObjectResponseOutput)
}

func (i CustomActivityReferenceObjectResponseArgs) ToCustomActivityReferenceObjectResponsePtrOutput() CustomActivityReferenceObjectResponsePtrOutput {
	return i.ToCustomActivityReferenceObjectResponsePtrOutputWithContext(context.Background())
}

func (i CustomActivityReferenceObjectResponseArgs) ToCustomActivityReferenceObjectResponsePtrOutputWithContext(ctx context.Context) CustomActivityReferenceObjectResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActivityReferenceObjectResponseOutput).ToCustomActivityReferenceObjectResponsePtrOutputWithContext(ctx)
}

// CustomActivityReferenceObjectResponsePtrInput is an input type that accepts CustomActivityReferenceObjectResponseArgs, CustomActivityReferenceObjectResponsePtr and CustomActivityReferenceObjectResponsePtrOutput values.
// You can construct a concrete instance of `CustomActivityReferenceObjectResponsePtrInput` via:
//
//          CustomActivityReferenceObjectResponseArgs{...}
//
//  or:
//
//          nil
type CustomActivityReferenceObjectResponsePtrInput interface {
	pulumi.Input

	ToCustomActivityReferenceObjectResponsePtrOutput() CustomActivityReferenceObjectResponsePtrOutput
	ToCustomActivityReferenceObjectResponsePtrOutputWithContext(context.Context) CustomActivityReferenceObjectResponsePtrOutput
}

type customActivityReferenceObjectResponsePtrType CustomActivityReferenceObjectResponseArgs

func CustomActivityReferenceObjectResponsePtr(v *CustomActivityReferenceObjectResponseArgs) CustomActivityReferenceObjectResponsePtrInput {
	return (*customActivityReferenceObjectResponsePtrType)(v)
}

func (*customActivityReferenceObjectResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActivityReferenceObjectResponse)(nil)).Elem()
}

func (i *customActivityReferenceObjectResponsePtrType) ToCustomActivityReferenceObjectResponsePtrOutput() CustomActivityReferenceObjectResponsePtrOutput {
	return i.ToCustomActivityReferenceObjectResponsePtrOutputWithContext(context.Background())
}

func (i *customActivityReferenceObjectResponsePtrType) ToCustomActivityReferenceObjectResponsePtrOutputWithContext(ctx context.Context) CustomActivityReferenceObjectResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActivityReferenceObjectResponsePtrOutput)
}

// Reference objects for custom activity
type CustomActivityReferenceObjectResponseOutput struct{ *pulumi.OutputState }

func (CustomActivityReferenceObjectResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActivityReferenceObjectResponse)(nil)).Elem()
}

func (o CustomActivityReferenceObjectResponseOutput) ToCustomActivityReferenceObjectResponseOutput() CustomActivityReferenceObjectResponseOutput {
	return o
}

func (o CustomActivityReferenceObjectResponseOutput) ToCustomActivityReferenceObjectResponseOutputWithContext(ctx context.Context) CustomActivityReferenceObjectResponseOutput {
	return o
}

func (o CustomActivityReferenceObjectResponseOutput) ToCustomActivityReferenceObjectResponsePtrOutput() CustomActivityReferenceObjectResponsePtrOutput {
	return o.ToCustomActivityReferenceObjectResponsePtrOutputWithContext(context.Background())
}

func (o CustomActivityReferenceObjectResponseOutput) ToCustomActivityReferenceObjectResponsePtrOutputWithContext(ctx context.Context) CustomActivityReferenceObjectResponsePtrOutput {
	return o.ApplyT(func(v CustomActivityReferenceObjectResponse) *CustomActivityReferenceObjectResponse {
		return &v
	}).(CustomActivityReferenceObjectResponsePtrOutput)
}

// Dataset references.
func (o CustomActivityReferenceObjectResponseOutput) Datasets() DatasetReferenceResponseArrayOutput {
	return o.ApplyT(func(v CustomActivityReferenceObjectResponse) []DatasetReferenceResponse { return v.Datasets }).(DatasetReferenceResponseArrayOutput)
}

// Linked service references.
func (o CustomActivityReferenceObjectResponseOutput) LinkedServices() LinkedServiceReferenceResponseArrayOutput {
	return o.ApplyT(func(v CustomActivityReferenceObjectResponse) []LinkedServiceReferenceResponse {
		return v.LinkedServices
	}).(LinkedServiceReferenceResponseArrayOutput)
}

type CustomActivityReferenceObjectResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomActivityReferenceObjectResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActivityReferenceObjectResponse)(nil)).Elem()
}

func (o CustomActivityReferenceObjectResponsePtrOutput) ToCustomActivityReferenceObjectResponsePtrOutput() CustomActivityReferenceObjectResponsePtrOutput {
	return o
}

func (o CustomActivityReferenceObjectResponsePtrOutput) ToCustomActivityReferenceObjectResponsePtrOutputWithContext(ctx context.Context) CustomActivityReferenceObjectResponsePtrOutput {
	return o
}

func (o CustomActivityReferenceObjectResponsePtrOutput) Elem() CustomActivityReferenceObjectResponseOutput {
	return o.ApplyT(func(v *CustomActivityReferenceObjectResponse) CustomActivityReferenceObjectResponse { return *v }).(CustomActivityReferenceObjectResponseOutput)
}

// Dataset references.
func (o CustomActivityReferenceObjectResponsePtrOutput) Datasets() DatasetReferenceResponseArrayOutput {
	return o.ApplyT(func(v *CustomActivityReferenceObjectResponse) []DatasetReferenceResponse {
		if v == nil {
			return nil
		}
		return v.Datasets
	}).(DatasetReferenceResponseArrayOutput)
}

// Linked service references.
func (o CustomActivityReferenceObjectResponsePtrOutput) LinkedServices() LinkedServiceReferenceResponseArrayOutput {
	return o.ApplyT(func(v *CustomActivityReferenceObjectResponse) []LinkedServiceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.LinkedServices
	}).(LinkedServiceReferenceResponseArrayOutput)
}

// Custom activity type.
type CustomActivityResponse struct {
	// Command for custom activity Type: string (or Expression with resultType string).
	Command interface{} `pulumi:"command"`
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// User defined property bag. There is no restriction on the keys or values that can be used. The user specified custom activity has the full responsibility to consume and interpret the content defined.
	ExtendedProperties map[string]interface{} `pulumi:"extendedProperties"`
	// Folder path for resource files Type: string (or Expression with resultType string).
	FolderPath interface{} `pulumi:"folderPath"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicyResponse `pulumi:"policy"`
	// Reference objects
	ReferenceObjects *CustomActivityReferenceObjectResponse `pulumi:"referenceObjects"`
	// Resource linked service reference.
	ResourceLinkedService *LinkedServiceReferenceResponse `pulumi:"resourceLinkedService"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// CustomActivityResponseInput is an input type that accepts CustomActivityResponseArgs and CustomActivityResponseOutput values.
// You can construct a concrete instance of `CustomActivityResponseInput` via:
//
//          CustomActivityResponseArgs{...}
type CustomActivityResponseInput interface {
	pulumi.Input

	ToCustomActivityResponseOutput() CustomActivityResponseOutput
	ToCustomActivityResponseOutputWithContext(context.Context) CustomActivityResponseOutput
}

// Custom activity type.
type CustomActivityResponseArgs struct {
	// Command for custom activity Type: string (or Expression with resultType string).
	Command pulumi.Input `pulumi:"command"`
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// User defined property bag. There is no restriction on the keys or values that can be used. The user specified custom activity has the full responsibility to consume and interpret the content defined.
	ExtendedProperties pulumi.MapInput `pulumi:"extendedProperties"`
	// Folder path for resource files Type: string (or Expression with resultType string).
	FolderPath pulumi.Input `pulumi:"folderPath"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyResponsePtrInput `pulumi:"policy"`
	// Reference objects
	ReferenceObjects CustomActivityReferenceObjectResponsePtrInput `pulumi:"referenceObjects"`
	// Resource linked service reference.
	ResourceLinkedService LinkedServiceReferenceResponsePtrInput `pulumi:"resourceLinkedService"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CustomActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActivityResponse)(nil)).Elem()
}

func (i CustomActivityResponseArgs) ToCustomActivityResponseOutput() CustomActivityResponseOutput {
	return i.ToCustomActivityResponseOutputWithContext(context.Background())
}

func (i CustomActivityResponseArgs) ToCustomActivityResponseOutputWithContext(ctx context.Context) CustomActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActivityResponseOutput)
}

// Custom activity type.
type CustomActivityResponseOutput struct{ *pulumi.OutputState }

func (CustomActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActivityResponse)(nil)).Elem()
}

func (o CustomActivityResponseOutput) ToCustomActivityResponseOutput() CustomActivityResponseOutput {
	return o
}

func (o CustomActivityResponseOutput) ToCustomActivityResponseOutputWithContext(ctx context.Context) CustomActivityResponseOutput {
	return o
}

// Command for custom activity Type: string (or Expression with resultType string).
func (o CustomActivityResponseOutput) Command() pulumi.AnyOutput {
	return o.ApplyT(func(v CustomActivityResponse) interface{} { return v.Command }).(pulumi.AnyOutput)
}

// Activity depends on condition.
func (o CustomActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v CustomActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o CustomActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// User defined property bag. There is no restriction on the keys or values that can be used. The user specified custom activity has the full responsibility to consume and interpret the content defined.
func (o CustomActivityResponseOutput) ExtendedProperties() pulumi.MapOutput {
	return o.ApplyT(func(v CustomActivityResponse) map[string]interface{} { return v.ExtendedProperties }).(pulumi.MapOutput)
}

// Folder path for resource files Type: string (or Expression with resultType string).
func (o CustomActivityResponseOutput) FolderPath() pulumi.AnyOutput {
	return o.ApplyT(func(v CustomActivityResponse) interface{} { return v.FolderPath }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o CustomActivityResponseOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v CustomActivityResponse) *LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponsePtrOutput)
}

// Activity name.
func (o CustomActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o CustomActivityResponseOutput) Policy() ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v CustomActivityResponse) *ActivityPolicyResponse { return v.Policy }).(ActivityPolicyResponsePtrOutput)
}

// Reference objects
func (o CustomActivityResponseOutput) ReferenceObjects() CustomActivityReferenceObjectResponsePtrOutput {
	return o.ApplyT(func(v CustomActivityResponse) *CustomActivityReferenceObjectResponse { return v.ReferenceObjects }).(CustomActivityReferenceObjectResponsePtrOutput)
}

// Resource linked service reference.
func (o CustomActivityResponseOutput) ResourceLinkedService() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v CustomActivityResponse) *LinkedServiceReferenceResponse { return v.ResourceLinkedService }).(LinkedServiceReferenceResponsePtrOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o CustomActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CustomActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Custom linked service.
type CustomDataSourceLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'CustomDataSource'.
	Type string `pulumi:"type"`
}

// CustomDataSourceLinkedServiceInput is an input type that accepts CustomDataSourceLinkedServiceArgs and CustomDataSourceLinkedServiceOutput values.
// You can construct a concrete instance of `CustomDataSourceLinkedServiceInput` via:
//
//          CustomDataSourceLinkedServiceArgs{...}
type CustomDataSourceLinkedServiceInput interface {
	pulumi.Input

	ToCustomDataSourceLinkedServiceOutput() CustomDataSourceLinkedServiceOutput
	ToCustomDataSourceLinkedServiceOutputWithContext(context.Context) CustomDataSourceLinkedServiceOutput
}

// Custom linked service.
type CustomDataSourceLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'CustomDataSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CustomDataSourceLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDataSourceLinkedService)(nil)).Elem()
}

func (i CustomDataSourceLinkedServiceArgs) ToCustomDataSourceLinkedServiceOutput() CustomDataSourceLinkedServiceOutput {
	return i.ToCustomDataSourceLinkedServiceOutputWithContext(context.Background())
}

func (i CustomDataSourceLinkedServiceArgs) ToCustomDataSourceLinkedServiceOutputWithContext(ctx context.Context) CustomDataSourceLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDataSourceLinkedServiceOutput)
}

// Custom linked service.
type CustomDataSourceLinkedServiceOutput struct{ *pulumi.OutputState }

func (CustomDataSourceLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDataSourceLinkedService)(nil)).Elem()
}

func (o CustomDataSourceLinkedServiceOutput) ToCustomDataSourceLinkedServiceOutput() CustomDataSourceLinkedServiceOutput {
	return o
}

func (o CustomDataSourceLinkedServiceOutput) ToCustomDataSourceLinkedServiceOutputWithContext(ctx context.Context) CustomDataSourceLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o CustomDataSourceLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v CustomDataSourceLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o CustomDataSourceLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v CustomDataSourceLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o CustomDataSourceLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDataSourceLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Parameters for linked service.
func (o CustomDataSourceLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v CustomDataSourceLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'CustomDataSource'.
func (o CustomDataSourceLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDataSourceLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Custom linked service.
type CustomDataSourceLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'CustomDataSource'.
	Type string `pulumi:"type"`
}

// CustomDataSourceLinkedServiceResponseInput is an input type that accepts CustomDataSourceLinkedServiceResponseArgs and CustomDataSourceLinkedServiceResponseOutput values.
// You can construct a concrete instance of `CustomDataSourceLinkedServiceResponseInput` via:
//
//          CustomDataSourceLinkedServiceResponseArgs{...}
type CustomDataSourceLinkedServiceResponseInput interface {
	pulumi.Input

	ToCustomDataSourceLinkedServiceResponseOutput() CustomDataSourceLinkedServiceResponseOutput
	ToCustomDataSourceLinkedServiceResponseOutputWithContext(context.Context) CustomDataSourceLinkedServiceResponseOutput
}

// Custom linked service.
type CustomDataSourceLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'CustomDataSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CustomDataSourceLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDataSourceLinkedServiceResponse)(nil)).Elem()
}

func (i CustomDataSourceLinkedServiceResponseArgs) ToCustomDataSourceLinkedServiceResponseOutput() CustomDataSourceLinkedServiceResponseOutput {
	return i.ToCustomDataSourceLinkedServiceResponseOutputWithContext(context.Background())
}

func (i CustomDataSourceLinkedServiceResponseArgs) ToCustomDataSourceLinkedServiceResponseOutputWithContext(ctx context.Context) CustomDataSourceLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDataSourceLinkedServiceResponseOutput)
}

// Custom linked service.
type CustomDataSourceLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (CustomDataSourceLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDataSourceLinkedServiceResponse)(nil)).Elem()
}

func (o CustomDataSourceLinkedServiceResponseOutput) ToCustomDataSourceLinkedServiceResponseOutput() CustomDataSourceLinkedServiceResponseOutput {
	return o
}

func (o CustomDataSourceLinkedServiceResponseOutput) ToCustomDataSourceLinkedServiceResponseOutputWithContext(ctx context.Context) CustomDataSourceLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o CustomDataSourceLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v CustomDataSourceLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o CustomDataSourceLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v CustomDataSourceLinkedServiceResponse) *IntegrationRuntimeReferenceResponse {
		return v.ConnectVia
	}).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o CustomDataSourceLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDataSourceLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Parameters for linked service.
func (o CustomDataSourceLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v CustomDataSourceLinkedServiceResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'CustomDataSource'.
func (o CustomDataSourceLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDataSourceLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The custom dataset.
type CustomDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'CustomDataset'.
	Type string `pulumi:"type"`
}

// CustomDatasetInput is an input type that accepts CustomDatasetArgs and CustomDatasetOutput values.
// You can construct a concrete instance of `CustomDatasetInput` via:
//
//          CustomDatasetArgs{...}
type CustomDatasetInput interface {
	pulumi.Input

	ToCustomDatasetOutput() CustomDatasetOutput
	ToCustomDatasetOutputWithContext(context.Context) CustomDatasetOutput
}

// The custom dataset.
type CustomDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'CustomDataset'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CustomDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDataset)(nil)).Elem()
}

func (i CustomDatasetArgs) ToCustomDatasetOutput() CustomDatasetOutput {
	return i.ToCustomDatasetOutputWithContext(context.Background())
}

func (i CustomDatasetArgs) ToCustomDatasetOutputWithContext(ctx context.Context) CustomDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDatasetOutput)
}

// The custom dataset.
type CustomDatasetOutput struct{ *pulumi.OutputState }

func (CustomDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDataset)(nil)).Elem()
}

func (o CustomDatasetOutput) ToCustomDatasetOutput() CustomDatasetOutput {
	return o
}

func (o CustomDatasetOutput) ToCustomDatasetOutputWithContext(ctx context.Context) CustomDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o CustomDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v CustomDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o CustomDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o CustomDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v CustomDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o CustomDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v CustomDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o CustomDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v CustomDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'CustomDataset'.
func (o CustomDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The custom dataset.
type CustomDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'CustomDataset'.
	Type string `pulumi:"type"`
}

// CustomDatasetResponseInput is an input type that accepts CustomDatasetResponseArgs and CustomDatasetResponseOutput values.
// You can construct a concrete instance of `CustomDatasetResponseInput` via:
//
//          CustomDatasetResponseArgs{...}
type CustomDatasetResponseInput interface {
	pulumi.Input

	ToCustomDatasetResponseOutput() CustomDatasetResponseOutput
	ToCustomDatasetResponseOutputWithContext(context.Context) CustomDatasetResponseOutput
}

// The custom dataset.
type CustomDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'CustomDataset'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CustomDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDatasetResponse)(nil)).Elem()
}

func (i CustomDatasetResponseArgs) ToCustomDatasetResponseOutput() CustomDatasetResponseOutput {
	return i.ToCustomDatasetResponseOutputWithContext(context.Background())
}

func (i CustomDatasetResponseArgs) ToCustomDatasetResponseOutputWithContext(ctx context.Context) CustomDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDatasetResponseOutput)
}

// The custom dataset.
type CustomDatasetResponseOutput struct{ *pulumi.OutputState }

func (CustomDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDatasetResponse)(nil)).Elem()
}

func (o CustomDatasetResponseOutput) ToCustomDatasetResponseOutput() CustomDatasetResponseOutput {
	return o
}

func (o CustomDatasetResponseOutput) ToCustomDatasetResponseOutputWithContext(ctx context.Context) CustomDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o CustomDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v CustomDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o CustomDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o CustomDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v CustomDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o CustomDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v CustomDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o CustomDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v CustomDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'CustomDataset'.
func (o CustomDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Data Lake Analytics U-SQL activity.
type DataLakeAnalyticsUSQLActivity struct {
	// Compilation mode of U-SQL. Must be one of these values : Semantic, Full and SingleBox. Type: string (or Expression with resultType string).
	CompilationMode interface{} `pulumi:"compilationMode"`
	// The maximum number of nodes simultaneously used to run the job. Default value is 1. Type: integer (or Expression with resultType integer), minimum: 1.
	DegreeOfParallelism interface{} `pulumi:"degreeOfParallelism"`
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReference `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Parameters for U-SQL job request.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// Activity policy.
	Policy *ActivityPolicy `pulumi:"policy"`
	// Determines which jobs out of all that are queued should be selected to run first. The lower the number, the higher the priority. Default value is 1000. Type: integer (or Expression with resultType integer), minimum: 1.
	Priority interface{} `pulumi:"priority"`
	// Runtime version of the U-SQL engine to use. Type: string (or Expression with resultType string).
	RuntimeVersion interface{} `pulumi:"runtimeVersion"`
	// Script linked service reference.
	ScriptLinkedService LinkedServiceReference `pulumi:"scriptLinkedService"`
	// Case-sensitive path to folder that contains the U-SQL script. Type: string (or Expression with resultType string).
	ScriptPath interface{} `pulumi:"scriptPath"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// DataLakeAnalyticsUSQLActivityInput is an input type that accepts DataLakeAnalyticsUSQLActivityArgs and DataLakeAnalyticsUSQLActivityOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsUSQLActivityInput` via:
//
//          DataLakeAnalyticsUSQLActivityArgs{...}
type DataLakeAnalyticsUSQLActivityInput interface {
	pulumi.Input

	ToDataLakeAnalyticsUSQLActivityOutput() DataLakeAnalyticsUSQLActivityOutput
	ToDataLakeAnalyticsUSQLActivityOutputWithContext(context.Context) DataLakeAnalyticsUSQLActivityOutput
}

// Data Lake Analytics U-SQL activity.
type DataLakeAnalyticsUSQLActivityArgs struct {
	// Compilation mode of U-SQL. Must be one of these values : Semantic, Full and SingleBox. Type: string (or Expression with resultType string).
	CompilationMode pulumi.Input `pulumi:"compilationMode"`
	// The maximum number of nodes simultaneously used to run the job. Default value is 1. Type: integer (or Expression with resultType integer), minimum: 1.
	DegreeOfParallelism pulumi.Input `pulumi:"degreeOfParallelism"`
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferencePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Parameters for U-SQL job request.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// Activity policy.
	Policy ActivityPolicyPtrInput `pulumi:"policy"`
	// Determines which jobs out of all that are queued should be selected to run first. The lower the number, the higher the priority. Default value is 1000. Type: integer (or Expression with resultType integer), minimum: 1.
	Priority pulumi.Input `pulumi:"priority"`
	// Runtime version of the U-SQL engine to use. Type: string (or Expression with resultType string).
	RuntimeVersion pulumi.Input `pulumi:"runtimeVersion"`
	// Script linked service reference.
	ScriptLinkedService LinkedServiceReferenceInput `pulumi:"scriptLinkedService"`
	// Case-sensitive path to folder that contains the U-SQL script. Type: string (or Expression with resultType string).
	ScriptPath pulumi.Input `pulumi:"scriptPath"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DataLakeAnalyticsUSQLActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsUSQLActivity)(nil)).Elem()
}

func (i DataLakeAnalyticsUSQLActivityArgs) ToDataLakeAnalyticsUSQLActivityOutput() DataLakeAnalyticsUSQLActivityOutput {
	return i.ToDataLakeAnalyticsUSQLActivityOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsUSQLActivityArgs) ToDataLakeAnalyticsUSQLActivityOutputWithContext(ctx context.Context) DataLakeAnalyticsUSQLActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsUSQLActivityOutput)
}

// Data Lake Analytics U-SQL activity.
type DataLakeAnalyticsUSQLActivityOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsUSQLActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsUSQLActivity)(nil)).Elem()
}

func (o DataLakeAnalyticsUSQLActivityOutput) ToDataLakeAnalyticsUSQLActivityOutput() DataLakeAnalyticsUSQLActivityOutput {
	return o
}

func (o DataLakeAnalyticsUSQLActivityOutput) ToDataLakeAnalyticsUSQLActivityOutputWithContext(ctx context.Context) DataLakeAnalyticsUSQLActivityOutput {
	return o
}

// Compilation mode of U-SQL. Must be one of these values : Semantic, Full and SingleBox. Type: string (or Expression with resultType string).
func (o DataLakeAnalyticsUSQLActivityOutput) CompilationMode() pulumi.AnyOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivity) interface{} { return v.CompilationMode }).(pulumi.AnyOutput)
}

// The maximum number of nodes simultaneously used to run the job. Default value is 1. Type: integer (or Expression with resultType integer), minimum: 1.
func (o DataLakeAnalyticsUSQLActivityOutput) DegreeOfParallelism() pulumi.AnyOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivity) interface{} { return v.DegreeOfParallelism }).(pulumi.AnyOutput)
}

// Activity depends on condition.
func (o DataLakeAnalyticsUSQLActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o DataLakeAnalyticsUSQLActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o DataLakeAnalyticsUSQLActivityOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivity) *LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// Activity name.
func (o DataLakeAnalyticsUSQLActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Parameters for U-SQL job request.
func (o DataLakeAnalyticsUSQLActivityOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivity) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

// Activity policy.
func (o DataLakeAnalyticsUSQLActivityOutput) Policy() ActivityPolicyPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivity) *ActivityPolicy { return v.Policy }).(ActivityPolicyPtrOutput)
}

// Determines which jobs out of all that are queued should be selected to run first. The lower the number, the higher the priority. Default value is 1000. Type: integer (or Expression with resultType integer), minimum: 1.
func (o DataLakeAnalyticsUSQLActivityOutput) Priority() pulumi.AnyOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivity) interface{} { return v.Priority }).(pulumi.AnyOutput)
}

// Runtime version of the U-SQL engine to use. Type: string (or Expression with resultType string).
func (o DataLakeAnalyticsUSQLActivityOutput) RuntimeVersion() pulumi.AnyOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivity) interface{} { return v.RuntimeVersion }).(pulumi.AnyOutput)
}

// Script linked service reference.
func (o DataLakeAnalyticsUSQLActivityOutput) ScriptLinkedService() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivity) LinkedServiceReference { return v.ScriptLinkedService }).(LinkedServiceReferenceOutput)
}

// Case-sensitive path to folder that contains the U-SQL script. Type: string (or Expression with resultType string).
func (o DataLakeAnalyticsUSQLActivityOutput) ScriptPath() pulumi.AnyOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivity) interface{} { return v.ScriptPath }).(pulumi.AnyOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o DataLakeAnalyticsUSQLActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivity) string { return v.Type }).(pulumi.StringOutput)
}

// Data Lake Analytics U-SQL activity.
type DataLakeAnalyticsUSQLActivityResponse struct {
	// Compilation mode of U-SQL. Must be one of these values : Semantic, Full and SingleBox. Type: string (or Expression with resultType string).
	CompilationMode interface{} `pulumi:"compilationMode"`
	// The maximum number of nodes simultaneously used to run the job. Default value is 1. Type: integer (or Expression with resultType integer), minimum: 1.
	DegreeOfParallelism interface{} `pulumi:"degreeOfParallelism"`
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Parameters for U-SQL job request.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// Activity policy.
	Policy *ActivityPolicyResponse `pulumi:"policy"`
	// Determines which jobs out of all that are queued should be selected to run first. The lower the number, the higher the priority. Default value is 1000. Type: integer (or Expression with resultType integer), minimum: 1.
	Priority interface{} `pulumi:"priority"`
	// Runtime version of the U-SQL engine to use. Type: string (or Expression with resultType string).
	RuntimeVersion interface{} `pulumi:"runtimeVersion"`
	// Script linked service reference.
	ScriptLinkedService LinkedServiceReferenceResponse `pulumi:"scriptLinkedService"`
	// Case-sensitive path to folder that contains the U-SQL script. Type: string (or Expression with resultType string).
	ScriptPath interface{} `pulumi:"scriptPath"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// DataLakeAnalyticsUSQLActivityResponseInput is an input type that accepts DataLakeAnalyticsUSQLActivityResponseArgs and DataLakeAnalyticsUSQLActivityResponseOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsUSQLActivityResponseInput` via:
//
//          DataLakeAnalyticsUSQLActivityResponseArgs{...}
type DataLakeAnalyticsUSQLActivityResponseInput interface {
	pulumi.Input

	ToDataLakeAnalyticsUSQLActivityResponseOutput() DataLakeAnalyticsUSQLActivityResponseOutput
	ToDataLakeAnalyticsUSQLActivityResponseOutputWithContext(context.Context) DataLakeAnalyticsUSQLActivityResponseOutput
}

// Data Lake Analytics U-SQL activity.
type DataLakeAnalyticsUSQLActivityResponseArgs struct {
	// Compilation mode of U-SQL. Must be one of these values : Semantic, Full and SingleBox. Type: string (or Expression with resultType string).
	CompilationMode pulumi.Input `pulumi:"compilationMode"`
	// The maximum number of nodes simultaneously used to run the job. Default value is 1. Type: integer (or Expression with resultType integer), minimum: 1.
	DegreeOfParallelism pulumi.Input `pulumi:"degreeOfParallelism"`
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Parameters for U-SQL job request.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// Activity policy.
	Policy ActivityPolicyResponsePtrInput `pulumi:"policy"`
	// Determines which jobs out of all that are queued should be selected to run first. The lower the number, the higher the priority. Default value is 1000. Type: integer (or Expression with resultType integer), minimum: 1.
	Priority pulumi.Input `pulumi:"priority"`
	// Runtime version of the U-SQL engine to use. Type: string (or Expression with resultType string).
	RuntimeVersion pulumi.Input `pulumi:"runtimeVersion"`
	// Script linked service reference.
	ScriptLinkedService LinkedServiceReferenceResponseInput `pulumi:"scriptLinkedService"`
	// Case-sensitive path to folder that contains the U-SQL script. Type: string (or Expression with resultType string).
	ScriptPath pulumi.Input `pulumi:"scriptPath"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DataLakeAnalyticsUSQLActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsUSQLActivityResponse)(nil)).Elem()
}

func (i DataLakeAnalyticsUSQLActivityResponseArgs) ToDataLakeAnalyticsUSQLActivityResponseOutput() DataLakeAnalyticsUSQLActivityResponseOutput {
	return i.ToDataLakeAnalyticsUSQLActivityResponseOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsUSQLActivityResponseArgs) ToDataLakeAnalyticsUSQLActivityResponseOutputWithContext(ctx context.Context) DataLakeAnalyticsUSQLActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsUSQLActivityResponseOutput)
}

// Data Lake Analytics U-SQL activity.
type DataLakeAnalyticsUSQLActivityResponseOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsUSQLActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsUSQLActivityResponse)(nil)).Elem()
}

func (o DataLakeAnalyticsUSQLActivityResponseOutput) ToDataLakeAnalyticsUSQLActivityResponseOutput() DataLakeAnalyticsUSQLActivityResponseOutput {
	return o
}

func (o DataLakeAnalyticsUSQLActivityResponseOutput) ToDataLakeAnalyticsUSQLActivityResponseOutputWithContext(ctx context.Context) DataLakeAnalyticsUSQLActivityResponseOutput {
	return o
}

// Compilation mode of U-SQL. Must be one of these values : Semantic, Full and SingleBox. Type: string (or Expression with resultType string).
func (o DataLakeAnalyticsUSQLActivityResponseOutput) CompilationMode() pulumi.AnyOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivityResponse) interface{} { return v.CompilationMode }).(pulumi.AnyOutput)
}

// The maximum number of nodes simultaneously used to run the job. Default value is 1. Type: integer (or Expression with resultType integer), minimum: 1.
func (o DataLakeAnalyticsUSQLActivityResponseOutput) DegreeOfParallelism() pulumi.AnyOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivityResponse) interface{} { return v.DegreeOfParallelism }).(pulumi.AnyOutput)
}

// Activity depends on condition.
func (o DataLakeAnalyticsUSQLActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o DataLakeAnalyticsUSQLActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o DataLakeAnalyticsUSQLActivityResponseOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivityResponse) *LinkedServiceReferenceResponse {
		return v.LinkedServiceName
	}).(LinkedServiceReferenceResponsePtrOutput)
}

// Activity name.
func (o DataLakeAnalyticsUSQLActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Parameters for U-SQL job request.
func (o DataLakeAnalyticsUSQLActivityResponseOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivityResponse) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

// Activity policy.
func (o DataLakeAnalyticsUSQLActivityResponseOutput) Policy() ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivityResponse) *ActivityPolicyResponse { return v.Policy }).(ActivityPolicyResponsePtrOutput)
}

// Determines which jobs out of all that are queued should be selected to run first. The lower the number, the higher the priority. Default value is 1000. Type: integer (or Expression with resultType integer), minimum: 1.
func (o DataLakeAnalyticsUSQLActivityResponseOutput) Priority() pulumi.AnyOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivityResponse) interface{} { return v.Priority }).(pulumi.AnyOutput)
}

// Runtime version of the U-SQL engine to use. Type: string (or Expression with resultType string).
func (o DataLakeAnalyticsUSQLActivityResponseOutput) RuntimeVersion() pulumi.AnyOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivityResponse) interface{} { return v.RuntimeVersion }).(pulumi.AnyOutput)
}

// Script linked service reference.
func (o DataLakeAnalyticsUSQLActivityResponseOutput) ScriptLinkedService() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivityResponse) LinkedServiceReferenceResponse {
		return v.ScriptLinkedService
	}).(LinkedServiceReferenceResponseOutput)
}

// Case-sensitive path to folder that contains the U-SQL script. Type: string (or Expression with resultType string).
func (o DataLakeAnalyticsUSQLActivityResponseOutput) ScriptPath() pulumi.AnyOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivityResponse) interface{} { return v.ScriptPath }).(pulumi.AnyOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o DataLakeAnalyticsUSQLActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsUSQLActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// DatabricksNotebook activity.
type DatabricksNotebookActivity struct {
	// Base parameters to be used for each run of this job.If the notebook takes a parameter that is not specified, the default value from the notebook will be used.
	BaseParameters map[string]interface{} `pulumi:"baseParameters"`
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReference `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// The absolute path of the notebook to be run in the Databricks Workspace. This path must begin with a slash. Type: string (or Expression with resultType string).
	NotebookPath interface{} `pulumi:"notebookPath"`
	// Activity policy.
	Policy *ActivityPolicy `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// DatabricksNotebookActivityInput is an input type that accepts DatabricksNotebookActivityArgs and DatabricksNotebookActivityOutput values.
// You can construct a concrete instance of `DatabricksNotebookActivityInput` via:
//
//          DatabricksNotebookActivityArgs{...}
type DatabricksNotebookActivityInput interface {
	pulumi.Input

	ToDatabricksNotebookActivityOutput() DatabricksNotebookActivityOutput
	ToDatabricksNotebookActivityOutputWithContext(context.Context) DatabricksNotebookActivityOutput
}

// DatabricksNotebook activity.
type DatabricksNotebookActivityArgs struct {
	// Base parameters to be used for each run of this job.If the notebook takes a parameter that is not specified, the default value from the notebook will be used.
	BaseParameters pulumi.MapInput `pulumi:"baseParameters"`
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferencePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// The absolute path of the notebook to be run in the Databricks Workspace. This path must begin with a slash. Type: string (or Expression with resultType string).
	NotebookPath pulumi.Input `pulumi:"notebookPath"`
	// Activity policy.
	Policy ActivityPolicyPtrInput `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatabricksNotebookActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksNotebookActivity)(nil)).Elem()
}

func (i DatabricksNotebookActivityArgs) ToDatabricksNotebookActivityOutput() DatabricksNotebookActivityOutput {
	return i.ToDatabricksNotebookActivityOutputWithContext(context.Background())
}

func (i DatabricksNotebookActivityArgs) ToDatabricksNotebookActivityOutputWithContext(ctx context.Context) DatabricksNotebookActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksNotebookActivityOutput)
}

// DatabricksNotebook activity.
type DatabricksNotebookActivityOutput struct{ *pulumi.OutputState }

func (DatabricksNotebookActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksNotebookActivity)(nil)).Elem()
}

func (o DatabricksNotebookActivityOutput) ToDatabricksNotebookActivityOutput() DatabricksNotebookActivityOutput {
	return o
}

func (o DatabricksNotebookActivityOutput) ToDatabricksNotebookActivityOutputWithContext(ctx context.Context) DatabricksNotebookActivityOutput {
	return o
}

// Base parameters to be used for each run of this job.If the notebook takes a parameter that is not specified, the default value from the notebook will be used.
func (o DatabricksNotebookActivityOutput) BaseParameters() pulumi.MapOutput {
	return o.ApplyT(func(v DatabricksNotebookActivity) map[string]interface{} { return v.BaseParameters }).(pulumi.MapOutput)
}

// Activity depends on condition.
func (o DatabricksNotebookActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v DatabricksNotebookActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o DatabricksNotebookActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksNotebookActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o DatabricksNotebookActivityOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v DatabricksNotebookActivity) *LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// Activity name.
func (o DatabricksNotebookActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksNotebookActivity) string { return v.Name }).(pulumi.StringOutput)
}

// The absolute path of the notebook to be run in the Databricks Workspace. This path must begin with a slash. Type: string (or Expression with resultType string).
func (o DatabricksNotebookActivityOutput) NotebookPath() pulumi.AnyOutput {
	return o.ApplyT(func(v DatabricksNotebookActivity) interface{} { return v.NotebookPath }).(pulumi.AnyOutput)
}

// Activity policy.
func (o DatabricksNotebookActivityOutput) Policy() ActivityPolicyPtrOutput {
	return o.ApplyT(func(v DatabricksNotebookActivity) *ActivityPolicy { return v.Policy }).(ActivityPolicyPtrOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o DatabricksNotebookActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksNotebookActivity) string { return v.Type }).(pulumi.StringOutput)
}

// DatabricksNotebook activity.
type DatabricksNotebookActivityResponse struct {
	// Base parameters to be used for each run of this job.If the notebook takes a parameter that is not specified, the default value from the notebook will be used.
	BaseParameters map[string]interface{} `pulumi:"baseParameters"`
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// The absolute path of the notebook to be run in the Databricks Workspace. This path must begin with a slash. Type: string (or Expression with resultType string).
	NotebookPath interface{} `pulumi:"notebookPath"`
	// Activity policy.
	Policy *ActivityPolicyResponse `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// DatabricksNotebookActivityResponseInput is an input type that accepts DatabricksNotebookActivityResponseArgs and DatabricksNotebookActivityResponseOutput values.
// You can construct a concrete instance of `DatabricksNotebookActivityResponseInput` via:
//
//          DatabricksNotebookActivityResponseArgs{...}
type DatabricksNotebookActivityResponseInput interface {
	pulumi.Input

	ToDatabricksNotebookActivityResponseOutput() DatabricksNotebookActivityResponseOutput
	ToDatabricksNotebookActivityResponseOutputWithContext(context.Context) DatabricksNotebookActivityResponseOutput
}

// DatabricksNotebook activity.
type DatabricksNotebookActivityResponseArgs struct {
	// Base parameters to be used for each run of this job.If the notebook takes a parameter that is not specified, the default value from the notebook will be used.
	BaseParameters pulumi.MapInput `pulumi:"baseParameters"`
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// The absolute path of the notebook to be run in the Databricks Workspace. This path must begin with a slash. Type: string (or Expression with resultType string).
	NotebookPath pulumi.Input `pulumi:"notebookPath"`
	// Activity policy.
	Policy ActivityPolicyResponsePtrInput `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatabricksNotebookActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksNotebookActivityResponse)(nil)).Elem()
}

func (i DatabricksNotebookActivityResponseArgs) ToDatabricksNotebookActivityResponseOutput() DatabricksNotebookActivityResponseOutput {
	return i.ToDatabricksNotebookActivityResponseOutputWithContext(context.Background())
}

func (i DatabricksNotebookActivityResponseArgs) ToDatabricksNotebookActivityResponseOutputWithContext(ctx context.Context) DatabricksNotebookActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksNotebookActivityResponseOutput)
}

// DatabricksNotebook activity.
type DatabricksNotebookActivityResponseOutput struct{ *pulumi.OutputState }

func (DatabricksNotebookActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksNotebookActivityResponse)(nil)).Elem()
}

func (o DatabricksNotebookActivityResponseOutput) ToDatabricksNotebookActivityResponseOutput() DatabricksNotebookActivityResponseOutput {
	return o
}

func (o DatabricksNotebookActivityResponseOutput) ToDatabricksNotebookActivityResponseOutputWithContext(ctx context.Context) DatabricksNotebookActivityResponseOutput {
	return o
}

// Base parameters to be used for each run of this job.If the notebook takes a parameter that is not specified, the default value from the notebook will be used.
func (o DatabricksNotebookActivityResponseOutput) BaseParameters() pulumi.MapOutput {
	return o.ApplyT(func(v DatabricksNotebookActivityResponse) map[string]interface{} { return v.BaseParameters }).(pulumi.MapOutput)
}

// Activity depends on condition.
func (o DatabricksNotebookActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v DatabricksNotebookActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o DatabricksNotebookActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksNotebookActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o DatabricksNotebookActivityResponseOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v DatabricksNotebookActivityResponse) *LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponsePtrOutput)
}

// Activity name.
func (o DatabricksNotebookActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksNotebookActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The absolute path of the notebook to be run in the Databricks Workspace. This path must begin with a slash. Type: string (or Expression with resultType string).
func (o DatabricksNotebookActivityResponseOutput) NotebookPath() pulumi.AnyOutput {
	return o.ApplyT(func(v DatabricksNotebookActivityResponse) interface{} { return v.NotebookPath }).(pulumi.AnyOutput)
}

// Activity policy.
func (o DatabricksNotebookActivityResponseOutput) Policy() ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v DatabricksNotebookActivityResponse) *ActivityPolicyResponse { return v.Policy }).(ActivityPolicyResponsePtrOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o DatabricksNotebookActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksNotebookActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The BZip2 compression method used on a dataset.
type DatasetBZip2Compression struct {
	// Type of dataset compression.
	// Expected value is 'BZip2'.
	Type string `pulumi:"type"`
}

// DatasetBZip2CompressionInput is an input type that accepts DatasetBZip2CompressionArgs and DatasetBZip2CompressionOutput values.
// You can construct a concrete instance of `DatasetBZip2CompressionInput` via:
//
//          DatasetBZip2CompressionArgs{...}
type DatasetBZip2CompressionInput interface {
	pulumi.Input

	ToDatasetBZip2CompressionOutput() DatasetBZip2CompressionOutput
	ToDatasetBZip2CompressionOutputWithContext(context.Context) DatasetBZip2CompressionOutput
}

// The BZip2 compression method used on a dataset.
type DatasetBZip2CompressionArgs struct {
	// Type of dataset compression.
	// Expected value is 'BZip2'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatasetBZip2CompressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetBZip2Compression)(nil)).Elem()
}

func (i DatasetBZip2CompressionArgs) ToDatasetBZip2CompressionOutput() DatasetBZip2CompressionOutput {
	return i.ToDatasetBZip2CompressionOutputWithContext(context.Background())
}

func (i DatasetBZip2CompressionArgs) ToDatasetBZip2CompressionOutputWithContext(ctx context.Context) DatasetBZip2CompressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetBZip2CompressionOutput)
}

// The BZip2 compression method used on a dataset.
type DatasetBZip2CompressionOutput struct{ *pulumi.OutputState }

func (DatasetBZip2CompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetBZip2Compression)(nil)).Elem()
}

func (o DatasetBZip2CompressionOutput) ToDatasetBZip2CompressionOutput() DatasetBZip2CompressionOutput {
	return o
}

func (o DatasetBZip2CompressionOutput) ToDatasetBZip2CompressionOutputWithContext(ctx context.Context) DatasetBZip2CompressionOutput {
	return o
}

// Type of dataset compression.
// Expected value is 'BZip2'.
func (o DatasetBZip2CompressionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetBZip2Compression) string { return v.Type }).(pulumi.StringOutput)
}

// The BZip2 compression method used on a dataset.
type DatasetBZip2CompressionResponse struct {
	// Type of dataset compression.
	// Expected value is 'BZip2'.
	Type string `pulumi:"type"`
}

// DatasetBZip2CompressionResponseInput is an input type that accepts DatasetBZip2CompressionResponseArgs and DatasetBZip2CompressionResponseOutput values.
// You can construct a concrete instance of `DatasetBZip2CompressionResponseInput` via:
//
//          DatasetBZip2CompressionResponseArgs{...}
type DatasetBZip2CompressionResponseInput interface {
	pulumi.Input

	ToDatasetBZip2CompressionResponseOutput() DatasetBZip2CompressionResponseOutput
	ToDatasetBZip2CompressionResponseOutputWithContext(context.Context) DatasetBZip2CompressionResponseOutput
}

// The BZip2 compression method used on a dataset.
type DatasetBZip2CompressionResponseArgs struct {
	// Type of dataset compression.
	// Expected value is 'BZip2'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatasetBZip2CompressionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetBZip2CompressionResponse)(nil)).Elem()
}

func (i DatasetBZip2CompressionResponseArgs) ToDatasetBZip2CompressionResponseOutput() DatasetBZip2CompressionResponseOutput {
	return i.ToDatasetBZip2CompressionResponseOutputWithContext(context.Background())
}

func (i DatasetBZip2CompressionResponseArgs) ToDatasetBZip2CompressionResponseOutputWithContext(ctx context.Context) DatasetBZip2CompressionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetBZip2CompressionResponseOutput)
}

// The BZip2 compression method used on a dataset.
type DatasetBZip2CompressionResponseOutput struct{ *pulumi.OutputState }

func (DatasetBZip2CompressionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetBZip2CompressionResponse)(nil)).Elem()
}

func (o DatasetBZip2CompressionResponseOutput) ToDatasetBZip2CompressionResponseOutput() DatasetBZip2CompressionResponseOutput {
	return o
}

func (o DatasetBZip2CompressionResponseOutput) ToDatasetBZip2CompressionResponseOutputWithContext(ctx context.Context) DatasetBZip2CompressionResponseOutput {
	return o
}

// Type of dataset compression.
// Expected value is 'BZip2'.
func (o DatasetBZip2CompressionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetBZip2CompressionResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The Deflate compression method used on a dataset.
type DatasetDeflateCompression struct {
	// The Deflate compression level.
	Level *string `pulumi:"level"`
	// Type of dataset compression.
	// Expected value is 'Deflate'.
	Type string `pulumi:"type"`
}

// DatasetDeflateCompressionInput is an input type that accepts DatasetDeflateCompressionArgs and DatasetDeflateCompressionOutput values.
// You can construct a concrete instance of `DatasetDeflateCompressionInput` via:
//
//          DatasetDeflateCompressionArgs{...}
type DatasetDeflateCompressionInput interface {
	pulumi.Input

	ToDatasetDeflateCompressionOutput() DatasetDeflateCompressionOutput
	ToDatasetDeflateCompressionOutputWithContext(context.Context) DatasetDeflateCompressionOutput
}

// The Deflate compression method used on a dataset.
type DatasetDeflateCompressionArgs struct {
	// The Deflate compression level.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Type of dataset compression.
	// Expected value is 'Deflate'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatasetDeflateCompressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDeflateCompression)(nil)).Elem()
}

func (i DatasetDeflateCompressionArgs) ToDatasetDeflateCompressionOutput() DatasetDeflateCompressionOutput {
	return i.ToDatasetDeflateCompressionOutputWithContext(context.Background())
}

func (i DatasetDeflateCompressionArgs) ToDatasetDeflateCompressionOutputWithContext(ctx context.Context) DatasetDeflateCompressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDeflateCompressionOutput)
}

// The Deflate compression method used on a dataset.
type DatasetDeflateCompressionOutput struct{ *pulumi.OutputState }

func (DatasetDeflateCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDeflateCompression)(nil)).Elem()
}

func (o DatasetDeflateCompressionOutput) ToDatasetDeflateCompressionOutput() DatasetDeflateCompressionOutput {
	return o
}

func (o DatasetDeflateCompressionOutput) ToDatasetDeflateCompressionOutputWithContext(ctx context.Context) DatasetDeflateCompressionOutput {
	return o
}

// The Deflate compression level.
func (o DatasetDeflateCompressionOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetDeflateCompression) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Type of dataset compression.
// Expected value is 'Deflate'.
func (o DatasetDeflateCompressionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetDeflateCompression) string { return v.Type }).(pulumi.StringOutput)
}

// The Deflate compression method used on a dataset.
type DatasetDeflateCompressionResponse struct {
	// The Deflate compression level.
	Level *string `pulumi:"level"`
	// Type of dataset compression.
	// Expected value is 'Deflate'.
	Type string `pulumi:"type"`
}

// DatasetDeflateCompressionResponseInput is an input type that accepts DatasetDeflateCompressionResponseArgs and DatasetDeflateCompressionResponseOutput values.
// You can construct a concrete instance of `DatasetDeflateCompressionResponseInput` via:
//
//          DatasetDeflateCompressionResponseArgs{...}
type DatasetDeflateCompressionResponseInput interface {
	pulumi.Input

	ToDatasetDeflateCompressionResponseOutput() DatasetDeflateCompressionResponseOutput
	ToDatasetDeflateCompressionResponseOutputWithContext(context.Context) DatasetDeflateCompressionResponseOutput
}

// The Deflate compression method used on a dataset.
type DatasetDeflateCompressionResponseArgs struct {
	// The Deflate compression level.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Type of dataset compression.
	// Expected value is 'Deflate'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatasetDeflateCompressionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDeflateCompressionResponse)(nil)).Elem()
}

func (i DatasetDeflateCompressionResponseArgs) ToDatasetDeflateCompressionResponseOutput() DatasetDeflateCompressionResponseOutput {
	return i.ToDatasetDeflateCompressionResponseOutputWithContext(context.Background())
}

func (i DatasetDeflateCompressionResponseArgs) ToDatasetDeflateCompressionResponseOutputWithContext(ctx context.Context) DatasetDeflateCompressionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDeflateCompressionResponseOutput)
}

// The Deflate compression method used on a dataset.
type DatasetDeflateCompressionResponseOutput struct{ *pulumi.OutputState }

func (DatasetDeflateCompressionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDeflateCompressionResponse)(nil)).Elem()
}

func (o DatasetDeflateCompressionResponseOutput) ToDatasetDeflateCompressionResponseOutput() DatasetDeflateCompressionResponseOutput {
	return o
}

func (o DatasetDeflateCompressionResponseOutput) ToDatasetDeflateCompressionResponseOutputWithContext(ctx context.Context) DatasetDeflateCompressionResponseOutput {
	return o
}

// The Deflate compression level.
func (o DatasetDeflateCompressionResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetDeflateCompressionResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Type of dataset compression.
// Expected value is 'Deflate'.
func (o DatasetDeflateCompressionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetDeflateCompressionResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The GZip compression method used on a dataset.
type DatasetGZipCompression struct {
	// The GZip compression level.
	Level *string `pulumi:"level"`
	// Type of dataset compression.
	// Expected value is 'GZip'.
	Type string `pulumi:"type"`
}

// DatasetGZipCompressionInput is an input type that accepts DatasetGZipCompressionArgs and DatasetGZipCompressionOutput values.
// You can construct a concrete instance of `DatasetGZipCompressionInput` via:
//
//          DatasetGZipCompressionArgs{...}
type DatasetGZipCompressionInput interface {
	pulumi.Input

	ToDatasetGZipCompressionOutput() DatasetGZipCompressionOutput
	ToDatasetGZipCompressionOutputWithContext(context.Context) DatasetGZipCompressionOutput
}

// The GZip compression method used on a dataset.
type DatasetGZipCompressionArgs struct {
	// The GZip compression level.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Type of dataset compression.
	// Expected value is 'GZip'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatasetGZipCompressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetGZipCompression)(nil)).Elem()
}

func (i DatasetGZipCompressionArgs) ToDatasetGZipCompressionOutput() DatasetGZipCompressionOutput {
	return i.ToDatasetGZipCompressionOutputWithContext(context.Background())
}

func (i DatasetGZipCompressionArgs) ToDatasetGZipCompressionOutputWithContext(ctx context.Context) DatasetGZipCompressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetGZipCompressionOutput)
}

// The GZip compression method used on a dataset.
type DatasetGZipCompressionOutput struct{ *pulumi.OutputState }

func (DatasetGZipCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetGZipCompression)(nil)).Elem()
}

func (o DatasetGZipCompressionOutput) ToDatasetGZipCompressionOutput() DatasetGZipCompressionOutput {
	return o
}

func (o DatasetGZipCompressionOutput) ToDatasetGZipCompressionOutputWithContext(ctx context.Context) DatasetGZipCompressionOutput {
	return o
}

// The GZip compression level.
func (o DatasetGZipCompressionOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetGZipCompression) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Type of dataset compression.
// Expected value is 'GZip'.
func (o DatasetGZipCompressionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetGZipCompression) string { return v.Type }).(pulumi.StringOutput)
}

// The GZip compression method used on a dataset.
type DatasetGZipCompressionResponse struct {
	// The GZip compression level.
	Level *string `pulumi:"level"`
	// Type of dataset compression.
	// Expected value is 'GZip'.
	Type string `pulumi:"type"`
}

// DatasetGZipCompressionResponseInput is an input type that accepts DatasetGZipCompressionResponseArgs and DatasetGZipCompressionResponseOutput values.
// You can construct a concrete instance of `DatasetGZipCompressionResponseInput` via:
//
//          DatasetGZipCompressionResponseArgs{...}
type DatasetGZipCompressionResponseInput interface {
	pulumi.Input

	ToDatasetGZipCompressionResponseOutput() DatasetGZipCompressionResponseOutput
	ToDatasetGZipCompressionResponseOutputWithContext(context.Context) DatasetGZipCompressionResponseOutput
}

// The GZip compression method used on a dataset.
type DatasetGZipCompressionResponseArgs struct {
	// The GZip compression level.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Type of dataset compression.
	// Expected value is 'GZip'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatasetGZipCompressionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetGZipCompressionResponse)(nil)).Elem()
}

func (i DatasetGZipCompressionResponseArgs) ToDatasetGZipCompressionResponseOutput() DatasetGZipCompressionResponseOutput {
	return i.ToDatasetGZipCompressionResponseOutputWithContext(context.Background())
}

func (i DatasetGZipCompressionResponseArgs) ToDatasetGZipCompressionResponseOutputWithContext(ctx context.Context) DatasetGZipCompressionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetGZipCompressionResponseOutput)
}

// The GZip compression method used on a dataset.
type DatasetGZipCompressionResponseOutput struct{ *pulumi.OutputState }

func (DatasetGZipCompressionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetGZipCompressionResponse)(nil)).Elem()
}

func (o DatasetGZipCompressionResponseOutput) ToDatasetGZipCompressionResponseOutput() DatasetGZipCompressionResponseOutput {
	return o
}

func (o DatasetGZipCompressionResponseOutput) ToDatasetGZipCompressionResponseOutputWithContext(ctx context.Context) DatasetGZipCompressionResponseOutput {
	return o
}

// The GZip compression level.
func (o DatasetGZipCompressionResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetGZipCompressionResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Type of dataset compression.
// Expected value is 'GZip'.
func (o DatasetGZipCompressionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetGZipCompressionResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Dataset reference type.
type DatasetReference struct {
	// Arguments for dataset.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// Reference dataset name.
	ReferenceName string `pulumi:"referenceName"`
	// Dataset reference type.
	Type string `pulumi:"type"`
}

// DatasetReferenceInput is an input type that accepts DatasetReferenceArgs and DatasetReferenceOutput values.
// You can construct a concrete instance of `DatasetReferenceInput` via:
//
//          DatasetReferenceArgs{...}
type DatasetReferenceInput interface {
	pulumi.Input

	ToDatasetReferenceOutput() DatasetReferenceOutput
	ToDatasetReferenceOutputWithContext(context.Context) DatasetReferenceOutput
}

// Dataset reference type.
type DatasetReferenceArgs struct {
	// Arguments for dataset.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// Reference dataset name.
	ReferenceName pulumi.StringInput `pulumi:"referenceName"`
	// Dataset reference type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatasetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetReference)(nil)).Elem()
}

func (i DatasetReferenceArgs) ToDatasetReferenceOutput() DatasetReferenceOutput {
	return i.ToDatasetReferenceOutputWithContext(context.Background())
}

func (i DatasetReferenceArgs) ToDatasetReferenceOutputWithContext(ctx context.Context) DatasetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetReferenceOutput)
}

// DatasetReferenceArrayInput is an input type that accepts DatasetReferenceArray and DatasetReferenceArrayOutput values.
// You can construct a concrete instance of `DatasetReferenceArrayInput` via:
//
//          DatasetReferenceArray{ DatasetReferenceArgs{...} }
type DatasetReferenceArrayInput interface {
	pulumi.Input

	ToDatasetReferenceArrayOutput() DatasetReferenceArrayOutput
	ToDatasetReferenceArrayOutputWithContext(context.Context) DatasetReferenceArrayOutput
}

type DatasetReferenceArray []DatasetReferenceInput

func (DatasetReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetReference)(nil)).Elem()
}

func (i DatasetReferenceArray) ToDatasetReferenceArrayOutput() DatasetReferenceArrayOutput {
	return i.ToDatasetReferenceArrayOutputWithContext(context.Background())
}

func (i DatasetReferenceArray) ToDatasetReferenceArrayOutputWithContext(ctx context.Context) DatasetReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetReferenceArrayOutput)
}

// Dataset reference type.
type DatasetReferenceOutput struct{ *pulumi.OutputState }

func (DatasetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetReference)(nil)).Elem()
}

func (o DatasetReferenceOutput) ToDatasetReferenceOutput() DatasetReferenceOutput {
	return o
}

func (o DatasetReferenceOutput) ToDatasetReferenceOutputWithContext(ctx context.Context) DatasetReferenceOutput {
	return o
}

// Arguments for dataset.
func (o DatasetReferenceOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v DatasetReference) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

// Reference dataset name.
func (o DatasetReferenceOutput) ReferenceName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetReference) string { return v.ReferenceName }).(pulumi.StringOutput)
}

// Dataset reference type.
func (o DatasetReferenceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetReference) string { return v.Type }).(pulumi.StringOutput)
}

type DatasetReferenceArrayOutput struct{ *pulumi.OutputState }

func (DatasetReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetReference)(nil)).Elem()
}

func (o DatasetReferenceArrayOutput) ToDatasetReferenceArrayOutput() DatasetReferenceArrayOutput {
	return o
}

func (o DatasetReferenceArrayOutput) ToDatasetReferenceArrayOutputWithContext(ctx context.Context) DatasetReferenceArrayOutput {
	return o
}

func (o DatasetReferenceArrayOutput) Index(i pulumi.IntInput) DatasetReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetReference {
		return vs[0].([]DatasetReference)[vs[1].(int)]
	}).(DatasetReferenceOutput)
}

// Dataset reference type.
type DatasetReferenceResponse struct {
	// Arguments for dataset.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// Reference dataset name.
	ReferenceName string `pulumi:"referenceName"`
	// Dataset reference type.
	Type string `pulumi:"type"`
}

// DatasetReferenceResponseInput is an input type that accepts DatasetReferenceResponseArgs and DatasetReferenceResponseOutput values.
// You can construct a concrete instance of `DatasetReferenceResponseInput` via:
//
//          DatasetReferenceResponseArgs{...}
type DatasetReferenceResponseInput interface {
	pulumi.Input

	ToDatasetReferenceResponseOutput() DatasetReferenceResponseOutput
	ToDatasetReferenceResponseOutputWithContext(context.Context) DatasetReferenceResponseOutput
}

// Dataset reference type.
type DatasetReferenceResponseArgs struct {
	// Arguments for dataset.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// Reference dataset name.
	ReferenceName pulumi.StringInput `pulumi:"referenceName"`
	// Dataset reference type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatasetReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetReferenceResponse)(nil)).Elem()
}

func (i DatasetReferenceResponseArgs) ToDatasetReferenceResponseOutput() DatasetReferenceResponseOutput {
	return i.ToDatasetReferenceResponseOutputWithContext(context.Background())
}

func (i DatasetReferenceResponseArgs) ToDatasetReferenceResponseOutputWithContext(ctx context.Context) DatasetReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetReferenceResponseOutput)
}

// DatasetReferenceResponseArrayInput is an input type that accepts DatasetReferenceResponseArray and DatasetReferenceResponseArrayOutput values.
// You can construct a concrete instance of `DatasetReferenceResponseArrayInput` via:
//
//          DatasetReferenceResponseArray{ DatasetReferenceResponseArgs{...} }
type DatasetReferenceResponseArrayInput interface {
	pulumi.Input

	ToDatasetReferenceResponseArrayOutput() DatasetReferenceResponseArrayOutput
	ToDatasetReferenceResponseArrayOutputWithContext(context.Context) DatasetReferenceResponseArrayOutput
}

type DatasetReferenceResponseArray []DatasetReferenceResponseInput

func (DatasetReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetReferenceResponse)(nil)).Elem()
}

func (i DatasetReferenceResponseArray) ToDatasetReferenceResponseArrayOutput() DatasetReferenceResponseArrayOutput {
	return i.ToDatasetReferenceResponseArrayOutputWithContext(context.Background())
}

func (i DatasetReferenceResponseArray) ToDatasetReferenceResponseArrayOutputWithContext(ctx context.Context) DatasetReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetReferenceResponseArrayOutput)
}

// Dataset reference type.
type DatasetReferenceResponseOutput struct{ *pulumi.OutputState }

func (DatasetReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetReferenceResponse)(nil)).Elem()
}

func (o DatasetReferenceResponseOutput) ToDatasetReferenceResponseOutput() DatasetReferenceResponseOutput {
	return o
}

func (o DatasetReferenceResponseOutput) ToDatasetReferenceResponseOutputWithContext(ctx context.Context) DatasetReferenceResponseOutput {
	return o
}

// Arguments for dataset.
func (o DatasetReferenceResponseOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v DatasetReferenceResponse) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

// Reference dataset name.
func (o DatasetReferenceResponseOutput) ReferenceName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetReferenceResponse) string { return v.ReferenceName }).(pulumi.StringOutput)
}

// Dataset reference type.
func (o DatasetReferenceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetReferenceResponse) string { return v.Type }).(pulumi.StringOutput)
}

type DatasetReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (DatasetReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetReferenceResponse)(nil)).Elem()
}

func (o DatasetReferenceResponseArrayOutput) ToDatasetReferenceResponseArrayOutput() DatasetReferenceResponseArrayOutput {
	return o
}

func (o DatasetReferenceResponseArrayOutput) ToDatasetReferenceResponseArrayOutputWithContext(ctx context.Context) DatasetReferenceResponseArrayOutput {
	return o
}

func (o DatasetReferenceResponseArrayOutput) Index(i pulumi.IntInput) DatasetReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetReferenceResponse {
		return vs[0].([]DatasetReferenceResponse)[vs[1].(int)]
	}).(DatasetReferenceResponseOutput)
}

// The ZipDeflate compression method used on a dataset.
type DatasetZipDeflateCompression struct {
	// The ZipDeflate compression level.
	Level *string `pulumi:"level"`
	// Type of dataset compression.
	// Expected value is 'ZipDeflate'.
	Type string `pulumi:"type"`
}

// DatasetZipDeflateCompressionInput is an input type that accepts DatasetZipDeflateCompressionArgs and DatasetZipDeflateCompressionOutput values.
// You can construct a concrete instance of `DatasetZipDeflateCompressionInput` via:
//
//          DatasetZipDeflateCompressionArgs{...}
type DatasetZipDeflateCompressionInput interface {
	pulumi.Input

	ToDatasetZipDeflateCompressionOutput() DatasetZipDeflateCompressionOutput
	ToDatasetZipDeflateCompressionOutputWithContext(context.Context) DatasetZipDeflateCompressionOutput
}

// The ZipDeflate compression method used on a dataset.
type DatasetZipDeflateCompressionArgs struct {
	// The ZipDeflate compression level.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Type of dataset compression.
	// Expected value is 'ZipDeflate'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatasetZipDeflateCompressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetZipDeflateCompression)(nil)).Elem()
}

func (i DatasetZipDeflateCompressionArgs) ToDatasetZipDeflateCompressionOutput() DatasetZipDeflateCompressionOutput {
	return i.ToDatasetZipDeflateCompressionOutputWithContext(context.Background())
}

func (i DatasetZipDeflateCompressionArgs) ToDatasetZipDeflateCompressionOutputWithContext(ctx context.Context) DatasetZipDeflateCompressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetZipDeflateCompressionOutput)
}

// The ZipDeflate compression method used on a dataset.
type DatasetZipDeflateCompressionOutput struct{ *pulumi.OutputState }

func (DatasetZipDeflateCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetZipDeflateCompression)(nil)).Elem()
}

func (o DatasetZipDeflateCompressionOutput) ToDatasetZipDeflateCompressionOutput() DatasetZipDeflateCompressionOutput {
	return o
}

func (o DatasetZipDeflateCompressionOutput) ToDatasetZipDeflateCompressionOutputWithContext(ctx context.Context) DatasetZipDeflateCompressionOutput {
	return o
}

// The ZipDeflate compression level.
func (o DatasetZipDeflateCompressionOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetZipDeflateCompression) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Type of dataset compression.
// Expected value is 'ZipDeflate'.
func (o DatasetZipDeflateCompressionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetZipDeflateCompression) string { return v.Type }).(pulumi.StringOutput)
}

// The ZipDeflate compression method used on a dataset.
type DatasetZipDeflateCompressionResponse struct {
	// The ZipDeflate compression level.
	Level *string `pulumi:"level"`
	// Type of dataset compression.
	// Expected value is 'ZipDeflate'.
	Type string `pulumi:"type"`
}

// DatasetZipDeflateCompressionResponseInput is an input type that accepts DatasetZipDeflateCompressionResponseArgs and DatasetZipDeflateCompressionResponseOutput values.
// You can construct a concrete instance of `DatasetZipDeflateCompressionResponseInput` via:
//
//          DatasetZipDeflateCompressionResponseArgs{...}
type DatasetZipDeflateCompressionResponseInput interface {
	pulumi.Input

	ToDatasetZipDeflateCompressionResponseOutput() DatasetZipDeflateCompressionResponseOutput
	ToDatasetZipDeflateCompressionResponseOutputWithContext(context.Context) DatasetZipDeflateCompressionResponseOutput
}

// The ZipDeflate compression method used on a dataset.
type DatasetZipDeflateCompressionResponseArgs struct {
	// The ZipDeflate compression level.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Type of dataset compression.
	// Expected value is 'ZipDeflate'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatasetZipDeflateCompressionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetZipDeflateCompressionResponse)(nil)).Elem()
}

func (i DatasetZipDeflateCompressionResponseArgs) ToDatasetZipDeflateCompressionResponseOutput() DatasetZipDeflateCompressionResponseOutput {
	return i.ToDatasetZipDeflateCompressionResponseOutputWithContext(context.Background())
}

func (i DatasetZipDeflateCompressionResponseArgs) ToDatasetZipDeflateCompressionResponseOutputWithContext(ctx context.Context) DatasetZipDeflateCompressionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetZipDeflateCompressionResponseOutput)
}

// The ZipDeflate compression method used on a dataset.
type DatasetZipDeflateCompressionResponseOutput struct{ *pulumi.OutputState }

func (DatasetZipDeflateCompressionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetZipDeflateCompressionResponse)(nil)).Elem()
}

func (o DatasetZipDeflateCompressionResponseOutput) ToDatasetZipDeflateCompressionResponseOutput() DatasetZipDeflateCompressionResponseOutput {
	return o
}

func (o DatasetZipDeflateCompressionResponseOutput) ToDatasetZipDeflateCompressionResponseOutputWithContext(ctx context.Context) DatasetZipDeflateCompressionResponseOutput {
	return o
}

// The ZipDeflate compression level.
func (o DatasetZipDeflateCompressionResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetZipDeflateCompressionResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Type of dataset compression.
// Expected value is 'ZipDeflate'.
func (o DatasetZipDeflateCompressionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetZipDeflateCompressionResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Linked service for DB2 data source.
type Db2LinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// AuthenticationType to be used for connection.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Database name for connection. Type: string (or Expression with resultType string).
	Database interface{} `pulumi:"database"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Password for authentication.
	Password interface{} `pulumi:"password"`
	// Server name for connection. Type: string (or Expression with resultType string).
	Server interface{} `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'Db2'.
	Type string `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// Db2LinkedServiceInput is an input type that accepts Db2LinkedServiceArgs and Db2LinkedServiceOutput values.
// You can construct a concrete instance of `Db2LinkedServiceInput` via:
//
//          Db2LinkedServiceArgs{...}
type Db2LinkedServiceInput interface {
	pulumi.Input

	ToDb2LinkedServiceOutput() Db2LinkedServiceOutput
	ToDb2LinkedServiceOutputWithContext(context.Context) Db2LinkedServiceOutput
}

// Linked service for DB2 data source.
type Db2LinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// AuthenticationType to be used for connection.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Database name for connection. Type: string (or Expression with resultType string).
	Database pulumi.Input `pulumi:"database"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Password for authentication.
	Password pulumi.Input `pulumi:"password"`
	// Server name for connection. Type: string (or Expression with resultType string).
	Server pulumi.Input `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'Db2'.
	Type pulumi.StringInput `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (Db2LinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Db2LinkedService)(nil)).Elem()
}

func (i Db2LinkedServiceArgs) ToDb2LinkedServiceOutput() Db2LinkedServiceOutput {
	return i.ToDb2LinkedServiceOutputWithContext(context.Background())
}

func (i Db2LinkedServiceArgs) ToDb2LinkedServiceOutputWithContext(ctx context.Context) Db2LinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Db2LinkedServiceOutput)
}

// Linked service for DB2 data source.
type Db2LinkedServiceOutput struct{ *pulumi.OutputState }

func (Db2LinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Db2LinkedService)(nil)).Elem()
}

func (o Db2LinkedServiceOutput) ToDb2LinkedServiceOutput() Db2LinkedServiceOutput {
	return o
}

func (o Db2LinkedServiceOutput) ToDb2LinkedServiceOutputWithContext(ctx context.Context) Db2LinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o Db2LinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v Db2LinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// AuthenticationType to be used for connection.
func (o Db2LinkedServiceOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Db2LinkedService) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The integration runtime reference.
func (o Db2LinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v Db2LinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Database name for connection. Type: string (or Expression with resultType string).
func (o Db2LinkedServiceOutput) Database() pulumi.AnyOutput {
	return o.ApplyT(func(v Db2LinkedService) interface{} { return v.Database }).(pulumi.AnyOutput)
}

// Linked service description.
func (o Db2LinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Db2LinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o Db2LinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v Db2LinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o Db2LinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v Db2LinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Password for authentication.
func (o Db2LinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v Db2LinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Server name for connection. Type: string (or Expression with resultType string).
func (o Db2LinkedServiceOutput) Server() pulumi.AnyOutput {
	return o.ApplyT(func(v Db2LinkedService) interface{} { return v.Server }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Db2'.
func (o Db2LinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v Db2LinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Username for authentication. Type: string (or Expression with resultType string).
func (o Db2LinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v Db2LinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Linked service for DB2 data source.
type Db2LinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// AuthenticationType to be used for connection.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Database name for connection. Type: string (or Expression with resultType string).
	Database interface{} `pulumi:"database"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Password for authentication.
	Password interface{} `pulumi:"password"`
	// Server name for connection. Type: string (or Expression with resultType string).
	Server interface{} `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'Db2'.
	Type string `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// Db2LinkedServiceResponseInput is an input type that accepts Db2LinkedServiceResponseArgs and Db2LinkedServiceResponseOutput values.
// You can construct a concrete instance of `Db2LinkedServiceResponseInput` via:
//
//          Db2LinkedServiceResponseArgs{...}
type Db2LinkedServiceResponseInput interface {
	pulumi.Input

	ToDb2LinkedServiceResponseOutput() Db2LinkedServiceResponseOutput
	ToDb2LinkedServiceResponseOutputWithContext(context.Context) Db2LinkedServiceResponseOutput
}

// Linked service for DB2 data source.
type Db2LinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// AuthenticationType to be used for connection.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Database name for connection. Type: string (or Expression with resultType string).
	Database pulumi.Input `pulumi:"database"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Password for authentication.
	Password pulumi.Input `pulumi:"password"`
	// Server name for connection. Type: string (or Expression with resultType string).
	Server pulumi.Input `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'Db2'.
	Type pulumi.StringInput `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (Db2LinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Db2LinkedServiceResponse)(nil)).Elem()
}

func (i Db2LinkedServiceResponseArgs) ToDb2LinkedServiceResponseOutput() Db2LinkedServiceResponseOutput {
	return i.ToDb2LinkedServiceResponseOutputWithContext(context.Background())
}

func (i Db2LinkedServiceResponseArgs) ToDb2LinkedServiceResponseOutputWithContext(ctx context.Context) Db2LinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Db2LinkedServiceResponseOutput)
}

// Linked service for DB2 data source.
type Db2LinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (Db2LinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Db2LinkedServiceResponse)(nil)).Elem()
}

func (o Db2LinkedServiceResponseOutput) ToDb2LinkedServiceResponseOutput() Db2LinkedServiceResponseOutput {
	return o
}

func (o Db2LinkedServiceResponseOutput) ToDb2LinkedServiceResponseOutputWithContext(ctx context.Context) Db2LinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o Db2LinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v Db2LinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// AuthenticationType to be used for connection.
func (o Db2LinkedServiceResponseOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Db2LinkedServiceResponse) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The integration runtime reference.
func (o Db2LinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v Db2LinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Database name for connection. Type: string (or Expression with resultType string).
func (o Db2LinkedServiceResponseOutput) Database() pulumi.AnyOutput {
	return o.ApplyT(func(v Db2LinkedServiceResponse) interface{} { return v.Database }).(pulumi.AnyOutput)
}

// Linked service description.
func (o Db2LinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Db2LinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o Db2LinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v Db2LinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o Db2LinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v Db2LinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Password for authentication.
func (o Db2LinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v Db2LinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Server name for connection. Type: string (or Expression with resultType string).
func (o Db2LinkedServiceResponseOutput) Server() pulumi.AnyOutput {
	return o.ApplyT(func(v Db2LinkedServiceResponse) interface{} { return v.Server }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Db2'.
func (o Db2LinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v Db2LinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Username for authentication. Type: string (or Expression with resultType string).
func (o Db2LinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v Db2LinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Distcp settings.
type DistcpSettings struct {
	// Specifies the Distcp options. Type: string (or Expression with resultType string).
	DistcpOptions interface{} `pulumi:"distcpOptions"`
	// Specifies the Yarn ResourceManager endpoint. Type: string (or Expression with resultType string).
	ResourceManagerEndpoint interface{} `pulumi:"resourceManagerEndpoint"`
	// Specifies an existing folder path which will be used to store temp Distcp command script. The script file is generated by ADF and will be removed after Copy job finished. Type: string (or Expression with resultType string).
	TempScriptPath interface{} `pulumi:"tempScriptPath"`
}

// DistcpSettingsInput is an input type that accepts DistcpSettingsArgs and DistcpSettingsOutput values.
// You can construct a concrete instance of `DistcpSettingsInput` via:
//
//          DistcpSettingsArgs{...}
type DistcpSettingsInput interface {
	pulumi.Input

	ToDistcpSettingsOutput() DistcpSettingsOutput
	ToDistcpSettingsOutputWithContext(context.Context) DistcpSettingsOutput
}

// Distcp settings.
type DistcpSettingsArgs struct {
	// Specifies the Distcp options. Type: string (or Expression with resultType string).
	DistcpOptions pulumi.Input `pulumi:"distcpOptions"`
	// Specifies the Yarn ResourceManager endpoint. Type: string (or Expression with resultType string).
	ResourceManagerEndpoint pulumi.Input `pulumi:"resourceManagerEndpoint"`
	// Specifies an existing folder path which will be used to store temp Distcp command script. The script file is generated by ADF and will be removed after Copy job finished. Type: string (or Expression with resultType string).
	TempScriptPath pulumi.Input `pulumi:"tempScriptPath"`
}

func (DistcpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistcpSettings)(nil)).Elem()
}

func (i DistcpSettingsArgs) ToDistcpSettingsOutput() DistcpSettingsOutput {
	return i.ToDistcpSettingsOutputWithContext(context.Background())
}

func (i DistcpSettingsArgs) ToDistcpSettingsOutputWithContext(ctx context.Context) DistcpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistcpSettingsOutput)
}

func (i DistcpSettingsArgs) ToDistcpSettingsPtrOutput() DistcpSettingsPtrOutput {
	return i.ToDistcpSettingsPtrOutputWithContext(context.Background())
}

func (i DistcpSettingsArgs) ToDistcpSettingsPtrOutputWithContext(ctx context.Context) DistcpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistcpSettingsOutput).ToDistcpSettingsPtrOutputWithContext(ctx)
}

// DistcpSettingsPtrInput is an input type that accepts DistcpSettingsArgs, DistcpSettingsPtr and DistcpSettingsPtrOutput values.
// You can construct a concrete instance of `DistcpSettingsPtrInput` via:
//
//          DistcpSettingsArgs{...}
//
//  or:
//
//          nil
type DistcpSettingsPtrInput interface {
	pulumi.Input

	ToDistcpSettingsPtrOutput() DistcpSettingsPtrOutput
	ToDistcpSettingsPtrOutputWithContext(context.Context) DistcpSettingsPtrOutput
}

type distcpSettingsPtrType DistcpSettingsArgs

func DistcpSettingsPtr(v *DistcpSettingsArgs) DistcpSettingsPtrInput {
	return (*distcpSettingsPtrType)(v)
}

func (*distcpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistcpSettings)(nil)).Elem()
}

func (i *distcpSettingsPtrType) ToDistcpSettingsPtrOutput() DistcpSettingsPtrOutput {
	return i.ToDistcpSettingsPtrOutputWithContext(context.Background())
}

func (i *distcpSettingsPtrType) ToDistcpSettingsPtrOutputWithContext(ctx context.Context) DistcpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistcpSettingsPtrOutput)
}

// Distcp settings.
type DistcpSettingsOutput struct{ *pulumi.OutputState }

func (DistcpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistcpSettings)(nil)).Elem()
}

func (o DistcpSettingsOutput) ToDistcpSettingsOutput() DistcpSettingsOutput {
	return o
}

func (o DistcpSettingsOutput) ToDistcpSettingsOutputWithContext(ctx context.Context) DistcpSettingsOutput {
	return o
}

func (o DistcpSettingsOutput) ToDistcpSettingsPtrOutput() DistcpSettingsPtrOutput {
	return o.ToDistcpSettingsPtrOutputWithContext(context.Background())
}

func (o DistcpSettingsOutput) ToDistcpSettingsPtrOutputWithContext(ctx context.Context) DistcpSettingsPtrOutput {
	return o.ApplyT(func(v DistcpSettings) *DistcpSettings {
		return &v
	}).(DistcpSettingsPtrOutput)
}

// Specifies the Distcp options. Type: string (or Expression with resultType string).
func (o DistcpSettingsOutput) DistcpOptions() pulumi.AnyOutput {
	return o.ApplyT(func(v DistcpSettings) interface{} { return v.DistcpOptions }).(pulumi.AnyOutput)
}

// Specifies the Yarn ResourceManager endpoint. Type: string (or Expression with resultType string).
func (o DistcpSettingsOutput) ResourceManagerEndpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v DistcpSettings) interface{} { return v.ResourceManagerEndpoint }).(pulumi.AnyOutput)
}

// Specifies an existing folder path which will be used to store temp Distcp command script. The script file is generated by ADF and will be removed after Copy job finished. Type: string (or Expression with resultType string).
func (o DistcpSettingsOutput) TempScriptPath() pulumi.AnyOutput {
	return o.ApplyT(func(v DistcpSettings) interface{} { return v.TempScriptPath }).(pulumi.AnyOutput)
}

type DistcpSettingsPtrOutput struct{ *pulumi.OutputState }

func (DistcpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistcpSettings)(nil)).Elem()
}

func (o DistcpSettingsPtrOutput) ToDistcpSettingsPtrOutput() DistcpSettingsPtrOutput {
	return o
}

func (o DistcpSettingsPtrOutput) ToDistcpSettingsPtrOutputWithContext(ctx context.Context) DistcpSettingsPtrOutput {
	return o
}

func (o DistcpSettingsPtrOutput) Elem() DistcpSettingsOutput {
	return o.ApplyT(func(v *DistcpSettings) DistcpSettings { return *v }).(DistcpSettingsOutput)
}

// Specifies the Distcp options. Type: string (or Expression with resultType string).
func (o DistcpSettingsPtrOutput) DistcpOptions() pulumi.AnyOutput {
	return o.ApplyT(func(v *DistcpSettings) interface{} {
		if v == nil {
			return nil
		}
		return v.DistcpOptions
	}).(pulumi.AnyOutput)
}

// Specifies the Yarn ResourceManager endpoint. Type: string (or Expression with resultType string).
func (o DistcpSettingsPtrOutput) ResourceManagerEndpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v *DistcpSettings) interface{} {
		if v == nil {
			return nil
		}
		return v.ResourceManagerEndpoint
	}).(pulumi.AnyOutput)
}

// Specifies an existing folder path which will be used to store temp Distcp command script. The script file is generated by ADF and will be removed after Copy job finished. Type: string (or Expression with resultType string).
func (o DistcpSettingsPtrOutput) TempScriptPath() pulumi.AnyOutput {
	return o.ApplyT(func(v *DistcpSettings) interface{} {
		if v == nil {
			return nil
		}
		return v.TempScriptPath
	}).(pulumi.AnyOutput)
}

// Distcp settings.
type DistcpSettingsResponse struct {
	// Specifies the Distcp options. Type: string (or Expression with resultType string).
	DistcpOptions interface{} `pulumi:"distcpOptions"`
	// Specifies the Yarn ResourceManager endpoint. Type: string (or Expression with resultType string).
	ResourceManagerEndpoint interface{} `pulumi:"resourceManagerEndpoint"`
	// Specifies an existing folder path which will be used to store temp Distcp command script. The script file is generated by ADF and will be removed after Copy job finished. Type: string (or Expression with resultType string).
	TempScriptPath interface{} `pulumi:"tempScriptPath"`
}

// DistcpSettingsResponseInput is an input type that accepts DistcpSettingsResponseArgs and DistcpSettingsResponseOutput values.
// You can construct a concrete instance of `DistcpSettingsResponseInput` via:
//
//          DistcpSettingsResponseArgs{...}
type DistcpSettingsResponseInput interface {
	pulumi.Input

	ToDistcpSettingsResponseOutput() DistcpSettingsResponseOutput
	ToDistcpSettingsResponseOutputWithContext(context.Context) DistcpSettingsResponseOutput
}

// Distcp settings.
type DistcpSettingsResponseArgs struct {
	// Specifies the Distcp options. Type: string (or Expression with resultType string).
	DistcpOptions pulumi.Input `pulumi:"distcpOptions"`
	// Specifies the Yarn ResourceManager endpoint. Type: string (or Expression with resultType string).
	ResourceManagerEndpoint pulumi.Input `pulumi:"resourceManagerEndpoint"`
	// Specifies an existing folder path which will be used to store temp Distcp command script. The script file is generated by ADF and will be removed after Copy job finished. Type: string (or Expression with resultType string).
	TempScriptPath pulumi.Input `pulumi:"tempScriptPath"`
}

func (DistcpSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistcpSettingsResponse)(nil)).Elem()
}

func (i DistcpSettingsResponseArgs) ToDistcpSettingsResponseOutput() DistcpSettingsResponseOutput {
	return i.ToDistcpSettingsResponseOutputWithContext(context.Background())
}

func (i DistcpSettingsResponseArgs) ToDistcpSettingsResponseOutputWithContext(ctx context.Context) DistcpSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistcpSettingsResponseOutput)
}

func (i DistcpSettingsResponseArgs) ToDistcpSettingsResponsePtrOutput() DistcpSettingsResponsePtrOutput {
	return i.ToDistcpSettingsResponsePtrOutputWithContext(context.Background())
}

func (i DistcpSettingsResponseArgs) ToDistcpSettingsResponsePtrOutputWithContext(ctx context.Context) DistcpSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistcpSettingsResponseOutput).ToDistcpSettingsResponsePtrOutputWithContext(ctx)
}

// DistcpSettingsResponsePtrInput is an input type that accepts DistcpSettingsResponseArgs, DistcpSettingsResponsePtr and DistcpSettingsResponsePtrOutput values.
// You can construct a concrete instance of `DistcpSettingsResponsePtrInput` via:
//
//          DistcpSettingsResponseArgs{...}
//
//  or:
//
//          nil
type DistcpSettingsResponsePtrInput interface {
	pulumi.Input

	ToDistcpSettingsResponsePtrOutput() DistcpSettingsResponsePtrOutput
	ToDistcpSettingsResponsePtrOutputWithContext(context.Context) DistcpSettingsResponsePtrOutput
}

type distcpSettingsResponsePtrType DistcpSettingsResponseArgs

func DistcpSettingsResponsePtr(v *DistcpSettingsResponseArgs) DistcpSettingsResponsePtrInput {
	return (*distcpSettingsResponsePtrType)(v)
}

func (*distcpSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistcpSettingsResponse)(nil)).Elem()
}

func (i *distcpSettingsResponsePtrType) ToDistcpSettingsResponsePtrOutput() DistcpSettingsResponsePtrOutput {
	return i.ToDistcpSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *distcpSettingsResponsePtrType) ToDistcpSettingsResponsePtrOutputWithContext(ctx context.Context) DistcpSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistcpSettingsResponsePtrOutput)
}

// Distcp settings.
type DistcpSettingsResponseOutput struct{ *pulumi.OutputState }

func (DistcpSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistcpSettingsResponse)(nil)).Elem()
}

func (o DistcpSettingsResponseOutput) ToDistcpSettingsResponseOutput() DistcpSettingsResponseOutput {
	return o
}

func (o DistcpSettingsResponseOutput) ToDistcpSettingsResponseOutputWithContext(ctx context.Context) DistcpSettingsResponseOutput {
	return o
}

func (o DistcpSettingsResponseOutput) ToDistcpSettingsResponsePtrOutput() DistcpSettingsResponsePtrOutput {
	return o.ToDistcpSettingsResponsePtrOutputWithContext(context.Background())
}

func (o DistcpSettingsResponseOutput) ToDistcpSettingsResponsePtrOutputWithContext(ctx context.Context) DistcpSettingsResponsePtrOutput {
	return o.ApplyT(func(v DistcpSettingsResponse) *DistcpSettingsResponse {
		return &v
	}).(DistcpSettingsResponsePtrOutput)
}

// Specifies the Distcp options. Type: string (or Expression with resultType string).
func (o DistcpSettingsResponseOutput) DistcpOptions() pulumi.AnyOutput {
	return o.ApplyT(func(v DistcpSettingsResponse) interface{} { return v.DistcpOptions }).(pulumi.AnyOutput)
}

// Specifies the Yarn ResourceManager endpoint. Type: string (or Expression with resultType string).
func (o DistcpSettingsResponseOutput) ResourceManagerEndpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v DistcpSettingsResponse) interface{} { return v.ResourceManagerEndpoint }).(pulumi.AnyOutput)
}

// Specifies an existing folder path which will be used to store temp Distcp command script. The script file is generated by ADF and will be removed after Copy job finished. Type: string (or Expression with resultType string).
func (o DistcpSettingsResponseOutput) TempScriptPath() pulumi.AnyOutput {
	return o.ApplyT(func(v DistcpSettingsResponse) interface{} { return v.TempScriptPath }).(pulumi.AnyOutput)
}

type DistcpSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DistcpSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistcpSettingsResponse)(nil)).Elem()
}

func (o DistcpSettingsResponsePtrOutput) ToDistcpSettingsResponsePtrOutput() DistcpSettingsResponsePtrOutput {
	return o
}

func (o DistcpSettingsResponsePtrOutput) ToDistcpSettingsResponsePtrOutputWithContext(ctx context.Context) DistcpSettingsResponsePtrOutput {
	return o
}

func (o DistcpSettingsResponsePtrOutput) Elem() DistcpSettingsResponseOutput {
	return o.ApplyT(func(v *DistcpSettingsResponse) DistcpSettingsResponse { return *v }).(DistcpSettingsResponseOutput)
}

// Specifies the Distcp options. Type: string (or Expression with resultType string).
func (o DistcpSettingsResponsePtrOutput) DistcpOptions() pulumi.AnyOutput {
	return o.ApplyT(func(v *DistcpSettingsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.DistcpOptions
	}).(pulumi.AnyOutput)
}

// Specifies the Yarn ResourceManager endpoint. Type: string (or Expression with resultType string).
func (o DistcpSettingsResponsePtrOutput) ResourceManagerEndpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v *DistcpSettingsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.ResourceManagerEndpoint
	}).(pulumi.AnyOutput)
}

// Specifies an existing folder path which will be used to store temp Distcp command script. The script file is generated by ADF and will be removed after Copy job finished. Type: string (or Expression with resultType string).
func (o DistcpSettingsResponsePtrOutput) TempScriptPath() pulumi.AnyOutput {
	return o.ApplyT(func(v *DistcpSettingsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.TempScriptPath
	}).(pulumi.AnyOutput)
}

// Microsoft Azure Document Database Collection dataset.
type DocumentDbCollectionDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Document Database collection name. Type: string (or Expression with resultType string).
	CollectionName interface{} `pulumi:"collectionName"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'DocumentDbCollection'.
	Type string `pulumi:"type"`
}

// DocumentDbCollectionDatasetInput is an input type that accepts DocumentDbCollectionDatasetArgs and DocumentDbCollectionDatasetOutput values.
// You can construct a concrete instance of `DocumentDbCollectionDatasetInput` via:
//
//          DocumentDbCollectionDatasetArgs{...}
type DocumentDbCollectionDatasetInput interface {
	pulumi.Input

	ToDocumentDbCollectionDatasetOutput() DocumentDbCollectionDatasetOutput
	ToDocumentDbCollectionDatasetOutputWithContext(context.Context) DocumentDbCollectionDatasetOutput
}

// Microsoft Azure Document Database Collection dataset.
type DocumentDbCollectionDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Document Database collection name. Type: string (or Expression with resultType string).
	CollectionName pulumi.Input `pulumi:"collectionName"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'DocumentDbCollection'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DocumentDbCollectionDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDbCollectionDataset)(nil)).Elem()
}

func (i DocumentDbCollectionDatasetArgs) ToDocumentDbCollectionDatasetOutput() DocumentDbCollectionDatasetOutput {
	return i.ToDocumentDbCollectionDatasetOutputWithContext(context.Background())
}

func (i DocumentDbCollectionDatasetArgs) ToDocumentDbCollectionDatasetOutputWithContext(ctx context.Context) DocumentDbCollectionDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentDbCollectionDatasetOutput)
}

// Microsoft Azure Document Database Collection dataset.
type DocumentDbCollectionDatasetOutput struct{ *pulumi.OutputState }

func (DocumentDbCollectionDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDbCollectionDataset)(nil)).Elem()
}

func (o DocumentDbCollectionDatasetOutput) ToDocumentDbCollectionDatasetOutput() DocumentDbCollectionDatasetOutput {
	return o
}

func (o DocumentDbCollectionDatasetOutput) ToDocumentDbCollectionDatasetOutputWithContext(ctx context.Context) DocumentDbCollectionDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o DocumentDbCollectionDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v DocumentDbCollectionDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Document Database collection name. Type: string (or Expression with resultType string).
func (o DocumentDbCollectionDatasetOutput) CollectionName() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionDataset) interface{} { return v.CollectionName }).(pulumi.AnyOutput)
}

// Dataset description.
func (o DocumentDbCollectionDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentDbCollectionDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o DocumentDbCollectionDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v DocumentDbCollectionDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o DocumentDbCollectionDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v DocumentDbCollectionDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o DocumentDbCollectionDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'DocumentDbCollection'.
func (o DocumentDbCollectionDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DocumentDbCollectionDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Microsoft Azure Document Database Collection dataset.
type DocumentDbCollectionDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Document Database collection name. Type: string (or Expression with resultType string).
	CollectionName interface{} `pulumi:"collectionName"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'DocumentDbCollection'.
	Type string `pulumi:"type"`
}

// DocumentDbCollectionDatasetResponseInput is an input type that accepts DocumentDbCollectionDatasetResponseArgs and DocumentDbCollectionDatasetResponseOutput values.
// You can construct a concrete instance of `DocumentDbCollectionDatasetResponseInput` via:
//
//          DocumentDbCollectionDatasetResponseArgs{...}
type DocumentDbCollectionDatasetResponseInput interface {
	pulumi.Input

	ToDocumentDbCollectionDatasetResponseOutput() DocumentDbCollectionDatasetResponseOutput
	ToDocumentDbCollectionDatasetResponseOutputWithContext(context.Context) DocumentDbCollectionDatasetResponseOutput
}

// Microsoft Azure Document Database Collection dataset.
type DocumentDbCollectionDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Document Database collection name. Type: string (or Expression with resultType string).
	CollectionName pulumi.Input `pulumi:"collectionName"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'DocumentDbCollection'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DocumentDbCollectionDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDbCollectionDatasetResponse)(nil)).Elem()
}

func (i DocumentDbCollectionDatasetResponseArgs) ToDocumentDbCollectionDatasetResponseOutput() DocumentDbCollectionDatasetResponseOutput {
	return i.ToDocumentDbCollectionDatasetResponseOutputWithContext(context.Background())
}

func (i DocumentDbCollectionDatasetResponseArgs) ToDocumentDbCollectionDatasetResponseOutputWithContext(ctx context.Context) DocumentDbCollectionDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentDbCollectionDatasetResponseOutput)
}

// Microsoft Azure Document Database Collection dataset.
type DocumentDbCollectionDatasetResponseOutput struct{ *pulumi.OutputState }

func (DocumentDbCollectionDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDbCollectionDatasetResponse)(nil)).Elem()
}

func (o DocumentDbCollectionDatasetResponseOutput) ToDocumentDbCollectionDatasetResponseOutput() DocumentDbCollectionDatasetResponseOutput {
	return o
}

func (o DocumentDbCollectionDatasetResponseOutput) ToDocumentDbCollectionDatasetResponseOutputWithContext(ctx context.Context) DocumentDbCollectionDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o DocumentDbCollectionDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v DocumentDbCollectionDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Document Database collection name. Type: string (or Expression with resultType string).
func (o DocumentDbCollectionDatasetResponseOutput) CollectionName() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionDatasetResponse) interface{} { return v.CollectionName }).(pulumi.AnyOutput)
}

// Dataset description.
func (o DocumentDbCollectionDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentDbCollectionDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o DocumentDbCollectionDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v DocumentDbCollectionDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o DocumentDbCollectionDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v DocumentDbCollectionDatasetResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o DocumentDbCollectionDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'DocumentDbCollection'.
func (o DocumentDbCollectionDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DocumentDbCollectionDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Document Database Collection sink.
type DocumentDbCollectionSink struct {
	// Nested properties separator. Default is . (dot). Type: string (or Expression with resultType string).
	NestingSeparator interface{} `pulumi:"nestingSeparator"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'DocumentDbCollectionSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// DocumentDbCollectionSinkInput is an input type that accepts DocumentDbCollectionSinkArgs and DocumentDbCollectionSinkOutput values.
// You can construct a concrete instance of `DocumentDbCollectionSinkInput` via:
//
//          DocumentDbCollectionSinkArgs{...}
type DocumentDbCollectionSinkInput interface {
	pulumi.Input

	ToDocumentDbCollectionSinkOutput() DocumentDbCollectionSinkOutput
	ToDocumentDbCollectionSinkOutputWithContext(context.Context) DocumentDbCollectionSinkOutput
}

// A copy activity Document Database Collection sink.
type DocumentDbCollectionSinkArgs struct {
	// Nested properties separator. Default is . (dot). Type: string (or Expression with resultType string).
	NestingSeparator pulumi.Input `pulumi:"nestingSeparator"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'DocumentDbCollectionSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (DocumentDbCollectionSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDbCollectionSink)(nil)).Elem()
}

func (i DocumentDbCollectionSinkArgs) ToDocumentDbCollectionSinkOutput() DocumentDbCollectionSinkOutput {
	return i.ToDocumentDbCollectionSinkOutputWithContext(context.Background())
}

func (i DocumentDbCollectionSinkArgs) ToDocumentDbCollectionSinkOutputWithContext(ctx context.Context) DocumentDbCollectionSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentDbCollectionSinkOutput)
}

// A copy activity Document Database Collection sink.
type DocumentDbCollectionSinkOutput struct{ *pulumi.OutputState }

func (DocumentDbCollectionSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDbCollectionSink)(nil)).Elem()
}

func (o DocumentDbCollectionSinkOutput) ToDocumentDbCollectionSinkOutput() DocumentDbCollectionSinkOutput {
	return o
}

func (o DocumentDbCollectionSinkOutput) ToDocumentDbCollectionSinkOutputWithContext(ctx context.Context) DocumentDbCollectionSinkOutput {
	return o
}

// Nested properties separator. Default is . (dot). Type: string (or Expression with resultType string).
func (o DocumentDbCollectionSinkOutput) NestingSeparator() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSink) interface{} { return v.NestingSeparator }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o DocumentDbCollectionSinkOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSink) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o DocumentDbCollectionSinkOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSink) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'DocumentDbCollectionSink'.
func (o DocumentDbCollectionSinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DocumentDbCollectionSink) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o DocumentDbCollectionSinkOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSink) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o DocumentDbCollectionSinkOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSink) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity Document Database Collection sink.
type DocumentDbCollectionSinkResponse struct {
	// Nested properties separator. Default is . (dot). Type: string (or Expression with resultType string).
	NestingSeparator interface{} `pulumi:"nestingSeparator"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'DocumentDbCollectionSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// DocumentDbCollectionSinkResponseInput is an input type that accepts DocumentDbCollectionSinkResponseArgs and DocumentDbCollectionSinkResponseOutput values.
// You can construct a concrete instance of `DocumentDbCollectionSinkResponseInput` via:
//
//          DocumentDbCollectionSinkResponseArgs{...}
type DocumentDbCollectionSinkResponseInput interface {
	pulumi.Input

	ToDocumentDbCollectionSinkResponseOutput() DocumentDbCollectionSinkResponseOutput
	ToDocumentDbCollectionSinkResponseOutputWithContext(context.Context) DocumentDbCollectionSinkResponseOutput
}

// A copy activity Document Database Collection sink.
type DocumentDbCollectionSinkResponseArgs struct {
	// Nested properties separator. Default is . (dot). Type: string (or Expression with resultType string).
	NestingSeparator pulumi.Input `pulumi:"nestingSeparator"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'DocumentDbCollectionSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (DocumentDbCollectionSinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDbCollectionSinkResponse)(nil)).Elem()
}

func (i DocumentDbCollectionSinkResponseArgs) ToDocumentDbCollectionSinkResponseOutput() DocumentDbCollectionSinkResponseOutput {
	return i.ToDocumentDbCollectionSinkResponseOutputWithContext(context.Background())
}

func (i DocumentDbCollectionSinkResponseArgs) ToDocumentDbCollectionSinkResponseOutputWithContext(ctx context.Context) DocumentDbCollectionSinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentDbCollectionSinkResponseOutput)
}

// A copy activity Document Database Collection sink.
type DocumentDbCollectionSinkResponseOutput struct{ *pulumi.OutputState }

func (DocumentDbCollectionSinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDbCollectionSinkResponse)(nil)).Elem()
}

func (o DocumentDbCollectionSinkResponseOutput) ToDocumentDbCollectionSinkResponseOutput() DocumentDbCollectionSinkResponseOutput {
	return o
}

func (o DocumentDbCollectionSinkResponseOutput) ToDocumentDbCollectionSinkResponseOutputWithContext(ctx context.Context) DocumentDbCollectionSinkResponseOutput {
	return o
}

// Nested properties separator. Default is . (dot). Type: string (or Expression with resultType string).
func (o DocumentDbCollectionSinkResponseOutput) NestingSeparator() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSinkResponse) interface{} { return v.NestingSeparator }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o DocumentDbCollectionSinkResponseOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSinkResponse) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o DocumentDbCollectionSinkResponseOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSinkResponse) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'DocumentDbCollectionSink'.
func (o DocumentDbCollectionSinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DocumentDbCollectionSinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o DocumentDbCollectionSinkResponseOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSinkResponse) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o DocumentDbCollectionSinkResponseOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSinkResponse) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity Document Database Collection source.
type DocumentDbCollectionSource struct {
	// Nested properties separator. Type: string (or Expression with resultType string).
	NestingSeparator interface{} `pulumi:"nestingSeparator"`
	// Documents query. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'DocumentDbCollectionSource'.
	Type string `pulumi:"type"`
}

// DocumentDbCollectionSourceInput is an input type that accepts DocumentDbCollectionSourceArgs and DocumentDbCollectionSourceOutput values.
// You can construct a concrete instance of `DocumentDbCollectionSourceInput` via:
//
//          DocumentDbCollectionSourceArgs{...}
type DocumentDbCollectionSourceInput interface {
	pulumi.Input

	ToDocumentDbCollectionSourceOutput() DocumentDbCollectionSourceOutput
	ToDocumentDbCollectionSourceOutputWithContext(context.Context) DocumentDbCollectionSourceOutput
}

// A copy activity Document Database Collection source.
type DocumentDbCollectionSourceArgs struct {
	// Nested properties separator. Type: string (or Expression with resultType string).
	NestingSeparator pulumi.Input `pulumi:"nestingSeparator"`
	// Documents query. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'DocumentDbCollectionSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DocumentDbCollectionSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDbCollectionSource)(nil)).Elem()
}

func (i DocumentDbCollectionSourceArgs) ToDocumentDbCollectionSourceOutput() DocumentDbCollectionSourceOutput {
	return i.ToDocumentDbCollectionSourceOutputWithContext(context.Background())
}

func (i DocumentDbCollectionSourceArgs) ToDocumentDbCollectionSourceOutputWithContext(ctx context.Context) DocumentDbCollectionSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentDbCollectionSourceOutput)
}

// A copy activity Document Database Collection source.
type DocumentDbCollectionSourceOutput struct{ *pulumi.OutputState }

func (DocumentDbCollectionSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDbCollectionSource)(nil)).Elem()
}

func (o DocumentDbCollectionSourceOutput) ToDocumentDbCollectionSourceOutput() DocumentDbCollectionSourceOutput {
	return o
}

func (o DocumentDbCollectionSourceOutput) ToDocumentDbCollectionSourceOutputWithContext(ctx context.Context) DocumentDbCollectionSourceOutput {
	return o
}

// Nested properties separator. Type: string (or Expression with resultType string).
func (o DocumentDbCollectionSourceOutput) NestingSeparator() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSource) interface{} { return v.NestingSeparator }).(pulumi.AnyOutput)
}

// Documents query. Type: string (or Expression with resultType string).
func (o DocumentDbCollectionSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o DocumentDbCollectionSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o DocumentDbCollectionSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'DocumentDbCollectionSource'.
func (o DocumentDbCollectionSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DocumentDbCollectionSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Document Database Collection source.
type DocumentDbCollectionSourceResponse struct {
	// Nested properties separator. Type: string (or Expression with resultType string).
	NestingSeparator interface{} `pulumi:"nestingSeparator"`
	// Documents query. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'DocumentDbCollectionSource'.
	Type string `pulumi:"type"`
}

// DocumentDbCollectionSourceResponseInput is an input type that accepts DocumentDbCollectionSourceResponseArgs and DocumentDbCollectionSourceResponseOutput values.
// You can construct a concrete instance of `DocumentDbCollectionSourceResponseInput` via:
//
//          DocumentDbCollectionSourceResponseArgs{...}
type DocumentDbCollectionSourceResponseInput interface {
	pulumi.Input

	ToDocumentDbCollectionSourceResponseOutput() DocumentDbCollectionSourceResponseOutput
	ToDocumentDbCollectionSourceResponseOutputWithContext(context.Context) DocumentDbCollectionSourceResponseOutput
}

// A copy activity Document Database Collection source.
type DocumentDbCollectionSourceResponseArgs struct {
	// Nested properties separator. Type: string (or Expression with resultType string).
	NestingSeparator pulumi.Input `pulumi:"nestingSeparator"`
	// Documents query. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'DocumentDbCollectionSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DocumentDbCollectionSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDbCollectionSourceResponse)(nil)).Elem()
}

func (i DocumentDbCollectionSourceResponseArgs) ToDocumentDbCollectionSourceResponseOutput() DocumentDbCollectionSourceResponseOutput {
	return i.ToDocumentDbCollectionSourceResponseOutputWithContext(context.Background())
}

func (i DocumentDbCollectionSourceResponseArgs) ToDocumentDbCollectionSourceResponseOutputWithContext(ctx context.Context) DocumentDbCollectionSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentDbCollectionSourceResponseOutput)
}

// A copy activity Document Database Collection source.
type DocumentDbCollectionSourceResponseOutput struct{ *pulumi.OutputState }

func (DocumentDbCollectionSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDbCollectionSourceResponse)(nil)).Elem()
}

func (o DocumentDbCollectionSourceResponseOutput) ToDocumentDbCollectionSourceResponseOutput() DocumentDbCollectionSourceResponseOutput {
	return o
}

func (o DocumentDbCollectionSourceResponseOutput) ToDocumentDbCollectionSourceResponseOutputWithContext(ctx context.Context) DocumentDbCollectionSourceResponseOutput {
	return o
}

// Nested properties separator. Type: string (or Expression with resultType string).
func (o DocumentDbCollectionSourceResponseOutput) NestingSeparator() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSourceResponse) interface{} { return v.NestingSeparator }).(pulumi.AnyOutput)
}

// Documents query. Type: string (or Expression with resultType string).
func (o DocumentDbCollectionSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o DocumentDbCollectionSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o DocumentDbCollectionSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v DocumentDbCollectionSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'DocumentDbCollectionSource'.
func (o DocumentDbCollectionSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DocumentDbCollectionSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Drill server linked service.
type DrillLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Drill'.
	Type string `pulumi:"type"`
}

// DrillLinkedServiceInput is an input type that accepts DrillLinkedServiceArgs and DrillLinkedServiceOutput values.
// You can construct a concrete instance of `DrillLinkedServiceInput` via:
//
//          DrillLinkedServiceArgs{...}
type DrillLinkedServiceInput interface {
	pulumi.Input

	ToDrillLinkedServiceOutput() DrillLinkedServiceOutput
	ToDrillLinkedServiceOutputWithContext(context.Context) DrillLinkedServiceOutput
}

// Drill server linked service.
type DrillLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Drill'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DrillLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DrillLinkedService)(nil)).Elem()
}

func (i DrillLinkedServiceArgs) ToDrillLinkedServiceOutput() DrillLinkedServiceOutput {
	return i.ToDrillLinkedServiceOutputWithContext(context.Background())
}

func (i DrillLinkedServiceArgs) ToDrillLinkedServiceOutputWithContext(ctx context.Context) DrillLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrillLinkedServiceOutput)
}

// Drill server linked service.
type DrillLinkedServiceOutput struct{ *pulumi.OutputState }

func (DrillLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DrillLinkedService)(nil)).Elem()
}

func (o DrillLinkedServiceOutput) ToDrillLinkedServiceOutput() DrillLinkedServiceOutput {
	return o
}

func (o DrillLinkedServiceOutput) ToDrillLinkedServiceOutputWithContext(ctx context.Context) DrillLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o DrillLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v DrillLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o DrillLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v DrillLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o DrillLinkedServiceOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v DrillLinkedService) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o DrillLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrillLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o DrillLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v DrillLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o DrillLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v DrillLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'Drill'.
func (o DrillLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DrillLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Drill server linked service.
type DrillLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Drill'.
	Type string `pulumi:"type"`
}

// DrillLinkedServiceResponseInput is an input type that accepts DrillLinkedServiceResponseArgs and DrillLinkedServiceResponseOutput values.
// You can construct a concrete instance of `DrillLinkedServiceResponseInput` via:
//
//          DrillLinkedServiceResponseArgs{...}
type DrillLinkedServiceResponseInput interface {
	pulumi.Input

	ToDrillLinkedServiceResponseOutput() DrillLinkedServiceResponseOutput
	ToDrillLinkedServiceResponseOutputWithContext(context.Context) DrillLinkedServiceResponseOutput
}

// Drill server linked service.
type DrillLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Drill'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DrillLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DrillLinkedServiceResponse)(nil)).Elem()
}

func (i DrillLinkedServiceResponseArgs) ToDrillLinkedServiceResponseOutput() DrillLinkedServiceResponseOutput {
	return i.ToDrillLinkedServiceResponseOutputWithContext(context.Background())
}

func (i DrillLinkedServiceResponseArgs) ToDrillLinkedServiceResponseOutputWithContext(ctx context.Context) DrillLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrillLinkedServiceResponseOutput)
}

// Drill server linked service.
type DrillLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (DrillLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DrillLinkedServiceResponse)(nil)).Elem()
}

func (o DrillLinkedServiceResponseOutput) ToDrillLinkedServiceResponseOutput() DrillLinkedServiceResponseOutput {
	return o
}

func (o DrillLinkedServiceResponseOutput) ToDrillLinkedServiceResponseOutputWithContext(ctx context.Context) DrillLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o DrillLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v DrillLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o DrillLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v DrillLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o DrillLinkedServiceResponseOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v DrillLinkedServiceResponse) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o DrillLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrillLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o DrillLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v DrillLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o DrillLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v DrillLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'Drill'.
func (o DrillLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DrillLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Drill server source.
type DrillSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'DrillSource'.
	Type string `pulumi:"type"`
}

// DrillSourceInput is an input type that accepts DrillSourceArgs and DrillSourceOutput values.
// You can construct a concrete instance of `DrillSourceInput` via:
//
//          DrillSourceArgs{...}
type DrillSourceInput interface {
	pulumi.Input

	ToDrillSourceOutput() DrillSourceOutput
	ToDrillSourceOutputWithContext(context.Context) DrillSourceOutput
}

// A copy activity Drill server source.
type DrillSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'DrillSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DrillSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DrillSource)(nil)).Elem()
}

func (i DrillSourceArgs) ToDrillSourceOutput() DrillSourceOutput {
	return i.ToDrillSourceOutputWithContext(context.Background())
}

func (i DrillSourceArgs) ToDrillSourceOutputWithContext(ctx context.Context) DrillSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrillSourceOutput)
}

// A copy activity Drill server source.
type DrillSourceOutput struct{ *pulumi.OutputState }

func (DrillSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DrillSource)(nil)).Elem()
}

func (o DrillSourceOutput) ToDrillSourceOutput() DrillSourceOutput {
	return o
}

func (o DrillSourceOutput) ToDrillSourceOutputWithContext(ctx context.Context) DrillSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o DrillSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v DrillSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o DrillSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v DrillSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o DrillSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v DrillSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'DrillSource'.
func (o DrillSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DrillSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Drill server source.
type DrillSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'DrillSource'.
	Type string `pulumi:"type"`
}

// DrillSourceResponseInput is an input type that accepts DrillSourceResponseArgs and DrillSourceResponseOutput values.
// You can construct a concrete instance of `DrillSourceResponseInput` via:
//
//          DrillSourceResponseArgs{...}
type DrillSourceResponseInput interface {
	pulumi.Input

	ToDrillSourceResponseOutput() DrillSourceResponseOutput
	ToDrillSourceResponseOutputWithContext(context.Context) DrillSourceResponseOutput
}

// A copy activity Drill server source.
type DrillSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'DrillSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DrillSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DrillSourceResponse)(nil)).Elem()
}

func (i DrillSourceResponseArgs) ToDrillSourceResponseOutput() DrillSourceResponseOutput {
	return i.ToDrillSourceResponseOutputWithContext(context.Background())
}

func (i DrillSourceResponseArgs) ToDrillSourceResponseOutputWithContext(ctx context.Context) DrillSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrillSourceResponseOutput)
}

// A copy activity Drill server source.
type DrillSourceResponseOutput struct{ *pulumi.OutputState }

func (DrillSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DrillSourceResponse)(nil)).Elem()
}

func (o DrillSourceResponseOutput) ToDrillSourceResponseOutput() DrillSourceResponseOutput {
	return o
}

func (o DrillSourceResponseOutput) ToDrillSourceResponseOutputWithContext(ctx context.Context) DrillSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o DrillSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v DrillSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o DrillSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v DrillSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o DrillSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v DrillSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'DrillSource'.
func (o DrillSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DrillSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Drill server dataset.
type DrillTableDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'DrillTable'.
	Type string `pulumi:"type"`
}

// DrillTableDatasetInput is an input type that accepts DrillTableDatasetArgs and DrillTableDatasetOutput values.
// You can construct a concrete instance of `DrillTableDatasetInput` via:
//
//          DrillTableDatasetArgs{...}
type DrillTableDatasetInput interface {
	pulumi.Input

	ToDrillTableDatasetOutput() DrillTableDatasetOutput
	ToDrillTableDatasetOutputWithContext(context.Context) DrillTableDatasetOutput
}

// Drill server dataset.
type DrillTableDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'DrillTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DrillTableDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DrillTableDataset)(nil)).Elem()
}

func (i DrillTableDatasetArgs) ToDrillTableDatasetOutput() DrillTableDatasetOutput {
	return i.ToDrillTableDatasetOutputWithContext(context.Background())
}

func (i DrillTableDatasetArgs) ToDrillTableDatasetOutputWithContext(ctx context.Context) DrillTableDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrillTableDatasetOutput)
}

// Drill server dataset.
type DrillTableDatasetOutput struct{ *pulumi.OutputState }

func (DrillTableDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DrillTableDataset)(nil)).Elem()
}

func (o DrillTableDatasetOutput) ToDrillTableDatasetOutput() DrillTableDatasetOutput {
	return o
}

func (o DrillTableDatasetOutput) ToDrillTableDatasetOutputWithContext(ctx context.Context) DrillTableDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o DrillTableDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v DrillTableDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o DrillTableDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrillTableDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o DrillTableDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v DrillTableDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o DrillTableDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v DrillTableDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o DrillTableDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v DrillTableDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'DrillTable'.
func (o DrillTableDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DrillTableDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Drill server dataset.
type DrillTableDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'DrillTable'.
	Type string `pulumi:"type"`
}

// DrillTableDatasetResponseInput is an input type that accepts DrillTableDatasetResponseArgs and DrillTableDatasetResponseOutput values.
// You can construct a concrete instance of `DrillTableDatasetResponseInput` via:
//
//          DrillTableDatasetResponseArgs{...}
type DrillTableDatasetResponseInput interface {
	pulumi.Input

	ToDrillTableDatasetResponseOutput() DrillTableDatasetResponseOutput
	ToDrillTableDatasetResponseOutputWithContext(context.Context) DrillTableDatasetResponseOutput
}

// Drill server dataset.
type DrillTableDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'DrillTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DrillTableDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DrillTableDatasetResponse)(nil)).Elem()
}

func (i DrillTableDatasetResponseArgs) ToDrillTableDatasetResponseOutput() DrillTableDatasetResponseOutput {
	return i.ToDrillTableDatasetResponseOutputWithContext(context.Background())
}

func (i DrillTableDatasetResponseArgs) ToDrillTableDatasetResponseOutputWithContext(ctx context.Context) DrillTableDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrillTableDatasetResponseOutput)
}

// Drill server dataset.
type DrillTableDatasetResponseOutput struct{ *pulumi.OutputState }

func (DrillTableDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DrillTableDatasetResponse)(nil)).Elem()
}

func (o DrillTableDatasetResponseOutput) ToDrillTableDatasetResponseOutput() DrillTableDatasetResponseOutput {
	return o
}

func (o DrillTableDatasetResponseOutput) ToDrillTableDatasetResponseOutputWithContext(ctx context.Context) DrillTableDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o DrillTableDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v DrillTableDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o DrillTableDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DrillTableDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o DrillTableDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v DrillTableDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o DrillTableDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v DrillTableDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o DrillTableDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v DrillTableDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'DrillTable'.
func (o DrillTableDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DrillTableDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The Dynamics entity dataset.
type DynamicsEntityDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// The logical name of the entity. Type: string (or Expression with resultType string).
	EntityName interface{} `pulumi:"entityName"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'DynamicsEntity'.
	Type string `pulumi:"type"`
}

// DynamicsEntityDatasetInput is an input type that accepts DynamicsEntityDatasetArgs and DynamicsEntityDatasetOutput values.
// You can construct a concrete instance of `DynamicsEntityDatasetInput` via:
//
//          DynamicsEntityDatasetArgs{...}
type DynamicsEntityDatasetInput interface {
	pulumi.Input

	ToDynamicsEntityDatasetOutput() DynamicsEntityDatasetOutput
	ToDynamicsEntityDatasetOutputWithContext(context.Context) DynamicsEntityDatasetOutput
}

// The Dynamics entity dataset.
type DynamicsEntityDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The logical name of the entity. Type: string (or Expression with resultType string).
	EntityName pulumi.Input `pulumi:"entityName"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'DynamicsEntity'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DynamicsEntityDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicsEntityDataset)(nil)).Elem()
}

func (i DynamicsEntityDatasetArgs) ToDynamicsEntityDatasetOutput() DynamicsEntityDatasetOutput {
	return i.ToDynamicsEntityDatasetOutputWithContext(context.Background())
}

func (i DynamicsEntityDatasetArgs) ToDynamicsEntityDatasetOutputWithContext(ctx context.Context) DynamicsEntityDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicsEntityDatasetOutput)
}

// The Dynamics entity dataset.
type DynamicsEntityDatasetOutput struct{ *pulumi.OutputState }

func (DynamicsEntityDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicsEntityDataset)(nil)).Elem()
}

func (o DynamicsEntityDatasetOutput) ToDynamicsEntityDatasetOutput() DynamicsEntityDatasetOutput {
	return o
}

func (o DynamicsEntityDatasetOutput) ToDynamicsEntityDatasetOutputWithContext(ctx context.Context) DynamicsEntityDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o DynamicsEntityDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v DynamicsEntityDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o DynamicsEntityDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicsEntityDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The logical name of the entity. Type: string (or Expression with resultType string).
func (o DynamicsEntityDatasetOutput) EntityName() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsEntityDataset) interface{} { return v.EntityName }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o DynamicsEntityDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v DynamicsEntityDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o DynamicsEntityDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v DynamicsEntityDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o DynamicsEntityDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsEntityDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'DynamicsEntity'.
func (o DynamicsEntityDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicsEntityDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The Dynamics entity dataset.
type DynamicsEntityDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// The logical name of the entity. Type: string (or Expression with resultType string).
	EntityName interface{} `pulumi:"entityName"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'DynamicsEntity'.
	Type string `pulumi:"type"`
}

// DynamicsEntityDatasetResponseInput is an input type that accepts DynamicsEntityDatasetResponseArgs and DynamicsEntityDatasetResponseOutput values.
// You can construct a concrete instance of `DynamicsEntityDatasetResponseInput` via:
//
//          DynamicsEntityDatasetResponseArgs{...}
type DynamicsEntityDatasetResponseInput interface {
	pulumi.Input

	ToDynamicsEntityDatasetResponseOutput() DynamicsEntityDatasetResponseOutput
	ToDynamicsEntityDatasetResponseOutputWithContext(context.Context) DynamicsEntityDatasetResponseOutput
}

// The Dynamics entity dataset.
type DynamicsEntityDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The logical name of the entity. Type: string (or Expression with resultType string).
	EntityName pulumi.Input `pulumi:"entityName"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'DynamicsEntity'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DynamicsEntityDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicsEntityDatasetResponse)(nil)).Elem()
}

func (i DynamicsEntityDatasetResponseArgs) ToDynamicsEntityDatasetResponseOutput() DynamicsEntityDatasetResponseOutput {
	return i.ToDynamicsEntityDatasetResponseOutputWithContext(context.Background())
}

func (i DynamicsEntityDatasetResponseArgs) ToDynamicsEntityDatasetResponseOutputWithContext(ctx context.Context) DynamicsEntityDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicsEntityDatasetResponseOutput)
}

// The Dynamics entity dataset.
type DynamicsEntityDatasetResponseOutput struct{ *pulumi.OutputState }

func (DynamicsEntityDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicsEntityDatasetResponse)(nil)).Elem()
}

func (o DynamicsEntityDatasetResponseOutput) ToDynamicsEntityDatasetResponseOutput() DynamicsEntityDatasetResponseOutput {
	return o
}

func (o DynamicsEntityDatasetResponseOutput) ToDynamicsEntityDatasetResponseOutputWithContext(ctx context.Context) DynamicsEntityDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o DynamicsEntityDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v DynamicsEntityDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o DynamicsEntityDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicsEntityDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The logical name of the entity. Type: string (or Expression with resultType string).
func (o DynamicsEntityDatasetResponseOutput) EntityName() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsEntityDatasetResponse) interface{} { return v.EntityName }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o DynamicsEntityDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v DynamicsEntityDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o DynamicsEntityDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v DynamicsEntityDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o DynamicsEntityDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsEntityDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'DynamicsEntity'.
func (o DynamicsEntityDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicsEntityDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Dynamics linked service.
type DynamicsLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication type to connect to Dynamics server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario. Type: string (or Expression with resultType string).
	AuthenticationType string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// The deployment type of the Dynamics instance. 'Online' for Dynamics Online and 'OnPremisesWithIfd' for Dynamics on-premises with Ifd. Type: string (or Expression with resultType string).
	DeploymentType string `pulumi:"deploymentType"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The host name of the on-premises Dynamics server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).
	HostName interface{} `pulumi:"hostName"`
	// The organization name of the Dynamics instance. The property is required for on-prem and required for online when there are more than one Dynamics instances associated with the user. Type: string (or Expression with resultType string).
	OrganizationName interface{} `pulumi:"organizationName"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Password to access the Dynamics instance.
	Password interface{} `pulumi:"password"`
	// The port of on-premises Dynamics server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.
	Port interface{} `pulumi:"port"`
	// The URL to the Microsoft Dynamics server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).
	ServiceUri interface{} `pulumi:"serviceUri"`
	// Type of linked service.
	// Expected value is 'Dynamics'.
	Type string `pulumi:"type"`
	// User name to access the Dynamics instance. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// DynamicsLinkedServiceInput is an input type that accepts DynamicsLinkedServiceArgs and DynamicsLinkedServiceOutput values.
// You can construct a concrete instance of `DynamicsLinkedServiceInput` via:
//
//          DynamicsLinkedServiceArgs{...}
type DynamicsLinkedServiceInput interface {
	pulumi.Input

	ToDynamicsLinkedServiceOutput() DynamicsLinkedServiceOutput
	ToDynamicsLinkedServiceOutputWithContext(context.Context) DynamicsLinkedServiceOutput
}

// Dynamics linked service.
type DynamicsLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication type to connect to Dynamics server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario. Type: string (or Expression with resultType string).
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// The deployment type of the Dynamics instance. 'Online' for Dynamics Online and 'OnPremisesWithIfd' for Dynamics on-premises with Ifd. Type: string (or Expression with resultType string).
	DeploymentType pulumi.StringInput `pulumi:"deploymentType"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The host name of the on-premises Dynamics server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).
	HostName pulumi.Input `pulumi:"hostName"`
	// The organization name of the Dynamics instance. The property is required for on-prem and required for online when there are more than one Dynamics instances associated with the user. Type: string (or Expression with resultType string).
	OrganizationName pulumi.Input `pulumi:"organizationName"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Password to access the Dynamics instance.
	Password pulumi.Input `pulumi:"password"`
	// The port of on-premises Dynamics server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.
	Port pulumi.Input `pulumi:"port"`
	// The URL to the Microsoft Dynamics server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).
	ServiceUri pulumi.Input `pulumi:"serviceUri"`
	// Type of linked service.
	// Expected value is 'Dynamics'.
	Type pulumi.StringInput `pulumi:"type"`
	// User name to access the Dynamics instance. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (DynamicsLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicsLinkedService)(nil)).Elem()
}

func (i DynamicsLinkedServiceArgs) ToDynamicsLinkedServiceOutput() DynamicsLinkedServiceOutput {
	return i.ToDynamicsLinkedServiceOutputWithContext(context.Background())
}

func (i DynamicsLinkedServiceArgs) ToDynamicsLinkedServiceOutputWithContext(ctx context.Context) DynamicsLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicsLinkedServiceOutput)
}

// Dynamics linked service.
type DynamicsLinkedServiceOutput struct{ *pulumi.OutputState }

func (DynamicsLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicsLinkedService)(nil)).Elem()
}

func (o DynamicsLinkedServiceOutput) ToDynamicsLinkedServiceOutput() DynamicsLinkedServiceOutput {
	return o
}

func (o DynamicsLinkedServiceOutput) ToDynamicsLinkedServiceOutputWithContext(ctx context.Context) DynamicsLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o DynamicsLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v DynamicsLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication type to connect to Dynamics server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario. Type: string (or Expression with resultType string).
func (o DynamicsLinkedServiceOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicsLinkedService) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The integration runtime reference.
func (o DynamicsLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v DynamicsLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// The deployment type of the Dynamics instance. 'Online' for Dynamics Online and 'OnPremisesWithIfd' for Dynamics on-premises with Ifd. Type: string (or Expression with resultType string).
func (o DynamicsLinkedServiceOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicsLinkedService) string { return v.DeploymentType }).(pulumi.StringOutput)
}

// Linked service description.
func (o DynamicsLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicsLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o DynamicsLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The host name of the on-premises Dynamics server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).
func (o DynamicsLinkedServiceOutput) HostName() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsLinkedService) interface{} { return v.HostName }).(pulumi.AnyOutput)
}

// The organization name of the Dynamics instance. The property is required for on-prem and required for online when there are more than one Dynamics instances associated with the user. Type: string (or Expression with resultType string).
func (o DynamicsLinkedServiceOutput) OrganizationName() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsLinkedService) interface{} { return v.OrganizationName }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o DynamicsLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v DynamicsLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Password to access the Dynamics instance.
func (o DynamicsLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The port of on-premises Dynamics server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.
func (o DynamicsLinkedServiceOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsLinkedService) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The URL to the Microsoft Dynamics server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).
func (o DynamicsLinkedServiceOutput) ServiceUri() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsLinkedService) interface{} { return v.ServiceUri }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Dynamics'.
func (o DynamicsLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicsLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// User name to access the Dynamics instance. Type: string (or Expression with resultType string).
func (o DynamicsLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Dynamics linked service.
type DynamicsLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication type to connect to Dynamics server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario. Type: string (or Expression with resultType string).
	AuthenticationType string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// The deployment type of the Dynamics instance. 'Online' for Dynamics Online and 'OnPremisesWithIfd' for Dynamics on-premises with Ifd. Type: string (or Expression with resultType string).
	DeploymentType string `pulumi:"deploymentType"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The host name of the on-premises Dynamics server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).
	HostName interface{} `pulumi:"hostName"`
	// The organization name of the Dynamics instance. The property is required for on-prem and required for online when there are more than one Dynamics instances associated with the user. Type: string (or Expression with resultType string).
	OrganizationName interface{} `pulumi:"organizationName"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Password to access the Dynamics instance.
	Password interface{} `pulumi:"password"`
	// The port of on-premises Dynamics server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.
	Port interface{} `pulumi:"port"`
	// The URL to the Microsoft Dynamics server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).
	ServiceUri interface{} `pulumi:"serviceUri"`
	// Type of linked service.
	// Expected value is 'Dynamics'.
	Type string `pulumi:"type"`
	// User name to access the Dynamics instance. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// DynamicsLinkedServiceResponseInput is an input type that accepts DynamicsLinkedServiceResponseArgs and DynamicsLinkedServiceResponseOutput values.
// You can construct a concrete instance of `DynamicsLinkedServiceResponseInput` via:
//
//          DynamicsLinkedServiceResponseArgs{...}
type DynamicsLinkedServiceResponseInput interface {
	pulumi.Input

	ToDynamicsLinkedServiceResponseOutput() DynamicsLinkedServiceResponseOutput
	ToDynamicsLinkedServiceResponseOutputWithContext(context.Context) DynamicsLinkedServiceResponseOutput
}

// Dynamics linked service.
type DynamicsLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication type to connect to Dynamics server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario. Type: string (or Expression with resultType string).
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// The deployment type of the Dynamics instance. 'Online' for Dynamics Online and 'OnPremisesWithIfd' for Dynamics on-premises with Ifd. Type: string (or Expression with resultType string).
	DeploymentType pulumi.StringInput `pulumi:"deploymentType"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The host name of the on-premises Dynamics server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).
	HostName pulumi.Input `pulumi:"hostName"`
	// The organization name of the Dynamics instance. The property is required for on-prem and required for online when there are more than one Dynamics instances associated with the user. Type: string (or Expression with resultType string).
	OrganizationName pulumi.Input `pulumi:"organizationName"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Password to access the Dynamics instance.
	Password pulumi.Input `pulumi:"password"`
	// The port of on-premises Dynamics server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.
	Port pulumi.Input `pulumi:"port"`
	// The URL to the Microsoft Dynamics server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).
	ServiceUri pulumi.Input `pulumi:"serviceUri"`
	// Type of linked service.
	// Expected value is 'Dynamics'.
	Type pulumi.StringInput `pulumi:"type"`
	// User name to access the Dynamics instance. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (DynamicsLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicsLinkedServiceResponse)(nil)).Elem()
}

func (i DynamicsLinkedServiceResponseArgs) ToDynamicsLinkedServiceResponseOutput() DynamicsLinkedServiceResponseOutput {
	return i.ToDynamicsLinkedServiceResponseOutputWithContext(context.Background())
}

func (i DynamicsLinkedServiceResponseArgs) ToDynamicsLinkedServiceResponseOutputWithContext(ctx context.Context) DynamicsLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicsLinkedServiceResponseOutput)
}

// Dynamics linked service.
type DynamicsLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (DynamicsLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicsLinkedServiceResponse)(nil)).Elem()
}

func (o DynamicsLinkedServiceResponseOutput) ToDynamicsLinkedServiceResponseOutput() DynamicsLinkedServiceResponseOutput {
	return o
}

func (o DynamicsLinkedServiceResponseOutput) ToDynamicsLinkedServiceResponseOutputWithContext(ctx context.Context) DynamicsLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o DynamicsLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v DynamicsLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication type to connect to Dynamics server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario. Type: string (or Expression with resultType string).
func (o DynamicsLinkedServiceResponseOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicsLinkedServiceResponse) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The integration runtime reference.
func (o DynamicsLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v DynamicsLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// The deployment type of the Dynamics instance. 'Online' for Dynamics Online and 'OnPremisesWithIfd' for Dynamics on-premises with Ifd. Type: string (or Expression with resultType string).
func (o DynamicsLinkedServiceResponseOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicsLinkedServiceResponse) string { return v.DeploymentType }).(pulumi.StringOutput)
}

// Linked service description.
func (o DynamicsLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicsLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o DynamicsLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The host name of the on-premises Dynamics server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).
func (o DynamicsLinkedServiceResponseOutput) HostName() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsLinkedServiceResponse) interface{} { return v.HostName }).(pulumi.AnyOutput)
}

// The organization name of the Dynamics instance. The property is required for on-prem and required for online when there are more than one Dynamics instances associated with the user. Type: string (or Expression with resultType string).
func (o DynamicsLinkedServiceResponseOutput) OrganizationName() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsLinkedServiceResponse) interface{} { return v.OrganizationName }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o DynamicsLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v DynamicsLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Password to access the Dynamics instance.
func (o DynamicsLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The port of on-premises Dynamics server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.
func (o DynamicsLinkedServiceResponseOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsLinkedServiceResponse) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The URL to the Microsoft Dynamics server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).
func (o DynamicsLinkedServiceResponseOutput) ServiceUri() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsLinkedServiceResponse) interface{} { return v.ServiceUri }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Dynamics'.
func (o DynamicsLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicsLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// User name to access the Dynamics instance. Type: string (or Expression with resultType string).
func (o DynamicsLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// A copy activity Dynamics sink.
type DynamicsSink struct {
	// The flag indicating whether ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean).
	IgnoreNullValues interface{} `pulumi:"ignoreNullValues"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'DynamicsSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
	// The write behavior for the operation.
	WriteBehavior string `pulumi:"writeBehavior"`
}

// DynamicsSinkInput is an input type that accepts DynamicsSinkArgs and DynamicsSinkOutput values.
// You can construct a concrete instance of `DynamicsSinkInput` via:
//
//          DynamicsSinkArgs{...}
type DynamicsSinkInput interface {
	pulumi.Input

	ToDynamicsSinkOutput() DynamicsSinkOutput
	ToDynamicsSinkOutputWithContext(context.Context) DynamicsSinkOutput
}

// A copy activity Dynamics sink.
type DynamicsSinkArgs struct {
	// The flag indicating whether ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean).
	IgnoreNullValues pulumi.Input `pulumi:"ignoreNullValues"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'DynamicsSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
	// The write behavior for the operation.
	WriteBehavior pulumi.StringInput `pulumi:"writeBehavior"`
}

func (DynamicsSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicsSink)(nil)).Elem()
}

func (i DynamicsSinkArgs) ToDynamicsSinkOutput() DynamicsSinkOutput {
	return i.ToDynamicsSinkOutputWithContext(context.Background())
}

func (i DynamicsSinkArgs) ToDynamicsSinkOutputWithContext(ctx context.Context) DynamicsSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicsSinkOutput)
}

// A copy activity Dynamics sink.
type DynamicsSinkOutput struct{ *pulumi.OutputState }

func (DynamicsSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicsSink)(nil)).Elem()
}

func (o DynamicsSinkOutput) ToDynamicsSinkOutput() DynamicsSinkOutput {
	return o
}

func (o DynamicsSinkOutput) ToDynamicsSinkOutputWithContext(ctx context.Context) DynamicsSinkOutput {
	return o
}

// The flag indicating whether ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean).
func (o DynamicsSinkOutput) IgnoreNullValues() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsSink) interface{} { return v.IgnoreNullValues }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o DynamicsSinkOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsSink) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o DynamicsSinkOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsSink) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'DynamicsSink'.
func (o DynamicsSinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicsSink) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o DynamicsSinkOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsSink) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o DynamicsSinkOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsSink) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// The write behavior for the operation.
func (o DynamicsSinkOutput) WriteBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicsSink) string { return v.WriteBehavior }).(pulumi.StringOutput)
}

// A copy activity Dynamics sink.
type DynamicsSinkResponse struct {
	// The flag indicating whether ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean).
	IgnoreNullValues interface{} `pulumi:"ignoreNullValues"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'DynamicsSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
	// The write behavior for the operation.
	WriteBehavior string `pulumi:"writeBehavior"`
}

// DynamicsSinkResponseInput is an input type that accepts DynamicsSinkResponseArgs and DynamicsSinkResponseOutput values.
// You can construct a concrete instance of `DynamicsSinkResponseInput` via:
//
//          DynamicsSinkResponseArgs{...}
type DynamicsSinkResponseInput interface {
	pulumi.Input

	ToDynamicsSinkResponseOutput() DynamicsSinkResponseOutput
	ToDynamicsSinkResponseOutputWithContext(context.Context) DynamicsSinkResponseOutput
}

// A copy activity Dynamics sink.
type DynamicsSinkResponseArgs struct {
	// The flag indicating whether ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean).
	IgnoreNullValues pulumi.Input `pulumi:"ignoreNullValues"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'DynamicsSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
	// The write behavior for the operation.
	WriteBehavior pulumi.StringInput `pulumi:"writeBehavior"`
}

func (DynamicsSinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicsSinkResponse)(nil)).Elem()
}

func (i DynamicsSinkResponseArgs) ToDynamicsSinkResponseOutput() DynamicsSinkResponseOutput {
	return i.ToDynamicsSinkResponseOutputWithContext(context.Background())
}

func (i DynamicsSinkResponseArgs) ToDynamicsSinkResponseOutputWithContext(ctx context.Context) DynamicsSinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicsSinkResponseOutput)
}

// A copy activity Dynamics sink.
type DynamicsSinkResponseOutput struct{ *pulumi.OutputState }

func (DynamicsSinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicsSinkResponse)(nil)).Elem()
}

func (o DynamicsSinkResponseOutput) ToDynamicsSinkResponseOutput() DynamicsSinkResponseOutput {
	return o
}

func (o DynamicsSinkResponseOutput) ToDynamicsSinkResponseOutputWithContext(ctx context.Context) DynamicsSinkResponseOutput {
	return o
}

// The flag indicating whether ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean).
func (o DynamicsSinkResponseOutput) IgnoreNullValues() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsSinkResponse) interface{} { return v.IgnoreNullValues }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o DynamicsSinkResponseOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsSinkResponse) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o DynamicsSinkResponseOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsSinkResponse) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'DynamicsSink'.
func (o DynamicsSinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicsSinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o DynamicsSinkResponseOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsSinkResponse) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o DynamicsSinkResponseOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsSinkResponse) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// The write behavior for the operation.
func (o DynamicsSinkResponseOutput) WriteBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicsSinkResponse) string { return v.WriteBehavior }).(pulumi.StringOutput)
}

// A copy activity Dynamics source.
type DynamicsSource struct {
	// FetchXML is a proprietary query language that is used in Microsoft Dynamics (online & on-premises). Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'DynamicsSource'.
	Type string `pulumi:"type"`
}

// DynamicsSourceInput is an input type that accepts DynamicsSourceArgs and DynamicsSourceOutput values.
// You can construct a concrete instance of `DynamicsSourceInput` via:
//
//          DynamicsSourceArgs{...}
type DynamicsSourceInput interface {
	pulumi.Input

	ToDynamicsSourceOutput() DynamicsSourceOutput
	ToDynamicsSourceOutputWithContext(context.Context) DynamicsSourceOutput
}

// A copy activity Dynamics source.
type DynamicsSourceArgs struct {
	// FetchXML is a proprietary query language that is used in Microsoft Dynamics (online & on-premises). Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'DynamicsSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DynamicsSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicsSource)(nil)).Elem()
}

func (i DynamicsSourceArgs) ToDynamicsSourceOutput() DynamicsSourceOutput {
	return i.ToDynamicsSourceOutputWithContext(context.Background())
}

func (i DynamicsSourceArgs) ToDynamicsSourceOutputWithContext(ctx context.Context) DynamicsSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicsSourceOutput)
}

// A copy activity Dynamics source.
type DynamicsSourceOutput struct{ *pulumi.OutputState }

func (DynamicsSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicsSource)(nil)).Elem()
}

func (o DynamicsSourceOutput) ToDynamicsSourceOutput() DynamicsSourceOutput {
	return o
}

func (o DynamicsSourceOutput) ToDynamicsSourceOutputWithContext(ctx context.Context) DynamicsSourceOutput {
	return o
}

// FetchXML is a proprietary query language that is used in Microsoft Dynamics (online & on-premises). Type: string (or Expression with resultType string).
func (o DynamicsSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o DynamicsSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o DynamicsSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'DynamicsSource'.
func (o DynamicsSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicsSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Dynamics source.
type DynamicsSourceResponse struct {
	// FetchXML is a proprietary query language that is used in Microsoft Dynamics (online & on-premises). Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'DynamicsSource'.
	Type string `pulumi:"type"`
}

// DynamicsSourceResponseInput is an input type that accepts DynamicsSourceResponseArgs and DynamicsSourceResponseOutput values.
// You can construct a concrete instance of `DynamicsSourceResponseInput` via:
//
//          DynamicsSourceResponseArgs{...}
type DynamicsSourceResponseInput interface {
	pulumi.Input

	ToDynamicsSourceResponseOutput() DynamicsSourceResponseOutput
	ToDynamicsSourceResponseOutputWithContext(context.Context) DynamicsSourceResponseOutput
}

// A copy activity Dynamics source.
type DynamicsSourceResponseArgs struct {
	// FetchXML is a proprietary query language that is used in Microsoft Dynamics (online & on-premises). Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'DynamicsSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DynamicsSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicsSourceResponse)(nil)).Elem()
}

func (i DynamicsSourceResponseArgs) ToDynamicsSourceResponseOutput() DynamicsSourceResponseOutput {
	return i.ToDynamicsSourceResponseOutputWithContext(context.Background())
}

func (i DynamicsSourceResponseArgs) ToDynamicsSourceResponseOutputWithContext(ctx context.Context) DynamicsSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicsSourceResponseOutput)
}

// A copy activity Dynamics source.
type DynamicsSourceResponseOutput struct{ *pulumi.OutputState }

func (DynamicsSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicsSourceResponse)(nil)).Elem()
}

func (o DynamicsSourceResponseOutput) ToDynamicsSourceResponseOutput() DynamicsSourceResponseOutput {
	return o
}

func (o DynamicsSourceResponseOutput) ToDynamicsSourceResponseOutputWithContext(ctx context.Context) DynamicsSourceResponseOutput {
	return o
}

// FetchXML is a proprietary query language that is used in Microsoft Dynamics (online & on-premises). Type: string (or Expression with resultType string).
func (o DynamicsSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o DynamicsSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o DynamicsSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v DynamicsSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'DynamicsSource'.
func (o DynamicsSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicsSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Eloqua server linked service.
type EloquaLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the Eloqua server. (i.e. eloqua.example.com)
	Endpoint interface{} `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The password corresponding to the user name.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'Eloqua'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
	// The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)
	Username interface{} `pulumi:"username"`
}

// EloquaLinkedServiceInput is an input type that accepts EloquaLinkedServiceArgs and EloquaLinkedServiceOutput values.
// You can construct a concrete instance of `EloquaLinkedServiceInput` via:
//
//          EloquaLinkedServiceArgs{...}
type EloquaLinkedServiceInput interface {
	pulumi.Input

	ToEloquaLinkedServiceOutput() EloquaLinkedServiceOutput
	ToEloquaLinkedServiceOutputWithContext(context.Context) EloquaLinkedServiceOutput
}

// Eloqua server linked service.
type EloquaLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the Eloqua server. (i.e. eloqua.example.com)
	Endpoint pulumi.Input `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The password corresponding to the user name.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'Eloqua'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
	// The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)
	Username pulumi.Input `pulumi:"username"`
}

func (EloquaLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EloquaLinkedService)(nil)).Elem()
}

func (i EloquaLinkedServiceArgs) ToEloquaLinkedServiceOutput() EloquaLinkedServiceOutput {
	return i.ToEloquaLinkedServiceOutputWithContext(context.Background())
}

func (i EloquaLinkedServiceArgs) ToEloquaLinkedServiceOutputWithContext(ctx context.Context) EloquaLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EloquaLinkedServiceOutput)
}

// Eloqua server linked service.
type EloquaLinkedServiceOutput struct{ *pulumi.OutputState }

func (EloquaLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EloquaLinkedService)(nil)).Elem()
}

func (o EloquaLinkedServiceOutput) ToEloquaLinkedServiceOutput() EloquaLinkedServiceOutput {
	return o
}

func (o EloquaLinkedServiceOutput) ToEloquaLinkedServiceOutputWithContext(ctx context.Context) EloquaLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o EloquaLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v EloquaLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o EloquaLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v EloquaLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o EloquaLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EloquaLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o EloquaLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the Eloqua server. (i.e. eloqua.example.com)
func (o EloquaLinkedServiceOutput) Endpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaLinkedService) interface{} { return v.Endpoint }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o EloquaLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v EloquaLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The password corresponding to the user name.
func (o EloquaLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Eloqua'.
func (o EloquaLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EloquaLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o EloquaLinkedServiceOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaLinkedService) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o EloquaLinkedServiceOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaLinkedService) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o EloquaLinkedServiceOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaLinkedService) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)
func (o EloquaLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Eloqua server linked service.
type EloquaLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the Eloqua server. (i.e. eloqua.example.com)
	Endpoint interface{} `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The password corresponding to the user name.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'Eloqua'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
	// The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)
	Username interface{} `pulumi:"username"`
}

// EloquaLinkedServiceResponseInput is an input type that accepts EloquaLinkedServiceResponseArgs and EloquaLinkedServiceResponseOutput values.
// You can construct a concrete instance of `EloquaLinkedServiceResponseInput` via:
//
//          EloquaLinkedServiceResponseArgs{...}
type EloquaLinkedServiceResponseInput interface {
	pulumi.Input

	ToEloquaLinkedServiceResponseOutput() EloquaLinkedServiceResponseOutput
	ToEloquaLinkedServiceResponseOutputWithContext(context.Context) EloquaLinkedServiceResponseOutput
}

// Eloqua server linked service.
type EloquaLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the Eloqua server. (i.e. eloqua.example.com)
	Endpoint pulumi.Input `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The password corresponding to the user name.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'Eloqua'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
	// The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)
	Username pulumi.Input `pulumi:"username"`
}

func (EloquaLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EloquaLinkedServiceResponse)(nil)).Elem()
}

func (i EloquaLinkedServiceResponseArgs) ToEloquaLinkedServiceResponseOutput() EloquaLinkedServiceResponseOutput {
	return i.ToEloquaLinkedServiceResponseOutputWithContext(context.Background())
}

func (i EloquaLinkedServiceResponseArgs) ToEloquaLinkedServiceResponseOutputWithContext(ctx context.Context) EloquaLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EloquaLinkedServiceResponseOutput)
}

// Eloqua server linked service.
type EloquaLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (EloquaLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EloquaLinkedServiceResponse)(nil)).Elem()
}

func (o EloquaLinkedServiceResponseOutput) ToEloquaLinkedServiceResponseOutput() EloquaLinkedServiceResponseOutput {
	return o
}

func (o EloquaLinkedServiceResponseOutput) ToEloquaLinkedServiceResponseOutputWithContext(ctx context.Context) EloquaLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o EloquaLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v EloquaLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o EloquaLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v EloquaLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o EloquaLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EloquaLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o EloquaLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the Eloqua server. (i.e. eloqua.example.com)
func (o EloquaLinkedServiceResponseOutput) Endpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaLinkedServiceResponse) interface{} { return v.Endpoint }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o EloquaLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v EloquaLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The password corresponding to the user name.
func (o EloquaLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Eloqua'.
func (o EloquaLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EloquaLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o EloquaLinkedServiceResponseOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaLinkedServiceResponse) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o EloquaLinkedServiceResponseOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaLinkedServiceResponse) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o EloquaLinkedServiceResponseOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaLinkedServiceResponse) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)
func (o EloquaLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Eloqua server dataset.
type EloquaObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'EloquaObject'.
	Type string `pulumi:"type"`
}

// EloquaObjectDatasetInput is an input type that accepts EloquaObjectDatasetArgs and EloquaObjectDatasetOutput values.
// You can construct a concrete instance of `EloquaObjectDatasetInput` via:
//
//          EloquaObjectDatasetArgs{...}
type EloquaObjectDatasetInput interface {
	pulumi.Input

	ToEloquaObjectDatasetOutput() EloquaObjectDatasetOutput
	ToEloquaObjectDatasetOutputWithContext(context.Context) EloquaObjectDatasetOutput
}

// Eloqua server dataset.
type EloquaObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'EloquaObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EloquaObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EloquaObjectDataset)(nil)).Elem()
}

func (i EloquaObjectDatasetArgs) ToEloquaObjectDatasetOutput() EloquaObjectDatasetOutput {
	return i.ToEloquaObjectDatasetOutputWithContext(context.Background())
}

func (i EloquaObjectDatasetArgs) ToEloquaObjectDatasetOutputWithContext(ctx context.Context) EloquaObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EloquaObjectDatasetOutput)
}

// Eloqua server dataset.
type EloquaObjectDatasetOutput struct{ *pulumi.OutputState }

func (EloquaObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EloquaObjectDataset)(nil)).Elem()
}

func (o EloquaObjectDatasetOutput) ToEloquaObjectDatasetOutput() EloquaObjectDatasetOutput {
	return o
}

func (o EloquaObjectDatasetOutput) ToEloquaObjectDatasetOutputWithContext(ctx context.Context) EloquaObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o EloquaObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v EloquaObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o EloquaObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EloquaObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o EloquaObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v EloquaObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o EloquaObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v EloquaObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o EloquaObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'EloquaObject'.
func (o EloquaObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EloquaObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Eloqua server dataset.
type EloquaObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'EloquaObject'.
	Type string `pulumi:"type"`
}

// EloquaObjectDatasetResponseInput is an input type that accepts EloquaObjectDatasetResponseArgs and EloquaObjectDatasetResponseOutput values.
// You can construct a concrete instance of `EloquaObjectDatasetResponseInput` via:
//
//          EloquaObjectDatasetResponseArgs{...}
type EloquaObjectDatasetResponseInput interface {
	pulumi.Input

	ToEloquaObjectDatasetResponseOutput() EloquaObjectDatasetResponseOutput
	ToEloquaObjectDatasetResponseOutputWithContext(context.Context) EloquaObjectDatasetResponseOutput
}

// Eloqua server dataset.
type EloquaObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'EloquaObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EloquaObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EloquaObjectDatasetResponse)(nil)).Elem()
}

func (i EloquaObjectDatasetResponseArgs) ToEloquaObjectDatasetResponseOutput() EloquaObjectDatasetResponseOutput {
	return i.ToEloquaObjectDatasetResponseOutputWithContext(context.Background())
}

func (i EloquaObjectDatasetResponseArgs) ToEloquaObjectDatasetResponseOutputWithContext(ctx context.Context) EloquaObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EloquaObjectDatasetResponseOutput)
}

// Eloqua server dataset.
type EloquaObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (EloquaObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EloquaObjectDatasetResponse)(nil)).Elem()
}

func (o EloquaObjectDatasetResponseOutput) ToEloquaObjectDatasetResponseOutput() EloquaObjectDatasetResponseOutput {
	return o
}

func (o EloquaObjectDatasetResponseOutput) ToEloquaObjectDatasetResponseOutputWithContext(ctx context.Context) EloquaObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o EloquaObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v EloquaObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o EloquaObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EloquaObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o EloquaObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v EloquaObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o EloquaObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v EloquaObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o EloquaObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'EloquaObject'.
func (o EloquaObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EloquaObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Eloqua server source.
type EloquaSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'EloquaSource'.
	Type string `pulumi:"type"`
}

// EloquaSourceInput is an input type that accepts EloquaSourceArgs and EloquaSourceOutput values.
// You can construct a concrete instance of `EloquaSourceInput` via:
//
//          EloquaSourceArgs{...}
type EloquaSourceInput interface {
	pulumi.Input

	ToEloquaSourceOutput() EloquaSourceOutput
	ToEloquaSourceOutputWithContext(context.Context) EloquaSourceOutput
}

// A copy activity Eloqua server source.
type EloquaSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'EloquaSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EloquaSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EloquaSource)(nil)).Elem()
}

func (i EloquaSourceArgs) ToEloquaSourceOutput() EloquaSourceOutput {
	return i.ToEloquaSourceOutputWithContext(context.Background())
}

func (i EloquaSourceArgs) ToEloquaSourceOutputWithContext(ctx context.Context) EloquaSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EloquaSourceOutput)
}

// A copy activity Eloqua server source.
type EloquaSourceOutput struct{ *pulumi.OutputState }

func (EloquaSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EloquaSource)(nil)).Elem()
}

func (o EloquaSourceOutput) ToEloquaSourceOutput() EloquaSourceOutput {
	return o
}

func (o EloquaSourceOutput) ToEloquaSourceOutputWithContext(ctx context.Context) EloquaSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o EloquaSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o EloquaSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o EloquaSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'EloquaSource'.
func (o EloquaSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EloquaSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Eloqua server source.
type EloquaSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'EloquaSource'.
	Type string `pulumi:"type"`
}

// EloquaSourceResponseInput is an input type that accepts EloquaSourceResponseArgs and EloquaSourceResponseOutput values.
// You can construct a concrete instance of `EloquaSourceResponseInput` via:
//
//          EloquaSourceResponseArgs{...}
type EloquaSourceResponseInput interface {
	pulumi.Input

	ToEloquaSourceResponseOutput() EloquaSourceResponseOutput
	ToEloquaSourceResponseOutputWithContext(context.Context) EloquaSourceResponseOutput
}

// A copy activity Eloqua server source.
type EloquaSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'EloquaSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EloquaSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EloquaSourceResponse)(nil)).Elem()
}

func (i EloquaSourceResponseArgs) ToEloquaSourceResponseOutput() EloquaSourceResponseOutput {
	return i.ToEloquaSourceResponseOutputWithContext(context.Background())
}

func (i EloquaSourceResponseArgs) ToEloquaSourceResponseOutputWithContext(ctx context.Context) EloquaSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EloquaSourceResponseOutput)
}

// A copy activity Eloqua server source.
type EloquaSourceResponseOutput struct{ *pulumi.OutputState }

func (EloquaSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EloquaSourceResponse)(nil)).Elem()
}

func (o EloquaSourceResponseOutput) ToEloquaSourceResponseOutput() EloquaSourceResponseOutput {
	return o
}

func (o EloquaSourceResponseOutput) ToEloquaSourceResponseOutputWithContext(ctx context.Context) EloquaSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o EloquaSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o EloquaSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o EloquaSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v EloquaSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'EloquaSource'.
func (o EloquaSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EloquaSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The entity reference.
type EntityReference struct {
	// The name of this referenced entity.
	ReferenceName *string `pulumi:"referenceName"`
	// The type of this referenced entity.
	Type *string `pulumi:"type"`
}

// EntityReferenceInput is an input type that accepts EntityReferenceArgs and EntityReferenceOutput values.
// You can construct a concrete instance of `EntityReferenceInput` via:
//
//          EntityReferenceArgs{...}
type EntityReferenceInput interface {
	pulumi.Input

	ToEntityReferenceOutput() EntityReferenceOutput
	ToEntityReferenceOutputWithContext(context.Context) EntityReferenceOutput
}

// The entity reference.
type EntityReferenceArgs struct {
	// The name of this referenced entity.
	ReferenceName pulumi.StringPtrInput `pulumi:"referenceName"`
	// The type of this referenced entity.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (EntityReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityReference)(nil)).Elem()
}

func (i EntityReferenceArgs) ToEntityReferenceOutput() EntityReferenceOutput {
	return i.ToEntityReferenceOutputWithContext(context.Background())
}

func (i EntityReferenceArgs) ToEntityReferenceOutputWithContext(ctx context.Context) EntityReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityReferenceOutput)
}

func (i EntityReferenceArgs) ToEntityReferencePtrOutput() EntityReferencePtrOutput {
	return i.ToEntityReferencePtrOutputWithContext(context.Background())
}

func (i EntityReferenceArgs) ToEntityReferencePtrOutputWithContext(ctx context.Context) EntityReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityReferenceOutput).ToEntityReferencePtrOutputWithContext(ctx)
}

// EntityReferencePtrInput is an input type that accepts EntityReferenceArgs, EntityReferencePtr and EntityReferencePtrOutput values.
// You can construct a concrete instance of `EntityReferencePtrInput` via:
//
//          EntityReferenceArgs{...}
//
//  or:
//
//          nil
type EntityReferencePtrInput interface {
	pulumi.Input

	ToEntityReferencePtrOutput() EntityReferencePtrOutput
	ToEntityReferencePtrOutputWithContext(context.Context) EntityReferencePtrOutput
}

type entityReferencePtrType EntityReferenceArgs

func EntityReferencePtr(v *EntityReferenceArgs) EntityReferencePtrInput {
	return (*entityReferencePtrType)(v)
}

func (*entityReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityReference)(nil)).Elem()
}

func (i *entityReferencePtrType) ToEntityReferencePtrOutput() EntityReferencePtrOutput {
	return i.ToEntityReferencePtrOutputWithContext(context.Background())
}

func (i *entityReferencePtrType) ToEntityReferencePtrOutputWithContext(ctx context.Context) EntityReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityReferencePtrOutput)
}

// The entity reference.
type EntityReferenceOutput struct{ *pulumi.OutputState }

func (EntityReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityReference)(nil)).Elem()
}

func (o EntityReferenceOutput) ToEntityReferenceOutput() EntityReferenceOutput {
	return o
}

func (o EntityReferenceOutput) ToEntityReferenceOutputWithContext(ctx context.Context) EntityReferenceOutput {
	return o
}

func (o EntityReferenceOutput) ToEntityReferencePtrOutput() EntityReferencePtrOutput {
	return o.ToEntityReferencePtrOutputWithContext(context.Background())
}

func (o EntityReferenceOutput) ToEntityReferencePtrOutputWithContext(ctx context.Context) EntityReferencePtrOutput {
	return o.ApplyT(func(v EntityReference) *EntityReference {
		return &v
	}).(EntityReferencePtrOutput)
}

// The name of this referenced entity.
func (o EntityReferenceOutput) ReferenceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityReference) *string { return v.ReferenceName }).(pulumi.StringPtrOutput)
}

// The type of this referenced entity.
func (o EntityReferenceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityReference) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type EntityReferencePtrOutput struct{ *pulumi.OutputState }

func (EntityReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityReference)(nil)).Elem()
}

func (o EntityReferencePtrOutput) ToEntityReferencePtrOutput() EntityReferencePtrOutput {
	return o
}

func (o EntityReferencePtrOutput) ToEntityReferencePtrOutputWithContext(ctx context.Context) EntityReferencePtrOutput {
	return o
}

func (o EntityReferencePtrOutput) Elem() EntityReferenceOutput {
	return o.ApplyT(func(v *EntityReference) EntityReference { return *v }).(EntityReferenceOutput)
}

// The name of this referenced entity.
func (o EntityReferencePtrOutput) ReferenceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityReference) *string {
		if v == nil {
			return nil
		}
		return v.ReferenceName
	}).(pulumi.StringPtrOutput)
}

// The type of this referenced entity.
func (o EntityReferencePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityReference) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The entity reference.
type EntityReferenceResponse struct {
	// The name of this referenced entity.
	ReferenceName *string `pulumi:"referenceName"`
	// The type of this referenced entity.
	Type *string `pulumi:"type"`
}

// EntityReferenceResponseInput is an input type that accepts EntityReferenceResponseArgs and EntityReferenceResponseOutput values.
// You can construct a concrete instance of `EntityReferenceResponseInput` via:
//
//          EntityReferenceResponseArgs{...}
type EntityReferenceResponseInput interface {
	pulumi.Input

	ToEntityReferenceResponseOutput() EntityReferenceResponseOutput
	ToEntityReferenceResponseOutputWithContext(context.Context) EntityReferenceResponseOutput
}

// The entity reference.
type EntityReferenceResponseArgs struct {
	// The name of this referenced entity.
	ReferenceName pulumi.StringPtrInput `pulumi:"referenceName"`
	// The type of this referenced entity.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (EntityReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityReferenceResponse)(nil)).Elem()
}

func (i EntityReferenceResponseArgs) ToEntityReferenceResponseOutput() EntityReferenceResponseOutput {
	return i.ToEntityReferenceResponseOutputWithContext(context.Background())
}

func (i EntityReferenceResponseArgs) ToEntityReferenceResponseOutputWithContext(ctx context.Context) EntityReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityReferenceResponseOutput)
}

func (i EntityReferenceResponseArgs) ToEntityReferenceResponsePtrOutput() EntityReferenceResponsePtrOutput {
	return i.ToEntityReferenceResponsePtrOutputWithContext(context.Background())
}

func (i EntityReferenceResponseArgs) ToEntityReferenceResponsePtrOutputWithContext(ctx context.Context) EntityReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityReferenceResponseOutput).ToEntityReferenceResponsePtrOutputWithContext(ctx)
}

// EntityReferenceResponsePtrInput is an input type that accepts EntityReferenceResponseArgs, EntityReferenceResponsePtr and EntityReferenceResponsePtrOutput values.
// You can construct a concrete instance of `EntityReferenceResponsePtrInput` via:
//
//          EntityReferenceResponseArgs{...}
//
//  or:
//
//          nil
type EntityReferenceResponsePtrInput interface {
	pulumi.Input

	ToEntityReferenceResponsePtrOutput() EntityReferenceResponsePtrOutput
	ToEntityReferenceResponsePtrOutputWithContext(context.Context) EntityReferenceResponsePtrOutput
}

type entityReferenceResponsePtrType EntityReferenceResponseArgs

func EntityReferenceResponsePtr(v *EntityReferenceResponseArgs) EntityReferenceResponsePtrInput {
	return (*entityReferenceResponsePtrType)(v)
}

func (*entityReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityReferenceResponse)(nil)).Elem()
}

func (i *entityReferenceResponsePtrType) ToEntityReferenceResponsePtrOutput() EntityReferenceResponsePtrOutput {
	return i.ToEntityReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *entityReferenceResponsePtrType) ToEntityReferenceResponsePtrOutputWithContext(ctx context.Context) EntityReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityReferenceResponsePtrOutput)
}

// The entity reference.
type EntityReferenceResponseOutput struct{ *pulumi.OutputState }

func (EntityReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityReferenceResponse)(nil)).Elem()
}

func (o EntityReferenceResponseOutput) ToEntityReferenceResponseOutput() EntityReferenceResponseOutput {
	return o
}

func (o EntityReferenceResponseOutput) ToEntityReferenceResponseOutputWithContext(ctx context.Context) EntityReferenceResponseOutput {
	return o
}

func (o EntityReferenceResponseOutput) ToEntityReferenceResponsePtrOutput() EntityReferenceResponsePtrOutput {
	return o.ToEntityReferenceResponsePtrOutputWithContext(context.Background())
}

func (o EntityReferenceResponseOutput) ToEntityReferenceResponsePtrOutputWithContext(ctx context.Context) EntityReferenceResponsePtrOutput {
	return o.ApplyT(func(v EntityReferenceResponse) *EntityReferenceResponse {
		return &v
	}).(EntityReferenceResponsePtrOutput)
}

// The name of this referenced entity.
func (o EntityReferenceResponseOutput) ReferenceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityReferenceResponse) *string { return v.ReferenceName }).(pulumi.StringPtrOutput)
}

// The type of this referenced entity.
func (o EntityReferenceResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityReferenceResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type EntityReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (EntityReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityReferenceResponse)(nil)).Elem()
}

func (o EntityReferenceResponsePtrOutput) ToEntityReferenceResponsePtrOutput() EntityReferenceResponsePtrOutput {
	return o
}

func (o EntityReferenceResponsePtrOutput) ToEntityReferenceResponsePtrOutputWithContext(ctx context.Context) EntityReferenceResponsePtrOutput {
	return o
}

func (o EntityReferenceResponsePtrOutput) Elem() EntityReferenceResponseOutput {
	return o.ApplyT(func(v *EntityReferenceResponse) EntityReferenceResponse { return *v }).(EntityReferenceResponseOutput)
}

// The name of this referenced entity.
func (o EntityReferenceResponsePtrOutput) ReferenceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReferenceName
	}).(pulumi.StringPtrOutput)
}

// The type of this referenced entity.
func (o EntityReferenceResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Execute pipeline activity.
type ExecutePipelineActivity struct {
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Activity name.
	Name string `pulumi:"name"`
	// Pipeline parameters.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// Pipeline reference.
	Pipeline PipelineReference `pulumi:"pipeline"`
	// Type of activity.
	// Expected value is 'Container'.
	Type string `pulumi:"type"`
	// Defines whether activity execution will wait for the dependent pipeline execution to finish. Default is false.
	WaitOnCompletion *bool `pulumi:"waitOnCompletion"`
}

// ExecutePipelineActivityInput is an input type that accepts ExecutePipelineActivityArgs and ExecutePipelineActivityOutput values.
// You can construct a concrete instance of `ExecutePipelineActivityInput` via:
//
//          ExecutePipelineActivityArgs{...}
type ExecutePipelineActivityInput interface {
	pulumi.Input

	ToExecutePipelineActivityOutput() ExecutePipelineActivityOutput
	ToExecutePipelineActivityOutputWithContext(context.Context) ExecutePipelineActivityOutput
}

// Execute pipeline activity.
type ExecutePipelineActivityArgs struct {
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Pipeline parameters.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// Pipeline reference.
	Pipeline PipelineReferenceInput `pulumi:"pipeline"`
	// Type of activity.
	// Expected value is 'Container'.
	Type pulumi.StringInput `pulumi:"type"`
	// Defines whether activity execution will wait for the dependent pipeline execution to finish. Default is false.
	WaitOnCompletion pulumi.BoolPtrInput `pulumi:"waitOnCompletion"`
}

func (ExecutePipelineActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutePipelineActivity)(nil)).Elem()
}

func (i ExecutePipelineActivityArgs) ToExecutePipelineActivityOutput() ExecutePipelineActivityOutput {
	return i.ToExecutePipelineActivityOutputWithContext(context.Background())
}

func (i ExecutePipelineActivityArgs) ToExecutePipelineActivityOutputWithContext(ctx context.Context) ExecutePipelineActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecutePipelineActivityOutput)
}

// Execute pipeline activity.
type ExecutePipelineActivityOutput struct{ *pulumi.OutputState }

func (ExecutePipelineActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutePipelineActivity)(nil)).Elem()
}

func (o ExecutePipelineActivityOutput) ToExecutePipelineActivityOutput() ExecutePipelineActivityOutput {
	return o
}

func (o ExecutePipelineActivityOutput) ToExecutePipelineActivityOutputWithContext(ctx context.Context) ExecutePipelineActivityOutput {
	return o
}

// Activity depends on condition.
func (o ExecutePipelineActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v ExecutePipelineActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o ExecutePipelineActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExecutePipelineActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Activity name.
func (o ExecutePipelineActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExecutePipelineActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Pipeline parameters.
func (o ExecutePipelineActivityOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v ExecutePipelineActivity) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

// Pipeline reference.
func (o ExecutePipelineActivityOutput) Pipeline() PipelineReferenceOutput {
	return o.ApplyT(func(v ExecutePipelineActivity) PipelineReference { return v.Pipeline }).(PipelineReferenceOutput)
}

// Type of activity.
// Expected value is 'Container'.
func (o ExecutePipelineActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExecutePipelineActivity) string { return v.Type }).(pulumi.StringOutput)
}

// Defines whether activity execution will wait for the dependent pipeline execution to finish. Default is false.
func (o ExecutePipelineActivityOutput) WaitOnCompletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExecutePipelineActivity) *bool { return v.WaitOnCompletion }).(pulumi.BoolPtrOutput)
}

// Execute pipeline activity.
type ExecutePipelineActivityResponse struct {
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Activity name.
	Name string `pulumi:"name"`
	// Pipeline parameters.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// Pipeline reference.
	Pipeline PipelineReferenceResponse `pulumi:"pipeline"`
	// Type of activity.
	// Expected value is 'Container'.
	Type string `pulumi:"type"`
	// Defines whether activity execution will wait for the dependent pipeline execution to finish. Default is false.
	WaitOnCompletion *bool `pulumi:"waitOnCompletion"`
}

// ExecutePipelineActivityResponseInput is an input type that accepts ExecutePipelineActivityResponseArgs and ExecutePipelineActivityResponseOutput values.
// You can construct a concrete instance of `ExecutePipelineActivityResponseInput` via:
//
//          ExecutePipelineActivityResponseArgs{...}
type ExecutePipelineActivityResponseInput interface {
	pulumi.Input

	ToExecutePipelineActivityResponseOutput() ExecutePipelineActivityResponseOutput
	ToExecutePipelineActivityResponseOutputWithContext(context.Context) ExecutePipelineActivityResponseOutput
}

// Execute pipeline activity.
type ExecutePipelineActivityResponseArgs struct {
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Pipeline parameters.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// Pipeline reference.
	Pipeline PipelineReferenceResponseInput `pulumi:"pipeline"`
	// Type of activity.
	// Expected value is 'Container'.
	Type pulumi.StringInput `pulumi:"type"`
	// Defines whether activity execution will wait for the dependent pipeline execution to finish. Default is false.
	WaitOnCompletion pulumi.BoolPtrInput `pulumi:"waitOnCompletion"`
}

func (ExecutePipelineActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutePipelineActivityResponse)(nil)).Elem()
}

func (i ExecutePipelineActivityResponseArgs) ToExecutePipelineActivityResponseOutput() ExecutePipelineActivityResponseOutput {
	return i.ToExecutePipelineActivityResponseOutputWithContext(context.Background())
}

func (i ExecutePipelineActivityResponseArgs) ToExecutePipelineActivityResponseOutputWithContext(ctx context.Context) ExecutePipelineActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecutePipelineActivityResponseOutput)
}

// Execute pipeline activity.
type ExecutePipelineActivityResponseOutput struct{ *pulumi.OutputState }

func (ExecutePipelineActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutePipelineActivityResponse)(nil)).Elem()
}

func (o ExecutePipelineActivityResponseOutput) ToExecutePipelineActivityResponseOutput() ExecutePipelineActivityResponseOutput {
	return o
}

func (o ExecutePipelineActivityResponseOutput) ToExecutePipelineActivityResponseOutputWithContext(ctx context.Context) ExecutePipelineActivityResponseOutput {
	return o
}

// Activity depends on condition.
func (o ExecutePipelineActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v ExecutePipelineActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o ExecutePipelineActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExecutePipelineActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Activity name.
func (o ExecutePipelineActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExecutePipelineActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Pipeline parameters.
func (o ExecutePipelineActivityResponseOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v ExecutePipelineActivityResponse) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

// Pipeline reference.
func (o ExecutePipelineActivityResponseOutput) Pipeline() PipelineReferenceResponseOutput {
	return o.ApplyT(func(v ExecutePipelineActivityResponse) PipelineReferenceResponse { return v.Pipeline }).(PipelineReferenceResponseOutput)
}

// Type of activity.
// Expected value is 'Container'.
func (o ExecutePipelineActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExecutePipelineActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Defines whether activity execution will wait for the dependent pipeline execution to finish. Default is false.
func (o ExecutePipelineActivityResponseOutput) WaitOnCompletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExecutePipelineActivityResponse) *bool { return v.WaitOnCompletion }).(pulumi.BoolPtrOutput)
}

// Execute SSIS package activity.
type ExecuteSSISPackageActivity struct {
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReference `pulumi:"connectVia"`
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// The environment path to execute the SSIS package. Type: string (or Expression with resultType string).
	EnvironmentPath interface{} `pulumi:"environmentPath"`
	// The package execution credential.
	ExecutionCredential *SSISExecutionCredential `pulumi:"executionCredential"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReference `pulumi:"linkedServiceName"`
	// SSIS package execution log location.
	LogLocation *SSISLogLocation `pulumi:"logLocation"`
	// The logging level of SSIS package execution. Type: string (or Expression with resultType string).
	LoggingLevel interface{} `pulumi:"loggingLevel"`
	// Activity name.
	Name string `pulumi:"name"`
	// The package level connection managers to execute the SSIS package.
	PackageConnectionManagers map[string]map[string]SSISExecutionParameter `pulumi:"packageConnectionManagers"`
	// SSIS package location.
	PackageLocation SSISPackageLocation `pulumi:"packageLocation"`
	// The package level parameters to execute the SSIS package.
	PackageParameters map[string]SSISExecutionParameter `pulumi:"packageParameters"`
	// Activity policy.
	Policy *ActivityPolicy `pulumi:"policy"`
	// The project level connection managers to execute the SSIS package.
	ProjectConnectionManagers map[string]map[string]SSISExecutionParameter `pulumi:"projectConnectionManagers"`
	// The project level parameters to execute the SSIS package.
	ProjectParameters map[string]SSISExecutionParameter `pulumi:"projectParameters"`
	// The property overrides to execute the SSIS package.
	PropertyOverrides map[string]SSISPropertyOverride `pulumi:"propertyOverrides"`
	// Specifies the runtime to execute SSIS package. The value should be "x86" or "x64". Type: string (or Expression with resultType string).
	Runtime interface{} `pulumi:"runtime"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// ExecuteSSISPackageActivityInput is an input type that accepts ExecuteSSISPackageActivityArgs and ExecuteSSISPackageActivityOutput values.
// You can construct a concrete instance of `ExecuteSSISPackageActivityInput` via:
//
//          ExecuteSSISPackageActivityArgs{...}
type ExecuteSSISPackageActivityInput interface {
	pulumi.Input

	ToExecuteSSISPackageActivityOutput() ExecuteSSISPackageActivityOutput
	ToExecuteSSISPackageActivityOutputWithContext(context.Context) ExecuteSSISPackageActivityOutput
}

// Execute SSIS package activity.
type ExecuteSSISPackageActivityArgs struct {
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceInput `pulumi:"connectVia"`
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The environment path to execute the SSIS package. Type: string (or Expression with resultType string).
	EnvironmentPath pulumi.Input `pulumi:"environmentPath"`
	// The package execution credential.
	ExecutionCredential SSISExecutionCredentialPtrInput `pulumi:"executionCredential"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferencePtrInput `pulumi:"linkedServiceName"`
	// SSIS package execution log location.
	LogLocation SSISLogLocationPtrInput `pulumi:"logLocation"`
	// The logging level of SSIS package execution. Type: string (or Expression with resultType string).
	LoggingLevel pulumi.Input `pulumi:"loggingLevel"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// The package level connection managers to execute the SSIS package.
	PackageConnectionManagers SSISExecutionParameterMapMapInput `pulumi:"packageConnectionManagers"`
	// SSIS package location.
	PackageLocation SSISPackageLocationInput `pulumi:"packageLocation"`
	// The package level parameters to execute the SSIS package.
	PackageParameters SSISExecutionParameterMapInput `pulumi:"packageParameters"`
	// Activity policy.
	Policy ActivityPolicyPtrInput `pulumi:"policy"`
	// The project level connection managers to execute the SSIS package.
	ProjectConnectionManagers SSISExecutionParameterMapMapInput `pulumi:"projectConnectionManagers"`
	// The project level parameters to execute the SSIS package.
	ProjectParameters SSISExecutionParameterMapInput `pulumi:"projectParameters"`
	// The property overrides to execute the SSIS package.
	PropertyOverrides SSISPropertyOverrideMapInput `pulumi:"propertyOverrides"`
	// Specifies the runtime to execute SSIS package. The value should be "x86" or "x64". Type: string (or Expression with resultType string).
	Runtime pulumi.Input `pulumi:"runtime"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExecuteSSISPackageActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecuteSSISPackageActivity)(nil)).Elem()
}

func (i ExecuteSSISPackageActivityArgs) ToExecuteSSISPackageActivityOutput() ExecuteSSISPackageActivityOutput {
	return i.ToExecuteSSISPackageActivityOutputWithContext(context.Background())
}

func (i ExecuteSSISPackageActivityArgs) ToExecuteSSISPackageActivityOutputWithContext(ctx context.Context) ExecuteSSISPackageActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecuteSSISPackageActivityOutput)
}

// Execute SSIS package activity.
type ExecuteSSISPackageActivityOutput struct{ *pulumi.OutputState }

func (ExecuteSSISPackageActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecuteSSISPackageActivity)(nil)).Elem()
}

func (o ExecuteSSISPackageActivityOutput) ToExecuteSSISPackageActivityOutput() ExecuteSSISPackageActivityOutput {
	return o
}

func (o ExecuteSSISPackageActivityOutput) ToExecuteSSISPackageActivityOutputWithContext(ctx context.Context) ExecuteSSISPackageActivityOutput {
	return o
}

// The integration runtime reference.
func (o ExecuteSSISPackageActivityOutput) ConnectVia() IntegrationRuntimeReferenceOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferenceOutput)
}

// Activity depends on condition.
func (o ExecuteSSISPackageActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o ExecuteSSISPackageActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The environment path to execute the SSIS package. Type: string (or Expression with resultType string).
func (o ExecuteSSISPackageActivityOutput) EnvironmentPath() pulumi.AnyOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) interface{} { return v.EnvironmentPath }).(pulumi.AnyOutput)
}

// The package execution credential.
func (o ExecuteSSISPackageActivityOutput) ExecutionCredential() SSISExecutionCredentialPtrOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) *SSISExecutionCredential { return v.ExecutionCredential }).(SSISExecutionCredentialPtrOutput)
}

// Linked service reference.
func (o ExecuteSSISPackageActivityOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) *LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// SSIS package execution log location.
func (o ExecuteSSISPackageActivityOutput) LogLocation() SSISLogLocationPtrOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) *SSISLogLocation { return v.LogLocation }).(SSISLogLocationPtrOutput)
}

// The logging level of SSIS package execution. Type: string (or Expression with resultType string).
func (o ExecuteSSISPackageActivityOutput) LoggingLevel() pulumi.AnyOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) interface{} { return v.LoggingLevel }).(pulumi.AnyOutput)
}

// Activity name.
func (o ExecuteSSISPackageActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) string { return v.Name }).(pulumi.StringOutput)
}

// The package level connection managers to execute the SSIS package.
func (o ExecuteSSISPackageActivityOutput) PackageConnectionManagers() SSISExecutionParameterMapMapOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) map[string]map[string]SSISExecutionParameter {
		return v.PackageConnectionManagers
	}).(SSISExecutionParameterMapMapOutput)
}

// SSIS package location.
func (o ExecuteSSISPackageActivityOutput) PackageLocation() SSISPackageLocationOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) SSISPackageLocation { return v.PackageLocation }).(SSISPackageLocationOutput)
}

// The package level parameters to execute the SSIS package.
func (o ExecuteSSISPackageActivityOutput) PackageParameters() SSISExecutionParameterMapOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) map[string]SSISExecutionParameter { return v.PackageParameters }).(SSISExecutionParameterMapOutput)
}

// Activity policy.
func (o ExecuteSSISPackageActivityOutput) Policy() ActivityPolicyPtrOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) *ActivityPolicy { return v.Policy }).(ActivityPolicyPtrOutput)
}

// The project level connection managers to execute the SSIS package.
func (o ExecuteSSISPackageActivityOutput) ProjectConnectionManagers() SSISExecutionParameterMapMapOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) map[string]map[string]SSISExecutionParameter {
		return v.ProjectConnectionManagers
	}).(SSISExecutionParameterMapMapOutput)
}

// The project level parameters to execute the SSIS package.
func (o ExecuteSSISPackageActivityOutput) ProjectParameters() SSISExecutionParameterMapOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) map[string]SSISExecutionParameter { return v.ProjectParameters }).(SSISExecutionParameterMapOutput)
}

// The property overrides to execute the SSIS package.
func (o ExecuteSSISPackageActivityOutput) PropertyOverrides() SSISPropertyOverrideMapOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) map[string]SSISPropertyOverride { return v.PropertyOverrides }).(SSISPropertyOverrideMapOutput)
}

// Specifies the runtime to execute SSIS package. The value should be "x86" or "x64". Type: string (or Expression with resultType string).
func (o ExecuteSSISPackageActivityOutput) Runtime() pulumi.AnyOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) interface{} { return v.Runtime }).(pulumi.AnyOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o ExecuteSSISPackageActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivity) string { return v.Type }).(pulumi.StringOutput)
}

// Execute SSIS package activity.
type ExecuteSSISPackageActivityResponse struct {
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// The environment path to execute the SSIS package. Type: string (or Expression with resultType string).
	EnvironmentPath interface{} `pulumi:"environmentPath"`
	// The package execution credential.
	ExecutionCredential *SSISExecutionCredentialResponse `pulumi:"executionCredential"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// SSIS package execution log location.
	LogLocation *SSISLogLocationResponse `pulumi:"logLocation"`
	// The logging level of SSIS package execution. Type: string (or Expression with resultType string).
	LoggingLevel interface{} `pulumi:"loggingLevel"`
	// Activity name.
	Name string `pulumi:"name"`
	// The package level connection managers to execute the SSIS package.
	PackageConnectionManagers map[string]map[string]SSISExecutionParameterResponse `pulumi:"packageConnectionManagers"`
	// SSIS package location.
	PackageLocation SSISPackageLocationResponse `pulumi:"packageLocation"`
	// The package level parameters to execute the SSIS package.
	PackageParameters map[string]SSISExecutionParameterResponse `pulumi:"packageParameters"`
	// Activity policy.
	Policy *ActivityPolicyResponse `pulumi:"policy"`
	// The project level connection managers to execute the SSIS package.
	ProjectConnectionManagers map[string]map[string]SSISExecutionParameterResponse `pulumi:"projectConnectionManagers"`
	// The project level parameters to execute the SSIS package.
	ProjectParameters map[string]SSISExecutionParameterResponse `pulumi:"projectParameters"`
	// The property overrides to execute the SSIS package.
	PropertyOverrides map[string]SSISPropertyOverrideResponse `pulumi:"propertyOverrides"`
	// Specifies the runtime to execute SSIS package. The value should be "x86" or "x64". Type: string (or Expression with resultType string).
	Runtime interface{} `pulumi:"runtime"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// ExecuteSSISPackageActivityResponseInput is an input type that accepts ExecuteSSISPackageActivityResponseArgs and ExecuteSSISPackageActivityResponseOutput values.
// You can construct a concrete instance of `ExecuteSSISPackageActivityResponseInput` via:
//
//          ExecuteSSISPackageActivityResponseArgs{...}
type ExecuteSSISPackageActivityResponseInput interface {
	pulumi.Input

	ToExecuteSSISPackageActivityResponseOutput() ExecuteSSISPackageActivityResponseOutput
	ToExecuteSSISPackageActivityResponseOutputWithContext(context.Context) ExecuteSSISPackageActivityResponseOutput
}

// Execute SSIS package activity.
type ExecuteSSISPackageActivityResponseArgs struct {
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponseInput `pulumi:"connectVia"`
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The environment path to execute the SSIS package. Type: string (or Expression with resultType string).
	EnvironmentPath pulumi.Input `pulumi:"environmentPath"`
	// The package execution credential.
	ExecutionCredential SSISExecutionCredentialResponsePtrInput `pulumi:"executionCredential"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"linkedServiceName"`
	// SSIS package execution log location.
	LogLocation SSISLogLocationResponsePtrInput `pulumi:"logLocation"`
	// The logging level of SSIS package execution. Type: string (or Expression with resultType string).
	LoggingLevel pulumi.Input `pulumi:"loggingLevel"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// The package level connection managers to execute the SSIS package.
	PackageConnectionManagers SSISExecutionParameterResponseMapMapInput `pulumi:"packageConnectionManagers"`
	// SSIS package location.
	PackageLocation SSISPackageLocationResponseInput `pulumi:"packageLocation"`
	// The package level parameters to execute the SSIS package.
	PackageParameters SSISExecutionParameterResponseMapInput `pulumi:"packageParameters"`
	// Activity policy.
	Policy ActivityPolicyResponsePtrInput `pulumi:"policy"`
	// The project level connection managers to execute the SSIS package.
	ProjectConnectionManagers SSISExecutionParameterResponseMapMapInput `pulumi:"projectConnectionManagers"`
	// The project level parameters to execute the SSIS package.
	ProjectParameters SSISExecutionParameterResponseMapInput `pulumi:"projectParameters"`
	// The property overrides to execute the SSIS package.
	PropertyOverrides SSISPropertyOverrideResponseMapInput `pulumi:"propertyOverrides"`
	// Specifies the runtime to execute SSIS package. The value should be "x86" or "x64". Type: string (or Expression with resultType string).
	Runtime pulumi.Input `pulumi:"runtime"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExecuteSSISPackageActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecuteSSISPackageActivityResponse)(nil)).Elem()
}

func (i ExecuteSSISPackageActivityResponseArgs) ToExecuteSSISPackageActivityResponseOutput() ExecuteSSISPackageActivityResponseOutput {
	return i.ToExecuteSSISPackageActivityResponseOutputWithContext(context.Background())
}

func (i ExecuteSSISPackageActivityResponseArgs) ToExecuteSSISPackageActivityResponseOutputWithContext(ctx context.Context) ExecuteSSISPackageActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecuteSSISPackageActivityResponseOutput)
}

// Execute SSIS package activity.
type ExecuteSSISPackageActivityResponseOutput struct{ *pulumi.OutputState }

func (ExecuteSSISPackageActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecuteSSISPackageActivityResponse)(nil)).Elem()
}

func (o ExecuteSSISPackageActivityResponseOutput) ToExecuteSSISPackageActivityResponseOutput() ExecuteSSISPackageActivityResponseOutput {
	return o
}

func (o ExecuteSSISPackageActivityResponseOutput) ToExecuteSSISPackageActivityResponseOutputWithContext(ctx context.Context) ExecuteSSISPackageActivityResponseOutput {
	return o
}

// The integration runtime reference.
func (o ExecuteSSISPackageActivityResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponseOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponseOutput)
}

// Activity depends on condition.
func (o ExecuteSSISPackageActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o ExecuteSSISPackageActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The environment path to execute the SSIS package. Type: string (or Expression with resultType string).
func (o ExecuteSSISPackageActivityResponseOutput) EnvironmentPath() pulumi.AnyOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) interface{} { return v.EnvironmentPath }).(pulumi.AnyOutput)
}

// The package execution credential.
func (o ExecuteSSISPackageActivityResponseOutput) ExecutionCredential() SSISExecutionCredentialResponsePtrOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) *SSISExecutionCredentialResponse {
		return v.ExecutionCredential
	}).(SSISExecutionCredentialResponsePtrOutput)
}

// Linked service reference.
func (o ExecuteSSISPackageActivityResponseOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) *LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponsePtrOutput)
}

// SSIS package execution log location.
func (o ExecuteSSISPackageActivityResponseOutput) LogLocation() SSISLogLocationResponsePtrOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) *SSISLogLocationResponse { return v.LogLocation }).(SSISLogLocationResponsePtrOutput)
}

// The logging level of SSIS package execution. Type: string (or Expression with resultType string).
func (o ExecuteSSISPackageActivityResponseOutput) LoggingLevel() pulumi.AnyOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) interface{} { return v.LoggingLevel }).(pulumi.AnyOutput)
}

// Activity name.
func (o ExecuteSSISPackageActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The package level connection managers to execute the SSIS package.
func (o ExecuteSSISPackageActivityResponseOutput) PackageConnectionManagers() SSISExecutionParameterResponseMapMapOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) map[string]map[string]SSISExecutionParameterResponse {
		return v.PackageConnectionManagers
	}).(SSISExecutionParameterResponseMapMapOutput)
}

// SSIS package location.
func (o ExecuteSSISPackageActivityResponseOutput) PackageLocation() SSISPackageLocationResponseOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) SSISPackageLocationResponse { return v.PackageLocation }).(SSISPackageLocationResponseOutput)
}

// The package level parameters to execute the SSIS package.
func (o ExecuteSSISPackageActivityResponseOutput) PackageParameters() SSISExecutionParameterResponseMapOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) map[string]SSISExecutionParameterResponse {
		return v.PackageParameters
	}).(SSISExecutionParameterResponseMapOutput)
}

// Activity policy.
func (o ExecuteSSISPackageActivityResponseOutput) Policy() ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) *ActivityPolicyResponse { return v.Policy }).(ActivityPolicyResponsePtrOutput)
}

// The project level connection managers to execute the SSIS package.
func (o ExecuteSSISPackageActivityResponseOutput) ProjectConnectionManagers() SSISExecutionParameterResponseMapMapOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) map[string]map[string]SSISExecutionParameterResponse {
		return v.ProjectConnectionManagers
	}).(SSISExecutionParameterResponseMapMapOutput)
}

// The project level parameters to execute the SSIS package.
func (o ExecuteSSISPackageActivityResponseOutput) ProjectParameters() SSISExecutionParameterResponseMapOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) map[string]SSISExecutionParameterResponse {
		return v.ProjectParameters
	}).(SSISExecutionParameterResponseMapOutput)
}

// The property overrides to execute the SSIS package.
func (o ExecuteSSISPackageActivityResponseOutput) PropertyOverrides() SSISPropertyOverrideResponseMapOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) map[string]SSISPropertyOverrideResponse {
		return v.PropertyOverrides
	}).(SSISPropertyOverrideResponseMapOutput)
}

// Specifies the runtime to execute SSIS package. The value should be "x86" or "x64". Type: string (or Expression with resultType string).
func (o ExecuteSSISPackageActivityResponseOutput) Runtime() pulumi.AnyOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) interface{} { return v.Runtime }).(pulumi.AnyOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o ExecuteSSISPackageActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExecuteSSISPackageActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Base class for all execution activities.
type ExecutionActivity struct {
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReference `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicy `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// ExecutionActivityInput is an input type that accepts ExecutionActivityArgs and ExecutionActivityOutput values.
// You can construct a concrete instance of `ExecutionActivityInput` via:
//
//          ExecutionActivityArgs{...}
type ExecutionActivityInput interface {
	pulumi.Input

	ToExecutionActivityOutput() ExecutionActivityOutput
	ToExecutionActivityOutputWithContext(context.Context) ExecutionActivityOutput
}

// Base class for all execution activities.
type ExecutionActivityArgs struct {
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferencePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyPtrInput `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExecutionActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionActivity)(nil)).Elem()
}

func (i ExecutionActivityArgs) ToExecutionActivityOutput() ExecutionActivityOutput {
	return i.ToExecutionActivityOutputWithContext(context.Background())
}

func (i ExecutionActivityArgs) ToExecutionActivityOutputWithContext(ctx context.Context) ExecutionActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecutionActivityOutput)
}

// Base class for all execution activities.
type ExecutionActivityOutput struct{ *pulumi.OutputState }

func (ExecutionActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionActivity)(nil)).Elem()
}

func (o ExecutionActivityOutput) ToExecutionActivityOutput() ExecutionActivityOutput {
	return o
}

func (o ExecutionActivityOutput) ToExecutionActivityOutputWithContext(ctx context.Context) ExecutionActivityOutput {
	return o
}

// Activity depends on condition.
func (o ExecutionActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v ExecutionActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o ExecutionActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExecutionActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o ExecutionActivityOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v ExecutionActivity) *LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// Activity name.
func (o ExecutionActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExecutionActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o ExecutionActivityOutput) Policy() ActivityPolicyPtrOutput {
	return o.ApplyT(func(v ExecutionActivity) *ActivityPolicy { return v.Policy }).(ActivityPolicyPtrOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o ExecutionActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExecutionActivity) string { return v.Type }).(pulumi.StringOutput)
}

// Base class for all execution activities.
type ExecutionActivityResponse struct {
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicyResponse `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// ExecutionActivityResponseInput is an input type that accepts ExecutionActivityResponseArgs and ExecutionActivityResponseOutput values.
// You can construct a concrete instance of `ExecutionActivityResponseInput` via:
//
//          ExecutionActivityResponseArgs{...}
type ExecutionActivityResponseInput interface {
	pulumi.Input

	ToExecutionActivityResponseOutput() ExecutionActivityResponseOutput
	ToExecutionActivityResponseOutputWithContext(context.Context) ExecutionActivityResponseOutput
}

// Base class for all execution activities.
type ExecutionActivityResponseArgs struct {
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyResponsePtrInput `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExecutionActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionActivityResponse)(nil)).Elem()
}

func (i ExecutionActivityResponseArgs) ToExecutionActivityResponseOutput() ExecutionActivityResponseOutput {
	return i.ToExecutionActivityResponseOutputWithContext(context.Background())
}

func (i ExecutionActivityResponseArgs) ToExecutionActivityResponseOutputWithContext(ctx context.Context) ExecutionActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecutionActivityResponseOutput)
}

// Base class for all execution activities.
type ExecutionActivityResponseOutput struct{ *pulumi.OutputState }

func (ExecutionActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionActivityResponse)(nil)).Elem()
}

func (o ExecutionActivityResponseOutput) ToExecutionActivityResponseOutput() ExecutionActivityResponseOutput {
	return o
}

func (o ExecutionActivityResponseOutput) ToExecutionActivityResponseOutputWithContext(ctx context.Context) ExecutionActivityResponseOutput {
	return o
}

// Activity depends on condition.
func (o ExecutionActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v ExecutionActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o ExecutionActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExecutionActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o ExecutionActivityResponseOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v ExecutionActivityResponse) *LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponsePtrOutput)
}

// Activity name.
func (o ExecutionActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExecutionActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o ExecutionActivityResponseOutput) Policy() ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v ExecutionActivityResponse) *ActivityPolicyResponse { return v.Policy }).(ActivityPolicyResponsePtrOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o ExecutionActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExecutionActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Azure Data Factory expression definition.
type Expression struct {
	// Expression type.
	Type string `pulumi:"type"`
	// Expression value.
	Value string `pulumi:"value"`
}

// ExpressionInput is an input type that accepts ExpressionArgs and ExpressionOutput values.
// You can construct a concrete instance of `ExpressionInput` via:
//
//          ExpressionArgs{...}
type ExpressionInput interface {
	pulumi.Input

	ToExpressionOutput() ExpressionOutput
	ToExpressionOutputWithContext(context.Context) ExpressionOutput
}

// Azure Data Factory expression definition.
type ExpressionArgs struct {
	// Expression type.
	Type pulumi.StringInput `pulumi:"type"`
	// Expression value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Expression)(nil)).Elem()
}

func (i ExpressionArgs) ToExpressionOutput() ExpressionOutput {
	return i.ToExpressionOutputWithContext(context.Background())
}

func (i ExpressionArgs) ToExpressionOutputWithContext(ctx context.Context) ExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressionOutput)
}

// Azure Data Factory expression definition.
type ExpressionOutput struct{ *pulumi.OutputState }

func (ExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Expression)(nil)).Elem()
}

func (o ExpressionOutput) ToExpressionOutput() ExpressionOutput {
	return o
}

func (o ExpressionOutput) ToExpressionOutputWithContext(ctx context.Context) ExpressionOutput {
	return o
}

// Expression type.
func (o ExpressionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v Expression) string { return v.Type }).(pulumi.StringOutput)
}

// Expression value.
func (o ExpressionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v Expression) string { return v.Value }).(pulumi.StringOutput)
}

// Azure Data Factory expression definition.
type ExpressionResponse struct {
	// Expression type.
	Type string `pulumi:"type"`
	// Expression value.
	Value string `pulumi:"value"`
}

// ExpressionResponseInput is an input type that accepts ExpressionResponseArgs and ExpressionResponseOutput values.
// You can construct a concrete instance of `ExpressionResponseInput` via:
//
//          ExpressionResponseArgs{...}
type ExpressionResponseInput interface {
	pulumi.Input

	ToExpressionResponseOutput() ExpressionResponseOutput
	ToExpressionResponseOutputWithContext(context.Context) ExpressionResponseOutput
}

// Azure Data Factory expression definition.
type ExpressionResponseArgs struct {
	// Expression type.
	Type pulumi.StringInput `pulumi:"type"`
	// Expression value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ExpressionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressionResponse)(nil)).Elem()
}

func (i ExpressionResponseArgs) ToExpressionResponseOutput() ExpressionResponseOutput {
	return i.ToExpressionResponseOutputWithContext(context.Background())
}

func (i ExpressionResponseArgs) ToExpressionResponseOutputWithContext(ctx context.Context) ExpressionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressionResponseOutput)
}

// Azure Data Factory expression definition.
type ExpressionResponseOutput struct{ *pulumi.OutputState }

func (ExpressionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressionResponse)(nil)).Elem()
}

func (o ExpressionResponseOutput) ToExpressionResponseOutput() ExpressionResponseOutput {
	return o
}

func (o ExpressionResponseOutput) ToExpressionResponseOutputWithContext(ctx context.Context) ExpressionResponseOutput {
	return o
}

// Expression type.
func (o ExpressionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressionResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Expression value.
func (o ExpressionResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressionResponse) string { return v.Value }).(pulumi.StringOutput)
}

// Identity properties of the factory resource.
type FactoryIdentity struct {
	// The identity type. Currently the only supported type is 'SystemAssigned'.
	Type string `pulumi:"type"`
}

// FactoryIdentityInput is an input type that accepts FactoryIdentityArgs and FactoryIdentityOutput values.
// You can construct a concrete instance of `FactoryIdentityInput` via:
//
//          FactoryIdentityArgs{...}
type FactoryIdentityInput interface {
	pulumi.Input

	ToFactoryIdentityOutput() FactoryIdentityOutput
	ToFactoryIdentityOutputWithContext(context.Context) FactoryIdentityOutput
}

// Identity properties of the factory resource.
type FactoryIdentityArgs struct {
	// The identity type. Currently the only supported type is 'SystemAssigned'.
	Type FactoryIdentityType `pulumi:"type"`
}

func (FactoryIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FactoryIdentity)(nil)).Elem()
}

func (i FactoryIdentityArgs) ToFactoryIdentityOutput() FactoryIdentityOutput {
	return i.ToFactoryIdentityOutputWithContext(context.Background())
}

func (i FactoryIdentityArgs) ToFactoryIdentityOutputWithContext(ctx context.Context) FactoryIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryIdentityOutput)
}

func (i FactoryIdentityArgs) ToFactoryIdentityPtrOutput() FactoryIdentityPtrOutput {
	return i.ToFactoryIdentityPtrOutputWithContext(context.Background())
}

func (i FactoryIdentityArgs) ToFactoryIdentityPtrOutputWithContext(ctx context.Context) FactoryIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryIdentityOutput).ToFactoryIdentityPtrOutputWithContext(ctx)
}

// FactoryIdentityPtrInput is an input type that accepts FactoryIdentityArgs, FactoryIdentityPtr and FactoryIdentityPtrOutput values.
// You can construct a concrete instance of `FactoryIdentityPtrInput` via:
//
//          FactoryIdentityArgs{...}
//
//  or:
//
//          nil
type FactoryIdentityPtrInput interface {
	pulumi.Input

	ToFactoryIdentityPtrOutput() FactoryIdentityPtrOutput
	ToFactoryIdentityPtrOutputWithContext(context.Context) FactoryIdentityPtrOutput
}

type factoryIdentityPtrType FactoryIdentityArgs

func FactoryIdentityPtr(v *FactoryIdentityArgs) FactoryIdentityPtrInput {
	return (*factoryIdentityPtrType)(v)
}

func (*factoryIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FactoryIdentity)(nil)).Elem()
}

func (i *factoryIdentityPtrType) ToFactoryIdentityPtrOutput() FactoryIdentityPtrOutput {
	return i.ToFactoryIdentityPtrOutputWithContext(context.Background())
}

func (i *factoryIdentityPtrType) ToFactoryIdentityPtrOutputWithContext(ctx context.Context) FactoryIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryIdentityPtrOutput)
}

// Identity properties of the factory resource.
type FactoryIdentityOutput struct{ *pulumi.OutputState }

func (FactoryIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FactoryIdentity)(nil)).Elem()
}

func (o FactoryIdentityOutput) ToFactoryIdentityOutput() FactoryIdentityOutput {
	return o
}

func (o FactoryIdentityOutput) ToFactoryIdentityOutputWithContext(ctx context.Context) FactoryIdentityOutput {
	return o
}

func (o FactoryIdentityOutput) ToFactoryIdentityPtrOutput() FactoryIdentityPtrOutput {
	return o.ToFactoryIdentityPtrOutputWithContext(context.Background())
}

func (o FactoryIdentityOutput) ToFactoryIdentityPtrOutputWithContext(ctx context.Context) FactoryIdentityPtrOutput {
	return o.ApplyT(func(v FactoryIdentity) *FactoryIdentity {
		return &v
	}).(FactoryIdentityPtrOutput)
}

// The identity type. Currently the only supported type is 'SystemAssigned'.
func (o FactoryIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type FactoryIdentityPtrOutput struct{ *pulumi.OutputState }

func (FactoryIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FactoryIdentity)(nil)).Elem()
}

func (o FactoryIdentityPtrOutput) ToFactoryIdentityPtrOutput() FactoryIdentityPtrOutput {
	return o
}

func (o FactoryIdentityPtrOutput) ToFactoryIdentityPtrOutputWithContext(ctx context.Context) FactoryIdentityPtrOutput {
	return o
}

func (o FactoryIdentityPtrOutput) Elem() FactoryIdentityOutput {
	return o.ApplyT(func(v *FactoryIdentity) FactoryIdentity { return *v }).(FactoryIdentityOutput)
}

// The identity type. Currently the only supported type is 'SystemAssigned'.
func (o FactoryIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity properties of the factory resource.
type FactoryIdentityResponse struct {
	// The principal id of the identity.
	PrincipalId string `pulumi:"principalId"`
	// The client tenant id of the identity.
	TenantId string `pulumi:"tenantId"`
	// The identity type. Currently the only supported type is 'SystemAssigned'.
	Type string `pulumi:"type"`
}

// FactoryIdentityResponseInput is an input type that accepts FactoryIdentityResponseArgs and FactoryIdentityResponseOutput values.
// You can construct a concrete instance of `FactoryIdentityResponseInput` via:
//
//          FactoryIdentityResponseArgs{...}
type FactoryIdentityResponseInput interface {
	pulumi.Input

	ToFactoryIdentityResponseOutput() FactoryIdentityResponseOutput
	ToFactoryIdentityResponseOutputWithContext(context.Context) FactoryIdentityResponseOutput
}

// Identity properties of the factory resource.
type FactoryIdentityResponseArgs struct {
	// The principal id of the identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The client tenant id of the identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The identity type. Currently the only supported type is 'SystemAssigned'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FactoryIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FactoryIdentityResponse)(nil)).Elem()
}

func (i FactoryIdentityResponseArgs) ToFactoryIdentityResponseOutput() FactoryIdentityResponseOutput {
	return i.ToFactoryIdentityResponseOutputWithContext(context.Background())
}

func (i FactoryIdentityResponseArgs) ToFactoryIdentityResponseOutputWithContext(ctx context.Context) FactoryIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryIdentityResponseOutput)
}

func (i FactoryIdentityResponseArgs) ToFactoryIdentityResponsePtrOutput() FactoryIdentityResponsePtrOutput {
	return i.ToFactoryIdentityResponsePtrOutputWithContext(context.Background())
}

func (i FactoryIdentityResponseArgs) ToFactoryIdentityResponsePtrOutputWithContext(ctx context.Context) FactoryIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryIdentityResponseOutput).ToFactoryIdentityResponsePtrOutputWithContext(ctx)
}

// FactoryIdentityResponsePtrInput is an input type that accepts FactoryIdentityResponseArgs, FactoryIdentityResponsePtr and FactoryIdentityResponsePtrOutput values.
// You can construct a concrete instance of `FactoryIdentityResponsePtrInput` via:
//
//          FactoryIdentityResponseArgs{...}
//
//  or:
//
//          nil
type FactoryIdentityResponsePtrInput interface {
	pulumi.Input

	ToFactoryIdentityResponsePtrOutput() FactoryIdentityResponsePtrOutput
	ToFactoryIdentityResponsePtrOutputWithContext(context.Context) FactoryIdentityResponsePtrOutput
}

type factoryIdentityResponsePtrType FactoryIdentityResponseArgs

func FactoryIdentityResponsePtr(v *FactoryIdentityResponseArgs) FactoryIdentityResponsePtrInput {
	return (*factoryIdentityResponsePtrType)(v)
}

func (*factoryIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FactoryIdentityResponse)(nil)).Elem()
}

func (i *factoryIdentityResponsePtrType) ToFactoryIdentityResponsePtrOutput() FactoryIdentityResponsePtrOutput {
	return i.ToFactoryIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *factoryIdentityResponsePtrType) ToFactoryIdentityResponsePtrOutputWithContext(ctx context.Context) FactoryIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryIdentityResponsePtrOutput)
}

// Identity properties of the factory resource.
type FactoryIdentityResponseOutput struct{ *pulumi.OutputState }

func (FactoryIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FactoryIdentityResponse)(nil)).Elem()
}

func (o FactoryIdentityResponseOutput) ToFactoryIdentityResponseOutput() FactoryIdentityResponseOutput {
	return o
}

func (o FactoryIdentityResponseOutput) ToFactoryIdentityResponseOutputWithContext(ctx context.Context) FactoryIdentityResponseOutput {
	return o
}

func (o FactoryIdentityResponseOutput) ToFactoryIdentityResponsePtrOutput() FactoryIdentityResponsePtrOutput {
	return o.ToFactoryIdentityResponsePtrOutputWithContext(context.Background())
}

func (o FactoryIdentityResponseOutput) ToFactoryIdentityResponsePtrOutputWithContext(ctx context.Context) FactoryIdentityResponsePtrOutput {
	return o.ApplyT(func(v FactoryIdentityResponse) *FactoryIdentityResponse {
		return &v
	}).(FactoryIdentityResponsePtrOutput)
}

// The principal id of the identity.
func (o FactoryIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The client tenant id of the identity.
func (o FactoryIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type. Currently the only supported type is 'SystemAssigned'.
func (o FactoryIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

type FactoryIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (FactoryIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FactoryIdentityResponse)(nil)).Elem()
}

func (o FactoryIdentityResponsePtrOutput) ToFactoryIdentityResponsePtrOutput() FactoryIdentityResponsePtrOutput {
	return o
}

func (o FactoryIdentityResponsePtrOutput) ToFactoryIdentityResponsePtrOutputWithContext(ctx context.Context) FactoryIdentityResponsePtrOutput {
	return o
}

func (o FactoryIdentityResponsePtrOutput) Elem() FactoryIdentityResponseOutput {
	return o.ApplyT(func(v *FactoryIdentityResponse) FactoryIdentityResponse { return *v }).(FactoryIdentityResponseOutput)
}

// The principal id of the identity.
func (o FactoryIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The client tenant id of the identity.
func (o FactoryIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type. Currently the only supported type is 'SystemAssigned'.
func (o FactoryIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Factory's VSTS repo information.
type FactoryVSTSConfiguration struct {
	// VSTS account name.
	AccountName *string `pulumi:"accountName"`
	// VSTS collaboration branch.
	CollaborationBranch *string `pulumi:"collaborationBranch"`
	// VSTS last commit id.
	LastCommitId *string `pulumi:"lastCommitId"`
	// VSTS project name.
	ProjectName *string `pulumi:"projectName"`
	// VSTS repository name.
	RepositoryName *string `pulumi:"repositoryName"`
	// VSTS root folder.
	RootFolder *string `pulumi:"rootFolder"`
	// VSTS tenant id.
	TenantId *string `pulumi:"tenantId"`
}

// FactoryVSTSConfigurationInput is an input type that accepts FactoryVSTSConfigurationArgs and FactoryVSTSConfigurationOutput values.
// You can construct a concrete instance of `FactoryVSTSConfigurationInput` via:
//
//          FactoryVSTSConfigurationArgs{...}
type FactoryVSTSConfigurationInput interface {
	pulumi.Input

	ToFactoryVSTSConfigurationOutput() FactoryVSTSConfigurationOutput
	ToFactoryVSTSConfigurationOutputWithContext(context.Context) FactoryVSTSConfigurationOutput
}

// Factory's VSTS repo information.
type FactoryVSTSConfigurationArgs struct {
	// VSTS account name.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// VSTS collaboration branch.
	CollaborationBranch pulumi.StringPtrInput `pulumi:"collaborationBranch"`
	// VSTS last commit id.
	LastCommitId pulumi.StringPtrInput `pulumi:"lastCommitId"`
	// VSTS project name.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// VSTS repository name.
	RepositoryName pulumi.StringPtrInput `pulumi:"repositoryName"`
	// VSTS root folder.
	RootFolder pulumi.StringPtrInput `pulumi:"rootFolder"`
	// VSTS tenant id.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (FactoryVSTSConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FactoryVSTSConfiguration)(nil)).Elem()
}

func (i FactoryVSTSConfigurationArgs) ToFactoryVSTSConfigurationOutput() FactoryVSTSConfigurationOutput {
	return i.ToFactoryVSTSConfigurationOutputWithContext(context.Background())
}

func (i FactoryVSTSConfigurationArgs) ToFactoryVSTSConfigurationOutputWithContext(ctx context.Context) FactoryVSTSConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryVSTSConfigurationOutput)
}

func (i FactoryVSTSConfigurationArgs) ToFactoryVSTSConfigurationPtrOutput() FactoryVSTSConfigurationPtrOutput {
	return i.ToFactoryVSTSConfigurationPtrOutputWithContext(context.Background())
}

func (i FactoryVSTSConfigurationArgs) ToFactoryVSTSConfigurationPtrOutputWithContext(ctx context.Context) FactoryVSTSConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryVSTSConfigurationOutput).ToFactoryVSTSConfigurationPtrOutputWithContext(ctx)
}

// FactoryVSTSConfigurationPtrInput is an input type that accepts FactoryVSTSConfigurationArgs, FactoryVSTSConfigurationPtr and FactoryVSTSConfigurationPtrOutput values.
// You can construct a concrete instance of `FactoryVSTSConfigurationPtrInput` via:
//
//          FactoryVSTSConfigurationArgs{...}
//
//  or:
//
//          nil
type FactoryVSTSConfigurationPtrInput interface {
	pulumi.Input

	ToFactoryVSTSConfigurationPtrOutput() FactoryVSTSConfigurationPtrOutput
	ToFactoryVSTSConfigurationPtrOutputWithContext(context.Context) FactoryVSTSConfigurationPtrOutput
}

type factoryVSTSConfigurationPtrType FactoryVSTSConfigurationArgs

func FactoryVSTSConfigurationPtr(v *FactoryVSTSConfigurationArgs) FactoryVSTSConfigurationPtrInput {
	return (*factoryVSTSConfigurationPtrType)(v)
}

func (*factoryVSTSConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FactoryVSTSConfiguration)(nil)).Elem()
}

func (i *factoryVSTSConfigurationPtrType) ToFactoryVSTSConfigurationPtrOutput() FactoryVSTSConfigurationPtrOutput {
	return i.ToFactoryVSTSConfigurationPtrOutputWithContext(context.Background())
}

func (i *factoryVSTSConfigurationPtrType) ToFactoryVSTSConfigurationPtrOutputWithContext(ctx context.Context) FactoryVSTSConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryVSTSConfigurationPtrOutput)
}

// Factory's VSTS repo information.
type FactoryVSTSConfigurationOutput struct{ *pulumi.OutputState }

func (FactoryVSTSConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FactoryVSTSConfiguration)(nil)).Elem()
}

func (o FactoryVSTSConfigurationOutput) ToFactoryVSTSConfigurationOutput() FactoryVSTSConfigurationOutput {
	return o
}

func (o FactoryVSTSConfigurationOutput) ToFactoryVSTSConfigurationOutputWithContext(ctx context.Context) FactoryVSTSConfigurationOutput {
	return o
}

func (o FactoryVSTSConfigurationOutput) ToFactoryVSTSConfigurationPtrOutput() FactoryVSTSConfigurationPtrOutput {
	return o.ToFactoryVSTSConfigurationPtrOutputWithContext(context.Background())
}

func (o FactoryVSTSConfigurationOutput) ToFactoryVSTSConfigurationPtrOutputWithContext(ctx context.Context) FactoryVSTSConfigurationPtrOutput {
	return o.ApplyT(func(v FactoryVSTSConfiguration) *FactoryVSTSConfiguration {
		return &v
	}).(FactoryVSTSConfigurationPtrOutput)
}

// VSTS account name.
func (o FactoryVSTSConfigurationOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FactoryVSTSConfiguration) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// VSTS collaboration branch.
func (o FactoryVSTSConfigurationOutput) CollaborationBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FactoryVSTSConfiguration) *string { return v.CollaborationBranch }).(pulumi.StringPtrOutput)
}

// VSTS last commit id.
func (o FactoryVSTSConfigurationOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FactoryVSTSConfiguration) *string { return v.LastCommitId }).(pulumi.StringPtrOutput)
}

// VSTS project name.
func (o FactoryVSTSConfigurationOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FactoryVSTSConfiguration) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// VSTS repository name.
func (o FactoryVSTSConfigurationOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FactoryVSTSConfiguration) *string { return v.RepositoryName }).(pulumi.StringPtrOutput)
}

// VSTS root folder.
func (o FactoryVSTSConfigurationOutput) RootFolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FactoryVSTSConfiguration) *string { return v.RootFolder }).(pulumi.StringPtrOutput)
}

// VSTS tenant id.
func (o FactoryVSTSConfigurationOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FactoryVSTSConfiguration) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type FactoryVSTSConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FactoryVSTSConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FactoryVSTSConfiguration)(nil)).Elem()
}

func (o FactoryVSTSConfigurationPtrOutput) ToFactoryVSTSConfigurationPtrOutput() FactoryVSTSConfigurationPtrOutput {
	return o
}

func (o FactoryVSTSConfigurationPtrOutput) ToFactoryVSTSConfigurationPtrOutputWithContext(ctx context.Context) FactoryVSTSConfigurationPtrOutput {
	return o
}

func (o FactoryVSTSConfigurationPtrOutput) Elem() FactoryVSTSConfigurationOutput {
	return o.ApplyT(func(v *FactoryVSTSConfiguration) FactoryVSTSConfiguration { return *v }).(FactoryVSTSConfigurationOutput)
}

// VSTS account name.
func (o FactoryVSTSConfigurationPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVSTSConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

// VSTS collaboration branch.
func (o FactoryVSTSConfigurationPtrOutput) CollaborationBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVSTSConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CollaborationBranch
	}).(pulumi.StringPtrOutput)
}

// VSTS last commit id.
func (o FactoryVSTSConfigurationPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVSTSConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// VSTS project name.
func (o FactoryVSTSConfigurationPtrOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVSTSConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ProjectName
	}).(pulumi.StringPtrOutput)
}

// VSTS repository name.
func (o FactoryVSTSConfigurationPtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVSTSConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

// VSTS root folder.
func (o FactoryVSTSConfigurationPtrOutput) RootFolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVSTSConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RootFolder
	}).(pulumi.StringPtrOutput)
}

// VSTS tenant id.
func (o FactoryVSTSConfigurationPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVSTSConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Factory's VSTS repo information.
type FactoryVSTSConfigurationResponse struct {
	// VSTS account name.
	AccountName *string `pulumi:"accountName"`
	// VSTS collaboration branch.
	CollaborationBranch *string `pulumi:"collaborationBranch"`
	// VSTS last commit id.
	LastCommitId *string `pulumi:"lastCommitId"`
	// VSTS project name.
	ProjectName *string `pulumi:"projectName"`
	// VSTS repository name.
	RepositoryName *string `pulumi:"repositoryName"`
	// VSTS root folder.
	RootFolder *string `pulumi:"rootFolder"`
	// VSTS tenant id.
	TenantId *string `pulumi:"tenantId"`
}

// FactoryVSTSConfigurationResponseInput is an input type that accepts FactoryVSTSConfigurationResponseArgs and FactoryVSTSConfigurationResponseOutput values.
// You can construct a concrete instance of `FactoryVSTSConfigurationResponseInput` via:
//
//          FactoryVSTSConfigurationResponseArgs{...}
type FactoryVSTSConfigurationResponseInput interface {
	pulumi.Input

	ToFactoryVSTSConfigurationResponseOutput() FactoryVSTSConfigurationResponseOutput
	ToFactoryVSTSConfigurationResponseOutputWithContext(context.Context) FactoryVSTSConfigurationResponseOutput
}

// Factory's VSTS repo information.
type FactoryVSTSConfigurationResponseArgs struct {
	// VSTS account name.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// VSTS collaboration branch.
	CollaborationBranch pulumi.StringPtrInput `pulumi:"collaborationBranch"`
	// VSTS last commit id.
	LastCommitId pulumi.StringPtrInput `pulumi:"lastCommitId"`
	// VSTS project name.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// VSTS repository name.
	RepositoryName pulumi.StringPtrInput `pulumi:"repositoryName"`
	// VSTS root folder.
	RootFolder pulumi.StringPtrInput `pulumi:"rootFolder"`
	// VSTS tenant id.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (FactoryVSTSConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FactoryVSTSConfigurationResponse)(nil)).Elem()
}

func (i FactoryVSTSConfigurationResponseArgs) ToFactoryVSTSConfigurationResponseOutput() FactoryVSTSConfigurationResponseOutput {
	return i.ToFactoryVSTSConfigurationResponseOutputWithContext(context.Background())
}

func (i FactoryVSTSConfigurationResponseArgs) ToFactoryVSTSConfigurationResponseOutputWithContext(ctx context.Context) FactoryVSTSConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryVSTSConfigurationResponseOutput)
}

func (i FactoryVSTSConfigurationResponseArgs) ToFactoryVSTSConfigurationResponsePtrOutput() FactoryVSTSConfigurationResponsePtrOutput {
	return i.ToFactoryVSTSConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i FactoryVSTSConfigurationResponseArgs) ToFactoryVSTSConfigurationResponsePtrOutputWithContext(ctx context.Context) FactoryVSTSConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryVSTSConfigurationResponseOutput).ToFactoryVSTSConfigurationResponsePtrOutputWithContext(ctx)
}

// FactoryVSTSConfigurationResponsePtrInput is an input type that accepts FactoryVSTSConfigurationResponseArgs, FactoryVSTSConfigurationResponsePtr and FactoryVSTSConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `FactoryVSTSConfigurationResponsePtrInput` via:
//
//          FactoryVSTSConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type FactoryVSTSConfigurationResponsePtrInput interface {
	pulumi.Input

	ToFactoryVSTSConfigurationResponsePtrOutput() FactoryVSTSConfigurationResponsePtrOutput
	ToFactoryVSTSConfigurationResponsePtrOutputWithContext(context.Context) FactoryVSTSConfigurationResponsePtrOutput
}

type factoryVSTSConfigurationResponsePtrType FactoryVSTSConfigurationResponseArgs

func FactoryVSTSConfigurationResponsePtr(v *FactoryVSTSConfigurationResponseArgs) FactoryVSTSConfigurationResponsePtrInput {
	return (*factoryVSTSConfigurationResponsePtrType)(v)
}

func (*factoryVSTSConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FactoryVSTSConfigurationResponse)(nil)).Elem()
}

func (i *factoryVSTSConfigurationResponsePtrType) ToFactoryVSTSConfigurationResponsePtrOutput() FactoryVSTSConfigurationResponsePtrOutput {
	return i.ToFactoryVSTSConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *factoryVSTSConfigurationResponsePtrType) ToFactoryVSTSConfigurationResponsePtrOutputWithContext(ctx context.Context) FactoryVSTSConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryVSTSConfigurationResponsePtrOutput)
}

// Factory's VSTS repo information.
type FactoryVSTSConfigurationResponseOutput struct{ *pulumi.OutputState }

func (FactoryVSTSConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FactoryVSTSConfigurationResponse)(nil)).Elem()
}

func (o FactoryVSTSConfigurationResponseOutput) ToFactoryVSTSConfigurationResponseOutput() FactoryVSTSConfigurationResponseOutput {
	return o
}

func (o FactoryVSTSConfigurationResponseOutput) ToFactoryVSTSConfigurationResponseOutputWithContext(ctx context.Context) FactoryVSTSConfigurationResponseOutput {
	return o
}

func (o FactoryVSTSConfigurationResponseOutput) ToFactoryVSTSConfigurationResponsePtrOutput() FactoryVSTSConfigurationResponsePtrOutput {
	return o.ToFactoryVSTSConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o FactoryVSTSConfigurationResponseOutput) ToFactoryVSTSConfigurationResponsePtrOutputWithContext(ctx context.Context) FactoryVSTSConfigurationResponsePtrOutput {
	return o.ApplyT(func(v FactoryVSTSConfigurationResponse) *FactoryVSTSConfigurationResponse {
		return &v
	}).(FactoryVSTSConfigurationResponsePtrOutput)
}

// VSTS account name.
func (o FactoryVSTSConfigurationResponseOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FactoryVSTSConfigurationResponse) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// VSTS collaboration branch.
func (o FactoryVSTSConfigurationResponseOutput) CollaborationBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FactoryVSTSConfigurationResponse) *string { return v.CollaborationBranch }).(pulumi.StringPtrOutput)
}

// VSTS last commit id.
func (o FactoryVSTSConfigurationResponseOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FactoryVSTSConfigurationResponse) *string { return v.LastCommitId }).(pulumi.StringPtrOutput)
}

// VSTS project name.
func (o FactoryVSTSConfigurationResponseOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FactoryVSTSConfigurationResponse) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// VSTS repository name.
func (o FactoryVSTSConfigurationResponseOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FactoryVSTSConfigurationResponse) *string { return v.RepositoryName }).(pulumi.StringPtrOutput)
}

// VSTS root folder.
func (o FactoryVSTSConfigurationResponseOutput) RootFolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FactoryVSTSConfigurationResponse) *string { return v.RootFolder }).(pulumi.StringPtrOutput)
}

// VSTS tenant id.
func (o FactoryVSTSConfigurationResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FactoryVSTSConfigurationResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type FactoryVSTSConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (FactoryVSTSConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FactoryVSTSConfigurationResponse)(nil)).Elem()
}

func (o FactoryVSTSConfigurationResponsePtrOutput) ToFactoryVSTSConfigurationResponsePtrOutput() FactoryVSTSConfigurationResponsePtrOutput {
	return o
}

func (o FactoryVSTSConfigurationResponsePtrOutput) ToFactoryVSTSConfigurationResponsePtrOutputWithContext(ctx context.Context) FactoryVSTSConfigurationResponsePtrOutput {
	return o
}

func (o FactoryVSTSConfigurationResponsePtrOutput) Elem() FactoryVSTSConfigurationResponseOutput {
	return o.ApplyT(func(v *FactoryVSTSConfigurationResponse) FactoryVSTSConfigurationResponse { return *v }).(FactoryVSTSConfigurationResponseOutput)
}

// VSTS account name.
func (o FactoryVSTSConfigurationResponsePtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVSTSConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

// VSTS collaboration branch.
func (o FactoryVSTSConfigurationResponsePtrOutput) CollaborationBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVSTSConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.CollaborationBranch
	}).(pulumi.StringPtrOutput)
}

// VSTS last commit id.
func (o FactoryVSTSConfigurationResponsePtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVSTSConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// VSTS project name.
func (o FactoryVSTSConfigurationResponsePtrOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVSTSConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProjectName
	}).(pulumi.StringPtrOutput)
}

// VSTS repository name.
func (o FactoryVSTSConfigurationResponsePtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVSTSConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

// VSTS root folder.
func (o FactoryVSTSConfigurationResponsePtrOutput) RootFolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVSTSConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RootFolder
	}).(pulumi.StringPtrOutput)
}

// VSTS tenant id.
func (o FactoryVSTSConfigurationResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVSTSConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// File system linked service.
type FileServerLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Host name of the server. Type: string (or Expression with resultType string).
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Password to logon the server.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'FileServer'.
	Type string `pulumi:"type"`
	// User ID to logon the server. Type: string (or Expression with resultType string).
	UserId interface{} `pulumi:"userId"`
}

// FileServerLinkedServiceInput is an input type that accepts FileServerLinkedServiceArgs and FileServerLinkedServiceOutput values.
// You can construct a concrete instance of `FileServerLinkedServiceInput` via:
//
//          FileServerLinkedServiceArgs{...}
type FileServerLinkedServiceInput interface {
	pulumi.Input

	ToFileServerLinkedServiceOutput() FileServerLinkedServiceOutput
	ToFileServerLinkedServiceOutputWithContext(context.Context) FileServerLinkedServiceOutput
}

// File system linked service.
type FileServerLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Host name of the server. Type: string (or Expression with resultType string).
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Password to logon the server.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'FileServer'.
	Type pulumi.StringInput `pulumi:"type"`
	// User ID to logon the server. Type: string (or Expression with resultType string).
	UserId pulumi.Input `pulumi:"userId"`
}

func (FileServerLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileServerLinkedService)(nil)).Elem()
}

func (i FileServerLinkedServiceArgs) ToFileServerLinkedServiceOutput() FileServerLinkedServiceOutput {
	return i.ToFileServerLinkedServiceOutputWithContext(context.Background())
}

func (i FileServerLinkedServiceArgs) ToFileServerLinkedServiceOutputWithContext(ctx context.Context) FileServerLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileServerLinkedServiceOutput)
}

// File system linked service.
type FileServerLinkedServiceOutput struct{ *pulumi.OutputState }

func (FileServerLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileServerLinkedService)(nil)).Elem()
}

func (o FileServerLinkedServiceOutput) ToFileServerLinkedServiceOutput() FileServerLinkedServiceOutput {
	return o
}

func (o FileServerLinkedServiceOutput) ToFileServerLinkedServiceOutputWithContext(ctx context.Context) FileServerLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o FileServerLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v FileServerLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o FileServerLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v FileServerLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o FileServerLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileServerLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o FileServerLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v FileServerLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Host name of the server. Type: string (or Expression with resultType string).
func (o FileServerLinkedServiceOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v FileServerLinkedService) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o FileServerLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v FileServerLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Password to logon the server.
func (o FileServerLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v FileServerLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'FileServer'.
func (o FileServerLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FileServerLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// User ID to logon the server. Type: string (or Expression with resultType string).
func (o FileServerLinkedServiceOutput) UserId() pulumi.AnyOutput {
	return o.ApplyT(func(v FileServerLinkedService) interface{} { return v.UserId }).(pulumi.AnyOutput)
}

// File system linked service.
type FileServerLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Host name of the server. Type: string (or Expression with resultType string).
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Password to logon the server.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'FileServer'.
	Type string `pulumi:"type"`
	// User ID to logon the server. Type: string (or Expression with resultType string).
	UserId interface{} `pulumi:"userId"`
}

// FileServerLinkedServiceResponseInput is an input type that accepts FileServerLinkedServiceResponseArgs and FileServerLinkedServiceResponseOutput values.
// You can construct a concrete instance of `FileServerLinkedServiceResponseInput` via:
//
//          FileServerLinkedServiceResponseArgs{...}
type FileServerLinkedServiceResponseInput interface {
	pulumi.Input

	ToFileServerLinkedServiceResponseOutput() FileServerLinkedServiceResponseOutput
	ToFileServerLinkedServiceResponseOutputWithContext(context.Context) FileServerLinkedServiceResponseOutput
}

// File system linked service.
type FileServerLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Host name of the server. Type: string (or Expression with resultType string).
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Password to logon the server.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'FileServer'.
	Type pulumi.StringInput `pulumi:"type"`
	// User ID to logon the server. Type: string (or Expression with resultType string).
	UserId pulumi.Input `pulumi:"userId"`
}

func (FileServerLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileServerLinkedServiceResponse)(nil)).Elem()
}

func (i FileServerLinkedServiceResponseArgs) ToFileServerLinkedServiceResponseOutput() FileServerLinkedServiceResponseOutput {
	return i.ToFileServerLinkedServiceResponseOutputWithContext(context.Background())
}

func (i FileServerLinkedServiceResponseArgs) ToFileServerLinkedServiceResponseOutputWithContext(ctx context.Context) FileServerLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileServerLinkedServiceResponseOutput)
}

// File system linked service.
type FileServerLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (FileServerLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileServerLinkedServiceResponse)(nil)).Elem()
}

func (o FileServerLinkedServiceResponseOutput) ToFileServerLinkedServiceResponseOutput() FileServerLinkedServiceResponseOutput {
	return o
}

func (o FileServerLinkedServiceResponseOutput) ToFileServerLinkedServiceResponseOutputWithContext(ctx context.Context) FileServerLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o FileServerLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v FileServerLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o FileServerLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v FileServerLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o FileServerLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileServerLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o FileServerLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v FileServerLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Host name of the server. Type: string (or Expression with resultType string).
func (o FileServerLinkedServiceResponseOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v FileServerLinkedServiceResponse) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o FileServerLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v FileServerLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Password to logon the server.
func (o FileServerLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v FileServerLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'FileServer'.
func (o FileServerLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FileServerLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// User ID to logon the server. Type: string (or Expression with resultType string).
func (o FileServerLinkedServiceResponseOutput) UserId() pulumi.AnyOutput {
	return o.ApplyT(func(v FileServerLinkedServiceResponse) interface{} { return v.UserId }).(pulumi.AnyOutput)
}

// An on-premises file system dataset.
type FileShareDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The data compression method used for the file system.
	Compression interface{} `pulumi:"compression"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string).
	FileFilter interface{} `pulumi:"fileFilter"`
	// The name of the on-premises file system. Type: string (or Expression with resultType string).
	FileName interface{} `pulumi:"fileName"`
	// The path of the on-premises file system. Type: string (or Expression with resultType string).
	FolderPath interface{} `pulumi:"folderPath"`
	// The format of the files.
	Format interface{} `pulumi:"format"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'FileShare'.
	Type string `pulumi:"type"`
}

// FileShareDatasetInput is an input type that accepts FileShareDatasetArgs and FileShareDatasetOutput values.
// You can construct a concrete instance of `FileShareDatasetInput` via:
//
//          FileShareDatasetArgs{...}
type FileShareDatasetInput interface {
	pulumi.Input

	ToFileShareDatasetOutput() FileShareDatasetOutput
	ToFileShareDatasetOutputWithContext(context.Context) FileShareDatasetOutput
}

// An on-premises file system dataset.
type FileShareDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The data compression method used for the file system.
	Compression pulumi.Input `pulumi:"compression"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string).
	FileFilter pulumi.Input `pulumi:"fileFilter"`
	// The name of the on-premises file system. Type: string (or Expression with resultType string).
	FileName pulumi.Input `pulumi:"fileName"`
	// The path of the on-premises file system. Type: string (or Expression with resultType string).
	FolderPath pulumi.Input `pulumi:"folderPath"`
	// The format of the files.
	Format pulumi.Input `pulumi:"format"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'FileShare'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FileShareDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareDataset)(nil)).Elem()
}

func (i FileShareDatasetArgs) ToFileShareDatasetOutput() FileShareDatasetOutput {
	return i.ToFileShareDatasetOutputWithContext(context.Background())
}

func (i FileShareDatasetArgs) ToFileShareDatasetOutputWithContext(ctx context.Context) FileShareDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileShareDatasetOutput)
}

// An on-premises file system dataset.
type FileShareDatasetOutput struct{ *pulumi.OutputState }

func (FileShareDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareDataset)(nil)).Elem()
}

func (o FileShareDatasetOutput) ToFileShareDatasetOutput() FileShareDatasetOutput {
	return o
}

func (o FileShareDatasetOutput) ToFileShareDatasetOutputWithContext(ctx context.Context) FileShareDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o FileShareDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v FileShareDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The data compression method used for the file system.
func (o FileShareDatasetOutput) Compression() pulumi.AnyOutput {
	return o.ApplyT(func(v FileShareDataset) interface{} { return v.Compression }).(pulumi.AnyOutput)
}

// Dataset description.
func (o FileShareDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShareDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string).
func (o FileShareDatasetOutput) FileFilter() pulumi.AnyOutput {
	return o.ApplyT(func(v FileShareDataset) interface{} { return v.FileFilter }).(pulumi.AnyOutput)
}

// The name of the on-premises file system. Type: string (or Expression with resultType string).
func (o FileShareDatasetOutput) FileName() pulumi.AnyOutput {
	return o.ApplyT(func(v FileShareDataset) interface{} { return v.FileName }).(pulumi.AnyOutput)
}

// The path of the on-premises file system. Type: string (or Expression with resultType string).
func (o FileShareDatasetOutput) FolderPath() pulumi.AnyOutput {
	return o.ApplyT(func(v FileShareDataset) interface{} { return v.FolderPath }).(pulumi.AnyOutput)
}

// The format of the files.
func (o FileShareDatasetOutput) Format() pulumi.AnyOutput {
	return o.ApplyT(func(v FileShareDataset) interface{} { return v.Format }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o FileShareDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v FileShareDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o FileShareDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v FileShareDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o FileShareDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v FileShareDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'FileShare'.
func (o FileShareDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FileShareDataset) string { return v.Type }).(pulumi.StringOutput)
}

// An on-premises file system dataset.
type FileShareDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The data compression method used for the file system.
	Compression interface{} `pulumi:"compression"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string).
	FileFilter interface{} `pulumi:"fileFilter"`
	// The name of the on-premises file system. Type: string (or Expression with resultType string).
	FileName interface{} `pulumi:"fileName"`
	// The path of the on-premises file system. Type: string (or Expression with resultType string).
	FolderPath interface{} `pulumi:"folderPath"`
	// The format of the files.
	Format interface{} `pulumi:"format"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'FileShare'.
	Type string `pulumi:"type"`
}

// FileShareDatasetResponseInput is an input type that accepts FileShareDatasetResponseArgs and FileShareDatasetResponseOutput values.
// You can construct a concrete instance of `FileShareDatasetResponseInput` via:
//
//          FileShareDatasetResponseArgs{...}
type FileShareDatasetResponseInput interface {
	pulumi.Input

	ToFileShareDatasetResponseOutput() FileShareDatasetResponseOutput
	ToFileShareDatasetResponseOutputWithContext(context.Context) FileShareDatasetResponseOutput
}

// An on-premises file system dataset.
type FileShareDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The data compression method used for the file system.
	Compression pulumi.Input `pulumi:"compression"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string).
	FileFilter pulumi.Input `pulumi:"fileFilter"`
	// The name of the on-premises file system. Type: string (or Expression with resultType string).
	FileName pulumi.Input `pulumi:"fileName"`
	// The path of the on-premises file system. Type: string (or Expression with resultType string).
	FolderPath pulumi.Input `pulumi:"folderPath"`
	// The format of the files.
	Format pulumi.Input `pulumi:"format"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'FileShare'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FileShareDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareDatasetResponse)(nil)).Elem()
}

func (i FileShareDatasetResponseArgs) ToFileShareDatasetResponseOutput() FileShareDatasetResponseOutput {
	return i.ToFileShareDatasetResponseOutputWithContext(context.Background())
}

func (i FileShareDatasetResponseArgs) ToFileShareDatasetResponseOutputWithContext(ctx context.Context) FileShareDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileShareDatasetResponseOutput)
}

// An on-premises file system dataset.
type FileShareDatasetResponseOutput struct{ *pulumi.OutputState }

func (FileShareDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareDatasetResponse)(nil)).Elem()
}

func (o FileShareDatasetResponseOutput) ToFileShareDatasetResponseOutput() FileShareDatasetResponseOutput {
	return o
}

func (o FileShareDatasetResponseOutput) ToFileShareDatasetResponseOutputWithContext(ctx context.Context) FileShareDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o FileShareDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v FileShareDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The data compression method used for the file system.
func (o FileShareDatasetResponseOutput) Compression() pulumi.AnyOutput {
	return o.ApplyT(func(v FileShareDatasetResponse) interface{} { return v.Compression }).(pulumi.AnyOutput)
}

// Dataset description.
func (o FileShareDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShareDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string).
func (o FileShareDatasetResponseOutput) FileFilter() pulumi.AnyOutput {
	return o.ApplyT(func(v FileShareDatasetResponse) interface{} { return v.FileFilter }).(pulumi.AnyOutput)
}

// The name of the on-premises file system. Type: string (or Expression with resultType string).
func (o FileShareDatasetResponseOutput) FileName() pulumi.AnyOutput {
	return o.ApplyT(func(v FileShareDatasetResponse) interface{} { return v.FileName }).(pulumi.AnyOutput)
}

// The path of the on-premises file system. Type: string (or Expression with resultType string).
func (o FileShareDatasetResponseOutput) FolderPath() pulumi.AnyOutput {
	return o.ApplyT(func(v FileShareDatasetResponse) interface{} { return v.FolderPath }).(pulumi.AnyOutput)
}

// The format of the files.
func (o FileShareDatasetResponseOutput) Format() pulumi.AnyOutput {
	return o.ApplyT(func(v FileShareDatasetResponse) interface{} { return v.Format }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o FileShareDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v FileShareDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o FileShareDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v FileShareDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o FileShareDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v FileShareDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'FileShare'.
func (o FileShareDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FileShareDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity file system sink.
type FileSystemSink struct {
	// The type of copy behavior for copy sink.
	CopyBehavior interface{} `pulumi:"copyBehavior"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'FileSystemSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// FileSystemSinkInput is an input type that accepts FileSystemSinkArgs and FileSystemSinkOutput values.
// You can construct a concrete instance of `FileSystemSinkInput` via:
//
//          FileSystemSinkArgs{...}
type FileSystemSinkInput interface {
	pulumi.Input

	ToFileSystemSinkOutput() FileSystemSinkOutput
	ToFileSystemSinkOutputWithContext(context.Context) FileSystemSinkOutput
}

// A copy activity file system sink.
type FileSystemSinkArgs struct {
	// The type of copy behavior for copy sink.
	CopyBehavior pulumi.Input `pulumi:"copyBehavior"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'FileSystemSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (FileSystemSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemSink)(nil)).Elem()
}

func (i FileSystemSinkArgs) ToFileSystemSinkOutput() FileSystemSinkOutput {
	return i.ToFileSystemSinkOutputWithContext(context.Background())
}

func (i FileSystemSinkArgs) ToFileSystemSinkOutputWithContext(ctx context.Context) FileSystemSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemSinkOutput)
}

// A copy activity file system sink.
type FileSystemSinkOutput struct{ *pulumi.OutputState }

func (FileSystemSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemSink)(nil)).Elem()
}

func (o FileSystemSinkOutput) ToFileSystemSinkOutput() FileSystemSinkOutput {
	return o
}

func (o FileSystemSinkOutput) ToFileSystemSinkOutputWithContext(ctx context.Context) FileSystemSinkOutput {
	return o
}

// The type of copy behavior for copy sink.
func (o FileSystemSinkOutput) CopyBehavior() pulumi.AnyOutput {
	return o.ApplyT(func(v FileSystemSink) interface{} { return v.CopyBehavior }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o FileSystemSinkOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v FileSystemSink) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o FileSystemSinkOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v FileSystemSink) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'FileSystemSink'.
func (o FileSystemSinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemSink) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o FileSystemSinkOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v FileSystemSink) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o FileSystemSinkOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v FileSystemSink) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity file system sink.
type FileSystemSinkResponse struct {
	// The type of copy behavior for copy sink.
	CopyBehavior interface{} `pulumi:"copyBehavior"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'FileSystemSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// FileSystemSinkResponseInput is an input type that accepts FileSystemSinkResponseArgs and FileSystemSinkResponseOutput values.
// You can construct a concrete instance of `FileSystemSinkResponseInput` via:
//
//          FileSystemSinkResponseArgs{...}
type FileSystemSinkResponseInput interface {
	pulumi.Input

	ToFileSystemSinkResponseOutput() FileSystemSinkResponseOutput
	ToFileSystemSinkResponseOutputWithContext(context.Context) FileSystemSinkResponseOutput
}

// A copy activity file system sink.
type FileSystemSinkResponseArgs struct {
	// The type of copy behavior for copy sink.
	CopyBehavior pulumi.Input `pulumi:"copyBehavior"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'FileSystemSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (FileSystemSinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemSinkResponse)(nil)).Elem()
}

func (i FileSystemSinkResponseArgs) ToFileSystemSinkResponseOutput() FileSystemSinkResponseOutput {
	return i.ToFileSystemSinkResponseOutputWithContext(context.Background())
}

func (i FileSystemSinkResponseArgs) ToFileSystemSinkResponseOutputWithContext(ctx context.Context) FileSystemSinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemSinkResponseOutput)
}

// A copy activity file system sink.
type FileSystemSinkResponseOutput struct{ *pulumi.OutputState }

func (FileSystemSinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemSinkResponse)(nil)).Elem()
}

func (o FileSystemSinkResponseOutput) ToFileSystemSinkResponseOutput() FileSystemSinkResponseOutput {
	return o
}

func (o FileSystemSinkResponseOutput) ToFileSystemSinkResponseOutputWithContext(ctx context.Context) FileSystemSinkResponseOutput {
	return o
}

// The type of copy behavior for copy sink.
func (o FileSystemSinkResponseOutput) CopyBehavior() pulumi.AnyOutput {
	return o.ApplyT(func(v FileSystemSinkResponse) interface{} { return v.CopyBehavior }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o FileSystemSinkResponseOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v FileSystemSinkResponse) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o FileSystemSinkResponseOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v FileSystemSinkResponse) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'FileSystemSink'.
func (o FileSystemSinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemSinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o FileSystemSinkResponseOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v FileSystemSinkResponse) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o FileSystemSinkResponseOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v FileSystemSinkResponse) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity file system source.
type FileSystemSource struct {
	// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
	Recursive interface{} `pulumi:"recursive"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'FileSystemSource'.
	Type string `pulumi:"type"`
}

// FileSystemSourceInput is an input type that accepts FileSystemSourceArgs and FileSystemSourceOutput values.
// You can construct a concrete instance of `FileSystemSourceInput` via:
//
//          FileSystemSourceArgs{...}
type FileSystemSourceInput interface {
	pulumi.Input

	ToFileSystemSourceOutput() FileSystemSourceOutput
	ToFileSystemSourceOutputWithContext(context.Context) FileSystemSourceOutput
}

// A copy activity file system source.
type FileSystemSourceArgs struct {
	// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
	Recursive pulumi.Input `pulumi:"recursive"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'FileSystemSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FileSystemSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemSource)(nil)).Elem()
}

func (i FileSystemSourceArgs) ToFileSystemSourceOutput() FileSystemSourceOutput {
	return i.ToFileSystemSourceOutputWithContext(context.Background())
}

func (i FileSystemSourceArgs) ToFileSystemSourceOutputWithContext(ctx context.Context) FileSystemSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemSourceOutput)
}

// A copy activity file system source.
type FileSystemSourceOutput struct{ *pulumi.OutputState }

func (FileSystemSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemSource)(nil)).Elem()
}

func (o FileSystemSourceOutput) ToFileSystemSourceOutput() FileSystemSourceOutput {
	return o
}

func (o FileSystemSourceOutput) ToFileSystemSourceOutputWithContext(ctx context.Context) FileSystemSourceOutput {
	return o
}

// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
func (o FileSystemSourceOutput) Recursive() pulumi.AnyOutput {
	return o.ApplyT(func(v FileSystemSource) interface{} { return v.Recursive }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o FileSystemSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v FileSystemSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o FileSystemSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v FileSystemSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'FileSystemSource'.
func (o FileSystemSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity file system source.
type FileSystemSourceResponse struct {
	// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
	Recursive interface{} `pulumi:"recursive"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'FileSystemSource'.
	Type string `pulumi:"type"`
}

// FileSystemSourceResponseInput is an input type that accepts FileSystemSourceResponseArgs and FileSystemSourceResponseOutput values.
// You can construct a concrete instance of `FileSystemSourceResponseInput` via:
//
//          FileSystemSourceResponseArgs{...}
type FileSystemSourceResponseInput interface {
	pulumi.Input

	ToFileSystemSourceResponseOutput() FileSystemSourceResponseOutput
	ToFileSystemSourceResponseOutputWithContext(context.Context) FileSystemSourceResponseOutput
}

// A copy activity file system source.
type FileSystemSourceResponseArgs struct {
	// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
	Recursive pulumi.Input `pulumi:"recursive"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'FileSystemSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FileSystemSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemSourceResponse)(nil)).Elem()
}

func (i FileSystemSourceResponseArgs) ToFileSystemSourceResponseOutput() FileSystemSourceResponseOutput {
	return i.ToFileSystemSourceResponseOutputWithContext(context.Background())
}

func (i FileSystemSourceResponseArgs) ToFileSystemSourceResponseOutputWithContext(ctx context.Context) FileSystemSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemSourceResponseOutput)
}

// A copy activity file system source.
type FileSystemSourceResponseOutput struct{ *pulumi.OutputState }

func (FileSystemSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemSourceResponse)(nil)).Elem()
}

func (o FileSystemSourceResponseOutput) ToFileSystemSourceResponseOutput() FileSystemSourceResponseOutput {
	return o
}

func (o FileSystemSourceResponseOutput) ToFileSystemSourceResponseOutputWithContext(ctx context.Context) FileSystemSourceResponseOutput {
	return o
}

// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
func (o FileSystemSourceResponseOutput) Recursive() pulumi.AnyOutput {
	return o.ApplyT(func(v FileSystemSourceResponse) interface{} { return v.Recursive }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o FileSystemSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v FileSystemSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o FileSystemSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v FileSystemSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'FileSystemSource'.
func (o FileSystemSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Filter and return results from input array based on the conditions.
type FilterActivity struct {
	// Condition to be used for filtering the input.
	Condition Expression `pulumi:"condition"`
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Input array on which filter should be applied.
	Items Expression `pulumi:"items"`
	// Activity name.
	Name string `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type string `pulumi:"type"`
}

// FilterActivityInput is an input type that accepts FilterActivityArgs and FilterActivityOutput values.
// You can construct a concrete instance of `FilterActivityInput` via:
//
//          FilterActivityArgs{...}
type FilterActivityInput interface {
	pulumi.Input

	ToFilterActivityOutput() FilterActivityOutput
	ToFilterActivityOutputWithContext(context.Context) FilterActivityOutput
}

// Filter and return results from input array based on the conditions.
type FilterActivityArgs struct {
	// Condition to be used for filtering the input.
	Condition ExpressionInput `pulumi:"condition"`
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Input array on which filter should be applied.
	Items ExpressionInput `pulumi:"items"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FilterActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterActivity)(nil)).Elem()
}

func (i FilterActivityArgs) ToFilterActivityOutput() FilterActivityOutput {
	return i.ToFilterActivityOutputWithContext(context.Background())
}

func (i FilterActivityArgs) ToFilterActivityOutputWithContext(ctx context.Context) FilterActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterActivityOutput)
}

// Filter and return results from input array based on the conditions.
type FilterActivityOutput struct{ *pulumi.OutputState }

func (FilterActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterActivity)(nil)).Elem()
}

func (o FilterActivityOutput) ToFilterActivityOutput() FilterActivityOutput {
	return o
}

func (o FilterActivityOutput) ToFilterActivityOutputWithContext(ctx context.Context) FilterActivityOutput {
	return o
}

// Condition to be used for filtering the input.
func (o FilterActivityOutput) Condition() ExpressionOutput {
	return o.ApplyT(func(v FilterActivity) Expression { return v.Condition }).(ExpressionOutput)
}

// Activity depends on condition.
func (o FilterActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v FilterActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o FilterActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Input array on which filter should be applied.
func (o FilterActivityOutput) Items() ExpressionOutput {
	return o.ApplyT(func(v FilterActivity) Expression { return v.Items }).(ExpressionOutput)
}

// Activity name.
func (o FilterActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FilterActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Type of activity.
// Expected value is 'Container'.
func (o FilterActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FilterActivity) string { return v.Type }).(pulumi.StringOutput)
}

// Filter and return results from input array based on the conditions.
type FilterActivityResponse struct {
	// Condition to be used for filtering the input.
	Condition ExpressionResponse `pulumi:"condition"`
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Input array on which filter should be applied.
	Items ExpressionResponse `pulumi:"items"`
	// Activity name.
	Name string `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type string `pulumi:"type"`
}

// FilterActivityResponseInput is an input type that accepts FilterActivityResponseArgs and FilterActivityResponseOutput values.
// You can construct a concrete instance of `FilterActivityResponseInput` via:
//
//          FilterActivityResponseArgs{...}
type FilterActivityResponseInput interface {
	pulumi.Input

	ToFilterActivityResponseOutput() FilterActivityResponseOutput
	ToFilterActivityResponseOutputWithContext(context.Context) FilterActivityResponseOutput
}

// Filter and return results from input array based on the conditions.
type FilterActivityResponseArgs struct {
	// Condition to be used for filtering the input.
	Condition ExpressionResponseInput `pulumi:"condition"`
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Input array on which filter should be applied.
	Items ExpressionResponseInput `pulumi:"items"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FilterActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterActivityResponse)(nil)).Elem()
}

func (i FilterActivityResponseArgs) ToFilterActivityResponseOutput() FilterActivityResponseOutput {
	return i.ToFilterActivityResponseOutputWithContext(context.Background())
}

func (i FilterActivityResponseArgs) ToFilterActivityResponseOutputWithContext(ctx context.Context) FilterActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterActivityResponseOutput)
}

// Filter and return results from input array based on the conditions.
type FilterActivityResponseOutput struct{ *pulumi.OutputState }

func (FilterActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterActivityResponse)(nil)).Elem()
}

func (o FilterActivityResponseOutput) ToFilterActivityResponseOutput() FilterActivityResponseOutput {
	return o
}

func (o FilterActivityResponseOutput) ToFilterActivityResponseOutputWithContext(ctx context.Context) FilterActivityResponseOutput {
	return o
}

// Condition to be used for filtering the input.
func (o FilterActivityResponseOutput) Condition() ExpressionResponseOutput {
	return o.ApplyT(func(v FilterActivityResponse) ExpressionResponse { return v.Condition }).(ExpressionResponseOutput)
}

// Activity depends on condition.
func (o FilterActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v FilterActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o FilterActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Input array on which filter should be applied.
func (o FilterActivityResponseOutput) Items() ExpressionResponseOutput {
	return o.ApplyT(func(v FilterActivityResponse) ExpressionResponse { return v.Items }).(ExpressionResponseOutput)
}

// Activity name.
func (o FilterActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FilterActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Type of activity.
// Expected value is 'Container'.
func (o FilterActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FilterActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// This activity is used for iterating over a collection and execute given activities.
type ForEachActivity struct {
	// List of activities to execute .
	Activities []interface{} `pulumi:"activities"`
	// Batch count to be used for controlling the number of parallel execution (when isSequential is set to false).
	BatchCount *int `pulumi:"batchCount"`
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Should the loop be executed in sequence or in parallel (max 50)
	IsSequential *bool `pulumi:"isSequential"`
	// Collection to iterate.
	Items Expression `pulumi:"items"`
	// Activity name.
	Name string `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type string `pulumi:"type"`
}

// ForEachActivityInput is an input type that accepts ForEachActivityArgs and ForEachActivityOutput values.
// You can construct a concrete instance of `ForEachActivityInput` via:
//
//          ForEachActivityArgs{...}
type ForEachActivityInput interface {
	pulumi.Input

	ToForEachActivityOutput() ForEachActivityOutput
	ToForEachActivityOutputWithContext(context.Context) ForEachActivityOutput
}

// This activity is used for iterating over a collection and execute given activities.
type ForEachActivityArgs struct {
	// List of activities to execute .
	Activities pulumi.ArrayInput `pulumi:"activities"`
	// Batch count to be used for controlling the number of parallel execution (when isSequential is set to false).
	BatchCount pulumi.IntPtrInput `pulumi:"batchCount"`
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Should the loop be executed in sequence or in parallel (max 50)
	IsSequential pulumi.BoolPtrInput `pulumi:"isSequential"`
	// Collection to iterate.
	Items ExpressionInput `pulumi:"items"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ForEachActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForEachActivity)(nil)).Elem()
}

func (i ForEachActivityArgs) ToForEachActivityOutput() ForEachActivityOutput {
	return i.ToForEachActivityOutputWithContext(context.Background())
}

func (i ForEachActivityArgs) ToForEachActivityOutputWithContext(ctx context.Context) ForEachActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForEachActivityOutput)
}

// This activity is used for iterating over a collection and execute given activities.
type ForEachActivityOutput struct{ *pulumi.OutputState }

func (ForEachActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForEachActivity)(nil)).Elem()
}

func (o ForEachActivityOutput) ToForEachActivityOutput() ForEachActivityOutput {
	return o
}

func (o ForEachActivityOutput) ToForEachActivityOutputWithContext(ctx context.Context) ForEachActivityOutput {
	return o
}

// List of activities to execute .
func (o ForEachActivityOutput) Activities() pulumi.ArrayOutput {
	return o.ApplyT(func(v ForEachActivity) []interface{} { return v.Activities }).(pulumi.ArrayOutput)
}

// Batch count to be used for controlling the number of parallel execution (when isSequential is set to false).
func (o ForEachActivityOutput) BatchCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ForEachActivity) *int { return v.BatchCount }).(pulumi.IntPtrOutput)
}

// Activity depends on condition.
func (o ForEachActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v ForEachActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o ForEachActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ForEachActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Should the loop be executed in sequence or in parallel (max 50)
func (o ForEachActivityOutput) IsSequential() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ForEachActivity) *bool { return v.IsSequential }).(pulumi.BoolPtrOutput)
}

// Collection to iterate.
func (o ForEachActivityOutput) Items() ExpressionOutput {
	return o.ApplyT(func(v ForEachActivity) Expression { return v.Items }).(ExpressionOutput)
}

// Activity name.
func (o ForEachActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ForEachActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Type of activity.
// Expected value is 'Container'.
func (o ForEachActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ForEachActivity) string { return v.Type }).(pulumi.StringOutput)
}

// This activity is used for iterating over a collection and execute given activities.
type ForEachActivityResponse struct {
	// List of activities to execute .
	Activities []interface{} `pulumi:"activities"`
	// Batch count to be used for controlling the number of parallel execution (when isSequential is set to false).
	BatchCount *int `pulumi:"batchCount"`
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Should the loop be executed in sequence or in parallel (max 50)
	IsSequential *bool `pulumi:"isSequential"`
	// Collection to iterate.
	Items ExpressionResponse `pulumi:"items"`
	// Activity name.
	Name string `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type string `pulumi:"type"`
}

// ForEachActivityResponseInput is an input type that accepts ForEachActivityResponseArgs and ForEachActivityResponseOutput values.
// You can construct a concrete instance of `ForEachActivityResponseInput` via:
//
//          ForEachActivityResponseArgs{...}
type ForEachActivityResponseInput interface {
	pulumi.Input

	ToForEachActivityResponseOutput() ForEachActivityResponseOutput
	ToForEachActivityResponseOutputWithContext(context.Context) ForEachActivityResponseOutput
}

// This activity is used for iterating over a collection and execute given activities.
type ForEachActivityResponseArgs struct {
	// List of activities to execute .
	Activities pulumi.ArrayInput `pulumi:"activities"`
	// Batch count to be used for controlling the number of parallel execution (when isSequential is set to false).
	BatchCount pulumi.IntPtrInput `pulumi:"batchCount"`
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Should the loop be executed in sequence or in parallel (max 50)
	IsSequential pulumi.BoolPtrInput `pulumi:"isSequential"`
	// Collection to iterate.
	Items ExpressionResponseInput `pulumi:"items"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ForEachActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForEachActivityResponse)(nil)).Elem()
}

func (i ForEachActivityResponseArgs) ToForEachActivityResponseOutput() ForEachActivityResponseOutput {
	return i.ToForEachActivityResponseOutputWithContext(context.Background())
}

func (i ForEachActivityResponseArgs) ToForEachActivityResponseOutputWithContext(ctx context.Context) ForEachActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForEachActivityResponseOutput)
}

// This activity is used for iterating over a collection and execute given activities.
type ForEachActivityResponseOutput struct{ *pulumi.OutputState }

func (ForEachActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForEachActivityResponse)(nil)).Elem()
}

func (o ForEachActivityResponseOutput) ToForEachActivityResponseOutput() ForEachActivityResponseOutput {
	return o
}

func (o ForEachActivityResponseOutput) ToForEachActivityResponseOutputWithContext(ctx context.Context) ForEachActivityResponseOutput {
	return o
}

// List of activities to execute .
func (o ForEachActivityResponseOutput) Activities() pulumi.ArrayOutput {
	return o.ApplyT(func(v ForEachActivityResponse) []interface{} { return v.Activities }).(pulumi.ArrayOutput)
}

// Batch count to be used for controlling the number of parallel execution (when isSequential is set to false).
func (o ForEachActivityResponseOutput) BatchCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ForEachActivityResponse) *int { return v.BatchCount }).(pulumi.IntPtrOutput)
}

// Activity depends on condition.
func (o ForEachActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v ForEachActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o ForEachActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ForEachActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Should the loop be executed in sequence or in parallel (max 50)
func (o ForEachActivityResponseOutput) IsSequential() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ForEachActivityResponse) *bool { return v.IsSequential }).(pulumi.BoolPtrOutput)
}

// Collection to iterate.
func (o ForEachActivityResponseOutput) Items() ExpressionResponseOutput {
	return o.ApplyT(func(v ForEachActivityResponse) ExpressionResponse { return v.Items }).(ExpressionResponseOutput)
}

// Activity name.
func (o ForEachActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ForEachActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Type of activity.
// Expected value is 'Container'.
func (o ForEachActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ForEachActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A FTP server Linked Service.
type FtpServerLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication type to be used to connect to the FTP server.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// If true, validate the FTP server SSL certificate when connect over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
	EnableServerCertificateValidation interface{} `pulumi:"enableServerCertificateValidation"`
	// If true, connect to the FTP server over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
	EnableSsl interface{} `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Host name of the FTP server. Type: string (or Expression with resultType string).
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Password to logon the FTP server.
	Password interface{} `pulumi:"password"`
	// The TCP port number that the FTP server uses to listen for client connections. Default value is 21. Type: integer (or Expression with resultType integer), minimum: 0.
	Port interface{} `pulumi:"port"`
	// Type of linked service.
	// Expected value is 'FtpServer'.
	Type string `pulumi:"type"`
	// Username to logon the FTP server. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// FtpServerLinkedServiceInput is an input type that accepts FtpServerLinkedServiceArgs and FtpServerLinkedServiceOutput values.
// You can construct a concrete instance of `FtpServerLinkedServiceInput` via:
//
//          FtpServerLinkedServiceArgs{...}
type FtpServerLinkedServiceInput interface {
	pulumi.Input

	ToFtpServerLinkedServiceOutput() FtpServerLinkedServiceOutput
	ToFtpServerLinkedServiceOutputWithContext(context.Context) FtpServerLinkedServiceOutput
}

// A FTP server Linked Service.
type FtpServerLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication type to be used to connect to the FTP server.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// If true, validate the FTP server SSL certificate when connect over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
	EnableServerCertificateValidation pulumi.Input `pulumi:"enableServerCertificateValidation"`
	// If true, connect to the FTP server over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
	EnableSsl pulumi.Input `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Host name of the FTP server. Type: string (or Expression with resultType string).
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Password to logon the FTP server.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port number that the FTP server uses to listen for client connections. Default value is 21. Type: integer (or Expression with resultType integer), minimum: 0.
	Port pulumi.Input `pulumi:"port"`
	// Type of linked service.
	// Expected value is 'FtpServer'.
	Type pulumi.StringInput `pulumi:"type"`
	// Username to logon the FTP server. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (FtpServerLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FtpServerLinkedService)(nil)).Elem()
}

func (i FtpServerLinkedServiceArgs) ToFtpServerLinkedServiceOutput() FtpServerLinkedServiceOutput {
	return i.ToFtpServerLinkedServiceOutputWithContext(context.Background())
}

func (i FtpServerLinkedServiceArgs) ToFtpServerLinkedServiceOutputWithContext(ctx context.Context) FtpServerLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FtpServerLinkedServiceOutput)
}

// A FTP server Linked Service.
type FtpServerLinkedServiceOutput struct{ *pulumi.OutputState }

func (FtpServerLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FtpServerLinkedService)(nil)).Elem()
}

func (o FtpServerLinkedServiceOutput) ToFtpServerLinkedServiceOutput() FtpServerLinkedServiceOutput {
	return o
}

func (o FtpServerLinkedServiceOutput) ToFtpServerLinkedServiceOutputWithContext(ctx context.Context) FtpServerLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o FtpServerLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v FtpServerLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication type to be used to connect to the FTP server.
func (o FtpServerLinkedServiceOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FtpServerLinkedService) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The integration runtime reference.
func (o FtpServerLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v FtpServerLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o FtpServerLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FtpServerLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If true, validate the FTP server SSL certificate when connect over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
func (o FtpServerLinkedServiceOutput) EnableServerCertificateValidation() pulumi.AnyOutput {
	return o.ApplyT(func(v FtpServerLinkedService) interface{} { return v.EnableServerCertificateValidation }).(pulumi.AnyOutput)
}

// If true, connect to the FTP server over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
func (o FtpServerLinkedServiceOutput) EnableSsl() pulumi.AnyOutput {
	return o.ApplyT(func(v FtpServerLinkedService) interface{} { return v.EnableSsl }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o FtpServerLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v FtpServerLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Host name of the FTP server. Type: string (or Expression with resultType string).
func (o FtpServerLinkedServiceOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v FtpServerLinkedService) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o FtpServerLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v FtpServerLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Password to logon the FTP server.
func (o FtpServerLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v FtpServerLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port number that the FTP server uses to listen for client connections. Default value is 21. Type: integer (or Expression with resultType integer), minimum: 0.
func (o FtpServerLinkedServiceOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v FtpServerLinkedService) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'FtpServer'.
func (o FtpServerLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FtpServerLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Username to logon the FTP server. Type: string (or Expression with resultType string).
func (o FtpServerLinkedServiceOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v FtpServerLinkedService) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// A FTP server Linked Service.
type FtpServerLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication type to be used to connect to the FTP server.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// If true, validate the FTP server SSL certificate when connect over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
	EnableServerCertificateValidation interface{} `pulumi:"enableServerCertificateValidation"`
	// If true, connect to the FTP server over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
	EnableSsl interface{} `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Host name of the FTP server. Type: string (or Expression with resultType string).
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Password to logon the FTP server.
	Password interface{} `pulumi:"password"`
	// The TCP port number that the FTP server uses to listen for client connections. Default value is 21. Type: integer (or Expression with resultType integer), minimum: 0.
	Port interface{} `pulumi:"port"`
	// Type of linked service.
	// Expected value is 'FtpServer'.
	Type string `pulumi:"type"`
	// Username to logon the FTP server. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// FtpServerLinkedServiceResponseInput is an input type that accepts FtpServerLinkedServiceResponseArgs and FtpServerLinkedServiceResponseOutput values.
// You can construct a concrete instance of `FtpServerLinkedServiceResponseInput` via:
//
//          FtpServerLinkedServiceResponseArgs{...}
type FtpServerLinkedServiceResponseInput interface {
	pulumi.Input

	ToFtpServerLinkedServiceResponseOutput() FtpServerLinkedServiceResponseOutput
	ToFtpServerLinkedServiceResponseOutputWithContext(context.Context) FtpServerLinkedServiceResponseOutput
}

// A FTP server Linked Service.
type FtpServerLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication type to be used to connect to the FTP server.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// If true, validate the FTP server SSL certificate when connect over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
	EnableServerCertificateValidation pulumi.Input `pulumi:"enableServerCertificateValidation"`
	// If true, connect to the FTP server over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
	EnableSsl pulumi.Input `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Host name of the FTP server. Type: string (or Expression with resultType string).
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Password to logon the FTP server.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port number that the FTP server uses to listen for client connections. Default value is 21. Type: integer (or Expression with resultType integer), minimum: 0.
	Port pulumi.Input `pulumi:"port"`
	// Type of linked service.
	// Expected value is 'FtpServer'.
	Type pulumi.StringInput `pulumi:"type"`
	// Username to logon the FTP server. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (FtpServerLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FtpServerLinkedServiceResponse)(nil)).Elem()
}

func (i FtpServerLinkedServiceResponseArgs) ToFtpServerLinkedServiceResponseOutput() FtpServerLinkedServiceResponseOutput {
	return i.ToFtpServerLinkedServiceResponseOutputWithContext(context.Background())
}

func (i FtpServerLinkedServiceResponseArgs) ToFtpServerLinkedServiceResponseOutputWithContext(ctx context.Context) FtpServerLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FtpServerLinkedServiceResponseOutput)
}

// A FTP server Linked Service.
type FtpServerLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (FtpServerLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FtpServerLinkedServiceResponse)(nil)).Elem()
}

func (o FtpServerLinkedServiceResponseOutput) ToFtpServerLinkedServiceResponseOutput() FtpServerLinkedServiceResponseOutput {
	return o
}

func (o FtpServerLinkedServiceResponseOutput) ToFtpServerLinkedServiceResponseOutputWithContext(ctx context.Context) FtpServerLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o FtpServerLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v FtpServerLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication type to be used to connect to the FTP server.
func (o FtpServerLinkedServiceResponseOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FtpServerLinkedServiceResponse) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The integration runtime reference.
func (o FtpServerLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v FtpServerLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o FtpServerLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FtpServerLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If true, validate the FTP server SSL certificate when connect over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
func (o FtpServerLinkedServiceResponseOutput) EnableServerCertificateValidation() pulumi.AnyOutput {
	return o.ApplyT(func(v FtpServerLinkedServiceResponse) interface{} { return v.EnableServerCertificateValidation }).(pulumi.AnyOutput)
}

// If true, connect to the FTP server over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
func (o FtpServerLinkedServiceResponseOutput) EnableSsl() pulumi.AnyOutput {
	return o.ApplyT(func(v FtpServerLinkedServiceResponse) interface{} { return v.EnableSsl }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o FtpServerLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v FtpServerLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Host name of the FTP server. Type: string (or Expression with resultType string).
func (o FtpServerLinkedServiceResponseOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v FtpServerLinkedServiceResponse) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o FtpServerLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v FtpServerLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Password to logon the FTP server.
func (o FtpServerLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v FtpServerLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port number that the FTP server uses to listen for client connections. Default value is 21. Type: integer (or Expression with resultType integer), minimum: 0.
func (o FtpServerLinkedServiceResponseOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v FtpServerLinkedServiceResponse) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'FtpServer'.
func (o FtpServerLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FtpServerLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Username to logon the FTP server. Type: string (or Expression with resultType string).
func (o FtpServerLinkedServiceResponseOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v FtpServerLinkedServiceResponse) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// Activity to get metadata of dataset
type GetMetadataActivity struct {
	// GetMetadata activity dataset reference.
	Dataset DatasetReference `pulumi:"dataset"`
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Fields of metadata to get from dataset.
	FieldList []interface{} `pulumi:"fieldList"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReference `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicy `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// GetMetadataActivityInput is an input type that accepts GetMetadataActivityArgs and GetMetadataActivityOutput values.
// You can construct a concrete instance of `GetMetadataActivityInput` via:
//
//          GetMetadataActivityArgs{...}
type GetMetadataActivityInput interface {
	pulumi.Input

	ToGetMetadataActivityOutput() GetMetadataActivityOutput
	ToGetMetadataActivityOutputWithContext(context.Context) GetMetadataActivityOutput
}

// Activity to get metadata of dataset
type GetMetadataActivityArgs struct {
	// GetMetadata activity dataset reference.
	Dataset DatasetReferenceInput `pulumi:"dataset"`
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Fields of metadata to get from dataset.
	FieldList pulumi.ArrayInput `pulumi:"fieldList"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferencePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyPtrInput `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMetadataActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetadataActivity)(nil)).Elem()
}

func (i GetMetadataActivityArgs) ToGetMetadataActivityOutput() GetMetadataActivityOutput {
	return i.ToGetMetadataActivityOutputWithContext(context.Background())
}

func (i GetMetadataActivityArgs) ToGetMetadataActivityOutputWithContext(ctx context.Context) GetMetadataActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetadataActivityOutput)
}

// Activity to get metadata of dataset
type GetMetadataActivityOutput struct{ *pulumi.OutputState }

func (GetMetadataActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetadataActivity)(nil)).Elem()
}

func (o GetMetadataActivityOutput) ToGetMetadataActivityOutput() GetMetadataActivityOutput {
	return o
}

func (o GetMetadataActivityOutput) ToGetMetadataActivityOutputWithContext(ctx context.Context) GetMetadataActivityOutput {
	return o
}

// GetMetadata activity dataset reference.
func (o GetMetadataActivityOutput) Dataset() DatasetReferenceOutput {
	return o.ApplyT(func(v GetMetadataActivity) DatasetReference { return v.Dataset }).(DatasetReferenceOutput)
}

// Activity depends on condition.
func (o GetMetadataActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v GetMetadataActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o GetMetadataActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMetadataActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Fields of metadata to get from dataset.
func (o GetMetadataActivityOutput) FieldList() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetMetadataActivity) []interface{} { return v.FieldList }).(pulumi.ArrayOutput)
}

// Linked service reference.
func (o GetMetadataActivityOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v GetMetadataActivity) *LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// Activity name.
func (o GetMetadataActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetadataActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o GetMetadataActivityOutput) Policy() ActivityPolicyPtrOutput {
	return o.ApplyT(func(v GetMetadataActivity) *ActivityPolicy { return v.Policy }).(ActivityPolicyPtrOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o GetMetadataActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetadataActivity) string { return v.Type }).(pulumi.StringOutput)
}

// Activity to get metadata of dataset
type GetMetadataActivityResponse struct {
	// GetMetadata activity dataset reference.
	Dataset DatasetReferenceResponse `pulumi:"dataset"`
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Fields of metadata to get from dataset.
	FieldList []interface{} `pulumi:"fieldList"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicyResponse `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// GetMetadataActivityResponseInput is an input type that accepts GetMetadataActivityResponseArgs and GetMetadataActivityResponseOutput values.
// You can construct a concrete instance of `GetMetadataActivityResponseInput` via:
//
//          GetMetadataActivityResponseArgs{...}
type GetMetadataActivityResponseInput interface {
	pulumi.Input

	ToGetMetadataActivityResponseOutput() GetMetadataActivityResponseOutput
	ToGetMetadataActivityResponseOutputWithContext(context.Context) GetMetadataActivityResponseOutput
}

// Activity to get metadata of dataset
type GetMetadataActivityResponseArgs struct {
	// GetMetadata activity dataset reference.
	Dataset DatasetReferenceResponseInput `pulumi:"dataset"`
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Fields of metadata to get from dataset.
	FieldList pulumi.ArrayInput `pulumi:"fieldList"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyResponsePtrInput `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMetadataActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetadataActivityResponse)(nil)).Elem()
}

func (i GetMetadataActivityResponseArgs) ToGetMetadataActivityResponseOutput() GetMetadataActivityResponseOutput {
	return i.ToGetMetadataActivityResponseOutputWithContext(context.Background())
}

func (i GetMetadataActivityResponseArgs) ToGetMetadataActivityResponseOutputWithContext(ctx context.Context) GetMetadataActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetadataActivityResponseOutput)
}

// Activity to get metadata of dataset
type GetMetadataActivityResponseOutput struct{ *pulumi.OutputState }

func (GetMetadataActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetadataActivityResponse)(nil)).Elem()
}

func (o GetMetadataActivityResponseOutput) ToGetMetadataActivityResponseOutput() GetMetadataActivityResponseOutput {
	return o
}

func (o GetMetadataActivityResponseOutput) ToGetMetadataActivityResponseOutputWithContext(ctx context.Context) GetMetadataActivityResponseOutput {
	return o
}

// GetMetadata activity dataset reference.
func (o GetMetadataActivityResponseOutput) Dataset() DatasetReferenceResponseOutput {
	return o.ApplyT(func(v GetMetadataActivityResponse) DatasetReferenceResponse { return v.Dataset }).(DatasetReferenceResponseOutput)
}

// Activity depends on condition.
func (o GetMetadataActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v GetMetadataActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o GetMetadataActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMetadataActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Fields of metadata to get from dataset.
func (o GetMetadataActivityResponseOutput) FieldList() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetMetadataActivityResponse) []interface{} { return v.FieldList }).(pulumi.ArrayOutput)
}

// Linked service reference.
func (o GetMetadataActivityResponseOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v GetMetadataActivityResponse) *LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponsePtrOutput)
}

// Activity name.
func (o GetMetadataActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetadataActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o GetMetadataActivityResponseOutput) Policy() ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v GetMetadataActivityResponse) *ActivityPolicyResponse { return v.Policy }).(ActivityPolicyResponsePtrOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o GetMetadataActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetadataActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Google BigQuery service linked service.
type GoogleBigQueryLinkedService struct {
	// A comma-separated list of public BigQuery projects to access.
	AdditionalProjects interface{} `pulumi:"additionalProjects"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.
	AuthenticationType string `pulumi:"authenticationType"`
	// The client id of the google application used to acquire the refresh token.
	ClientId interface{} `pulumi:"clientId"`
	// The client secret of the google application used to acquire the refresh token.
	ClientSecret interface{} `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.
	Email interface{} `pulumi:"email"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.
	KeyFilePath interface{} `pulumi:"keyFilePath"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The default BigQuery project to query against.
	Project interface{} `pulumi:"project"`
	// The refresh token obtained from Google for authorizing access to BigQuery for UserAuthentication.
	RefreshToken interface{} `pulumi:"refreshToken"`
	// Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false.
	RequestGoogleDriveScope interface{} `pulumi:"requestGoogleDriveScope"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath interface{} `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'GoogleBigQuery'.
	Type string `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore interface{} `pulumi:"useSystemTrustStore"`
}

// GoogleBigQueryLinkedServiceInput is an input type that accepts GoogleBigQueryLinkedServiceArgs and GoogleBigQueryLinkedServiceOutput values.
// You can construct a concrete instance of `GoogleBigQueryLinkedServiceInput` via:
//
//          GoogleBigQueryLinkedServiceArgs{...}
type GoogleBigQueryLinkedServiceInput interface {
	pulumi.Input

	ToGoogleBigQueryLinkedServiceOutput() GoogleBigQueryLinkedServiceOutput
	ToGoogleBigQueryLinkedServiceOutputWithContext(context.Context) GoogleBigQueryLinkedServiceOutput
}

// Google BigQuery service linked service.
type GoogleBigQueryLinkedServiceArgs struct {
	// A comma-separated list of public BigQuery projects to access.
	AdditionalProjects pulumi.Input `pulumi:"additionalProjects"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The client id of the google application used to acquire the refresh token.
	ClientId pulumi.Input `pulumi:"clientId"`
	// The client secret of the google application used to acquire the refresh token.
	ClientSecret pulumi.Input `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.
	Email pulumi.Input `pulumi:"email"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.
	KeyFilePath pulumi.Input `pulumi:"keyFilePath"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The default BigQuery project to query against.
	Project pulumi.Input `pulumi:"project"`
	// The refresh token obtained from Google for authorizing access to BigQuery for UserAuthentication.
	RefreshToken pulumi.Input `pulumi:"refreshToken"`
	// Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false.
	RequestGoogleDriveScope pulumi.Input `pulumi:"requestGoogleDriveScope"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath pulumi.Input `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'GoogleBigQuery'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore pulumi.Input `pulumi:"useSystemTrustStore"`
}

func (GoogleBigQueryLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleBigQueryLinkedService)(nil)).Elem()
}

func (i GoogleBigQueryLinkedServiceArgs) ToGoogleBigQueryLinkedServiceOutput() GoogleBigQueryLinkedServiceOutput {
	return i.ToGoogleBigQueryLinkedServiceOutputWithContext(context.Background())
}

func (i GoogleBigQueryLinkedServiceArgs) ToGoogleBigQueryLinkedServiceOutputWithContext(ctx context.Context) GoogleBigQueryLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleBigQueryLinkedServiceOutput)
}

// Google BigQuery service linked service.
type GoogleBigQueryLinkedServiceOutput struct{ *pulumi.OutputState }

func (GoogleBigQueryLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleBigQueryLinkedService)(nil)).Elem()
}

func (o GoogleBigQueryLinkedServiceOutput) ToGoogleBigQueryLinkedServiceOutput() GoogleBigQueryLinkedServiceOutput {
	return o
}

func (o GoogleBigQueryLinkedServiceOutput) ToGoogleBigQueryLinkedServiceOutputWithContext(ctx context.Context) GoogleBigQueryLinkedServiceOutput {
	return o
}

// A comma-separated list of public BigQuery projects to access.
func (o GoogleBigQueryLinkedServiceOutput) AdditionalProjects() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedService) interface{} { return v.AdditionalProjects }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o GoogleBigQueryLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.
func (o GoogleBigQueryLinkedServiceOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedService) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The client id of the google application used to acquire the refresh token.
func (o GoogleBigQueryLinkedServiceOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedService) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The client secret of the google application used to acquire the refresh token.
func (o GoogleBigQueryLinkedServiceOutput) ClientSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedService) interface{} { return v.ClientSecret }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o GoogleBigQueryLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o GoogleBigQueryLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.
func (o GoogleBigQueryLinkedServiceOutput) Email() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedService) interface{} { return v.Email }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o GoogleBigQueryLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.
func (o GoogleBigQueryLinkedServiceOutput) KeyFilePath() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedService) interface{} { return v.KeyFilePath }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o GoogleBigQueryLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The default BigQuery project to query against.
func (o GoogleBigQueryLinkedServiceOutput) Project() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedService) interface{} { return v.Project }).(pulumi.AnyOutput)
}

// The refresh token obtained from Google for authorizing access to BigQuery for UserAuthentication.
func (o GoogleBigQueryLinkedServiceOutput) RefreshToken() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedService) interface{} { return v.RefreshToken }).(pulumi.AnyOutput)
}

// Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false.
func (o GoogleBigQueryLinkedServiceOutput) RequestGoogleDriveScope() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedService) interface{} { return v.RequestGoogleDriveScope }).(pulumi.AnyOutput)
}

// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
func (o GoogleBigQueryLinkedServiceOutput) TrustedCertPath() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedService) interface{} { return v.TrustedCertPath }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'GoogleBigQuery'.
func (o GoogleBigQueryLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
func (o GoogleBigQueryLinkedServiceOutput) UseSystemTrustStore() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedService) interface{} { return v.UseSystemTrustStore }).(pulumi.AnyOutput)
}

// Google BigQuery service linked service.
type GoogleBigQueryLinkedServiceResponse struct {
	// A comma-separated list of public BigQuery projects to access.
	AdditionalProjects interface{} `pulumi:"additionalProjects"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.
	AuthenticationType string `pulumi:"authenticationType"`
	// The client id of the google application used to acquire the refresh token.
	ClientId interface{} `pulumi:"clientId"`
	// The client secret of the google application used to acquire the refresh token.
	ClientSecret interface{} `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.
	Email interface{} `pulumi:"email"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.
	KeyFilePath interface{} `pulumi:"keyFilePath"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The default BigQuery project to query against.
	Project interface{} `pulumi:"project"`
	// The refresh token obtained from Google for authorizing access to BigQuery for UserAuthentication.
	RefreshToken interface{} `pulumi:"refreshToken"`
	// Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false.
	RequestGoogleDriveScope interface{} `pulumi:"requestGoogleDriveScope"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath interface{} `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'GoogleBigQuery'.
	Type string `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore interface{} `pulumi:"useSystemTrustStore"`
}

// GoogleBigQueryLinkedServiceResponseInput is an input type that accepts GoogleBigQueryLinkedServiceResponseArgs and GoogleBigQueryLinkedServiceResponseOutput values.
// You can construct a concrete instance of `GoogleBigQueryLinkedServiceResponseInput` via:
//
//          GoogleBigQueryLinkedServiceResponseArgs{...}
type GoogleBigQueryLinkedServiceResponseInput interface {
	pulumi.Input

	ToGoogleBigQueryLinkedServiceResponseOutput() GoogleBigQueryLinkedServiceResponseOutput
	ToGoogleBigQueryLinkedServiceResponseOutputWithContext(context.Context) GoogleBigQueryLinkedServiceResponseOutput
}

// Google BigQuery service linked service.
type GoogleBigQueryLinkedServiceResponseArgs struct {
	// A comma-separated list of public BigQuery projects to access.
	AdditionalProjects pulumi.Input `pulumi:"additionalProjects"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The client id of the google application used to acquire the refresh token.
	ClientId pulumi.Input `pulumi:"clientId"`
	// The client secret of the google application used to acquire the refresh token.
	ClientSecret pulumi.Input `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.
	Email pulumi.Input `pulumi:"email"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.
	KeyFilePath pulumi.Input `pulumi:"keyFilePath"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The default BigQuery project to query against.
	Project pulumi.Input `pulumi:"project"`
	// The refresh token obtained from Google for authorizing access to BigQuery for UserAuthentication.
	RefreshToken pulumi.Input `pulumi:"refreshToken"`
	// Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false.
	RequestGoogleDriveScope pulumi.Input `pulumi:"requestGoogleDriveScope"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath pulumi.Input `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'GoogleBigQuery'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore pulumi.Input `pulumi:"useSystemTrustStore"`
}

func (GoogleBigQueryLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleBigQueryLinkedServiceResponse)(nil)).Elem()
}

func (i GoogleBigQueryLinkedServiceResponseArgs) ToGoogleBigQueryLinkedServiceResponseOutput() GoogleBigQueryLinkedServiceResponseOutput {
	return i.ToGoogleBigQueryLinkedServiceResponseOutputWithContext(context.Background())
}

func (i GoogleBigQueryLinkedServiceResponseArgs) ToGoogleBigQueryLinkedServiceResponseOutputWithContext(ctx context.Context) GoogleBigQueryLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleBigQueryLinkedServiceResponseOutput)
}

// Google BigQuery service linked service.
type GoogleBigQueryLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (GoogleBigQueryLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleBigQueryLinkedServiceResponse)(nil)).Elem()
}

func (o GoogleBigQueryLinkedServiceResponseOutput) ToGoogleBigQueryLinkedServiceResponseOutput() GoogleBigQueryLinkedServiceResponseOutput {
	return o
}

func (o GoogleBigQueryLinkedServiceResponseOutput) ToGoogleBigQueryLinkedServiceResponseOutputWithContext(ctx context.Context) GoogleBigQueryLinkedServiceResponseOutput {
	return o
}

// A comma-separated list of public BigQuery projects to access.
func (o GoogleBigQueryLinkedServiceResponseOutput) AdditionalProjects() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedServiceResponse) interface{} { return v.AdditionalProjects }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o GoogleBigQueryLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.
func (o GoogleBigQueryLinkedServiceResponseOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedServiceResponse) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The client id of the google application used to acquire the refresh token.
func (o GoogleBigQueryLinkedServiceResponseOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedServiceResponse) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The client secret of the google application used to acquire the refresh token.
func (o GoogleBigQueryLinkedServiceResponseOutput) ClientSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedServiceResponse) interface{} { return v.ClientSecret }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o GoogleBigQueryLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o GoogleBigQueryLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.
func (o GoogleBigQueryLinkedServiceResponseOutput) Email() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedServiceResponse) interface{} { return v.Email }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o GoogleBigQueryLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.
func (o GoogleBigQueryLinkedServiceResponseOutput) KeyFilePath() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedServiceResponse) interface{} { return v.KeyFilePath }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o GoogleBigQueryLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedServiceResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// The default BigQuery project to query against.
func (o GoogleBigQueryLinkedServiceResponseOutput) Project() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedServiceResponse) interface{} { return v.Project }).(pulumi.AnyOutput)
}

// The refresh token obtained from Google for authorizing access to BigQuery for UserAuthentication.
func (o GoogleBigQueryLinkedServiceResponseOutput) RefreshToken() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedServiceResponse) interface{} { return v.RefreshToken }).(pulumi.AnyOutput)
}

// Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false.
func (o GoogleBigQueryLinkedServiceResponseOutput) RequestGoogleDriveScope() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedServiceResponse) interface{} { return v.RequestGoogleDriveScope }).(pulumi.AnyOutput)
}

// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
func (o GoogleBigQueryLinkedServiceResponseOutput) TrustedCertPath() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedServiceResponse) interface{} { return v.TrustedCertPath }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'GoogleBigQuery'.
func (o GoogleBigQueryLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
func (o GoogleBigQueryLinkedServiceResponseOutput) UseSystemTrustStore() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryLinkedServiceResponse) interface{} { return v.UseSystemTrustStore }).(pulumi.AnyOutput)
}

// Google BigQuery service dataset.
type GoogleBigQueryObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'GoogleBigQueryObject'.
	Type string `pulumi:"type"`
}

// GoogleBigQueryObjectDatasetInput is an input type that accepts GoogleBigQueryObjectDatasetArgs and GoogleBigQueryObjectDatasetOutput values.
// You can construct a concrete instance of `GoogleBigQueryObjectDatasetInput` via:
//
//          GoogleBigQueryObjectDatasetArgs{...}
type GoogleBigQueryObjectDatasetInput interface {
	pulumi.Input

	ToGoogleBigQueryObjectDatasetOutput() GoogleBigQueryObjectDatasetOutput
	ToGoogleBigQueryObjectDatasetOutputWithContext(context.Context) GoogleBigQueryObjectDatasetOutput
}

// Google BigQuery service dataset.
type GoogleBigQueryObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'GoogleBigQueryObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GoogleBigQueryObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleBigQueryObjectDataset)(nil)).Elem()
}

func (i GoogleBigQueryObjectDatasetArgs) ToGoogleBigQueryObjectDatasetOutput() GoogleBigQueryObjectDatasetOutput {
	return i.ToGoogleBigQueryObjectDatasetOutputWithContext(context.Background())
}

func (i GoogleBigQueryObjectDatasetArgs) ToGoogleBigQueryObjectDatasetOutputWithContext(ctx context.Context) GoogleBigQueryObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleBigQueryObjectDatasetOutput)
}

// Google BigQuery service dataset.
type GoogleBigQueryObjectDatasetOutput struct{ *pulumi.OutputState }

func (GoogleBigQueryObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleBigQueryObjectDataset)(nil)).Elem()
}

func (o GoogleBigQueryObjectDatasetOutput) ToGoogleBigQueryObjectDatasetOutput() GoogleBigQueryObjectDatasetOutput {
	return o
}

func (o GoogleBigQueryObjectDatasetOutput) ToGoogleBigQueryObjectDatasetOutputWithContext(ctx context.Context) GoogleBigQueryObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o GoogleBigQueryObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v GoogleBigQueryObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o GoogleBigQueryObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleBigQueryObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o GoogleBigQueryObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v GoogleBigQueryObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o GoogleBigQueryObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v GoogleBigQueryObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o GoogleBigQueryObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'GoogleBigQueryObject'.
func (o GoogleBigQueryObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleBigQueryObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Google BigQuery service dataset.
type GoogleBigQueryObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'GoogleBigQueryObject'.
	Type string `pulumi:"type"`
}

// GoogleBigQueryObjectDatasetResponseInput is an input type that accepts GoogleBigQueryObjectDatasetResponseArgs and GoogleBigQueryObjectDatasetResponseOutput values.
// You can construct a concrete instance of `GoogleBigQueryObjectDatasetResponseInput` via:
//
//          GoogleBigQueryObjectDatasetResponseArgs{...}
type GoogleBigQueryObjectDatasetResponseInput interface {
	pulumi.Input

	ToGoogleBigQueryObjectDatasetResponseOutput() GoogleBigQueryObjectDatasetResponseOutput
	ToGoogleBigQueryObjectDatasetResponseOutputWithContext(context.Context) GoogleBigQueryObjectDatasetResponseOutput
}

// Google BigQuery service dataset.
type GoogleBigQueryObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'GoogleBigQueryObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GoogleBigQueryObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleBigQueryObjectDatasetResponse)(nil)).Elem()
}

func (i GoogleBigQueryObjectDatasetResponseArgs) ToGoogleBigQueryObjectDatasetResponseOutput() GoogleBigQueryObjectDatasetResponseOutput {
	return i.ToGoogleBigQueryObjectDatasetResponseOutputWithContext(context.Background())
}

func (i GoogleBigQueryObjectDatasetResponseArgs) ToGoogleBigQueryObjectDatasetResponseOutputWithContext(ctx context.Context) GoogleBigQueryObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleBigQueryObjectDatasetResponseOutput)
}

// Google BigQuery service dataset.
type GoogleBigQueryObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (GoogleBigQueryObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleBigQueryObjectDatasetResponse)(nil)).Elem()
}

func (o GoogleBigQueryObjectDatasetResponseOutput) ToGoogleBigQueryObjectDatasetResponseOutput() GoogleBigQueryObjectDatasetResponseOutput {
	return o
}

func (o GoogleBigQueryObjectDatasetResponseOutput) ToGoogleBigQueryObjectDatasetResponseOutputWithContext(ctx context.Context) GoogleBigQueryObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o GoogleBigQueryObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v GoogleBigQueryObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o GoogleBigQueryObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleBigQueryObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o GoogleBigQueryObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v GoogleBigQueryObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o GoogleBigQueryObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v GoogleBigQueryObjectDatasetResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o GoogleBigQueryObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQueryObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'GoogleBigQueryObject'.
func (o GoogleBigQueryObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleBigQueryObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Google BigQuery service source.
type GoogleBigQuerySource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'GoogleBigQuerySource'.
	Type string `pulumi:"type"`
}

// GoogleBigQuerySourceInput is an input type that accepts GoogleBigQuerySourceArgs and GoogleBigQuerySourceOutput values.
// You can construct a concrete instance of `GoogleBigQuerySourceInput` via:
//
//          GoogleBigQuerySourceArgs{...}
type GoogleBigQuerySourceInput interface {
	pulumi.Input

	ToGoogleBigQuerySourceOutput() GoogleBigQuerySourceOutput
	ToGoogleBigQuerySourceOutputWithContext(context.Context) GoogleBigQuerySourceOutput
}

// A copy activity Google BigQuery service source.
type GoogleBigQuerySourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'GoogleBigQuerySource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GoogleBigQuerySourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleBigQuerySource)(nil)).Elem()
}

func (i GoogleBigQuerySourceArgs) ToGoogleBigQuerySourceOutput() GoogleBigQuerySourceOutput {
	return i.ToGoogleBigQuerySourceOutputWithContext(context.Background())
}

func (i GoogleBigQuerySourceArgs) ToGoogleBigQuerySourceOutputWithContext(ctx context.Context) GoogleBigQuerySourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleBigQuerySourceOutput)
}

// A copy activity Google BigQuery service source.
type GoogleBigQuerySourceOutput struct{ *pulumi.OutputState }

func (GoogleBigQuerySourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleBigQuerySource)(nil)).Elem()
}

func (o GoogleBigQuerySourceOutput) ToGoogleBigQuerySourceOutput() GoogleBigQuerySourceOutput {
	return o
}

func (o GoogleBigQuerySourceOutput) ToGoogleBigQuerySourceOutputWithContext(ctx context.Context) GoogleBigQuerySourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o GoogleBigQuerySourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQuerySource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o GoogleBigQuerySourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQuerySource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o GoogleBigQuerySourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQuerySource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'GoogleBigQuerySource'.
func (o GoogleBigQuerySourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleBigQuerySource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Google BigQuery service source.
type GoogleBigQuerySourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'GoogleBigQuerySource'.
	Type string `pulumi:"type"`
}

// GoogleBigQuerySourceResponseInput is an input type that accepts GoogleBigQuerySourceResponseArgs and GoogleBigQuerySourceResponseOutput values.
// You can construct a concrete instance of `GoogleBigQuerySourceResponseInput` via:
//
//          GoogleBigQuerySourceResponseArgs{...}
type GoogleBigQuerySourceResponseInput interface {
	pulumi.Input

	ToGoogleBigQuerySourceResponseOutput() GoogleBigQuerySourceResponseOutput
	ToGoogleBigQuerySourceResponseOutputWithContext(context.Context) GoogleBigQuerySourceResponseOutput
}

// A copy activity Google BigQuery service source.
type GoogleBigQuerySourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'GoogleBigQuerySource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GoogleBigQuerySourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleBigQuerySourceResponse)(nil)).Elem()
}

func (i GoogleBigQuerySourceResponseArgs) ToGoogleBigQuerySourceResponseOutput() GoogleBigQuerySourceResponseOutput {
	return i.ToGoogleBigQuerySourceResponseOutputWithContext(context.Background())
}

func (i GoogleBigQuerySourceResponseArgs) ToGoogleBigQuerySourceResponseOutputWithContext(ctx context.Context) GoogleBigQuerySourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleBigQuerySourceResponseOutput)
}

// A copy activity Google BigQuery service source.
type GoogleBigQuerySourceResponseOutput struct{ *pulumi.OutputState }

func (GoogleBigQuerySourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleBigQuerySourceResponse)(nil)).Elem()
}

func (o GoogleBigQuerySourceResponseOutput) ToGoogleBigQuerySourceResponseOutput() GoogleBigQuerySourceResponseOutput {
	return o
}

func (o GoogleBigQuerySourceResponseOutput) ToGoogleBigQuerySourceResponseOutputWithContext(ctx context.Context) GoogleBigQuerySourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o GoogleBigQuerySourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQuerySourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o GoogleBigQuerySourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQuerySourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o GoogleBigQuerySourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleBigQuerySourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'GoogleBigQuerySource'.
func (o GoogleBigQuerySourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleBigQuerySourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Greenplum Database linked service.
type GreenplumLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Greenplum'.
	Type string `pulumi:"type"`
}

// GreenplumLinkedServiceInput is an input type that accepts GreenplumLinkedServiceArgs and GreenplumLinkedServiceOutput values.
// You can construct a concrete instance of `GreenplumLinkedServiceInput` via:
//
//          GreenplumLinkedServiceArgs{...}
type GreenplumLinkedServiceInput interface {
	pulumi.Input

	ToGreenplumLinkedServiceOutput() GreenplumLinkedServiceOutput
	ToGreenplumLinkedServiceOutputWithContext(context.Context) GreenplumLinkedServiceOutput
}

// Greenplum Database linked service.
type GreenplumLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Greenplum'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GreenplumLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GreenplumLinkedService)(nil)).Elem()
}

func (i GreenplumLinkedServiceArgs) ToGreenplumLinkedServiceOutput() GreenplumLinkedServiceOutput {
	return i.ToGreenplumLinkedServiceOutputWithContext(context.Background())
}

func (i GreenplumLinkedServiceArgs) ToGreenplumLinkedServiceOutputWithContext(ctx context.Context) GreenplumLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GreenplumLinkedServiceOutput)
}

// Greenplum Database linked service.
type GreenplumLinkedServiceOutput struct{ *pulumi.OutputState }

func (GreenplumLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GreenplumLinkedService)(nil)).Elem()
}

func (o GreenplumLinkedServiceOutput) ToGreenplumLinkedServiceOutput() GreenplumLinkedServiceOutput {
	return o
}

func (o GreenplumLinkedServiceOutput) ToGreenplumLinkedServiceOutputWithContext(ctx context.Context) GreenplumLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o GreenplumLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v GreenplumLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o GreenplumLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v GreenplumLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o GreenplumLinkedServiceOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v GreenplumLinkedService) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o GreenplumLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GreenplumLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o GreenplumLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v GreenplumLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o GreenplumLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v GreenplumLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'Greenplum'.
func (o GreenplumLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GreenplumLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Greenplum Database linked service.
type GreenplumLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Greenplum'.
	Type string `pulumi:"type"`
}

// GreenplumLinkedServiceResponseInput is an input type that accepts GreenplumLinkedServiceResponseArgs and GreenplumLinkedServiceResponseOutput values.
// You can construct a concrete instance of `GreenplumLinkedServiceResponseInput` via:
//
//          GreenplumLinkedServiceResponseArgs{...}
type GreenplumLinkedServiceResponseInput interface {
	pulumi.Input

	ToGreenplumLinkedServiceResponseOutput() GreenplumLinkedServiceResponseOutput
	ToGreenplumLinkedServiceResponseOutputWithContext(context.Context) GreenplumLinkedServiceResponseOutput
}

// Greenplum Database linked service.
type GreenplumLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Greenplum'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GreenplumLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GreenplumLinkedServiceResponse)(nil)).Elem()
}

func (i GreenplumLinkedServiceResponseArgs) ToGreenplumLinkedServiceResponseOutput() GreenplumLinkedServiceResponseOutput {
	return i.ToGreenplumLinkedServiceResponseOutputWithContext(context.Background())
}

func (i GreenplumLinkedServiceResponseArgs) ToGreenplumLinkedServiceResponseOutputWithContext(ctx context.Context) GreenplumLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GreenplumLinkedServiceResponseOutput)
}

// Greenplum Database linked service.
type GreenplumLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (GreenplumLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GreenplumLinkedServiceResponse)(nil)).Elem()
}

func (o GreenplumLinkedServiceResponseOutput) ToGreenplumLinkedServiceResponseOutput() GreenplumLinkedServiceResponseOutput {
	return o
}

func (o GreenplumLinkedServiceResponseOutput) ToGreenplumLinkedServiceResponseOutputWithContext(ctx context.Context) GreenplumLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o GreenplumLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v GreenplumLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o GreenplumLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v GreenplumLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o GreenplumLinkedServiceResponseOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v GreenplumLinkedServiceResponse) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o GreenplumLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GreenplumLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o GreenplumLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v GreenplumLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o GreenplumLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v GreenplumLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'Greenplum'.
func (o GreenplumLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GreenplumLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Greenplum Database source.
type GreenplumSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'GreenplumSource'.
	Type string `pulumi:"type"`
}

// GreenplumSourceInput is an input type that accepts GreenplumSourceArgs and GreenplumSourceOutput values.
// You can construct a concrete instance of `GreenplumSourceInput` via:
//
//          GreenplumSourceArgs{...}
type GreenplumSourceInput interface {
	pulumi.Input

	ToGreenplumSourceOutput() GreenplumSourceOutput
	ToGreenplumSourceOutputWithContext(context.Context) GreenplumSourceOutput
}

// A copy activity Greenplum Database source.
type GreenplumSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'GreenplumSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GreenplumSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GreenplumSource)(nil)).Elem()
}

func (i GreenplumSourceArgs) ToGreenplumSourceOutput() GreenplumSourceOutput {
	return i.ToGreenplumSourceOutputWithContext(context.Background())
}

func (i GreenplumSourceArgs) ToGreenplumSourceOutputWithContext(ctx context.Context) GreenplumSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GreenplumSourceOutput)
}

// A copy activity Greenplum Database source.
type GreenplumSourceOutput struct{ *pulumi.OutputState }

func (GreenplumSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GreenplumSource)(nil)).Elem()
}

func (o GreenplumSourceOutput) ToGreenplumSourceOutput() GreenplumSourceOutput {
	return o
}

func (o GreenplumSourceOutput) ToGreenplumSourceOutputWithContext(ctx context.Context) GreenplumSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o GreenplumSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v GreenplumSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o GreenplumSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v GreenplumSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o GreenplumSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v GreenplumSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'GreenplumSource'.
func (o GreenplumSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GreenplumSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Greenplum Database source.
type GreenplumSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'GreenplumSource'.
	Type string `pulumi:"type"`
}

// GreenplumSourceResponseInput is an input type that accepts GreenplumSourceResponseArgs and GreenplumSourceResponseOutput values.
// You can construct a concrete instance of `GreenplumSourceResponseInput` via:
//
//          GreenplumSourceResponseArgs{...}
type GreenplumSourceResponseInput interface {
	pulumi.Input

	ToGreenplumSourceResponseOutput() GreenplumSourceResponseOutput
	ToGreenplumSourceResponseOutputWithContext(context.Context) GreenplumSourceResponseOutput
}

// A copy activity Greenplum Database source.
type GreenplumSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'GreenplumSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GreenplumSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GreenplumSourceResponse)(nil)).Elem()
}

func (i GreenplumSourceResponseArgs) ToGreenplumSourceResponseOutput() GreenplumSourceResponseOutput {
	return i.ToGreenplumSourceResponseOutputWithContext(context.Background())
}

func (i GreenplumSourceResponseArgs) ToGreenplumSourceResponseOutputWithContext(ctx context.Context) GreenplumSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GreenplumSourceResponseOutput)
}

// A copy activity Greenplum Database source.
type GreenplumSourceResponseOutput struct{ *pulumi.OutputState }

func (GreenplumSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GreenplumSourceResponse)(nil)).Elem()
}

func (o GreenplumSourceResponseOutput) ToGreenplumSourceResponseOutput() GreenplumSourceResponseOutput {
	return o
}

func (o GreenplumSourceResponseOutput) ToGreenplumSourceResponseOutputWithContext(ctx context.Context) GreenplumSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o GreenplumSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v GreenplumSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o GreenplumSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v GreenplumSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o GreenplumSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v GreenplumSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'GreenplumSource'.
func (o GreenplumSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GreenplumSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Greenplum Database dataset.
type GreenplumTableDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'GreenplumTable'.
	Type string `pulumi:"type"`
}

// GreenplumTableDatasetInput is an input type that accepts GreenplumTableDatasetArgs and GreenplumTableDatasetOutput values.
// You can construct a concrete instance of `GreenplumTableDatasetInput` via:
//
//          GreenplumTableDatasetArgs{...}
type GreenplumTableDatasetInput interface {
	pulumi.Input

	ToGreenplumTableDatasetOutput() GreenplumTableDatasetOutput
	ToGreenplumTableDatasetOutputWithContext(context.Context) GreenplumTableDatasetOutput
}

// Greenplum Database dataset.
type GreenplumTableDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'GreenplumTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GreenplumTableDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GreenplumTableDataset)(nil)).Elem()
}

func (i GreenplumTableDatasetArgs) ToGreenplumTableDatasetOutput() GreenplumTableDatasetOutput {
	return i.ToGreenplumTableDatasetOutputWithContext(context.Background())
}

func (i GreenplumTableDatasetArgs) ToGreenplumTableDatasetOutputWithContext(ctx context.Context) GreenplumTableDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GreenplumTableDatasetOutput)
}

// Greenplum Database dataset.
type GreenplumTableDatasetOutput struct{ *pulumi.OutputState }

func (GreenplumTableDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GreenplumTableDataset)(nil)).Elem()
}

func (o GreenplumTableDatasetOutput) ToGreenplumTableDatasetOutput() GreenplumTableDatasetOutput {
	return o
}

func (o GreenplumTableDatasetOutput) ToGreenplumTableDatasetOutputWithContext(ctx context.Context) GreenplumTableDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o GreenplumTableDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v GreenplumTableDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o GreenplumTableDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GreenplumTableDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o GreenplumTableDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v GreenplumTableDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o GreenplumTableDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v GreenplumTableDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o GreenplumTableDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v GreenplumTableDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'GreenplumTable'.
func (o GreenplumTableDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GreenplumTableDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Greenplum Database dataset.
type GreenplumTableDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'GreenplumTable'.
	Type string `pulumi:"type"`
}

// GreenplumTableDatasetResponseInput is an input type that accepts GreenplumTableDatasetResponseArgs and GreenplumTableDatasetResponseOutput values.
// You can construct a concrete instance of `GreenplumTableDatasetResponseInput` via:
//
//          GreenplumTableDatasetResponseArgs{...}
type GreenplumTableDatasetResponseInput interface {
	pulumi.Input

	ToGreenplumTableDatasetResponseOutput() GreenplumTableDatasetResponseOutput
	ToGreenplumTableDatasetResponseOutputWithContext(context.Context) GreenplumTableDatasetResponseOutput
}

// Greenplum Database dataset.
type GreenplumTableDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'GreenplumTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GreenplumTableDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GreenplumTableDatasetResponse)(nil)).Elem()
}

func (i GreenplumTableDatasetResponseArgs) ToGreenplumTableDatasetResponseOutput() GreenplumTableDatasetResponseOutput {
	return i.ToGreenplumTableDatasetResponseOutputWithContext(context.Background())
}

func (i GreenplumTableDatasetResponseArgs) ToGreenplumTableDatasetResponseOutputWithContext(ctx context.Context) GreenplumTableDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GreenplumTableDatasetResponseOutput)
}

// Greenplum Database dataset.
type GreenplumTableDatasetResponseOutput struct{ *pulumi.OutputState }

func (GreenplumTableDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GreenplumTableDatasetResponse)(nil)).Elem()
}

func (o GreenplumTableDatasetResponseOutput) ToGreenplumTableDatasetResponseOutput() GreenplumTableDatasetResponseOutput {
	return o
}

func (o GreenplumTableDatasetResponseOutput) ToGreenplumTableDatasetResponseOutputWithContext(ctx context.Context) GreenplumTableDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o GreenplumTableDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v GreenplumTableDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o GreenplumTableDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GreenplumTableDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o GreenplumTableDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v GreenplumTableDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o GreenplumTableDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v GreenplumTableDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o GreenplumTableDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v GreenplumTableDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'GreenplumTable'.
func (o GreenplumTableDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GreenplumTableDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// HBase server linked service.
type HBaseLinkedService struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch interface{} `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert interface{} `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication mechanism to use to connect to the HBase server.
	AuthenticationType string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl interface{} `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The IP address or host name of the HBase server. (i.e. 192.168.222.160)
	Host interface{} `pulumi:"host"`
	// The partial URL corresponding to the HBase server. (i.e. /gateway/sandbox/hbase/version)
	HttpPath interface{} `pulumi:"httpPath"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The password corresponding to the user name.
	Password interface{} `pulumi:"password"`
	// The TCP port that the HBase instance uses to listen for client connections. The default value is 9090.
	Port interface{} `pulumi:"port"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath interface{} `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'HBase'.
	Type string `pulumi:"type"`
	// The user name used to connect to the HBase instance.
	Username interface{} `pulumi:"username"`
}

// HBaseLinkedServiceInput is an input type that accepts HBaseLinkedServiceArgs and HBaseLinkedServiceOutput values.
// You can construct a concrete instance of `HBaseLinkedServiceInput` via:
//
//          HBaseLinkedServiceArgs{...}
type HBaseLinkedServiceInput interface {
	pulumi.Input

	ToHBaseLinkedServiceOutput() HBaseLinkedServiceOutput
	ToHBaseLinkedServiceOutputWithContext(context.Context) HBaseLinkedServiceOutput
}

// HBase server linked service.
type HBaseLinkedServiceArgs struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch pulumi.Input `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert pulumi.Input `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication mechanism to use to connect to the HBase server.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl pulumi.Input `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The IP address or host name of the HBase server. (i.e. 192.168.222.160)
	Host pulumi.Input `pulumi:"host"`
	// The partial URL corresponding to the HBase server. (i.e. /gateway/sandbox/hbase/version)
	HttpPath pulumi.Input `pulumi:"httpPath"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The password corresponding to the user name.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port that the HBase instance uses to listen for client connections. The default value is 9090.
	Port pulumi.Input `pulumi:"port"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath pulumi.Input `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'HBase'.
	Type pulumi.StringInput `pulumi:"type"`
	// The user name used to connect to the HBase instance.
	Username pulumi.Input `pulumi:"username"`
}

func (HBaseLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HBaseLinkedService)(nil)).Elem()
}

func (i HBaseLinkedServiceArgs) ToHBaseLinkedServiceOutput() HBaseLinkedServiceOutput {
	return i.ToHBaseLinkedServiceOutputWithContext(context.Background())
}

func (i HBaseLinkedServiceArgs) ToHBaseLinkedServiceOutputWithContext(ctx context.Context) HBaseLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HBaseLinkedServiceOutput)
}

// HBase server linked service.
type HBaseLinkedServiceOutput struct{ *pulumi.OutputState }

func (HBaseLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HBaseLinkedService)(nil)).Elem()
}

func (o HBaseLinkedServiceOutput) ToHBaseLinkedServiceOutput() HBaseLinkedServiceOutput {
	return o
}

func (o HBaseLinkedServiceOutput) ToHBaseLinkedServiceOutputWithContext(ctx context.Context) HBaseLinkedServiceOutput {
	return o
}

// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
func (o HBaseLinkedServiceOutput) AllowHostNameCNMismatch() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedService) interface{} { return v.AllowHostNameCNMismatch }).(pulumi.AnyOutput)
}

// Specifies whether to allow self-signed certificates from the server. The default value is false.
func (o HBaseLinkedServiceOutput) AllowSelfSignedServerCert() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedService) interface{} { return v.AllowSelfSignedServerCert }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o HBaseLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HBaseLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication mechanism to use to connect to the HBase server.
func (o HBaseLinkedServiceOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v HBaseLinkedService) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The integration runtime reference.
func (o HBaseLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v HBaseLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o HBaseLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HBaseLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
func (o HBaseLinkedServiceOutput) EnableSsl() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedService) interface{} { return v.EnableSsl }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o HBaseLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The IP address or host name of the HBase server. (i.e. 192.168.222.160)
func (o HBaseLinkedServiceOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedService) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// The partial URL corresponding to the HBase server. (i.e. /gateway/sandbox/hbase/version)
func (o HBaseLinkedServiceOutput) HttpPath() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedService) interface{} { return v.HttpPath }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o HBaseLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v HBaseLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The password corresponding to the user name.
func (o HBaseLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port that the HBase instance uses to listen for client connections. The default value is 9090.
func (o HBaseLinkedServiceOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedService) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
func (o HBaseLinkedServiceOutput) TrustedCertPath() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedService) interface{} { return v.TrustedCertPath }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'HBase'.
func (o HBaseLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HBaseLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// The user name used to connect to the HBase instance.
func (o HBaseLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// HBase server linked service.
type HBaseLinkedServiceResponse struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch interface{} `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert interface{} `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication mechanism to use to connect to the HBase server.
	AuthenticationType string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl interface{} `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The IP address or host name of the HBase server. (i.e. 192.168.222.160)
	Host interface{} `pulumi:"host"`
	// The partial URL corresponding to the HBase server. (i.e. /gateway/sandbox/hbase/version)
	HttpPath interface{} `pulumi:"httpPath"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The password corresponding to the user name.
	Password interface{} `pulumi:"password"`
	// The TCP port that the HBase instance uses to listen for client connections. The default value is 9090.
	Port interface{} `pulumi:"port"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath interface{} `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'HBase'.
	Type string `pulumi:"type"`
	// The user name used to connect to the HBase instance.
	Username interface{} `pulumi:"username"`
}

// HBaseLinkedServiceResponseInput is an input type that accepts HBaseLinkedServiceResponseArgs and HBaseLinkedServiceResponseOutput values.
// You can construct a concrete instance of `HBaseLinkedServiceResponseInput` via:
//
//          HBaseLinkedServiceResponseArgs{...}
type HBaseLinkedServiceResponseInput interface {
	pulumi.Input

	ToHBaseLinkedServiceResponseOutput() HBaseLinkedServiceResponseOutput
	ToHBaseLinkedServiceResponseOutputWithContext(context.Context) HBaseLinkedServiceResponseOutput
}

// HBase server linked service.
type HBaseLinkedServiceResponseArgs struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch pulumi.Input `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert pulumi.Input `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication mechanism to use to connect to the HBase server.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl pulumi.Input `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The IP address or host name of the HBase server. (i.e. 192.168.222.160)
	Host pulumi.Input `pulumi:"host"`
	// The partial URL corresponding to the HBase server. (i.e. /gateway/sandbox/hbase/version)
	HttpPath pulumi.Input `pulumi:"httpPath"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The password corresponding to the user name.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port that the HBase instance uses to listen for client connections. The default value is 9090.
	Port pulumi.Input `pulumi:"port"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath pulumi.Input `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'HBase'.
	Type pulumi.StringInput `pulumi:"type"`
	// The user name used to connect to the HBase instance.
	Username pulumi.Input `pulumi:"username"`
}

func (HBaseLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HBaseLinkedServiceResponse)(nil)).Elem()
}

func (i HBaseLinkedServiceResponseArgs) ToHBaseLinkedServiceResponseOutput() HBaseLinkedServiceResponseOutput {
	return i.ToHBaseLinkedServiceResponseOutputWithContext(context.Background())
}

func (i HBaseLinkedServiceResponseArgs) ToHBaseLinkedServiceResponseOutputWithContext(ctx context.Context) HBaseLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HBaseLinkedServiceResponseOutput)
}

// HBase server linked service.
type HBaseLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (HBaseLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HBaseLinkedServiceResponse)(nil)).Elem()
}

func (o HBaseLinkedServiceResponseOutput) ToHBaseLinkedServiceResponseOutput() HBaseLinkedServiceResponseOutput {
	return o
}

func (o HBaseLinkedServiceResponseOutput) ToHBaseLinkedServiceResponseOutputWithContext(ctx context.Context) HBaseLinkedServiceResponseOutput {
	return o
}

// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
func (o HBaseLinkedServiceResponseOutput) AllowHostNameCNMismatch() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedServiceResponse) interface{} { return v.AllowHostNameCNMismatch }).(pulumi.AnyOutput)
}

// Specifies whether to allow self-signed certificates from the server. The default value is false.
func (o HBaseLinkedServiceResponseOutput) AllowSelfSignedServerCert() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedServiceResponse) interface{} { return v.AllowSelfSignedServerCert }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o HBaseLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HBaseLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication mechanism to use to connect to the HBase server.
func (o HBaseLinkedServiceResponseOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v HBaseLinkedServiceResponse) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The integration runtime reference.
func (o HBaseLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v HBaseLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o HBaseLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HBaseLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
func (o HBaseLinkedServiceResponseOutput) EnableSsl() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedServiceResponse) interface{} { return v.EnableSsl }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o HBaseLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The IP address or host name of the HBase server. (i.e. 192.168.222.160)
func (o HBaseLinkedServiceResponseOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedServiceResponse) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// The partial URL corresponding to the HBase server. (i.e. /gateway/sandbox/hbase/version)
func (o HBaseLinkedServiceResponseOutput) HttpPath() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedServiceResponse) interface{} { return v.HttpPath }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o HBaseLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v HBaseLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The password corresponding to the user name.
func (o HBaseLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port that the HBase instance uses to listen for client connections. The default value is 9090.
func (o HBaseLinkedServiceResponseOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedServiceResponse) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
func (o HBaseLinkedServiceResponseOutput) TrustedCertPath() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedServiceResponse) interface{} { return v.TrustedCertPath }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'HBase'.
func (o HBaseLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HBaseLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The user name used to connect to the HBase instance.
func (o HBaseLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// HBase server dataset.
type HBaseObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'HBaseObject'.
	Type string `pulumi:"type"`
}

// HBaseObjectDatasetInput is an input type that accepts HBaseObjectDatasetArgs and HBaseObjectDatasetOutput values.
// You can construct a concrete instance of `HBaseObjectDatasetInput` via:
//
//          HBaseObjectDatasetArgs{...}
type HBaseObjectDatasetInput interface {
	pulumi.Input

	ToHBaseObjectDatasetOutput() HBaseObjectDatasetOutput
	ToHBaseObjectDatasetOutputWithContext(context.Context) HBaseObjectDatasetOutput
}

// HBase server dataset.
type HBaseObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'HBaseObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HBaseObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HBaseObjectDataset)(nil)).Elem()
}

func (i HBaseObjectDatasetArgs) ToHBaseObjectDatasetOutput() HBaseObjectDatasetOutput {
	return i.ToHBaseObjectDatasetOutputWithContext(context.Background())
}

func (i HBaseObjectDatasetArgs) ToHBaseObjectDatasetOutputWithContext(ctx context.Context) HBaseObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HBaseObjectDatasetOutput)
}

// HBase server dataset.
type HBaseObjectDatasetOutput struct{ *pulumi.OutputState }

func (HBaseObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HBaseObjectDataset)(nil)).Elem()
}

func (o HBaseObjectDatasetOutput) ToHBaseObjectDatasetOutput() HBaseObjectDatasetOutput {
	return o
}

func (o HBaseObjectDatasetOutput) ToHBaseObjectDatasetOutputWithContext(ctx context.Context) HBaseObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o HBaseObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HBaseObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o HBaseObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HBaseObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o HBaseObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v HBaseObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o HBaseObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v HBaseObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o HBaseObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'HBaseObject'.
func (o HBaseObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HBaseObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// HBase server dataset.
type HBaseObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'HBaseObject'.
	Type string `pulumi:"type"`
}

// HBaseObjectDatasetResponseInput is an input type that accepts HBaseObjectDatasetResponseArgs and HBaseObjectDatasetResponseOutput values.
// You can construct a concrete instance of `HBaseObjectDatasetResponseInput` via:
//
//          HBaseObjectDatasetResponseArgs{...}
type HBaseObjectDatasetResponseInput interface {
	pulumi.Input

	ToHBaseObjectDatasetResponseOutput() HBaseObjectDatasetResponseOutput
	ToHBaseObjectDatasetResponseOutputWithContext(context.Context) HBaseObjectDatasetResponseOutput
}

// HBase server dataset.
type HBaseObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'HBaseObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HBaseObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HBaseObjectDatasetResponse)(nil)).Elem()
}

func (i HBaseObjectDatasetResponseArgs) ToHBaseObjectDatasetResponseOutput() HBaseObjectDatasetResponseOutput {
	return i.ToHBaseObjectDatasetResponseOutputWithContext(context.Background())
}

func (i HBaseObjectDatasetResponseArgs) ToHBaseObjectDatasetResponseOutputWithContext(ctx context.Context) HBaseObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HBaseObjectDatasetResponseOutput)
}

// HBase server dataset.
type HBaseObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (HBaseObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HBaseObjectDatasetResponse)(nil)).Elem()
}

func (o HBaseObjectDatasetResponseOutput) ToHBaseObjectDatasetResponseOutput() HBaseObjectDatasetResponseOutput {
	return o
}

func (o HBaseObjectDatasetResponseOutput) ToHBaseObjectDatasetResponseOutputWithContext(ctx context.Context) HBaseObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o HBaseObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HBaseObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o HBaseObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HBaseObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o HBaseObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v HBaseObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o HBaseObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v HBaseObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o HBaseObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'HBaseObject'.
func (o HBaseObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HBaseObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity HBase server source.
type HBaseSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HBaseSource'.
	Type string `pulumi:"type"`
}

// HBaseSourceInput is an input type that accepts HBaseSourceArgs and HBaseSourceOutput values.
// You can construct a concrete instance of `HBaseSourceInput` via:
//
//          HBaseSourceArgs{...}
type HBaseSourceInput interface {
	pulumi.Input

	ToHBaseSourceOutput() HBaseSourceOutput
	ToHBaseSourceOutputWithContext(context.Context) HBaseSourceOutput
}

// A copy activity HBase server source.
type HBaseSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HBaseSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HBaseSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HBaseSource)(nil)).Elem()
}

func (i HBaseSourceArgs) ToHBaseSourceOutput() HBaseSourceOutput {
	return i.ToHBaseSourceOutputWithContext(context.Background())
}

func (i HBaseSourceArgs) ToHBaseSourceOutputWithContext(ctx context.Context) HBaseSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HBaseSourceOutput)
}

// A copy activity HBase server source.
type HBaseSourceOutput struct{ *pulumi.OutputState }

func (HBaseSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HBaseSource)(nil)).Elem()
}

func (o HBaseSourceOutput) ToHBaseSourceOutput() HBaseSourceOutput {
	return o
}

func (o HBaseSourceOutput) ToHBaseSourceOutputWithContext(ctx context.Context) HBaseSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o HBaseSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o HBaseSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o HBaseSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'HBaseSource'.
func (o HBaseSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HBaseSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity HBase server source.
type HBaseSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HBaseSource'.
	Type string `pulumi:"type"`
}

// HBaseSourceResponseInput is an input type that accepts HBaseSourceResponseArgs and HBaseSourceResponseOutput values.
// You can construct a concrete instance of `HBaseSourceResponseInput` via:
//
//          HBaseSourceResponseArgs{...}
type HBaseSourceResponseInput interface {
	pulumi.Input

	ToHBaseSourceResponseOutput() HBaseSourceResponseOutput
	ToHBaseSourceResponseOutputWithContext(context.Context) HBaseSourceResponseOutput
}

// A copy activity HBase server source.
type HBaseSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HBaseSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HBaseSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HBaseSourceResponse)(nil)).Elem()
}

func (i HBaseSourceResponseArgs) ToHBaseSourceResponseOutput() HBaseSourceResponseOutput {
	return i.ToHBaseSourceResponseOutputWithContext(context.Background())
}

func (i HBaseSourceResponseArgs) ToHBaseSourceResponseOutputWithContext(ctx context.Context) HBaseSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HBaseSourceResponseOutput)
}

// A copy activity HBase server source.
type HBaseSourceResponseOutput struct{ *pulumi.OutputState }

func (HBaseSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HBaseSourceResponse)(nil)).Elem()
}

func (o HBaseSourceResponseOutput) ToHBaseSourceResponseOutput() HBaseSourceResponseOutput {
	return o
}

func (o HBaseSourceResponseOutput) ToHBaseSourceResponseOutputWithContext(ctx context.Context) HBaseSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o HBaseSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o HBaseSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o HBaseSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v HBaseSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'HBaseSource'.
func (o HBaseSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HBaseSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// HDInsight Hive activity type.
type HDInsightHiveActivity struct {
	// User specified arguments to HDInsightActivity.
	Arguments []interface{} `pulumi:"arguments"`
	// Allows user to specify defines for Hive job request.
	Defines map[string]interface{} `pulumi:"defines"`
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Debug info option.
	GetDebugInfo *string `pulumi:"getDebugInfo"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReference `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicy `pulumi:"policy"`
	// Script linked service reference.
	ScriptLinkedService *LinkedServiceReference `pulumi:"scriptLinkedService"`
	// Script path. Type: string (or Expression with resultType string).
	ScriptPath interface{} `pulumi:"scriptPath"`
	// Storage linked service references.
	StorageLinkedServices []LinkedServiceReference `pulumi:"storageLinkedServices"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// HDInsightHiveActivityInput is an input type that accepts HDInsightHiveActivityArgs and HDInsightHiveActivityOutput values.
// You can construct a concrete instance of `HDInsightHiveActivityInput` via:
//
//          HDInsightHiveActivityArgs{...}
type HDInsightHiveActivityInput interface {
	pulumi.Input

	ToHDInsightHiveActivityOutput() HDInsightHiveActivityOutput
	ToHDInsightHiveActivityOutputWithContext(context.Context) HDInsightHiveActivityOutput
}

// HDInsight Hive activity type.
type HDInsightHiveActivityArgs struct {
	// User specified arguments to HDInsightActivity.
	Arguments pulumi.ArrayInput `pulumi:"arguments"`
	// Allows user to specify defines for Hive job request.
	Defines pulumi.MapInput `pulumi:"defines"`
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Debug info option.
	GetDebugInfo pulumi.StringPtrInput `pulumi:"getDebugInfo"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferencePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyPtrInput `pulumi:"policy"`
	// Script linked service reference.
	ScriptLinkedService LinkedServiceReferencePtrInput `pulumi:"scriptLinkedService"`
	// Script path. Type: string (or Expression with resultType string).
	ScriptPath pulumi.Input `pulumi:"scriptPath"`
	// Storage linked service references.
	StorageLinkedServices LinkedServiceReferenceArrayInput `pulumi:"storageLinkedServices"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HDInsightHiveActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightHiveActivity)(nil)).Elem()
}

func (i HDInsightHiveActivityArgs) ToHDInsightHiveActivityOutput() HDInsightHiveActivityOutput {
	return i.ToHDInsightHiveActivityOutputWithContext(context.Background())
}

func (i HDInsightHiveActivityArgs) ToHDInsightHiveActivityOutputWithContext(ctx context.Context) HDInsightHiveActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightHiveActivityOutput)
}

// HDInsight Hive activity type.
type HDInsightHiveActivityOutput struct{ *pulumi.OutputState }

func (HDInsightHiveActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightHiveActivity)(nil)).Elem()
}

func (o HDInsightHiveActivityOutput) ToHDInsightHiveActivityOutput() HDInsightHiveActivityOutput {
	return o
}

func (o HDInsightHiveActivityOutput) ToHDInsightHiveActivityOutputWithContext(ctx context.Context) HDInsightHiveActivityOutput {
	return o
}

// User specified arguments to HDInsightActivity.
func (o HDInsightHiveActivityOutput) Arguments() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightHiveActivity) []interface{} { return v.Arguments }).(pulumi.ArrayOutput)
}

// Allows user to specify defines for Hive job request.
func (o HDInsightHiveActivityOutput) Defines() pulumi.MapOutput {
	return o.ApplyT(func(v HDInsightHiveActivity) map[string]interface{} { return v.Defines }).(pulumi.MapOutput)
}

// Activity depends on condition.
func (o HDInsightHiveActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v HDInsightHiveActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o HDInsightHiveActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightHiveActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Debug info option.
func (o HDInsightHiveActivityOutput) GetDebugInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightHiveActivity) *string { return v.GetDebugInfo }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o HDInsightHiveActivityOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v HDInsightHiveActivity) *LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// Activity name.
func (o HDInsightHiveActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightHiveActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o HDInsightHiveActivityOutput) Policy() ActivityPolicyPtrOutput {
	return o.ApplyT(func(v HDInsightHiveActivity) *ActivityPolicy { return v.Policy }).(ActivityPolicyPtrOutput)
}

// Script linked service reference.
func (o HDInsightHiveActivityOutput) ScriptLinkedService() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v HDInsightHiveActivity) *LinkedServiceReference { return v.ScriptLinkedService }).(LinkedServiceReferencePtrOutput)
}

// Script path. Type: string (or Expression with resultType string).
func (o HDInsightHiveActivityOutput) ScriptPath() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightHiveActivity) interface{} { return v.ScriptPath }).(pulumi.AnyOutput)
}

// Storage linked service references.
func (o HDInsightHiveActivityOutput) StorageLinkedServices() LinkedServiceReferenceArrayOutput {
	return o.ApplyT(func(v HDInsightHiveActivity) []LinkedServiceReference { return v.StorageLinkedServices }).(LinkedServiceReferenceArrayOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o HDInsightHiveActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightHiveActivity) string { return v.Type }).(pulumi.StringOutput)
}

// HDInsight Hive activity type.
type HDInsightHiveActivityResponse struct {
	// User specified arguments to HDInsightActivity.
	Arguments []interface{} `pulumi:"arguments"`
	// Allows user to specify defines for Hive job request.
	Defines map[string]interface{} `pulumi:"defines"`
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Debug info option.
	GetDebugInfo *string `pulumi:"getDebugInfo"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicyResponse `pulumi:"policy"`
	// Script linked service reference.
	ScriptLinkedService *LinkedServiceReferenceResponse `pulumi:"scriptLinkedService"`
	// Script path. Type: string (or Expression with resultType string).
	ScriptPath interface{} `pulumi:"scriptPath"`
	// Storage linked service references.
	StorageLinkedServices []LinkedServiceReferenceResponse `pulumi:"storageLinkedServices"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// HDInsightHiveActivityResponseInput is an input type that accepts HDInsightHiveActivityResponseArgs and HDInsightHiveActivityResponseOutput values.
// You can construct a concrete instance of `HDInsightHiveActivityResponseInput` via:
//
//          HDInsightHiveActivityResponseArgs{...}
type HDInsightHiveActivityResponseInput interface {
	pulumi.Input

	ToHDInsightHiveActivityResponseOutput() HDInsightHiveActivityResponseOutput
	ToHDInsightHiveActivityResponseOutputWithContext(context.Context) HDInsightHiveActivityResponseOutput
}

// HDInsight Hive activity type.
type HDInsightHiveActivityResponseArgs struct {
	// User specified arguments to HDInsightActivity.
	Arguments pulumi.ArrayInput `pulumi:"arguments"`
	// Allows user to specify defines for Hive job request.
	Defines pulumi.MapInput `pulumi:"defines"`
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Debug info option.
	GetDebugInfo pulumi.StringPtrInput `pulumi:"getDebugInfo"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyResponsePtrInput `pulumi:"policy"`
	// Script linked service reference.
	ScriptLinkedService LinkedServiceReferenceResponsePtrInput `pulumi:"scriptLinkedService"`
	// Script path. Type: string (or Expression with resultType string).
	ScriptPath pulumi.Input `pulumi:"scriptPath"`
	// Storage linked service references.
	StorageLinkedServices LinkedServiceReferenceResponseArrayInput `pulumi:"storageLinkedServices"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HDInsightHiveActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightHiveActivityResponse)(nil)).Elem()
}

func (i HDInsightHiveActivityResponseArgs) ToHDInsightHiveActivityResponseOutput() HDInsightHiveActivityResponseOutput {
	return i.ToHDInsightHiveActivityResponseOutputWithContext(context.Background())
}

func (i HDInsightHiveActivityResponseArgs) ToHDInsightHiveActivityResponseOutputWithContext(ctx context.Context) HDInsightHiveActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightHiveActivityResponseOutput)
}

// HDInsight Hive activity type.
type HDInsightHiveActivityResponseOutput struct{ *pulumi.OutputState }

func (HDInsightHiveActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightHiveActivityResponse)(nil)).Elem()
}

func (o HDInsightHiveActivityResponseOutput) ToHDInsightHiveActivityResponseOutput() HDInsightHiveActivityResponseOutput {
	return o
}

func (o HDInsightHiveActivityResponseOutput) ToHDInsightHiveActivityResponseOutputWithContext(ctx context.Context) HDInsightHiveActivityResponseOutput {
	return o
}

// User specified arguments to HDInsightActivity.
func (o HDInsightHiveActivityResponseOutput) Arguments() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightHiveActivityResponse) []interface{} { return v.Arguments }).(pulumi.ArrayOutput)
}

// Allows user to specify defines for Hive job request.
func (o HDInsightHiveActivityResponseOutput) Defines() pulumi.MapOutput {
	return o.ApplyT(func(v HDInsightHiveActivityResponse) map[string]interface{} { return v.Defines }).(pulumi.MapOutput)
}

// Activity depends on condition.
func (o HDInsightHiveActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v HDInsightHiveActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o HDInsightHiveActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightHiveActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Debug info option.
func (o HDInsightHiveActivityResponseOutput) GetDebugInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightHiveActivityResponse) *string { return v.GetDebugInfo }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o HDInsightHiveActivityResponseOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v HDInsightHiveActivityResponse) *LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponsePtrOutput)
}

// Activity name.
func (o HDInsightHiveActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightHiveActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o HDInsightHiveActivityResponseOutput) Policy() ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v HDInsightHiveActivityResponse) *ActivityPolicyResponse { return v.Policy }).(ActivityPolicyResponsePtrOutput)
}

// Script linked service reference.
func (o HDInsightHiveActivityResponseOutput) ScriptLinkedService() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v HDInsightHiveActivityResponse) *LinkedServiceReferenceResponse { return v.ScriptLinkedService }).(LinkedServiceReferenceResponsePtrOutput)
}

// Script path. Type: string (or Expression with resultType string).
func (o HDInsightHiveActivityResponseOutput) ScriptPath() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightHiveActivityResponse) interface{} { return v.ScriptPath }).(pulumi.AnyOutput)
}

// Storage linked service references.
func (o HDInsightHiveActivityResponseOutput) StorageLinkedServices() LinkedServiceReferenceResponseArrayOutput {
	return o.ApplyT(func(v HDInsightHiveActivityResponse) []LinkedServiceReferenceResponse { return v.StorageLinkedServices }).(LinkedServiceReferenceResponseArrayOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o HDInsightHiveActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightHiveActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// HDInsight linked service.
type HDInsightLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// HDInsight cluster URI. Type: string (or Expression with resultType string).
	ClusterUri interface{} `pulumi:"clusterUri"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// A reference to the Azure SQL linked service that points to the HCatalog database.
	HcatalogLinkedServiceName *LinkedServiceReference `pulumi:"hcatalogLinkedServiceName"`
	// The Azure Storage linked service reference.
	LinkedServiceName *LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// HDInsight cluster password.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'HDInsight'.
	Type string `pulumi:"type"`
	// HDInsight cluster user name. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// HDInsightLinkedServiceInput is an input type that accepts HDInsightLinkedServiceArgs and HDInsightLinkedServiceOutput values.
// You can construct a concrete instance of `HDInsightLinkedServiceInput` via:
//
//          HDInsightLinkedServiceArgs{...}
type HDInsightLinkedServiceInput interface {
	pulumi.Input

	ToHDInsightLinkedServiceOutput() HDInsightLinkedServiceOutput
	ToHDInsightLinkedServiceOutputWithContext(context.Context) HDInsightLinkedServiceOutput
}

// HDInsight linked service.
type HDInsightLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// HDInsight cluster URI. Type: string (or Expression with resultType string).
	ClusterUri pulumi.Input `pulumi:"clusterUri"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// A reference to the Azure SQL linked service that points to the HCatalog database.
	HcatalogLinkedServiceName LinkedServiceReferencePtrInput `pulumi:"hcatalogLinkedServiceName"`
	// The Azure Storage linked service reference.
	LinkedServiceName LinkedServiceReferencePtrInput `pulumi:"linkedServiceName"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// HDInsight cluster password.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'HDInsight'.
	Type pulumi.StringInput `pulumi:"type"`
	// HDInsight cluster user name. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (HDInsightLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightLinkedService)(nil)).Elem()
}

func (i HDInsightLinkedServiceArgs) ToHDInsightLinkedServiceOutput() HDInsightLinkedServiceOutput {
	return i.ToHDInsightLinkedServiceOutputWithContext(context.Background())
}

func (i HDInsightLinkedServiceArgs) ToHDInsightLinkedServiceOutputWithContext(ctx context.Context) HDInsightLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightLinkedServiceOutput)
}

// HDInsight linked service.
type HDInsightLinkedServiceOutput struct{ *pulumi.OutputState }

func (HDInsightLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightLinkedService)(nil)).Elem()
}

func (o HDInsightLinkedServiceOutput) ToHDInsightLinkedServiceOutput() HDInsightLinkedServiceOutput {
	return o
}

func (o HDInsightLinkedServiceOutput) ToHDInsightLinkedServiceOutputWithContext(ctx context.Context) HDInsightLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o HDInsightLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// HDInsight cluster URI. Type: string (or Expression with resultType string).
func (o HDInsightLinkedServiceOutput) ClusterUri() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightLinkedService) interface{} { return v.ClusterUri }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o HDInsightLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v HDInsightLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o HDInsightLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o HDInsightLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// A reference to the Azure SQL linked service that points to the HCatalog database.
func (o HDInsightLinkedServiceOutput) HcatalogLinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v HDInsightLinkedService) *LinkedServiceReference { return v.HcatalogLinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// The Azure Storage linked service reference.
func (o HDInsightLinkedServiceOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v HDInsightLinkedService) *LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// Parameters for linked service.
func (o HDInsightLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v HDInsightLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// HDInsight cluster password.
func (o HDInsightLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'HDInsight'.
func (o HDInsightLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// HDInsight cluster user name. Type: string (or Expression with resultType string).
func (o HDInsightLinkedServiceOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightLinkedService) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// HDInsight linked service.
type HDInsightLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// HDInsight cluster URI. Type: string (or Expression with resultType string).
	ClusterUri interface{} `pulumi:"clusterUri"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// A reference to the Azure SQL linked service that points to the HCatalog database.
	HcatalogLinkedServiceName *LinkedServiceReferenceResponse `pulumi:"hcatalogLinkedServiceName"`
	// The Azure Storage linked service reference.
	LinkedServiceName *LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// HDInsight cluster password.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'HDInsight'.
	Type string `pulumi:"type"`
	// HDInsight cluster user name. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// HDInsightLinkedServiceResponseInput is an input type that accepts HDInsightLinkedServiceResponseArgs and HDInsightLinkedServiceResponseOutput values.
// You can construct a concrete instance of `HDInsightLinkedServiceResponseInput` via:
//
//          HDInsightLinkedServiceResponseArgs{...}
type HDInsightLinkedServiceResponseInput interface {
	pulumi.Input

	ToHDInsightLinkedServiceResponseOutput() HDInsightLinkedServiceResponseOutput
	ToHDInsightLinkedServiceResponseOutputWithContext(context.Context) HDInsightLinkedServiceResponseOutput
}

// HDInsight linked service.
type HDInsightLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// HDInsight cluster URI. Type: string (or Expression with resultType string).
	ClusterUri pulumi.Input `pulumi:"clusterUri"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// A reference to the Azure SQL linked service that points to the HCatalog database.
	HcatalogLinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"hcatalogLinkedServiceName"`
	// The Azure Storage linked service reference.
	LinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"linkedServiceName"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// HDInsight cluster password.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'HDInsight'.
	Type pulumi.StringInput `pulumi:"type"`
	// HDInsight cluster user name. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (HDInsightLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightLinkedServiceResponse)(nil)).Elem()
}

func (i HDInsightLinkedServiceResponseArgs) ToHDInsightLinkedServiceResponseOutput() HDInsightLinkedServiceResponseOutput {
	return i.ToHDInsightLinkedServiceResponseOutputWithContext(context.Background())
}

func (i HDInsightLinkedServiceResponseArgs) ToHDInsightLinkedServiceResponseOutputWithContext(ctx context.Context) HDInsightLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightLinkedServiceResponseOutput)
}

// HDInsight linked service.
type HDInsightLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (HDInsightLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightLinkedServiceResponse)(nil)).Elem()
}

func (o HDInsightLinkedServiceResponseOutput) ToHDInsightLinkedServiceResponseOutput() HDInsightLinkedServiceResponseOutput {
	return o
}

func (o HDInsightLinkedServiceResponseOutput) ToHDInsightLinkedServiceResponseOutputWithContext(ctx context.Context) HDInsightLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o HDInsightLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// HDInsight cluster URI. Type: string (or Expression with resultType string).
func (o HDInsightLinkedServiceResponseOutput) ClusterUri() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightLinkedServiceResponse) interface{} { return v.ClusterUri }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o HDInsightLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v HDInsightLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o HDInsightLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o HDInsightLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// A reference to the Azure SQL linked service that points to the HCatalog database.
func (o HDInsightLinkedServiceResponseOutput) HcatalogLinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v HDInsightLinkedServiceResponse) *LinkedServiceReferenceResponse {
		return v.HcatalogLinkedServiceName
	}).(LinkedServiceReferenceResponsePtrOutput)
}

// The Azure Storage linked service reference.
func (o HDInsightLinkedServiceResponseOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v HDInsightLinkedServiceResponse) *LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponsePtrOutput)
}

// Parameters for linked service.
func (o HDInsightLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v HDInsightLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// HDInsight cluster password.
func (o HDInsightLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'HDInsight'.
func (o HDInsightLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// HDInsight cluster user name. Type: string (or Expression with resultType string).
func (o HDInsightLinkedServiceResponseOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightLinkedServiceResponse) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// HDInsight MapReduce activity type.
type HDInsightMapReduceActivity struct {
	// User specified arguments to HDInsightActivity.
	Arguments []interface{} `pulumi:"arguments"`
	// Class name. Type: string (or Expression with resultType string).
	ClassName interface{} `pulumi:"className"`
	// Allows user to specify defines for the MapReduce job request.
	Defines map[string]interface{} `pulumi:"defines"`
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Debug info option.
	GetDebugInfo *string `pulumi:"getDebugInfo"`
	// Jar path. Type: string (or Expression with resultType string).
	JarFilePath interface{} `pulumi:"jarFilePath"`
	// Jar libs.
	JarLibs []interface{} `pulumi:"jarLibs"`
	// Jar linked service reference.
	JarLinkedService *LinkedServiceReference `pulumi:"jarLinkedService"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReference `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicy `pulumi:"policy"`
	// Storage linked service references.
	StorageLinkedServices []LinkedServiceReference `pulumi:"storageLinkedServices"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// HDInsightMapReduceActivityInput is an input type that accepts HDInsightMapReduceActivityArgs and HDInsightMapReduceActivityOutput values.
// You can construct a concrete instance of `HDInsightMapReduceActivityInput` via:
//
//          HDInsightMapReduceActivityArgs{...}
type HDInsightMapReduceActivityInput interface {
	pulumi.Input

	ToHDInsightMapReduceActivityOutput() HDInsightMapReduceActivityOutput
	ToHDInsightMapReduceActivityOutputWithContext(context.Context) HDInsightMapReduceActivityOutput
}

// HDInsight MapReduce activity type.
type HDInsightMapReduceActivityArgs struct {
	// User specified arguments to HDInsightActivity.
	Arguments pulumi.ArrayInput `pulumi:"arguments"`
	// Class name. Type: string (or Expression with resultType string).
	ClassName pulumi.Input `pulumi:"className"`
	// Allows user to specify defines for the MapReduce job request.
	Defines pulumi.MapInput `pulumi:"defines"`
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Debug info option.
	GetDebugInfo pulumi.StringPtrInput `pulumi:"getDebugInfo"`
	// Jar path. Type: string (or Expression with resultType string).
	JarFilePath pulumi.Input `pulumi:"jarFilePath"`
	// Jar libs.
	JarLibs pulumi.ArrayInput `pulumi:"jarLibs"`
	// Jar linked service reference.
	JarLinkedService LinkedServiceReferencePtrInput `pulumi:"jarLinkedService"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferencePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyPtrInput `pulumi:"policy"`
	// Storage linked service references.
	StorageLinkedServices LinkedServiceReferenceArrayInput `pulumi:"storageLinkedServices"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HDInsightMapReduceActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightMapReduceActivity)(nil)).Elem()
}

func (i HDInsightMapReduceActivityArgs) ToHDInsightMapReduceActivityOutput() HDInsightMapReduceActivityOutput {
	return i.ToHDInsightMapReduceActivityOutputWithContext(context.Background())
}

func (i HDInsightMapReduceActivityArgs) ToHDInsightMapReduceActivityOutputWithContext(ctx context.Context) HDInsightMapReduceActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightMapReduceActivityOutput)
}

// HDInsight MapReduce activity type.
type HDInsightMapReduceActivityOutput struct{ *pulumi.OutputState }

func (HDInsightMapReduceActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightMapReduceActivity)(nil)).Elem()
}

func (o HDInsightMapReduceActivityOutput) ToHDInsightMapReduceActivityOutput() HDInsightMapReduceActivityOutput {
	return o
}

func (o HDInsightMapReduceActivityOutput) ToHDInsightMapReduceActivityOutputWithContext(ctx context.Context) HDInsightMapReduceActivityOutput {
	return o
}

// User specified arguments to HDInsightActivity.
func (o HDInsightMapReduceActivityOutput) Arguments() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivity) []interface{} { return v.Arguments }).(pulumi.ArrayOutput)
}

// Class name. Type: string (or Expression with resultType string).
func (o HDInsightMapReduceActivityOutput) ClassName() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivity) interface{} { return v.ClassName }).(pulumi.AnyOutput)
}

// Allows user to specify defines for the MapReduce job request.
func (o HDInsightMapReduceActivityOutput) Defines() pulumi.MapOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivity) map[string]interface{} { return v.Defines }).(pulumi.MapOutput)
}

// Activity depends on condition.
func (o HDInsightMapReduceActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o HDInsightMapReduceActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Debug info option.
func (o HDInsightMapReduceActivityOutput) GetDebugInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivity) *string { return v.GetDebugInfo }).(pulumi.StringPtrOutput)
}

// Jar path. Type: string (or Expression with resultType string).
func (o HDInsightMapReduceActivityOutput) JarFilePath() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivity) interface{} { return v.JarFilePath }).(pulumi.AnyOutput)
}

// Jar libs.
func (o HDInsightMapReduceActivityOutput) JarLibs() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivity) []interface{} { return v.JarLibs }).(pulumi.ArrayOutput)
}

// Jar linked service reference.
func (o HDInsightMapReduceActivityOutput) JarLinkedService() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivity) *LinkedServiceReference { return v.JarLinkedService }).(LinkedServiceReferencePtrOutput)
}

// Linked service reference.
func (o HDInsightMapReduceActivityOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivity) *LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// Activity name.
func (o HDInsightMapReduceActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o HDInsightMapReduceActivityOutput) Policy() ActivityPolicyPtrOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivity) *ActivityPolicy { return v.Policy }).(ActivityPolicyPtrOutput)
}

// Storage linked service references.
func (o HDInsightMapReduceActivityOutput) StorageLinkedServices() LinkedServiceReferenceArrayOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivity) []LinkedServiceReference { return v.StorageLinkedServices }).(LinkedServiceReferenceArrayOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o HDInsightMapReduceActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivity) string { return v.Type }).(pulumi.StringOutput)
}

// HDInsight MapReduce activity type.
type HDInsightMapReduceActivityResponse struct {
	// User specified arguments to HDInsightActivity.
	Arguments []interface{} `pulumi:"arguments"`
	// Class name. Type: string (or Expression with resultType string).
	ClassName interface{} `pulumi:"className"`
	// Allows user to specify defines for the MapReduce job request.
	Defines map[string]interface{} `pulumi:"defines"`
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Debug info option.
	GetDebugInfo *string `pulumi:"getDebugInfo"`
	// Jar path. Type: string (or Expression with resultType string).
	JarFilePath interface{} `pulumi:"jarFilePath"`
	// Jar libs.
	JarLibs []interface{} `pulumi:"jarLibs"`
	// Jar linked service reference.
	JarLinkedService *LinkedServiceReferenceResponse `pulumi:"jarLinkedService"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicyResponse `pulumi:"policy"`
	// Storage linked service references.
	StorageLinkedServices []LinkedServiceReferenceResponse `pulumi:"storageLinkedServices"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// HDInsightMapReduceActivityResponseInput is an input type that accepts HDInsightMapReduceActivityResponseArgs and HDInsightMapReduceActivityResponseOutput values.
// You can construct a concrete instance of `HDInsightMapReduceActivityResponseInput` via:
//
//          HDInsightMapReduceActivityResponseArgs{...}
type HDInsightMapReduceActivityResponseInput interface {
	pulumi.Input

	ToHDInsightMapReduceActivityResponseOutput() HDInsightMapReduceActivityResponseOutput
	ToHDInsightMapReduceActivityResponseOutputWithContext(context.Context) HDInsightMapReduceActivityResponseOutput
}

// HDInsight MapReduce activity type.
type HDInsightMapReduceActivityResponseArgs struct {
	// User specified arguments to HDInsightActivity.
	Arguments pulumi.ArrayInput `pulumi:"arguments"`
	// Class name. Type: string (or Expression with resultType string).
	ClassName pulumi.Input `pulumi:"className"`
	// Allows user to specify defines for the MapReduce job request.
	Defines pulumi.MapInput `pulumi:"defines"`
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Debug info option.
	GetDebugInfo pulumi.StringPtrInput `pulumi:"getDebugInfo"`
	// Jar path. Type: string (or Expression with resultType string).
	JarFilePath pulumi.Input `pulumi:"jarFilePath"`
	// Jar libs.
	JarLibs pulumi.ArrayInput `pulumi:"jarLibs"`
	// Jar linked service reference.
	JarLinkedService LinkedServiceReferenceResponsePtrInput `pulumi:"jarLinkedService"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyResponsePtrInput `pulumi:"policy"`
	// Storage linked service references.
	StorageLinkedServices LinkedServiceReferenceResponseArrayInput `pulumi:"storageLinkedServices"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HDInsightMapReduceActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightMapReduceActivityResponse)(nil)).Elem()
}

func (i HDInsightMapReduceActivityResponseArgs) ToHDInsightMapReduceActivityResponseOutput() HDInsightMapReduceActivityResponseOutput {
	return i.ToHDInsightMapReduceActivityResponseOutputWithContext(context.Background())
}

func (i HDInsightMapReduceActivityResponseArgs) ToHDInsightMapReduceActivityResponseOutputWithContext(ctx context.Context) HDInsightMapReduceActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightMapReduceActivityResponseOutput)
}

// HDInsight MapReduce activity type.
type HDInsightMapReduceActivityResponseOutput struct{ *pulumi.OutputState }

func (HDInsightMapReduceActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightMapReduceActivityResponse)(nil)).Elem()
}

func (o HDInsightMapReduceActivityResponseOutput) ToHDInsightMapReduceActivityResponseOutput() HDInsightMapReduceActivityResponseOutput {
	return o
}

func (o HDInsightMapReduceActivityResponseOutput) ToHDInsightMapReduceActivityResponseOutputWithContext(ctx context.Context) HDInsightMapReduceActivityResponseOutput {
	return o
}

// User specified arguments to HDInsightActivity.
func (o HDInsightMapReduceActivityResponseOutput) Arguments() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivityResponse) []interface{} { return v.Arguments }).(pulumi.ArrayOutput)
}

// Class name. Type: string (or Expression with resultType string).
func (o HDInsightMapReduceActivityResponseOutput) ClassName() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivityResponse) interface{} { return v.ClassName }).(pulumi.AnyOutput)
}

// Allows user to specify defines for the MapReduce job request.
func (o HDInsightMapReduceActivityResponseOutput) Defines() pulumi.MapOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivityResponse) map[string]interface{} { return v.Defines }).(pulumi.MapOutput)
}

// Activity depends on condition.
func (o HDInsightMapReduceActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o HDInsightMapReduceActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Debug info option.
func (o HDInsightMapReduceActivityResponseOutput) GetDebugInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivityResponse) *string { return v.GetDebugInfo }).(pulumi.StringPtrOutput)
}

// Jar path. Type: string (or Expression with resultType string).
func (o HDInsightMapReduceActivityResponseOutput) JarFilePath() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivityResponse) interface{} { return v.JarFilePath }).(pulumi.AnyOutput)
}

// Jar libs.
func (o HDInsightMapReduceActivityResponseOutput) JarLibs() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivityResponse) []interface{} { return v.JarLibs }).(pulumi.ArrayOutput)
}

// Jar linked service reference.
func (o HDInsightMapReduceActivityResponseOutput) JarLinkedService() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivityResponse) *LinkedServiceReferenceResponse { return v.JarLinkedService }).(LinkedServiceReferenceResponsePtrOutput)
}

// Linked service reference.
func (o HDInsightMapReduceActivityResponseOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivityResponse) *LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponsePtrOutput)
}

// Activity name.
func (o HDInsightMapReduceActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o HDInsightMapReduceActivityResponseOutput) Policy() ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivityResponse) *ActivityPolicyResponse { return v.Policy }).(ActivityPolicyResponsePtrOutput)
}

// Storage linked service references.
func (o HDInsightMapReduceActivityResponseOutput) StorageLinkedServices() LinkedServiceReferenceResponseArrayOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivityResponse) []LinkedServiceReferenceResponse {
		return v.StorageLinkedServices
	}).(LinkedServiceReferenceResponseArrayOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o HDInsightMapReduceActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightMapReduceActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// HDInsight ondemand linked service.
type HDInsightOnDemandLinkedService struct {
	// Specifies additional storage accounts for the HDInsight linked service so that the Data Factory service can register them on your behalf.
	AdditionalLinkedServiceNames []LinkedServiceReference `pulumi:"additionalLinkedServiceNames"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The prefix of cluster name, postfix will be distinct with timestamp. Type: string (or Expression with resultType string).
	ClusterNamePrefix interface{} `pulumi:"clusterNamePrefix"`
	// The password to access the cluster.
	ClusterPassword interface{} `pulumi:"clusterPassword"`
	// The resource group where the cluster belongs. Type: string (or Expression with resultType string).
	ClusterResourceGroup interface{} `pulumi:"clusterResourceGroup"`
	// Number of worker/data nodes in the cluster. Suggestion value: 4. Type: string (or Expression with resultType string).
	ClusterSize interface{} `pulumi:"clusterSize"`
	// The password to SSH remotely connect cluster’s node (for Linux).
	ClusterSshPassword interface{} `pulumi:"clusterSshPassword"`
	// The username to SSH remotely connect to cluster’s node (for Linux). Type: string (or Expression with resultType string).
	ClusterSshUserName interface{} `pulumi:"clusterSshUserName"`
	// The cluster type. Type: string (or Expression with resultType string).
	ClusterType interface{} `pulumi:"clusterType"`
	// The username to access the cluster. Type: string (or Expression with resultType string).
	ClusterUserName interface{} `pulumi:"clusterUserName"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Specifies the core configuration parameters (as in core-site.xml) for the HDInsight cluster to be created.
	CoreConfiguration interface{} `pulumi:"coreConfiguration"`
	// Specifies the size of the data node for the HDInsight cluster.
	DataNodeSize interface{} `pulumi:"dataNodeSize"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Specifies the HBase configuration parameters (hbase-site.xml) for the HDInsight cluster.
	HBaseConfiguration interface{} `pulumi:"hBaseConfiguration"`
	// The name of Azure SQL linked service that point to the HCatalog database. The on-demand HDInsight cluster is created by using the Azure SQL database as the metastore.
	HcatalogLinkedServiceName *LinkedServiceReference `pulumi:"hcatalogLinkedServiceName"`
	// Specifies the HDFS configuration parameters (hdfs-site.xml) for the HDInsight cluster.
	HdfsConfiguration interface{} `pulumi:"hdfsConfiguration"`
	// Specifies the size of the head node for the HDInsight cluster.
	HeadNodeSize interface{} `pulumi:"headNodeSize"`
	// Specifies the hive configuration parameters (hive-site.xml) for the HDInsight cluster.
	HiveConfiguration interface{} `pulumi:"hiveConfiguration"`
	// The customer’s subscription to host the cluster. Type: string (or Expression with resultType string).
	HostSubscriptionId interface{} `pulumi:"hostSubscriptionId"`
	// Azure Storage linked service to be used by the on-demand cluster for storing and processing data.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Specifies the MapReduce configuration parameters (mapred-site.xml) for the HDInsight cluster.
	MapReduceConfiguration interface{} `pulumi:"mapReduceConfiguration"`
	// Specifies the Oozie configuration parameters (oozie-site.xml) for the HDInsight cluster.
	OozieConfiguration interface{} `pulumi:"oozieConfiguration"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The service principal id for the hostSubscriptionId. Type: string (or Expression with resultType string).
	ServicePrincipalId interface{} `pulumi:"servicePrincipalId"`
	// The key for the service principal id.
	ServicePrincipalKey interface{} `pulumi:"servicePrincipalKey"`
	// The version of spark if the cluster type is 'spark'. Type: string (or Expression with resultType string).
	SparkVersion interface{} `pulumi:"sparkVersion"`
	// Specifies the Storm configuration parameters (storm-site.xml) for the HDInsight cluster.
	StormConfiguration interface{} `pulumi:"stormConfiguration"`
	// The Tenant id/name to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant interface{} `pulumi:"tenant"`
	// The allowed idle time for the on-demand HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays alive after completion of an activity run if there are no other active jobs in the cluster. The minimum value is 5 mins. Type: string (or Expression with resultType string).
	TimeToLive interface{} `pulumi:"timeToLive"`
	// Type of linked service.
	// Expected value is 'HDInsightOnDemand'.
	Type string `pulumi:"type"`
	// Version of the HDInsight cluster.  Type: string (or Expression with resultType string).
	Version interface{} `pulumi:"version"`
	// Specifies the Yarn configuration parameters (yarn-site.xml) for the HDInsight cluster.
	YarnConfiguration interface{} `pulumi:"yarnConfiguration"`
	// Specifies the size of the Zoo Keeper node for the HDInsight cluster.
	ZookeeperNodeSize interface{} `pulumi:"zookeeperNodeSize"`
}

// HDInsightOnDemandLinkedServiceInput is an input type that accepts HDInsightOnDemandLinkedServiceArgs and HDInsightOnDemandLinkedServiceOutput values.
// You can construct a concrete instance of `HDInsightOnDemandLinkedServiceInput` via:
//
//          HDInsightOnDemandLinkedServiceArgs{...}
type HDInsightOnDemandLinkedServiceInput interface {
	pulumi.Input

	ToHDInsightOnDemandLinkedServiceOutput() HDInsightOnDemandLinkedServiceOutput
	ToHDInsightOnDemandLinkedServiceOutputWithContext(context.Context) HDInsightOnDemandLinkedServiceOutput
}

// HDInsight ondemand linked service.
type HDInsightOnDemandLinkedServiceArgs struct {
	// Specifies additional storage accounts for the HDInsight linked service so that the Data Factory service can register them on your behalf.
	AdditionalLinkedServiceNames LinkedServiceReferenceArrayInput `pulumi:"additionalLinkedServiceNames"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The prefix of cluster name, postfix will be distinct with timestamp. Type: string (or Expression with resultType string).
	ClusterNamePrefix pulumi.Input `pulumi:"clusterNamePrefix"`
	// The password to access the cluster.
	ClusterPassword pulumi.Input `pulumi:"clusterPassword"`
	// The resource group where the cluster belongs. Type: string (or Expression with resultType string).
	ClusterResourceGroup pulumi.Input `pulumi:"clusterResourceGroup"`
	// Number of worker/data nodes in the cluster. Suggestion value: 4. Type: string (or Expression with resultType string).
	ClusterSize pulumi.Input `pulumi:"clusterSize"`
	// The password to SSH remotely connect cluster’s node (for Linux).
	ClusterSshPassword pulumi.Input `pulumi:"clusterSshPassword"`
	// The username to SSH remotely connect to cluster’s node (for Linux). Type: string (or Expression with resultType string).
	ClusterSshUserName pulumi.Input `pulumi:"clusterSshUserName"`
	// The cluster type. Type: string (or Expression with resultType string).
	ClusterType pulumi.Input `pulumi:"clusterType"`
	// The username to access the cluster. Type: string (or Expression with resultType string).
	ClusterUserName pulumi.Input `pulumi:"clusterUserName"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Specifies the core configuration parameters (as in core-site.xml) for the HDInsight cluster to be created.
	CoreConfiguration pulumi.Input `pulumi:"coreConfiguration"`
	// Specifies the size of the data node for the HDInsight cluster.
	DataNodeSize pulumi.Input `pulumi:"dataNodeSize"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Specifies the HBase configuration parameters (hbase-site.xml) for the HDInsight cluster.
	HBaseConfiguration pulumi.Input `pulumi:"hBaseConfiguration"`
	// The name of Azure SQL linked service that point to the HCatalog database. The on-demand HDInsight cluster is created by using the Azure SQL database as the metastore.
	HcatalogLinkedServiceName LinkedServiceReferencePtrInput `pulumi:"hcatalogLinkedServiceName"`
	// Specifies the HDFS configuration parameters (hdfs-site.xml) for the HDInsight cluster.
	HdfsConfiguration pulumi.Input `pulumi:"hdfsConfiguration"`
	// Specifies the size of the head node for the HDInsight cluster.
	HeadNodeSize pulumi.Input `pulumi:"headNodeSize"`
	// Specifies the hive configuration parameters (hive-site.xml) for the HDInsight cluster.
	HiveConfiguration pulumi.Input `pulumi:"hiveConfiguration"`
	// The customer’s subscription to host the cluster. Type: string (or Expression with resultType string).
	HostSubscriptionId pulumi.Input `pulumi:"hostSubscriptionId"`
	// Azure Storage linked service to be used by the on-demand cluster for storing and processing data.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Specifies the MapReduce configuration parameters (mapred-site.xml) for the HDInsight cluster.
	MapReduceConfiguration pulumi.Input `pulumi:"mapReduceConfiguration"`
	// Specifies the Oozie configuration parameters (oozie-site.xml) for the HDInsight cluster.
	OozieConfiguration pulumi.Input `pulumi:"oozieConfiguration"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The service principal id for the hostSubscriptionId. Type: string (or Expression with resultType string).
	ServicePrincipalId pulumi.Input `pulumi:"servicePrincipalId"`
	// The key for the service principal id.
	ServicePrincipalKey pulumi.Input `pulumi:"servicePrincipalKey"`
	// The version of spark if the cluster type is 'spark'. Type: string (or Expression with resultType string).
	SparkVersion pulumi.Input `pulumi:"sparkVersion"`
	// Specifies the Storm configuration parameters (storm-site.xml) for the HDInsight cluster.
	StormConfiguration pulumi.Input `pulumi:"stormConfiguration"`
	// The Tenant id/name to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant pulumi.Input `pulumi:"tenant"`
	// The allowed idle time for the on-demand HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays alive after completion of an activity run if there are no other active jobs in the cluster. The minimum value is 5 mins. Type: string (or Expression with resultType string).
	TimeToLive pulumi.Input `pulumi:"timeToLive"`
	// Type of linked service.
	// Expected value is 'HDInsightOnDemand'.
	Type pulumi.StringInput `pulumi:"type"`
	// Version of the HDInsight cluster.  Type: string (or Expression with resultType string).
	Version pulumi.Input `pulumi:"version"`
	// Specifies the Yarn configuration parameters (yarn-site.xml) for the HDInsight cluster.
	YarnConfiguration pulumi.Input `pulumi:"yarnConfiguration"`
	// Specifies the size of the Zoo Keeper node for the HDInsight cluster.
	ZookeeperNodeSize pulumi.Input `pulumi:"zookeeperNodeSize"`
}

func (HDInsightOnDemandLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightOnDemandLinkedService)(nil)).Elem()
}

func (i HDInsightOnDemandLinkedServiceArgs) ToHDInsightOnDemandLinkedServiceOutput() HDInsightOnDemandLinkedServiceOutput {
	return i.ToHDInsightOnDemandLinkedServiceOutputWithContext(context.Background())
}

func (i HDInsightOnDemandLinkedServiceArgs) ToHDInsightOnDemandLinkedServiceOutputWithContext(ctx context.Context) HDInsightOnDemandLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightOnDemandLinkedServiceOutput)
}

// HDInsight ondemand linked service.
type HDInsightOnDemandLinkedServiceOutput struct{ *pulumi.OutputState }

func (HDInsightOnDemandLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightOnDemandLinkedService)(nil)).Elem()
}

func (o HDInsightOnDemandLinkedServiceOutput) ToHDInsightOnDemandLinkedServiceOutput() HDInsightOnDemandLinkedServiceOutput {
	return o
}

func (o HDInsightOnDemandLinkedServiceOutput) ToHDInsightOnDemandLinkedServiceOutputWithContext(ctx context.Context) HDInsightOnDemandLinkedServiceOutput {
	return o
}

// Specifies additional storage accounts for the HDInsight linked service so that the Data Factory service can register them on your behalf.
func (o HDInsightOnDemandLinkedServiceOutput) AdditionalLinkedServiceNames() LinkedServiceReferenceArrayOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) []LinkedServiceReference { return v.AdditionalLinkedServiceNames }).(LinkedServiceReferenceArrayOutput)
}

// List of tags that can be used for describing the Dataset.
func (o HDInsightOnDemandLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The prefix of cluster name, postfix will be distinct with timestamp. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceOutput) ClusterNamePrefix() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.ClusterNamePrefix }).(pulumi.AnyOutput)
}

// The password to access the cluster.
func (o HDInsightOnDemandLinkedServiceOutput) ClusterPassword() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.ClusterPassword }).(pulumi.AnyOutput)
}

// The resource group where the cluster belongs. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceOutput) ClusterResourceGroup() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.ClusterResourceGroup }).(pulumi.AnyOutput)
}

// Number of worker/data nodes in the cluster. Suggestion value: 4. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceOutput) ClusterSize() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.ClusterSize }).(pulumi.AnyOutput)
}

// The password to SSH remotely connect cluster’s node (for Linux).
func (o HDInsightOnDemandLinkedServiceOutput) ClusterSshPassword() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.ClusterSshPassword }).(pulumi.AnyOutput)
}

// The username to SSH remotely connect to cluster’s node (for Linux). Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceOutput) ClusterSshUserName() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.ClusterSshUserName }).(pulumi.AnyOutput)
}

// The cluster type. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceOutput) ClusterType() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.ClusterType }).(pulumi.AnyOutput)
}

// The username to access the cluster. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceOutput) ClusterUserName() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.ClusterUserName }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o HDInsightOnDemandLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Specifies the core configuration parameters (as in core-site.xml) for the HDInsight cluster to be created.
func (o HDInsightOnDemandLinkedServiceOutput) CoreConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.CoreConfiguration }).(pulumi.AnyOutput)
}

// Specifies the size of the data node for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceOutput) DataNodeSize() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.DataNodeSize }).(pulumi.AnyOutput)
}

// Linked service description.
func (o HDInsightOnDemandLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Specifies the HBase configuration parameters (hbase-site.xml) for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceOutput) HBaseConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.HBaseConfiguration }).(pulumi.AnyOutput)
}

// The name of Azure SQL linked service that point to the HCatalog database. The on-demand HDInsight cluster is created by using the Azure SQL database as the metastore.
func (o HDInsightOnDemandLinkedServiceOutput) HcatalogLinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) *LinkedServiceReference { return v.HcatalogLinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// Specifies the HDFS configuration parameters (hdfs-site.xml) for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceOutput) HdfsConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.HdfsConfiguration }).(pulumi.AnyOutput)
}

// Specifies the size of the head node for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceOutput) HeadNodeSize() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.HeadNodeSize }).(pulumi.AnyOutput)
}

// Specifies the hive configuration parameters (hive-site.xml) for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceOutput) HiveConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.HiveConfiguration }).(pulumi.AnyOutput)
}

// The customer’s subscription to host the cluster. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceOutput) HostSubscriptionId() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.HostSubscriptionId }).(pulumi.AnyOutput)
}

// Azure Storage linked service to be used by the on-demand cluster for storing and processing data.
func (o HDInsightOnDemandLinkedServiceOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Specifies the MapReduce configuration parameters (mapred-site.xml) for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceOutput) MapReduceConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.MapReduceConfiguration }).(pulumi.AnyOutput)
}

// Specifies the Oozie configuration parameters (oozie-site.xml) for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceOutput) OozieConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.OozieConfiguration }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o HDInsightOnDemandLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The service principal id for the hostSubscriptionId. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceOutput) ServicePrincipalId() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.ServicePrincipalId }).(pulumi.AnyOutput)
}

// The key for the service principal id.
func (o HDInsightOnDemandLinkedServiceOutput) ServicePrincipalKey() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.ServicePrincipalKey }).(pulumi.AnyOutput)
}

// The version of spark if the cluster type is 'spark'. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceOutput) SparkVersion() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.SparkVersion }).(pulumi.AnyOutput)
}

// Specifies the Storm configuration parameters (storm-site.xml) for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceOutput) StormConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.StormConfiguration }).(pulumi.AnyOutput)
}

// The Tenant id/name to which the service principal belongs. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceOutput) Tenant() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.Tenant }).(pulumi.AnyOutput)
}

// The allowed idle time for the on-demand HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays alive after completion of an activity run if there are no other active jobs in the cluster. The minimum value is 5 mins. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceOutput) TimeToLive() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.TimeToLive }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'HDInsightOnDemand'.
func (o HDInsightOnDemandLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the HDInsight cluster.  Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceOutput) Version() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.Version }).(pulumi.AnyOutput)
}

// Specifies the Yarn configuration parameters (yarn-site.xml) for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceOutput) YarnConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.YarnConfiguration }).(pulumi.AnyOutput)
}

// Specifies the size of the Zoo Keeper node for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceOutput) ZookeeperNodeSize() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedService) interface{} { return v.ZookeeperNodeSize }).(pulumi.AnyOutput)
}

// HDInsight ondemand linked service.
type HDInsightOnDemandLinkedServiceResponse struct {
	// Specifies additional storage accounts for the HDInsight linked service so that the Data Factory service can register them on your behalf.
	AdditionalLinkedServiceNames []LinkedServiceReferenceResponse `pulumi:"additionalLinkedServiceNames"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The prefix of cluster name, postfix will be distinct with timestamp. Type: string (or Expression with resultType string).
	ClusterNamePrefix interface{} `pulumi:"clusterNamePrefix"`
	// The password to access the cluster.
	ClusterPassword interface{} `pulumi:"clusterPassword"`
	// The resource group where the cluster belongs. Type: string (or Expression with resultType string).
	ClusterResourceGroup interface{} `pulumi:"clusterResourceGroup"`
	// Number of worker/data nodes in the cluster. Suggestion value: 4. Type: string (or Expression with resultType string).
	ClusterSize interface{} `pulumi:"clusterSize"`
	// The password to SSH remotely connect cluster’s node (for Linux).
	ClusterSshPassword interface{} `pulumi:"clusterSshPassword"`
	// The username to SSH remotely connect to cluster’s node (for Linux). Type: string (or Expression with resultType string).
	ClusterSshUserName interface{} `pulumi:"clusterSshUserName"`
	// The cluster type. Type: string (or Expression with resultType string).
	ClusterType interface{} `pulumi:"clusterType"`
	// The username to access the cluster. Type: string (or Expression with resultType string).
	ClusterUserName interface{} `pulumi:"clusterUserName"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Specifies the core configuration parameters (as in core-site.xml) for the HDInsight cluster to be created.
	CoreConfiguration interface{} `pulumi:"coreConfiguration"`
	// Specifies the size of the data node for the HDInsight cluster.
	DataNodeSize interface{} `pulumi:"dataNodeSize"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Specifies the HBase configuration parameters (hbase-site.xml) for the HDInsight cluster.
	HBaseConfiguration interface{} `pulumi:"hBaseConfiguration"`
	// The name of Azure SQL linked service that point to the HCatalog database. The on-demand HDInsight cluster is created by using the Azure SQL database as the metastore.
	HcatalogLinkedServiceName *LinkedServiceReferenceResponse `pulumi:"hcatalogLinkedServiceName"`
	// Specifies the HDFS configuration parameters (hdfs-site.xml) for the HDInsight cluster.
	HdfsConfiguration interface{} `pulumi:"hdfsConfiguration"`
	// Specifies the size of the head node for the HDInsight cluster.
	HeadNodeSize interface{} `pulumi:"headNodeSize"`
	// Specifies the hive configuration parameters (hive-site.xml) for the HDInsight cluster.
	HiveConfiguration interface{} `pulumi:"hiveConfiguration"`
	// The customer’s subscription to host the cluster. Type: string (or Expression with resultType string).
	HostSubscriptionId interface{} `pulumi:"hostSubscriptionId"`
	// Azure Storage linked service to be used by the on-demand cluster for storing and processing data.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Specifies the MapReduce configuration parameters (mapred-site.xml) for the HDInsight cluster.
	MapReduceConfiguration interface{} `pulumi:"mapReduceConfiguration"`
	// Specifies the Oozie configuration parameters (oozie-site.xml) for the HDInsight cluster.
	OozieConfiguration interface{} `pulumi:"oozieConfiguration"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The service principal id for the hostSubscriptionId. Type: string (or Expression with resultType string).
	ServicePrincipalId interface{} `pulumi:"servicePrincipalId"`
	// The key for the service principal id.
	ServicePrincipalKey interface{} `pulumi:"servicePrincipalKey"`
	// The version of spark if the cluster type is 'spark'. Type: string (or Expression with resultType string).
	SparkVersion interface{} `pulumi:"sparkVersion"`
	// Specifies the Storm configuration parameters (storm-site.xml) for the HDInsight cluster.
	StormConfiguration interface{} `pulumi:"stormConfiguration"`
	// The Tenant id/name to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant interface{} `pulumi:"tenant"`
	// The allowed idle time for the on-demand HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays alive after completion of an activity run if there are no other active jobs in the cluster. The minimum value is 5 mins. Type: string (or Expression with resultType string).
	TimeToLive interface{} `pulumi:"timeToLive"`
	// Type of linked service.
	// Expected value is 'HDInsightOnDemand'.
	Type string `pulumi:"type"`
	// Version of the HDInsight cluster.  Type: string (or Expression with resultType string).
	Version interface{} `pulumi:"version"`
	// Specifies the Yarn configuration parameters (yarn-site.xml) for the HDInsight cluster.
	YarnConfiguration interface{} `pulumi:"yarnConfiguration"`
	// Specifies the size of the Zoo Keeper node for the HDInsight cluster.
	ZookeeperNodeSize interface{} `pulumi:"zookeeperNodeSize"`
}

// HDInsightOnDemandLinkedServiceResponseInput is an input type that accepts HDInsightOnDemandLinkedServiceResponseArgs and HDInsightOnDemandLinkedServiceResponseOutput values.
// You can construct a concrete instance of `HDInsightOnDemandLinkedServiceResponseInput` via:
//
//          HDInsightOnDemandLinkedServiceResponseArgs{...}
type HDInsightOnDemandLinkedServiceResponseInput interface {
	pulumi.Input

	ToHDInsightOnDemandLinkedServiceResponseOutput() HDInsightOnDemandLinkedServiceResponseOutput
	ToHDInsightOnDemandLinkedServiceResponseOutputWithContext(context.Context) HDInsightOnDemandLinkedServiceResponseOutput
}

// HDInsight ondemand linked service.
type HDInsightOnDemandLinkedServiceResponseArgs struct {
	// Specifies additional storage accounts for the HDInsight linked service so that the Data Factory service can register them on your behalf.
	AdditionalLinkedServiceNames LinkedServiceReferenceResponseArrayInput `pulumi:"additionalLinkedServiceNames"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The prefix of cluster name, postfix will be distinct with timestamp. Type: string (or Expression with resultType string).
	ClusterNamePrefix pulumi.Input `pulumi:"clusterNamePrefix"`
	// The password to access the cluster.
	ClusterPassword pulumi.Input `pulumi:"clusterPassword"`
	// The resource group where the cluster belongs. Type: string (or Expression with resultType string).
	ClusterResourceGroup pulumi.Input `pulumi:"clusterResourceGroup"`
	// Number of worker/data nodes in the cluster. Suggestion value: 4. Type: string (or Expression with resultType string).
	ClusterSize pulumi.Input `pulumi:"clusterSize"`
	// The password to SSH remotely connect cluster’s node (for Linux).
	ClusterSshPassword pulumi.Input `pulumi:"clusterSshPassword"`
	// The username to SSH remotely connect to cluster’s node (for Linux). Type: string (or Expression with resultType string).
	ClusterSshUserName pulumi.Input `pulumi:"clusterSshUserName"`
	// The cluster type. Type: string (or Expression with resultType string).
	ClusterType pulumi.Input `pulumi:"clusterType"`
	// The username to access the cluster. Type: string (or Expression with resultType string).
	ClusterUserName pulumi.Input `pulumi:"clusterUserName"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Specifies the core configuration parameters (as in core-site.xml) for the HDInsight cluster to be created.
	CoreConfiguration pulumi.Input `pulumi:"coreConfiguration"`
	// Specifies the size of the data node for the HDInsight cluster.
	DataNodeSize pulumi.Input `pulumi:"dataNodeSize"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Specifies the HBase configuration parameters (hbase-site.xml) for the HDInsight cluster.
	HBaseConfiguration pulumi.Input `pulumi:"hBaseConfiguration"`
	// The name of Azure SQL linked service that point to the HCatalog database. The on-demand HDInsight cluster is created by using the Azure SQL database as the metastore.
	HcatalogLinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"hcatalogLinkedServiceName"`
	// Specifies the HDFS configuration parameters (hdfs-site.xml) for the HDInsight cluster.
	HdfsConfiguration pulumi.Input `pulumi:"hdfsConfiguration"`
	// Specifies the size of the head node for the HDInsight cluster.
	HeadNodeSize pulumi.Input `pulumi:"headNodeSize"`
	// Specifies the hive configuration parameters (hive-site.xml) for the HDInsight cluster.
	HiveConfiguration pulumi.Input `pulumi:"hiveConfiguration"`
	// The customer’s subscription to host the cluster. Type: string (or Expression with resultType string).
	HostSubscriptionId pulumi.Input `pulumi:"hostSubscriptionId"`
	// Azure Storage linked service to be used by the on-demand cluster for storing and processing data.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Specifies the MapReduce configuration parameters (mapred-site.xml) for the HDInsight cluster.
	MapReduceConfiguration pulumi.Input `pulumi:"mapReduceConfiguration"`
	// Specifies the Oozie configuration parameters (oozie-site.xml) for the HDInsight cluster.
	OozieConfiguration pulumi.Input `pulumi:"oozieConfiguration"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The service principal id for the hostSubscriptionId. Type: string (or Expression with resultType string).
	ServicePrincipalId pulumi.Input `pulumi:"servicePrincipalId"`
	// The key for the service principal id.
	ServicePrincipalKey pulumi.Input `pulumi:"servicePrincipalKey"`
	// The version of spark if the cluster type is 'spark'. Type: string (or Expression with resultType string).
	SparkVersion pulumi.Input `pulumi:"sparkVersion"`
	// Specifies the Storm configuration parameters (storm-site.xml) for the HDInsight cluster.
	StormConfiguration pulumi.Input `pulumi:"stormConfiguration"`
	// The Tenant id/name to which the service principal belongs. Type: string (or Expression with resultType string).
	Tenant pulumi.Input `pulumi:"tenant"`
	// The allowed idle time for the on-demand HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays alive after completion of an activity run if there are no other active jobs in the cluster. The minimum value is 5 mins. Type: string (or Expression with resultType string).
	TimeToLive pulumi.Input `pulumi:"timeToLive"`
	// Type of linked service.
	// Expected value is 'HDInsightOnDemand'.
	Type pulumi.StringInput `pulumi:"type"`
	// Version of the HDInsight cluster.  Type: string (or Expression with resultType string).
	Version pulumi.Input `pulumi:"version"`
	// Specifies the Yarn configuration parameters (yarn-site.xml) for the HDInsight cluster.
	YarnConfiguration pulumi.Input `pulumi:"yarnConfiguration"`
	// Specifies the size of the Zoo Keeper node for the HDInsight cluster.
	ZookeeperNodeSize pulumi.Input `pulumi:"zookeeperNodeSize"`
}

func (HDInsightOnDemandLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightOnDemandLinkedServiceResponse)(nil)).Elem()
}

func (i HDInsightOnDemandLinkedServiceResponseArgs) ToHDInsightOnDemandLinkedServiceResponseOutput() HDInsightOnDemandLinkedServiceResponseOutput {
	return i.ToHDInsightOnDemandLinkedServiceResponseOutputWithContext(context.Background())
}

func (i HDInsightOnDemandLinkedServiceResponseArgs) ToHDInsightOnDemandLinkedServiceResponseOutputWithContext(ctx context.Context) HDInsightOnDemandLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightOnDemandLinkedServiceResponseOutput)
}

// HDInsight ondemand linked service.
type HDInsightOnDemandLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (HDInsightOnDemandLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightOnDemandLinkedServiceResponse)(nil)).Elem()
}

func (o HDInsightOnDemandLinkedServiceResponseOutput) ToHDInsightOnDemandLinkedServiceResponseOutput() HDInsightOnDemandLinkedServiceResponseOutput {
	return o
}

func (o HDInsightOnDemandLinkedServiceResponseOutput) ToHDInsightOnDemandLinkedServiceResponseOutputWithContext(ctx context.Context) HDInsightOnDemandLinkedServiceResponseOutput {
	return o
}

// Specifies additional storage accounts for the HDInsight linked service so that the Data Factory service can register them on your behalf.
func (o HDInsightOnDemandLinkedServiceResponseOutput) AdditionalLinkedServiceNames() LinkedServiceReferenceResponseArrayOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) []LinkedServiceReferenceResponse {
		return v.AdditionalLinkedServiceNames
	}).(LinkedServiceReferenceResponseArrayOutput)
}

// List of tags that can be used for describing the Dataset.
func (o HDInsightOnDemandLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The prefix of cluster name, postfix will be distinct with timestamp. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceResponseOutput) ClusterNamePrefix() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.ClusterNamePrefix }).(pulumi.AnyOutput)
}

// The password to access the cluster.
func (o HDInsightOnDemandLinkedServiceResponseOutput) ClusterPassword() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.ClusterPassword }).(pulumi.AnyOutput)
}

// The resource group where the cluster belongs. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceResponseOutput) ClusterResourceGroup() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.ClusterResourceGroup }).(pulumi.AnyOutput)
}

// Number of worker/data nodes in the cluster. Suggestion value: 4. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceResponseOutput) ClusterSize() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.ClusterSize }).(pulumi.AnyOutput)
}

// The password to SSH remotely connect cluster’s node (for Linux).
func (o HDInsightOnDemandLinkedServiceResponseOutput) ClusterSshPassword() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.ClusterSshPassword }).(pulumi.AnyOutput)
}

// The username to SSH remotely connect to cluster’s node (for Linux). Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceResponseOutput) ClusterSshUserName() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.ClusterSshUserName }).(pulumi.AnyOutput)
}

// The cluster type. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceResponseOutput) ClusterType() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.ClusterType }).(pulumi.AnyOutput)
}

// The username to access the cluster. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceResponseOutput) ClusterUserName() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.ClusterUserName }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o HDInsightOnDemandLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) *IntegrationRuntimeReferenceResponse {
		return v.ConnectVia
	}).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Specifies the core configuration parameters (as in core-site.xml) for the HDInsight cluster to be created.
func (o HDInsightOnDemandLinkedServiceResponseOutput) CoreConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.CoreConfiguration }).(pulumi.AnyOutput)
}

// Specifies the size of the data node for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceResponseOutput) DataNodeSize() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.DataNodeSize }).(pulumi.AnyOutput)
}

// Linked service description.
func (o HDInsightOnDemandLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Specifies the HBase configuration parameters (hbase-site.xml) for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceResponseOutput) HBaseConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.HBaseConfiguration }).(pulumi.AnyOutput)
}

// The name of Azure SQL linked service that point to the HCatalog database. The on-demand HDInsight cluster is created by using the Azure SQL database as the metastore.
func (o HDInsightOnDemandLinkedServiceResponseOutput) HcatalogLinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) *LinkedServiceReferenceResponse {
		return v.HcatalogLinkedServiceName
	}).(LinkedServiceReferenceResponsePtrOutput)
}

// Specifies the HDFS configuration parameters (hdfs-site.xml) for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceResponseOutput) HdfsConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.HdfsConfiguration }).(pulumi.AnyOutput)
}

// Specifies the size of the head node for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceResponseOutput) HeadNodeSize() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.HeadNodeSize }).(pulumi.AnyOutput)
}

// Specifies the hive configuration parameters (hive-site.xml) for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceResponseOutput) HiveConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.HiveConfiguration }).(pulumi.AnyOutput)
}

// The customer’s subscription to host the cluster. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceResponseOutput) HostSubscriptionId() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.HostSubscriptionId }).(pulumi.AnyOutput)
}

// Azure Storage linked service to be used by the on-demand cluster for storing and processing data.
func (o HDInsightOnDemandLinkedServiceResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) LinkedServiceReferenceResponse {
		return v.LinkedServiceName
	}).(LinkedServiceReferenceResponseOutput)
}

// Specifies the MapReduce configuration parameters (mapred-site.xml) for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceResponseOutput) MapReduceConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.MapReduceConfiguration }).(pulumi.AnyOutput)
}

// Specifies the Oozie configuration parameters (oozie-site.xml) for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceResponseOutput) OozieConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.OozieConfiguration }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o HDInsightOnDemandLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// The service principal id for the hostSubscriptionId. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceResponseOutput) ServicePrincipalId() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.ServicePrincipalId }).(pulumi.AnyOutput)
}

// The key for the service principal id.
func (o HDInsightOnDemandLinkedServiceResponseOutput) ServicePrincipalKey() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.ServicePrincipalKey }).(pulumi.AnyOutput)
}

// The version of spark if the cluster type is 'spark'. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceResponseOutput) SparkVersion() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.SparkVersion }).(pulumi.AnyOutput)
}

// Specifies the Storm configuration parameters (storm-site.xml) for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceResponseOutput) StormConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.StormConfiguration }).(pulumi.AnyOutput)
}

// The Tenant id/name to which the service principal belongs. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceResponseOutput) Tenant() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.Tenant }).(pulumi.AnyOutput)
}

// The allowed idle time for the on-demand HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays alive after completion of an activity run if there are no other active jobs in the cluster. The minimum value is 5 mins. Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceResponseOutput) TimeToLive() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.TimeToLive }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'HDInsightOnDemand'.
func (o HDInsightOnDemandLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the HDInsight cluster.  Type: string (or Expression with resultType string).
func (o HDInsightOnDemandLinkedServiceResponseOutput) Version() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.Version }).(pulumi.AnyOutput)
}

// Specifies the Yarn configuration parameters (yarn-site.xml) for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceResponseOutput) YarnConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.YarnConfiguration }).(pulumi.AnyOutput)
}

// Specifies the size of the Zoo Keeper node for the HDInsight cluster.
func (o HDInsightOnDemandLinkedServiceResponseOutput) ZookeeperNodeSize() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightOnDemandLinkedServiceResponse) interface{} { return v.ZookeeperNodeSize }).(pulumi.AnyOutput)
}

// HDInsight Pig activity type.
type HDInsightPigActivity struct {
	// User specified arguments to HDInsightActivity.
	Arguments []interface{} `pulumi:"arguments"`
	// Allows user to specify defines for Pig job request.
	Defines map[string]interface{} `pulumi:"defines"`
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Debug info option.
	GetDebugInfo *string `pulumi:"getDebugInfo"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReference `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicy `pulumi:"policy"`
	// Script linked service reference.
	ScriptLinkedService *LinkedServiceReference `pulumi:"scriptLinkedService"`
	// Script path. Type: string (or Expression with resultType string).
	ScriptPath interface{} `pulumi:"scriptPath"`
	// Storage linked service references.
	StorageLinkedServices []LinkedServiceReference `pulumi:"storageLinkedServices"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// HDInsightPigActivityInput is an input type that accepts HDInsightPigActivityArgs and HDInsightPigActivityOutput values.
// You can construct a concrete instance of `HDInsightPigActivityInput` via:
//
//          HDInsightPigActivityArgs{...}
type HDInsightPigActivityInput interface {
	pulumi.Input

	ToHDInsightPigActivityOutput() HDInsightPigActivityOutput
	ToHDInsightPigActivityOutputWithContext(context.Context) HDInsightPigActivityOutput
}

// HDInsight Pig activity type.
type HDInsightPigActivityArgs struct {
	// User specified arguments to HDInsightActivity.
	Arguments pulumi.ArrayInput `pulumi:"arguments"`
	// Allows user to specify defines for Pig job request.
	Defines pulumi.MapInput `pulumi:"defines"`
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Debug info option.
	GetDebugInfo pulumi.StringPtrInput `pulumi:"getDebugInfo"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferencePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyPtrInput `pulumi:"policy"`
	// Script linked service reference.
	ScriptLinkedService LinkedServiceReferencePtrInput `pulumi:"scriptLinkedService"`
	// Script path. Type: string (or Expression with resultType string).
	ScriptPath pulumi.Input `pulumi:"scriptPath"`
	// Storage linked service references.
	StorageLinkedServices LinkedServiceReferenceArrayInput `pulumi:"storageLinkedServices"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HDInsightPigActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightPigActivity)(nil)).Elem()
}

func (i HDInsightPigActivityArgs) ToHDInsightPigActivityOutput() HDInsightPigActivityOutput {
	return i.ToHDInsightPigActivityOutputWithContext(context.Background())
}

func (i HDInsightPigActivityArgs) ToHDInsightPigActivityOutputWithContext(ctx context.Context) HDInsightPigActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightPigActivityOutput)
}

// HDInsight Pig activity type.
type HDInsightPigActivityOutput struct{ *pulumi.OutputState }

func (HDInsightPigActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightPigActivity)(nil)).Elem()
}

func (o HDInsightPigActivityOutput) ToHDInsightPigActivityOutput() HDInsightPigActivityOutput {
	return o
}

func (o HDInsightPigActivityOutput) ToHDInsightPigActivityOutputWithContext(ctx context.Context) HDInsightPigActivityOutput {
	return o
}

// User specified arguments to HDInsightActivity.
func (o HDInsightPigActivityOutput) Arguments() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightPigActivity) []interface{} { return v.Arguments }).(pulumi.ArrayOutput)
}

// Allows user to specify defines for Pig job request.
func (o HDInsightPigActivityOutput) Defines() pulumi.MapOutput {
	return o.ApplyT(func(v HDInsightPigActivity) map[string]interface{} { return v.Defines }).(pulumi.MapOutput)
}

// Activity depends on condition.
func (o HDInsightPigActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v HDInsightPigActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o HDInsightPigActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightPigActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Debug info option.
func (o HDInsightPigActivityOutput) GetDebugInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightPigActivity) *string { return v.GetDebugInfo }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o HDInsightPigActivityOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v HDInsightPigActivity) *LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// Activity name.
func (o HDInsightPigActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightPigActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o HDInsightPigActivityOutput) Policy() ActivityPolicyPtrOutput {
	return o.ApplyT(func(v HDInsightPigActivity) *ActivityPolicy { return v.Policy }).(ActivityPolicyPtrOutput)
}

// Script linked service reference.
func (o HDInsightPigActivityOutput) ScriptLinkedService() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v HDInsightPigActivity) *LinkedServiceReference { return v.ScriptLinkedService }).(LinkedServiceReferencePtrOutput)
}

// Script path. Type: string (or Expression with resultType string).
func (o HDInsightPigActivityOutput) ScriptPath() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightPigActivity) interface{} { return v.ScriptPath }).(pulumi.AnyOutput)
}

// Storage linked service references.
func (o HDInsightPigActivityOutput) StorageLinkedServices() LinkedServiceReferenceArrayOutput {
	return o.ApplyT(func(v HDInsightPigActivity) []LinkedServiceReference { return v.StorageLinkedServices }).(LinkedServiceReferenceArrayOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o HDInsightPigActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightPigActivity) string { return v.Type }).(pulumi.StringOutput)
}

// HDInsight Pig activity type.
type HDInsightPigActivityResponse struct {
	// User specified arguments to HDInsightActivity.
	Arguments []interface{} `pulumi:"arguments"`
	// Allows user to specify defines for Pig job request.
	Defines map[string]interface{} `pulumi:"defines"`
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Debug info option.
	GetDebugInfo *string `pulumi:"getDebugInfo"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicyResponse `pulumi:"policy"`
	// Script linked service reference.
	ScriptLinkedService *LinkedServiceReferenceResponse `pulumi:"scriptLinkedService"`
	// Script path. Type: string (or Expression with resultType string).
	ScriptPath interface{} `pulumi:"scriptPath"`
	// Storage linked service references.
	StorageLinkedServices []LinkedServiceReferenceResponse `pulumi:"storageLinkedServices"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// HDInsightPigActivityResponseInput is an input type that accepts HDInsightPigActivityResponseArgs and HDInsightPigActivityResponseOutput values.
// You can construct a concrete instance of `HDInsightPigActivityResponseInput` via:
//
//          HDInsightPigActivityResponseArgs{...}
type HDInsightPigActivityResponseInput interface {
	pulumi.Input

	ToHDInsightPigActivityResponseOutput() HDInsightPigActivityResponseOutput
	ToHDInsightPigActivityResponseOutputWithContext(context.Context) HDInsightPigActivityResponseOutput
}

// HDInsight Pig activity type.
type HDInsightPigActivityResponseArgs struct {
	// User specified arguments to HDInsightActivity.
	Arguments pulumi.ArrayInput `pulumi:"arguments"`
	// Allows user to specify defines for Pig job request.
	Defines pulumi.MapInput `pulumi:"defines"`
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Debug info option.
	GetDebugInfo pulumi.StringPtrInput `pulumi:"getDebugInfo"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyResponsePtrInput `pulumi:"policy"`
	// Script linked service reference.
	ScriptLinkedService LinkedServiceReferenceResponsePtrInput `pulumi:"scriptLinkedService"`
	// Script path. Type: string (or Expression with resultType string).
	ScriptPath pulumi.Input `pulumi:"scriptPath"`
	// Storage linked service references.
	StorageLinkedServices LinkedServiceReferenceResponseArrayInput `pulumi:"storageLinkedServices"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HDInsightPigActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightPigActivityResponse)(nil)).Elem()
}

func (i HDInsightPigActivityResponseArgs) ToHDInsightPigActivityResponseOutput() HDInsightPigActivityResponseOutput {
	return i.ToHDInsightPigActivityResponseOutputWithContext(context.Background())
}

func (i HDInsightPigActivityResponseArgs) ToHDInsightPigActivityResponseOutputWithContext(ctx context.Context) HDInsightPigActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightPigActivityResponseOutput)
}

// HDInsight Pig activity type.
type HDInsightPigActivityResponseOutput struct{ *pulumi.OutputState }

func (HDInsightPigActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightPigActivityResponse)(nil)).Elem()
}

func (o HDInsightPigActivityResponseOutput) ToHDInsightPigActivityResponseOutput() HDInsightPigActivityResponseOutput {
	return o
}

func (o HDInsightPigActivityResponseOutput) ToHDInsightPigActivityResponseOutputWithContext(ctx context.Context) HDInsightPigActivityResponseOutput {
	return o
}

// User specified arguments to HDInsightActivity.
func (o HDInsightPigActivityResponseOutput) Arguments() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightPigActivityResponse) []interface{} { return v.Arguments }).(pulumi.ArrayOutput)
}

// Allows user to specify defines for Pig job request.
func (o HDInsightPigActivityResponseOutput) Defines() pulumi.MapOutput {
	return o.ApplyT(func(v HDInsightPigActivityResponse) map[string]interface{} { return v.Defines }).(pulumi.MapOutput)
}

// Activity depends on condition.
func (o HDInsightPigActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v HDInsightPigActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o HDInsightPigActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightPigActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Debug info option.
func (o HDInsightPigActivityResponseOutput) GetDebugInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightPigActivityResponse) *string { return v.GetDebugInfo }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o HDInsightPigActivityResponseOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v HDInsightPigActivityResponse) *LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponsePtrOutput)
}

// Activity name.
func (o HDInsightPigActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightPigActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o HDInsightPigActivityResponseOutput) Policy() ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v HDInsightPigActivityResponse) *ActivityPolicyResponse { return v.Policy }).(ActivityPolicyResponsePtrOutput)
}

// Script linked service reference.
func (o HDInsightPigActivityResponseOutput) ScriptLinkedService() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v HDInsightPigActivityResponse) *LinkedServiceReferenceResponse { return v.ScriptLinkedService }).(LinkedServiceReferenceResponsePtrOutput)
}

// Script path. Type: string (or Expression with resultType string).
func (o HDInsightPigActivityResponseOutput) ScriptPath() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightPigActivityResponse) interface{} { return v.ScriptPath }).(pulumi.AnyOutput)
}

// Storage linked service references.
func (o HDInsightPigActivityResponseOutput) StorageLinkedServices() LinkedServiceReferenceResponseArrayOutput {
	return o.ApplyT(func(v HDInsightPigActivityResponse) []LinkedServiceReferenceResponse { return v.StorageLinkedServices }).(LinkedServiceReferenceResponseArrayOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o HDInsightPigActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightPigActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// HDInsight Spark activity.
type HDInsightSparkActivity struct {
	// The user-specified arguments to HDInsightSparkActivity.
	Arguments []interface{} `pulumi:"arguments"`
	// The application's Java/Spark main class.
	ClassName *string `pulumi:"className"`
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// The relative path to the root folder of the code/package to be executed. Type: string (or Expression with resultType string).
	EntryFilePath interface{} `pulumi:"entryFilePath"`
	// Debug info option.
	GetDebugInfo *string `pulumi:"getDebugInfo"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReference `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicy `pulumi:"policy"`
	// The user to impersonate that will execute the job. Type: string (or Expression with resultType string).
	ProxyUser interface{} `pulumi:"proxyUser"`
	// The root path in 'sparkJobLinkedService' for all the job’s files. Type: string (or Expression with resultType string).
	RootPath interface{} `pulumi:"rootPath"`
	// Spark configuration property.
	SparkConfig map[string]interface{} `pulumi:"sparkConfig"`
	// The storage linked service for uploading the entry file and dependencies, and for receiving logs.
	SparkJobLinkedService *LinkedServiceReference `pulumi:"sparkJobLinkedService"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// HDInsightSparkActivityInput is an input type that accepts HDInsightSparkActivityArgs and HDInsightSparkActivityOutput values.
// You can construct a concrete instance of `HDInsightSparkActivityInput` via:
//
//          HDInsightSparkActivityArgs{...}
type HDInsightSparkActivityInput interface {
	pulumi.Input

	ToHDInsightSparkActivityOutput() HDInsightSparkActivityOutput
	ToHDInsightSparkActivityOutputWithContext(context.Context) HDInsightSparkActivityOutput
}

// HDInsight Spark activity.
type HDInsightSparkActivityArgs struct {
	// The user-specified arguments to HDInsightSparkActivity.
	Arguments pulumi.ArrayInput `pulumi:"arguments"`
	// The application's Java/Spark main class.
	ClassName pulumi.StringPtrInput `pulumi:"className"`
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The relative path to the root folder of the code/package to be executed. Type: string (or Expression with resultType string).
	EntryFilePath pulumi.Input `pulumi:"entryFilePath"`
	// Debug info option.
	GetDebugInfo pulumi.StringPtrInput `pulumi:"getDebugInfo"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferencePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyPtrInput `pulumi:"policy"`
	// The user to impersonate that will execute the job. Type: string (or Expression with resultType string).
	ProxyUser pulumi.Input `pulumi:"proxyUser"`
	// The root path in 'sparkJobLinkedService' for all the job’s files. Type: string (or Expression with resultType string).
	RootPath pulumi.Input `pulumi:"rootPath"`
	// Spark configuration property.
	SparkConfig pulumi.MapInput `pulumi:"sparkConfig"`
	// The storage linked service for uploading the entry file and dependencies, and for receiving logs.
	SparkJobLinkedService LinkedServiceReferencePtrInput `pulumi:"sparkJobLinkedService"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HDInsightSparkActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightSparkActivity)(nil)).Elem()
}

func (i HDInsightSparkActivityArgs) ToHDInsightSparkActivityOutput() HDInsightSparkActivityOutput {
	return i.ToHDInsightSparkActivityOutputWithContext(context.Background())
}

func (i HDInsightSparkActivityArgs) ToHDInsightSparkActivityOutputWithContext(ctx context.Context) HDInsightSparkActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightSparkActivityOutput)
}

// HDInsight Spark activity.
type HDInsightSparkActivityOutput struct{ *pulumi.OutputState }

func (HDInsightSparkActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightSparkActivity)(nil)).Elem()
}

func (o HDInsightSparkActivityOutput) ToHDInsightSparkActivityOutput() HDInsightSparkActivityOutput {
	return o
}

func (o HDInsightSparkActivityOutput) ToHDInsightSparkActivityOutputWithContext(ctx context.Context) HDInsightSparkActivityOutput {
	return o
}

// The user-specified arguments to HDInsightSparkActivity.
func (o HDInsightSparkActivityOutput) Arguments() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightSparkActivity) []interface{} { return v.Arguments }).(pulumi.ArrayOutput)
}

// The application's Java/Spark main class.
func (o HDInsightSparkActivityOutput) ClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightSparkActivity) *string { return v.ClassName }).(pulumi.StringPtrOutput)
}

// Activity depends on condition.
func (o HDInsightSparkActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v HDInsightSparkActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o HDInsightSparkActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightSparkActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The relative path to the root folder of the code/package to be executed. Type: string (or Expression with resultType string).
func (o HDInsightSparkActivityOutput) EntryFilePath() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightSparkActivity) interface{} { return v.EntryFilePath }).(pulumi.AnyOutput)
}

// Debug info option.
func (o HDInsightSparkActivityOutput) GetDebugInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightSparkActivity) *string { return v.GetDebugInfo }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o HDInsightSparkActivityOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v HDInsightSparkActivity) *LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// Activity name.
func (o HDInsightSparkActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightSparkActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o HDInsightSparkActivityOutput) Policy() ActivityPolicyPtrOutput {
	return o.ApplyT(func(v HDInsightSparkActivity) *ActivityPolicy { return v.Policy }).(ActivityPolicyPtrOutput)
}

// The user to impersonate that will execute the job. Type: string (or Expression with resultType string).
func (o HDInsightSparkActivityOutput) ProxyUser() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightSparkActivity) interface{} { return v.ProxyUser }).(pulumi.AnyOutput)
}

// The root path in 'sparkJobLinkedService' for all the job’s files. Type: string (or Expression with resultType string).
func (o HDInsightSparkActivityOutput) RootPath() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightSparkActivity) interface{} { return v.RootPath }).(pulumi.AnyOutput)
}

// Spark configuration property.
func (o HDInsightSparkActivityOutput) SparkConfig() pulumi.MapOutput {
	return o.ApplyT(func(v HDInsightSparkActivity) map[string]interface{} { return v.SparkConfig }).(pulumi.MapOutput)
}

// The storage linked service for uploading the entry file and dependencies, and for receiving logs.
func (o HDInsightSparkActivityOutput) SparkJobLinkedService() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v HDInsightSparkActivity) *LinkedServiceReference { return v.SparkJobLinkedService }).(LinkedServiceReferencePtrOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o HDInsightSparkActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightSparkActivity) string { return v.Type }).(pulumi.StringOutput)
}

// HDInsight Spark activity.
type HDInsightSparkActivityResponse struct {
	// The user-specified arguments to HDInsightSparkActivity.
	Arguments []interface{} `pulumi:"arguments"`
	// The application's Java/Spark main class.
	ClassName *string `pulumi:"className"`
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// The relative path to the root folder of the code/package to be executed. Type: string (or Expression with resultType string).
	EntryFilePath interface{} `pulumi:"entryFilePath"`
	// Debug info option.
	GetDebugInfo *string `pulumi:"getDebugInfo"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicyResponse `pulumi:"policy"`
	// The user to impersonate that will execute the job. Type: string (or Expression with resultType string).
	ProxyUser interface{} `pulumi:"proxyUser"`
	// The root path in 'sparkJobLinkedService' for all the job’s files. Type: string (or Expression with resultType string).
	RootPath interface{} `pulumi:"rootPath"`
	// Spark configuration property.
	SparkConfig map[string]interface{} `pulumi:"sparkConfig"`
	// The storage linked service for uploading the entry file and dependencies, and for receiving logs.
	SparkJobLinkedService *LinkedServiceReferenceResponse `pulumi:"sparkJobLinkedService"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// HDInsightSparkActivityResponseInput is an input type that accepts HDInsightSparkActivityResponseArgs and HDInsightSparkActivityResponseOutput values.
// You can construct a concrete instance of `HDInsightSparkActivityResponseInput` via:
//
//          HDInsightSparkActivityResponseArgs{...}
type HDInsightSparkActivityResponseInput interface {
	pulumi.Input

	ToHDInsightSparkActivityResponseOutput() HDInsightSparkActivityResponseOutput
	ToHDInsightSparkActivityResponseOutputWithContext(context.Context) HDInsightSparkActivityResponseOutput
}

// HDInsight Spark activity.
type HDInsightSparkActivityResponseArgs struct {
	// The user-specified arguments to HDInsightSparkActivity.
	Arguments pulumi.ArrayInput `pulumi:"arguments"`
	// The application's Java/Spark main class.
	ClassName pulumi.StringPtrInput `pulumi:"className"`
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The relative path to the root folder of the code/package to be executed. Type: string (or Expression with resultType string).
	EntryFilePath pulumi.Input `pulumi:"entryFilePath"`
	// Debug info option.
	GetDebugInfo pulumi.StringPtrInput `pulumi:"getDebugInfo"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyResponsePtrInput `pulumi:"policy"`
	// The user to impersonate that will execute the job. Type: string (or Expression with resultType string).
	ProxyUser pulumi.Input `pulumi:"proxyUser"`
	// The root path in 'sparkJobLinkedService' for all the job’s files. Type: string (or Expression with resultType string).
	RootPath pulumi.Input `pulumi:"rootPath"`
	// Spark configuration property.
	SparkConfig pulumi.MapInput `pulumi:"sparkConfig"`
	// The storage linked service for uploading the entry file and dependencies, and for receiving logs.
	SparkJobLinkedService LinkedServiceReferenceResponsePtrInput `pulumi:"sparkJobLinkedService"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HDInsightSparkActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightSparkActivityResponse)(nil)).Elem()
}

func (i HDInsightSparkActivityResponseArgs) ToHDInsightSparkActivityResponseOutput() HDInsightSparkActivityResponseOutput {
	return i.ToHDInsightSparkActivityResponseOutputWithContext(context.Background())
}

func (i HDInsightSparkActivityResponseArgs) ToHDInsightSparkActivityResponseOutputWithContext(ctx context.Context) HDInsightSparkActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightSparkActivityResponseOutput)
}

// HDInsight Spark activity.
type HDInsightSparkActivityResponseOutput struct{ *pulumi.OutputState }

func (HDInsightSparkActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightSparkActivityResponse)(nil)).Elem()
}

func (o HDInsightSparkActivityResponseOutput) ToHDInsightSparkActivityResponseOutput() HDInsightSparkActivityResponseOutput {
	return o
}

func (o HDInsightSparkActivityResponseOutput) ToHDInsightSparkActivityResponseOutputWithContext(ctx context.Context) HDInsightSparkActivityResponseOutput {
	return o
}

// The user-specified arguments to HDInsightSparkActivity.
func (o HDInsightSparkActivityResponseOutput) Arguments() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightSparkActivityResponse) []interface{} { return v.Arguments }).(pulumi.ArrayOutput)
}

// The application's Java/Spark main class.
func (o HDInsightSparkActivityResponseOutput) ClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightSparkActivityResponse) *string { return v.ClassName }).(pulumi.StringPtrOutput)
}

// Activity depends on condition.
func (o HDInsightSparkActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v HDInsightSparkActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o HDInsightSparkActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightSparkActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The relative path to the root folder of the code/package to be executed. Type: string (or Expression with resultType string).
func (o HDInsightSparkActivityResponseOutput) EntryFilePath() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightSparkActivityResponse) interface{} { return v.EntryFilePath }).(pulumi.AnyOutput)
}

// Debug info option.
func (o HDInsightSparkActivityResponseOutput) GetDebugInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightSparkActivityResponse) *string { return v.GetDebugInfo }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o HDInsightSparkActivityResponseOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v HDInsightSparkActivityResponse) *LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponsePtrOutput)
}

// Activity name.
func (o HDInsightSparkActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightSparkActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o HDInsightSparkActivityResponseOutput) Policy() ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v HDInsightSparkActivityResponse) *ActivityPolicyResponse { return v.Policy }).(ActivityPolicyResponsePtrOutput)
}

// The user to impersonate that will execute the job. Type: string (or Expression with resultType string).
func (o HDInsightSparkActivityResponseOutput) ProxyUser() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightSparkActivityResponse) interface{} { return v.ProxyUser }).(pulumi.AnyOutput)
}

// The root path in 'sparkJobLinkedService' for all the job’s files. Type: string (or Expression with resultType string).
func (o HDInsightSparkActivityResponseOutput) RootPath() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightSparkActivityResponse) interface{} { return v.RootPath }).(pulumi.AnyOutput)
}

// Spark configuration property.
func (o HDInsightSparkActivityResponseOutput) SparkConfig() pulumi.MapOutput {
	return o.ApplyT(func(v HDInsightSparkActivityResponse) map[string]interface{} { return v.SparkConfig }).(pulumi.MapOutput)
}

// The storage linked service for uploading the entry file and dependencies, and for receiving logs.
func (o HDInsightSparkActivityResponseOutput) SparkJobLinkedService() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v HDInsightSparkActivityResponse) *LinkedServiceReferenceResponse { return v.SparkJobLinkedService }).(LinkedServiceReferenceResponsePtrOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o HDInsightSparkActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightSparkActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// HDInsight streaming activity type.
type HDInsightStreamingActivity struct {
	// User specified arguments to HDInsightActivity.
	Arguments []interface{} `pulumi:"arguments"`
	// Combiner executable name. Type: string (or Expression with resultType string).
	Combiner interface{} `pulumi:"combiner"`
	// Command line environment values.
	CommandEnvironment []interface{} `pulumi:"commandEnvironment"`
	// Allows user to specify defines for streaming job request.
	Defines map[string]interface{} `pulumi:"defines"`
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Linked service reference where the files are located.
	FileLinkedService *LinkedServiceReference `pulumi:"fileLinkedService"`
	// Paths to streaming job files. Can be directories.
	FilePaths []interface{} `pulumi:"filePaths"`
	// Debug info option.
	GetDebugInfo *string `pulumi:"getDebugInfo"`
	// Input blob path. Type: string (or Expression with resultType string).
	Input interface{} `pulumi:"input"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReference `pulumi:"linkedServiceName"`
	// Mapper executable name. Type: string (or Expression with resultType string).
	Mapper interface{} `pulumi:"mapper"`
	// Activity name.
	Name string `pulumi:"name"`
	// Output blob path. Type: string (or Expression with resultType string).
	Output interface{} `pulumi:"output"`
	// Activity policy.
	Policy *ActivityPolicy `pulumi:"policy"`
	// Reducer executable name. Type: string (or Expression with resultType string).
	Reducer interface{} `pulumi:"reducer"`
	// Storage linked service references.
	StorageLinkedServices []LinkedServiceReference `pulumi:"storageLinkedServices"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// HDInsightStreamingActivityInput is an input type that accepts HDInsightStreamingActivityArgs and HDInsightStreamingActivityOutput values.
// You can construct a concrete instance of `HDInsightStreamingActivityInput` via:
//
//          HDInsightStreamingActivityArgs{...}
type HDInsightStreamingActivityInput interface {
	pulumi.Input

	ToHDInsightStreamingActivityOutput() HDInsightStreamingActivityOutput
	ToHDInsightStreamingActivityOutputWithContext(context.Context) HDInsightStreamingActivityOutput
}

// HDInsight streaming activity type.
type HDInsightStreamingActivityArgs struct {
	// User specified arguments to HDInsightActivity.
	Arguments pulumi.ArrayInput `pulumi:"arguments"`
	// Combiner executable name. Type: string (or Expression with resultType string).
	Combiner pulumi.Input `pulumi:"combiner"`
	// Command line environment values.
	CommandEnvironment pulumi.ArrayInput `pulumi:"commandEnvironment"`
	// Allows user to specify defines for streaming job request.
	Defines pulumi.MapInput `pulumi:"defines"`
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference where the files are located.
	FileLinkedService LinkedServiceReferencePtrInput `pulumi:"fileLinkedService"`
	// Paths to streaming job files. Can be directories.
	FilePaths pulumi.ArrayInput `pulumi:"filePaths"`
	// Debug info option.
	GetDebugInfo pulumi.StringPtrInput `pulumi:"getDebugInfo"`
	// Input blob path. Type: string (or Expression with resultType string).
	Input pulumi.Input `pulumi:"input"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferencePtrInput `pulumi:"linkedServiceName"`
	// Mapper executable name. Type: string (or Expression with resultType string).
	Mapper pulumi.Input `pulumi:"mapper"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Output blob path. Type: string (or Expression with resultType string).
	Output pulumi.Input `pulumi:"output"`
	// Activity policy.
	Policy ActivityPolicyPtrInput `pulumi:"policy"`
	// Reducer executable name. Type: string (or Expression with resultType string).
	Reducer pulumi.Input `pulumi:"reducer"`
	// Storage linked service references.
	StorageLinkedServices LinkedServiceReferenceArrayInput `pulumi:"storageLinkedServices"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HDInsightStreamingActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightStreamingActivity)(nil)).Elem()
}

func (i HDInsightStreamingActivityArgs) ToHDInsightStreamingActivityOutput() HDInsightStreamingActivityOutput {
	return i.ToHDInsightStreamingActivityOutputWithContext(context.Background())
}

func (i HDInsightStreamingActivityArgs) ToHDInsightStreamingActivityOutputWithContext(ctx context.Context) HDInsightStreamingActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightStreamingActivityOutput)
}

// HDInsight streaming activity type.
type HDInsightStreamingActivityOutput struct{ *pulumi.OutputState }

func (HDInsightStreamingActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightStreamingActivity)(nil)).Elem()
}

func (o HDInsightStreamingActivityOutput) ToHDInsightStreamingActivityOutput() HDInsightStreamingActivityOutput {
	return o
}

func (o HDInsightStreamingActivityOutput) ToHDInsightStreamingActivityOutputWithContext(ctx context.Context) HDInsightStreamingActivityOutput {
	return o
}

// User specified arguments to HDInsightActivity.
func (o HDInsightStreamingActivityOutput) Arguments() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) []interface{} { return v.Arguments }).(pulumi.ArrayOutput)
}

// Combiner executable name. Type: string (or Expression with resultType string).
func (o HDInsightStreamingActivityOutput) Combiner() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) interface{} { return v.Combiner }).(pulumi.AnyOutput)
}

// Command line environment values.
func (o HDInsightStreamingActivityOutput) CommandEnvironment() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) []interface{} { return v.CommandEnvironment }).(pulumi.ArrayOutput)
}

// Allows user to specify defines for streaming job request.
func (o HDInsightStreamingActivityOutput) Defines() pulumi.MapOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) map[string]interface{} { return v.Defines }).(pulumi.MapOutput)
}

// Activity depends on condition.
func (o HDInsightStreamingActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o HDInsightStreamingActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference where the files are located.
func (o HDInsightStreamingActivityOutput) FileLinkedService() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) *LinkedServiceReference { return v.FileLinkedService }).(LinkedServiceReferencePtrOutput)
}

// Paths to streaming job files. Can be directories.
func (o HDInsightStreamingActivityOutput) FilePaths() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) []interface{} { return v.FilePaths }).(pulumi.ArrayOutput)
}

// Debug info option.
func (o HDInsightStreamingActivityOutput) GetDebugInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) *string { return v.GetDebugInfo }).(pulumi.StringPtrOutput)
}

// Input blob path. Type: string (or Expression with resultType string).
func (o HDInsightStreamingActivityOutput) Input() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) interface{} { return v.Input }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o HDInsightStreamingActivityOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) *LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// Mapper executable name. Type: string (or Expression with resultType string).
func (o HDInsightStreamingActivityOutput) Mapper() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) interface{} { return v.Mapper }).(pulumi.AnyOutput)
}

// Activity name.
func (o HDInsightStreamingActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Output blob path. Type: string (or Expression with resultType string).
func (o HDInsightStreamingActivityOutput) Output() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) interface{} { return v.Output }).(pulumi.AnyOutput)
}

// Activity policy.
func (o HDInsightStreamingActivityOutput) Policy() ActivityPolicyPtrOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) *ActivityPolicy { return v.Policy }).(ActivityPolicyPtrOutput)
}

// Reducer executable name. Type: string (or Expression with resultType string).
func (o HDInsightStreamingActivityOutput) Reducer() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) interface{} { return v.Reducer }).(pulumi.AnyOutput)
}

// Storage linked service references.
func (o HDInsightStreamingActivityOutput) StorageLinkedServices() LinkedServiceReferenceArrayOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) []LinkedServiceReference { return v.StorageLinkedServices }).(LinkedServiceReferenceArrayOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o HDInsightStreamingActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightStreamingActivity) string { return v.Type }).(pulumi.StringOutput)
}

// HDInsight streaming activity type.
type HDInsightStreamingActivityResponse struct {
	// User specified arguments to HDInsightActivity.
	Arguments []interface{} `pulumi:"arguments"`
	// Combiner executable name. Type: string (or Expression with resultType string).
	Combiner interface{} `pulumi:"combiner"`
	// Command line environment values.
	CommandEnvironment []interface{} `pulumi:"commandEnvironment"`
	// Allows user to specify defines for streaming job request.
	Defines map[string]interface{} `pulumi:"defines"`
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Linked service reference where the files are located.
	FileLinkedService *LinkedServiceReferenceResponse `pulumi:"fileLinkedService"`
	// Paths to streaming job files. Can be directories.
	FilePaths []interface{} `pulumi:"filePaths"`
	// Debug info option.
	GetDebugInfo *string `pulumi:"getDebugInfo"`
	// Input blob path. Type: string (or Expression with resultType string).
	Input interface{} `pulumi:"input"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Mapper executable name. Type: string (or Expression with resultType string).
	Mapper interface{} `pulumi:"mapper"`
	// Activity name.
	Name string `pulumi:"name"`
	// Output blob path. Type: string (or Expression with resultType string).
	Output interface{} `pulumi:"output"`
	// Activity policy.
	Policy *ActivityPolicyResponse `pulumi:"policy"`
	// Reducer executable name. Type: string (or Expression with resultType string).
	Reducer interface{} `pulumi:"reducer"`
	// Storage linked service references.
	StorageLinkedServices []LinkedServiceReferenceResponse `pulumi:"storageLinkedServices"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// HDInsightStreamingActivityResponseInput is an input type that accepts HDInsightStreamingActivityResponseArgs and HDInsightStreamingActivityResponseOutput values.
// You can construct a concrete instance of `HDInsightStreamingActivityResponseInput` via:
//
//          HDInsightStreamingActivityResponseArgs{...}
type HDInsightStreamingActivityResponseInput interface {
	pulumi.Input

	ToHDInsightStreamingActivityResponseOutput() HDInsightStreamingActivityResponseOutput
	ToHDInsightStreamingActivityResponseOutputWithContext(context.Context) HDInsightStreamingActivityResponseOutput
}

// HDInsight streaming activity type.
type HDInsightStreamingActivityResponseArgs struct {
	// User specified arguments to HDInsightActivity.
	Arguments pulumi.ArrayInput `pulumi:"arguments"`
	// Combiner executable name. Type: string (or Expression with resultType string).
	Combiner pulumi.Input `pulumi:"combiner"`
	// Command line environment values.
	CommandEnvironment pulumi.ArrayInput `pulumi:"commandEnvironment"`
	// Allows user to specify defines for streaming job request.
	Defines pulumi.MapInput `pulumi:"defines"`
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference where the files are located.
	FileLinkedService LinkedServiceReferenceResponsePtrInput `pulumi:"fileLinkedService"`
	// Paths to streaming job files. Can be directories.
	FilePaths pulumi.ArrayInput `pulumi:"filePaths"`
	// Debug info option.
	GetDebugInfo pulumi.StringPtrInput `pulumi:"getDebugInfo"`
	// Input blob path. Type: string (or Expression with resultType string).
	Input pulumi.Input `pulumi:"input"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"linkedServiceName"`
	// Mapper executable name. Type: string (or Expression with resultType string).
	Mapper pulumi.Input `pulumi:"mapper"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Output blob path. Type: string (or Expression with resultType string).
	Output pulumi.Input `pulumi:"output"`
	// Activity policy.
	Policy ActivityPolicyResponsePtrInput `pulumi:"policy"`
	// Reducer executable name. Type: string (or Expression with resultType string).
	Reducer pulumi.Input `pulumi:"reducer"`
	// Storage linked service references.
	StorageLinkedServices LinkedServiceReferenceResponseArrayInput `pulumi:"storageLinkedServices"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HDInsightStreamingActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightStreamingActivityResponse)(nil)).Elem()
}

func (i HDInsightStreamingActivityResponseArgs) ToHDInsightStreamingActivityResponseOutput() HDInsightStreamingActivityResponseOutput {
	return i.ToHDInsightStreamingActivityResponseOutputWithContext(context.Background())
}

func (i HDInsightStreamingActivityResponseArgs) ToHDInsightStreamingActivityResponseOutputWithContext(ctx context.Context) HDInsightStreamingActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightStreamingActivityResponseOutput)
}

// HDInsight streaming activity type.
type HDInsightStreamingActivityResponseOutput struct{ *pulumi.OutputState }

func (HDInsightStreamingActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightStreamingActivityResponse)(nil)).Elem()
}

func (o HDInsightStreamingActivityResponseOutput) ToHDInsightStreamingActivityResponseOutput() HDInsightStreamingActivityResponseOutput {
	return o
}

func (o HDInsightStreamingActivityResponseOutput) ToHDInsightStreamingActivityResponseOutputWithContext(ctx context.Context) HDInsightStreamingActivityResponseOutput {
	return o
}

// User specified arguments to HDInsightActivity.
func (o HDInsightStreamingActivityResponseOutput) Arguments() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) []interface{} { return v.Arguments }).(pulumi.ArrayOutput)
}

// Combiner executable name. Type: string (or Expression with resultType string).
func (o HDInsightStreamingActivityResponseOutput) Combiner() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) interface{} { return v.Combiner }).(pulumi.AnyOutput)
}

// Command line environment values.
func (o HDInsightStreamingActivityResponseOutput) CommandEnvironment() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) []interface{} { return v.CommandEnvironment }).(pulumi.ArrayOutput)
}

// Allows user to specify defines for streaming job request.
func (o HDInsightStreamingActivityResponseOutput) Defines() pulumi.MapOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) map[string]interface{} { return v.Defines }).(pulumi.MapOutput)
}

// Activity depends on condition.
func (o HDInsightStreamingActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o HDInsightStreamingActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference where the files are located.
func (o HDInsightStreamingActivityResponseOutput) FileLinkedService() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) *LinkedServiceReferenceResponse { return v.FileLinkedService }).(LinkedServiceReferenceResponsePtrOutput)
}

// Paths to streaming job files. Can be directories.
func (o HDInsightStreamingActivityResponseOutput) FilePaths() pulumi.ArrayOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) []interface{} { return v.FilePaths }).(pulumi.ArrayOutput)
}

// Debug info option.
func (o HDInsightStreamingActivityResponseOutput) GetDebugInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) *string { return v.GetDebugInfo }).(pulumi.StringPtrOutput)
}

// Input blob path. Type: string (or Expression with resultType string).
func (o HDInsightStreamingActivityResponseOutput) Input() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) interface{} { return v.Input }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o HDInsightStreamingActivityResponseOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) *LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponsePtrOutput)
}

// Mapper executable name. Type: string (or Expression with resultType string).
func (o HDInsightStreamingActivityResponseOutput) Mapper() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) interface{} { return v.Mapper }).(pulumi.AnyOutput)
}

// Activity name.
func (o HDInsightStreamingActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Output blob path. Type: string (or Expression with resultType string).
func (o HDInsightStreamingActivityResponseOutput) Output() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) interface{} { return v.Output }).(pulumi.AnyOutput)
}

// Activity policy.
func (o HDInsightStreamingActivityResponseOutput) Policy() ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) *ActivityPolicyResponse { return v.Policy }).(ActivityPolicyResponsePtrOutput)
}

// Reducer executable name. Type: string (or Expression with resultType string).
func (o HDInsightStreamingActivityResponseOutput) Reducer() pulumi.AnyOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) interface{} { return v.Reducer }).(pulumi.AnyOutput)
}

// Storage linked service references.
func (o HDInsightStreamingActivityResponseOutput) StorageLinkedServices() LinkedServiceReferenceResponseArrayOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) []LinkedServiceReferenceResponse {
		return v.StorageLinkedServices
	}).(LinkedServiceReferenceResponseArrayOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o HDInsightStreamingActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightStreamingActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Hadoop Distributed File System (HDFS) linked service.
type HdfsLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Type of authentication used to connect to the HDFS. Possible values are: Anonymous and Windows. Type: string (or Expression with resultType string).
	AuthenticationType interface{} `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Password for Windows authentication.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'Hdfs'.
	Type string `pulumi:"type"`
	// The URL of the HDFS service endpoint, e.g. http://myhostname:50070/webhdfs/v1 . Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
	// User name for Windows authentication. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// HdfsLinkedServiceInput is an input type that accepts HdfsLinkedServiceArgs and HdfsLinkedServiceOutput values.
// You can construct a concrete instance of `HdfsLinkedServiceInput` via:
//
//          HdfsLinkedServiceArgs{...}
type HdfsLinkedServiceInput interface {
	pulumi.Input

	ToHdfsLinkedServiceOutput() HdfsLinkedServiceOutput
	ToHdfsLinkedServiceOutputWithContext(context.Context) HdfsLinkedServiceOutput
}

// Hadoop Distributed File System (HDFS) linked service.
type HdfsLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Type of authentication used to connect to the HDFS. Possible values are: Anonymous and Windows. Type: string (or Expression with resultType string).
	AuthenticationType pulumi.Input `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Password for Windows authentication.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'Hdfs'.
	Type pulumi.StringInput `pulumi:"type"`
	// The URL of the HDFS service endpoint, e.g. http://myhostname:50070/webhdfs/v1 . Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
	// User name for Windows authentication. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (HdfsLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HdfsLinkedService)(nil)).Elem()
}

func (i HdfsLinkedServiceArgs) ToHdfsLinkedServiceOutput() HdfsLinkedServiceOutput {
	return i.ToHdfsLinkedServiceOutputWithContext(context.Background())
}

func (i HdfsLinkedServiceArgs) ToHdfsLinkedServiceOutputWithContext(ctx context.Context) HdfsLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HdfsLinkedServiceOutput)
}

// Hadoop Distributed File System (HDFS) linked service.
type HdfsLinkedServiceOutput struct{ *pulumi.OutputState }

func (HdfsLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HdfsLinkedService)(nil)).Elem()
}

func (o HdfsLinkedServiceOutput) ToHdfsLinkedServiceOutput() HdfsLinkedServiceOutput {
	return o
}

func (o HdfsLinkedServiceOutput) ToHdfsLinkedServiceOutputWithContext(ctx context.Context) HdfsLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o HdfsLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HdfsLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Type of authentication used to connect to the HDFS. Possible values are: Anonymous and Windows. Type: string (or Expression with resultType string).
func (o HdfsLinkedServiceOutput) AuthenticationType() pulumi.AnyOutput {
	return o.ApplyT(func(v HdfsLinkedService) interface{} { return v.AuthenticationType }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o HdfsLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v HdfsLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o HdfsLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HdfsLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o HdfsLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v HdfsLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o HdfsLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v HdfsLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Password for Windows authentication.
func (o HdfsLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v HdfsLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Hdfs'.
func (o HdfsLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HdfsLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// The URL of the HDFS service endpoint, e.g. http://myhostname:50070/webhdfs/v1 . Type: string (or Expression with resultType string).
func (o HdfsLinkedServiceOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v HdfsLinkedService) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// User name for Windows authentication. Type: string (or Expression with resultType string).
func (o HdfsLinkedServiceOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v HdfsLinkedService) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// Hadoop Distributed File System (HDFS) linked service.
type HdfsLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Type of authentication used to connect to the HDFS. Possible values are: Anonymous and Windows. Type: string (or Expression with resultType string).
	AuthenticationType interface{} `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Password for Windows authentication.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'Hdfs'.
	Type string `pulumi:"type"`
	// The URL of the HDFS service endpoint, e.g. http://myhostname:50070/webhdfs/v1 . Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
	// User name for Windows authentication. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// HdfsLinkedServiceResponseInput is an input type that accepts HdfsLinkedServiceResponseArgs and HdfsLinkedServiceResponseOutput values.
// You can construct a concrete instance of `HdfsLinkedServiceResponseInput` via:
//
//          HdfsLinkedServiceResponseArgs{...}
type HdfsLinkedServiceResponseInput interface {
	pulumi.Input

	ToHdfsLinkedServiceResponseOutput() HdfsLinkedServiceResponseOutput
	ToHdfsLinkedServiceResponseOutputWithContext(context.Context) HdfsLinkedServiceResponseOutput
}

// Hadoop Distributed File System (HDFS) linked service.
type HdfsLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Type of authentication used to connect to the HDFS. Possible values are: Anonymous and Windows. Type: string (or Expression with resultType string).
	AuthenticationType pulumi.Input `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Password for Windows authentication.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'Hdfs'.
	Type pulumi.StringInput `pulumi:"type"`
	// The URL of the HDFS service endpoint, e.g. http://myhostname:50070/webhdfs/v1 . Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
	// User name for Windows authentication. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (HdfsLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HdfsLinkedServiceResponse)(nil)).Elem()
}

func (i HdfsLinkedServiceResponseArgs) ToHdfsLinkedServiceResponseOutput() HdfsLinkedServiceResponseOutput {
	return i.ToHdfsLinkedServiceResponseOutputWithContext(context.Background())
}

func (i HdfsLinkedServiceResponseArgs) ToHdfsLinkedServiceResponseOutputWithContext(ctx context.Context) HdfsLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HdfsLinkedServiceResponseOutput)
}

// Hadoop Distributed File System (HDFS) linked service.
type HdfsLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (HdfsLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HdfsLinkedServiceResponse)(nil)).Elem()
}

func (o HdfsLinkedServiceResponseOutput) ToHdfsLinkedServiceResponseOutput() HdfsLinkedServiceResponseOutput {
	return o
}

func (o HdfsLinkedServiceResponseOutput) ToHdfsLinkedServiceResponseOutputWithContext(ctx context.Context) HdfsLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o HdfsLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HdfsLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Type of authentication used to connect to the HDFS. Possible values are: Anonymous and Windows. Type: string (or Expression with resultType string).
func (o HdfsLinkedServiceResponseOutput) AuthenticationType() pulumi.AnyOutput {
	return o.ApplyT(func(v HdfsLinkedServiceResponse) interface{} { return v.AuthenticationType }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o HdfsLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v HdfsLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o HdfsLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HdfsLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o HdfsLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v HdfsLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o HdfsLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v HdfsLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Password for Windows authentication.
func (o HdfsLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v HdfsLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Hdfs'.
func (o HdfsLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HdfsLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The URL of the HDFS service endpoint, e.g. http://myhostname:50070/webhdfs/v1 . Type: string (or Expression with resultType string).
func (o HdfsLinkedServiceResponseOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v HdfsLinkedServiceResponse) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// User name for Windows authentication. Type: string (or Expression with resultType string).
func (o HdfsLinkedServiceResponseOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v HdfsLinkedServiceResponse) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// A copy activity HDFS source.
type HdfsSource struct {
	// Specifies Distcp-related settings.
	DistcpSettings *DistcpSettings `pulumi:"distcpSettings"`
	// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
	Recursive interface{} `pulumi:"recursive"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HdfsSource'.
	Type string `pulumi:"type"`
}

// HdfsSourceInput is an input type that accepts HdfsSourceArgs and HdfsSourceOutput values.
// You can construct a concrete instance of `HdfsSourceInput` via:
//
//          HdfsSourceArgs{...}
type HdfsSourceInput interface {
	pulumi.Input

	ToHdfsSourceOutput() HdfsSourceOutput
	ToHdfsSourceOutputWithContext(context.Context) HdfsSourceOutput
}

// A copy activity HDFS source.
type HdfsSourceArgs struct {
	// Specifies Distcp-related settings.
	DistcpSettings DistcpSettingsPtrInput `pulumi:"distcpSettings"`
	// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
	Recursive pulumi.Input `pulumi:"recursive"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HdfsSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HdfsSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HdfsSource)(nil)).Elem()
}

func (i HdfsSourceArgs) ToHdfsSourceOutput() HdfsSourceOutput {
	return i.ToHdfsSourceOutputWithContext(context.Background())
}

func (i HdfsSourceArgs) ToHdfsSourceOutputWithContext(ctx context.Context) HdfsSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HdfsSourceOutput)
}

// A copy activity HDFS source.
type HdfsSourceOutput struct{ *pulumi.OutputState }

func (HdfsSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HdfsSource)(nil)).Elem()
}

func (o HdfsSourceOutput) ToHdfsSourceOutput() HdfsSourceOutput {
	return o
}

func (o HdfsSourceOutput) ToHdfsSourceOutputWithContext(ctx context.Context) HdfsSourceOutput {
	return o
}

// Specifies Distcp-related settings.
func (o HdfsSourceOutput) DistcpSettings() DistcpSettingsPtrOutput {
	return o.ApplyT(func(v HdfsSource) *DistcpSettings { return v.DistcpSettings }).(DistcpSettingsPtrOutput)
}

// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
func (o HdfsSourceOutput) Recursive() pulumi.AnyOutput {
	return o.ApplyT(func(v HdfsSource) interface{} { return v.Recursive }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o HdfsSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v HdfsSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o HdfsSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v HdfsSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'HdfsSource'.
func (o HdfsSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HdfsSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity HDFS source.
type HdfsSourceResponse struct {
	// Specifies Distcp-related settings.
	DistcpSettings *DistcpSettingsResponse `pulumi:"distcpSettings"`
	// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
	Recursive interface{} `pulumi:"recursive"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HdfsSource'.
	Type string `pulumi:"type"`
}

// HdfsSourceResponseInput is an input type that accepts HdfsSourceResponseArgs and HdfsSourceResponseOutput values.
// You can construct a concrete instance of `HdfsSourceResponseInput` via:
//
//          HdfsSourceResponseArgs{...}
type HdfsSourceResponseInput interface {
	pulumi.Input

	ToHdfsSourceResponseOutput() HdfsSourceResponseOutput
	ToHdfsSourceResponseOutputWithContext(context.Context) HdfsSourceResponseOutput
}

// A copy activity HDFS source.
type HdfsSourceResponseArgs struct {
	// Specifies Distcp-related settings.
	DistcpSettings DistcpSettingsResponsePtrInput `pulumi:"distcpSettings"`
	// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
	Recursive pulumi.Input `pulumi:"recursive"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HdfsSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HdfsSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HdfsSourceResponse)(nil)).Elem()
}

func (i HdfsSourceResponseArgs) ToHdfsSourceResponseOutput() HdfsSourceResponseOutput {
	return i.ToHdfsSourceResponseOutputWithContext(context.Background())
}

func (i HdfsSourceResponseArgs) ToHdfsSourceResponseOutputWithContext(ctx context.Context) HdfsSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HdfsSourceResponseOutput)
}

// A copy activity HDFS source.
type HdfsSourceResponseOutput struct{ *pulumi.OutputState }

func (HdfsSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HdfsSourceResponse)(nil)).Elem()
}

func (o HdfsSourceResponseOutput) ToHdfsSourceResponseOutput() HdfsSourceResponseOutput {
	return o
}

func (o HdfsSourceResponseOutput) ToHdfsSourceResponseOutputWithContext(ctx context.Context) HdfsSourceResponseOutput {
	return o
}

// Specifies Distcp-related settings.
func (o HdfsSourceResponseOutput) DistcpSettings() DistcpSettingsResponsePtrOutput {
	return o.ApplyT(func(v HdfsSourceResponse) *DistcpSettingsResponse { return v.DistcpSettings }).(DistcpSettingsResponsePtrOutput)
}

// If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
func (o HdfsSourceResponseOutput) Recursive() pulumi.AnyOutput {
	return o.ApplyT(func(v HdfsSourceResponse) interface{} { return v.Recursive }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o HdfsSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v HdfsSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o HdfsSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v HdfsSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'HdfsSource'.
func (o HdfsSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HdfsSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Hive Server linked service.
type HiveLinkedService struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch interface{} `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert interface{} `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication method used to access the Hive server.
	AuthenticationType string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl interface{} `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable).
	Host interface{} `pulumi:"host"`
	// The partial URL corresponding to the Hive server.
	HttpPath interface{} `pulumi:"httpPath"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The password corresponding to the user name that you provided in the Username field
	Password interface{} `pulumi:"password"`
	// The TCP port that the Hive server uses to listen for client connections.
	Port interface{} `pulumi:"port"`
	// The type of Hive server.
	ServerType *string `pulumi:"serverType"`
	// true to indicate using the ZooKeeper service, false not.
	ServiceDiscoveryMode interface{} `pulumi:"serviceDiscoveryMode"`
	// The transport protocol to use in the Thrift layer.
	ThriftTransportProtocol *string `pulumi:"thriftTransportProtocol"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath interface{} `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Hive'.
	Type string `pulumi:"type"`
	// Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL.
	UseNativeQuery interface{} `pulumi:"useNativeQuery"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore interface{} `pulumi:"useSystemTrustStore"`
	// The user name that you use to access Hive Server.
	Username interface{} `pulumi:"username"`
	// The namespace on ZooKeeper under which Hive Server 2 nodes are added.
	ZooKeeperNameSpace interface{} `pulumi:"zooKeeperNameSpace"`
}

// HiveLinkedServiceInput is an input type that accepts HiveLinkedServiceArgs and HiveLinkedServiceOutput values.
// You can construct a concrete instance of `HiveLinkedServiceInput` via:
//
//          HiveLinkedServiceArgs{...}
type HiveLinkedServiceInput interface {
	pulumi.Input

	ToHiveLinkedServiceOutput() HiveLinkedServiceOutput
	ToHiveLinkedServiceOutputWithContext(context.Context) HiveLinkedServiceOutput
}

// Hive Server linked service.
type HiveLinkedServiceArgs struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch pulumi.Input `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert pulumi.Input `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication method used to access the Hive server.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl pulumi.Input `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable).
	Host pulumi.Input `pulumi:"host"`
	// The partial URL corresponding to the Hive server.
	HttpPath pulumi.Input `pulumi:"httpPath"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The password corresponding to the user name that you provided in the Username field
	Password pulumi.Input `pulumi:"password"`
	// The TCP port that the Hive server uses to listen for client connections.
	Port pulumi.Input `pulumi:"port"`
	// The type of Hive server.
	ServerType pulumi.StringPtrInput `pulumi:"serverType"`
	// true to indicate using the ZooKeeper service, false not.
	ServiceDiscoveryMode pulumi.Input `pulumi:"serviceDiscoveryMode"`
	// The transport protocol to use in the Thrift layer.
	ThriftTransportProtocol pulumi.StringPtrInput `pulumi:"thriftTransportProtocol"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath pulumi.Input `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Hive'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL.
	UseNativeQuery pulumi.Input `pulumi:"useNativeQuery"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore pulumi.Input `pulumi:"useSystemTrustStore"`
	// The user name that you use to access Hive Server.
	Username pulumi.Input `pulumi:"username"`
	// The namespace on ZooKeeper under which Hive Server 2 nodes are added.
	ZooKeeperNameSpace pulumi.Input `pulumi:"zooKeeperNameSpace"`
}

func (HiveLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveLinkedService)(nil)).Elem()
}

func (i HiveLinkedServiceArgs) ToHiveLinkedServiceOutput() HiveLinkedServiceOutput {
	return i.ToHiveLinkedServiceOutputWithContext(context.Background())
}

func (i HiveLinkedServiceArgs) ToHiveLinkedServiceOutputWithContext(ctx context.Context) HiveLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveLinkedServiceOutput)
}

// Hive Server linked service.
type HiveLinkedServiceOutput struct{ *pulumi.OutputState }

func (HiveLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveLinkedService)(nil)).Elem()
}

func (o HiveLinkedServiceOutput) ToHiveLinkedServiceOutput() HiveLinkedServiceOutput {
	return o
}

func (o HiveLinkedServiceOutput) ToHiveLinkedServiceOutputWithContext(ctx context.Context) HiveLinkedServiceOutput {
	return o
}

// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
func (o HiveLinkedServiceOutput) AllowHostNameCNMismatch() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedService) interface{} { return v.AllowHostNameCNMismatch }).(pulumi.AnyOutput)
}

// Specifies whether to allow self-signed certificates from the server. The default value is false.
func (o HiveLinkedServiceOutput) AllowSelfSignedServerCert() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedService) interface{} { return v.AllowSelfSignedServerCert }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o HiveLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HiveLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication method used to access the Hive server.
func (o HiveLinkedServiceOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v HiveLinkedService) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The integration runtime reference.
func (o HiveLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v HiveLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o HiveLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HiveLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
func (o HiveLinkedServiceOutput) EnableSsl() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedService) interface{} { return v.EnableSsl }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o HiveLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable).
func (o HiveLinkedServiceOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedService) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// The partial URL corresponding to the Hive server.
func (o HiveLinkedServiceOutput) HttpPath() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedService) interface{} { return v.HttpPath }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o HiveLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v HiveLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The password corresponding to the user name that you provided in the Username field
func (o HiveLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port that the Hive server uses to listen for client connections.
func (o HiveLinkedServiceOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedService) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The type of Hive server.
func (o HiveLinkedServiceOutput) ServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HiveLinkedService) *string { return v.ServerType }).(pulumi.StringPtrOutput)
}

// true to indicate using the ZooKeeper service, false not.
func (o HiveLinkedServiceOutput) ServiceDiscoveryMode() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedService) interface{} { return v.ServiceDiscoveryMode }).(pulumi.AnyOutput)
}

// The transport protocol to use in the Thrift layer.
func (o HiveLinkedServiceOutput) ThriftTransportProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HiveLinkedService) *string { return v.ThriftTransportProtocol }).(pulumi.StringPtrOutput)
}

// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
func (o HiveLinkedServiceOutput) TrustedCertPath() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedService) interface{} { return v.TrustedCertPath }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Hive'.
func (o HiveLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HiveLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL.
func (o HiveLinkedServiceOutput) UseNativeQuery() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedService) interface{} { return v.UseNativeQuery }).(pulumi.AnyOutput)
}

// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
func (o HiveLinkedServiceOutput) UseSystemTrustStore() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedService) interface{} { return v.UseSystemTrustStore }).(pulumi.AnyOutput)
}

// The user name that you use to access Hive Server.
func (o HiveLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// The namespace on ZooKeeper under which Hive Server 2 nodes are added.
func (o HiveLinkedServiceOutput) ZooKeeperNameSpace() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedService) interface{} { return v.ZooKeeperNameSpace }).(pulumi.AnyOutput)
}

// Hive Server linked service.
type HiveLinkedServiceResponse struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch interface{} `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert interface{} `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication method used to access the Hive server.
	AuthenticationType string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl interface{} `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable).
	Host interface{} `pulumi:"host"`
	// The partial URL corresponding to the Hive server.
	HttpPath interface{} `pulumi:"httpPath"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The password corresponding to the user name that you provided in the Username field
	Password interface{} `pulumi:"password"`
	// The TCP port that the Hive server uses to listen for client connections.
	Port interface{} `pulumi:"port"`
	// The type of Hive server.
	ServerType *string `pulumi:"serverType"`
	// true to indicate using the ZooKeeper service, false not.
	ServiceDiscoveryMode interface{} `pulumi:"serviceDiscoveryMode"`
	// The transport protocol to use in the Thrift layer.
	ThriftTransportProtocol *string `pulumi:"thriftTransportProtocol"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath interface{} `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Hive'.
	Type string `pulumi:"type"`
	// Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL.
	UseNativeQuery interface{} `pulumi:"useNativeQuery"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore interface{} `pulumi:"useSystemTrustStore"`
	// The user name that you use to access Hive Server.
	Username interface{} `pulumi:"username"`
	// The namespace on ZooKeeper under which Hive Server 2 nodes are added.
	ZooKeeperNameSpace interface{} `pulumi:"zooKeeperNameSpace"`
}

// HiveLinkedServiceResponseInput is an input type that accepts HiveLinkedServiceResponseArgs and HiveLinkedServiceResponseOutput values.
// You can construct a concrete instance of `HiveLinkedServiceResponseInput` via:
//
//          HiveLinkedServiceResponseArgs{...}
type HiveLinkedServiceResponseInput interface {
	pulumi.Input

	ToHiveLinkedServiceResponseOutput() HiveLinkedServiceResponseOutput
	ToHiveLinkedServiceResponseOutputWithContext(context.Context) HiveLinkedServiceResponseOutput
}

// Hive Server linked service.
type HiveLinkedServiceResponseArgs struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch pulumi.Input `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert pulumi.Input `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication method used to access the Hive server.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl pulumi.Input `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable).
	Host pulumi.Input `pulumi:"host"`
	// The partial URL corresponding to the Hive server.
	HttpPath pulumi.Input `pulumi:"httpPath"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The password corresponding to the user name that you provided in the Username field
	Password pulumi.Input `pulumi:"password"`
	// The TCP port that the Hive server uses to listen for client connections.
	Port pulumi.Input `pulumi:"port"`
	// The type of Hive server.
	ServerType pulumi.StringPtrInput `pulumi:"serverType"`
	// true to indicate using the ZooKeeper service, false not.
	ServiceDiscoveryMode pulumi.Input `pulumi:"serviceDiscoveryMode"`
	// The transport protocol to use in the Thrift layer.
	ThriftTransportProtocol pulumi.StringPtrInput `pulumi:"thriftTransportProtocol"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath pulumi.Input `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Hive'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL.
	UseNativeQuery pulumi.Input `pulumi:"useNativeQuery"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore pulumi.Input `pulumi:"useSystemTrustStore"`
	// The user name that you use to access Hive Server.
	Username pulumi.Input `pulumi:"username"`
	// The namespace on ZooKeeper under which Hive Server 2 nodes are added.
	ZooKeeperNameSpace pulumi.Input `pulumi:"zooKeeperNameSpace"`
}

func (HiveLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveLinkedServiceResponse)(nil)).Elem()
}

func (i HiveLinkedServiceResponseArgs) ToHiveLinkedServiceResponseOutput() HiveLinkedServiceResponseOutput {
	return i.ToHiveLinkedServiceResponseOutputWithContext(context.Background())
}

func (i HiveLinkedServiceResponseArgs) ToHiveLinkedServiceResponseOutputWithContext(ctx context.Context) HiveLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveLinkedServiceResponseOutput)
}

// Hive Server linked service.
type HiveLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (HiveLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveLinkedServiceResponse)(nil)).Elem()
}

func (o HiveLinkedServiceResponseOutput) ToHiveLinkedServiceResponseOutput() HiveLinkedServiceResponseOutput {
	return o
}

func (o HiveLinkedServiceResponseOutput) ToHiveLinkedServiceResponseOutputWithContext(ctx context.Context) HiveLinkedServiceResponseOutput {
	return o
}

// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
func (o HiveLinkedServiceResponseOutput) AllowHostNameCNMismatch() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) interface{} { return v.AllowHostNameCNMismatch }).(pulumi.AnyOutput)
}

// Specifies whether to allow self-signed certificates from the server. The default value is false.
func (o HiveLinkedServiceResponseOutput) AllowSelfSignedServerCert() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) interface{} { return v.AllowSelfSignedServerCert }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o HiveLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication method used to access the Hive server.
func (o HiveLinkedServiceResponseOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The integration runtime reference.
func (o HiveLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o HiveLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
func (o HiveLinkedServiceResponseOutput) EnableSsl() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) interface{} { return v.EnableSsl }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o HiveLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable).
func (o HiveLinkedServiceResponseOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// The partial URL corresponding to the Hive server.
func (o HiveLinkedServiceResponseOutput) HttpPath() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) interface{} { return v.HttpPath }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o HiveLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The password corresponding to the user name that you provided in the Username field
func (o HiveLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port that the Hive server uses to listen for client connections.
func (o HiveLinkedServiceResponseOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The type of Hive server.
func (o HiveLinkedServiceResponseOutput) ServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) *string { return v.ServerType }).(pulumi.StringPtrOutput)
}

// true to indicate using the ZooKeeper service, false not.
func (o HiveLinkedServiceResponseOutput) ServiceDiscoveryMode() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) interface{} { return v.ServiceDiscoveryMode }).(pulumi.AnyOutput)
}

// The transport protocol to use in the Thrift layer.
func (o HiveLinkedServiceResponseOutput) ThriftTransportProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) *string { return v.ThriftTransportProtocol }).(pulumi.StringPtrOutput)
}

// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
func (o HiveLinkedServiceResponseOutput) TrustedCertPath() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) interface{} { return v.TrustedCertPath }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Hive'.
func (o HiveLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL.
func (o HiveLinkedServiceResponseOutput) UseNativeQuery() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) interface{} { return v.UseNativeQuery }).(pulumi.AnyOutput)
}

// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
func (o HiveLinkedServiceResponseOutput) UseSystemTrustStore() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) interface{} { return v.UseSystemTrustStore }).(pulumi.AnyOutput)
}

// The user name that you use to access Hive Server.
func (o HiveLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// The namespace on ZooKeeper under which Hive Server 2 nodes are added.
func (o HiveLinkedServiceResponseOutput) ZooKeeperNameSpace() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveLinkedServiceResponse) interface{} { return v.ZooKeeperNameSpace }).(pulumi.AnyOutput)
}

// Hive Server dataset.
type HiveObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'HiveObject'.
	Type string `pulumi:"type"`
}

// HiveObjectDatasetInput is an input type that accepts HiveObjectDatasetArgs and HiveObjectDatasetOutput values.
// You can construct a concrete instance of `HiveObjectDatasetInput` via:
//
//          HiveObjectDatasetArgs{...}
type HiveObjectDatasetInput interface {
	pulumi.Input

	ToHiveObjectDatasetOutput() HiveObjectDatasetOutput
	ToHiveObjectDatasetOutputWithContext(context.Context) HiveObjectDatasetOutput
}

// Hive Server dataset.
type HiveObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'HiveObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HiveObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveObjectDataset)(nil)).Elem()
}

func (i HiveObjectDatasetArgs) ToHiveObjectDatasetOutput() HiveObjectDatasetOutput {
	return i.ToHiveObjectDatasetOutputWithContext(context.Background())
}

func (i HiveObjectDatasetArgs) ToHiveObjectDatasetOutputWithContext(ctx context.Context) HiveObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveObjectDatasetOutput)
}

// Hive Server dataset.
type HiveObjectDatasetOutput struct{ *pulumi.OutputState }

func (HiveObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveObjectDataset)(nil)).Elem()
}

func (o HiveObjectDatasetOutput) ToHiveObjectDatasetOutput() HiveObjectDatasetOutput {
	return o
}

func (o HiveObjectDatasetOutput) ToHiveObjectDatasetOutputWithContext(ctx context.Context) HiveObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o HiveObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HiveObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o HiveObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HiveObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o HiveObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v HiveObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o HiveObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v HiveObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o HiveObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'HiveObject'.
func (o HiveObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HiveObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Hive Server dataset.
type HiveObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'HiveObject'.
	Type string `pulumi:"type"`
}

// HiveObjectDatasetResponseInput is an input type that accepts HiveObjectDatasetResponseArgs and HiveObjectDatasetResponseOutput values.
// You can construct a concrete instance of `HiveObjectDatasetResponseInput` via:
//
//          HiveObjectDatasetResponseArgs{...}
type HiveObjectDatasetResponseInput interface {
	pulumi.Input

	ToHiveObjectDatasetResponseOutput() HiveObjectDatasetResponseOutput
	ToHiveObjectDatasetResponseOutputWithContext(context.Context) HiveObjectDatasetResponseOutput
}

// Hive Server dataset.
type HiveObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'HiveObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HiveObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveObjectDatasetResponse)(nil)).Elem()
}

func (i HiveObjectDatasetResponseArgs) ToHiveObjectDatasetResponseOutput() HiveObjectDatasetResponseOutput {
	return i.ToHiveObjectDatasetResponseOutputWithContext(context.Background())
}

func (i HiveObjectDatasetResponseArgs) ToHiveObjectDatasetResponseOutputWithContext(ctx context.Context) HiveObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveObjectDatasetResponseOutput)
}

// Hive Server dataset.
type HiveObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (HiveObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveObjectDatasetResponse)(nil)).Elem()
}

func (o HiveObjectDatasetResponseOutput) ToHiveObjectDatasetResponseOutput() HiveObjectDatasetResponseOutput {
	return o
}

func (o HiveObjectDatasetResponseOutput) ToHiveObjectDatasetResponseOutputWithContext(ctx context.Context) HiveObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o HiveObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HiveObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o HiveObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HiveObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o HiveObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v HiveObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o HiveObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v HiveObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o HiveObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'HiveObject'.
func (o HiveObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HiveObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Hive Server source.
type HiveSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HiveSource'.
	Type string `pulumi:"type"`
}

// HiveSourceInput is an input type that accepts HiveSourceArgs and HiveSourceOutput values.
// You can construct a concrete instance of `HiveSourceInput` via:
//
//          HiveSourceArgs{...}
type HiveSourceInput interface {
	pulumi.Input

	ToHiveSourceOutput() HiveSourceOutput
	ToHiveSourceOutputWithContext(context.Context) HiveSourceOutput
}

// A copy activity Hive Server source.
type HiveSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HiveSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HiveSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveSource)(nil)).Elem()
}

func (i HiveSourceArgs) ToHiveSourceOutput() HiveSourceOutput {
	return i.ToHiveSourceOutputWithContext(context.Background())
}

func (i HiveSourceArgs) ToHiveSourceOutputWithContext(ctx context.Context) HiveSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveSourceOutput)
}

// A copy activity Hive Server source.
type HiveSourceOutput struct{ *pulumi.OutputState }

func (HiveSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveSource)(nil)).Elem()
}

func (o HiveSourceOutput) ToHiveSourceOutput() HiveSourceOutput {
	return o
}

func (o HiveSourceOutput) ToHiveSourceOutputWithContext(ctx context.Context) HiveSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o HiveSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o HiveSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o HiveSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'HiveSource'.
func (o HiveSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HiveSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Hive Server source.
type HiveSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HiveSource'.
	Type string `pulumi:"type"`
}

// HiveSourceResponseInput is an input type that accepts HiveSourceResponseArgs and HiveSourceResponseOutput values.
// You can construct a concrete instance of `HiveSourceResponseInput` via:
//
//          HiveSourceResponseArgs{...}
type HiveSourceResponseInput interface {
	pulumi.Input

	ToHiveSourceResponseOutput() HiveSourceResponseOutput
	ToHiveSourceResponseOutputWithContext(context.Context) HiveSourceResponseOutput
}

// A copy activity Hive Server source.
type HiveSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HiveSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HiveSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveSourceResponse)(nil)).Elem()
}

func (i HiveSourceResponseArgs) ToHiveSourceResponseOutput() HiveSourceResponseOutput {
	return i.ToHiveSourceResponseOutputWithContext(context.Background())
}

func (i HiveSourceResponseArgs) ToHiveSourceResponseOutputWithContext(ctx context.Context) HiveSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveSourceResponseOutput)
}

// A copy activity Hive Server source.
type HiveSourceResponseOutput struct{ *pulumi.OutputState }

func (HiveSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveSourceResponse)(nil)).Elem()
}

func (o HiveSourceResponseOutput) ToHiveSourceResponseOutput() HiveSourceResponseOutput {
	return o
}

func (o HiveSourceResponseOutput) ToHiveSourceResponseOutputWithContext(ctx context.Context) HiveSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o HiveSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o HiveSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o HiveSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v HiveSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'HiveSource'.
func (o HiveSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HiveSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A file in an HTTP web server.
type HttpDataset struct {
	// The headers for the HTTP Request. e.g. request-header-name-1:request-header-value-1
	// ...
	// request-header-name-n:request-header-value-n Type: string (or Expression with resultType string).
	AdditionalHeaders interface{} `pulumi:"additionalHeaders"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The data compression method used on files.
	Compression interface{} `pulumi:"compression"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// The format of files.
	Format interface{} `pulumi:"format"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The relative URL based on the URL in the HttpLinkedService refers to an HTTP file Type: string (or Expression with resultType string).
	RelativeUrl interface{} `pulumi:"relativeUrl"`
	// The body for the HTTP request. Type: string (or Expression with resultType string).
	RequestBody interface{} `pulumi:"requestBody"`
	// The HTTP method for the HTTP request. Type: string (or Expression with resultType string).
	RequestMethod interface{} `pulumi:"requestMethod"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'HttpFile'.
	Type string `pulumi:"type"`
}

// HttpDatasetInput is an input type that accepts HttpDatasetArgs and HttpDatasetOutput values.
// You can construct a concrete instance of `HttpDatasetInput` via:
//
//          HttpDatasetArgs{...}
type HttpDatasetInput interface {
	pulumi.Input

	ToHttpDatasetOutput() HttpDatasetOutput
	ToHttpDatasetOutputWithContext(context.Context) HttpDatasetOutput
}

// A file in an HTTP web server.
type HttpDatasetArgs struct {
	// The headers for the HTTP Request. e.g. request-header-name-1:request-header-value-1
	// ...
	// request-header-name-n:request-header-value-n Type: string (or Expression with resultType string).
	AdditionalHeaders pulumi.Input `pulumi:"additionalHeaders"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The data compression method used on files.
	Compression pulumi.Input `pulumi:"compression"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The format of files.
	Format pulumi.Input `pulumi:"format"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The relative URL based on the URL in the HttpLinkedService refers to an HTTP file Type: string (or Expression with resultType string).
	RelativeUrl pulumi.Input `pulumi:"relativeUrl"`
	// The body for the HTTP request. Type: string (or Expression with resultType string).
	RequestBody pulumi.Input `pulumi:"requestBody"`
	// The HTTP method for the HTTP request. Type: string (or Expression with resultType string).
	RequestMethod pulumi.Input `pulumi:"requestMethod"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'HttpFile'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HttpDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpDataset)(nil)).Elem()
}

func (i HttpDatasetArgs) ToHttpDatasetOutput() HttpDatasetOutput {
	return i.ToHttpDatasetOutputWithContext(context.Background())
}

func (i HttpDatasetArgs) ToHttpDatasetOutputWithContext(ctx context.Context) HttpDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpDatasetOutput)
}

// A file in an HTTP web server.
type HttpDatasetOutput struct{ *pulumi.OutputState }

func (HttpDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpDataset)(nil)).Elem()
}

func (o HttpDatasetOutput) ToHttpDatasetOutput() HttpDatasetOutput {
	return o
}

func (o HttpDatasetOutput) ToHttpDatasetOutputWithContext(ctx context.Context) HttpDatasetOutput {
	return o
}

// The headers for the HTTP Request. e.g. request-header-name-1:request-header-value-1
// ...
// request-header-name-n:request-header-value-n Type: string (or Expression with resultType string).
func (o HttpDatasetOutput) AdditionalHeaders() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpDataset) interface{} { return v.AdditionalHeaders }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o HttpDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HttpDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The data compression method used on files.
func (o HttpDatasetOutput) Compression() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpDataset) interface{} { return v.Compression }).(pulumi.AnyOutput)
}

// Dataset description.
func (o HttpDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The format of files.
func (o HttpDatasetOutput) Format() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpDataset) interface{} { return v.Format }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o HttpDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v HttpDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o HttpDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v HttpDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The relative URL based on the URL in the HttpLinkedService refers to an HTTP file Type: string (or Expression with resultType string).
func (o HttpDatasetOutput) RelativeUrl() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpDataset) interface{} { return v.RelativeUrl }).(pulumi.AnyOutput)
}

// The body for the HTTP request. Type: string (or Expression with resultType string).
func (o HttpDatasetOutput) RequestBody() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpDataset) interface{} { return v.RequestBody }).(pulumi.AnyOutput)
}

// The HTTP method for the HTTP request. Type: string (or Expression with resultType string).
func (o HttpDatasetOutput) RequestMethod() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpDataset) interface{} { return v.RequestMethod }).(pulumi.AnyOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o HttpDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'HttpFile'.
func (o HttpDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HttpDataset) string { return v.Type }).(pulumi.StringOutput)
}

// A file in an HTTP web server.
type HttpDatasetResponse struct {
	// The headers for the HTTP Request. e.g. request-header-name-1:request-header-value-1
	// ...
	// request-header-name-n:request-header-value-n Type: string (or Expression with resultType string).
	AdditionalHeaders interface{} `pulumi:"additionalHeaders"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The data compression method used on files.
	Compression interface{} `pulumi:"compression"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// The format of files.
	Format interface{} `pulumi:"format"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The relative URL based on the URL in the HttpLinkedService refers to an HTTP file Type: string (or Expression with resultType string).
	RelativeUrl interface{} `pulumi:"relativeUrl"`
	// The body for the HTTP request. Type: string (or Expression with resultType string).
	RequestBody interface{} `pulumi:"requestBody"`
	// The HTTP method for the HTTP request. Type: string (or Expression with resultType string).
	RequestMethod interface{} `pulumi:"requestMethod"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'HttpFile'.
	Type string `pulumi:"type"`
}

// HttpDatasetResponseInput is an input type that accepts HttpDatasetResponseArgs and HttpDatasetResponseOutput values.
// You can construct a concrete instance of `HttpDatasetResponseInput` via:
//
//          HttpDatasetResponseArgs{...}
type HttpDatasetResponseInput interface {
	pulumi.Input

	ToHttpDatasetResponseOutput() HttpDatasetResponseOutput
	ToHttpDatasetResponseOutputWithContext(context.Context) HttpDatasetResponseOutput
}

// A file in an HTTP web server.
type HttpDatasetResponseArgs struct {
	// The headers for the HTTP Request. e.g. request-header-name-1:request-header-value-1
	// ...
	// request-header-name-n:request-header-value-n Type: string (or Expression with resultType string).
	AdditionalHeaders pulumi.Input `pulumi:"additionalHeaders"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The data compression method used on files.
	Compression pulumi.Input `pulumi:"compression"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The format of files.
	Format pulumi.Input `pulumi:"format"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The relative URL based on the URL in the HttpLinkedService refers to an HTTP file Type: string (or Expression with resultType string).
	RelativeUrl pulumi.Input `pulumi:"relativeUrl"`
	// The body for the HTTP request. Type: string (or Expression with resultType string).
	RequestBody pulumi.Input `pulumi:"requestBody"`
	// The HTTP method for the HTTP request. Type: string (or Expression with resultType string).
	RequestMethod pulumi.Input `pulumi:"requestMethod"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'HttpFile'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HttpDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpDatasetResponse)(nil)).Elem()
}

func (i HttpDatasetResponseArgs) ToHttpDatasetResponseOutput() HttpDatasetResponseOutput {
	return i.ToHttpDatasetResponseOutputWithContext(context.Background())
}

func (i HttpDatasetResponseArgs) ToHttpDatasetResponseOutputWithContext(ctx context.Context) HttpDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpDatasetResponseOutput)
}

// A file in an HTTP web server.
type HttpDatasetResponseOutput struct{ *pulumi.OutputState }

func (HttpDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpDatasetResponse)(nil)).Elem()
}

func (o HttpDatasetResponseOutput) ToHttpDatasetResponseOutput() HttpDatasetResponseOutput {
	return o
}

func (o HttpDatasetResponseOutput) ToHttpDatasetResponseOutputWithContext(ctx context.Context) HttpDatasetResponseOutput {
	return o
}

// The headers for the HTTP Request. e.g. request-header-name-1:request-header-value-1
// ...
// request-header-name-n:request-header-value-n Type: string (or Expression with resultType string).
func (o HttpDatasetResponseOutput) AdditionalHeaders() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpDatasetResponse) interface{} { return v.AdditionalHeaders }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o HttpDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HttpDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The data compression method used on files.
func (o HttpDatasetResponseOutput) Compression() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpDatasetResponse) interface{} { return v.Compression }).(pulumi.AnyOutput)
}

// Dataset description.
func (o HttpDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The format of files.
func (o HttpDatasetResponseOutput) Format() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpDatasetResponse) interface{} { return v.Format }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o HttpDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v HttpDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o HttpDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v HttpDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The relative URL based on the URL in the HttpLinkedService refers to an HTTP file Type: string (or Expression with resultType string).
func (o HttpDatasetResponseOutput) RelativeUrl() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpDatasetResponse) interface{} { return v.RelativeUrl }).(pulumi.AnyOutput)
}

// The body for the HTTP request. Type: string (or Expression with resultType string).
func (o HttpDatasetResponseOutput) RequestBody() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpDatasetResponse) interface{} { return v.RequestBody }).(pulumi.AnyOutput)
}

// The HTTP method for the HTTP request. Type: string (or Expression with resultType string).
func (o HttpDatasetResponseOutput) RequestMethod() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpDatasetResponse) interface{} { return v.RequestMethod }).(pulumi.AnyOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o HttpDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'HttpFile'.
func (o HttpDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HttpDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Linked service for an HTTP source.
type HttpLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication type to be used to connect to the HTTP server.
	AuthenticationType *string `pulumi:"authenticationType"`
	// Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
	CertThumbprint interface{} `pulumi:"certThumbprint"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
	EmbeddedCertData interface{} `pulumi:"embeddedCertData"`
	// If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean).
	EnableServerCertificateValidation interface{} `pulumi:"enableServerCertificateValidation"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Password for Basic, Digest, Windows, or ClientCertificate with EmbeddedCertData authentication.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'HttpServer'.
	Type string `pulumi:"type"`
	// The base URL of the HTTP endpoint, e.g. http://www.microsoft.com. Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
	// User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// HttpLinkedServiceInput is an input type that accepts HttpLinkedServiceArgs and HttpLinkedServiceOutput values.
// You can construct a concrete instance of `HttpLinkedServiceInput` via:
//
//          HttpLinkedServiceArgs{...}
type HttpLinkedServiceInput interface {
	pulumi.Input

	ToHttpLinkedServiceOutput() HttpLinkedServiceOutput
	ToHttpLinkedServiceOutputWithContext(context.Context) HttpLinkedServiceOutput
}

// Linked service for an HTTP source.
type HttpLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication type to be used to connect to the HTTP server.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
	CertThumbprint pulumi.Input `pulumi:"certThumbprint"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
	EmbeddedCertData pulumi.Input `pulumi:"embeddedCertData"`
	// If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean).
	EnableServerCertificateValidation pulumi.Input `pulumi:"enableServerCertificateValidation"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Password for Basic, Digest, Windows, or ClientCertificate with EmbeddedCertData authentication.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'HttpServer'.
	Type pulumi.StringInput `pulumi:"type"`
	// The base URL of the HTTP endpoint, e.g. http://www.microsoft.com. Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
	// User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (HttpLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpLinkedService)(nil)).Elem()
}

func (i HttpLinkedServiceArgs) ToHttpLinkedServiceOutput() HttpLinkedServiceOutput {
	return i.ToHttpLinkedServiceOutputWithContext(context.Background())
}

func (i HttpLinkedServiceArgs) ToHttpLinkedServiceOutputWithContext(ctx context.Context) HttpLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpLinkedServiceOutput)
}

// Linked service for an HTTP source.
type HttpLinkedServiceOutput struct{ *pulumi.OutputState }

func (HttpLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpLinkedService)(nil)).Elem()
}

func (o HttpLinkedServiceOutput) ToHttpLinkedServiceOutput() HttpLinkedServiceOutput {
	return o
}

func (o HttpLinkedServiceOutput) ToHttpLinkedServiceOutputWithContext(ctx context.Context) HttpLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o HttpLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HttpLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication type to be used to connect to the HTTP server.
func (o HttpLinkedServiceOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpLinkedService) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
func (o HttpLinkedServiceOutput) CertThumbprint() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpLinkedService) interface{} { return v.CertThumbprint }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o HttpLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v HttpLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o HttpLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
func (o HttpLinkedServiceOutput) EmbeddedCertData() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpLinkedService) interface{} { return v.EmbeddedCertData }).(pulumi.AnyOutput)
}

// If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean).
func (o HttpLinkedServiceOutput) EnableServerCertificateValidation() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpLinkedService) interface{} { return v.EnableServerCertificateValidation }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o HttpLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o HttpLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v HttpLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Password for Basic, Digest, Windows, or ClientCertificate with EmbeddedCertData authentication.
func (o HttpLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'HttpServer'.
func (o HttpLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HttpLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// The base URL of the HTTP endpoint, e.g. http://www.microsoft.com. Type: string (or Expression with resultType string).
func (o HttpLinkedServiceOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpLinkedService) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string).
func (o HttpLinkedServiceOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpLinkedService) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// Linked service for an HTTP source.
type HttpLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication type to be used to connect to the HTTP server.
	AuthenticationType *string `pulumi:"authenticationType"`
	// Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
	CertThumbprint interface{} `pulumi:"certThumbprint"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
	EmbeddedCertData interface{} `pulumi:"embeddedCertData"`
	// If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean).
	EnableServerCertificateValidation interface{} `pulumi:"enableServerCertificateValidation"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Password for Basic, Digest, Windows, or ClientCertificate with EmbeddedCertData authentication.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'HttpServer'.
	Type string `pulumi:"type"`
	// The base URL of the HTTP endpoint, e.g. http://www.microsoft.com. Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
	// User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// HttpLinkedServiceResponseInput is an input type that accepts HttpLinkedServiceResponseArgs and HttpLinkedServiceResponseOutput values.
// You can construct a concrete instance of `HttpLinkedServiceResponseInput` via:
//
//          HttpLinkedServiceResponseArgs{...}
type HttpLinkedServiceResponseInput interface {
	pulumi.Input

	ToHttpLinkedServiceResponseOutput() HttpLinkedServiceResponseOutput
	ToHttpLinkedServiceResponseOutputWithContext(context.Context) HttpLinkedServiceResponseOutput
}

// Linked service for an HTTP source.
type HttpLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication type to be used to connect to the HTTP server.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
	CertThumbprint pulumi.Input `pulumi:"certThumbprint"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
	EmbeddedCertData pulumi.Input `pulumi:"embeddedCertData"`
	// If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean).
	EnableServerCertificateValidation pulumi.Input `pulumi:"enableServerCertificateValidation"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Password for Basic, Digest, Windows, or ClientCertificate with EmbeddedCertData authentication.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'HttpServer'.
	Type pulumi.StringInput `pulumi:"type"`
	// The base URL of the HTTP endpoint, e.g. http://www.microsoft.com. Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
	// User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (HttpLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpLinkedServiceResponse)(nil)).Elem()
}

func (i HttpLinkedServiceResponseArgs) ToHttpLinkedServiceResponseOutput() HttpLinkedServiceResponseOutput {
	return i.ToHttpLinkedServiceResponseOutputWithContext(context.Background())
}

func (i HttpLinkedServiceResponseArgs) ToHttpLinkedServiceResponseOutputWithContext(ctx context.Context) HttpLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpLinkedServiceResponseOutput)
}

// Linked service for an HTTP source.
type HttpLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (HttpLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpLinkedServiceResponse)(nil)).Elem()
}

func (o HttpLinkedServiceResponseOutput) ToHttpLinkedServiceResponseOutput() HttpLinkedServiceResponseOutput {
	return o
}

func (o HttpLinkedServiceResponseOutput) ToHttpLinkedServiceResponseOutputWithContext(ctx context.Context) HttpLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o HttpLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HttpLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication type to be used to connect to the HTTP server.
func (o HttpLinkedServiceResponseOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpLinkedServiceResponse) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
func (o HttpLinkedServiceResponseOutput) CertThumbprint() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpLinkedServiceResponse) interface{} { return v.CertThumbprint }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o HttpLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v HttpLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o HttpLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
func (o HttpLinkedServiceResponseOutput) EmbeddedCertData() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpLinkedServiceResponse) interface{} { return v.EmbeddedCertData }).(pulumi.AnyOutput)
}

// If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean).
func (o HttpLinkedServiceResponseOutput) EnableServerCertificateValidation() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpLinkedServiceResponse) interface{} { return v.EnableServerCertificateValidation }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o HttpLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o HttpLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v HttpLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Password for Basic, Digest, Windows, or ClientCertificate with EmbeddedCertData authentication.
func (o HttpLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'HttpServer'.
func (o HttpLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HttpLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The base URL of the HTTP endpoint, e.g. http://www.microsoft.com. Type: string (or Expression with resultType string).
func (o HttpLinkedServiceResponseOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpLinkedServiceResponse) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string).
func (o HttpLinkedServiceResponseOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpLinkedServiceResponse) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// A copy activity source for an HTTP file.
type HttpSource struct {
	// Specifies the timeout for a HTTP client to get HTTP response from HTTP server. The default value is equivalent to System.Net.HttpWebRequest.Timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	HttpRequestTimeout interface{} `pulumi:"httpRequestTimeout"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HttpSource'.
	Type string `pulumi:"type"`
}

// HttpSourceInput is an input type that accepts HttpSourceArgs and HttpSourceOutput values.
// You can construct a concrete instance of `HttpSourceInput` via:
//
//          HttpSourceArgs{...}
type HttpSourceInput interface {
	pulumi.Input

	ToHttpSourceOutput() HttpSourceOutput
	ToHttpSourceOutputWithContext(context.Context) HttpSourceOutput
}

// A copy activity source for an HTTP file.
type HttpSourceArgs struct {
	// Specifies the timeout for a HTTP client to get HTTP response from HTTP server. The default value is equivalent to System.Net.HttpWebRequest.Timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	HttpRequestTimeout pulumi.Input `pulumi:"httpRequestTimeout"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HttpSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HttpSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSource)(nil)).Elem()
}

func (i HttpSourceArgs) ToHttpSourceOutput() HttpSourceOutput {
	return i.ToHttpSourceOutputWithContext(context.Background())
}

func (i HttpSourceArgs) ToHttpSourceOutputWithContext(ctx context.Context) HttpSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSourceOutput)
}

// A copy activity source for an HTTP file.
type HttpSourceOutput struct{ *pulumi.OutputState }

func (HttpSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSource)(nil)).Elem()
}

func (o HttpSourceOutput) ToHttpSourceOutput() HttpSourceOutput {
	return o
}

func (o HttpSourceOutput) ToHttpSourceOutputWithContext(ctx context.Context) HttpSourceOutput {
	return o
}

// Specifies the timeout for a HTTP client to get HTTP response from HTTP server. The default value is equivalent to System.Net.HttpWebRequest.Timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o HttpSourceOutput) HttpRequestTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpSource) interface{} { return v.HttpRequestTimeout }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o HttpSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o HttpSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'HttpSource'.
func (o HttpSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HttpSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity source for an HTTP file.
type HttpSourceResponse struct {
	// Specifies the timeout for a HTTP client to get HTTP response from HTTP server. The default value is equivalent to System.Net.HttpWebRequest.Timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	HttpRequestTimeout interface{} `pulumi:"httpRequestTimeout"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HttpSource'.
	Type string `pulumi:"type"`
}

// HttpSourceResponseInput is an input type that accepts HttpSourceResponseArgs and HttpSourceResponseOutput values.
// You can construct a concrete instance of `HttpSourceResponseInput` via:
//
//          HttpSourceResponseArgs{...}
type HttpSourceResponseInput interface {
	pulumi.Input

	ToHttpSourceResponseOutput() HttpSourceResponseOutput
	ToHttpSourceResponseOutputWithContext(context.Context) HttpSourceResponseOutput
}

// A copy activity source for an HTTP file.
type HttpSourceResponseArgs struct {
	// Specifies the timeout for a HTTP client to get HTTP response from HTTP server. The default value is equivalent to System.Net.HttpWebRequest.Timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	HttpRequestTimeout pulumi.Input `pulumi:"httpRequestTimeout"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HttpSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HttpSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSourceResponse)(nil)).Elem()
}

func (i HttpSourceResponseArgs) ToHttpSourceResponseOutput() HttpSourceResponseOutput {
	return i.ToHttpSourceResponseOutputWithContext(context.Background())
}

func (i HttpSourceResponseArgs) ToHttpSourceResponseOutputWithContext(ctx context.Context) HttpSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSourceResponseOutput)
}

// A copy activity source for an HTTP file.
type HttpSourceResponseOutput struct{ *pulumi.OutputState }

func (HttpSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSourceResponse)(nil)).Elem()
}

func (o HttpSourceResponseOutput) ToHttpSourceResponseOutput() HttpSourceResponseOutput {
	return o
}

func (o HttpSourceResponseOutput) ToHttpSourceResponseOutputWithContext(ctx context.Context) HttpSourceResponseOutput {
	return o
}

// Specifies the timeout for a HTTP client to get HTTP response from HTTP server. The default value is equivalent to System.Net.HttpWebRequest.Timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o HttpSourceResponseOutput) HttpRequestTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpSourceResponse) interface{} { return v.HttpRequestTimeout }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o HttpSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o HttpSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v HttpSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'HttpSource'.
func (o HttpSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HttpSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Hubspot Service linked service.
type HubspotLinkedService struct {
	// The access token obtained when initially authenticating your OAuth integration.
	AccessToken interface{} `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The client ID associated with your Hubspot application.
	ClientId interface{} `pulumi:"clientId"`
	// The client secret associated with your Hubspot application.
	ClientSecret interface{} `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The refresh token obtained when initially authenticating your OAuth integration.
	RefreshToken interface{} `pulumi:"refreshToken"`
	// Type of linked service.
	// Expected value is 'Hubspot'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// HubspotLinkedServiceInput is an input type that accepts HubspotLinkedServiceArgs and HubspotLinkedServiceOutput values.
// You can construct a concrete instance of `HubspotLinkedServiceInput` via:
//
//          HubspotLinkedServiceArgs{...}
type HubspotLinkedServiceInput interface {
	pulumi.Input

	ToHubspotLinkedServiceOutput() HubspotLinkedServiceOutput
	ToHubspotLinkedServiceOutputWithContext(context.Context) HubspotLinkedServiceOutput
}

// Hubspot Service linked service.
type HubspotLinkedServiceArgs struct {
	// The access token obtained when initially authenticating your OAuth integration.
	AccessToken pulumi.Input `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The client ID associated with your Hubspot application.
	ClientId pulumi.Input `pulumi:"clientId"`
	// The client secret associated with your Hubspot application.
	ClientSecret pulumi.Input `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The refresh token obtained when initially authenticating your OAuth integration.
	RefreshToken pulumi.Input `pulumi:"refreshToken"`
	// Type of linked service.
	// Expected value is 'Hubspot'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (HubspotLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubspotLinkedService)(nil)).Elem()
}

func (i HubspotLinkedServiceArgs) ToHubspotLinkedServiceOutput() HubspotLinkedServiceOutput {
	return i.ToHubspotLinkedServiceOutputWithContext(context.Background())
}

func (i HubspotLinkedServiceArgs) ToHubspotLinkedServiceOutputWithContext(ctx context.Context) HubspotLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubspotLinkedServiceOutput)
}

// Hubspot Service linked service.
type HubspotLinkedServiceOutput struct{ *pulumi.OutputState }

func (HubspotLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubspotLinkedService)(nil)).Elem()
}

func (o HubspotLinkedServiceOutput) ToHubspotLinkedServiceOutput() HubspotLinkedServiceOutput {
	return o
}

func (o HubspotLinkedServiceOutput) ToHubspotLinkedServiceOutputWithContext(ctx context.Context) HubspotLinkedServiceOutput {
	return o
}

// The access token obtained when initially authenticating your OAuth integration.
func (o HubspotLinkedServiceOutput) AccessToken() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotLinkedService) interface{} { return v.AccessToken }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o HubspotLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HubspotLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The client ID associated with your Hubspot application.
func (o HubspotLinkedServiceOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotLinkedService) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The client secret associated with your Hubspot application.
func (o HubspotLinkedServiceOutput) ClientSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotLinkedService) interface{} { return v.ClientSecret }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o HubspotLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v HubspotLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o HubspotLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubspotLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o HubspotLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o HubspotLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v HubspotLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The refresh token obtained when initially authenticating your OAuth integration.
func (o HubspotLinkedServiceOutput) RefreshToken() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotLinkedService) interface{} { return v.RefreshToken }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Hubspot'.
func (o HubspotLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HubspotLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o HubspotLinkedServiceOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotLinkedService) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o HubspotLinkedServiceOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotLinkedService) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o HubspotLinkedServiceOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotLinkedService) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Hubspot Service linked service.
type HubspotLinkedServiceResponse struct {
	// The access token obtained when initially authenticating your OAuth integration.
	AccessToken interface{} `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The client ID associated with your Hubspot application.
	ClientId interface{} `pulumi:"clientId"`
	// The client secret associated with your Hubspot application.
	ClientSecret interface{} `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The refresh token obtained when initially authenticating your OAuth integration.
	RefreshToken interface{} `pulumi:"refreshToken"`
	// Type of linked service.
	// Expected value is 'Hubspot'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// HubspotLinkedServiceResponseInput is an input type that accepts HubspotLinkedServiceResponseArgs and HubspotLinkedServiceResponseOutput values.
// You can construct a concrete instance of `HubspotLinkedServiceResponseInput` via:
//
//          HubspotLinkedServiceResponseArgs{...}
type HubspotLinkedServiceResponseInput interface {
	pulumi.Input

	ToHubspotLinkedServiceResponseOutput() HubspotLinkedServiceResponseOutput
	ToHubspotLinkedServiceResponseOutputWithContext(context.Context) HubspotLinkedServiceResponseOutput
}

// Hubspot Service linked service.
type HubspotLinkedServiceResponseArgs struct {
	// The access token obtained when initially authenticating your OAuth integration.
	AccessToken pulumi.Input `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The client ID associated with your Hubspot application.
	ClientId pulumi.Input `pulumi:"clientId"`
	// The client secret associated with your Hubspot application.
	ClientSecret pulumi.Input `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The refresh token obtained when initially authenticating your OAuth integration.
	RefreshToken pulumi.Input `pulumi:"refreshToken"`
	// Type of linked service.
	// Expected value is 'Hubspot'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (HubspotLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubspotLinkedServiceResponse)(nil)).Elem()
}

func (i HubspotLinkedServiceResponseArgs) ToHubspotLinkedServiceResponseOutput() HubspotLinkedServiceResponseOutput {
	return i.ToHubspotLinkedServiceResponseOutputWithContext(context.Background())
}

func (i HubspotLinkedServiceResponseArgs) ToHubspotLinkedServiceResponseOutputWithContext(ctx context.Context) HubspotLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubspotLinkedServiceResponseOutput)
}

// Hubspot Service linked service.
type HubspotLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (HubspotLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubspotLinkedServiceResponse)(nil)).Elem()
}

func (o HubspotLinkedServiceResponseOutput) ToHubspotLinkedServiceResponseOutput() HubspotLinkedServiceResponseOutput {
	return o
}

func (o HubspotLinkedServiceResponseOutput) ToHubspotLinkedServiceResponseOutputWithContext(ctx context.Context) HubspotLinkedServiceResponseOutput {
	return o
}

// The access token obtained when initially authenticating your OAuth integration.
func (o HubspotLinkedServiceResponseOutput) AccessToken() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotLinkedServiceResponse) interface{} { return v.AccessToken }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o HubspotLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HubspotLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The client ID associated with your Hubspot application.
func (o HubspotLinkedServiceResponseOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotLinkedServiceResponse) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The client secret associated with your Hubspot application.
func (o HubspotLinkedServiceResponseOutput) ClientSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotLinkedServiceResponse) interface{} { return v.ClientSecret }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o HubspotLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v HubspotLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o HubspotLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubspotLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o HubspotLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o HubspotLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v HubspotLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The refresh token obtained when initially authenticating your OAuth integration.
func (o HubspotLinkedServiceResponseOutput) RefreshToken() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotLinkedServiceResponse) interface{} { return v.RefreshToken }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Hubspot'.
func (o HubspotLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HubspotLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o HubspotLinkedServiceResponseOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotLinkedServiceResponse) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o HubspotLinkedServiceResponseOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotLinkedServiceResponse) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o HubspotLinkedServiceResponseOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotLinkedServiceResponse) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Hubspot Service dataset.
type HubspotObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'HubspotObject'.
	Type string `pulumi:"type"`
}

// HubspotObjectDatasetInput is an input type that accepts HubspotObjectDatasetArgs and HubspotObjectDatasetOutput values.
// You can construct a concrete instance of `HubspotObjectDatasetInput` via:
//
//          HubspotObjectDatasetArgs{...}
type HubspotObjectDatasetInput interface {
	pulumi.Input

	ToHubspotObjectDatasetOutput() HubspotObjectDatasetOutput
	ToHubspotObjectDatasetOutputWithContext(context.Context) HubspotObjectDatasetOutput
}

// Hubspot Service dataset.
type HubspotObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'HubspotObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HubspotObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubspotObjectDataset)(nil)).Elem()
}

func (i HubspotObjectDatasetArgs) ToHubspotObjectDatasetOutput() HubspotObjectDatasetOutput {
	return i.ToHubspotObjectDatasetOutputWithContext(context.Background())
}

func (i HubspotObjectDatasetArgs) ToHubspotObjectDatasetOutputWithContext(ctx context.Context) HubspotObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubspotObjectDatasetOutput)
}

// Hubspot Service dataset.
type HubspotObjectDatasetOutput struct{ *pulumi.OutputState }

func (HubspotObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubspotObjectDataset)(nil)).Elem()
}

func (o HubspotObjectDatasetOutput) ToHubspotObjectDatasetOutput() HubspotObjectDatasetOutput {
	return o
}

func (o HubspotObjectDatasetOutput) ToHubspotObjectDatasetOutputWithContext(ctx context.Context) HubspotObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o HubspotObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HubspotObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o HubspotObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubspotObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o HubspotObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v HubspotObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o HubspotObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v HubspotObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o HubspotObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'HubspotObject'.
func (o HubspotObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HubspotObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Hubspot Service dataset.
type HubspotObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'HubspotObject'.
	Type string `pulumi:"type"`
}

// HubspotObjectDatasetResponseInput is an input type that accepts HubspotObjectDatasetResponseArgs and HubspotObjectDatasetResponseOutput values.
// You can construct a concrete instance of `HubspotObjectDatasetResponseInput` via:
//
//          HubspotObjectDatasetResponseArgs{...}
type HubspotObjectDatasetResponseInput interface {
	pulumi.Input

	ToHubspotObjectDatasetResponseOutput() HubspotObjectDatasetResponseOutput
	ToHubspotObjectDatasetResponseOutputWithContext(context.Context) HubspotObjectDatasetResponseOutput
}

// Hubspot Service dataset.
type HubspotObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'HubspotObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HubspotObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubspotObjectDatasetResponse)(nil)).Elem()
}

func (i HubspotObjectDatasetResponseArgs) ToHubspotObjectDatasetResponseOutput() HubspotObjectDatasetResponseOutput {
	return i.ToHubspotObjectDatasetResponseOutputWithContext(context.Background())
}

func (i HubspotObjectDatasetResponseArgs) ToHubspotObjectDatasetResponseOutputWithContext(ctx context.Context) HubspotObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubspotObjectDatasetResponseOutput)
}

// Hubspot Service dataset.
type HubspotObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (HubspotObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubspotObjectDatasetResponse)(nil)).Elem()
}

func (o HubspotObjectDatasetResponseOutput) ToHubspotObjectDatasetResponseOutput() HubspotObjectDatasetResponseOutput {
	return o
}

func (o HubspotObjectDatasetResponseOutput) ToHubspotObjectDatasetResponseOutputWithContext(ctx context.Context) HubspotObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o HubspotObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v HubspotObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o HubspotObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubspotObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o HubspotObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v HubspotObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o HubspotObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v HubspotObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o HubspotObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'HubspotObject'.
func (o HubspotObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HubspotObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Hubspot Service source.
type HubspotSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HubspotSource'.
	Type string `pulumi:"type"`
}

// HubspotSourceInput is an input type that accepts HubspotSourceArgs and HubspotSourceOutput values.
// You can construct a concrete instance of `HubspotSourceInput` via:
//
//          HubspotSourceArgs{...}
type HubspotSourceInput interface {
	pulumi.Input

	ToHubspotSourceOutput() HubspotSourceOutput
	ToHubspotSourceOutputWithContext(context.Context) HubspotSourceOutput
}

// A copy activity Hubspot Service source.
type HubspotSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HubspotSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HubspotSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubspotSource)(nil)).Elem()
}

func (i HubspotSourceArgs) ToHubspotSourceOutput() HubspotSourceOutput {
	return i.ToHubspotSourceOutputWithContext(context.Background())
}

func (i HubspotSourceArgs) ToHubspotSourceOutputWithContext(ctx context.Context) HubspotSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubspotSourceOutput)
}

// A copy activity Hubspot Service source.
type HubspotSourceOutput struct{ *pulumi.OutputState }

func (HubspotSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubspotSource)(nil)).Elem()
}

func (o HubspotSourceOutput) ToHubspotSourceOutput() HubspotSourceOutput {
	return o
}

func (o HubspotSourceOutput) ToHubspotSourceOutputWithContext(ctx context.Context) HubspotSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o HubspotSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o HubspotSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o HubspotSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'HubspotSource'.
func (o HubspotSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HubspotSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Hubspot Service source.
type HubspotSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HubspotSource'.
	Type string `pulumi:"type"`
}

// HubspotSourceResponseInput is an input type that accepts HubspotSourceResponseArgs and HubspotSourceResponseOutput values.
// You can construct a concrete instance of `HubspotSourceResponseInput` via:
//
//          HubspotSourceResponseArgs{...}
type HubspotSourceResponseInput interface {
	pulumi.Input

	ToHubspotSourceResponseOutput() HubspotSourceResponseOutput
	ToHubspotSourceResponseOutputWithContext(context.Context) HubspotSourceResponseOutput
}

// A copy activity Hubspot Service source.
type HubspotSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'HubspotSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HubspotSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubspotSourceResponse)(nil)).Elem()
}

func (i HubspotSourceResponseArgs) ToHubspotSourceResponseOutput() HubspotSourceResponseOutput {
	return i.ToHubspotSourceResponseOutputWithContext(context.Background())
}

func (i HubspotSourceResponseArgs) ToHubspotSourceResponseOutputWithContext(ctx context.Context) HubspotSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubspotSourceResponseOutput)
}

// A copy activity Hubspot Service source.
type HubspotSourceResponseOutput struct{ *pulumi.OutputState }

func (HubspotSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubspotSourceResponse)(nil)).Elem()
}

func (o HubspotSourceResponseOutput) ToHubspotSourceResponseOutput() HubspotSourceResponseOutput {
	return o
}

func (o HubspotSourceResponseOutput) ToHubspotSourceResponseOutputWithContext(ctx context.Context) HubspotSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o HubspotSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o HubspotSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o HubspotSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v HubspotSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'HubspotSource'.
func (o HubspotSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HubspotSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// This activity evaluates a boolean expression and executes either the activities under the ifTrueActivities property or the ifFalseActivities property depending on the result of the expression.
type IfConditionActivity struct {
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// An expression that would evaluate to Boolean. This is used to determine the block of activities (ifTrueActivities or ifFalseActivities) that will be executed.
	Expression Expression `pulumi:"expression"`
	// List of activities to execute if expression is evaluated to false. This is an optional property and if not provided, the activity will exit without any action.
	IfFalseActivities []interface{} `pulumi:"ifFalseActivities"`
	// List of activities to execute if expression is evaluated to true. This is an optional property and if not provided, the activity will exit without any action.
	IfTrueActivities []interface{} `pulumi:"ifTrueActivities"`
	// Activity name.
	Name string `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type string `pulumi:"type"`
}

// IfConditionActivityInput is an input type that accepts IfConditionActivityArgs and IfConditionActivityOutput values.
// You can construct a concrete instance of `IfConditionActivityInput` via:
//
//          IfConditionActivityArgs{...}
type IfConditionActivityInput interface {
	pulumi.Input

	ToIfConditionActivityOutput() IfConditionActivityOutput
	ToIfConditionActivityOutputWithContext(context.Context) IfConditionActivityOutput
}

// This activity evaluates a boolean expression and executes either the activities under the ifTrueActivities property or the ifFalseActivities property depending on the result of the expression.
type IfConditionActivityArgs struct {
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// An expression that would evaluate to Boolean. This is used to determine the block of activities (ifTrueActivities or ifFalseActivities) that will be executed.
	Expression ExpressionInput `pulumi:"expression"`
	// List of activities to execute if expression is evaluated to false. This is an optional property and if not provided, the activity will exit without any action.
	IfFalseActivities pulumi.ArrayInput `pulumi:"ifFalseActivities"`
	// List of activities to execute if expression is evaluated to true. This is an optional property and if not provided, the activity will exit without any action.
	IfTrueActivities pulumi.ArrayInput `pulumi:"ifTrueActivities"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IfConditionActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IfConditionActivity)(nil)).Elem()
}

func (i IfConditionActivityArgs) ToIfConditionActivityOutput() IfConditionActivityOutput {
	return i.ToIfConditionActivityOutputWithContext(context.Background())
}

func (i IfConditionActivityArgs) ToIfConditionActivityOutputWithContext(ctx context.Context) IfConditionActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IfConditionActivityOutput)
}

// This activity evaluates a boolean expression and executes either the activities under the ifTrueActivities property or the ifFalseActivities property depending on the result of the expression.
type IfConditionActivityOutput struct{ *pulumi.OutputState }

func (IfConditionActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IfConditionActivity)(nil)).Elem()
}

func (o IfConditionActivityOutput) ToIfConditionActivityOutput() IfConditionActivityOutput {
	return o
}

func (o IfConditionActivityOutput) ToIfConditionActivityOutputWithContext(ctx context.Context) IfConditionActivityOutput {
	return o
}

// Activity depends on condition.
func (o IfConditionActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v IfConditionActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o IfConditionActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IfConditionActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// An expression that would evaluate to Boolean. This is used to determine the block of activities (ifTrueActivities or ifFalseActivities) that will be executed.
func (o IfConditionActivityOutput) Expression() ExpressionOutput {
	return o.ApplyT(func(v IfConditionActivity) Expression { return v.Expression }).(ExpressionOutput)
}

// List of activities to execute if expression is evaluated to false. This is an optional property and if not provided, the activity will exit without any action.
func (o IfConditionActivityOutput) IfFalseActivities() pulumi.ArrayOutput {
	return o.ApplyT(func(v IfConditionActivity) []interface{} { return v.IfFalseActivities }).(pulumi.ArrayOutput)
}

// List of activities to execute if expression is evaluated to true. This is an optional property and if not provided, the activity will exit without any action.
func (o IfConditionActivityOutput) IfTrueActivities() pulumi.ArrayOutput {
	return o.ApplyT(func(v IfConditionActivity) []interface{} { return v.IfTrueActivities }).(pulumi.ArrayOutput)
}

// Activity name.
func (o IfConditionActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IfConditionActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Type of activity.
// Expected value is 'Container'.
func (o IfConditionActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IfConditionActivity) string { return v.Type }).(pulumi.StringOutput)
}

// This activity evaluates a boolean expression and executes either the activities under the ifTrueActivities property or the ifFalseActivities property depending on the result of the expression.
type IfConditionActivityResponse struct {
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// An expression that would evaluate to Boolean. This is used to determine the block of activities (ifTrueActivities or ifFalseActivities) that will be executed.
	Expression ExpressionResponse `pulumi:"expression"`
	// List of activities to execute if expression is evaluated to false. This is an optional property and if not provided, the activity will exit without any action.
	IfFalseActivities []interface{} `pulumi:"ifFalseActivities"`
	// List of activities to execute if expression is evaluated to true. This is an optional property and if not provided, the activity will exit without any action.
	IfTrueActivities []interface{} `pulumi:"ifTrueActivities"`
	// Activity name.
	Name string `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type string `pulumi:"type"`
}

// IfConditionActivityResponseInput is an input type that accepts IfConditionActivityResponseArgs and IfConditionActivityResponseOutput values.
// You can construct a concrete instance of `IfConditionActivityResponseInput` via:
//
//          IfConditionActivityResponseArgs{...}
type IfConditionActivityResponseInput interface {
	pulumi.Input

	ToIfConditionActivityResponseOutput() IfConditionActivityResponseOutput
	ToIfConditionActivityResponseOutputWithContext(context.Context) IfConditionActivityResponseOutput
}

// This activity evaluates a boolean expression and executes either the activities under the ifTrueActivities property or the ifFalseActivities property depending on the result of the expression.
type IfConditionActivityResponseArgs struct {
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// An expression that would evaluate to Boolean. This is used to determine the block of activities (ifTrueActivities or ifFalseActivities) that will be executed.
	Expression ExpressionResponseInput `pulumi:"expression"`
	// List of activities to execute if expression is evaluated to false. This is an optional property and if not provided, the activity will exit without any action.
	IfFalseActivities pulumi.ArrayInput `pulumi:"ifFalseActivities"`
	// List of activities to execute if expression is evaluated to true. This is an optional property and if not provided, the activity will exit without any action.
	IfTrueActivities pulumi.ArrayInput `pulumi:"ifTrueActivities"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IfConditionActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IfConditionActivityResponse)(nil)).Elem()
}

func (i IfConditionActivityResponseArgs) ToIfConditionActivityResponseOutput() IfConditionActivityResponseOutput {
	return i.ToIfConditionActivityResponseOutputWithContext(context.Background())
}

func (i IfConditionActivityResponseArgs) ToIfConditionActivityResponseOutputWithContext(ctx context.Context) IfConditionActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IfConditionActivityResponseOutput)
}

// This activity evaluates a boolean expression and executes either the activities under the ifTrueActivities property or the ifFalseActivities property depending on the result of the expression.
type IfConditionActivityResponseOutput struct{ *pulumi.OutputState }

func (IfConditionActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IfConditionActivityResponse)(nil)).Elem()
}

func (o IfConditionActivityResponseOutput) ToIfConditionActivityResponseOutput() IfConditionActivityResponseOutput {
	return o
}

func (o IfConditionActivityResponseOutput) ToIfConditionActivityResponseOutputWithContext(ctx context.Context) IfConditionActivityResponseOutput {
	return o
}

// Activity depends on condition.
func (o IfConditionActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v IfConditionActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o IfConditionActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IfConditionActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// An expression that would evaluate to Boolean. This is used to determine the block of activities (ifTrueActivities or ifFalseActivities) that will be executed.
func (o IfConditionActivityResponseOutput) Expression() ExpressionResponseOutput {
	return o.ApplyT(func(v IfConditionActivityResponse) ExpressionResponse { return v.Expression }).(ExpressionResponseOutput)
}

// List of activities to execute if expression is evaluated to false. This is an optional property and if not provided, the activity will exit without any action.
func (o IfConditionActivityResponseOutput) IfFalseActivities() pulumi.ArrayOutput {
	return o.ApplyT(func(v IfConditionActivityResponse) []interface{} { return v.IfFalseActivities }).(pulumi.ArrayOutput)
}

// List of activities to execute if expression is evaluated to true. This is an optional property and if not provided, the activity will exit without any action.
func (o IfConditionActivityResponseOutput) IfTrueActivities() pulumi.ArrayOutput {
	return o.ApplyT(func(v IfConditionActivityResponse) []interface{} { return v.IfTrueActivities }).(pulumi.ArrayOutput)
}

// Activity name.
func (o IfConditionActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IfConditionActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Type of activity.
// Expected value is 'Container'.
func (o IfConditionActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IfConditionActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Impala server linked service.
type ImpalaLinkedService struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch interface{} `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert interface{} `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication type to use.
	AuthenticationType string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl interface{} `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The IP address or host name of the Impala server. (i.e. 192.168.222.160)
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The password corresponding to the user name when using UsernameAndPassword.
	Password interface{} `pulumi:"password"`
	// The TCP port that the Impala server uses to listen for client connections. The default value is 21050.
	Port interface{} `pulumi:"port"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath interface{} `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Impala'.
	Type string `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore interface{} `pulumi:"useSystemTrustStore"`
	// The user name used to access the Impala server. The default value is anonymous when using SASLUsername.
	Username interface{} `pulumi:"username"`
}

// ImpalaLinkedServiceInput is an input type that accepts ImpalaLinkedServiceArgs and ImpalaLinkedServiceOutput values.
// You can construct a concrete instance of `ImpalaLinkedServiceInput` via:
//
//          ImpalaLinkedServiceArgs{...}
type ImpalaLinkedServiceInput interface {
	pulumi.Input

	ToImpalaLinkedServiceOutput() ImpalaLinkedServiceOutput
	ToImpalaLinkedServiceOutputWithContext(context.Context) ImpalaLinkedServiceOutput
}

// Impala server linked service.
type ImpalaLinkedServiceArgs struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch pulumi.Input `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert pulumi.Input `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication type to use.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl pulumi.Input `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The IP address or host name of the Impala server. (i.e. 192.168.222.160)
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The password corresponding to the user name when using UsernameAndPassword.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port that the Impala server uses to listen for client connections. The default value is 21050.
	Port pulumi.Input `pulumi:"port"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath pulumi.Input `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Impala'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore pulumi.Input `pulumi:"useSystemTrustStore"`
	// The user name used to access the Impala server. The default value is anonymous when using SASLUsername.
	Username pulumi.Input `pulumi:"username"`
}

func (ImpalaLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImpalaLinkedService)(nil)).Elem()
}

func (i ImpalaLinkedServiceArgs) ToImpalaLinkedServiceOutput() ImpalaLinkedServiceOutput {
	return i.ToImpalaLinkedServiceOutputWithContext(context.Background())
}

func (i ImpalaLinkedServiceArgs) ToImpalaLinkedServiceOutputWithContext(ctx context.Context) ImpalaLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImpalaLinkedServiceOutput)
}

// Impala server linked service.
type ImpalaLinkedServiceOutput struct{ *pulumi.OutputState }

func (ImpalaLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImpalaLinkedService)(nil)).Elem()
}

func (o ImpalaLinkedServiceOutput) ToImpalaLinkedServiceOutput() ImpalaLinkedServiceOutput {
	return o
}

func (o ImpalaLinkedServiceOutput) ToImpalaLinkedServiceOutputWithContext(ctx context.Context) ImpalaLinkedServiceOutput {
	return o
}

// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
func (o ImpalaLinkedServiceOutput) AllowHostNameCNMismatch() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedService) interface{} { return v.AllowHostNameCNMismatch }).(pulumi.AnyOutput)
}

// Specifies whether to allow self-signed certificates from the server. The default value is false.
func (o ImpalaLinkedServiceOutput) AllowSelfSignedServerCert() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedService) interface{} { return v.AllowSelfSignedServerCert }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o ImpalaLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ImpalaLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication type to use.
func (o ImpalaLinkedServiceOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v ImpalaLinkedService) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The integration runtime reference.
func (o ImpalaLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v ImpalaLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o ImpalaLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImpalaLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
func (o ImpalaLinkedServiceOutput) EnableSsl() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedService) interface{} { return v.EnableSsl }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o ImpalaLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The IP address or host name of the Impala server. (i.e. 192.168.222.160)
func (o ImpalaLinkedServiceOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedService) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o ImpalaLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v ImpalaLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The password corresponding to the user name when using UsernameAndPassword.
func (o ImpalaLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port that the Impala server uses to listen for client connections. The default value is 21050.
func (o ImpalaLinkedServiceOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedService) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
func (o ImpalaLinkedServiceOutput) TrustedCertPath() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedService) interface{} { return v.TrustedCertPath }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Impala'.
func (o ImpalaLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ImpalaLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
func (o ImpalaLinkedServiceOutput) UseSystemTrustStore() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedService) interface{} { return v.UseSystemTrustStore }).(pulumi.AnyOutput)
}

// The user name used to access the Impala server. The default value is anonymous when using SASLUsername.
func (o ImpalaLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Impala server linked service.
type ImpalaLinkedServiceResponse struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch interface{} `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert interface{} `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication type to use.
	AuthenticationType string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl interface{} `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The IP address or host name of the Impala server. (i.e. 192.168.222.160)
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The password corresponding to the user name when using UsernameAndPassword.
	Password interface{} `pulumi:"password"`
	// The TCP port that the Impala server uses to listen for client connections. The default value is 21050.
	Port interface{} `pulumi:"port"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath interface{} `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Impala'.
	Type string `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore interface{} `pulumi:"useSystemTrustStore"`
	// The user name used to access the Impala server. The default value is anonymous when using SASLUsername.
	Username interface{} `pulumi:"username"`
}

// ImpalaLinkedServiceResponseInput is an input type that accepts ImpalaLinkedServiceResponseArgs and ImpalaLinkedServiceResponseOutput values.
// You can construct a concrete instance of `ImpalaLinkedServiceResponseInput` via:
//
//          ImpalaLinkedServiceResponseArgs{...}
type ImpalaLinkedServiceResponseInput interface {
	pulumi.Input

	ToImpalaLinkedServiceResponseOutput() ImpalaLinkedServiceResponseOutput
	ToImpalaLinkedServiceResponseOutputWithContext(context.Context) ImpalaLinkedServiceResponseOutput
}

// Impala server linked service.
type ImpalaLinkedServiceResponseArgs struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch pulumi.Input `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert pulumi.Input `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication type to use.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl pulumi.Input `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The IP address or host name of the Impala server. (i.e. 192.168.222.160)
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The password corresponding to the user name when using UsernameAndPassword.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port that the Impala server uses to listen for client connections. The default value is 21050.
	Port pulumi.Input `pulumi:"port"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath pulumi.Input `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Impala'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore pulumi.Input `pulumi:"useSystemTrustStore"`
	// The user name used to access the Impala server. The default value is anonymous when using SASLUsername.
	Username pulumi.Input `pulumi:"username"`
}

func (ImpalaLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImpalaLinkedServiceResponse)(nil)).Elem()
}

func (i ImpalaLinkedServiceResponseArgs) ToImpalaLinkedServiceResponseOutput() ImpalaLinkedServiceResponseOutput {
	return i.ToImpalaLinkedServiceResponseOutputWithContext(context.Background())
}

func (i ImpalaLinkedServiceResponseArgs) ToImpalaLinkedServiceResponseOutputWithContext(ctx context.Context) ImpalaLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImpalaLinkedServiceResponseOutput)
}

// Impala server linked service.
type ImpalaLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (ImpalaLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImpalaLinkedServiceResponse)(nil)).Elem()
}

func (o ImpalaLinkedServiceResponseOutput) ToImpalaLinkedServiceResponseOutput() ImpalaLinkedServiceResponseOutput {
	return o
}

func (o ImpalaLinkedServiceResponseOutput) ToImpalaLinkedServiceResponseOutputWithContext(ctx context.Context) ImpalaLinkedServiceResponseOutput {
	return o
}

// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
func (o ImpalaLinkedServiceResponseOutput) AllowHostNameCNMismatch() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedServiceResponse) interface{} { return v.AllowHostNameCNMismatch }).(pulumi.AnyOutput)
}

// Specifies whether to allow self-signed certificates from the server. The default value is false.
func (o ImpalaLinkedServiceResponseOutput) AllowSelfSignedServerCert() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedServiceResponse) interface{} { return v.AllowSelfSignedServerCert }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o ImpalaLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ImpalaLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication type to use.
func (o ImpalaLinkedServiceResponseOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v ImpalaLinkedServiceResponse) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The integration runtime reference.
func (o ImpalaLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v ImpalaLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o ImpalaLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImpalaLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
func (o ImpalaLinkedServiceResponseOutput) EnableSsl() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedServiceResponse) interface{} { return v.EnableSsl }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o ImpalaLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The IP address or host name of the Impala server. (i.e. 192.168.222.160)
func (o ImpalaLinkedServiceResponseOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedServiceResponse) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o ImpalaLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v ImpalaLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The password corresponding to the user name when using UsernameAndPassword.
func (o ImpalaLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port that the Impala server uses to listen for client connections. The default value is 21050.
func (o ImpalaLinkedServiceResponseOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedServiceResponse) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
func (o ImpalaLinkedServiceResponseOutput) TrustedCertPath() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedServiceResponse) interface{} { return v.TrustedCertPath }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Impala'.
func (o ImpalaLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ImpalaLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
func (o ImpalaLinkedServiceResponseOutput) UseSystemTrustStore() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedServiceResponse) interface{} { return v.UseSystemTrustStore }).(pulumi.AnyOutput)
}

// The user name used to access the Impala server. The default value is anonymous when using SASLUsername.
func (o ImpalaLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Impala server dataset.
type ImpalaObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ImpalaObject'.
	Type string `pulumi:"type"`
}

// ImpalaObjectDatasetInput is an input type that accepts ImpalaObjectDatasetArgs and ImpalaObjectDatasetOutput values.
// You can construct a concrete instance of `ImpalaObjectDatasetInput` via:
//
//          ImpalaObjectDatasetArgs{...}
type ImpalaObjectDatasetInput interface {
	pulumi.Input

	ToImpalaObjectDatasetOutput() ImpalaObjectDatasetOutput
	ToImpalaObjectDatasetOutputWithContext(context.Context) ImpalaObjectDatasetOutput
}

// Impala server dataset.
type ImpalaObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ImpalaObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ImpalaObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImpalaObjectDataset)(nil)).Elem()
}

func (i ImpalaObjectDatasetArgs) ToImpalaObjectDatasetOutput() ImpalaObjectDatasetOutput {
	return i.ToImpalaObjectDatasetOutputWithContext(context.Background())
}

func (i ImpalaObjectDatasetArgs) ToImpalaObjectDatasetOutputWithContext(ctx context.Context) ImpalaObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImpalaObjectDatasetOutput)
}

// Impala server dataset.
type ImpalaObjectDatasetOutput struct{ *pulumi.OutputState }

func (ImpalaObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImpalaObjectDataset)(nil)).Elem()
}

func (o ImpalaObjectDatasetOutput) ToImpalaObjectDatasetOutput() ImpalaObjectDatasetOutput {
	return o
}

func (o ImpalaObjectDatasetOutput) ToImpalaObjectDatasetOutputWithContext(ctx context.Context) ImpalaObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ImpalaObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ImpalaObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o ImpalaObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImpalaObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o ImpalaObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v ImpalaObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o ImpalaObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v ImpalaObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o ImpalaObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'ImpalaObject'.
func (o ImpalaObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ImpalaObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Impala server dataset.
type ImpalaObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ImpalaObject'.
	Type string `pulumi:"type"`
}

// ImpalaObjectDatasetResponseInput is an input type that accepts ImpalaObjectDatasetResponseArgs and ImpalaObjectDatasetResponseOutput values.
// You can construct a concrete instance of `ImpalaObjectDatasetResponseInput` via:
//
//          ImpalaObjectDatasetResponseArgs{...}
type ImpalaObjectDatasetResponseInput interface {
	pulumi.Input

	ToImpalaObjectDatasetResponseOutput() ImpalaObjectDatasetResponseOutput
	ToImpalaObjectDatasetResponseOutputWithContext(context.Context) ImpalaObjectDatasetResponseOutput
}

// Impala server dataset.
type ImpalaObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ImpalaObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ImpalaObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImpalaObjectDatasetResponse)(nil)).Elem()
}

func (i ImpalaObjectDatasetResponseArgs) ToImpalaObjectDatasetResponseOutput() ImpalaObjectDatasetResponseOutput {
	return i.ToImpalaObjectDatasetResponseOutputWithContext(context.Background())
}

func (i ImpalaObjectDatasetResponseArgs) ToImpalaObjectDatasetResponseOutputWithContext(ctx context.Context) ImpalaObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImpalaObjectDatasetResponseOutput)
}

// Impala server dataset.
type ImpalaObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (ImpalaObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImpalaObjectDatasetResponse)(nil)).Elem()
}

func (o ImpalaObjectDatasetResponseOutput) ToImpalaObjectDatasetResponseOutput() ImpalaObjectDatasetResponseOutput {
	return o
}

func (o ImpalaObjectDatasetResponseOutput) ToImpalaObjectDatasetResponseOutputWithContext(ctx context.Context) ImpalaObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ImpalaObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ImpalaObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o ImpalaObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImpalaObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o ImpalaObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v ImpalaObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o ImpalaObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v ImpalaObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o ImpalaObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'ImpalaObject'.
func (o ImpalaObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ImpalaObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Impala server source.
type ImpalaSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ImpalaSource'.
	Type string `pulumi:"type"`
}

// ImpalaSourceInput is an input type that accepts ImpalaSourceArgs and ImpalaSourceOutput values.
// You can construct a concrete instance of `ImpalaSourceInput` via:
//
//          ImpalaSourceArgs{...}
type ImpalaSourceInput interface {
	pulumi.Input

	ToImpalaSourceOutput() ImpalaSourceOutput
	ToImpalaSourceOutputWithContext(context.Context) ImpalaSourceOutput
}

// A copy activity Impala server source.
type ImpalaSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ImpalaSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ImpalaSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImpalaSource)(nil)).Elem()
}

func (i ImpalaSourceArgs) ToImpalaSourceOutput() ImpalaSourceOutput {
	return i.ToImpalaSourceOutputWithContext(context.Background())
}

func (i ImpalaSourceArgs) ToImpalaSourceOutputWithContext(ctx context.Context) ImpalaSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImpalaSourceOutput)
}

// A copy activity Impala server source.
type ImpalaSourceOutput struct{ *pulumi.OutputState }

func (ImpalaSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImpalaSource)(nil)).Elem()
}

func (o ImpalaSourceOutput) ToImpalaSourceOutput() ImpalaSourceOutput {
	return o
}

func (o ImpalaSourceOutput) ToImpalaSourceOutputWithContext(ctx context.Context) ImpalaSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o ImpalaSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o ImpalaSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o ImpalaSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'ImpalaSource'.
func (o ImpalaSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ImpalaSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Impala server source.
type ImpalaSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ImpalaSource'.
	Type string `pulumi:"type"`
}

// ImpalaSourceResponseInput is an input type that accepts ImpalaSourceResponseArgs and ImpalaSourceResponseOutput values.
// You can construct a concrete instance of `ImpalaSourceResponseInput` via:
//
//          ImpalaSourceResponseArgs{...}
type ImpalaSourceResponseInput interface {
	pulumi.Input

	ToImpalaSourceResponseOutput() ImpalaSourceResponseOutput
	ToImpalaSourceResponseOutputWithContext(context.Context) ImpalaSourceResponseOutput
}

// A copy activity Impala server source.
type ImpalaSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ImpalaSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ImpalaSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImpalaSourceResponse)(nil)).Elem()
}

func (i ImpalaSourceResponseArgs) ToImpalaSourceResponseOutput() ImpalaSourceResponseOutput {
	return i.ToImpalaSourceResponseOutputWithContext(context.Background())
}

func (i ImpalaSourceResponseArgs) ToImpalaSourceResponseOutputWithContext(ctx context.Context) ImpalaSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImpalaSourceResponseOutput)
}

// A copy activity Impala server source.
type ImpalaSourceResponseOutput struct{ *pulumi.OutputState }

func (ImpalaSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImpalaSourceResponse)(nil)).Elem()
}

func (o ImpalaSourceResponseOutput) ToImpalaSourceResponseOutput() ImpalaSourceResponseOutput {
	return o
}

func (o ImpalaSourceResponseOutput) ToImpalaSourceResponseOutputWithContext(ctx context.Context) ImpalaSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o ImpalaSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o ImpalaSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o ImpalaSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v ImpalaSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'ImpalaSource'.
func (o ImpalaSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ImpalaSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The compute resource properties for managed integration runtime.
type IntegrationRuntimeComputeProperties struct {
	// The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
	Location *string `pulumi:"location"`
	// Maximum parallel executions count per node for managed integration runtime.
	MaxParallelExecutionsPerNode *int `pulumi:"maxParallelExecutionsPerNode"`
	// The node size requirement to managed integration runtime.
	NodeSize *string `pulumi:"nodeSize"`
	// The required number of nodes for managed integration runtime.
	NumberOfNodes *int `pulumi:"numberOfNodes"`
	// VNet properties for managed integration runtime.
	VNetProperties *IntegrationRuntimeVNetProperties `pulumi:"vNetProperties"`
}

// IntegrationRuntimeComputePropertiesInput is an input type that accepts IntegrationRuntimeComputePropertiesArgs and IntegrationRuntimeComputePropertiesOutput values.
// You can construct a concrete instance of `IntegrationRuntimeComputePropertiesInput` via:
//
//          IntegrationRuntimeComputePropertiesArgs{...}
type IntegrationRuntimeComputePropertiesInput interface {
	pulumi.Input

	ToIntegrationRuntimeComputePropertiesOutput() IntegrationRuntimeComputePropertiesOutput
	ToIntegrationRuntimeComputePropertiesOutputWithContext(context.Context) IntegrationRuntimeComputePropertiesOutput
}

// The compute resource properties for managed integration runtime.
type IntegrationRuntimeComputePropertiesArgs struct {
	// The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Maximum parallel executions count per node for managed integration runtime.
	MaxParallelExecutionsPerNode pulumi.IntPtrInput `pulumi:"maxParallelExecutionsPerNode"`
	// The node size requirement to managed integration runtime.
	NodeSize pulumi.StringPtrInput `pulumi:"nodeSize"`
	// The required number of nodes for managed integration runtime.
	NumberOfNodes pulumi.IntPtrInput `pulumi:"numberOfNodes"`
	// VNet properties for managed integration runtime.
	VNetProperties IntegrationRuntimeVNetPropertiesPtrInput `pulumi:"vNetProperties"`
}

func (IntegrationRuntimeComputePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeComputeProperties)(nil)).Elem()
}

func (i IntegrationRuntimeComputePropertiesArgs) ToIntegrationRuntimeComputePropertiesOutput() IntegrationRuntimeComputePropertiesOutput {
	return i.ToIntegrationRuntimeComputePropertiesOutputWithContext(context.Background())
}

func (i IntegrationRuntimeComputePropertiesArgs) ToIntegrationRuntimeComputePropertiesOutputWithContext(ctx context.Context) IntegrationRuntimeComputePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeComputePropertiesOutput)
}

func (i IntegrationRuntimeComputePropertiesArgs) ToIntegrationRuntimeComputePropertiesPtrOutput() IntegrationRuntimeComputePropertiesPtrOutput {
	return i.ToIntegrationRuntimeComputePropertiesPtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeComputePropertiesArgs) ToIntegrationRuntimeComputePropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeComputePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeComputePropertiesOutput).ToIntegrationRuntimeComputePropertiesPtrOutputWithContext(ctx)
}

// IntegrationRuntimeComputePropertiesPtrInput is an input type that accepts IntegrationRuntimeComputePropertiesArgs, IntegrationRuntimeComputePropertiesPtr and IntegrationRuntimeComputePropertiesPtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeComputePropertiesPtrInput` via:
//
//          IntegrationRuntimeComputePropertiesArgs{...}
//
//  or:
//
//          nil
type IntegrationRuntimeComputePropertiesPtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeComputePropertiesPtrOutput() IntegrationRuntimeComputePropertiesPtrOutput
	ToIntegrationRuntimeComputePropertiesPtrOutputWithContext(context.Context) IntegrationRuntimeComputePropertiesPtrOutput
}

type integrationRuntimeComputePropertiesPtrType IntegrationRuntimeComputePropertiesArgs

func IntegrationRuntimeComputePropertiesPtr(v *IntegrationRuntimeComputePropertiesArgs) IntegrationRuntimeComputePropertiesPtrInput {
	return (*integrationRuntimeComputePropertiesPtrType)(v)
}

func (*integrationRuntimeComputePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeComputeProperties)(nil)).Elem()
}

func (i *integrationRuntimeComputePropertiesPtrType) ToIntegrationRuntimeComputePropertiesPtrOutput() IntegrationRuntimeComputePropertiesPtrOutput {
	return i.ToIntegrationRuntimeComputePropertiesPtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeComputePropertiesPtrType) ToIntegrationRuntimeComputePropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeComputePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeComputePropertiesPtrOutput)
}

// The compute resource properties for managed integration runtime.
type IntegrationRuntimeComputePropertiesOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeComputePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeComputeProperties)(nil)).Elem()
}

func (o IntegrationRuntimeComputePropertiesOutput) ToIntegrationRuntimeComputePropertiesOutput() IntegrationRuntimeComputePropertiesOutput {
	return o
}

func (o IntegrationRuntimeComputePropertiesOutput) ToIntegrationRuntimeComputePropertiesOutputWithContext(ctx context.Context) IntegrationRuntimeComputePropertiesOutput {
	return o
}

func (o IntegrationRuntimeComputePropertiesOutput) ToIntegrationRuntimeComputePropertiesPtrOutput() IntegrationRuntimeComputePropertiesPtrOutput {
	return o.ToIntegrationRuntimeComputePropertiesPtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeComputePropertiesOutput) ToIntegrationRuntimeComputePropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeComputePropertiesPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeComputeProperties) *IntegrationRuntimeComputeProperties {
		return &v
	}).(IntegrationRuntimeComputePropertiesPtrOutput)
}

// The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
func (o IntegrationRuntimeComputePropertiesOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeComputeProperties) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Maximum parallel executions count per node for managed integration runtime.
func (o IntegrationRuntimeComputePropertiesOutput) MaxParallelExecutionsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeComputeProperties) *int { return v.MaxParallelExecutionsPerNode }).(pulumi.IntPtrOutput)
}

// The node size requirement to managed integration runtime.
func (o IntegrationRuntimeComputePropertiesOutput) NodeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeComputeProperties) *string { return v.NodeSize }).(pulumi.StringPtrOutput)
}

// The required number of nodes for managed integration runtime.
func (o IntegrationRuntimeComputePropertiesOutput) NumberOfNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeComputeProperties) *int { return v.NumberOfNodes }).(pulumi.IntPtrOutput)
}

// VNet properties for managed integration runtime.
func (o IntegrationRuntimeComputePropertiesOutput) VNetProperties() IntegrationRuntimeVNetPropertiesPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeComputeProperties) *IntegrationRuntimeVNetProperties { return v.VNetProperties }).(IntegrationRuntimeVNetPropertiesPtrOutput)
}

type IntegrationRuntimeComputePropertiesPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeComputePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeComputeProperties)(nil)).Elem()
}

func (o IntegrationRuntimeComputePropertiesPtrOutput) ToIntegrationRuntimeComputePropertiesPtrOutput() IntegrationRuntimeComputePropertiesPtrOutput {
	return o
}

func (o IntegrationRuntimeComputePropertiesPtrOutput) ToIntegrationRuntimeComputePropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeComputePropertiesPtrOutput {
	return o
}

func (o IntegrationRuntimeComputePropertiesPtrOutput) Elem() IntegrationRuntimeComputePropertiesOutput {
	return o.ApplyT(func(v *IntegrationRuntimeComputeProperties) IntegrationRuntimeComputeProperties { return *v }).(IntegrationRuntimeComputePropertiesOutput)
}

// The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
func (o IntegrationRuntimeComputePropertiesPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeComputeProperties) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Maximum parallel executions count per node for managed integration runtime.
func (o IntegrationRuntimeComputePropertiesPtrOutput) MaxParallelExecutionsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeComputeProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxParallelExecutionsPerNode
	}).(pulumi.IntPtrOutput)
}

// The node size requirement to managed integration runtime.
func (o IntegrationRuntimeComputePropertiesPtrOutput) NodeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeComputeProperties) *string {
		if v == nil {
			return nil
		}
		return v.NodeSize
	}).(pulumi.StringPtrOutput)
}

// The required number of nodes for managed integration runtime.
func (o IntegrationRuntimeComputePropertiesPtrOutput) NumberOfNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeComputeProperties) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfNodes
	}).(pulumi.IntPtrOutput)
}

// VNet properties for managed integration runtime.
func (o IntegrationRuntimeComputePropertiesPtrOutput) VNetProperties() IntegrationRuntimeVNetPropertiesPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeComputeProperties) *IntegrationRuntimeVNetProperties {
		if v == nil {
			return nil
		}
		return v.VNetProperties
	}).(IntegrationRuntimeVNetPropertiesPtrOutput)
}

// The compute resource properties for managed integration runtime.
type IntegrationRuntimeComputePropertiesResponse struct {
	// The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
	Location *string `pulumi:"location"`
	// Maximum parallel executions count per node for managed integration runtime.
	MaxParallelExecutionsPerNode *int `pulumi:"maxParallelExecutionsPerNode"`
	// The node size requirement to managed integration runtime.
	NodeSize *string `pulumi:"nodeSize"`
	// The required number of nodes for managed integration runtime.
	NumberOfNodes *int `pulumi:"numberOfNodes"`
	// VNet properties for managed integration runtime.
	VNetProperties *IntegrationRuntimeVNetPropertiesResponse `pulumi:"vNetProperties"`
}

// IntegrationRuntimeComputePropertiesResponseInput is an input type that accepts IntegrationRuntimeComputePropertiesResponseArgs and IntegrationRuntimeComputePropertiesResponseOutput values.
// You can construct a concrete instance of `IntegrationRuntimeComputePropertiesResponseInput` via:
//
//          IntegrationRuntimeComputePropertiesResponseArgs{...}
type IntegrationRuntimeComputePropertiesResponseInput interface {
	pulumi.Input

	ToIntegrationRuntimeComputePropertiesResponseOutput() IntegrationRuntimeComputePropertiesResponseOutput
	ToIntegrationRuntimeComputePropertiesResponseOutputWithContext(context.Context) IntegrationRuntimeComputePropertiesResponseOutput
}

// The compute resource properties for managed integration runtime.
type IntegrationRuntimeComputePropertiesResponseArgs struct {
	// The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Maximum parallel executions count per node for managed integration runtime.
	MaxParallelExecutionsPerNode pulumi.IntPtrInput `pulumi:"maxParallelExecutionsPerNode"`
	// The node size requirement to managed integration runtime.
	NodeSize pulumi.StringPtrInput `pulumi:"nodeSize"`
	// The required number of nodes for managed integration runtime.
	NumberOfNodes pulumi.IntPtrInput `pulumi:"numberOfNodes"`
	// VNet properties for managed integration runtime.
	VNetProperties IntegrationRuntimeVNetPropertiesResponsePtrInput `pulumi:"vNetProperties"`
}

func (IntegrationRuntimeComputePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeComputePropertiesResponse)(nil)).Elem()
}

func (i IntegrationRuntimeComputePropertiesResponseArgs) ToIntegrationRuntimeComputePropertiesResponseOutput() IntegrationRuntimeComputePropertiesResponseOutput {
	return i.ToIntegrationRuntimeComputePropertiesResponseOutputWithContext(context.Background())
}

func (i IntegrationRuntimeComputePropertiesResponseArgs) ToIntegrationRuntimeComputePropertiesResponseOutputWithContext(ctx context.Context) IntegrationRuntimeComputePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeComputePropertiesResponseOutput)
}

func (i IntegrationRuntimeComputePropertiesResponseArgs) ToIntegrationRuntimeComputePropertiesResponsePtrOutput() IntegrationRuntimeComputePropertiesResponsePtrOutput {
	return i.ToIntegrationRuntimeComputePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeComputePropertiesResponseArgs) ToIntegrationRuntimeComputePropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeComputePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeComputePropertiesResponseOutput).ToIntegrationRuntimeComputePropertiesResponsePtrOutputWithContext(ctx)
}

// IntegrationRuntimeComputePropertiesResponsePtrInput is an input type that accepts IntegrationRuntimeComputePropertiesResponseArgs, IntegrationRuntimeComputePropertiesResponsePtr and IntegrationRuntimeComputePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeComputePropertiesResponsePtrInput` via:
//
//          IntegrationRuntimeComputePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type IntegrationRuntimeComputePropertiesResponsePtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeComputePropertiesResponsePtrOutput() IntegrationRuntimeComputePropertiesResponsePtrOutput
	ToIntegrationRuntimeComputePropertiesResponsePtrOutputWithContext(context.Context) IntegrationRuntimeComputePropertiesResponsePtrOutput
}

type integrationRuntimeComputePropertiesResponsePtrType IntegrationRuntimeComputePropertiesResponseArgs

func IntegrationRuntimeComputePropertiesResponsePtr(v *IntegrationRuntimeComputePropertiesResponseArgs) IntegrationRuntimeComputePropertiesResponsePtrInput {
	return (*integrationRuntimeComputePropertiesResponsePtrType)(v)
}

func (*integrationRuntimeComputePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeComputePropertiesResponse)(nil)).Elem()
}

func (i *integrationRuntimeComputePropertiesResponsePtrType) ToIntegrationRuntimeComputePropertiesResponsePtrOutput() IntegrationRuntimeComputePropertiesResponsePtrOutput {
	return i.ToIntegrationRuntimeComputePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeComputePropertiesResponsePtrType) ToIntegrationRuntimeComputePropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeComputePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeComputePropertiesResponsePtrOutput)
}

// The compute resource properties for managed integration runtime.
type IntegrationRuntimeComputePropertiesResponseOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeComputePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeComputePropertiesResponse)(nil)).Elem()
}

func (o IntegrationRuntimeComputePropertiesResponseOutput) ToIntegrationRuntimeComputePropertiesResponseOutput() IntegrationRuntimeComputePropertiesResponseOutput {
	return o
}

func (o IntegrationRuntimeComputePropertiesResponseOutput) ToIntegrationRuntimeComputePropertiesResponseOutputWithContext(ctx context.Context) IntegrationRuntimeComputePropertiesResponseOutput {
	return o
}

func (o IntegrationRuntimeComputePropertiesResponseOutput) ToIntegrationRuntimeComputePropertiesResponsePtrOutput() IntegrationRuntimeComputePropertiesResponsePtrOutput {
	return o.ToIntegrationRuntimeComputePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeComputePropertiesResponseOutput) ToIntegrationRuntimeComputePropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeComputePropertiesResponsePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeComputePropertiesResponse) *IntegrationRuntimeComputePropertiesResponse {
		return &v
	}).(IntegrationRuntimeComputePropertiesResponsePtrOutput)
}

// The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
func (o IntegrationRuntimeComputePropertiesResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeComputePropertiesResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Maximum parallel executions count per node for managed integration runtime.
func (o IntegrationRuntimeComputePropertiesResponseOutput) MaxParallelExecutionsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeComputePropertiesResponse) *int { return v.MaxParallelExecutionsPerNode }).(pulumi.IntPtrOutput)
}

// The node size requirement to managed integration runtime.
func (o IntegrationRuntimeComputePropertiesResponseOutput) NodeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeComputePropertiesResponse) *string { return v.NodeSize }).(pulumi.StringPtrOutput)
}

// The required number of nodes for managed integration runtime.
func (o IntegrationRuntimeComputePropertiesResponseOutput) NumberOfNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeComputePropertiesResponse) *int { return v.NumberOfNodes }).(pulumi.IntPtrOutput)
}

// VNet properties for managed integration runtime.
func (o IntegrationRuntimeComputePropertiesResponseOutput) VNetProperties() IntegrationRuntimeVNetPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeComputePropertiesResponse) *IntegrationRuntimeVNetPropertiesResponse {
		return v.VNetProperties
	}).(IntegrationRuntimeVNetPropertiesResponsePtrOutput)
}

type IntegrationRuntimeComputePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeComputePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeComputePropertiesResponse)(nil)).Elem()
}

func (o IntegrationRuntimeComputePropertiesResponsePtrOutput) ToIntegrationRuntimeComputePropertiesResponsePtrOutput() IntegrationRuntimeComputePropertiesResponsePtrOutput {
	return o
}

func (o IntegrationRuntimeComputePropertiesResponsePtrOutput) ToIntegrationRuntimeComputePropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeComputePropertiesResponsePtrOutput {
	return o
}

func (o IntegrationRuntimeComputePropertiesResponsePtrOutput) Elem() IntegrationRuntimeComputePropertiesResponseOutput {
	return o.ApplyT(func(v *IntegrationRuntimeComputePropertiesResponse) IntegrationRuntimeComputePropertiesResponse {
		return *v
	}).(IntegrationRuntimeComputePropertiesResponseOutput)
}

// The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
func (o IntegrationRuntimeComputePropertiesResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeComputePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Maximum parallel executions count per node for managed integration runtime.
func (o IntegrationRuntimeComputePropertiesResponsePtrOutput) MaxParallelExecutionsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeComputePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxParallelExecutionsPerNode
	}).(pulumi.IntPtrOutput)
}

// The node size requirement to managed integration runtime.
func (o IntegrationRuntimeComputePropertiesResponsePtrOutput) NodeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeComputePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.NodeSize
	}).(pulumi.StringPtrOutput)
}

// The required number of nodes for managed integration runtime.
func (o IntegrationRuntimeComputePropertiesResponsePtrOutput) NumberOfNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeComputePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfNodes
	}).(pulumi.IntPtrOutput)
}

// VNet properties for managed integration runtime.
func (o IntegrationRuntimeComputePropertiesResponsePtrOutput) VNetProperties() IntegrationRuntimeVNetPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeComputePropertiesResponse) *IntegrationRuntimeVNetPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.VNetProperties
	}).(IntegrationRuntimeVNetPropertiesResponsePtrOutput)
}

// Custom setup script properties for a managed dedicated integration runtime.
type IntegrationRuntimeCustomSetupScriptProperties struct {
	// The URI of the Azure blob container that contains the custom setup script.
	BlobContainerUri *string `pulumi:"blobContainerUri"`
	// The SAS token of the Azure blob container.
	SasToken *SecureString `pulumi:"sasToken"`
}

// IntegrationRuntimeCustomSetupScriptPropertiesInput is an input type that accepts IntegrationRuntimeCustomSetupScriptPropertiesArgs and IntegrationRuntimeCustomSetupScriptPropertiesOutput values.
// You can construct a concrete instance of `IntegrationRuntimeCustomSetupScriptPropertiesInput` via:
//
//          IntegrationRuntimeCustomSetupScriptPropertiesArgs{...}
type IntegrationRuntimeCustomSetupScriptPropertiesInput interface {
	pulumi.Input

	ToIntegrationRuntimeCustomSetupScriptPropertiesOutput() IntegrationRuntimeCustomSetupScriptPropertiesOutput
	ToIntegrationRuntimeCustomSetupScriptPropertiesOutputWithContext(context.Context) IntegrationRuntimeCustomSetupScriptPropertiesOutput
}

// Custom setup script properties for a managed dedicated integration runtime.
type IntegrationRuntimeCustomSetupScriptPropertiesArgs struct {
	// The URI of the Azure blob container that contains the custom setup script.
	BlobContainerUri pulumi.StringPtrInput `pulumi:"blobContainerUri"`
	// The SAS token of the Azure blob container.
	SasToken SecureStringPtrInput `pulumi:"sasToken"`
}

func (IntegrationRuntimeCustomSetupScriptPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeCustomSetupScriptProperties)(nil)).Elem()
}

func (i IntegrationRuntimeCustomSetupScriptPropertiesArgs) ToIntegrationRuntimeCustomSetupScriptPropertiesOutput() IntegrationRuntimeCustomSetupScriptPropertiesOutput {
	return i.ToIntegrationRuntimeCustomSetupScriptPropertiesOutputWithContext(context.Background())
}

func (i IntegrationRuntimeCustomSetupScriptPropertiesArgs) ToIntegrationRuntimeCustomSetupScriptPropertiesOutputWithContext(ctx context.Context) IntegrationRuntimeCustomSetupScriptPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeCustomSetupScriptPropertiesOutput)
}

func (i IntegrationRuntimeCustomSetupScriptPropertiesArgs) ToIntegrationRuntimeCustomSetupScriptPropertiesPtrOutput() IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput {
	return i.ToIntegrationRuntimeCustomSetupScriptPropertiesPtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeCustomSetupScriptPropertiesArgs) ToIntegrationRuntimeCustomSetupScriptPropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeCustomSetupScriptPropertiesOutput).ToIntegrationRuntimeCustomSetupScriptPropertiesPtrOutputWithContext(ctx)
}

// IntegrationRuntimeCustomSetupScriptPropertiesPtrInput is an input type that accepts IntegrationRuntimeCustomSetupScriptPropertiesArgs, IntegrationRuntimeCustomSetupScriptPropertiesPtr and IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeCustomSetupScriptPropertiesPtrInput` via:
//
//          IntegrationRuntimeCustomSetupScriptPropertiesArgs{...}
//
//  or:
//
//          nil
type IntegrationRuntimeCustomSetupScriptPropertiesPtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeCustomSetupScriptPropertiesPtrOutput() IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput
	ToIntegrationRuntimeCustomSetupScriptPropertiesPtrOutputWithContext(context.Context) IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput
}

type integrationRuntimeCustomSetupScriptPropertiesPtrType IntegrationRuntimeCustomSetupScriptPropertiesArgs

func IntegrationRuntimeCustomSetupScriptPropertiesPtr(v *IntegrationRuntimeCustomSetupScriptPropertiesArgs) IntegrationRuntimeCustomSetupScriptPropertiesPtrInput {
	return (*integrationRuntimeCustomSetupScriptPropertiesPtrType)(v)
}

func (*integrationRuntimeCustomSetupScriptPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeCustomSetupScriptProperties)(nil)).Elem()
}

func (i *integrationRuntimeCustomSetupScriptPropertiesPtrType) ToIntegrationRuntimeCustomSetupScriptPropertiesPtrOutput() IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput {
	return i.ToIntegrationRuntimeCustomSetupScriptPropertiesPtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeCustomSetupScriptPropertiesPtrType) ToIntegrationRuntimeCustomSetupScriptPropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput)
}

// Custom setup script properties for a managed dedicated integration runtime.
type IntegrationRuntimeCustomSetupScriptPropertiesOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeCustomSetupScriptPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeCustomSetupScriptProperties)(nil)).Elem()
}

func (o IntegrationRuntimeCustomSetupScriptPropertiesOutput) ToIntegrationRuntimeCustomSetupScriptPropertiesOutput() IntegrationRuntimeCustomSetupScriptPropertiesOutput {
	return o
}

func (o IntegrationRuntimeCustomSetupScriptPropertiesOutput) ToIntegrationRuntimeCustomSetupScriptPropertiesOutputWithContext(ctx context.Context) IntegrationRuntimeCustomSetupScriptPropertiesOutput {
	return o
}

func (o IntegrationRuntimeCustomSetupScriptPropertiesOutput) ToIntegrationRuntimeCustomSetupScriptPropertiesPtrOutput() IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput {
	return o.ToIntegrationRuntimeCustomSetupScriptPropertiesPtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeCustomSetupScriptPropertiesOutput) ToIntegrationRuntimeCustomSetupScriptPropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeCustomSetupScriptProperties) *IntegrationRuntimeCustomSetupScriptProperties {
		return &v
	}).(IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput)
}

// The URI of the Azure blob container that contains the custom setup script.
func (o IntegrationRuntimeCustomSetupScriptPropertiesOutput) BlobContainerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeCustomSetupScriptProperties) *string { return v.BlobContainerUri }).(pulumi.StringPtrOutput)
}

// The SAS token of the Azure blob container.
func (o IntegrationRuntimeCustomSetupScriptPropertiesOutput) SasToken() SecureStringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeCustomSetupScriptProperties) *SecureString { return v.SasToken }).(SecureStringPtrOutput)
}

type IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeCustomSetupScriptProperties)(nil)).Elem()
}

func (o IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput) ToIntegrationRuntimeCustomSetupScriptPropertiesPtrOutput() IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput {
	return o
}

func (o IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput) ToIntegrationRuntimeCustomSetupScriptPropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput {
	return o
}

func (o IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput) Elem() IntegrationRuntimeCustomSetupScriptPropertiesOutput {
	return o.ApplyT(func(v *IntegrationRuntimeCustomSetupScriptProperties) IntegrationRuntimeCustomSetupScriptProperties {
		return *v
	}).(IntegrationRuntimeCustomSetupScriptPropertiesOutput)
}

// The URI of the Azure blob container that contains the custom setup script.
func (o IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput) BlobContainerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeCustomSetupScriptProperties) *string {
		if v == nil {
			return nil
		}
		return v.BlobContainerUri
	}).(pulumi.StringPtrOutput)
}

// The SAS token of the Azure blob container.
func (o IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput) SasToken() SecureStringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeCustomSetupScriptProperties) *SecureString {
		if v == nil {
			return nil
		}
		return v.SasToken
	}).(SecureStringPtrOutput)
}

// Custom setup script properties for a managed dedicated integration runtime.
type IntegrationRuntimeCustomSetupScriptPropertiesResponse struct {
	// The URI of the Azure blob container that contains the custom setup script.
	BlobContainerUri *string `pulumi:"blobContainerUri"`
	// The SAS token of the Azure blob container.
	SasToken *SecureStringResponse `pulumi:"sasToken"`
}

// IntegrationRuntimeCustomSetupScriptPropertiesResponseInput is an input type that accepts IntegrationRuntimeCustomSetupScriptPropertiesResponseArgs and IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput values.
// You can construct a concrete instance of `IntegrationRuntimeCustomSetupScriptPropertiesResponseInput` via:
//
//          IntegrationRuntimeCustomSetupScriptPropertiesResponseArgs{...}
type IntegrationRuntimeCustomSetupScriptPropertiesResponseInput interface {
	pulumi.Input

	ToIntegrationRuntimeCustomSetupScriptPropertiesResponseOutput() IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput
	ToIntegrationRuntimeCustomSetupScriptPropertiesResponseOutputWithContext(context.Context) IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput
}

// Custom setup script properties for a managed dedicated integration runtime.
type IntegrationRuntimeCustomSetupScriptPropertiesResponseArgs struct {
	// The URI of the Azure blob container that contains the custom setup script.
	BlobContainerUri pulumi.StringPtrInput `pulumi:"blobContainerUri"`
	// The SAS token of the Azure blob container.
	SasToken SecureStringResponsePtrInput `pulumi:"sasToken"`
}

func (IntegrationRuntimeCustomSetupScriptPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeCustomSetupScriptPropertiesResponse)(nil)).Elem()
}

func (i IntegrationRuntimeCustomSetupScriptPropertiesResponseArgs) ToIntegrationRuntimeCustomSetupScriptPropertiesResponseOutput() IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput {
	return i.ToIntegrationRuntimeCustomSetupScriptPropertiesResponseOutputWithContext(context.Background())
}

func (i IntegrationRuntimeCustomSetupScriptPropertiesResponseArgs) ToIntegrationRuntimeCustomSetupScriptPropertiesResponseOutputWithContext(ctx context.Context) IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput)
}

func (i IntegrationRuntimeCustomSetupScriptPropertiesResponseArgs) ToIntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput() IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput {
	return i.ToIntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeCustomSetupScriptPropertiesResponseArgs) ToIntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput).ToIntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutputWithContext(ctx)
}

// IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrInput is an input type that accepts IntegrationRuntimeCustomSetupScriptPropertiesResponseArgs, IntegrationRuntimeCustomSetupScriptPropertiesResponsePtr and IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrInput` via:
//
//          IntegrationRuntimeCustomSetupScriptPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput() IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput
	ToIntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutputWithContext(context.Context) IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput
}

type integrationRuntimeCustomSetupScriptPropertiesResponsePtrType IntegrationRuntimeCustomSetupScriptPropertiesResponseArgs

func IntegrationRuntimeCustomSetupScriptPropertiesResponsePtr(v *IntegrationRuntimeCustomSetupScriptPropertiesResponseArgs) IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrInput {
	return (*integrationRuntimeCustomSetupScriptPropertiesResponsePtrType)(v)
}

func (*integrationRuntimeCustomSetupScriptPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeCustomSetupScriptPropertiesResponse)(nil)).Elem()
}

func (i *integrationRuntimeCustomSetupScriptPropertiesResponsePtrType) ToIntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput() IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput {
	return i.ToIntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeCustomSetupScriptPropertiesResponsePtrType) ToIntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput)
}

// Custom setup script properties for a managed dedicated integration runtime.
type IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeCustomSetupScriptPropertiesResponse)(nil)).Elem()
}

func (o IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput) ToIntegrationRuntimeCustomSetupScriptPropertiesResponseOutput() IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput {
	return o
}

func (o IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput) ToIntegrationRuntimeCustomSetupScriptPropertiesResponseOutputWithContext(ctx context.Context) IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput {
	return o
}

func (o IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput) ToIntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput() IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput {
	return o.ToIntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput) ToIntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeCustomSetupScriptPropertiesResponse) *IntegrationRuntimeCustomSetupScriptPropertiesResponse {
		return &v
	}).(IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput)
}

// The URI of the Azure blob container that contains the custom setup script.
func (o IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput) BlobContainerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeCustomSetupScriptPropertiesResponse) *string { return v.BlobContainerUri }).(pulumi.StringPtrOutput)
}

// The SAS token of the Azure blob container.
func (o IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput) SasToken() SecureStringResponsePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeCustomSetupScriptPropertiesResponse) *SecureStringResponse { return v.SasToken }).(SecureStringResponsePtrOutput)
}

type IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeCustomSetupScriptPropertiesResponse)(nil)).Elem()
}

func (o IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput) ToIntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput() IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput {
	return o
}

func (o IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput) ToIntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput {
	return o
}

func (o IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput) Elem() IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput {
	return o.ApplyT(func(v *IntegrationRuntimeCustomSetupScriptPropertiesResponse) IntegrationRuntimeCustomSetupScriptPropertiesResponse {
		return *v
	}).(IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput)
}

// The URI of the Azure blob container that contains the custom setup script.
func (o IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput) BlobContainerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeCustomSetupScriptPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.BlobContainerUri
	}).(pulumi.StringPtrOutput)
}

// The SAS token of the Azure blob container.
func (o IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput) SasToken() SecureStringResponsePtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeCustomSetupScriptPropertiesResponse) *SecureStringResponse {
		if v == nil {
			return nil
		}
		return v.SasToken
	}).(SecureStringResponsePtrOutput)
}

// Data proxy properties for a managed dedicated integration runtime.
type IntegrationRuntimeDataProxyProperties struct {
	// The self-hosted integration runtime reference.
	ConnectVia *EntityReference `pulumi:"connectVia"`
	// The path to contain the staged data in the Blob storage.
	Path *string `pulumi:"path"`
	// The staging linked service reference.
	StagingLinkedService *EntityReference `pulumi:"stagingLinkedService"`
}

// IntegrationRuntimeDataProxyPropertiesInput is an input type that accepts IntegrationRuntimeDataProxyPropertiesArgs and IntegrationRuntimeDataProxyPropertiesOutput values.
// You can construct a concrete instance of `IntegrationRuntimeDataProxyPropertiesInput` via:
//
//          IntegrationRuntimeDataProxyPropertiesArgs{...}
type IntegrationRuntimeDataProxyPropertiesInput interface {
	pulumi.Input

	ToIntegrationRuntimeDataProxyPropertiesOutput() IntegrationRuntimeDataProxyPropertiesOutput
	ToIntegrationRuntimeDataProxyPropertiesOutputWithContext(context.Context) IntegrationRuntimeDataProxyPropertiesOutput
}

// Data proxy properties for a managed dedicated integration runtime.
type IntegrationRuntimeDataProxyPropertiesArgs struct {
	// The self-hosted integration runtime reference.
	ConnectVia EntityReferencePtrInput `pulumi:"connectVia"`
	// The path to contain the staged data in the Blob storage.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The staging linked service reference.
	StagingLinkedService EntityReferencePtrInput `pulumi:"stagingLinkedService"`
}

func (IntegrationRuntimeDataProxyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeDataProxyProperties)(nil)).Elem()
}

func (i IntegrationRuntimeDataProxyPropertiesArgs) ToIntegrationRuntimeDataProxyPropertiesOutput() IntegrationRuntimeDataProxyPropertiesOutput {
	return i.ToIntegrationRuntimeDataProxyPropertiesOutputWithContext(context.Background())
}

func (i IntegrationRuntimeDataProxyPropertiesArgs) ToIntegrationRuntimeDataProxyPropertiesOutputWithContext(ctx context.Context) IntegrationRuntimeDataProxyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeDataProxyPropertiesOutput)
}

func (i IntegrationRuntimeDataProxyPropertiesArgs) ToIntegrationRuntimeDataProxyPropertiesPtrOutput() IntegrationRuntimeDataProxyPropertiesPtrOutput {
	return i.ToIntegrationRuntimeDataProxyPropertiesPtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeDataProxyPropertiesArgs) ToIntegrationRuntimeDataProxyPropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeDataProxyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeDataProxyPropertiesOutput).ToIntegrationRuntimeDataProxyPropertiesPtrOutputWithContext(ctx)
}

// IntegrationRuntimeDataProxyPropertiesPtrInput is an input type that accepts IntegrationRuntimeDataProxyPropertiesArgs, IntegrationRuntimeDataProxyPropertiesPtr and IntegrationRuntimeDataProxyPropertiesPtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeDataProxyPropertiesPtrInput` via:
//
//          IntegrationRuntimeDataProxyPropertiesArgs{...}
//
//  or:
//
//          nil
type IntegrationRuntimeDataProxyPropertiesPtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeDataProxyPropertiesPtrOutput() IntegrationRuntimeDataProxyPropertiesPtrOutput
	ToIntegrationRuntimeDataProxyPropertiesPtrOutputWithContext(context.Context) IntegrationRuntimeDataProxyPropertiesPtrOutput
}

type integrationRuntimeDataProxyPropertiesPtrType IntegrationRuntimeDataProxyPropertiesArgs

func IntegrationRuntimeDataProxyPropertiesPtr(v *IntegrationRuntimeDataProxyPropertiesArgs) IntegrationRuntimeDataProxyPropertiesPtrInput {
	return (*integrationRuntimeDataProxyPropertiesPtrType)(v)
}

func (*integrationRuntimeDataProxyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeDataProxyProperties)(nil)).Elem()
}

func (i *integrationRuntimeDataProxyPropertiesPtrType) ToIntegrationRuntimeDataProxyPropertiesPtrOutput() IntegrationRuntimeDataProxyPropertiesPtrOutput {
	return i.ToIntegrationRuntimeDataProxyPropertiesPtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeDataProxyPropertiesPtrType) ToIntegrationRuntimeDataProxyPropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeDataProxyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeDataProxyPropertiesPtrOutput)
}

// Data proxy properties for a managed dedicated integration runtime.
type IntegrationRuntimeDataProxyPropertiesOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeDataProxyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeDataProxyProperties)(nil)).Elem()
}

func (o IntegrationRuntimeDataProxyPropertiesOutput) ToIntegrationRuntimeDataProxyPropertiesOutput() IntegrationRuntimeDataProxyPropertiesOutput {
	return o
}

func (o IntegrationRuntimeDataProxyPropertiesOutput) ToIntegrationRuntimeDataProxyPropertiesOutputWithContext(ctx context.Context) IntegrationRuntimeDataProxyPropertiesOutput {
	return o
}

func (o IntegrationRuntimeDataProxyPropertiesOutput) ToIntegrationRuntimeDataProxyPropertiesPtrOutput() IntegrationRuntimeDataProxyPropertiesPtrOutput {
	return o.ToIntegrationRuntimeDataProxyPropertiesPtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeDataProxyPropertiesOutput) ToIntegrationRuntimeDataProxyPropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeDataProxyPropertiesPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeDataProxyProperties) *IntegrationRuntimeDataProxyProperties {
		return &v
	}).(IntegrationRuntimeDataProxyPropertiesPtrOutput)
}

// The self-hosted integration runtime reference.
func (o IntegrationRuntimeDataProxyPropertiesOutput) ConnectVia() EntityReferencePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeDataProxyProperties) *EntityReference { return v.ConnectVia }).(EntityReferencePtrOutput)
}

// The path to contain the staged data in the Blob storage.
func (o IntegrationRuntimeDataProxyPropertiesOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeDataProxyProperties) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The staging linked service reference.
func (o IntegrationRuntimeDataProxyPropertiesOutput) StagingLinkedService() EntityReferencePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeDataProxyProperties) *EntityReference { return v.StagingLinkedService }).(EntityReferencePtrOutput)
}

type IntegrationRuntimeDataProxyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeDataProxyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeDataProxyProperties)(nil)).Elem()
}

func (o IntegrationRuntimeDataProxyPropertiesPtrOutput) ToIntegrationRuntimeDataProxyPropertiesPtrOutput() IntegrationRuntimeDataProxyPropertiesPtrOutput {
	return o
}

func (o IntegrationRuntimeDataProxyPropertiesPtrOutput) ToIntegrationRuntimeDataProxyPropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeDataProxyPropertiesPtrOutput {
	return o
}

func (o IntegrationRuntimeDataProxyPropertiesPtrOutput) Elem() IntegrationRuntimeDataProxyPropertiesOutput {
	return o.ApplyT(func(v *IntegrationRuntimeDataProxyProperties) IntegrationRuntimeDataProxyProperties { return *v }).(IntegrationRuntimeDataProxyPropertiesOutput)
}

// The self-hosted integration runtime reference.
func (o IntegrationRuntimeDataProxyPropertiesPtrOutput) ConnectVia() EntityReferencePtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeDataProxyProperties) *EntityReference {
		if v == nil {
			return nil
		}
		return v.ConnectVia
	}).(EntityReferencePtrOutput)
}

// The path to contain the staged data in the Blob storage.
func (o IntegrationRuntimeDataProxyPropertiesPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeDataProxyProperties) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The staging linked service reference.
func (o IntegrationRuntimeDataProxyPropertiesPtrOutput) StagingLinkedService() EntityReferencePtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeDataProxyProperties) *EntityReference {
		if v == nil {
			return nil
		}
		return v.StagingLinkedService
	}).(EntityReferencePtrOutput)
}

// Data proxy properties for a managed dedicated integration runtime.
type IntegrationRuntimeDataProxyPropertiesResponse struct {
	// The self-hosted integration runtime reference.
	ConnectVia *EntityReferenceResponse `pulumi:"connectVia"`
	// The path to contain the staged data in the Blob storage.
	Path *string `pulumi:"path"`
	// The staging linked service reference.
	StagingLinkedService *EntityReferenceResponse `pulumi:"stagingLinkedService"`
}

// IntegrationRuntimeDataProxyPropertiesResponseInput is an input type that accepts IntegrationRuntimeDataProxyPropertiesResponseArgs and IntegrationRuntimeDataProxyPropertiesResponseOutput values.
// You can construct a concrete instance of `IntegrationRuntimeDataProxyPropertiesResponseInput` via:
//
//          IntegrationRuntimeDataProxyPropertiesResponseArgs{...}
type IntegrationRuntimeDataProxyPropertiesResponseInput interface {
	pulumi.Input

	ToIntegrationRuntimeDataProxyPropertiesResponseOutput() IntegrationRuntimeDataProxyPropertiesResponseOutput
	ToIntegrationRuntimeDataProxyPropertiesResponseOutputWithContext(context.Context) IntegrationRuntimeDataProxyPropertiesResponseOutput
}

// Data proxy properties for a managed dedicated integration runtime.
type IntegrationRuntimeDataProxyPropertiesResponseArgs struct {
	// The self-hosted integration runtime reference.
	ConnectVia EntityReferenceResponsePtrInput `pulumi:"connectVia"`
	// The path to contain the staged data in the Blob storage.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The staging linked service reference.
	StagingLinkedService EntityReferenceResponsePtrInput `pulumi:"stagingLinkedService"`
}

func (IntegrationRuntimeDataProxyPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeDataProxyPropertiesResponse)(nil)).Elem()
}

func (i IntegrationRuntimeDataProxyPropertiesResponseArgs) ToIntegrationRuntimeDataProxyPropertiesResponseOutput() IntegrationRuntimeDataProxyPropertiesResponseOutput {
	return i.ToIntegrationRuntimeDataProxyPropertiesResponseOutputWithContext(context.Background())
}

func (i IntegrationRuntimeDataProxyPropertiesResponseArgs) ToIntegrationRuntimeDataProxyPropertiesResponseOutputWithContext(ctx context.Context) IntegrationRuntimeDataProxyPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeDataProxyPropertiesResponseOutput)
}

func (i IntegrationRuntimeDataProxyPropertiesResponseArgs) ToIntegrationRuntimeDataProxyPropertiesResponsePtrOutput() IntegrationRuntimeDataProxyPropertiesResponsePtrOutput {
	return i.ToIntegrationRuntimeDataProxyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeDataProxyPropertiesResponseArgs) ToIntegrationRuntimeDataProxyPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeDataProxyPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeDataProxyPropertiesResponseOutput).ToIntegrationRuntimeDataProxyPropertiesResponsePtrOutputWithContext(ctx)
}

// IntegrationRuntimeDataProxyPropertiesResponsePtrInput is an input type that accepts IntegrationRuntimeDataProxyPropertiesResponseArgs, IntegrationRuntimeDataProxyPropertiesResponsePtr and IntegrationRuntimeDataProxyPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeDataProxyPropertiesResponsePtrInput` via:
//
//          IntegrationRuntimeDataProxyPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type IntegrationRuntimeDataProxyPropertiesResponsePtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeDataProxyPropertiesResponsePtrOutput() IntegrationRuntimeDataProxyPropertiesResponsePtrOutput
	ToIntegrationRuntimeDataProxyPropertiesResponsePtrOutputWithContext(context.Context) IntegrationRuntimeDataProxyPropertiesResponsePtrOutput
}

type integrationRuntimeDataProxyPropertiesResponsePtrType IntegrationRuntimeDataProxyPropertiesResponseArgs

func IntegrationRuntimeDataProxyPropertiesResponsePtr(v *IntegrationRuntimeDataProxyPropertiesResponseArgs) IntegrationRuntimeDataProxyPropertiesResponsePtrInput {
	return (*integrationRuntimeDataProxyPropertiesResponsePtrType)(v)
}

func (*integrationRuntimeDataProxyPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeDataProxyPropertiesResponse)(nil)).Elem()
}

func (i *integrationRuntimeDataProxyPropertiesResponsePtrType) ToIntegrationRuntimeDataProxyPropertiesResponsePtrOutput() IntegrationRuntimeDataProxyPropertiesResponsePtrOutput {
	return i.ToIntegrationRuntimeDataProxyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeDataProxyPropertiesResponsePtrType) ToIntegrationRuntimeDataProxyPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeDataProxyPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeDataProxyPropertiesResponsePtrOutput)
}

// Data proxy properties for a managed dedicated integration runtime.
type IntegrationRuntimeDataProxyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeDataProxyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeDataProxyPropertiesResponse)(nil)).Elem()
}

func (o IntegrationRuntimeDataProxyPropertiesResponseOutput) ToIntegrationRuntimeDataProxyPropertiesResponseOutput() IntegrationRuntimeDataProxyPropertiesResponseOutput {
	return o
}

func (o IntegrationRuntimeDataProxyPropertiesResponseOutput) ToIntegrationRuntimeDataProxyPropertiesResponseOutputWithContext(ctx context.Context) IntegrationRuntimeDataProxyPropertiesResponseOutput {
	return o
}

func (o IntegrationRuntimeDataProxyPropertiesResponseOutput) ToIntegrationRuntimeDataProxyPropertiesResponsePtrOutput() IntegrationRuntimeDataProxyPropertiesResponsePtrOutput {
	return o.ToIntegrationRuntimeDataProxyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeDataProxyPropertiesResponseOutput) ToIntegrationRuntimeDataProxyPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeDataProxyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeDataProxyPropertiesResponse) *IntegrationRuntimeDataProxyPropertiesResponse {
		return &v
	}).(IntegrationRuntimeDataProxyPropertiesResponsePtrOutput)
}

// The self-hosted integration runtime reference.
func (o IntegrationRuntimeDataProxyPropertiesResponseOutput) ConnectVia() EntityReferenceResponsePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeDataProxyPropertiesResponse) *EntityReferenceResponse { return v.ConnectVia }).(EntityReferenceResponsePtrOutput)
}

// The path to contain the staged data in the Blob storage.
func (o IntegrationRuntimeDataProxyPropertiesResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeDataProxyPropertiesResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The staging linked service reference.
func (o IntegrationRuntimeDataProxyPropertiesResponseOutput) StagingLinkedService() EntityReferenceResponsePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeDataProxyPropertiesResponse) *EntityReferenceResponse {
		return v.StagingLinkedService
	}).(EntityReferenceResponsePtrOutput)
}

type IntegrationRuntimeDataProxyPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeDataProxyPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeDataProxyPropertiesResponse)(nil)).Elem()
}

func (o IntegrationRuntimeDataProxyPropertiesResponsePtrOutput) ToIntegrationRuntimeDataProxyPropertiesResponsePtrOutput() IntegrationRuntimeDataProxyPropertiesResponsePtrOutput {
	return o
}

func (o IntegrationRuntimeDataProxyPropertiesResponsePtrOutput) ToIntegrationRuntimeDataProxyPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeDataProxyPropertiesResponsePtrOutput {
	return o
}

func (o IntegrationRuntimeDataProxyPropertiesResponsePtrOutput) Elem() IntegrationRuntimeDataProxyPropertiesResponseOutput {
	return o.ApplyT(func(v *IntegrationRuntimeDataProxyPropertiesResponse) IntegrationRuntimeDataProxyPropertiesResponse {
		return *v
	}).(IntegrationRuntimeDataProxyPropertiesResponseOutput)
}

// The self-hosted integration runtime reference.
func (o IntegrationRuntimeDataProxyPropertiesResponsePtrOutput) ConnectVia() EntityReferenceResponsePtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeDataProxyPropertiesResponse) *EntityReferenceResponse {
		if v == nil {
			return nil
		}
		return v.ConnectVia
	}).(EntityReferenceResponsePtrOutput)
}

// The path to contain the staged data in the Blob storage.
func (o IntegrationRuntimeDataProxyPropertiesResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeDataProxyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The staging linked service reference.
func (o IntegrationRuntimeDataProxyPropertiesResponsePtrOutput) StagingLinkedService() EntityReferenceResponsePtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeDataProxyPropertiesResponse) *EntityReferenceResponse {
		if v == nil {
			return nil
		}
		return v.StagingLinkedService
	}).(EntityReferenceResponsePtrOutput)
}

// Integration runtime reference type.
type IntegrationRuntimeReference struct {
	// Arguments for integration runtime.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// Reference integration runtime name.
	ReferenceName string `pulumi:"referenceName"`
	// Type of integration runtime.
	Type string `pulumi:"type"`
}

// IntegrationRuntimeReferenceInput is an input type that accepts IntegrationRuntimeReferenceArgs and IntegrationRuntimeReferenceOutput values.
// You can construct a concrete instance of `IntegrationRuntimeReferenceInput` via:
//
//          IntegrationRuntimeReferenceArgs{...}
type IntegrationRuntimeReferenceInput interface {
	pulumi.Input

	ToIntegrationRuntimeReferenceOutput() IntegrationRuntimeReferenceOutput
	ToIntegrationRuntimeReferenceOutputWithContext(context.Context) IntegrationRuntimeReferenceOutput
}

// Integration runtime reference type.
type IntegrationRuntimeReferenceArgs struct {
	// Arguments for integration runtime.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// Reference integration runtime name.
	ReferenceName pulumi.StringInput `pulumi:"referenceName"`
	// Type of integration runtime.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IntegrationRuntimeReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeReference)(nil)).Elem()
}

func (i IntegrationRuntimeReferenceArgs) ToIntegrationRuntimeReferenceOutput() IntegrationRuntimeReferenceOutput {
	return i.ToIntegrationRuntimeReferenceOutputWithContext(context.Background())
}

func (i IntegrationRuntimeReferenceArgs) ToIntegrationRuntimeReferenceOutputWithContext(ctx context.Context) IntegrationRuntimeReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeReferenceOutput)
}

func (i IntegrationRuntimeReferenceArgs) ToIntegrationRuntimeReferencePtrOutput() IntegrationRuntimeReferencePtrOutput {
	return i.ToIntegrationRuntimeReferencePtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeReferenceArgs) ToIntegrationRuntimeReferencePtrOutputWithContext(ctx context.Context) IntegrationRuntimeReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeReferenceOutput).ToIntegrationRuntimeReferencePtrOutputWithContext(ctx)
}

// IntegrationRuntimeReferencePtrInput is an input type that accepts IntegrationRuntimeReferenceArgs, IntegrationRuntimeReferencePtr and IntegrationRuntimeReferencePtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeReferencePtrInput` via:
//
//          IntegrationRuntimeReferenceArgs{...}
//
//  or:
//
//          nil
type IntegrationRuntimeReferencePtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeReferencePtrOutput() IntegrationRuntimeReferencePtrOutput
	ToIntegrationRuntimeReferencePtrOutputWithContext(context.Context) IntegrationRuntimeReferencePtrOutput
}

type integrationRuntimeReferencePtrType IntegrationRuntimeReferenceArgs

func IntegrationRuntimeReferencePtr(v *IntegrationRuntimeReferenceArgs) IntegrationRuntimeReferencePtrInput {
	return (*integrationRuntimeReferencePtrType)(v)
}

func (*integrationRuntimeReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeReference)(nil)).Elem()
}

func (i *integrationRuntimeReferencePtrType) ToIntegrationRuntimeReferencePtrOutput() IntegrationRuntimeReferencePtrOutput {
	return i.ToIntegrationRuntimeReferencePtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeReferencePtrType) ToIntegrationRuntimeReferencePtrOutputWithContext(ctx context.Context) IntegrationRuntimeReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeReferencePtrOutput)
}

// Integration runtime reference type.
type IntegrationRuntimeReferenceOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeReference)(nil)).Elem()
}

func (o IntegrationRuntimeReferenceOutput) ToIntegrationRuntimeReferenceOutput() IntegrationRuntimeReferenceOutput {
	return o
}

func (o IntegrationRuntimeReferenceOutput) ToIntegrationRuntimeReferenceOutputWithContext(ctx context.Context) IntegrationRuntimeReferenceOutput {
	return o
}

func (o IntegrationRuntimeReferenceOutput) ToIntegrationRuntimeReferencePtrOutput() IntegrationRuntimeReferencePtrOutput {
	return o.ToIntegrationRuntimeReferencePtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeReferenceOutput) ToIntegrationRuntimeReferencePtrOutputWithContext(ctx context.Context) IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeReference) *IntegrationRuntimeReference {
		return &v
	}).(IntegrationRuntimeReferencePtrOutput)
}

// Arguments for integration runtime.
func (o IntegrationRuntimeReferenceOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v IntegrationRuntimeReference) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

// Reference integration runtime name.
func (o IntegrationRuntimeReferenceOutput) ReferenceName() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeReference) string { return v.ReferenceName }).(pulumi.StringOutput)
}

// Type of integration runtime.
func (o IntegrationRuntimeReferenceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeReference) string { return v.Type }).(pulumi.StringOutput)
}

type IntegrationRuntimeReferencePtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeReference)(nil)).Elem()
}

func (o IntegrationRuntimeReferencePtrOutput) ToIntegrationRuntimeReferencePtrOutput() IntegrationRuntimeReferencePtrOutput {
	return o
}

func (o IntegrationRuntimeReferencePtrOutput) ToIntegrationRuntimeReferencePtrOutputWithContext(ctx context.Context) IntegrationRuntimeReferencePtrOutput {
	return o
}

func (o IntegrationRuntimeReferencePtrOutput) Elem() IntegrationRuntimeReferenceOutput {
	return o.ApplyT(func(v *IntegrationRuntimeReference) IntegrationRuntimeReference { return *v }).(IntegrationRuntimeReferenceOutput)
}

// Arguments for integration runtime.
func (o IntegrationRuntimeReferencePtrOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v *IntegrationRuntimeReference) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.MapOutput)
}

// Reference integration runtime name.
func (o IntegrationRuntimeReferencePtrOutput) ReferenceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeReference) *string {
		if v == nil {
			return nil
		}
		return &v.ReferenceName
	}).(pulumi.StringPtrOutput)
}

// Type of integration runtime.
func (o IntegrationRuntimeReferencePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeReference) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Integration runtime reference type.
type IntegrationRuntimeReferenceResponse struct {
	// Arguments for integration runtime.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// Reference integration runtime name.
	ReferenceName string `pulumi:"referenceName"`
	// Type of integration runtime.
	Type string `pulumi:"type"`
}

// IntegrationRuntimeReferenceResponseInput is an input type that accepts IntegrationRuntimeReferenceResponseArgs and IntegrationRuntimeReferenceResponseOutput values.
// You can construct a concrete instance of `IntegrationRuntimeReferenceResponseInput` via:
//
//          IntegrationRuntimeReferenceResponseArgs{...}
type IntegrationRuntimeReferenceResponseInput interface {
	pulumi.Input

	ToIntegrationRuntimeReferenceResponseOutput() IntegrationRuntimeReferenceResponseOutput
	ToIntegrationRuntimeReferenceResponseOutputWithContext(context.Context) IntegrationRuntimeReferenceResponseOutput
}

// Integration runtime reference type.
type IntegrationRuntimeReferenceResponseArgs struct {
	// Arguments for integration runtime.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// Reference integration runtime name.
	ReferenceName pulumi.StringInput `pulumi:"referenceName"`
	// Type of integration runtime.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IntegrationRuntimeReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeReferenceResponse)(nil)).Elem()
}

func (i IntegrationRuntimeReferenceResponseArgs) ToIntegrationRuntimeReferenceResponseOutput() IntegrationRuntimeReferenceResponseOutput {
	return i.ToIntegrationRuntimeReferenceResponseOutputWithContext(context.Background())
}

func (i IntegrationRuntimeReferenceResponseArgs) ToIntegrationRuntimeReferenceResponseOutputWithContext(ctx context.Context) IntegrationRuntimeReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeReferenceResponseOutput)
}

func (i IntegrationRuntimeReferenceResponseArgs) ToIntegrationRuntimeReferenceResponsePtrOutput() IntegrationRuntimeReferenceResponsePtrOutput {
	return i.ToIntegrationRuntimeReferenceResponsePtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeReferenceResponseArgs) ToIntegrationRuntimeReferenceResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeReferenceResponseOutput).ToIntegrationRuntimeReferenceResponsePtrOutputWithContext(ctx)
}

// IntegrationRuntimeReferenceResponsePtrInput is an input type that accepts IntegrationRuntimeReferenceResponseArgs, IntegrationRuntimeReferenceResponsePtr and IntegrationRuntimeReferenceResponsePtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeReferenceResponsePtrInput` via:
//
//          IntegrationRuntimeReferenceResponseArgs{...}
//
//  or:
//
//          nil
type IntegrationRuntimeReferenceResponsePtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeReferenceResponsePtrOutput() IntegrationRuntimeReferenceResponsePtrOutput
	ToIntegrationRuntimeReferenceResponsePtrOutputWithContext(context.Context) IntegrationRuntimeReferenceResponsePtrOutput
}

type integrationRuntimeReferenceResponsePtrType IntegrationRuntimeReferenceResponseArgs

func IntegrationRuntimeReferenceResponsePtr(v *IntegrationRuntimeReferenceResponseArgs) IntegrationRuntimeReferenceResponsePtrInput {
	return (*integrationRuntimeReferenceResponsePtrType)(v)
}

func (*integrationRuntimeReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeReferenceResponse)(nil)).Elem()
}

func (i *integrationRuntimeReferenceResponsePtrType) ToIntegrationRuntimeReferenceResponsePtrOutput() IntegrationRuntimeReferenceResponsePtrOutput {
	return i.ToIntegrationRuntimeReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeReferenceResponsePtrType) ToIntegrationRuntimeReferenceResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Integration runtime reference type.
type IntegrationRuntimeReferenceResponseOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeReferenceResponse)(nil)).Elem()
}

func (o IntegrationRuntimeReferenceResponseOutput) ToIntegrationRuntimeReferenceResponseOutput() IntegrationRuntimeReferenceResponseOutput {
	return o
}

func (o IntegrationRuntimeReferenceResponseOutput) ToIntegrationRuntimeReferenceResponseOutputWithContext(ctx context.Context) IntegrationRuntimeReferenceResponseOutput {
	return o
}

func (o IntegrationRuntimeReferenceResponseOutput) ToIntegrationRuntimeReferenceResponsePtrOutput() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ToIntegrationRuntimeReferenceResponsePtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeReferenceResponseOutput) ToIntegrationRuntimeReferenceResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeReferenceResponse) *IntegrationRuntimeReferenceResponse {
		return &v
	}).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Arguments for integration runtime.
func (o IntegrationRuntimeReferenceResponseOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v IntegrationRuntimeReferenceResponse) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

// Reference integration runtime name.
func (o IntegrationRuntimeReferenceResponseOutput) ReferenceName() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeReferenceResponse) string { return v.ReferenceName }).(pulumi.StringOutput)
}

// Type of integration runtime.
func (o IntegrationRuntimeReferenceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeReferenceResponse) string { return v.Type }).(pulumi.StringOutput)
}

type IntegrationRuntimeReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeReferenceResponse)(nil)).Elem()
}

func (o IntegrationRuntimeReferenceResponsePtrOutput) ToIntegrationRuntimeReferenceResponsePtrOutput() IntegrationRuntimeReferenceResponsePtrOutput {
	return o
}

func (o IntegrationRuntimeReferenceResponsePtrOutput) ToIntegrationRuntimeReferenceResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeReferenceResponsePtrOutput {
	return o
}

func (o IntegrationRuntimeReferenceResponsePtrOutput) Elem() IntegrationRuntimeReferenceResponseOutput {
	return o.ApplyT(func(v *IntegrationRuntimeReferenceResponse) IntegrationRuntimeReferenceResponse { return *v }).(IntegrationRuntimeReferenceResponseOutput)
}

// Arguments for integration runtime.
func (o IntegrationRuntimeReferenceResponsePtrOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v *IntegrationRuntimeReferenceResponse) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.MapOutput)
}

// Reference integration runtime name.
func (o IntegrationRuntimeReferenceResponsePtrOutput) ReferenceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReferenceName
	}).(pulumi.StringPtrOutput)
}

// Type of integration runtime.
func (o IntegrationRuntimeReferenceResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Catalog information for managed dedicated integration runtime.
type IntegrationRuntimeSsisCatalogInfo struct {
	// The password of the administrator user account of the catalog database.
	CatalogAdminPassword *SecureString `pulumi:"catalogAdminPassword"`
	// The administrator user name of catalog database.
	CatalogAdminUserName *string `pulumi:"catalogAdminUserName"`
	// The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/
	CatalogPricingTier *string `pulumi:"catalogPricingTier"`
	// The catalog database server URL.
	CatalogServerEndpoint *string `pulumi:"catalogServerEndpoint"`
}

// IntegrationRuntimeSsisCatalogInfoInput is an input type that accepts IntegrationRuntimeSsisCatalogInfoArgs and IntegrationRuntimeSsisCatalogInfoOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisCatalogInfoInput` via:
//
//          IntegrationRuntimeSsisCatalogInfoArgs{...}
type IntegrationRuntimeSsisCatalogInfoInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisCatalogInfoOutput() IntegrationRuntimeSsisCatalogInfoOutput
	ToIntegrationRuntimeSsisCatalogInfoOutputWithContext(context.Context) IntegrationRuntimeSsisCatalogInfoOutput
}

// Catalog information for managed dedicated integration runtime.
type IntegrationRuntimeSsisCatalogInfoArgs struct {
	// The password of the administrator user account of the catalog database.
	CatalogAdminPassword SecureStringPtrInput `pulumi:"catalogAdminPassword"`
	// The administrator user name of catalog database.
	CatalogAdminUserName pulumi.StringPtrInput `pulumi:"catalogAdminUserName"`
	// The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/
	CatalogPricingTier pulumi.StringPtrInput `pulumi:"catalogPricingTier"`
	// The catalog database server URL.
	CatalogServerEndpoint pulumi.StringPtrInput `pulumi:"catalogServerEndpoint"`
}

func (IntegrationRuntimeSsisCatalogInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisCatalogInfo)(nil)).Elem()
}

func (i IntegrationRuntimeSsisCatalogInfoArgs) ToIntegrationRuntimeSsisCatalogInfoOutput() IntegrationRuntimeSsisCatalogInfoOutput {
	return i.ToIntegrationRuntimeSsisCatalogInfoOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisCatalogInfoArgs) ToIntegrationRuntimeSsisCatalogInfoOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisCatalogInfoOutput)
}

func (i IntegrationRuntimeSsisCatalogInfoArgs) ToIntegrationRuntimeSsisCatalogInfoPtrOutput() IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return i.ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisCatalogInfoArgs) ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisCatalogInfoOutput).ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(ctx)
}

// IntegrationRuntimeSsisCatalogInfoPtrInput is an input type that accepts IntegrationRuntimeSsisCatalogInfoArgs, IntegrationRuntimeSsisCatalogInfoPtr and IntegrationRuntimeSsisCatalogInfoPtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisCatalogInfoPtrInput` via:
//
//          IntegrationRuntimeSsisCatalogInfoArgs{...}
//
//  or:
//
//          nil
type IntegrationRuntimeSsisCatalogInfoPtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisCatalogInfoPtrOutput() IntegrationRuntimeSsisCatalogInfoPtrOutput
	ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(context.Context) IntegrationRuntimeSsisCatalogInfoPtrOutput
}

type integrationRuntimeSsisCatalogInfoPtrType IntegrationRuntimeSsisCatalogInfoArgs

func IntegrationRuntimeSsisCatalogInfoPtr(v *IntegrationRuntimeSsisCatalogInfoArgs) IntegrationRuntimeSsisCatalogInfoPtrInput {
	return (*integrationRuntimeSsisCatalogInfoPtrType)(v)
}

func (*integrationRuntimeSsisCatalogInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisCatalogInfo)(nil)).Elem()
}

func (i *integrationRuntimeSsisCatalogInfoPtrType) ToIntegrationRuntimeSsisCatalogInfoPtrOutput() IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return i.ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeSsisCatalogInfoPtrType) ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisCatalogInfoPtrOutput)
}

// Catalog information for managed dedicated integration runtime.
type IntegrationRuntimeSsisCatalogInfoOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisCatalogInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisCatalogInfo)(nil)).Elem()
}

func (o IntegrationRuntimeSsisCatalogInfoOutput) ToIntegrationRuntimeSsisCatalogInfoOutput() IntegrationRuntimeSsisCatalogInfoOutput {
	return o
}

func (o IntegrationRuntimeSsisCatalogInfoOutput) ToIntegrationRuntimeSsisCatalogInfoOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoOutput {
	return o
}

func (o IntegrationRuntimeSsisCatalogInfoOutput) ToIntegrationRuntimeSsisCatalogInfoPtrOutput() IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return o.ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeSsisCatalogInfoOutput) ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCatalogInfo) *IntegrationRuntimeSsisCatalogInfo {
		return &v
	}).(IntegrationRuntimeSsisCatalogInfoPtrOutput)
}

// The password of the administrator user account of the catalog database.
func (o IntegrationRuntimeSsisCatalogInfoOutput) CatalogAdminPassword() SecureStringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCatalogInfo) *SecureString { return v.CatalogAdminPassword }).(SecureStringPtrOutput)
}

// The administrator user name of catalog database.
func (o IntegrationRuntimeSsisCatalogInfoOutput) CatalogAdminUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCatalogInfo) *string { return v.CatalogAdminUserName }).(pulumi.StringPtrOutput)
}

// The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/
func (o IntegrationRuntimeSsisCatalogInfoOutput) CatalogPricingTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCatalogInfo) *string { return v.CatalogPricingTier }).(pulumi.StringPtrOutput)
}

// The catalog database server URL.
func (o IntegrationRuntimeSsisCatalogInfoOutput) CatalogServerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCatalogInfo) *string { return v.CatalogServerEndpoint }).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeSsisCatalogInfoPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisCatalogInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisCatalogInfo)(nil)).Elem()
}

func (o IntegrationRuntimeSsisCatalogInfoPtrOutput) ToIntegrationRuntimeSsisCatalogInfoPtrOutput() IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisCatalogInfoPtrOutput) ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisCatalogInfoPtrOutput) Elem() IntegrationRuntimeSsisCatalogInfoOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCatalogInfo) IntegrationRuntimeSsisCatalogInfo { return *v }).(IntegrationRuntimeSsisCatalogInfoOutput)
}

// The password of the administrator user account of the catalog database.
func (o IntegrationRuntimeSsisCatalogInfoPtrOutput) CatalogAdminPassword() SecureStringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCatalogInfo) *SecureString {
		if v == nil {
			return nil
		}
		return v.CatalogAdminPassword
	}).(SecureStringPtrOutput)
}

// The administrator user name of catalog database.
func (o IntegrationRuntimeSsisCatalogInfoPtrOutput) CatalogAdminUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCatalogInfo) *string {
		if v == nil {
			return nil
		}
		return v.CatalogAdminUserName
	}).(pulumi.StringPtrOutput)
}

// The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/
func (o IntegrationRuntimeSsisCatalogInfoPtrOutput) CatalogPricingTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCatalogInfo) *string {
		if v == nil {
			return nil
		}
		return v.CatalogPricingTier
	}).(pulumi.StringPtrOutput)
}

// The catalog database server URL.
func (o IntegrationRuntimeSsisCatalogInfoPtrOutput) CatalogServerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCatalogInfo) *string {
		if v == nil {
			return nil
		}
		return v.CatalogServerEndpoint
	}).(pulumi.StringPtrOutput)
}

// Catalog information for managed dedicated integration runtime.
type IntegrationRuntimeSsisCatalogInfoResponse struct {
	// The password of the administrator user account of the catalog database.
	CatalogAdminPassword *SecureStringResponse `pulumi:"catalogAdminPassword"`
	// The administrator user name of catalog database.
	CatalogAdminUserName *string `pulumi:"catalogAdminUserName"`
	// The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/
	CatalogPricingTier *string `pulumi:"catalogPricingTier"`
	// The catalog database server URL.
	CatalogServerEndpoint *string `pulumi:"catalogServerEndpoint"`
}

// IntegrationRuntimeSsisCatalogInfoResponseInput is an input type that accepts IntegrationRuntimeSsisCatalogInfoResponseArgs and IntegrationRuntimeSsisCatalogInfoResponseOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisCatalogInfoResponseInput` via:
//
//          IntegrationRuntimeSsisCatalogInfoResponseArgs{...}
type IntegrationRuntimeSsisCatalogInfoResponseInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisCatalogInfoResponseOutput() IntegrationRuntimeSsisCatalogInfoResponseOutput
	ToIntegrationRuntimeSsisCatalogInfoResponseOutputWithContext(context.Context) IntegrationRuntimeSsisCatalogInfoResponseOutput
}

// Catalog information for managed dedicated integration runtime.
type IntegrationRuntimeSsisCatalogInfoResponseArgs struct {
	// The password of the administrator user account of the catalog database.
	CatalogAdminPassword SecureStringResponsePtrInput `pulumi:"catalogAdminPassword"`
	// The administrator user name of catalog database.
	CatalogAdminUserName pulumi.StringPtrInput `pulumi:"catalogAdminUserName"`
	// The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/
	CatalogPricingTier pulumi.StringPtrInput `pulumi:"catalogPricingTier"`
	// The catalog database server URL.
	CatalogServerEndpoint pulumi.StringPtrInput `pulumi:"catalogServerEndpoint"`
}

func (IntegrationRuntimeSsisCatalogInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisCatalogInfoResponse)(nil)).Elem()
}

func (i IntegrationRuntimeSsisCatalogInfoResponseArgs) ToIntegrationRuntimeSsisCatalogInfoResponseOutput() IntegrationRuntimeSsisCatalogInfoResponseOutput {
	return i.ToIntegrationRuntimeSsisCatalogInfoResponseOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisCatalogInfoResponseArgs) ToIntegrationRuntimeSsisCatalogInfoResponseOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisCatalogInfoResponseOutput)
}

func (i IntegrationRuntimeSsisCatalogInfoResponseArgs) ToIntegrationRuntimeSsisCatalogInfoResponsePtrOutput() IntegrationRuntimeSsisCatalogInfoResponsePtrOutput {
	return i.ToIntegrationRuntimeSsisCatalogInfoResponsePtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisCatalogInfoResponseArgs) ToIntegrationRuntimeSsisCatalogInfoResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisCatalogInfoResponseOutput).ToIntegrationRuntimeSsisCatalogInfoResponsePtrOutputWithContext(ctx)
}

// IntegrationRuntimeSsisCatalogInfoResponsePtrInput is an input type that accepts IntegrationRuntimeSsisCatalogInfoResponseArgs, IntegrationRuntimeSsisCatalogInfoResponsePtr and IntegrationRuntimeSsisCatalogInfoResponsePtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisCatalogInfoResponsePtrInput` via:
//
//          IntegrationRuntimeSsisCatalogInfoResponseArgs{...}
//
//  or:
//
//          nil
type IntegrationRuntimeSsisCatalogInfoResponsePtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisCatalogInfoResponsePtrOutput() IntegrationRuntimeSsisCatalogInfoResponsePtrOutput
	ToIntegrationRuntimeSsisCatalogInfoResponsePtrOutputWithContext(context.Context) IntegrationRuntimeSsisCatalogInfoResponsePtrOutput
}

type integrationRuntimeSsisCatalogInfoResponsePtrType IntegrationRuntimeSsisCatalogInfoResponseArgs

func IntegrationRuntimeSsisCatalogInfoResponsePtr(v *IntegrationRuntimeSsisCatalogInfoResponseArgs) IntegrationRuntimeSsisCatalogInfoResponsePtrInput {
	return (*integrationRuntimeSsisCatalogInfoResponsePtrType)(v)
}

func (*integrationRuntimeSsisCatalogInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisCatalogInfoResponse)(nil)).Elem()
}

func (i *integrationRuntimeSsisCatalogInfoResponsePtrType) ToIntegrationRuntimeSsisCatalogInfoResponsePtrOutput() IntegrationRuntimeSsisCatalogInfoResponsePtrOutput {
	return i.ToIntegrationRuntimeSsisCatalogInfoResponsePtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeSsisCatalogInfoResponsePtrType) ToIntegrationRuntimeSsisCatalogInfoResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisCatalogInfoResponsePtrOutput)
}

// Catalog information for managed dedicated integration runtime.
type IntegrationRuntimeSsisCatalogInfoResponseOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisCatalogInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisCatalogInfoResponse)(nil)).Elem()
}

func (o IntegrationRuntimeSsisCatalogInfoResponseOutput) ToIntegrationRuntimeSsisCatalogInfoResponseOutput() IntegrationRuntimeSsisCatalogInfoResponseOutput {
	return o
}

func (o IntegrationRuntimeSsisCatalogInfoResponseOutput) ToIntegrationRuntimeSsisCatalogInfoResponseOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoResponseOutput {
	return o
}

func (o IntegrationRuntimeSsisCatalogInfoResponseOutput) ToIntegrationRuntimeSsisCatalogInfoResponsePtrOutput() IntegrationRuntimeSsisCatalogInfoResponsePtrOutput {
	return o.ToIntegrationRuntimeSsisCatalogInfoResponsePtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeSsisCatalogInfoResponseOutput) ToIntegrationRuntimeSsisCatalogInfoResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoResponsePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCatalogInfoResponse) *IntegrationRuntimeSsisCatalogInfoResponse {
		return &v
	}).(IntegrationRuntimeSsisCatalogInfoResponsePtrOutput)
}

// The password of the administrator user account of the catalog database.
func (o IntegrationRuntimeSsisCatalogInfoResponseOutput) CatalogAdminPassword() SecureStringResponsePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCatalogInfoResponse) *SecureStringResponse { return v.CatalogAdminPassword }).(SecureStringResponsePtrOutput)
}

// The administrator user name of catalog database.
func (o IntegrationRuntimeSsisCatalogInfoResponseOutput) CatalogAdminUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCatalogInfoResponse) *string { return v.CatalogAdminUserName }).(pulumi.StringPtrOutput)
}

// The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/
func (o IntegrationRuntimeSsisCatalogInfoResponseOutput) CatalogPricingTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCatalogInfoResponse) *string { return v.CatalogPricingTier }).(pulumi.StringPtrOutput)
}

// The catalog database server URL.
func (o IntegrationRuntimeSsisCatalogInfoResponseOutput) CatalogServerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCatalogInfoResponse) *string { return v.CatalogServerEndpoint }).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeSsisCatalogInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisCatalogInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisCatalogInfoResponse)(nil)).Elem()
}

func (o IntegrationRuntimeSsisCatalogInfoResponsePtrOutput) ToIntegrationRuntimeSsisCatalogInfoResponsePtrOutput() IntegrationRuntimeSsisCatalogInfoResponsePtrOutput {
	return o
}

func (o IntegrationRuntimeSsisCatalogInfoResponsePtrOutput) ToIntegrationRuntimeSsisCatalogInfoResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoResponsePtrOutput {
	return o
}

func (o IntegrationRuntimeSsisCatalogInfoResponsePtrOutput) Elem() IntegrationRuntimeSsisCatalogInfoResponseOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCatalogInfoResponse) IntegrationRuntimeSsisCatalogInfoResponse {
		return *v
	}).(IntegrationRuntimeSsisCatalogInfoResponseOutput)
}

// The password of the administrator user account of the catalog database.
func (o IntegrationRuntimeSsisCatalogInfoResponsePtrOutput) CatalogAdminPassword() SecureStringResponsePtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCatalogInfoResponse) *SecureStringResponse {
		if v == nil {
			return nil
		}
		return v.CatalogAdminPassword
	}).(SecureStringResponsePtrOutput)
}

// The administrator user name of catalog database.
func (o IntegrationRuntimeSsisCatalogInfoResponsePtrOutput) CatalogAdminUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCatalogInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.CatalogAdminUserName
	}).(pulumi.StringPtrOutput)
}

// The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/
func (o IntegrationRuntimeSsisCatalogInfoResponsePtrOutput) CatalogPricingTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCatalogInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.CatalogPricingTier
	}).(pulumi.StringPtrOutput)
}

// The catalog database server URL.
func (o IntegrationRuntimeSsisCatalogInfoResponsePtrOutput) CatalogServerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCatalogInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.CatalogServerEndpoint
	}).(pulumi.StringPtrOutput)
}

// SSIS properties for managed integration runtime.
type IntegrationRuntimeSsisProperties struct {
	// Catalog information for managed dedicated integration runtime.
	CatalogInfo *IntegrationRuntimeSsisCatalogInfo `pulumi:"catalogInfo"`
	// Custom setup script properties for a managed dedicated integration runtime.
	CustomSetupScriptProperties *IntegrationRuntimeCustomSetupScriptProperties `pulumi:"customSetupScriptProperties"`
	// Data proxy properties for a managed dedicated integration runtime.
	DataProxyProperties *IntegrationRuntimeDataProxyProperties `pulumi:"dataProxyProperties"`
	// The edition for the SSIS Integration Runtime
	Edition *string `pulumi:"edition"`
	// License type for bringing your own license scenario.
	LicenseType *string `pulumi:"licenseType"`
}

// IntegrationRuntimeSsisPropertiesInput is an input type that accepts IntegrationRuntimeSsisPropertiesArgs and IntegrationRuntimeSsisPropertiesOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisPropertiesInput` via:
//
//          IntegrationRuntimeSsisPropertiesArgs{...}
type IntegrationRuntimeSsisPropertiesInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisPropertiesOutput() IntegrationRuntimeSsisPropertiesOutput
	ToIntegrationRuntimeSsisPropertiesOutputWithContext(context.Context) IntegrationRuntimeSsisPropertiesOutput
}

// SSIS properties for managed integration runtime.
type IntegrationRuntimeSsisPropertiesArgs struct {
	// Catalog information for managed dedicated integration runtime.
	CatalogInfo IntegrationRuntimeSsisCatalogInfoPtrInput `pulumi:"catalogInfo"`
	// Custom setup script properties for a managed dedicated integration runtime.
	CustomSetupScriptProperties IntegrationRuntimeCustomSetupScriptPropertiesPtrInput `pulumi:"customSetupScriptProperties"`
	// Data proxy properties for a managed dedicated integration runtime.
	DataProxyProperties IntegrationRuntimeDataProxyPropertiesPtrInput `pulumi:"dataProxyProperties"`
	// The edition for the SSIS Integration Runtime
	Edition pulumi.StringPtrInput `pulumi:"edition"`
	// License type for bringing your own license scenario.
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
}

func (IntegrationRuntimeSsisPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisProperties)(nil)).Elem()
}

func (i IntegrationRuntimeSsisPropertiesArgs) ToIntegrationRuntimeSsisPropertiesOutput() IntegrationRuntimeSsisPropertiesOutput {
	return i.ToIntegrationRuntimeSsisPropertiesOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisPropertiesArgs) ToIntegrationRuntimeSsisPropertiesOutputWithContext(ctx context.Context) IntegrationRuntimeSsisPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisPropertiesOutput)
}

func (i IntegrationRuntimeSsisPropertiesArgs) ToIntegrationRuntimeSsisPropertiesPtrOutput() IntegrationRuntimeSsisPropertiesPtrOutput {
	return i.ToIntegrationRuntimeSsisPropertiesPtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisPropertiesArgs) ToIntegrationRuntimeSsisPropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisPropertiesOutput).ToIntegrationRuntimeSsisPropertiesPtrOutputWithContext(ctx)
}

// IntegrationRuntimeSsisPropertiesPtrInput is an input type that accepts IntegrationRuntimeSsisPropertiesArgs, IntegrationRuntimeSsisPropertiesPtr and IntegrationRuntimeSsisPropertiesPtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisPropertiesPtrInput` via:
//
//          IntegrationRuntimeSsisPropertiesArgs{...}
//
//  or:
//
//          nil
type IntegrationRuntimeSsisPropertiesPtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisPropertiesPtrOutput() IntegrationRuntimeSsisPropertiesPtrOutput
	ToIntegrationRuntimeSsisPropertiesPtrOutputWithContext(context.Context) IntegrationRuntimeSsisPropertiesPtrOutput
}

type integrationRuntimeSsisPropertiesPtrType IntegrationRuntimeSsisPropertiesArgs

func IntegrationRuntimeSsisPropertiesPtr(v *IntegrationRuntimeSsisPropertiesArgs) IntegrationRuntimeSsisPropertiesPtrInput {
	return (*integrationRuntimeSsisPropertiesPtrType)(v)
}

func (*integrationRuntimeSsisPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisProperties)(nil)).Elem()
}

func (i *integrationRuntimeSsisPropertiesPtrType) ToIntegrationRuntimeSsisPropertiesPtrOutput() IntegrationRuntimeSsisPropertiesPtrOutput {
	return i.ToIntegrationRuntimeSsisPropertiesPtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeSsisPropertiesPtrType) ToIntegrationRuntimeSsisPropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisPropertiesPtrOutput)
}

// SSIS properties for managed integration runtime.
type IntegrationRuntimeSsisPropertiesOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisProperties)(nil)).Elem()
}

func (o IntegrationRuntimeSsisPropertiesOutput) ToIntegrationRuntimeSsisPropertiesOutput() IntegrationRuntimeSsisPropertiesOutput {
	return o
}

func (o IntegrationRuntimeSsisPropertiesOutput) ToIntegrationRuntimeSsisPropertiesOutputWithContext(ctx context.Context) IntegrationRuntimeSsisPropertiesOutput {
	return o
}

func (o IntegrationRuntimeSsisPropertiesOutput) ToIntegrationRuntimeSsisPropertiesPtrOutput() IntegrationRuntimeSsisPropertiesPtrOutput {
	return o.ToIntegrationRuntimeSsisPropertiesPtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeSsisPropertiesOutput) ToIntegrationRuntimeSsisPropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisPropertiesPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisProperties) *IntegrationRuntimeSsisProperties {
		return &v
	}).(IntegrationRuntimeSsisPropertiesPtrOutput)
}

// Catalog information for managed dedicated integration runtime.
func (o IntegrationRuntimeSsisPropertiesOutput) CatalogInfo() IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisProperties) *IntegrationRuntimeSsisCatalogInfo { return v.CatalogInfo }).(IntegrationRuntimeSsisCatalogInfoPtrOutput)
}

// Custom setup script properties for a managed dedicated integration runtime.
func (o IntegrationRuntimeSsisPropertiesOutput) CustomSetupScriptProperties() IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisProperties) *IntegrationRuntimeCustomSetupScriptProperties {
		return v.CustomSetupScriptProperties
	}).(IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput)
}

// Data proxy properties for a managed dedicated integration runtime.
func (o IntegrationRuntimeSsisPropertiesOutput) DataProxyProperties() IntegrationRuntimeDataProxyPropertiesPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisProperties) *IntegrationRuntimeDataProxyProperties {
		return v.DataProxyProperties
	}).(IntegrationRuntimeDataProxyPropertiesPtrOutput)
}

// The edition for the SSIS Integration Runtime
func (o IntegrationRuntimeSsisPropertiesOutput) Edition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisProperties) *string { return v.Edition }).(pulumi.StringPtrOutput)
}

// License type for bringing your own license scenario.
func (o IntegrationRuntimeSsisPropertiesOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisProperties) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeSsisPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisProperties)(nil)).Elem()
}

func (o IntegrationRuntimeSsisPropertiesPtrOutput) ToIntegrationRuntimeSsisPropertiesPtrOutput() IntegrationRuntimeSsisPropertiesPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisPropertiesPtrOutput) ToIntegrationRuntimeSsisPropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisPropertiesPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisPropertiesPtrOutput) Elem() IntegrationRuntimeSsisPropertiesOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisProperties) IntegrationRuntimeSsisProperties { return *v }).(IntegrationRuntimeSsisPropertiesOutput)
}

// Catalog information for managed dedicated integration runtime.
func (o IntegrationRuntimeSsisPropertiesPtrOutput) CatalogInfo() IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisProperties) *IntegrationRuntimeSsisCatalogInfo {
		if v == nil {
			return nil
		}
		return v.CatalogInfo
	}).(IntegrationRuntimeSsisCatalogInfoPtrOutput)
}

// Custom setup script properties for a managed dedicated integration runtime.
func (o IntegrationRuntimeSsisPropertiesPtrOutput) CustomSetupScriptProperties() IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisProperties) *IntegrationRuntimeCustomSetupScriptProperties {
		if v == nil {
			return nil
		}
		return v.CustomSetupScriptProperties
	}).(IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput)
}

// Data proxy properties for a managed dedicated integration runtime.
func (o IntegrationRuntimeSsisPropertiesPtrOutput) DataProxyProperties() IntegrationRuntimeDataProxyPropertiesPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisProperties) *IntegrationRuntimeDataProxyProperties {
		if v == nil {
			return nil
		}
		return v.DataProxyProperties
	}).(IntegrationRuntimeDataProxyPropertiesPtrOutput)
}

// The edition for the SSIS Integration Runtime
func (o IntegrationRuntimeSsisPropertiesPtrOutput) Edition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisProperties) *string {
		if v == nil {
			return nil
		}
		return v.Edition
	}).(pulumi.StringPtrOutput)
}

// License type for bringing your own license scenario.
func (o IntegrationRuntimeSsisPropertiesPtrOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisProperties) *string {
		if v == nil {
			return nil
		}
		return v.LicenseType
	}).(pulumi.StringPtrOutput)
}

// SSIS properties for managed integration runtime.
type IntegrationRuntimeSsisPropertiesResponse struct {
	// Catalog information for managed dedicated integration runtime.
	CatalogInfo *IntegrationRuntimeSsisCatalogInfoResponse `pulumi:"catalogInfo"`
	// Custom setup script properties for a managed dedicated integration runtime.
	CustomSetupScriptProperties *IntegrationRuntimeCustomSetupScriptPropertiesResponse `pulumi:"customSetupScriptProperties"`
	// Data proxy properties for a managed dedicated integration runtime.
	DataProxyProperties *IntegrationRuntimeDataProxyPropertiesResponse `pulumi:"dataProxyProperties"`
	// The edition for the SSIS Integration Runtime
	Edition *string `pulumi:"edition"`
	// License type for bringing your own license scenario.
	LicenseType *string `pulumi:"licenseType"`
}

// IntegrationRuntimeSsisPropertiesResponseInput is an input type that accepts IntegrationRuntimeSsisPropertiesResponseArgs and IntegrationRuntimeSsisPropertiesResponseOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisPropertiesResponseInput` via:
//
//          IntegrationRuntimeSsisPropertiesResponseArgs{...}
type IntegrationRuntimeSsisPropertiesResponseInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisPropertiesResponseOutput() IntegrationRuntimeSsisPropertiesResponseOutput
	ToIntegrationRuntimeSsisPropertiesResponseOutputWithContext(context.Context) IntegrationRuntimeSsisPropertiesResponseOutput
}

// SSIS properties for managed integration runtime.
type IntegrationRuntimeSsisPropertiesResponseArgs struct {
	// Catalog information for managed dedicated integration runtime.
	CatalogInfo IntegrationRuntimeSsisCatalogInfoResponsePtrInput `pulumi:"catalogInfo"`
	// Custom setup script properties for a managed dedicated integration runtime.
	CustomSetupScriptProperties IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrInput `pulumi:"customSetupScriptProperties"`
	// Data proxy properties for a managed dedicated integration runtime.
	DataProxyProperties IntegrationRuntimeDataProxyPropertiesResponsePtrInput `pulumi:"dataProxyProperties"`
	// The edition for the SSIS Integration Runtime
	Edition pulumi.StringPtrInput `pulumi:"edition"`
	// License type for bringing your own license scenario.
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
}

func (IntegrationRuntimeSsisPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisPropertiesResponse)(nil)).Elem()
}

func (i IntegrationRuntimeSsisPropertiesResponseArgs) ToIntegrationRuntimeSsisPropertiesResponseOutput() IntegrationRuntimeSsisPropertiesResponseOutput {
	return i.ToIntegrationRuntimeSsisPropertiesResponseOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisPropertiesResponseArgs) ToIntegrationRuntimeSsisPropertiesResponseOutputWithContext(ctx context.Context) IntegrationRuntimeSsisPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisPropertiesResponseOutput)
}

func (i IntegrationRuntimeSsisPropertiesResponseArgs) ToIntegrationRuntimeSsisPropertiesResponsePtrOutput() IntegrationRuntimeSsisPropertiesResponsePtrOutput {
	return i.ToIntegrationRuntimeSsisPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisPropertiesResponseArgs) ToIntegrationRuntimeSsisPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisPropertiesResponseOutput).ToIntegrationRuntimeSsisPropertiesResponsePtrOutputWithContext(ctx)
}

// IntegrationRuntimeSsisPropertiesResponsePtrInput is an input type that accepts IntegrationRuntimeSsisPropertiesResponseArgs, IntegrationRuntimeSsisPropertiesResponsePtr and IntegrationRuntimeSsisPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisPropertiesResponsePtrInput` via:
//
//          IntegrationRuntimeSsisPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type IntegrationRuntimeSsisPropertiesResponsePtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisPropertiesResponsePtrOutput() IntegrationRuntimeSsisPropertiesResponsePtrOutput
	ToIntegrationRuntimeSsisPropertiesResponsePtrOutputWithContext(context.Context) IntegrationRuntimeSsisPropertiesResponsePtrOutput
}

type integrationRuntimeSsisPropertiesResponsePtrType IntegrationRuntimeSsisPropertiesResponseArgs

func IntegrationRuntimeSsisPropertiesResponsePtr(v *IntegrationRuntimeSsisPropertiesResponseArgs) IntegrationRuntimeSsisPropertiesResponsePtrInput {
	return (*integrationRuntimeSsisPropertiesResponsePtrType)(v)
}

func (*integrationRuntimeSsisPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisPropertiesResponse)(nil)).Elem()
}

func (i *integrationRuntimeSsisPropertiesResponsePtrType) ToIntegrationRuntimeSsisPropertiesResponsePtrOutput() IntegrationRuntimeSsisPropertiesResponsePtrOutput {
	return i.ToIntegrationRuntimeSsisPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeSsisPropertiesResponsePtrType) ToIntegrationRuntimeSsisPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisPropertiesResponsePtrOutput)
}

// SSIS properties for managed integration runtime.
type IntegrationRuntimeSsisPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisPropertiesResponse)(nil)).Elem()
}

func (o IntegrationRuntimeSsisPropertiesResponseOutput) ToIntegrationRuntimeSsisPropertiesResponseOutput() IntegrationRuntimeSsisPropertiesResponseOutput {
	return o
}

func (o IntegrationRuntimeSsisPropertiesResponseOutput) ToIntegrationRuntimeSsisPropertiesResponseOutputWithContext(ctx context.Context) IntegrationRuntimeSsisPropertiesResponseOutput {
	return o
}

func (o IntegrationRuntimeSsisPropertiesResponseOutput) ToIntegrationRuntimeSsisPropertiesResponsePtrOutput() IntegrationRuntimeSsisPropertiesResponsePtrOutput {
	return o.ToIntegrationRuntimeSsisPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeSsisPropertiesResponseOutput) ToIntegrationRuntimeSsisPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisPropertiesResponse) *IntegrationRuntimeSsisPropertiesResponse {
		return &v
	}).(IntegrationRuntimeSsisPropertiesResponsePtrOutput)
}

// Catalog information for managed dedicated integration runtime.
func (o IntegrationRuntimeSsisPropertiesResponseOutput) CatalogInfo() IntegrationRuntimeSsisCatalogInfoResponsePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisPropertiesResponse) *IntegrationRuntimeSsisCatalogInfoResponse {
		return v.CatalogInfo
	}).(IntegrationRuntimeSsisCatalogInfoResponsePtrOutput)
}

// Custom setup script properties for a managed dedicated integration runtime.
func (o IntegrationRuntimeSsisPropertiesResponseOutput) CustomSetupScriptProperties() IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisPropertiesResponse) *IntegrationRuntimeCustomSetupScriptPropertiesResponse {
		return v.CustomSetupScriptProperties
	}).(IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput)
}

// Data proxy properties for a managed dedicated integration runtime.
func (o IntegrationRuntimeSsisPropertiesResponseOutput) DataProxyProperties() IntegrationRuntimeDataProxyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisPropertiesResponse) *IntegrationRuntimeDataProxyPropertiesResponse {
		return v.DataProxyProperties
	}).(IntegrationRuntimeDataProxyPropertiesResponsePtrOutput)
}

// The edition for the SSIS Integration Runtime
func (o IntegrationRuntimeSsisPropertiesResponseOutput) Edition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisPropertiesResponse) *string { return v.Edition }).(pulumi.StringPtrOutput)
}

// License type for bringing your own license scenario.
func (o IntegrationRuntimeSsisPropertiesResponseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisPropertiesResponse) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeSsisPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisPropertiesResponse)(nil)).Elem()
}

func (o IntegrationRuntimeSsisPropertiesResponsePtrOutput) ToIntegrationRuntimeSsisPropertiesResponsePtrOutput() IntegrationRuntimeSsisPropertiesResponsePtrOutput {
	return o
}

func (o IntegrationRuntimeSsisPropertiesResponsePtrOutput) ToIntegrationRuntimeSsisPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisPropertiesResponsePtrOutput {
	return o
}

func (o IntegrationRuntimeSsisPropertiesResponsePtrOutput) Elem() IntegrationRuntimeSsisPropertiesResponseOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisPropertiesResponse) IntegrationRuntimeSsisPropertiesResponse { return *v }).(IntegrationRuntimeSsisPropertiesResponseOutput)
}

// Catalog information for managed dedicated integration runtime.
func (o IntegrationRuntimeSsisPropertiesResponsePtrOutput) CatalogInfo() IntegrationRuntimeSsisCatalogInfoResponsePtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisPropertiesResponse) *IntegrationRuntimeSsisCatalogInfoResponse {
		if v == nil {
			return nil
		}
		return v.CatalogInfo
	}).(IntegrationRuntimeSsisCatalogInfoResponsePtrOutput)
}

// Custom setup script properties for a managed dedicated integration runtime.
func (o IntegrationRuntimeSsisPropertiesResponsePtrOutput) CustomSetupScriptProperties() IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisPropertiesResponse) *IntegrationRuntimeCustomSetupScriptPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.CustomSetupScriptProperties
	}).(IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput)
}

// Data proxy properties for a managed dedicated integration runtime.
func (o IntegrationRuntimeSsisPropertiesResponsePtrOutput) DataProxyProperties() IntegrationRuntimeDataProxyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisPropertiesResponse) *IntegrationRuntimeDataProxyPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.DataProxyProperties
	}).(IntegrationRuntimeDataProxyPropertiesResponsePtrOutput)
}

// The edition for the SSIS Integration Runtime
func (o IntegrationRuntimeSsisPropertiesResponsePtrOutput) Edition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Edition
	}).(pulumi.StringPtrOutput)
}

// License type for bringing your own license scenario.
func (o IntegrationRuntimeSsisPropertiesResponsePtrOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LicenseType
	}).(pulumi.StringPtrOutput)
}

// VNet properties for managed integration runtime.
type IntegrationRuntimeVNetProperties struct {
	// The name of the subnet this integration runtime will join.
	Subnet *string `pulumi:"subnet"`
	// The ID of the VNet that this integration runtime will join.
	VNetId *string `pulumi:"vNetId"`
}

// IntegrationRuntimeVNetPropertiesInput is an input type that accepts IntegrationRuntimeVNetPropertiesArgs and IntegrationRuntimeVNetPropertiesOutput values.
// You can construct a concrete instance of `IntegrationRuntimeVNetPropertiesInput` via:
//
//          IntegrationRuntimeVNetPropertiesArgs{...}
type IntegrationRuntimeVNetPropertiesInput interface {
	pulumi.Input

	ToIntegrationRuntimeVNetPropertiesOutput() IntegrationRuntimeVNetPropertiesOutput
	ToIntegrationRuntimeVNetPropertiesOutputWithContext(context.Context) IntegrationRuntimeVNetPropertiesOutput
}

// VNet properties for managed integration runtime.
type IntegrationRuntimeVNetPropertiesArgs struct {
	// The name of the subnet this integration runtime will join.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// The ID of the VNet that this integration runtime will join.
	VNetId pulumi.StringPtrInput `pulumi:"vNetId"`
}

func (IntegrationRuntimeVNetPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeVNetProperties)(nil)).Elem()
}

func (i IntegrationRuntimeVNetPropertiesArgs) ToIntegrationRuntimeVNetPropertiesOutput() IntegrationRuntimeVNetPropertiesOutput {
	return i.ToIntegrationRuntimeVNetPropertiesOutputWithContext(context.Background())
}

func (i IntegrationRuntimeVNetPropertiesArgs) ToIntegrationRuntimeVNetPropertiesOutputWithContext(ctx context.Context) IntegrationRuntimeVNetPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeVNetPropertiesOutput)
}

func (i IntegrationRuntimeVNetPropertiesArgs) ToIntegrationRuntimeVNetPropertiesPtrOutput() IntegrationRuntimeVNetPropertiesPtrOutput {
	return i.ToIntegrationRuntimeVNetPropertiesPtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeVNetPropertiesArgs) ToIntegrationRuntimeVNetPropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeVNetPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeVNetPropertiesOutput).ToIntegrationRuntimeVNetPropertiesPtrOutputWithContext(ctx)
}

// IntegrationRuntimeVNetPropertiesPtrInput is an input type that accepts IntegrationRuntimeVNetPropertiesArgs, IntegrationRuntimeVNetPropertiesPtr and IntegrationRuntimeVNetPropertiesPtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeVNetPropertiesPtrInput` via:
//
//          IntegrationRuntimeVNetPropertiesArgs{...}
//
//  or:
//
//          nil
type IntegrationRuntimeVNetPropertiesPtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeVNetPropertiesPtrOutput() IntegrationRuntimeVNetPropertiesPtrOutput
	ToIntegrationRuntimeVNetPropertiesPtrOutputWithContext(context.Context) IntegrationRuntimeVNetPropertiesPtrOutput
}

type integrationRuntimeVNetPropertiesPtrType IntegrationRuntimeVNetPropertiesArgs

func IntegrationRuntimeVNetPropertiesPtr(v *IntegrationRuntimeVNetPropertiesArgs) IntegrationRuntimeVNetPropertiesPtrInput {
	return (*integrationRuntimeVNetPropertiesPtrType)(v)
}

func (*integrationRuntimeVNetPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeVNetProperties)(nil)).Elem()
}

func (i *integrationRuntimeVNetPropertiesPtrType) ToIntegrationRuntimeVNetPropertiesPtrOutput() IntegrationRuntimeVNetPropertiesPtrOutput {
	return i.ToIntegrationRuntimeVNetPropertiesPtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeVNetPropertiesPtrType) ToIntegrationRuntimeVNetPropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeVNetPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeVNetPropertiesPtrOutput)
}

// VNet properties for managed integration runtime.
type IntegrationRuntimeVNetPropertiesOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeVNetPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeVNetProperties)(nil)).Elem()
}

func (o IntegrationRuntimeVNetPropertiesOutput) ToIntegrationRuntimeVNetPropertiesOutput() IntegrationRuntimeVNetPropertiesOutput {
	return o
}

func (o IntegrationRuntimeVNetPropertiesOutput) ToIntegrationRuntimeVNetPropertiesOutputWithContext(ctx context.Context) IntegrationRuntimeVNetPropertiesOutput {
	return o
}

func (o IntegrationRuntimeVNetPropertiesOutput) ToIntegrationRuntimeVNetPropertiesPtrOutput() IntegrationRuntimeVNetPropertiesPtrOutput {
	return o.ToIntegrationRuntimeVNetPropertiesPtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeVNetPropertiesOutput) ToIntegrationRuntimeVNetPropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeVNetPropertiesPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeVNetProperties) *IntegrationRuntimeVNetProperties {
		return &v
	}).(IntegrationRuntimeVNetPropertiesPtrOutput)
}

// The name of the subnet this integration runtime will join.
func (o IntegrationRuntimeVNetPropertiesOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeVNetProperties) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// The ID of the VNet that this integration runtime will join.
func (o IntegrationRuntimeVNetPropertiesOutput) VNetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeVNetProperties) *string { return v.VNetId }).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeVNetPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeVNetPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeVNetProperties)(nil)).Elem()
}

func (o IntegrationRuntimeVNetPropertiesPtrOutput) ToIntegrationRuntimeVNetPropertiesPtrOutput() IntegrationRuntimeVNetPropertiesPtrOutput {
	return o
}

func (o IntegrationRuntimeVNetPropertiesPtrOutput) ToIntegrationRuntimeVNetPropertiesPtrOutputWithContext(ctx context.Context) IntegrationRuntimeVNetPropertiesPtrOutput {
	return o
}

func (o IntegrationRuntimeVNetPropertiesPtrOutput) Elem() IntegrationRuntimeVNetPropertiesOutput {
	return o.ApplyT(func(v *IntegrationRuntimeVNetProperties) IntegrationRuntimeVNetProperties { return *v }).(IntegrationRuntimeVNetPropertiesOutput)
}

// The name of the subnet this integration runtime will join.
func (o IntegrationRuntimeVNetPropertiesPtrOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeVNetProperties) *string {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(pulumi.StringPtrOutput)
}

// The ID of the VNet that this integration runtime will join.
func (o IntegrationRuntimeVNetPropertiesPtrOutput) VNetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeVNetProperties) *string {
		if v == nil {
			return nil
		}
		return v.VNetId
	}).(pulumi.StringPtrOutput)
}

// VNet properties for managed integration runtime.
type IntegrationRuntimeVNetPropertiesResponse struct {
	// The name of the subnet this integration runtime will join.
	Subnet *string `pulumi:"subnet"`
	// The ID of the VNet that this integration runtime will join.
	VNetId *string `pulumi:"vNetId"`
}

// IntegrationRuntimeVNetPropertiesResponseInput is an input type that accepts IntegrationRuntimeVNetPropertiesResponseArgs and IntegrationRuntimeVNetPropertiesResponseOutput values.
// You can construct a concrete instance of `IntegrationRuntimeVNetPropertiesResponseInput` via:
//
//          IntegrationRuntimeVNetPropertiesResponseArgs{...}
type IntegrationRuntimeVNetPropertiesResponseInput interface {
	pulumi.Input

	ToIntegrationRuntimeVNetPropertiesResponseOutput() IntegrationRuntimeVNetPropertiesResponseOutput
	ToIntegrationRuntimeVNetPropertiesResponseOutputWithContext(context.Context) IntegrationRuntimeVNetPropertiesResponseOutput
}

// VNet properties for managed integration runtime.
type IntegrationRuntimeVNetPropertiesResponseArgs struct {
	// The name of the subnet this integration runtime will join.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// The ID of the VNet that this integration runtime will join.
	VNetId pulumi.StringPtrInput `pulumi:"vNetId"`
}

func (IntegrationRuntimeVNetPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeVNetPropertiesResponse)(nil)).Elem()
}

func (i IntegrationRuntimeVNetPropertiesResponseArgs) ToIntegrationRuntimeVNetPropertiesResponseOutput() IntegrationRuntimeVNetPropertiesResponseOutput {
	return i.ToIntegrationRuntimeVNetPropertiesResponseOutputWithContext(context.Background())
}

func (i IntegrationRuntimeVNetPropertiesResponseArgs) ToIntegrationRuntimeVNetPropertiesResponseOutputWithContext(ctx context.Context) IntegrationRuntimeVNetPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeVNetPropertiesResponseOutput)
}

func (i IntegrationRuntimeVNetPropertiesResponseArgs) ToIntegrationRuntimeVNetPropertiesResponsePtrOutput() IntegrationRuntimeVNetPropertiesResponsePtrOutput {
	return i.ToIntegrationRuntimeVNetPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeVNetPropertiesResponseArgs) ToIntegrationRuntimeVNetPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeVNetPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeVNetPropertiesResponseOutput).ToIntegrationRuntimeVNetPropertiesResponsePtrOutputWithContext(ctx)
}

// IntegrationRuntimeVNetPropertiesResponsePtrInput is an input type that accepts IntegrationRuntimeVNetPropertiesResponseArgs, IntegrationRuntimeVNetPropertiesResponsePtr and IntegrationRuntimeVNetPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeVNetPropertiesResponsePtrInput` via:
//
//          IntegrationRuntimeVNetPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type IntegrationRuntimeVNetPropertiesResponsePtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeVNetPropertiesResponsePtrOutput() IntegrationRuntimeVNetPropertiesResponsePtrOutput
	ToIntegrationRuntimeVNetPropertiesResponsePtrOutputWithContext(context.Context) IntegrationRuntimeVNetPropertiesResponsePtrOutput
}

type integrationRuntimeVNetPropertiesResponsePtrType IntegrationRuntimeVNetPropertiesResponseArgs

func IntegrationRuntimeVNetPropertiesResponsePtr(v *IntegrationRuntimeVNetPropertiesResponseArgs) IntegrationRuntimeVNetPropertiesResponsePtrInput {
	return (*integrationRuntimeVNetPropertiesResponsePtrType)(v)
}

func (*integrationRuntimeVNetPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeVNetPropertiesResponse)(nil)).Elem()
}

func (i *integrationRuntimeVNetPropertiesResponsePtrType) ToIntegrationRuntimeVNetPropertiesResponsePtrOutput() IntegrationRuntimeVNetPropertiesResponsePtrOutput {
	return i.ToIntegrationRuntimeVNetPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeVNetPropertiesResponsePtrType) ToIntegrationRuntimeVNetPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeVNetPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeVNetPropertiesResponsePtrOutput)
}

// VNet properties for managed integration runtime.
type IntegrationRuntimeVNetPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeVNetPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeVNetPropertiesResponse)(nil)).Elem()
}

func (o IntegrationRuntimeVNetPropertiesResponseOutput) ToIntegrationRuntimeVNetPropertiesResponseOutput() IntegrationRuntimeVNetPropertiesResponseOutput {
	return o
}

func (o IntegrationRuntimeVNetPropertiesResponseOutput) ToIntegrationRuntimeVNetPropertiesResponseOutputWithContext(ctx context.Context) IntegrationRuntimeVNetPropertiesResponseOutput {
	return o
}

func (o IntegrationRuntimeVNetPropertiesResponseOutput) ToIntegrationRuntimeVNetPropertiesResponsePtrOutput() IntegrationRuntimeVNetPropertiesResponsePtrOutput {
	return o.ToIntegrationRuntimeVNetPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeVNetPropertiesResponseOutput) ToIntegrationRuntimeVNetPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeVNetPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeVNetPropertiesResponse) *IntegrationRuntimeVNetPropertiesResponse {
		return &v
	}).(IntegrationRuntimeVNetPropertiesResponsePtrOutput)
}

// The name of the subnet this integration runtime will join.
func (o IntegrationRuntimeVNetPropertiesResponseOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeVNetPropertiesResponse) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// The ID of the VNet that this integration runtime will join.
func (o IntegrationRuntimeVNetPropertiesResponseOutput) VNetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeVNetPropertiesResponse) *string { return v.VNetId }).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeVNetPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeVNetPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeVNetPropertiesResponse)(nil)).Elem()
}

func (o IntegrationRuntimeVNetPropertiesResponsePtrOutput) ToIntegrationRuntimeVNetPropertiesResponsePtrOutput() IntegrationRuntimeVNetPropertiesResponsePtrOutput {
	return o
}

func (o IntegrationRuntimeVNetPropertiesResponsePtrOutput) ToIntegrationRuntimeVNetPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationRuntimeVNetPropertiesResponsePtrOutput {
	return o
}

func (o IntegrationRuntimeVNetPropertiesResponsePtrOutput) Elem() IntegrationRuntimeVNetPropertiesResponseOutput {
	return o.ApplyT(func(v *IntegrationRuntimeVNetPropertiesResponse) IntegrationRuntimeVNetPropertiesResponse { return *v }).(IntegrationRuntimeVNetPropertiesResponseOutput)
}

// The name of the subnet this integration runtime will join.
func (o IntegrationRuntimeVNetPropertiesResponsePtrOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeVNetPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(pulumi.StringPtrOutput)
}

// The ID of the VNet that this integration runtime will join.
func (o IntegrationRuntimeVNetPropertiesResponsePtrOutput) VNetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeVNetPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.VNetId
	}).(pulumi.StringPtrOutput)
}

// Jira Service linked service.
type JiraLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The IP address or host name of the Jira service. (e.g. jira.example.com)
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The password corresponding to the user name that you provided in the username field.
	Password interface{} `pulumi:"password"`
	// The TCP port that the Jira server uses to listen for client connections. The default value is 443 if connecting through HTTPS, or 8080 if connecting through HTTP.
	Port interface{} `pulumi:"port"`
	// Type of linked service.
	// Expected value is 'Jira'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
	// The user name that you use to access Jira Service.
	Username interface{} `pulumi:"username"`
}

// JiraLinkedServiceInput is an input type that accepts JiraLinkedServiceArgs and JiraLinkedServiceOutput values.
// You can construct a concrete instance of `JiraLinkedServiceInput` via:
//
//          JiraLinkedServiceArgs{...}
type JiraLinkedServiceInput interface {
	pulumi.Input

	ToJiraLinkedServiceOutput() JiraLinkedServiceOutput
	ToJiraLinkedServiceOutputWithContext(context.Context) JiraLinkedServiceOutput
}

// Jira Service linked service.
type JiraLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The IP address or host name of the Jira service. (e.g. jira.example.com)
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The password corresponding to the user name that you provided in the username field.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port that the Jira server uses to listen for client connections. The default value is 443 if connecting through HTTPS, or 8080 if connecting through HTTP.
	Port pulumi.Input `pulumi:"port"`
	// Type of linked service.
	// Expected value is 'Jira'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
	// The user name that you use to access Jira Service.
	Username pulumi.Input `pulumi:"username"`
}

func (JiraLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraLinkedService)(nil)).Elem()
}

func (i JiraLinkedServiceArgs) ToJiraLinkedServiceOutput() JiraLinkedServiceOutput {
	return i.ToJiraLinkedServiceOutputWithContext(context.Background())
}

func (i JiraLinkedServiceArgs) ToJiraLinkedServiceOutputWithContext(ctx context.Context) JiraLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraLinkedServiceOutput)
}

// Jira Service linked service.
type JiraLinkedServiceOutput struct{ *pulumi.OutputState }

func (JiraLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraLinkedService)(nil)).Elem()
}

func (o JiraLinkedServiceOutput) ToJiraLinkedServiceOutput() JiraLinkedServiceOutput {
	return o
}

func (o JiraLinkedServiceOutput) ToJiraLinkedServiceOutputWithContext(ctx context.Context) JiraLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o JiraLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v JiraLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o JiraLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v JiraLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o JiraLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JiraLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o JiraLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The IP address or host name of the Jira service. (e.g. jira.example.com)
func (o JiraLinkedServiceOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraLinkedService) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o JiraLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v JiraLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The password corresponding to the user name that you provided in the username field.
func (o JiraLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port that the Jira server uses to listen for client connections. The default value is 443 if connecting through HTTPS, or 8080 if connecting through HTTP.
func (o JiraLinkedServiceOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraLinkedService) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Jira'.
func (o JiraLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JiraLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o JiraLinkedServiceOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraLinkedService) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o JiraLinkedServiceOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraLinkedService) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o JiraLinkedServiceOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraLinkedService) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// The user name that you use to access Jira Service.
func (o JiraLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Jira Service linked service.
type JiraLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The IP address or host name of the Jira service. (e.g. jira.example.com)
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The password corresponding to the user name that you provided in the username field.
	Password interface{} `pulumi:"password"`
	// The TCP port that the Jira server uses to listen for client connections. The default value is 443 if connecting through HTTPS, or 8080 if connecting through HTTP.
	Port interface{} `pulumi:"port"`
	// Type of linked service.
	// Expected value is 'Jira'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
	// The user name that you use to access Jira Service.
	Username interface{} `pulumi:"username"`
}

// JiraLinkedServiceResponseInput is an input type that accepts JiraLinkedServiceResponseArgs and JiraLinkedServiceResponseOutput values.
// You can construct a concrete instance of `JiraLinkedServiceResponseInput` via:
//
//          JiraLinkedServiceResponseArgs{...}
type JiraLinkedServiceResponseInput interface {
	pulumi.Input

	ToJiraLinkedServiceResponseOutput() JiraLinkedServiceResponseOutput
	ToJiraLinkedServiceResponseOutputWithContext(context.Context) JiraLinkedServiceResponseOutput
}

// Jira Service linked service.
type JiraLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The IP address or host name of the Jira service. (e.g. jira.example.com)
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The password corresponding to the user name that you provided in the username field.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port that the Jira server uses to listen for client connections. The default value is 443 if connecting through HTTPS, or 8080 if connecting through HTTP.
	Port pulumi.Input `pulumi:"port"`
	// Type of linked service.
	// Expected value is 'Jira'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
	// The user name that you use to access Jira Service.
	Username pulumi.Input `pulumi:"username"`
}

func (JiraLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraLinkedServiceResponse)(nil)).Elem()
}

func (i JiraLinkedServiceResponseArgs) ToJiraLinkedServiceResponseOutput() JiraLinkedServiceResponseOutput {
	return i.ToJiraLinkedServiceResponseOutputWithContext(context.Background())
}

func (i JiraLinkedServiceResponseArgs) ToJiraLinkedServiceResponseOutputWithContext(ctx context.Context) JiraLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraLinkedServiceResponseOutput)
}

// Jira Service linked service.
type JiraLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (JiraLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraLinkedServiceResponse)(nil)).Elem()
}

func (o JiraLinkedServiceResponseOutput) ToJiraLinkedServiceResponseOutput() JiraLinkedServiceResponseOutput {
	return o
}

func (o JiraLinkedServiceResponseOutput) ToJiraLinkedServiceResponseOutputWithContext(ctx context.Context) JiraLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o JiraLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v JiraLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o JiraLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v JiraLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o JiraLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JiraLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o JiraLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The IP address or host name of the Jira service. (e.g. jira.example.com)
func (o JiraLinkedServiceResponseOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraLinkedServiceResponse) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o JiraLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v JiraLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The password corresponding to the user name that you provided in the username field.
func (o JiraLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port that the Jira server uses to listen for client connections. The default value is 443 if connecting through HTTPS, or 8080 if connecting through HTTP.
func (o JiraLinkedServiceResponseOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraLinkedServiceResponse) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Jira'.
func (o JiraLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JiraLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o JiraLinkedServiceResponseOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraLinkedServiceResponse) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o JiraLinkedServiceResponseOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraLinkedServiceResponse) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o JiraLinkedServiceResponseOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraLinkedServiceResponse) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// The user name that you use to access Jira Service.
func (o JiraLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Jira Service dataset.
type JiraObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'JiraObject'.
	Type string `pulumi:"type"`
}

// JiraObjectDatasetInput is an input type that accepts JiraObjectDatasetArgs and JiraObjectDatasetOutput values.
// You can construct a concrete instance of `JiraObjectDatasetInput` via:
//
//          JiraObjectDatasetArgs{...}
type JiraObjectDatasetInput interface {
	pulumi.Input

	ToJiraObjectDatasetOutput() JiraObjectDatasetOutput
	ToJiraObjectDatasetOutputWithContext(context.Context) JiraObjectDatasetOutput
}

// Jira Service dataset.
type JiraObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'JiraObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (JiraObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraObjectDataset)(nil)).Elem()
}

func (i JiraObjectDatasetArgs) ToJiraObjectDatasetOutput() JiraObjectDatasetOutput {
	return i.ToJiraObjectDatasetOutputWithContext(context.Background())
}

func (i JiraObjectDatasetArgs) ToJiraObjectDatasetOutputWithContext(ctx context.Context) JiraObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraObjectDatasetOutput)
}

// Jira Service dataset.
type JiraObjectDatasetOutput struct{ *pulumi.OutputState }

func (JiraObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraObjectDataset)(nil)).Elem()
}

func (o JiraObjectDatasetOutput) ToJiraObjectDatasetOutput() JiraObjectDatasetOutput {
	return o
}

func (o JiraObjectDatasetOutput) ToJiraObjectDatasetOutputWithContext(ctx context.Context) JiraObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o JiraObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v JiraObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o JiraObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JiraObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o JiraObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v JiraObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o JiraObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v JiraObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o JiraObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'JiraObject'.
func (o JiraObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JiraObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Jira Service dataset.
type JiraObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'JiraObject'.
	Type string `pulumi:"type"`
}

// JiraObjectDatasetResponseInput is an input type that accepts JiraObjectDatasetResponseArgs and JiraObjectDatasetResponseOutput values.
// You can construct a concrete instance of `JiraObjectDatasetResponseInput` via:
//
//          JiraObjectDatasetResponseArgs{...}
type JiraObjectDatasetResponseInput interface {
	pulumi.Input

	ToJiraObjectDatasetResponseOutput() JiraObjectDatasetResponseOutput
	ToJiraObjectDatasetResponseOutputWithContext(context.Context) JiraObjectDatasetResponseOutput
}

// Jira Service dataset.
type JiraObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'JiraObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (JiraObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraObjectDatasetResponse)(nil)).Elem()
}

func (i JiraObjectDatasetResponseArgs) ToJiraObjectDatasetResponseOutput() JiraObjectDatasetResponseOutput {
	return i.ToJiraObjectDatasetResponseOutputWithContext(context.Background())
}

func (i JiraObjectDatasetResponseArgs) ToJiraObjectDatasetResponseOutputWithContext(ctx context.Context) JiraObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraObjectDatasetResponseOutput)
}

// Jira Service dataset.
type JiraObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (JiraObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraObjectDatasetResponse)(nil)).Elem()
}

func (o JiraObjectDatasetResponseOutput) ToJiraObjectDatasetResponseOutput() JiraObjectDatasetResponseOutput {
	return o
}

func (o JiraObjectDatasetResponseOutput) ToJiraObjectDatasetResponseOutputWithContext(ctx context.Context) JiraObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o JiraObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v JiraObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o JiraObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JiraObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o JiraObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v JiraObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o JiraObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v JiraObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o JiraObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'JiraObject'.
func (o JiraObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JiraObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Jira Service source.
type JiraSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'JiraSource'.
	Type string `pulumi:"type"`
}

// JiraSourceInput is an input type that accepts JiraSourceArgs and JiraSourceOutput values.
// You can construct a concrete instance of `JiraSourceInput` via:
//
//          JiraSourceArgs{...}
type JiraSourceInput interface {
	pulumi.Input

	ToJiraSourceOutput() JiraSourceOutput
	ToJiraSourceOutputWithContext(context.Context) JiraSourceOutput
}

// A copy activity Jira Service source.
type JiraSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'JiraSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (JiraSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraSource)(nil)).Elem()
}

func (i JiraSourceArgs) ToJiraSourceOutput() JiraSourceOutput {
	return i.ToJiraSourceOutputWithContext(context.Background())
}

func (i JiraSourceArgs) ToJiraSourceOutputWithContext(ctx context.Context) JiraSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraSourceOutput)
}

// A copy activity Jira Service source.
type JiraSourceOutput struct{ *pulumi.OutputState }

func (JiraSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraSource)(nil)).Elem()
}

func (o JiraSourceOutput) ToJiraSourceOutput() JiraSourceOutput {
	return o
}

func (o JiraSourceOutput) ToJiraSourceOutputWithContext(ctx context.Context) JiraSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o JiraSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o JiraSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o JiraSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'JiraSource'.
func (o JiraSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JiraSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Jira Service source.
type JiraSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'JiraSource'.
	Type string `pulumi:"type"`
}

// JiraSourceResponseInput is an input type that accepts JiraSourceResponseArgs and JiraSourceResponseOutput values.
// You can construct a concrete instance of `JiraSourceResponseInput` via:
//
//          JiraSourceResponseArgs{...}
type JiraSourceResponseInput interface {
	pulumi.Input

	ToJiraSourceResponseOutput() JiraSourceResponseOutput
	ToJiraSourceResponseOutputWithContext(context.Context) JiraSourceResponseOutput
}

// A copy activity Jira Service source.
type JiraSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'JiraSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (JiraSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraSourceResponse)(nil)).Elem()
}

func (i JiraSourceResponseArgs) ToJiraSourceResponseOutput() JiraSourceResponseOutput {
	return i.ToJiraSourceResponseOutputWithContext(context.Background())
}

func (i JiraSourceResponseArgs) ToJiraSourceResponseOutputWithContext(ctx context.Context) JiraSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraSourceResponseOutput)
}

// A copy activity Jira Service source.
type JiraSourceResponseOutput struct{ *pulumi.OutputState }

func (JiraSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraSourceResponse)(nil)).Elem()
}

func (o JiraSourceResponseOutput) ToJiraSourceResponseOutput() JiraSourceResponseOutput {
	return o
}

func (o JiraSourceResponseOutput) ToJiraSourceResponseOutputWithContext(ctx context.Context) JiraSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o JiraSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o JiraSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o JiraSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v JiraSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'JiraSource'.
func (o JiraSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JiraSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The data stored in JSON format.
type JsonFormat struct {
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer interface{} `pulumi:"deserializer"`
	// The code page name of the preferred encoding. If not provided, the default value is 'utf-8', unless the byte order mark (BOM) denotes another Unicode encoding. The full list of supported values can be found in the 'Name' column of the table of encodings in the following reference: https://go.microsoft.com/fwlink/?linkid=861078. Type: string (or Expression with resultType string).
	EncodingName interface{} `pulumi:"encodingName"`
	// File pattern of JSON. To be more specific, the way of separating a collection of JSON objects. The default value is 'setOfObjects'. It is case-sensitive.
	FilePattern *string `pulumi:"filePattern"`
	// The JSONPath of the JSON array element to be flattened. Example: "$.ArrayPath". Type: string (or Expression with resultType string).
	JsonNodeReference interface{} `pulumi:"jsonNodeReference"`
	// The JSONPath definition for each column mapping with a customized column name to extract data from JSON file. For fields under root object, start with "$"; for fields inside the array chosen by jsonNodeReference property, start from the array element. Example: {"Column1": "$.Column1Path", "Column2": "Column2PathInArray"}. Type: object (or Expression with resultType object).
	JsonPathDefinition interface{} `pulumi:"jsonPathDefinition"`
	// The character used to separate nesting levels. Default value is '.' (dot). Type: string (or Expression with resultType string).
	NestingSeparator interface{} `pulumi:"nestingSeparator"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer interface{} `pulumi:"serializer"`
	// Type of dataset storage format.
	// Expected value is 'JsonFormat'.
	Type string `pulumi:"type"`
}

// JsonFormatInput is an input type that accepts JsonFormatArgs and JsonFormatOutput values.
// You can construct a concrete instance of `JsonFormatInput` via:
//
//          JsonFormatArgs{...}
type JsonFormatInput interface {
	pulumi.Input

	ToJsonFormatOutput() JsonFormatOutput
	ToJsonFormatOutputWithContext(context.Context) JsonFormatOutput
}

// The data stored in JSON format.
type JsonFormatArgs struct {
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer pulumi.Input `pulumi:"deserializer"`
	// The code page name of the preferred encoding. If not provided, the default value is 'utf-8', unless the byte order mark (BOM) denotes another Unicode encoding. The full list of supported values can be found in the 'Name' column of the table of encodings in the following reference: https://go.microsoft.com/fwlink/?linkid=861078. Type: string (or Expression with resultType string).
	EncodingName pulumi.Input `pulumi:"encodingName"`
	// File pattern of JSON. To be more specific, the way of separating a collection of JSON objects. The default value is 'setOfObjects'. It is case-sensitive.
	FilePattern pulumi.StringPtrInput `pulumi:"filePattern"`
	// The JSONPath of the JSON array element to be flattened. Example: "$.ArrayPath". Type: string (or Expression with resultType string).
	JsonNodeReference pulumi.Input `pulumi:"jsonNodeReference"`
	// The JSONPath definition for each column mapping with a customized column name to extract data from JSON file. For fields under root object, start with "$"; for fields inside the array chosen by jsonNodeReference property, start from the array element. Example: {"Column1": "$.Column1Path", "Column2": "Column2PathInArray"}. Type: object (or Expression with resultType object).
	JsonPathDefinition pulumi.Input `pulumi:"jsonPathDefinition"`
	// The character used to separate nesting levels. Default value is '.' (dot). Type: string (or Expression with resultType string).
	NestingSeparator pulumi.Input `pulumi:"nestingSeparator"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer pulumi.Input `pulumi:"serializer"`
	// Type of dataset storage format.
	// Expected value is 'JsonFormat'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (JsonFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JsonFormat)(nil)).Elem()
}

func (i JsonFormatArgs) ToJsonFormatOutput() JsonFormatOutput {
	return i.ToJsonFormatOutputWithContext(context.Background())
}

func (i JsonFormatArgs) ToJsonFormatOutputWithContext(ctx context.Context) JsonFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JsonFormatOutput)
}

// The data stored in JSON format.
type JsonFormatOutput struct{ *pulumi.OutputState }

func (JsonFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JsonFormat)(nil)).Elem()
}

func (o JsonFormatOutput) ToJsonFormatOutput() JsonFormatOutput {
	return o
}

func (o JsonFormatOutput) ToJsonFormatOutputWithContext(ctx context.Context) JsonFormatOutput {
	return o
}

// Deserializer. Type: string (or Expression with resultType string).
func (o JsonFormatOutput) Deserializer() pulumi.AnyOutput {
	return o.ApplyT(func(v JsonFormat) interface{} { return v.Deserializer }).(pulumi.AnyOutput)
}

// The code page name of the preferred encoding. If not provided, the default value is 'utf-8', unless the byte order mark (BOM) denotes another Unicode encoding. The full list of supported values can be found in the 'Name' column of the table of encodings in the following reference: https://go.microsoft.com/fwlink/?linkid=861078. Type: string (or Expression with resultType string).
func (o JsonFormatOutput) EncodingName() pulumi.AnyOutput {
	return o.ApplyT(func(v JsonFormat) interface{} { return v.EncodingName }).(pulumi.AnyOutput)
}

// File pattern of JSON. To be more specific, the way of separating a collection of JSON objects. The default value is 'setOfObjects'. It is case-sensitive.
func (o JsonFormatOutput) FilePattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JsonFormat) *string { return v.FilePattern }).(pulumi.StringPtrOutput)
}

// The JSONPath of the JSON array element to be flattened. Example: "$.ArrayPath". Type: string (or Expression with resultType string).
func (o JsonFormatOutput) JsonNodeReference() pulumi.AnyOutput {
	return o.ApplyT(func(v JsonFormat) interface{} { return v.JsonNodeReference }).(pulumi.AnyOutput)
}

// The JSONPath definition for each column mapping with a customized column name to extract data from JSON file. For fields under root object, start with "$"; for fields inside the array chosen by jsonNodeReference property, start from the array element. Example: {"Column1": "$.Column1Path", "Column2": "Column2PathInArray"}. Type: object (or Expression with resultType object).
func (o JsonFormatOutput) JsonPathDefinition() pulumi.AnyOutput {
	return o.ApplyT(func(v JsonFormat) interface{} { return v.JsonPathDefinition }).(pulumi.AnyOutput)
}

// The character used to separate nesting levels. Default value is '.' (dot). Type: string (or Expression with resultType string).
func (o JsonFormatOutput) NestingSeparator() pulumi.AnyOutput {
	return o.ApplyT(func(v JsonFormat) interface{} { return v.NestingSeparator }).(pulumi.AnyOutput)
}

// Serializer. Type: string (or Expression with resultType string).
func (o JsonFormatOutput) Serializer() pulumi.AnyOutput {
	return o.ApplyT(func(v JsonFormat) interface{} { return v.Serializer }).(pulumi.AnyOutput)
}

// Type of dataset storage format.
// Expected value is 'JsonFormat'.
func (o JsonFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JsonFormat) string { return v.Type }).(pulumi.StringOutput)
}

// The data stored in JSON format.
type JsonFormatResponse struct {
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer interface{} `pulumi:"deserializer"`
	// The code page name of the preferred encoding. If not provided, the default value is 'utf-8', unless the byte order mark (BOM) denotes another Unicode encoding. The full list of supported values can be found in the 'Name' column of the table of encodings in the following reference: https://go.microsoft.com/fwlink/?linkid=861078. Type: string (or Expression with resultType string).
	EncodingName interface{} `pulumi:"encodingName"`
	// File pattern of JSON. To be more specific, the way of separating a collection of JSON objects. The default value is 'setOfObjects'. It is case-sensitive.
	FilePattern *string `pulumi:"filePattern"`
	// The JSONPath of the JSON array element to be flattened. Example: "$.ArrayPath". Type: string (or Expression with resultType string).
	JsonNodeReference interface{} `pulumi:"jsonNodeReference"`
	// The JSONPath definition for each column mapping with a customized column name to extract data from JSON file. For fields under root object, start with "$"; for fields inside the array chosen by jsonNodeReference property, start from the array element. Example: {"Column1": "$.Column1Path", "Column2": "Column2PathInArray"}. Type: object (or Expression with resultType object).
	JsonPathDefinition interface{} `pulumi:"jsonPathDefinition"`
	// The character used to separate nesting levels. Default value is '.' (dot). Type: string (or Expression with resultType string).
	NestingSeparator interface{} `pulumi:"nestingSeparator"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer interface{} `pulumi:"serializer"`
	// Type of dataset storage format.
	// Expected value is 'JsonFormat'.
	Type string `pulumi:"type"`
}

// JsonFormatResponseInput is an input type that accepts JsonFormatResponseArgs and JsonFormatResponseOutput values.
// You can construct a concrete instance of `JsonFormatResponseInput` via:
//
//          JsonFormatResponseArgs{...}
type JsonFormatResponseInput interface {
	pulumi.Input

	ToJsonFormatResponseOutput() JsonFormatResponseOutput
	ToJsonFormatResponseOutputWithContext(context.Context) JsonFormatResponseOutput
}

// The data stored in JSON format.
type JsonFormatResponseArgs struct {
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer pulumi.Input `pulumi:"deserializer"`
	// The code page name of the preferred encoding. If not provided, the default value is 'utf-8', unless the byte order mark (BOM) denotes another Unicode encoding. The full list of supported values can be found in the 'Name' column of the table of encodings in the following reference: https://go.microsoft.com/fwlink/?linkid=861078. Type: string (or Expression with resultType string).
	EncodingName pulumi.Input `pulumi:"encodingName"`
	// File pattern of JSON. To be more specific, the way of separating a collection of JSON objects. The default value is 'setOfObjects'. It is case-sensitive.
	FilePattern pulumi.StringPtrInput `pulumi:"filePattern"`
	// The JSONPath of the JSON array element to be flattened. Example: "$.ArrayPath". Type: string (or Expression with resultType string).
	JsonNodeReference pulumi.Input `pulumi:"jsonNodeReference"`
	// The JSONPath definition for each column mapping with a customized column name to extract data from JSON file. For fields under root object, start with "$"; for fields inside the array chosen by jsonNodeReference property, start from the array element. Example: {"Column1": "$.Column1Path", "Column2": "Column2PathInArray"}. Type: object (or Expression with resultType object).
	JsonPathDefinition pulumi.Input `pulumi:"jsonPathDefinition"`
	// The character used to separate nesting levels. Default value is '.' (dot). Type: string (or Expression with resultType string).
	NestingSeparator pulumi.Input `pulumi:"nestingSeparator"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer pulumi.Input `pulumi:"serializer"`
	// Type of dataset storage format.
	// Expected value is 'JsonFormat'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (JsonFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JsonFormatResponse)(nil)).Elem()
}

func (i JsonFormatResponseArgs) ToJsonFormatResponseOutput() JsonFormatResponseOutput {
	return i.ToJsonFormatResponseOutputWithContext(context.Background())
}

func (i JsonFormatResponseArgs) ToJsonFormatResponseOutputWithContext(ctx context.Context) JsonFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JsonFormatResponseOutput)
}

// The data stored in JSON format.
type JsonFormatResponseOutput struct{ *pulumi.OutputState }

func (JsonFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JsonFormatResponse)(nil)).Elem()
}

func (o JsonFormatResponseOutput) ToJsonFormatResponseOutput() JsonFormatResponseOutput {
	return o
}

func (o JsonFormatResponseOutput) ToJsonFormatResponseOutputWithContext(ctx context.Context) JsonFormatResponseOutput {
	return o
}

// Deserializer. Type: string (or Expression with resultType string).
func (o JsonFormatResponseOutput) Deserializer() pulumi.AnyOutput {
	return o.ApplyT(func(v JsonFormatResponse) interface{} { return v.Deserializer }).(pulumi.AnyOutput)
}

// The code page name of the preferred encoding. If not provided, the default value is 'utf-8', unless the byte order mark (BOM) denotes another Unicode encoding. The full list of supported values can be found in the 'Name' column of the table of encodings in the following reference: https://go.microsoft.com/fwlink/?linkid=861078. Type: string (or Expression with resultType string).
func (o JsonFormatResponseOutput) EncodingName() pulumi.AnyOutput {
	return o.ApplyT(func(v JsonFormatResponse) interface{} { return v.EncodingName }).(pulumi.AnyOutput)
}

// File pattern of JSON. To be more specific, the way of separating a collection of JSON objects. The default value is 'setOfObjects'. It is case-sensitive.
func (o JsonFormatResponseOutput) FilePattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JsonFormatResponse) *string { return v.FilePattern }).(pulumi.StringPtrOutput)
}

// The JSONPath of the JSON array element to be flattened. Example: "$.ArrayPath". Type: string (or Expression with resultType string).
func (o JsonFormatResponseOutput) JsonNodeReference() pulumi.AnyOutput {
	return o.ApplyT(func(v JsonFormatResponse) interface{} { return v.JsonNodeReference }).(pulumi.AnyOutput)
}

// The JSONPath definition for each column mapping with a customized column name to extract data from JSON file. For fields under root object, start with "$"; for fields inside the array chosen by jsonNodeReference property, start from the array element. Example: {"Column1": "$.Column1Path", "Column2": "Column2PathInArray"}. Type: object (or Expression with resultType object).
func (o JsonFormatResponseOutput) JsonPathDefinition() pulumi.AnyOutput {
	return o.ApplyT(func(v JsonFormatResponse) interface{} { return v.JsonPathDefinition }).(pulumi.AnyOutput)
}

// The character used to separate nesting levels. Default value is '.' (dot). Type: string (or Expression with resultType string).
func (o JsonFormatResponseOutput) NestingSeparator() pulumi.AnyOutput {
	return o.ApplyT(func(v JsonFormatResponse) interface{} { return v.NestingSeparator }).(pulumi.AnyOutput)
}

// Serializer. Type: string (or Expression with resultType string).
func (o JsonFormatResponseOutput) Serializer() pulumi.AnyOutput {
	return o.ApplyT(func(v JsonFormatResponse) interface{} { return v.Serializer }).(pulumi.AnyOutput)
}

// Type of dataset storage format.
// Expected value is 'JsonFormat'.
func (o JsonFormatResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JsonFormatResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The base definition of a secret type.
type LinkedIntegrationRuntimeKey struct {
	// Type of the secret.
	// Expected value is 'Key'.
	AuthorizationType string `pulumi:"authorizationType"`
	// Type of the secret.
	Key SecureString `pulumi:"key"`
}

// LinkedIntegrationRuntimeKeyInput is an input type that accepts LinkedIntegrationRuntimeKeyArgs and LinkedIntegrationRuntimeKeyOutput values.
// You can construct a concrete instance of `LinkedIntegrationRuntimeKeyInput` via:
//
//          LinkedIntegrationRuntimeKeyArgs{...}
type LinkedIntegrationRuntimeKeyInput interface {
	pulumi.Input

	ToLinkedIntegrationRuntimeKeyOutput() LinkedIntegrationRuntimeKeyOutput
	ToLinkedIntegrationRuntimeKeyOutputWithContext(context.Context) LinkedIntegrationRuntimeKeyOutput
}

// The base definition of a secret type.
type LinkedIntegrationRuntimeKeyArgs struct {
	// Type of the secret.
	// Expected value is 'Key'.
	AuthorizationType pulumi.StringInput `pulumi:"authorizationType"`
	// Type of the secret.
	Key SecureStringInput `pulumi:"key"`
}

func (LinkedIntegrationRuntimeKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedIntegrationRuntimeKey)(nil)).Elem()
}

func (i LinkedIntegrationRuntimeKeyArgs) ToLinkedIntegrationRuntimeKeyOutput() LinkedIntegrationRuntimeKeyOutput {
	return i.ToLinkedIntegrationRuntimeKeyOutputWithContext(context.Background())
}

func (i LinkedIntegrationRuntimeKeyArgs) ToLinkedIntegrationRuntimeKeyOutputWithContext(ctx context.Context) LinkedIntegrationRuntimeKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedIntegrationRuntimeKeyOutput)
}

// The base definition of a secret type.
type LinkedIntegrationRuntimeKeyOutput struct{ *pulumi.OutputState }

func (LinkedIntegrationRuntimeKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedIntegrationRuntimeKey)(nil)).Elem()
}

func (o LinkedIntegrationRuntimeKeyOutput) ToLinkedIntegrationRuntimeKeyOutput() LinkedIntegrationRuntimeKeyOutput {
	return o
}

func (o LinkedIntegrationRuntimeKeyOutput) ToLinkedIntegrationRuntimeKeyOutputWithContext(ctx context.Context) LinkedIntegrationRuntimeKeyOutput {
	return o
}

// Type of the secret.
// Expected value is 'Key'.
func (o LinkedIntegrationRuntimeKeyOutput) AuthorizationType() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedIntegrationRuntimeKey) string { return v.AuthorizationType }).(pulumi.StringOutput)
}

// Type of the secret.
func (o LinkedIntegrationRuntimeKeyOutput) Key() SecureStringOutput {
	return o.ApplyT(func(v LinkedIntegrationRuntimeKey) SecureString { return v.Key }).(SecureStringOutput)
}

// The base definition of a secret type.
type LinkedIntegrationRuntimeKeyResponse struct {
	// Type of the secret.
	// Expected value is 'Key'.
	AuthorizationType string `pulumi:"authorizationType"`
	// Type of the secret.
	Key SecureStringResponse `pulumi:"key"`
}

// LinkedIntegrationRuntimeKeyResponseInput is an input type that accepts LinkedIntegrationRuntimeKeyResponseArgs and LinkedIntegrationRuntimeKeyResponseOutput values.
// You can construct a concrete instance of `LinkedIntegrationRuntimeKeyResponseInput` via:
//
//          LinkedIntegrationRuntimeKeyResponseArgs{...}
type LinkedIntegrationRuntimeKeyResponseInput interface {
	pulumi.Input

	ToLinkedIntegrationRuntimeKeyResponseOutput() LinkedIntegrationRuntimeKeyResponseOutput
	ToLinkedIntegrationRuntimeKeyResponseOutputWithContext(context.Context) LinkedIntegrationRuntimeKeyResponseOutput
}

// The base definition of a secret type.
type LinkedIntegrationRuntimeKeyResponseArgs struct {
	// Type of the secret.
	// Expected value is 'Key'.
	AuthorizationType pulumi.StringInput `pulumi:"authorizationType"`
	// Type of the secret.
	Key SecureStringResponseInput `pulumi:"key"`
}

func (LinkedIntegrationRuntimeKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedIntegrationRuntimeKeyResponse)(nil)).Elem()
}

func (i LinkedIntegrationRuntimeKeyResponseArgs) ToLinkedIntegrationRuntimeKeyResponseOutput() LinkedIntegrationRuntimeKeyResponseOutput {
	return i.ToLinkedIntegrationRuntimeKeyResponseOutputWithContext(context.Background())
}

func (i LinkedIntegrationRuntimeKeyResponseArgs) ToLinkedIntegrationRuntimeKeyResponseOutputWithContext(ctx context.Context) LinkedIntegrationRuntimeKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedIntegrationRuntimeKeyResponseOutput)
}

// The base definition of a secret type.
type LinkedIntegrationRuntimeKeyResponseOutput struct{ *pulumi.OutputState }

func (LinkedIntegrationRuntimeKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedIntegrationRuntimeKeyResponse)(nil)).Elem()
}

func (o LinkedIntegrationRuntimeKeyResponseOutput) ToLinkedIntegrationRuntimeKeyResponseOutput() LinkedIntegrationRuntimeKeyResponseOutput {
	return o
}

func (o LinkedIntegrationRuntimeKeyResponseOutput) ToLinkedIntegrationRuntimeKeyResponseOutputWithContext(ctx context.Context) LinkedIntegrationRuntimeKeyResponseOutput {
	return o
}

// Type of the secret.
// Expected value is 'Key'.
func (o LinkedIntegrationRuntimeKeyResponseOutput) AuthorizationType() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedIntegrationRuntimeKeyResponse) string { return v.AuthorizationType }).(pulumi.StringOutput)
}

// Type of the secret.
func (o LinkedIntegrationRuntimeKeyResponseOutput) Key() SecureStringResponseOutput {
	return o.ApplyT(func(v LinkedIntegrationRuntimeKeyResponse) SecureStringResponse { return v.Key }).(SecureStringResponseOutput)
}

// The base definition of a secret type.
type LinkedIntegrationRuntimeRbac struct {
	// Type of the secret.
	// Expected value is 'RBAC'.
	AuthorizationType string `pulumi:"authorizationType"`
	// The resource ID of the integration runtime to be shared.
	ResourceId string `pulumi:"resourceId"`
}

// LinkedIntegrationRuntimeRbacInput is an input type that accepts LinkedIntegrationRuntimeRbacArgs and LinkedIntegrationRuntimeRbacOutput values.
// You can construct a concrete instance of `LinkedIntegrationRuntimeRbacInput` via:
//
//          LinkedIntegrationRuntimeRbacArgs{...}
type LinkedIntegrationRuntimeRbacInput interface {
	pulumi.Input

	ToLinkedIntegrationRuntimeRbacOutput() LinkedIntegrationRuntimeRbacOutput
	ToLinkedIntegrationRuntimeRbacOutputWithContext(context.Context) LinkedIntegrationRuntimeRbacOutput
}

// The base definition of a secret type.
type LinkedIntegrationRuntimeRbacArgs struct {
	// Type of the secret.
	// Expected value is 'RBAC'.
	AuthorizationType pulumi.StringInput `pulumi:"authorizationType"`
	// The resource ID of the integration runtime to be shared.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (LinkedIntegrationRuntimeRbacArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedIntegrationRuntimeRbac)(nil)).Elem()
}

func (i LinkedIntegrationRuntimeRbacArgs) ToLinkedIntegrationRuntimeRbacOutput() LinkedIntegrationRuntimeRbacOutput {
	return i.ToLinkedIntegrationRuntimeRbacOutputWithContext(context.Background())
}

func (i LinkedIntegrationRuntimeRbacArgs) ToLinkedIntegrationRuntimeRbacOutputWithContext(ctx context.Context) LinkedIntegrationRuntimeRbacOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedIntegrationRuntimeRbacOutput)
}

// The base definition of a secret type.
type LinkedIntegrationRuntimeRbacOutput struct{ *pulumi.OutputState }

func (LinkedIntegrationRuntimeRbacOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedIntegrationRuntimeRbac)(nil)).Elem()
}

func (o LinkedIntegrationRuntimeRbacOutput) ToLinkedIntegrationRuntimeRbacOutput() LinkedIntegrationRuntimeRbacOutput {
	return o
}

func (o LinkedIntegrationRuntimeRbacOutput) ToLinkedIntegrationRuntimeRbacOutputWithContext(ctx context.Context) LinkedIntegrationRuntimeRbacOutput {
	return o
}

// Type of the secret.
// Expected value is 'RBAC'.
func (o LinkedIntegrationRuntimeRbacOutput) AuthorizationType() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedIntegrationRuntimeRbac) string { return v.AuthorizationType }).(pulumi.StringOutput)
}

// The resource ID of the integration runtime to be shared.
func (o LinkedIntegrationRuntimeRbacOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedIntegrationRuntimeRbac) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The base definition of a secret type.
type LinkedIntegrationRuntimeRbacResponse struct {
	// Type of the secret.
	// Expected value is 'RBAC'.
	AuthorizationType string `pulumi:"authorizationType"`
	// The resource ID of the integration runtime to be shared.
	ResourceId string `pulumi:"resourceId"`
}

// LinkedIntegrationRuntimeRbacResponseInput is an input type that accepts LinkedIntegrationRuntimeRbacResponseArgs and LinkedIntegrationRuntimeRbacResponseOutput values.
// You can construct a concrete instance of `LinkedIntegrationRuntimeRbacResponseInput` via:
//
//          LinkedIntegrationRuntimeRbacResponseArgs{...}
type LinkedIntegrationRuntimeRbacResponseInput interface {
	pulumi.Input

	ToLinkedIntegrationRuntimeRbacResponseOutput() LinkedIntegrationRuntimeRbacResponseOutput
	ToLinkedIntegrationRuntimeRbacResponseOutputWithContext(context.Context) LinkedIntegrationRuntimeRbacResponseOutput
}

// The base definition of a secret type.
type LinkedIntegrationRuntimeRbacResponseArgs struct {
	// Type of the secret.
	// Expected value is 'RBAC'.
	AuthorizationType pulumi.StringInput `pulumi:"authorizationType"`
	// The resource ID of the integration runtime to be shared.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (LinkedIntegrationRuntimeRbacResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedIntegrationRuntimeRbacResponse)(nil)).Elem()
}

func (i LinkedIntegrationRuntimeRbacResponseArgs) ToLinkedIntegrationRuntimeRbacResponseOutput() LinkedIntegrationRuntimeRbacResponseOutput {
	return i.ToLinkedIntegrationRuntimeRbacResponseOutputWithContext(context.Background())
}

func (i LinkedIntegrationRuntimeRbacResponseArgs) ToLinkedIntegrationRuntimeRbacResponseOutputWithContext(ctx context.Context) LinkedIntegrationRuntimeRbacResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedIntegrationRuntimeRbacResponseOutput)
}

// The base definition of a secret type.
type LinkedIntegrationRuntimeRbacResponseOutput struct{ *pulumi.OutputState }

func (LinkedIntegrationRuntimeRbacResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedIntegrationRuntimeRbacResponse)(nil)).Elem()
}

func (o LinkedIntegrationRuntimeRbacResponseOutput) ToLinkedIntegrationRuntimeRbacResponseOutput() LinkedIntegrationRuntimeRbacResponseOutput {
	return o
}

func (o LinkedIntegrationRuntimeRbacResponseOutput) ToLinkedIntegrationRuntimeRbacResponseOutputWithContext(ctx context.Context) LinkedIntegrationRuntimeRbacResponseOutput {
	return o
}

// Type of the secret.
// Expected value is 'RBAC'.
func (o LinkedIntegrationRuntimeRbacResponseOutput) AuthorizationType() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedIntegrationRuntimeRbacResponse) string { return v.AuthorizationType }).(pulumi.StringOutput)
}

// The resource ID of the integration runtime to be shared.
func (o LinkedIntegrationRuntimeRbacResponseOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedIntegrationRuntimeRbacResponse) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The linked integration runtime information.
type LinkedIntegrationRuntimeResponse struct {
	// The creating time of the linked integration runtime.
	CreateTime string `pulumi:"createTime"`
	// The location of the data factory for which the linked integration runtime belong to.
	DataFactoryLocation string `pulumi:"dataFactoryLocation"`
	// The name of the data factory for which the linked integration runtime belong to.
	DataFactoryName string `pulumi:"dataFactoryName"`
	// The name of the linked integration runtime.
	Name string `pulumi:"name"`
	// The subscription ID for which the linked integration runtime belong to.
	SubscriptionId string `pulumi:"subscriptionId"`
}

// LinkedIntegrationRuntimeResponseInput is an input type that accepts LinkedIntegrationRuntimeResponseArgs and LinkedIntegrationRuntimeResponseOutput values.
// You can construct a concrete instance of `LinkedIntegrationRuntimeResponseInput` via:
//
//          LinkedIntegrationRuntimeResponseArgs{...}
type LinkedIntegrationRuntimeResponseInput interface {
	pulumi.Input

	ToLinkedIntegrationRuntimeResponseOutput() LinkedIntegrationRuntimeResponseOutput
	ToLinkedIntegrationRuntimeResponseOutputWithContext(context.Context) LinkedIntegrationRuntimeResponseOutput
}

// The linked integration runtime information.
type LinkedIntegrationRuntimeResponseArgs struct {
	// The creating time of the linked integration runtime.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The location of the data factory for which the linked integration runtime belong to.
	DataFactoryLocation pulumi.StringInput `pulumi:"dataFactoryLocation"`
	// The name of the data factory for which the linked integration runtime belong to.
	DataFactoryName pulumi.StringInput `pulumi:"dataFactoryName"`
	// The name of the linked integration runtime.
	Name pulumi.StringInput `pulumi:"name"`
	// The subscription ID for which the linked integration runtime belong to.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
}

func (LinkedIntegrationRuntimeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedIntegrationRuntimeResponse)(nil)).Elem()
}

func (i LinkedIntegrationRuntimeResponseArgs) ToLinkedIntegrationRuntimeResponseOutput() LinkedIntegrationRuntimeResponseOutput {
	return i.ToLinkedIntegrationRuntimeResponseOutputWithContext(context.Background())
}

func (i LinkedIntegrationRuntimeResponseArgs) ToLinkedIntegrationRuntimeResponseOutputWithContext(ctx context.Context) LinkedIntegrationRuntimeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedIntegrationRuntimeResponseOutput)
}

// LinkedIntegrationRuntimeResponseArrayInput is an input type that accepts LinkedIntegrationRuntimeResponseArray and LinkedIntegrationRuntimeResponseArrayOutput values.
// You can construct a concrete instance of `LinkedIntegrationRuntimeResponseArrayInput` via:
//
//          LinkedIntegrationRuntimeResponseArray{ LinkedIntegrationRuntimeResponseArgs{...} }
type LinkedIntegrationRuntimeResponseArrayInput interface {
	pulumi.Input

	ToLinkedIntegrationRuntimeResponseArrayOutput() LinkedIntegrationRuntimeResponseArrayOutput
	ToLinkedIntegrationRuntimeResponseArrayOutputWithContext(context.Context) LinkedIntegrationRuntimeResponseArrayOutput
}

type LinkedIntegrationRuntimeResponseArray []LinkedIntegrationRuntimeResponseInput

func (LinkedIntegrationRuntimeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkedIntegrationRuntimeResponse)(nil)).Elem()
}

func (i LinkedIntegrationRuntimeResponseArray) ToLinkedIntegrationRuntimeResponseArrayOutput() LinkedIntegrationRuntimeResponseArrayOutput {
	return i.ToLinkedIntegrationRuntimeResponseArrayOutputWithContext(context.Background())
}

func (i LinkedIntegrationRuntimeResponseArray) ToLinkedIntegrationRuntimeResponseArrayOutputWithContext(ctx context.Context) LinkedIntegrationRuntimeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedIntegrationRuntimeResponseArrayOutput)
}

// The linked integration runtime information.
type LinkedIntegrationRuntimeResponseOutput struct{ *pulumi.OutputState }

func (LinkedIntegrationRuntimeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedIntegrationRuntimeResponse)(nil)).Elem()
}

func (o LinkedIntegrationRuntimeResponseOutput) ToLinkedIntegrationRuntimeResponseOutput() LinkedIntegrationRuntimeResponseOutput {
	return o
}

func (o LinkedIntegrationRuntimeResponseOutput) ToLinkedIntegrationRuntimeResponseOutputWithContext(ctx context.Context) LinkedIntegrationRuntimeResponseOutput {
	return o
}

// The creating time of the linked integration runtime.
func (o LinkedIntegrationRuntimeResponseOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedIntegrationRuntimeResponse) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The location of the data factory for which the linked integration runtime belong to.
func (o LinkedIntegrationRuntimeResponseOutput) DataFactoryLocation() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedIntegrationRuntimeResponse) string { return v.DataFactoryLocation }).(pulumi.StringOutput)
}

// The name of the data factory for which the linked integration runtime belong to.
func (o LinkedIntegrationRuntimeResponseOutput) DataFactoryName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedIntegrationRuntimeResponse) string { return v.DataFactoryName }).(pulumi.StringOutput)
}

// The name of the linked integration runtime.
func (o LinkedIntegrationRuntimeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedIntegrationRuntimeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The subscription ID for which the linked integration runtime belong to.
func (o LinkedIntegrationRuntimeResponseOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedIntegrationRuntimeResponse) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

type LinkedIntegrationRuntimeResponseArrayOutput struct{ *pulumi.OutputState }

func (LinkedIntegrationRuntimeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkedIntegrationRuntimeResponse)(nil)).Elem()
}

func (o LinkedIntegrationRuntimeResponseArrayOutput) ToLinkedIntegrationRuntimeResponseArrayOutput() LinkedIntegrationRuntimeResponseArrayOutput {
	return o
}

func (o LinkedIntegrationRuntimeResponseArrayOutput) ToLinkedIntegrationRuntimeResponseArrayOutputWithContext(ctx context.Context) LinkedIntegrationRuntimeResponseArrayOutput {
	return o
}

func (o LinkedIntegrationRuntimeResponseArrayOutput) Index(i pulumi.IntInput) LinkedIntegrationRuntimeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinkedIntegrationRuntimeResponse {
		return vs[0].([]LinkedIntegrationRuntimeResponse)[vs[1].(int)]
	}).(LinkedIntegrationRuntimeResponseOutput)
}

// Linked service reference type.
type LinkedServiceReference struct {
	// Arguments for LinkedService.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// Reference LinkedService name.
	ReferenceName string `pulumi:"referenceName"`
	// Linked service reference type.
	Type string `pulumi:"type"`
}

// LinkedServiceReferenceInput is an input type that accepts LinkedServiceReferenceArgs and LinkedServiceReferenceOutput values.
// You can construct a concrete instance of `LinkedServiceReferenceInput` via:
//
//          LinkedServiceReferenceArgs{...}
type LinkedServiceReferenceInput interface {
	pulumi.Input

	ToLinkedServiceReferenceOutput() LinkedServiceReferenceOutput
	ToLinkedServiceReferenceOutputWithContext(context.Context) LinkedServiceReferenceOutput
}

// Linked service reference type.
type LinkedServiceReferenceArgs struct {
	// Arguments for LinkedService.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// Reference LinkedService name.
	ReferenceName pulumi.StringInput `pulumi:"referenceName"`
	// Linked service reference type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LinkedServiceReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceReference)(nil)).Elem()
}

func (i LinkedServiceReferenceArgs) ToLinkedServiceReferenceOutput() LinkedServiceReferenceOutput {
	return i.ToLinkedServiceReferenceOutputWithContext(context.Background())
}

func (i LinkedServiceReferenceArgs) ToLinkedServiceReferenceOutputWithContext(ctx context.Context) LinkedServiceReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceReferenceOutput)
}

func (i LinkedServiceReferenceArgs) ToLinkedServiceReferencePtrOutput() LinkedServiceReferencePtrOutput {
	return i.ToLinkedServiceReferencePtrOutputWithContext(context.Background())
}

func (i LinkedServiceReferenceArgs) ToLinkedServiceReferencePtrOutputWithContext(ctx context.Context) LinkedServiceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceReferenceOutput).ToLinkedServiceReferencePtrOutputWithContext(ctx)
}

// LinkedServiceReferencePtrInput is an input type that accepts LinkedServiceReferenceArgs, LinkedServiceReferencePtr and LinkedServiceReferencePtrOutput values.
// You can construct a concrete instance of `LinkedServiceReferencePtrInput` via:
//
//          LinkedServiceReferenceArgs{...}
//
//  or:
//
//          nil
type LinkedServiceReferencePtrInput interface {
	pulumi.Input

	ToLinkedServiceReferencePtrOutput() LinkedServiceReferencePtrOutput
	ToLinkedServiceReferencePtrOutputWithContext(context.Context) LinkedServiceReferencePtrOutput
}

type linkedServiceReferencePtrType LinkedServiceReferenceArgs

func LinkedServiceReferencePtr(v *LinkedServiceReferenceArgs) LinkedServiceReferencePtrInput {
	return (*linkedServiceReferencePtrType)(v)
}

func (*linkedServiceReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceReference)(nil)).Elem()
}

func (i *linkedServiceReferencePtrType) ToLinkedServiceReferencePtrOutput() LinkedServiceReferencePtrOutput {
	return i.ToLinkedServiceReferencePtrOutputWithContext(context.Background())
}

func (i *linkedServiceReferencePtrType) ToLinkedServiceReferencePtrOutputWithContext(ctx context.Context) LinkedServiceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceReferencePtrOutput)
}

// LinkedServiceReferenceArrayInput is an input type that accepts LinkedServiceReferenceArray and LinkedServiceReferenceArrayOutput values.
// You can construct a concrete instance of `LinkedServiceReferenceArrayInput` via:
//
//          LinkedServiceReferenceArray{ LinkedServiceReferenceArgs{...} }
type LinkedServiceReferenceArrayInput interface {
	pulumi.Input

	ToLinkedServiceReferenceArrayOutput() LinkedServiceReferenceArrayOutput
	ToLinkedServiceReferenceArrayOutputWithContext(context.Context) LinkedServiceReferenceArrayOutput
}

type LinkedServiceReferenceArray []LinkedServiceReferenceInput

func (LinkedServiceReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkedServiceReference)(nil)).Elem()
}

func (i LinkedServiceReferenceArray) ToLinkedServiceReferenceArrayOutput() LinkedServiceReferenceArrayOutput {
	return i.ToLinkedServiceReferenceArrayOutputWithContext(context.Background())
}

func (i LinkedServiceReferenceArray) ToLinkedServiceReferenceArrayOutputWithContext(ctx context.Context) LinkedServiceReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceReferenceArrayOutput)
}

// Linked service reference type.
type LinkedServiceReferenceOutput struct{ *pulumi.OutputState }

func (LinkedServiceReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceReference)(nil)).Elem()
}

func (o LinkedServiceReferenceOutput) ToLinkedServiceReferenceOutput() LinkedServiceReferenceOutput {
	return o
}

func (o LinkedServiceReferenceOutput) ToLinkedServiceReferenceOutputWithContext(ctx context.Context) LinkedServiceReferenceOutput {
	return o
}

func (o LinkedServiceReferenceOutput) ToLinkedServiceReferencePtrOutput() LinkedServiceReferencePtrOutput {
	return o.ToLinkedServiceReferencePtrOutputWithContext(context.Background())
}

func (o LinkedServiceReferenceOutput) ToLinkedServiceReferencePtrOutputWithContext(ctx context.Context) LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v LinkedServiceReference) *LinkedServiceReference {
		return &v
	}).(LinkedServiceReferencePtrOutput)
}

// Arguments for LinkedService.
func (o LinkedServiceReferenceOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v LinkedServiceReference) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

// Reference LinkedService name.
func (o LinkedServiceReferenceOutput) ReferenceName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceReference) string { return v.ReferenceName }).(pulumi.StringOutput)
}

// Linked service reference type.
func (o LinkedServiceReferenceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceReference) string { return v.Type }).(pulumi.StringOutput)
}

type LinkedServiceReferencePtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceReference)(nil)).Elem()
}

func (o LinkedServiceReferencePtrOutput) ToLinkedServiceReferencePtrOutput() LinkedServiceReferencePtrOutput {
	return o
}

func (o LinkedServiceReferencePtrOutput) ToLinkedServiceReferencePtrOutputWithContext(ctx context.Context) LinkedServiceReferencePtrOutput {
	return o
}

func (o LinkedServiceReferencePtrOutput) Elem() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v *LinkedServiceReference) LinkedServiceReference { return *v }).(LinkedServiceReferenceOutput)
}

// Arguments for LinkedService.
func (o LinkedServiceReferencePtrOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v *LinkedServiceReference) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.MapOutput)
}

// Reference LinkedService name.
func (o LinkedServiceReferencePtrOutput) ReferenceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceReference) *string {
		if v == nil {
			return nil
		}
		return &v.ReferenceName
	}).(pulumi.StringPtrOutput)
}

// Linked service reference type.
func (o LinkedServiceReferencePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceReference) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type LinkedServiceReferenceArrayOutput struct{ *pulumi.OutputState }

func (LinkedServiceReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkedServiceReference)(nil)).Elem()
}

func (o LinkedServiceReferenceArrayOutput) ToLinkedServiceReferenceArrayOutput() LinkedServiceReferenceArrayOutput {
	return o
}

func (o LinkedServiceReferenceArrayOutput) ToLinkedServiceReferenceArrayOutputWithContext(ctx context.Context) LinkedServiceReferenceArrayOutput {
	return o
}

func (o LinkedServiceReferenceArrayOutput) Index(i pulumi.IntInput) LinkedServiceReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinkedServiceReference {
		return vs[0].([]LinkedServiceReference)[vs[1].(int)]
	}).(LinkedServiceReferenceOutput)
}

// Linked service reference type.
type LinkedServiceReferenceResponse struct {
	// Arguments for LinkedService.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// Reference LinkedService name.
	ReferenceName string `pulumi:"referenceName"`
	// Linked service reference type.
	Type string `pulumi:"type"`
}

// LinkedServiceReferenceResponseInput is an input type that accepts LinkedServiceReferenceResponseArgs and LinkedServiceReferenceResponseOutput values.
// You can construct a concrete instance of `LinkedServiceReferenceResponseInput` via:
//
//          LinkedServiceReferenceResponseArgs{...}
type LinkedServiceReferenceResponseInput interface {
	pulumi.Input

	ToLinkedServiceReferenceResponseOutput() LinkedServiceReferenceResponseOutput
	ToLinkedServiceReferenceResponseOutputWithContext(context.Context) LinkedServiceReferenceResponseOutput
}

// Linked service reference type.
type LinkedServiceReferenceResponseArgs struct {
	// Arguments for LinkedService.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// Reference LinkedService name.
	ReferenceName pulumi.StringInput `pulumi:"referenceName"`
	// Linked service reference type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LinkedServiceReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceReferenceResponse)(nil)).Elem()
}

func (i LinkedServiceReferenceResponseArgs) ToLinkedServiceReferenceResponseOutput() LinkedServiceReferenceResponseOutput {
	return i.ToLinkedServiceReferenceResponseOutputWithContext(context.Background())
}

func (i LinkedServiceReferenceResponseArgs) ToLinkedServiceReferenceResponseOutputWithContext(ctx context.Context) LinkedServiceReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceReferenceResponseOutput)
}

func (i LinkedServiceReferenceResponseArgs) ToLinkedServiceReferenceResponsePtrOutput() LinkedServiceReferenceResponsePtrOutput {
	return i.ToLinkedServiceReferenceResponsePtrOutputWithContext(context.Background())
}

func (i LinkedServiceReferenceResponseArgs) ToLinkedServiceReferenceResponsePtrOutputWithContext(ctx context.Context) LinkedServiceReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceReferenceResponseOutput).ToLinkedServiceReferenceResponsePtrOutputWithContext(ctx)
}

// LinkedServiceReferenceResponsePtrInput is an input type that accepts LinkedServiceReferenceResponseArgs, LinkedServiceReferenceResponsePtr and LinkedServiceReferenceResponsePtrOutput values.
// You can construct a concrete instance of `LinkedServiceReferenceResponsePtrInput` via:
//
//          LinkedServiceReferenceResponseArgs{...}
//
//  or:
//
//          nil
type LinkedServiceReferenceResponsePtrInput interface {
	pulumi.Input

	ToLinkedServiceReferenceResponsePtrOutput() LinkedServiceReferenceResponsePtrOutput
	ToLinkedServiceReferenceResponsePtrOutputWithContext(context.Context) LinkedServiceReferenceResponsePtrOutput
}

type linkedServiceReferenceResponsePtrType LinkedServiceReferenceResponseArgs

func LinkedServiceReferenceResponsePtr(v *LinkedServiceReferenceResponseArgs) LinkedServiceReferenceResponsePtrInput {
	return (*linkedServiceReferenceResponsePtrType)(v)
}

func (*linkedServiceReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceReferenceResponse)(nil)).Elem()
}

func (i *linkedServiceReferenceResponsePtrType) ToLinkedServiceReferenceResponsePtrOutput() LinkedServiceReferenceResponsePtrOutput {
	return i.ToLinkedServiceReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *linkedServiceReferenceResponsePtrType) ToLinkedServiceReferenceResponsePtrOutputWithContext(ctx context.Context) LinkedServiceReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceReferenceResponsePtrOutput)
}

// LinkedServiceReferenceResponseArrayInput is an input type that accepts LinkedServiceReferenceResponseArray and LinkedServiceReferenceResponseArrayOutput values.
// You can construct a concrete instance of `LinkedServiceReferenceResponseArrayInput` via:
//
//          LinkedServiceReferenceResponseArray{ LinkedServiceReferenceResponseArgs{...} }
type LinkedServiceReferenceResponseArrayInput interface {
	pulumi.Input

	ToLinkedServiceReferenceResponseArrayOutput() LinkedServiceReferenceResponseArrayOutput
	ToLinkedServiceReferenceResponseArrayOutputWithContext(context.Context) LinkedServiceReferenceResponseArrayOutput
}

type LinkedServiceReferenceResponseArray []LinkedServiceReferenceResponseInput

func (LinkedServiceReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkedServiceReferenceResponse)(nil)).Elem()
}

func (i LinkedServiceReferenceResponseArray) ToLinkedServiceReferenceResponseArrayOutput() LinkedServiceReferenceResponseArrayOutput {
	return i.ToLinkedServiceReferenceResponseArrayOutputWithContext(context.Background())
}

func (i LinkedServiceReferenceResponseArray) ToLinkedServiceReferenceResponseArrayOutputWithContext(ctx context.Context) LinkedServiceReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceReferenceResponseArrayOutput)
}

// Linked service reference type.
type LinkedServiceReferenceResponseOutput struct{ *pulumi.OutputState }

func (LinkedServiceReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceReferenceResponse)(nil)).Elem()
}

func (o LinkedServiceReferenceResponseOutput) ToLinkedServiceReferenceResponseOutput() LinkedServiceReferenceResponseOutput {
	return o
}

func (o LinkedServiceReferenceResponseOutput) ToLinkedServiceReferenceResponseOutputWithContext(ctx context.Context) LinkedServiceReferenceResponseOutput {
	return o
}

func (o LinkedServiceReferenceResponseOutput) ToLinkedServiceReferenceResponsePtrOutput() LinkedServiceReferenceResponsePtrOutput {
	return o.ToLinkedServiceReferenceResponsePtrOutputWithContext(context.Background())
}

func (o LinkedServiceReferenceResponseOutput) ToLinkedServiceReferenceResponsePtrOutputWithContext(ctx context.Context) LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v LinkedServiceReferenceResponse) *LinkedServiceReferenceResponse {
		return &v
	}).(LinkedServiceReferenceResponsePtrOutput)
}

// Arguments for LinkedService.
func (o LinkedServiceReferenceResponseOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v LinkedServiceReferenceResponse) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

// Reference LinkedService name.
func (o LinkedServiceReferenceResponseOutput) ReferenceName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceReferenceResponse) string { return v.ReferenceName }).(pulumi.StringOutput)
}

// Linked service reference type.
func (o LinkedServiceReferenceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceReferenceResponse) string { return v.Type }).(pulumi.StringOutput)
}

type LinkedServiceReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceReferenceResponse)(nil)).Elem()
}

func (o LinkedServiceReferenceResponsePtrOutput) ToLinkedServiceReferenceResponsePtrOutput() LinkedServiceReferenceResponsePtrOutput {
	return o
}

func (o LinkedServiceReferenceResponsePtrOutput) ToLinkedServiceReferenceResponsePtrOutputWithContext(ctx context.Context) LinkedServiceReferenceResponsePtrOutput {
	return o
}

func (o LinkedServiceReferenceResponsePtrOutput) Elem() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v *LinkedServiceReferenceResponse) LinkedServiceReferenceResponse { return *v }).(LinkedServiceReferenceResponseOutput)
}

// Arguments for LinkedService.
func (o LinkedServiceReferenceResponsePtrOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v *LinkedServiceReferenceResponse) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.MapOutput)
}

// Reference LinkedService name.
func (o LinkedServiceReferenceResponsePtrOutput) ReferenceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReferenceName
	}).(pulumi.StringPtrOutput)
}

// Linked service reference type.
func (o LinkedServiceReferenceResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type LinkedServiceReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (LinkedServiceReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkedServiceReferenceResponse)(nil)).Elem()
}

func (o LinkedServiceReferenceResponseArrayOutput) ToLinkedServiceReferenceResponseArrayOutput() LinkedServiceReferenceResponseArrayOutput {
	return o
}

func (o LinkedServiceReferenceResponseArrayOutput) ToLinkedServiceReferenceResponseArrayOutputWithContext(ctx context.Context) LinkedServiceReferenceResponseArrayOutput {
	return o
}

func (o LinkedServiceReferenceResponseArrayOutput) Index(i pulumi.IntInput) LinkedServiceReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinkedServiceReferenceResponse {
		return vs[0].([]LinkedServiceReferenceResponse)[vs[1].(int)]
	}).(LinkedServiceReferenceResponseOutput)
}

// Lookup activity.
type LookupActivity struct {
	// Lookup activity dataset reference.
	Dataset DatasetReference `pulumi:"dataset"`
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean).
	FirstRowOnly interface{} `pulumi:"firstRowOnly"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReference `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicy `pulumi:"policy"`
	// Dataset-specific source properties, same as copy activity source.
	Source interface{} `pulumi:"source"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// LookupActivityInput is an input type that accepts LookupActivityArgs and LookupActivityOutput values.
// You can construct a concrete instance of `LookupActivityInput` via:
//
//          LookupActivityArgs{...}
type LookupActivityInput interface {
	pulumi.Input

	ToLookupActivityOutput() LookupActivityOutput
	ToLookupActivityOutputWithContext(context.Context) LookupActivityOutput
}

// Lookup activity.
type LookupActivityArgs struct {
	// Lookup activity dataset reference.
	Dataset DatasetReferenceInput `pulumi:"dataset"`
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean).
	FirstRowOnly pulumi.Input `pulumi:"firstRowOnly"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferencePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyPtrInput `pulumi:"policy"`
	// Dataset-specific source properties, same as copy activity source.
	Source pulumi.Input `pulumi:"source"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LookupActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupActivity)(nil)).Elem()
}

func (i LookupActivityArgs) ToLookupActivityOutput() LookupActivityOutput {
	return i.ToLookupActivityOutputWithContext(context.Background())
}

func (i LookupActivityArgs) ToLookupActivityOutputWithContext(ctx context.Context) LookupActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupActivityOutput)
}

// Lookup activity.
type LookupActivityOutput struct{ *pulumi.OutputState }

func (LookupActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupActivity)(nil)).Elem()
}

func (o LookupActivityOutput) ToLookupActivityOutput() LookupActivityOutput {
	return o
}

func (o LookupActivityOutput) ToLookupActivityOutputWithContext(ctx context.Context) LookupActivityOutput {
	return o
}

// Lookup activity dataset reference.
func (o LookupActivityOutput) Dataset() DatasetReferenceOutput {
	return o.ApplyT(func(v LookupActivity) DatasetReference { return v.Dataset }).(DatasetReferenceOutput)
}

// Activity depends on condition.
func (o LookupActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v LookupActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o LookupActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean).
func (o LookupActivityOutput) FirstRowOnly() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupActivity) interface{} { return v.FirstRowOnly }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o LookupActivityOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v LookupActivity) *LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// Activity name.
func (o LookupActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o LookupActivityOutput) Policy() ActivityPolicyPtrOutput {
	return o.ApplyT(func(v LookupActivity) *ActivityPolicy { return v.Policy }).(ActivityPolicyPtrOutput)
}

// Dataset-specific source properties, same as copy activity source.
func (o LookupActivityOutput) Source() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupActivity) interface{} { return v.Source }).(pulumi.AnyOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o LookupActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupActivity) string { return v.Type }).(pulumi.StringOutput)
}

// Lookup activity.
type LookupActivityResponse struct {
	// Lookup activity dataset reference.
	Dataset DatasetReferenceResponse `pulumi:"dataset"`
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean).
	FirstRowOnly interface{} `pulumi:"firstRowOnly"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicyResponse `pulumi:"policy"`
	// Dataset-specific source properties, same as copy activity source.
	Source interface{} `pulumi:"source"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// LookupActivityResponseInput is an input type that accepts LookupActivityResponseArgs and LookupActivityResponseOutput values.
// You can construct a concrete instance of `LookupActivityResponseInput` via:
//
//          LookupActivityResponseArgs{...}
type LookupActivityResponseInput interface {
	pulumi.Input

	ToLookupActivityResponseOutput() LookupActivityResponseOutput
	ToLookupActivityResponseOutputWithContext(context.Context) LookupActivityResponseOutput
}

// Lookup activity.
type LookupActivityResponseArgs struct {
	// Lookup activity dataset reference.
	Dataset DatasetReferenceResponseInput `pulumi:"dataset"`
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean).
	FirstRowOnly pulumi.Input `pulumi:"firstRowOnly"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyResponsePtrInput `pulumi:"policy"`
	// Dataset-specific source properties, same as copy activity source.
	Source pulumi.Input `pulumi:"source"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LookupActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupActivityResponse)(nil)).Elem()
}

func (i LookupActivityResponseArgs) ToLookupActivityResponseOutput() LookupActivityResponseOutput {
	return i.ToLookupActivityResponseOutputWithContext(context.Background())
}

func (i LookupActivityResponseArgs) ToLookupActivityResponseOutputWithContext(ctx context.Context) LookupActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupActivityResponseOutput)
}

// Lookup activity.
type LookupActivityResponseOutput struct{ *pulumi.OutputState }

func (LookupActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupActivityResponse)(nil)).Elem()
}

func (o LookupActivityResponseOutput) ToLookupActivityResponseOutput() LookupActivityResponseOutput {
	return o
}

func (o LookupActivityResponseOutput) ToLookupActivityResponseOutputWithContext(ctx context.Context) LookupActivityResponseOutput {
	return o
}

// Lookup activity dataset reference.
func (o LookupActivityResponseOutput) Dataset() DatasetReferenceResponseOutput {
	return o.ApplyT(func(v LookupActivityResponse) DatasetReferenceResponse { return v.Dataset }).(DatasetReferenceResponseOutput)
}

// Activity depends on condition.
func (o LookupActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v LookupActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o LookupActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean).
func (o LookupActivityResponseOutput) FirstRowOnly() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupActivityResponse) interface{} { return v.FirstRowOnly }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o LookupActivityResponseOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v LookupActivityResponse) *LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponsePtrOutput)
}

// Activity name.
func (o LookupActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o LookupActivityResponseOutput) Policy() ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v LookupActivityResponse) *ActivityPolicyResponse { return v.Policy }).(ActivityPolicyResponsePtrOutput)
}

// Dataset-specific source properties, same as copy activity source.
func (o LookupActivityResponseOutput) Source() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupActivityResponse) interface{} { return v.Source }).(pulumi.AnyOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o LookupActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Magento server linked service.
type MagentoLinkedService struct {
	// The access token from Magento.
	AccessToken interface{} `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The URL of the Magento instance. (i.e. 192.168.222.110/magento3)
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Magento'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// MagentoLinkedServiceInput is an input type that accepts MagentoLinkedServiceArgs and MagentoLinkedServiceOutput values.
// You can construct a concrete instance of `MagentoLinkedServiceInput` via:
//
//          MagentoLinkedServiceArgs{...}
type MagentoLinkedServiceInput interface {
	pulumi.Input

	ToMagentoLinkedServiceOutput() MagentoLinkedServiceOutput
	ToMagentoLinkedServiceOutputWithContext(context.Context) MagentoLinkedServiceOutput
}

// Magento server linked service.
type MagentoLinkedServiceArgs struct {
	// The access token from Magento.
	AccessToken pulumi.Input `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The URL of the Magento instance. (i.e. 192.168.222.110/magento3)
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Magento'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (MagentoLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MagentoLinkedService)(nil)).Elem()
}

func (i MagentoLinkedServiceArgs) ToMagentoLinkedServiceOutput() MagentoLinkedServiceOutput {
	return i.ToMagentoLinkedServiceOutputWithContext(context.Background())
}

func (i MagentoLinkedServiceArgs) ToMagentoLinkedServiceOutputWithContext(ctx context.Context) MagentoLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MagentoLinkedServiceOutput)
}

// Magento server linked service.
type MagentoLinkedServiceOutput struct{ *pulumi.OutputState }

func (MagentoLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MagentoLinkedService)(nil)).Elem()
}

func (o MagentoLinkedServiceOutput) ToMagentoLinkedServiceOutput() MagentoLinkedServiceOutput {
	return o
}

func (o MagentoLinkedServiceOutput) ToMagentoLinkedServiceOutputWithContext(ctx context.Context) MagentoLinkedServiceOutput {
	return o
}

// The access token from Magento.
func (o MagentoLinkedServiceOutput) AccessToken() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoLinkedService) interface{} { return v.AccessToken }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o MagentoLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MagentoLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o MagentoLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v MagentoLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o MagentoLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MagentoLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o MagentoLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The URL of the Magento instance. (i.e. 192.168.222.110/magento3)
func (o MagentoLinkedServiceOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoLinkedService) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o MagentoLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v MagentoLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'Magento'.
func (o MagentoLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MagentoLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o MagentoLinkedServiceOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoLinkedService) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o MagentoLinkedServiceOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoLinkedService) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o MagentoLinkedServiceOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoLinkedService) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Magento server linked service.
type MagentoLinkedServiceResponse struct {
	// The access token from Magento.
	AccessToken interface{} `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The URL of the Magento instance. (i.e. 192.168.222.110/magento3)
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Magento'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// MagentoLinkedServiceResponseInput is an input type that accepts MagentoLinkedServiceResponseArgs and MagentoLinkedServiceResponseOutput values.
// You can construct a concrete instance of `MagentoLinkedServiceResponseInput` via:
//
//          MagentoLinkedServiceResponseArgs{...}
type MagentoLinkedServiceResponseInput interface {
	pulumi.Input

	ToMagentoLinkedServiceResponseOutput() MagentoLinkedServiceResponseOutput
	ToMagentoLinkedServiceResponseOutputWithContext(context.Context) MagentoLinkedServiceResponseOutput
}

// Magento server linked service.
type MagentoLinkedServiceResponseArgs struct {
	// The access token from Magento.
	AccessToken pulumi.Input `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The URL of the Magento instance. (i.e. 192.168.222.110/magento3)
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Magento'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (MagentoLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MagentoLinkedServiceResponse)(nil)).Elem()
}

func (i MagentoLinkedServiceResponseArgs) ToMagentoLinkedServiceResponseOutput() MagentoLinkedServiceResponseOutput {
	return i.ToMagentoLinkedServiceResponseOutputWithContext(context.Background())
}

func (i MagentoLinkedServiceResponseArgs) ToMagentoLinkedServiceResponseOutputWithContext(ctx context.Context) MagentoLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MagentoLinkedServiceResponseOutput)
}

// Magento server linked service.
type MagentoLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (MagentoLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MagentoLinkedServiceResponse)(nil)).Elem()
}

func (o MagentoLinkedServiceResponseOutput) ToMagentoLinkedServiceResponseOutput() MagentoLinkedServiceResponseOutput {
	return o
}

func (o MagentoLinkedServiceResponseOutput) ToMagentoLinkedServiceResponseOutputWithContext(ctx context.Context) MagentoLinkedServiceResponseOutput {
	return o
}

// The access token from Magento.
func (o MagentoLinkedServiceResponseOutput) AccessToken() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoLinkedServiceResponse) interface{} { return v.AccessToken }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o MagentoLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MagentoLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o MagentoLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v MagentoLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o MagentoLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MagentoLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o MagentoLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The URL of the Magento instance. (i.e. 192.168.222.110/magento3)
func (o MagentoLinkedServiceResponseOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoLinkedServiceResponse) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o MagentoLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v MagentoLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'Magento'.
func (o MagentoLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MagentoLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o MagentoLinkedServiceResponseOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoLinkedServiceResponse) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o MagentoLinkedServiceResponseOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoLinkedServiceResponse) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o MagentoLinkedServiceResponseOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoLinkedServiceResponse) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Magento server dataset.
type MagentoObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'MagentoObject'.
	Type string `pulumi:"type"`
}

// MagentoObjectDatasetInput is an input type that accepts MagentoObjectDatasetArgs and MagentoObjectDatasetOutput values.
// You can construct a concrete instance of `MagentoObjectDatasetInput` via:
//
//          MagentoObjectDatasetArgs{...}
type MagentoObjectDatasetInput interface {
	pulumi.Input

	ToMagentoObjectDatasetOutput() MagentoObjectDatasetOutput
	ToMagentoObjectDatasetOutputWithContext(context.Context) MagentoObjectDatasetOutput
}

// Magento server dataset.
type MagentoObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'MagentoObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MagentoObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MagentoObjectDataset)(nil)).Elem()
}

func (i MagentoObjectDatasetArgs) ToMagentoObjectDatasetOutput() MagentoObjectDatasetOutput {
	return i.ToMagentoObjectDatasetOutputWithContext(context.Background())
}

func (i MagentoObjectDatasetArgs) ToMagentoObjectDatasetOutputWithContext(ctx context.Context) MagentoObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MagentoObjectDatasetOutput)
}

// Magento server dataset.
type MagentoObjectDatasetOutput struct{ *pulumi.OutputState }

func (MagentoObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MagentoObjectDataset)(nil)).Elem()
}

func (o MagentoObjectDatasetOutput) ToMagentoObjectDatasetOutput() MagentoObjectDatasetOutput {
	return o
}

func (o MagentoObjectDatasetOutput) ToMagentoObjectDatasetOutputWithContext(ctx context.Context) MagentoObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o MagentoObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MagentoObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o MagentoObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MagentoObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o MagentoObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v MagentoObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o MagentoObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v MagentoObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o MagentoObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'MagentoObject'.
func (o MagentoObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MagentoObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Magento server dataset.
type MagentoObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'MagentoObject'.
	Type string `pulumi:"type"`
}

// MagentoObjectDatasetResponseInput is an input type that accepts MagentoObjectDatasetResponseArgs and MagentoObjectDatasetResponseOutput values.
// You can construct a concrete instance of `MagentoObjectDatasetResponseInput` via:
//
//          MagentoObjectDatasetResponseArgs{...}
type MagentoObjectDatasetResponseInput interface {
	pulumi.Input

	ToMagentoObjectDatasetResponseOutput() MagentoObjectDatasetResponseOutput
	ToMagentoObjectDatasetResponseOutputWithContext(context.Context) MagentoObjectDatasetResponseOutput
}

// Magento server dataset.
type MagentoObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'MagentoObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MagentoObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MagentoObjectDatasetResponse)(nil)).Elem()
}

func (i MagentoObjectDatasetResponseArgs) ToMagentoObjectDatasetResponseOutput() MagentoObjectDatasetResponseOutput {
	return i.ToMagentoObjectDatasetResponseOutputWithContext(context.Background())
}

func (i MagentoObjectDatasetResponseArgs) ToMagentoObjectDatasetResponseOutputWithContext(ctx context.Context) MagentoObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MagentoObjectDatasetResponseOutput)
}

// Magento server dataset.
type MagentoObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (MagentoObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MagentoObjectDatasetResponse)(nil)).Elem()
}

func (o MagentoObjectDatasetResponseOutput) ToMagentoObjectDatasetResponseOutput() MagentoObjectDatasetResponseOutput {
	return o
}

func (o MagentoObjectDatasetResponseOutput) ToMagentoObjectDatasetResponseOutputWithContext(ctx context.Context) MagentoObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o MagentoObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MagentoObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o MagentoObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MagentoObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o MagentoObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v MagentoObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o MagentoObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v MagentoObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o MagentoObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'MagentoObject'.
func (o MagentoObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MagentoObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Magento server source.
type MagentoSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'MagentoSource'.
	Type string `pulumi:"type"`
}

// MagentoSourceInput is an input type that accepts MagentoSourceArgs and MagentoSourceOutput values.
// You can construct a concrete instance of `MagentoSourceInput` via:
//
//          MagentoSourceArgs{...}
type MagentoSourceInput interface {
	pulumi.Input

	ToMagentoSourceOutput() MagentoSourceOutput
	ToMagentoSourceOutputWithContext(context.Context) MagentoSourceOutput
}

// A copy activity Magento server source.
type MagentoSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'MagentoSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MagentoSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MagentoSource)(nil)).Elem()
}

func (i MagentoSourceArgs) ToMagentoSourceOutput() MagentoSourceOutput {
	return i.ToMagentoSourceOutputWithContext(context.Background())
}

func (i MagentoSourceArgs) ToMagentoSourceOutputWithContext(ctx context.Context) MagentoSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MagentoSourceOutput)
}

// A copy activity Magento server source.
type MagentoSourceOutput struct{ *pulumi.OutputState }

func (MagentoSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MagentoSource)(nil)).Elem()
}

func (o MagentoSourceOutput) ToMagentoSourceOutput() MagentoSourceOutput {
	return o
}

func (o MagentoSourceOutput) ToMagentoSourceOutputWithContext(ctx context.Context) MagentoSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o MagentoSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o MagentoSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o MagentoSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'MagentoSource'.
func (o MagentoSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MagentoSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Magento server source.
type MagentoSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'MagentoSource'.
	Type string `pulumi:"type"`
}

// MagentoSourceResponseInput is an input type that accepts MagentoSourceResponseArgs and MagentoSourceResponseOutput values.
// You can construct a concrete instance of `MagentoSourceResponseInput` via:
//
//          MagentoSourceResponseArgs{...}
type MagentoSourceResponseInput interface {
	pulumi.Input

	ToMagentoSourceResponseOutput() MagentoSourceResponseOutput
	ToMagentoSourceResponseOutputWithContext(context.Context) MagentoSourceResponseOutput
}

// A copy activity Magento server source.
type MagentoSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'MagentoSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MagentoSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MagentoSourceResponse)(nil)).Elem()
}

func (i MagentoSourceResponseArgs) ToMagentoSourceResponseOutput() MagentoSourceResponseOutput {
	return i.ToMagentoSourceResponseOutputWithContext(context.Background())
}

func (i MagentoSourceResponseArgs) ToMagentoSourceResponseOutputWithContext(ctx context.Context) MagentoSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MagentoSourceResponseOutput)
}

// A copy activity Magento server source.
type MagentoSourceResponseOutput struct{ *pulumi.OutputState }

func (MagentoSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MagentoSourceResponse)(nil)).Elem()
}

func (o MagentoSourceResponseOutput) ToMagentoSourceResponseOutput() MagentoSourceResponseOutput {
	return o
}

func (o MagentoSourceResponseOutput) ToMagentoSourceResponseOutputWithContext(ctx context.Context) MagentoSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o MagentoSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o MagentoSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o MagentoSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v MagentoSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'MagentoSource'.
func (o MagentoSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MagentoSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Managed integration runtime, including managed elastic and managed dedicated integration runtimes.
type ManagedIntegrationRuntime struct {
	// The compute resource for managed integration runtime.
	ComputeProperties *IntegrationRuntimeComputeProperties `pulumi:"computeProperties"`
	// Integration runtime description.
	Description *string `pulumi:"description"`
	// SSIS properties for managed integration runtime.
	SsisProperties *IntegrationRuntimeSsisProperties `pulumi:"ssisProperties"`
	// Type of integration runtime.
	// Expected value is 'Managed'.
	Type string `pulumi:"type"`
}

// ManagedIntegrationRuntimeInput is an input type that accepts ManagedIntegrationRuntimeArgs and ManagedIntegrationRuntimeOutput values.
// You can construct a concrete instance of `ManagedIntegrationRuntimeInput` via:
//
//          ManagedIntegrationRuntimeArgs{...}
type ManagedIntegrationRuntimeInput interface {
	pulumi.Input

	ToManagedIntegrationRuntimeOutput() ManagedIntegrationRuntimeOutput
	ToManagedIntegrationRuntimeOutputWithContext(context.Context) ManagedIntegrationRuntimeOutput
}

// Managed integration runtime, including managed elastic and managed dedicated integration runtimes.
type ManagedIntegrationRuntimeArgs struct {
	// The compute resource for managed integration runtime.
	ComputeProperties IntegrationRuntimeComputePropertiesPtrInput `pulumi:"computeProperties"`
	// Integration runtime description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// SSIS properties for managed integration runtime.
	SsisProperties IntegrationRuntimeSsisPropertiesPtrInput `pulumi:"ssisProperties"`
	// Type of integration runtime.
	// Expected value is 'Managed'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagedIntegrationRuntimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIntegrationRuntime)(nil)).Elem()
}

func (i ManagedIntegrationRuntimeArgs) ToManagedIntegrationRuntimeOutput() ManagedIntegrationRuntimeOutput {
	return i.ToManagedIntegrationRuntimeOutputWithContext(context.Background())
}

func (i ManagedIntegrationRuntimeArgs) ToManagedIntegrationRuntimeOutputWithContext(ctx context.Context) ManagedIntegrationRuntimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIntegrationRuntimeOutput)
}

// Managed integration runtime, including managed elastic and managed dedicated integration runtimes.
type ManagedIntegrationRuntimeOutput struct{ *pulumi.OutputState }

func (ManagedIntegrationRuntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIntegrationRuntime)(nil)).Elem()
}

func (o ManagedIntegrationRuntimeOutput) ToManagedIntegrationRuntimeOutput() ManagedIntegrationRuntimeOutput {
	return o
}

func (o ManagedIntegrationRuntimeOutput) ToManagedIntegrationRuntimeOutputWithContext(ctx context.Context) ManagedIntegrationRuntimeOutput {
	return o
}

// The compute resource for managed integration runtime.
func (o ManagedIntegrationRuntimeOutput) ComputeProperties() IntegrationRuntimeComputePropertiesPtrOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntime) *IntegrationRuntimeComputeProperties { return v.ComputeProperties }).(IntegrationRuntimeComputePropertiesPtrOutput)
}

// Integration runtime description.
func (o ManagedIntegrationRuntimeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntime) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// SSIS properties for managed integration runtime.
func (o ManagedIntegrationRuntimeOutput) SsisProperties() IntegrationRuntimeSsisPropertiesPtrOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntime) *IntegrationRuntimeSsisProperties { return v.SsisProperties }).(IntegrationRuntimeSsisPropertiesPtrOutput)
}

// Type of integration runtime.
// Expected value is 'Managed'.
func (o ManagedIntegrationRuntimeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntime) string { return v.Type }).(pulumi.StringOutput)
}

// Error definition for managed integration runtime.
type ManagedIntegrationRuntimeErrorResponse struct {
	// Error code.
	Code string `pulumi:"code"`
	// Error message.
	Message string `pulumi:"message"`
	// Managed integration runtime error parameters.
	Parameters []string `pulumi:"parameters"`
	// The time when the error occurred.
	Time string `pulumi:"time"`
}

// ManagedIntegrationRuntimeErrorResponseInput is an input type that accepts ManagedIntegrationRuntimeErrorResponseArgs and ManagedIntegrationRuntimeErrorResponseOutput values.
// You can construct a concrete instance of `ManagedIntegrationRuntimeErrorResponseInput` via:
//
//          ManagedIntegrationRuntimeErrorResponseArgs{...}
type ManagedIntegrationRuntimeErrorResponseInput interface {
	pulumi.Input

	ToManagedIntegrationRuntimeErrorResponseOutput() ManagedIntegrationRuntimeErrorResponseOutput
	ToManagedIntegrationRuntimeErrorResponseOutputWithContext(context.Context) ManagedIntegrationRuntimeErrorResponseOutput
}

// Error definition for managed integration runtime.
type ManagedIntegrationRuntimeErrorResponseArgs struct {
	// Error code.
	Code pulumi.StringInput `pulumi:"code"`
	// Error message.
	Message pulumi.StringInput `pulumi:"message"`
	// Managed integration runtime error parameters.
	Parameters pulumi.StringArrayInput `pulumi:"parameters"`
	// The time when the error occurred.
	Time pulumi.StringInput `pulumi:"time"`
}

func (ManagedIntegrationRuntimeErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIntegrationRuntimeErrorResponse)(nil)).Elem()
}

func (i ManagedIntegrationRuntimeErrorResponseArgs) ToManagedIntegrationRuntimeErrorResponseOutput() ManagedIntegrationRuntimeErrorResponseOutput {
	return i.ToManagedIntegrationRuntimeErrorResponseOutputWithContext(context.Background())
}

func (i ManagedIntegrationRuntimeErrorResponseArgs) ToManagedIntegrationRuntimeErrorResponseOutputWithContext(ctx context.Context) ManagedIntegrationRuntimeErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIntegrationRuntimeErrorResponseOutput)
}

// ManagedIntegrationRuntimeErrorResponseArrayInput is an input type that accepts ManagedIntegrationRuntimeErrorResponseArray and ManagedIntegrationRuntimeErrorResponseArrayOutput values.
// You can construct a concrete instance of `ManagedIntegrationRuntimeErrorResponseArrayInput` via:
//
//          ManagedIntegrationRuntimeErrorResponseArray{ ManagedIntegrationRuntimeErrorResponseArgs{...} }
type ManagedIntegrationRuntimeErrorResponseArrayInput interface {
	pulumi.Input

	ToManagedIntegrationRuntimeErrorResponseArrayOutput() ManagedIntegrationRuntimeErrorResponseArrayOutput
	ToManagedIntegrationRuntimeErrorResponseArrayOutputWithContext(context.Context) ManagedIntegrationRuntimeErrorResponseArrayOutput
}

type ManagedIntegrationRuntimeErrorResponseArray []ManagedIntegrationRuntimeErrorResponseInput

func (ManagedIntegrationRuntimeErrorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedIntegrationRuntimeErrorResponse)(nil)).Elem()
}

func (i ManagedIntegrationRuntimeErrorResponseArray) ToManagedIntegrationRuntimeErrorResponseArrayOutput() ManagedIntegrationRuntimeErrorResponseArrayOutput {
	return i.ToManagedIntegrationRuntimeErrorResponseArrayOutputWithContext(context.Background())
}

func (i ManagedIntegrationRuntimeErrorResponseArray) ToManagedIntegrationRuntimeErrorResponseArrayOutputWithContext(ctx context.Context) ManagedIntegrationRuntimeErrorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIntegrationRuntimeErrorResponseArrayOutput)
}

// Error definition for managed integration runtime.
type ManagedIntegrationRuntimeErrorResponseOutput struct{ *pulumi.OutputState }

func (ManagedIntegrationRuntimeErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIntegrationRuntimeErrorResponse)(nil)).Elem()
}

func (o ManagedIntegrationRuntimeErrorResponseOutput) ToManagedIntegrationRuntimeErrorResponseOutput() ManagedIntegrationRuntimeErrorResponseOutput {
	return o
}

func (o ManagedIntegrationRuntimeErrorResponseOutput) ToManagedIntegrationRuntimeErrorResponseOutputWithContext(ctx context.Context) ManagedIntegrationRuntimeErrorResponseOutput {
	return o
}

// Error code.
func (o ManagedIntegrationRuntimeErrorResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeErrorResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Error message.
func (o ManagedIntegrationRuntimeErrorResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeErrorResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Managed integration runtime error parameters.
func (o ManagedIntegrationRuntimeErrorResponseOutput) Parameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeErrorResponse) []string { return v.Parameters }).(pulumi.StringArrayOutput)
}

// The time when the error occurred.
func (o ManagedIntegrationRuntimeErrorResponseOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeErrorResponse) string { return v.Time }).(pulumi.StringOutput)
}

type ManagedIntegrationRuntimeErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedIntegrationRuntimeErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedIntegrationRuntimeErrorResponse)(nil)).Elem()
}

func (o ManagedIntegrationRuntimeErrorResponseArrayOutput) ToManagedIntegrationRuntimeErrorResponseArrayOutput() ManagedIntegrationRuntimeErrorResponseArrayOutput {
	return o
}

func (o ManagedIntegrationRuntimeErrorResponseArrayOutput) ToManagedIntegrationRuntimeErrorResponseArrayOutputWithContext(ctx context.Context) ManagedIntegrationRuntimeErrorResponseArrayOutput {
	return o
}

func (o ManagedIntegrationRuntimeErrorResponseArrayOutput) Index(i pulumi.IntInput) ManagedIntegrationRuntimeErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedIntegrationRuntimeErrorResponse {
		return vs[0].([]ManagedIntegrationRuntimeErrorResponse)[vs[1].(int)]
	}).(ManagedIntegrationRuntimeErrorResponseOutput)
}

// Properties of integration runtime node.
type ManagedIntegrationRuntimeNodeResponse struct {
	// The errors that occurred on this integration runtime node.
	Errors []ManagedIntegrationRuntimeErrorResponse `pulumi:"errors"`
	// The managed integration runtime node id.
	NodeId string `pulumi:"nodeId"`
	// The managed integration runtime node status.
	Status string `pulumi:"status"`
}

// ManagedIntegrationRuntimeNodeResponseInput is an input type that accepts ManagedIntegrationRuntimeNodeResponseArgs and ManagedIntegrationRuntimeNodeResponseOutput values.
// You can construct a concrete instance of `ManagedIntegrationRuntimeNodeResponseInput` via:
//
//          ManagedIntegrationRuntimeNodeResponseArgs{...}
type ManagedIntegrationRuntimeNodeResponseInput interface {
	pulumi.Input

	ToManagedIntegrationRuntimeNodeResponseOutput() ManagedIntegrationRuntimeNodeResponseOutput
	ToManagedIntegrationRuntimeNodeResponseOutputWithContext(context.Context) ManagedIntegrationRuntimeNodeResponseOutput
}

// Properties of integration runtime node.
type ManagedIntegrationRuntimeNodeResponseArgs struct {
	// The errors that occurred on this integration runtime node.
	Errors ManagedIntegrationRuntimeErrorResponseArrayInput `pulumi:"errors"`
	// The managed integration runtime node id.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// The managed integration runtime node status.
	Status pulumi.StringInput `pulumi:"status"`
}

func (ManagedIntegrationRuntimeNodeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIntegrationRuntimeNodeResponse)(nil)).Elem()
}

func (i ManagedIntegrationRuntimeNodeResponseArgs) ToManagedIntegrationRuntimeNodeResponseOutput() ManagedIntegrationRuntimeNodeResponseOutput {
	return i.ToManagedIntegrationRuntimeNodeResponseOutputWithContext(context.Background())
}

func (i ManagedIntegrationRuntimeNodeResponseArgs) ToManagedIntegrationRuntimeNodeResponseOutputWithContext(ctx context.Context) ManagedIntegrationRuntimeNodeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIntegrationRuntimeNodeResponseOutput)
}

// ManagedIntegrationRuntimeNodeResponseArrayInput is an input type that accepts ManagedIntegrationRuntimeNodeResponseArray and ManagedIntegrationRuntimeNodeResponseArrayOutput values.
// You can construct a concrete instance of `ManagedIntegrationRuntimeNodeResponseArrayInput` via:
//
//          ManagedIntegrationRuntimeNodeResponseArray{ ManagedIntegrationRuntimeNodeResponseArgs{...} }
type ManagedIntegrationRuntimeNodeResponseArrayInput interface {
	pulumi.Input

	ToManagedIntegrationRuntimeNodeResponseArrayOutput() ManagedIntegrationRuntimeNodeResponseArrayOutput
	ToManagedIntegrationRuntimeNodeResponseArrayOutputWithContext(context.Context) ManagedIntegrationRuntimeNodeResponseArrayOutput
}

type ManagedIntegrationRuntimeNodeResponseArray []ManagedIntegrationRuntimeNodeResponseInput

func (ManagedIntegrationRuntimeNodeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedIntegrationRuntimeNodeResponse)(nil)).Elem()
}

func (i ManagedIntegrationRuntimeNodeResponseArray) ToManagedIntegrationRuntimeNodeResponseArrayOutput() ManagedIntegrationRuntimeNodeResponseArrayOutput {
	return i.ToManagedIntegrationRuntimeNodeResponseArrayOutputWithContext(context.Background())
}

func (i ManagedIntegrationRuntimeNodeResponseArray) ToManagedIntegrationRuntimeNodeResponseArrayOutputWithContext(ctx context.Context) ManagedIntegrationRuntimeNodeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIntegrationRuntimeNodeResponseArrayOutput)
}

// Properties of integration runtime node.
type ManagedIntegrationRuntimeNodeResponseOutput struct{ *pulumi.OutputState }

func (ManagedIntegrationRuntimeNodeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIntegrationRuntimeNodeResponse)(nil)).Elem()
}

func (o ManagedIntegrationRuntimeNodeResponseOutput) ToManagedIntegrationRuntimeNodeResponseOutput() ManagedIntegrationRuntimeNodeResponseOutput {
	return o
}

func (o ManagedIntegrationRuntimeNodeResponseOutput) ToManagedIntegrationRuntimeNodeResponseOutputWithContext(ctx context.Context) ManagedIntegrationRuntimeNodeResponseOutput {
	return o
}

// The errors that occurred on this integration runtime node.
func (o ManagedIntegrationRuntimeNodeResponseOutput) Errors() ManagedIntegrationRuntimeErrorResponseArrayOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeNodeResponse) []ManagedIntegrationRuntimeErrorResponse {
		return v.Errors
	}).(ManagedIntegrationRuntimeErrorResponseArrayOutput)
}

// The managed integration runtime node id.
func (o ManagedIntegrationRuntimeNodeResponseOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeNodeResponse) string { return v.NodeId }).(pulumi.StringOutput)
}

// The managed integration runtime node status.
func (o ManagedIntegrationRuntimeNodeResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeNodeResponse) string { return v.Status }).(pulumi.StringOutput)
}

type ManagedIntegrationRuntimeNodeResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedIntegrationRuntimeNodeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedIntegrationRuntimeNodeResponse)(nil)).Elem()
}

func (o ManagedIntegrationRuntimeNodeResponseArrayOutput) ToManagedIntegrationRuntimeNodeResponseArrayOutput() ManagedIntegrationRuntimeNodeResponseArrayOutput {
	return o
}

func (o ManagedIntegrationRuntimeNodeResponseArrayOutput) ToManagedIntegrationRuntimeNodeResponseArrayOutputWithContext(ctx context.Context) ManagedIntegrationRuntimeNodeResponseArrayOutput {
	return o
}

func (o ManagedIntegrationRuntimeNodeResponseArrayOutput) Index(i pulumi.IntInput) ManagedIntegrationRuntimeNodeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedIntegrationRuntimeNodeResponse {
		return vs[0].([]ManagedIntegrationRuntimeNodeResponse)[vs[1].(int)]
	}).(ManagedIntegrationRuntimeNodeResponseOutput)
}

// Properties of managed integration runtime operation result.
type ManagedIntegrationRuntimeOperationResultResponse struct {
	// The activity id for the operation request.
	ActivityId string `pulumi:"activityId"`
	// The error code.
	ErrorCode string `pulumi:"errorCode"`
	// Managed integration runtime error parameters.
	Parameters []string `pulumi:"parameters"`
	// The operation result.
	Result string `pulumi:"result"`
	// The start time of the operation.
	StartTime string `pulumi:"startTime"`
	// The operation type. Could be start or stop.
	Type string `pulumi:"type"`
}

// ManagedIntegrationRuntimeOperationResultResponseInput is an input type that accepts ManagedIntegrationRuntimeOperationResultResponseArgs and ManagedIntegrationRuntimeOperationResultResponseOutput values.
// You can construct a concrete instance of `ManagedIntegrationRuntimeOperationResultResponseInput` via:
//
//          ManagedIntegrationRuntimeOperationResultResponseArgs{...}
type ManagedIntegrationRuntimeOperationResultResponseInput interface {
	pulumi.Input

	ToManagedIntegrationRuntimeOperationResultResponseOutput() ManagedIntegrationRuntimeOperationResultResponseOutput
	ToManagedIntegrationRuntimeOperationResultResponseOutputWithContext(context.Context) ManagedIntegrationRuntimeOperationResultResponseOutput
}

// Properties of managed integration runtime operation result.
type ManagedIntegrationRuntimeOperationResultResponseArgs struct {
	// The activity id for the operation request.
	ActivityId pulumi.StringInput `pulumi:"activityId"`
	// The error code.
	ErrorCode pulumi.StringInput `pulumi:"errorCode"`
	// Managed integration runtime error parameters.
	Parameters pulumi.StringArrayInput `pulumi:"parameters"`
	// The operation result.
	Result pulumi.StringInput `pulumi:"result"`
	// The start time of the operation.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// The operation type. Could be start or stop.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagedIntegrationRuntimeOperationResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIntegrationRuntimeOperationResultResponse)(nil)).Elem()
}

func (i ManagedIntegrationRuntimeOperationResultResponseArgs) ToManagedIntegrationRuntimeOperationResultResponseOutput() ManagedIntegrationRuntimeOperationResultResponseOutput {
	return i.ToManagedIntegrationRuntimeOperationResultResponseOutputWithContext(context.Background())
}

func (i ManagedIntegrationRuntimeOperationResultResponseArgs) ToManagedIntegrationRuntimeOperationResultResponseOutputWithContext(ctx context.Context) ManagedIntegrationRuntimeOperationResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIntegrationRuntimeOperationResultResponseOutput)
}

// Properties of managed integration runtime operation result.
type ManagedIntegrationRuntimeOperationResultResponseOutput struct{ *pulumi.OutputState }

func (ManagedIntegrationRuntimeOperationResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIntegrationRuntimeOperationResultResponse)(nil)).Elem()
}

func (o ManagedIntegrationRuntimeOperationResultResponseOutput) ToManagedIntegrationRuntimeOperationResultResponseOutput() ManagedIntegrationRuntimeOperationResultResponseOutput {
	return o
}

func (o ManagedIntegrationRuntimeOperationResultResponseOutput) ToManagedIntegrationRuntimeOperationResultResponseOutputWithContext(ctx context.Context) ManagedIntegrationRuntimeOperationResultResponseOutput {
	return o
}

// The activity id for the operation request.
func (o ManagedIntegrationRuntimeOperationResultResponseOutput) ActivityId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeOperationResultResponse) string { return v.ActivityId }).(pulumi.StringOutput)
}

// The error code.
func (o ManagedIntegrationRuntimeOperationResultResponseOutput) ErrorCode() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeOperationResultResponse) string { return v.ErrorCode }).(pulumi.StringOutput)
}

// Managed integration runtime error parameters.
func (o ManagedIntegrationRuntimeOperationResultResponseOutput) Parameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeOperationResultResponse) []string { return v.Parameters }).(pulumi.StringArrayOutput)
}

// The operation result.
func (o ManagedIntegrationRuntimeOperationResultResponseOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeOperationResultResponse) string { return v.Result }).(pulumi.StringOutput)
}

// The start time of the operation.
func (o ManagedIntegrationRuntimeOperationResultResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeOperationResultResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// The operation type. Could be start or stop.
func (o ManagedIntegrationRuntimeOperationResultResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeOperationResultResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Managed integration runtime, including managed elastic and managed dedicated integration runtimes.
type ManagedIntegrationRuntimeResponse struct {
	// The compute resource for managed integration runtime.
	ComputeProperties *IntegrationRuntimeComputePropertiesResponse `pulumi:"computeProperties"`
	// Integration runtime description.
	Description *string `pulumi:"description"`
	// SSIS properties for managed integration runtime.
	SsisProperties *IntegrationRuntimeSsisPropertiesResponse `pulumi:"ssisProperties"`
	// Integration runtime state, only valid for managed dedicated integration runtime.
	State string `pulumi:"state"`
	// Type of integration runtime.
	// Expected value is 'Managed'.
	Type string `pulumi:"type"`
}

// ManagedIntegrationRuntimeResponseInput is an input type that accepts ManagedIntegrationRuntimeResponseArgs and ManagedIntegrationRuntimeResponseOutput values.
// You can construct a concrete instance of `ManagedIntegrationRuntimeResponseInput` via:
//
//          ManagedIntegrationRuntimeResponseArgs{...}
type ManagedIntegrationRuntimeResponseInput interface {
	pulumi.Input

	ToManagedIntegrationRuntimeResponseOutput() ManagedIntegrationRuntimeResponseOutput
	ToManagedIntegrationRuntimeResponseOutputWithContext(context.Context) ManagedIntegrationRuntimeResponseOutput
}

// Managed integration runtime, including managed elastic and managed dedicated integration runtimes.
type ManagedIntegrationRuntimeResponseArgs struct {
	// The compute resource for managed integration runtime.
	ComputeProperties IntegrationRuntimeComputePropertiesResponsePtrInput `pulumi:"computeProperties"`
	// Integration runtime description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// SSIS properties for managed integration runtime.
	SsisProperties IntegrationRuntimeSsisPropertiesResponsePtrInput `pulumi:"ssisProperties"`
	// Integration runtime state, only valid for managed dedicated integration runtime.
	State pulumi.StringInput `pulumi:"state"`
	// Type of integration runtime.
	// Expected value is 'Managed'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagedIntegrationRuntimeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIntegrationRuntimeResponse)(nil)).Elem()
}

func (i ManagedIntegrationRuntimeResponseArgs) ToManagedIntegrationRuntimeResponseOutput() ManagedIntegrationRuntimeResponseOutput {
	return i.ToManagedIntegrationRuntimeResponseOutputWithContext(context.Background())
}

func (i ManagedIntegrationRuntimeResponseArgs) ToManagedIntegrationRuntimeResponseOutputWithContext(ctx context.Context) ManagedIntegrationRuntimeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIntegrationRuntimeResponseOutput)
}

// Managed integration runtime, including managed elastic and managed dedicated integration runtimes.
type ManagedIntegrationRuntimeResponseOutput struct{ *pulumi.OutputState }

func (ManagedIntegrationRuntimeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIntegrationRuntimeResponse)(nil)).Elem()
}

func (o ManagedIntegrationRuntimeResponseOutput) ToManagedIntegrationRuntimeResponseOutput() ManagedIntegrationRuntimeResponseOutput {
	return o
}

func (o ManagedIntegrationRuntimeResponseOutput) ToManagedIntegrationRuntimeResponseOutputWithContext(ctx context.Context) ManagedIntegrationRuntimeResponseOutput {
	return o
}

// The compute resource for managed integration runtime.
func (o ManagedIntegrationRuntimeResponseOutput) ComputeProperties() IntegrationRuntimeComputePropertiesResponsePtrOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeResponse) *IntegrationRuntimeComputePropertiesResponse {
		return v.ComputeProperties
	}).(IntegrationRuntimeComputePropertiesResponsePtrOutput)
}

// Integration runtime description.
func (o ManagedIntegrationRuntimeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// SSIS properties for managed integration runtime.
func (o ManagedIntegrationRuntimeResponseOutput) SsisProperties() IntegrationRuntimeSsisPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeResponse) *IntegrationRuntimeSsisPropertiesResponse {
		return v.SsisProperties
	}).(IntegrationRuntimeSsisPropertiesResponsePtrOutput)
}

// Integration runtime state, only valid for managed dedicated integration runtime.
func (o ManagedIntegrationRuntimeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Type of integration runtime.
// Expected value is 'Managed'.
func (o ManagedIntegrationRuntimeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Managed integration runtime status.
type ManagedIntegrationRuntimeStatusResponse struct {
	// The time at which the integration runtime was created, in ISO8601 format.
	CreateTime string `pulumi:"createTime"`
	// The data factory name which the integration runtime belong to.
	DataFactoryName string `pulumi:"dataFactoryName"`
	// The last operation result that occurred on this integration runtime.
	LastOperation ManagedIntegrationRuntimeOperationResultResponse `pulumi:"lastOperation"`
	// The list of nodes for managed integration runtime.
	Nodes []ManagedIntegrationRuntimeNodeResponse `pulumi:"nodes"`
	// The errors that occurred on this integration runtime.
	OtherErrors []ManagedIntegrationRuntimeErrorResponse `pulumi:"otherErrors"`
	// The state of integration runtime.
	State string `pulumi:"state"`
	// Type of integration runtime.
	// Expected value is 'Managed'.
	Type *string `pulumi:"type"`
}

// ManagedIntegrationRuntimeStatusResponseInput is an input type that accepts ManagedIntegrationRuntimeStatusResponseArgs and ManagedIntegrationRuntimeStatusResponseOutput values.
// You can construct a concrete instance of `ManagedIntegrationRuntimeStatusResponseInput` via:
//
//          ManagedIntegrationRuntimeStatusResponseArgs{...}
type ManagedIntegrationRuntimeStatusResponseInput interface {
	pulumi.Input

	ToManagedIntegrationRuntimeStatusResponseOutput() ManagedIntegrationRuntimeStatusResponseOutput
	ToManagedIntegrationRuntimeStatusResponseOutputWithContext(context.Context) ManagedIntegrationRuntimeStatusResponseOutput
}

// Managed integration runtime status.
type ManagedIntegrationRuntimeStatusResponseArgs struct {
	// The time at which the integration runtime was created, in ISO8601 format.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The data factory name which the integration runtime belong to.
	DataFactoryName pulumi.StringInput `pulumi:"dataFactoryName"`
	// The last operation result that occurred on this integration runtime.
	LastOperation ManagedIntegrationRuntimeOperationResultResponseInput `pulumi:"lastOperation"`
	// The list of nodes for managed integration runtime.
	Nodes ManagedIntegrationRuntimeNodeResponseArrayInput `pulumi:"nodes"`
	// The errors that occurred on this integration runtime.
	OtherErrors ManagedIntegrationRuntimeErrorResponseArrayInput `pulumi:"otherErrors"`
	// The state of integration runtime.
	State pulumi.StringInput `pulumi:"state"`
	// Type of integration runtime.
	// Expected value is 'Managed'.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ManagedIntegrationRuntimeStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIntegrationRuntimeStatusResponse)(nil)).Elem()
}

func (i ManagedIntegrationRuntimeStatusResponseArgs) ToManagedIntegrationRuntimeStatusResponseOutput() ManagedIntegrationRuntimeStatusResponseOutput {
	return i.ToManagedIntegrationRuntimeStatusResponseOutputWithContext(context.Background())
}

func (i ManagedIntegrationRuntimeStatusResponseArgs) ToManagedIntegrationRuntimeStatusResponseOutputWithContext(ctx context.Context) ManagedIntegrationRuntimeStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIntegrationRuntimeStatusResponseOutput)
}

// Managed integration runtime status.
type ManagedIntegrationRuntimeStatusResponseOutput struct{ *pulumi.OutputState }

func (ManagedIntegrationRuntimeStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIntegrationRuntimeStatusResponse)(nil)).Elem()
}

func (o ManagedIntegrationRuntimeStatusResponseOutput) ToManagedIntegrationRuntimeStatusResponseOutput() ManagedIntegrationRuntimeStatusResponseOutput {
	return o
}

func (o ManagedIntegrationRuntimeStatusResponseOutput) ToManagedIntegrationRuntimeStatusResponseOutputWithContext(ctx context.Context) ManagedIntegrationRuntimeStatusResponseOutput {
	return o
}

// The time at which the integration runtime was created, in ISO8601 format.
func (o ManagedIntegrationRuntimeStatusResponseOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeStatusResponse) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The data factory name which the integration runtime belong to.
func (o ManagedIntegrationRuntimeStatusResponseOutput) DataFactoryName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeStatusResponse) string { return v.DataFactoryName }).(pulumi.StringOutput)
}

// The last operation result that occurred on this integration runtime.
func (o ManagedIntegrationRuntimeStatusResponseOutput) LastOperation() ManagedIntegrationRuntimeOperationResultResponseOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeStatusResponse) ManagedIntegrationRuntimeOperationResultResponse {
		return v.LastOperation
	}).(ManagedIntegrationRuntimeOperationResultResponseOutput)
}

// The list of nodes for managed integration runtime.
func (o ManagedIntegrationRuntimeStatusResponseOutput) Nodes() ManagedIntegrationRuntimeNodeResponseArrayOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeStatusResponse) []ManagedIntegrationRuntimeNodeResponse {
		return v.Nodes
	}).(ManagedIntegrationRuntimeNodeResponseArrayOutput)
}

// The errors that occurred on this integration runtime.
func (o ManagedIntegrationRuntimeStatusResponseOutput) OtherErrors() ManagedIntegrationRuntimeErrorResponseArrayOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeStatusResponse) []ManagedIntegrationRuntimeErrorResponse {
		return v.OtherErrors
	}).(ManagedIntegrationRuntimeErrorResponseArrayOutput)
}

// The state of integration runtime.
func (o ManagedIntegrationRuntimeStatusResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeStatusResponse) string { return v.State }).(pulumi.StringOutput)
}

// Type of integration runtime.
// Expected value is 'Managed'.
func (o ManagedIntegrationRuntimeStatusResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIntegrationRuntimeStatusResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// MariaDB server linked service.
type MariaDBLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'MariaDB'.
	Type string `pulumi:"type"`
}

// MariaDBLinkedServiceInput is an input type that accepts MariaDBLinkedServiceArgs and MariaDBLinkedServiceOutput values.
// You can construct a concrete instance of `MariaDBLinkedServiceInput` via:
//
//          MariaDBLinkedServiceArgs{...}
type MariaDBLinkedServiceInput interface {
	pulumi.Input

	ToMariaDBLinkedServiceOutput() MariaDBLinkedServiceOutput
	ToMariaDBLinkedServiceOutputWithContext(context.Context) MariaDBLinkedServiceOutput
}

// MariaDB server linked service.
type MariaDBLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'MariaDB'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MariaDBLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBLinkedService)(nil)).Elem()
}

func (i MariaDBLinkedServiceArgs) ToMariaDBLinkedServiceOutput() MariaDBLinkedServiceOutput {
	return i.ToMariaDBLinkedServiceOutputWithContext(context.Background())
}

func (i MariaDBLinkedServiceArgs) ToMariaDBLinkedServiceOutputWithContext(ctx context.Context) MariaDBLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBLinkedServiceOutput)
}

// MariaDB server linked service.
type MariaDBLinkedServiceOutput struct{ *pulumi.OutputState }

func (MariaDBLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBLinkedService)(nil)).Elem()
}

func (o MariaDBLinkedServiceOutput) ToMariaDBLinkedServiceOutput() MariaDBLinkedServiceOutput {
	return o
}

func (o MariaDBLinkedServiceOutput) ToMariaDBLinkedServiceOutputWithContext(ctx context.Context) MariaDBLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o MariaDBLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MariaDBLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o MariaDBLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v MariaDBLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o MariaDBLinkedServiceOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v MariaDBLinkedService) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o MariaDBLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MariaDBLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o MariaDBLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v MariaDBLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o MariaDBLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v MariaDBLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'MariaDB'.
func (o MariaDBLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MariaDBLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// MariaDB server linked service.
type MariaDBLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'MariaDB'.
	Type string `pulumi:"type"`
}

// MariaDBLinkedServiceResponseInput is an input type that accepts MariaDBLinkedServiceResponseArgs and MariaDBLinkedServiceResponseOutput values.
// You can construct a concrete instance of `MariaDBLinkedServiceResponseInput` via:
//
//          MariaDBLinkedServiceResponseArgs{...}
type MariaDBLinkedServiceResponseInput interface {
	pulumi.Input

	ToMariaDBLinkedServiceResponseOutput() MariaDBLinkedServiceResponseOutput
	ToMariaDBLinkedServiceResponseOutputWithContext(context.Context) MariaDBLinkedServiceResponseOutput
}

// MariaDB server linked service.
type MariaDBLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'MariaDB'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MariaDBLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBLinkedServiceResponse)(nil)).Elem()
}

func (i MariaDBLinkedServiceResponseArgs) ToMariaDBLinkedServiceResponseOutput() MariaDBLinkedServiceResponseOutput {
	return i.ToMariaDBLinkedServiceResponseOutputWithContext(context.Background())
}

func (i MariaDBLinkedServiceResponseArgs) ToMariaDBLinkedServiceResponseOutputWithContext(ctx context.Context) MariaDBLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBLinkedServiceResponseOutput)
}

// MariaDB server linked service.
type MariaDBLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (MariaDBLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBLinkedServiceResponse)(nil)).Elem()
}

func (o MariaDBLinkedServiceResponseOutput) ToMariaDBLinkedServiceResponseOutput() MariaDBLinkedServiceResponseOutput {
	return o
}

func (o MariaDBLinkedServiceResponseOutput) ToMariaDBLinkedServiceResponseOutputWithContext(ctx context.Context) MariaDBLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o MariaDBLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MariaDBLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o MariaDBLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v MariaDBLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o MariaDBLinkedServiceResponseOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v MariaDBLinkedServiceResponse) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o MariaDBLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MariaDBLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o MariaDBLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v MariaDBLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o MariaDBLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v MariaDBLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'MariaDB'.
func (o MariaDBLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MariaDBLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity MariaDB server source.
type MariaDBSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'MariaDBSource'.
	Type string `pulumi:"type"`
}

// MariaDBSourceInput is an input type that accepts MariaDBSourceArgs and MariaDBSourceOutput values.
// You can construct a concrete instance of `MariaDBSourceInput` via:
//
//          MariaDBSourceArgs{...}
type MariaDBSourceInput interface {
	pulumi.Input

	ToMariaDBSourceOutput() MariaDBSourceOutput
	ToMariaDBSourceOutputWithContext(context.Context) MariaDBSourceOutput
}

// A copy activity MariaDB server source.
type MariaDBSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'MariaDBSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MariaDBSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBSource)(nil)).Elem()
}

func (i MariaDBSourceArgs) ToMariaDBSourceOutput() MariaDBSourceOutput {
	return i.ToMariaDBSourceOutputWithContext(context.Background())
}

func (i MariaDBSourceArgs) ToMariaDBSourceOutputWithContext(ctx context.Context) MariaDBSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBSourceOutput)
}

// A copy activity MariaDB server source.
type MariaDBSourceOutput struct{ *pulumi.OutputState }

func (MariaDBSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBSource)(nil)).Elem()
}

func (o MariaDBSourceOutput) ToMariaDBSourceOutput() MariaDBSourceOutput {
	return o
}

func (o MariaDBSourceOutput) ToMariaDBSourceOutputWithContext(ctx context.Context) MariaDBSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o MariaDBSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v MariaDBSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o MariaDBSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v MariaDBSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o MariaDBSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v MariaDBSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'MariaDBSource'.
func (o MariaDBSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MariaDBSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity MariaDB server source.
type MariaDBSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'MariaDBSource'.
	Type string `pulumi:"type"`
}

// MariaDBSourceResponseInput is an input type that accepts MariaDBSourceResponseArgs and MariaDBSourceResponseOutput values.
// You can construct a concrete instance of `MariaDBSourceResponseInput` via:
//
//          MariaDBSourceResponseArgs{...}
type MariaDBSourceResponseInput interface {
	pulumi.Input

	ToMariaDBSourceResponseOutput() MariaDBSourceResponseOutput
	ToMariaDBSourceResponseOutputWithContext(context.Context) MariaDBSourceResponseOutput
}

// A copy activity MariaDB server source.
type MariaDBSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'MariaDBSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MariaDBSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBSourceResponse)(nil)).Elem()
}

func (i MariaDBSourceResponseArgs) ToMariaDBSourceResponseOutput() MariaDBSourceResponseOutput {
	return i.ToMariaDBSourceResponseOutputWithContext(context.Background())
}

func (i MariaDBSourceResponseArgs) ToMariaDBSourceResponseOutputWithContext(ctx context.Context) MariaDBSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBSourceResponseOutput)
}

// A copy activity MariaDB server source.
type MariaDBSourceResponseOutput struct{ *pulumi.OutputState }

func (MariaDBSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBSourceResponse)(nil)).Elem()
}

func (o MariaDBSourceResponseOutput) ToMariaDBSourceResponseOutput() MariaDBSourceResponseOutput {
	return o
}

func (o MariaDBSourceResponseOutput) ToMariaDBSourceResponseOutputWithContext(ctx context.Context) MariaDBSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o MariaDBSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v MariaDBSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o MariaDBSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v MariaDBSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o MariaDBSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v MariaDBSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'MariaDBSource'.
func (o MariaDBSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MariaDBSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// MariaDB server dataset.
type MariaDBTableDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'MariaDBTable'.
	Type string `pulumi:"type"`
}

// MariaDBTableDatasetInput is an input type that accepts MariaDBTableDatasetArgs and MariaDBTableDatasetOutput values.
// You can construct a concrete instance of `MariaDBTableDatasetInput` via:
//
//          MariaDBTableDatasetArgs{...}
type MariaDBTableDatasetInput interface {
	pulumi.Input

	ToMariaDBTableDatasetOutput() MariaDBTableDatasetOutput
	ToMariaDBTableDatasetOutputWithContext(context.Context) MariaDBTableDatasetOutput
}

// MariaDB server dataset.
type MariaDBTableDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'MariaDBTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MariaDBTableDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBTableDataset)(nil)).Elem()
}

func (i MariaDBTableDatasetArgs) ToMariaDBTableDatasetOutput() MariaDBTableDatasetOutput {
	return i.ToMariaDBTableDatasetOutputWithContext(context.Background())
}

func (i MariaDBTableDatasetArgs) ToMariaDBTableDatasetOutputWithContext(ctx context.Context) MariaDBTableDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBTableDatasetOutput)
}

// MariaDB server dataset.
type MariaDBTableDatasetOutput struct{ *pulumi.OutputState }

func (MariaDBTableDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBTableDataset)(nil)).Elem()
}

func (o MariaDBTableDatasetOutput) ToMariaDBTableDatasetOutput() MariaDBTableDatasetOutput {
	return o
}

func (o MariaDBTableDatasetOutput) ToMariaDBTableDatasetOutputWithContext(ctx context.Context) MariaDBTableDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o MariaDBTableDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MariaDBTableDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o MariaDBTableDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MariaDBTableDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o MariaDBTableDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v MariaDBTableDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o MariaDBTableDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v MariaDBTableDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o MariaDBTableDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v MariaDBTableDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'MariaDBTable'.
func (o MariaDBTableDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MariaDBTableDataset) string { return v.Type }).(pulumi.StringOutput)
}

// MariaDB server dataset.
type MariaDBTableDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'MariaDBTable'.
	Type string `pulumi:"type"`
}

// MariaDBTableDatasetResponseInput is an input type that accepts MariaDBTableDatasetResponseArgs and MariaDBTableDatasetResponseOutput values.
// You can construct a concrete instance of `MariaDBTableDatasetResponseInput` via:
//
//          MariaDBTableDatasetResponseArgs{...}
type MariaDBTableDatasetResponseInput interface {
	pulumi.Input

	ToMariaDBTableDatasetResponseOutput() MariaDBTableDatasetResponseOutput
	ToMariaDBTableDatasetResponseOutputWithContext(context.Context) MariaDBTableDatasetResponseOutput
}

// MariaDB server dataset.
type MariaDBTableDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'MariaDBTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MariaDBTableDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBTableDatasetResponse)(nil)).Elem()
}

func (i MariaDBTableDatasetResponseArgs) ToMariaDBTableDatasetResponseOutput() MariaDBTableDatasetResponseOutput {
	return i.ToMariaDBTableDatasetResponseOutputWithContext(context.Background())
}

func (i MariaDBTableDatasetResponseArgs) ToMariaDBTableDatasetResponseOutputWithContext(ctx context.Context) MariaDBTableDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBTableDatasetResponseOutput)
}

// MariaDB server dataset.
type MariaDBTableDatasetResponseOutput struct{ *pulumi.OutputState }

func (MariaDBTableDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBTableDatasetResponse)(nil)).Elem()
}

func (o MariaDBTableDatasetResponseOutput) ToMariaDBTableDatasetResponseOutput() MariaDBTableDatasetResponseOutput {
	return o
}

func (o MariaDBTableDatasetResponseOutput) ToMariaDBTableDatasetResponseOutputWithContext(ctx context.Context) MariaDBTableDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o MariaDBTableDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MariaDBTableDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o MariaDBTableDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MariaDBTableDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o MariaDBTableDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v MariaDBTableDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o MariaDBTableDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v MariaDBTableDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o MariaDBTableDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v MariaDBTableDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'MariaDBTable'.
func (o MariaDBTableDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MariaDBTableDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Marketo server linked service.
type MarketoLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The client Id of your Marketo service.
	ClientId interface{} `pulumi:"clientId"`
	// The client secret of your Marketo service.
	ClientSecret interface{} `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the Marketo server. (i.e. 123-ABC-321.mktorest.com)
	Endpoint interface{} `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Marketo'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// MarketoLinkedServiceInput is an input type that accepts MarketoLinkedServiceArgs and MarketoLinkedServiceOutput values.
// You can construct a concrete instance of `MarketoLinkedServiceInput` via:
//
//          MarketoLinkedServiceArgs{...}
type MarketoLinkedServiceInput interface {
	pulumi.Input

	ToMarketoLinkedServiceOutput() MarketoLinkedServiceOutput
	ToMarketoLinkedServiceOutputWithContext(context.Context) MarketoLinkedServiceOutput
}

// Marketo server linked service.
type MarketoLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The client Id of your Marketo service.
	ClientId pulumi.Input `pulumi:"clientId"`
	// The client secret of your Marketo service.
	ClientSecret pulumi.Input `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the Marketo server. (i.e. 123-ABC-321.mktorest.com)
	Endpoint pulumi.Input `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Marketo'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (MarketoLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketoLinkedService)(nil)).Elem()
}

func (i MarketoLinkedServiceArgs) ToMarketoLinkedServiceOutput() MarketoLinkedServiceOutput {
	return i.ToMarketoLinkedServiceOutputWithContext(context.Background())
}

func (i MarketoLinkedServiceArgs) ToMarketoLinkedServiceOutputWithContext(ctx context.Context) MarketoLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketoLinkedServiceOutput)
}

// Marketo server linked service.
type MarketoLinkedServiceOutput struct{ *pulumi.OutputState }

func (MarketoLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketoLinkedService)(nil)).Elem()
}

func (o MarketoLinkedServiceOutput) ToMarketoLinkedServiceOutput() MarketoLinkedServiceOutput {
	return o
}

func (o MarketoLinkedServiceOutput) ToMarketoLinkedServiceOutputWithContext(ctx context.Context) MarketoLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o MarketoLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MarketoLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The client Id of your Marketo service.
func (o MarketoLinkedServiceOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoLinkedService) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The client secret of your Marketo service.
func (o MarketoLinkedServiceOutput) ClientSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoLinkedService) interface{} { return v.ClientSecret }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o MarketoLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v MarketoLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o MarketoLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MarketoLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o MarketoLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the Marketo server. (i.e. 123-ABC-321.mktorest.com)
func (o MarketoLinkedServiceOutput) Endpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoLinkedService) interface{} { return v.Endpoint }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o MarketoLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v MarketoLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'Marketo'.
func (o MarketoLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MarketoLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o MarketoLinkedServiceOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoLinkedService) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o MarketoLinkedServiceOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoLinkedService) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o MarketoLinkedServiceOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoLinkedService) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Marketo server linked service.
type MarketoLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The client Id of your Marketo service.
	ClientId interface{} `pulumi:"clientId"`
	// The client secret of your Marketo service.
	ClientSecret interface{} `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the Marketo server. (i.e. 123-ABC-321.mktorest.com)
	Endpoint interface{} `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Marketo'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// MarketoLinkedServiceResponseInput is an input type that accepts MarketoLinkedServiceResponseArgs and MarketoLinkedServiceResponseOutput values.
// You can construct a concrete instance of `MarketoLinkedServiceResponseInput` via:
//
//          MarketoLinkedServiceResponseArgs{...}
type MarketoLinkedServiceResponseInput interface {
	pulumi.Input

	ToMarketoLinkedServiceResponseOutput() MarketoLinkedServiceResponseOutput
	ToMarketoLinkedServiceResponseOutputWithContext(context.Context) MarketoLinkedServiceResponseOutput
}

// Marketo server linked service.
type MarketoLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The client Id of your Marketo service.
	ClientId pulumi.Input `pulumi:"clientId"`
	// The client secret of your Marketo service.
	ClientSecret pulumi.Input `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the Marketo server. (i.e. 123-ABC-321.mktorest.com)
	Endpoint pulumi.Input `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Marketo'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (MarketoLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketoLinkedServiceResponse)(nil)).Elem()
}

func (i MarketoLinkedServiceResponseArgs) ToMarketoLinkedServiceResponseOutput() MarketoLinkedServiceResponseOutput {
	return i.ToMarketoLinkedServiceResponseOutputWithContext(context.Background())
}

func (i MarketoLinkedServiceResponseArgs) ToMarketoLinkedServiceResponseOutputWithContext(ctx context.Context) MarketoLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketoLinkedServiceResponseOutput)
}

// Marketo server linked service.
type MarketoLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (MarketoLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketoLinkedServiceResponse)(nil)).Elem()
}

func (o MarketoLinkedServiceResponseOutput) ToMarketoLinkedServiceResponseOutput() MarketoLinkedServiceResponseOutput {
	return o
}

func (o MarketoLinkedServiceResponseOutput) ToMarketoLinkedServiceResponseOutputWithContext(ctx context.Context) MarketoLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o MarketoLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MarketoLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The client Id of your Marketo service.
func (o MarketoLinkedServiceResponseOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoLinkedServiceResponse) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The client secret of your Marketo service.
func (o MarketoLinkedServiceResponseOutput) ClientSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoLinkedServiceResponse) interface{} { return v.ClientSecret }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o MarketoLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v MarketoLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o MarketoLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MarketoLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o MarketoLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the Marketo server. (i.e. 123-ABC-321.mktorest.com)
func (o MarketoLinkedServiceResponseOutput) Endpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoLinkedServiceResponse) interface{} { return v.Endpoint }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o MarketoLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v MarketoLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'Marketo'.
func (o MarketoLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MarketoLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o MarketoLinkedServiceResponseOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoLinkedServiceResponse) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o MarketoLinkedServiceResponseOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoLinkedServiceResponse) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o MarketoLinkedServiceResponseOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoLinkedServiceResponse) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Marketo server dataset.
type MarketoObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'MarketoObject'.
	Type string `pulumi:"type"`
}

// MarketoObjectDatasetInput is an input type that accepts MarketoObjectDatasetArgs and MarketoObjectDatasetOutput values.
// You can construct a concrete instance of `MarketoObjectDatasetInput` via:
//
//          MarketoObjectDatasetArgs{...}
type MarketoObjectDatasetInput interface {
	pulumi.Input

	ToMarketoObjectDatasetOutput() MarketoObjectDatasetOutput
	ToMarketoObjectDatasetOutputWithContext(context.Context) MarketoObjectDatasetOutput
}

// Marketo server dataset.
type MarketoObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'MarketoObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MarketoObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketoObjectDataset)(nil)).Elem()
}

func (i MarketoObjectDatasetArgs) ToMarketoObjectDatasetOutput() MarketoObjectDatasetOutput {
	return i.ToMarketoObjectDatasetOutputWithContext(context.Background())
}

func (i MarketoObjectDatasetArgs) ToMarketoObjectDatasetOutputWithContext(ctx context.Context) MarketoObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketoObjectDatasetOutput)
}

// Marketo server dataset.
type MarketoObjectDatasetOutput struct{ *pulumi.OutputState }

func (MarketoObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketoObjectDataset)(nil)).Elem()
}

func (o MarketoObjectDatasetOutput) ToMarketoObjectDatasetOutput() MarketoObjectDatasetOutput {
	return o
}

func (o MarketoObjectDatasetOutput) ToMarketoObjectDatasetOutputWithContext(ctx context.Context) MarketoObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o MarketoObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MarketoObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o MarketoObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MarketoObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o MarketoObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v MarketoObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o MarketoObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v MarketoObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o MarketoObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'MarketoObject'.
func (o MarketoObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MarketoObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Marketo server dataset.
type MarketoObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'MarketoObject'.
	Type string `pulumi:"type"`
}

// MarketoObjectDatasetResponseInput is an input type that accepts MarketoObjectDatasetResponseArgs and MarketoObjectDatasetResponseOutput values.
// You can construct a concrete instance of `MarketoObjectDatasetResponseInput` via:
//
//          MarketoObjectDatasetResponseArgs{...}
type MarketoObjectDatasetResponseInput interface {
	pulumi.Input

	ToMarketoObjectDatasetResponseOutput() MarketoObjectDatasetResponseOutput
	ToMarketoObjectDatasetResponseOutputWithContext(context.Context) MarketoObjectDatasetResponseOutput
}

// Marketo server dataset.
type MarketoObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'MarketoObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MarketoObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketoObjectDatasetResponse)(nil)).Elem()
}

func (i MarketoObjectDatasetResponseArgs) ToMarketoObjectDatasetResponseOutput() MarketoObjectDatasetResponseOutput {
	return i.ToMarketoObjectDatasetResponseOutputWithContext(context.Background())
}

func (i MarketoObjectDatasetResponseArgs) ToMarketoObjectDatasetResponseOutputWithContext(ctx context.Context) MarketoObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketoObjectDatasetResponseOutput)
}

// Marketo server dataset.
type MarketoObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (MarketoObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketoObjectDatasetResponse)(nil)).Elem()
}

func (o MarketoObjectDatasetResponseOutput) ToMarketoObjectDatasetResponseOutput() MarketoObjectDatasetResponseOutput {
	return o
}

func (o MarketoObjectDatasetResponseOutput) ToMarketoObjectDatasetResponseOutputWithContext(ctx context.Context) MarketoObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o MarketoObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MarketoObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o MarketoObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MarketoObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o MarketoObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v MarketoObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o MarketoObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v MarketoObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o MarketoObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'MarketoObject'.
func (o MarketoObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MarketoObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Marketo server source.
type MarketoSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'MarketoSource'.
	Type string `pulumi:"type"`
}

// MarketoSourceInput is an input type that accepts MarketoSourceArgs and MarketoSourceOutput values.
// You can construct a concrete instance of `MarketoSourceInput` via:
//
//          MarketoSourceArgs{...}
type MarketoSourceInput interface {
	pulumi.Input

	ToMarketoSourceOutput() MarketoSourceOutput
	ToMarketoSourceOutputWithContext(context.Context) MarketoSourceOutput
}

// A copy activity Marketo server source.
type MarketoSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'MarketoSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MarketoSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketoSource)(nil)).Elem()
}

func (i MarketoSourceArgs) ToMarketoSourceOutput() MarketoSourceOutput {
	return i.ToMarketoSourceOutputWithContext(context.Background())
}

func (i MarketoSourceArgs) ToMarketoSourceOutputWithContext(ctx context.Context) MarketoSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketoSourceOutput)
}

// A copy activity Marketo server source.
type MarketoSourceOutput struct{ *pulumi.OutputState }

func (MarketoSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketoSource)(nil)).Elem()
}

func (o MarketoSourceOutput) ToMarketoSourceOutput() MarketoSourceOutput {
	return o
}

func (o MarketoSourceOutput) ToMarketoSourceOutputWithContext(ctx context.Context) MarketoSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o MarketoSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o MarketoSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o MarketoSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'MarketoSource'.
func (o MarketoSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MarketoSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Marketo server source.
type MarketoSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'MarketoSource'.
	Type string `pulumi:"type"`
}

// MarketoSourceResponseInput is an input type that accepts MarketoSourceResponseArgs and MarketoSourceResponseOutput values.
// You can construct a concrete instance of `MarketoSourceResponseInput` via:
//
//          MarketoSourceResponseArgs{...}
type MarketoSourceResponseInput interface {
	pulumi.Input

	ToMarketoSourceResponseOutput() MarketoSourceResponseOutput
	ToMarketoSourceResponseOutputWithContext(context.Context) MarketoSourceResponseOutput
}

// A copy activity Marketo server source.
type MarketoSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'MarketoSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MarketoSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketoSourceResponse)(nil)).Elem()
}

func (i MarketoSourceResponseArgs) ToMarketoSourceResponseOutput() MarketoSourceResponseOutput {
	return i.ToMarketoSourceResponseOutputWithContext(context.Background())
}

func (i MarketoSourceResponseArgs) ToMarketoSourceResponseOutputWithContext(ctx context.Context) MarketoSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarketoSourceResponseOutput)
}

// A copy activity Marketo server source.
type MarketoSourceResponseOutput struct{ *pulumi.OutputState }

func (MarketoSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketoSourceResponse)(nil)).Elem()
}

func (o MarketoSourceResponseOutput) ToMarketoSourceResponseOutput() MarketoSourceResponseOutput {
	return o
}

func (o MarketoSourceResponseOutput) ToMarketoSourceResponseOutputWithContext(ctx context.Context) MarketoSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o MarketoSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o MarketoSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o MarketoSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v MarketoSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'MarketoSource'.
func (o MarketoSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MarketoSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The MongoDB database dataset.
type MongoDbCollectionDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The table name of the MongoDB database. Type: string (or Expression with resultType string).
	CollectionName interface{} `pulumi:"collectionName"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'MongoDbCollection'.
	Type string `pulumi:"type"`
}

// MongoDbCollectionDatasetInput is an input type that accepts MongoDbCollectionDatasetArgs and MongoDbCollectionDatasetOutput values.
// You can construct a concrete instance of `MongoDbCollectionDatasetInput` via:
//
//          MongoDbCollectionDatasetArgs{...}
type MongoDbCollectionDatasetInput interface {
	pulumi.Input

	ToMongoDbCollectionDatasetOutput() MongoDbCollectionDatasetOutput
	ToMongoDbCollectionDatasetOutputWithContext(context.Context) MongoDbCollectionDatasetOutput
}

// The MongoDB database dataset.
type MongoDbCollectionDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The table name of the MongoDB database. Type: string (or Expression with resultType string).
	CollectionName pulumi.Input `pulumi:"collectionName"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'MongoDbCollection'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MongoDbCollectionDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbCollectionDataset)(nil)).Elem()
}

func (i MongoDbCollectionDatasetArgs) ToMongoDbCollectionDatasetOutput() MongoDbCollectionDatasetOutput {
	return i.ToMongoDbCollectionDatasetOutputWithContext(context.Background())
}

func (i MongoDbCollectionDatasetArgs) ToMongoDbCollectionDatasetOutputWithContext(ctx context.Context) MongoDbCollectionDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbCollectionDatasetOutput)
}

// The MongoDB database dataset.
type MongoDbCollectionDatasetOutput struct{ *pulumi.OutputState }

func (MongoDbCollectionDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbCollectionDataset)(nil)).Elem()
}

func (o MongoDbCollectionDatasetOutput) ToMongoDbCollectionDatasetOutput() MongoDbCollectionDatasetOutput {
	return o
}

func (o MongoDbCollectionDatasetOutput) ToMongoDbCollectionDatasetOutputWithContext(ctx context.Context) MongoDbCollectionDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o MongoDbCollectionDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MongoDbCollectionDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The table name of the MongoDB database. Type: string (or Expression with resultType string).
func (o MongoDbCollectionDatasetOutput) CollectionName() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbCollectionDataset) interface{} { return v.CollectionName }).(pulumi.AnyOutput)
}

// Dataset description.
func (o MongoDbCollectionDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbCollectionDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o MongoDbCollectionDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v MongoDbCollectionDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o MongoDbCollectionDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v MongoDbCollectionDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o MongoDbCollectionDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbCollectionDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'MongoDbCollection'.
func (o MongoDbCollectionDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbCollectionDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The MongoDB database dataset.
type MongoDbCollectionDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The table name of the MongoDB database. Type: string (or Expression with resultType string).
	CollectionName interface{} `pulumi:"collectionName"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'MongoDbCollection'.
	Type string `pulumi:"type"`
}

// MongoDbCollectionDatasetResponseInput is an input type that accepts MongoDbCollectionDatasetResponseArgs and MongoDbCollectionDatasetResponseOutput values.
// You can construct a concrete instance of `MongoDbCollectionDatasetResponseInput` via:
//
//          MongoDbCollectionDatasetResponseArgs{...}
type MongoDbCollectionDatasetResponseInput interface {
	pulumi.Input

	ToMongoDbCollectionDatasetResponseOutput() MongoDbCollectionDatasetResponseOutput
	ToMongoDbCollectionDatasetResponseOutputWithContext(context.Context) MongoDbCollectionDatasetResponseOutput
}

// The MongoDB database dataset.
type MongoDbCollectionDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The table name of the MongoDB database. Type: string (or Expression with resultType string).
	CollectionName pulumi.Input `pulumi:"collectionName"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'MongoDbCollection'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MongoDbCollectionDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbCollectionDatasetResponse)(nil)).Elem()
}

func (i MongoDbCollectionDatasetResponseArgs) ToMongoDbCollectionDatasetResponseOutput() MongoDbCollectionDatasetResponseOutput {
	return i.ToMongoDbCollectionDatasetResponseOutputWithContext(context.Background())
}

func (i MongoDbCollectionDatasetResponseArgs) ToMongoDbCollectionDatasetResponseOutputWithContext(ctx context.Context) MongoDbCollectionDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbCollectionDatasetResponseOutput)
}

// The MongoDB database dataset.
type MongoDbCollectionDatasetResponseOutput struct{ *pulumi.OutputState }

func (MongoDbCollectionDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbCollectionDatasetResponse)(nil)).Elem()
}

func (o MongoDbCollectionDatasetResponseOutput) ToMongoDbCollectionDatasetResponseOutput() MongoDbCollectionDatasetResponseOutput {
	return o
}

func (o MongoDbCollectionDatasetResponseOutput) ToMongoDbCollectionDatasetResponseOutputWithContext(ctx context.Context) MongoDbCollectionDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o MongoDbCollectionDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MongoDbCollectionDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The table name of the MongoDB database. Type: string (or Expression with resultType string).
func (o MongoDbCollectionDatasetResponseOutput) CollectionName() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbCollectionDatasetResponse) interface{} { return v.CollectionName }).(pulumi.AnyOutput)
}

// Dataset description.
func (o MongoDbCollectionDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbCollectionDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o MongoDbCollectionDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v MongoDbCollectionDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o MongoDbCollectionDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v MongoDbCollectionDatasetResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o MongoDbCollectionDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbCollectionDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'MongoDbCollection'.
func (o MongoDbCollectionDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbCollectionDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Linked service for MongoDb data source.
type MongoDbLinkedService struct {
	// Specifies whether to allow self-signed certificates from the server. The default value is false. Type: boolean (or Expression with resultType boolean).
	AllowSelfSignedServerCert interface{} `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Database to verify the username and password. Type: string (or Expression with resultType string).
	AuthSource interface{} `pulumi:"authSource"`
	// The authentication type to be used to connect to the MongoDB database.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string).
	DatabaseName interface{} `pulumi:"databaseName"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false. Type: boolean (or Expression with resultType boolean).
	EnableSsl interface{} `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Password for authentication.
	Password interface{} `pulumi:"password"`
	// The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0.
	Port interface{} `pulumi:"port"`
	// The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string).
	Server interface{} `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'MongoDb'.
	Type string `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// MongoDbLinkedServiceInput is an input type that accepts MongoDbLinkedServiceArgs and MongoDbLinkedServiceOutput values.
// You can construct a concrete instance of `MongoDbLinkedServiceInput` via:
//
//          MongoDbLinkedServiceArgs{...}
type MongoDbLinkedServiceInput interface {
	pulumi.Input

	ToMongoDbLinkedServiceOutput() MongoDbLinkedServiceOutput
	ToMongoDbLinkedServiceOutputWithContext(context.Context) MongoDbLinkedServiceOutput
}

// Linked service for MongoDb data source.
type MongoDbLinkedServiceArgs struct {
	// Specifies whether to allow self-signed certificates from the server. The default value is false. Type: boolean (or Expression with resultType boolean).
	AllowSelfSignedServerCert pulumi.Input `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Database to verify the username and password. Type: string (or Expression with resultType string).
	AuthSource pulumi.Input `pulumi:"authSource"`
	// The authentication type to be used to connect to the MongoDB database.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string).
	DatabaseName pulumi.Input `pulumi:"databaseName"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false. Type: boolean (or Expression with resultType boolean).
	EnableSsl pulumi.Input `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Password for authentication.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0.
	Port pulumi.Input `pulumi:"port"`
	// The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string).
	Server pulumi.Input `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'MongoDb'.
	Type pulumi.StringInput `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (MongoDbLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbLinkedService)(nil)).Elem()
}

func (i MongoDbLinkedServiceArgs) ToMongoDbLinkedServiceOutput() MongoDbLinkedServiceOutput {
	return i.ToMongoDbLinkedServiceOutputWithContext(context.Background())
}

func (i MongoDbLinkedServiceArgs) ToMongoDbLinkedServiceOutputWithContext(ctx context.Context) MongoDbLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbLinkedServiceOutput)
}

// Linked service for MongoDb data source.
type MongoDbLinkedServiceOutput struct{ *pulumi.OutputState }

func (MongoDbLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbLinkedService)(nil)).Elem()
}

func (o MongoDbLinkedServiceOutput) ToMongoDbLinkedServiceOutput() MongoDbLinkedServiceOutput {
	return o
}

func (o MongoDbLinkedServiceOutput) ToMongoDbLinkedServiceOutputWithContext(ctx context.Context) MongoDbLinkedServiceOutput {
	return o
}

// Specifies whether to allow self-signed certificates from the server. The default value is false. Type: boolean (or Expression with resultType boolean).
func (o MongoDbLinkedServiceOutput) AllowSelfSignedServerCert() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedService) interface{} { return v.AllowSelfSignedServerCert }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o MongoDbLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MongoDbLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Database to verify the username and password. Type: string (or Expression with resultType string).
func (o MongoDbLinkedServiceOutput) AuthSource() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedService) interface{} { return v.AuthSource }).(pulumi.AnyOutput)
}

// The authentication type to be used to connect to the MongoDB database.
func (o MongoDbLinkedServiceOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbLinkedService) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The integration runtime reference.
func (o MongoDbLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v MongoDbLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string).
func (o MongoDbLinkedServiceOutput) DatabaseName() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedService) interface{} { return v.DatabaseName }).(pulumi.AnyOutput)
}

// Linked service description.
func (o MongoDbLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether the connections to the server are encrypted using SSL. The default value is false. Type: boolean (or Expression with resultType boolean).
func (o MongoDbLinkedServiceOutput) EnableSsl() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedService) interface{} { return v.EnableSsl }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o MongoDbLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o MongoDbLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v MongoDbLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Password for authentication.
func (o MongoDbLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0.
func (o MongoDbLinkedServiceOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedService) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string).
func (o MongoDbLinkedServiceOutput) Server() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedService) interface{} { return v.Server }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'MongoDb'.
func (o MongoDbLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Username for authentication. Type: string (or Expression with resultType string).
func (o MongoDbLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Linked service for MongoDb data source.
type MongoDbLinkedServiceResponse struct {
	// Specifies whether to allow self-signed certificates from the server. The default value is false. Type: boolean (or Expression with resultType boolean).
	AllowSelfSignedServerCert interface{} `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Database to verify the username and password. Type: string (or Expression with resultType string).
	AuthSource interface{} `pulumi:"authSource"`
	// The authentication type to be used to connect to the MongoDB database.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string).
	DatabaseName interface{} `pulumi:"databaseName"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false. Type: boolean (or Expression with resultType boolean).
	EnableSsl interface{} `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Password for authentication.
	Password interface{} `pulumi:"password"`
	// The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0.
	Port interface{} `pulumi:"port"`
	// The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string).
	Server interface{} `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'MongoDb'.
	Type string `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// MongoDbLinkedServiceResponseInput is an input type that accepts MongoDbLinkedServiceResponseArgs and MongoDbLinkedServiceResponseOutput values.
// You can construct a concrete instance of `MongoDbLinkedServiceResponseInput` via:
//
//          MongoDbLinkedServiceResponseArgs{...}
type MongoDbLinkedServiceResponseInput interface {
	pulumi.Input

	ToMongoDbLinkedServiceResponseOutput() MongoDbLinkedServiceResponseOutput
	ToMongoDbLinkedServiceResponseOutputWithContext(context.Context) MongoDbLinkedServiceResponseOutput
}

// Linked service for MongoDb data source.
type MongoDbLinkedServiceResponseArgs struct {
	// Specifies whether to allow self-signed certificates from the server. The default value is false. Type: boolean (or Expression with resultType boolean).
	AllowSelfSignedServerCert pulumi.Input `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Database to verify the username and password. Type: string (or Expression with resultType string).
	AuthSource pulumi.Input `pulumi:"authSource"`
	// The authentication type to be used to connect to the MongoDB database.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string).
	DatabaseName pulumi.Input `pulumi:"databaseName"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false. Type: boolean (or Expression with resultType boolean).
	EnableSsl pulumi.Input `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Password for authentication.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0.
	Port pulumi.Input `pulumi:"port"`
	// The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string).
	Server pulumi.Input `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'MongoDb'.
	Type pulumi.StringInput `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (MongoDbLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbLinkedServiceResponse)(nil)).Elem()
}

func (i MongoDbLinkedServiceResponseArgs) ToMongoDbLinkedServiceResponseOutput() MongoDbLinkedServiceResponseOutput {
	return i.ToMongoDbLinkedServiceResponseOutputWithContext(context.Background())
}

func (i MongoDbLinkedServiceResponseArgs) ToMongoDbLinkedServiceResponseOutputWithContext(ctx context.Context) MongoDbLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbLinkedServiceResponseOutput)
}

// Linked service for MongoDb data source.
type MongoDbLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (MongoDbLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbLinkedServiceResponse)(nil)).Elem()
}

func (o MongoDbLinkedServiceResponseOutput) ToMongoDbLinkedServiceResponseOutput() MongoDbLinkedServiceResponseOutput {
	return o
}

func (o MongoDbLinkedServiceResponseOutput) ToMongoDbLinkedServiceResponseOutputWithContext(ctx context.Context) MongoDbLinkedServiceResponseOutput {
	return o
}

// Specifies whether to allow self-signed certificates from the server. The default value is false. Type: boolean (or Expression with resultType boolean).
func (o MongoDbLinkedServiceResponseOutput) AllowSelfSignedServerCert() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedServiceResponse) interface{} { return v.AllowSelfSignedServerCert }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o MongoDbLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MongoDbLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Database to verify the username and password. Type: string (or Expression with resultType string).
func (o MongoDbLinkedServiceResponseOutput) AuthSource() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedServiceResponse) interface{} { return v.AuthSource }).(pulumi.AnyOutput)
}

// The authentication type to be used to connect to the MongoDB database.
func (o MongoDbLinkedServiceResponseOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbLinkedServiceResponse) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The integration runtime reference.
func (o MongoDbLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v MongoDbLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string).
func (o MongoDbLinkedServiceResponseOutput) DatabaseName() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedServiceResponse) interface{} { return v.DatabaseName }).(pulumi.AnyOutput)
}

// Linked service description.
func (o MongoDbLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether the connections to the server are encrypted using SSL. The default value is false. Type: boolean (or Expression with resultType boolean).
func (o MongoDbLinkedServiceResponseOutput) EnableSsl() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedServiceResponse) interface{} { return v.EnableSsl }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o MongoDbLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o MongoDbLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v MongoDbLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Password for authentication.
func (o MongoDbLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0.
func (o MongoDbLinkedServiceResponseOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedServiceResponse) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string).
func (o MongoDbLinkedServiceResponseOutput) Server() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedServiceResponse) interface{} { return v.Server }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'MongoDb'.
func (o MongoDbLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Username for authentication. Type: string (or Expression with resultType string).
func (o MongoDbLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// A copy activity source for a MongoDB database.
type MongoDbSource struct {
	// Database query. Should be a SQL-92 query expression. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'MongoDbSource'.
	Type string `pulumi:"type"`
}

// MongoDbSourceInput is an input type that accepts MongoDbSourceArgs and MongoDbSourceOutput values.
// You can construct a concrete instance of `MongoDbSourceInput` via:
//
//          MongoDbSourceArgs{...}
type MongoDbSourceInput interface {
	pulumi.Input

	ToMongoDbSourceOutput() MongoDbSourceOutput
	ToMongoDbSourceOutputWithContext(context.Context) MongoDbSourceOutput
}

// A copy activity source for a MongoDB database.
type MongoDbSourceArgs struct {
	// Database query. Should be a SQL-92 query expression. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'MongoDbSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MongoDbSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbSource)(nil)).Elem()
}

func (i MongoDbSourceArgs) ToMongoDbSourceOutput() MongoDbSourceOutput {
	return i.ToMongoDbSourceOutputWithContext(context.Background())
}

func (i MongoDbSourceArgs) ToMongoDbSourceOutputWithContext(ctx context.Context) MongoDbSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbSourceOutput)
}

// A copy activity source for a MongoDB database.
type MongoDbSourceOutput struct{ *pulumi.OutputState }

func (MongoDbSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbSource)(nil)).Elem()
}

func (o MongoDbSourceOutput) ToMongoDbSourceOutput() MongoDbSourceOutput {
	return o
}

func (o MongoDbSourceOutput) ToMongoDbSourceOutputWithContext(ctx context.Context) MongoDbSourceOutput {
	return o
}

// Database query. Should be a SQL-92 query expression. Type: string (or Expression with resultType string).
func (o MongoDbSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o MongoDbSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o MongoDbSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'MongoDbSource'.
func (o MongoDbSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity source for a MongoDB database.
type MongoDbSourceResponse struct {
	// Database query. Should be a SQL-92 query expression. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'MongoDbSource'.
	Type string `pulumi:"type"`
}

// MongoDbSourceResponseInput is an input type that accepts MongoDbSourceResponseArgs and MongoDbSourceResponseOutput values.
// You can construct a concrete instance of `MongoDbSourceResponseInput` via:
//
//          MongoDbSourceResponseArgs{...}
type MongoDbSourceResponseInput interface {
	pulumi.Input

	ToMongoDbSourceResponseOutput() MongoDbSourceResponseOutput
	ToMongoDbSourceResponseOutputWithContext(context.Context) MongoDbSourceResponseOutput
}

// A copy activity source for a MongoDB database.
type MongoDbSourceResponseArgs struct {
	// Database query. Should be a SQL-92 query expression. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'MongoDbSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MongoDbSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbSourceResponse)(nil)).Elem()
}

func (i MongoDbSourceResponseArgs) ToMongoDbSourceResponseOutput() MongoDbSourceResponseOutput {
	return i.ToMongoDbSourceResponseOutputWithContext(context.Background())
}

func (i MongoDbSourceResponseArgs) ToMongoDbSourceResponseOutputWithContext(ctx context.Context) MongoDbSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbSourceResponseOutput)
}

// A copy activity source for a MongoDB database.
type MongoDbSourceResponseOutput struct{ *pulumi.OutputState }

func (MongoDbSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbSourceResponse)(nil)).Elem()
}

func (o MongoDbSourceResponseOutput) ToMongoDbSourceResponseOutput() MongoDbSourceResponseOutput {
	return o
}

func (o MongoDbSourceResponseOutput) ToMongoDbSourceResponseOutputWithContext(ctx context.Context) MongoDbSourceResponseOutput {
	return o
}

// Database query. Should be a SQL-92 query expression. Type: string (or Expression with resultType string).
func (o MongoDbSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o MongoDbSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o MongoDbSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDbSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'MongoDbSource'.
func (o MongoDbSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Base class for all triggers that support one to many model for trigger to pipeline.
type MultiplePipelineTrigger struct {
	// Trigger description.
	Description *string `pulumi:"description"`
	// Pipelines that need to be started.
	Pipelines []TriggerPipelineReference `pulumi:"pipelines"`
	// Trigger type.
	// Expected value is 'MultiplePipelineTrigger'.
	Type string `pulumi:"type"`
}

// MultiplePipelineTriggerInput is an input type that accepts MultiplePipelineTriggerArgs and MultiplePipelineTriggerOutput values.
// You can construct a concrete instance of `MultiplePipelineTriggerInput` via:
//
//          MultiplePipelineTriggerArgs{...}
type MultiplePipelineTriggerInput interface {
	pulumi.Input

	ToMultiplePipelineTriggerOutput() MultiplePipelineTriggerOutput
	ToMultiplePipelineTriggerOutputWithContext(context.Context) MultiplePipelineTriggerOutput
}

// Base class for all triggers that support one to many model for trigger to pipeline.
type MultiplePipelineTriggerArgs struct {
	// Trigger description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Pipelines that need to be started.
	Pipelines TriggerPipelineReferenceArrayInput `pulumi:"pipelines"`
	// Trigger type.
	// Expected value is 'MultiplePipelineTrigger'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MultiplePipelineTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplePipelineTrigger)(nil)).Elem()
}

func (i MultiplePipelineTriggerArgs) ToMultiplePipelineTriggerOutput() MultiplePipelineTriggerOutput {
	return i.ToMultiplePipelineTriggerOutputWithContext(context.Background())
}

func (i MultiplePipelineTriggerArgs) ToMultiplePipelineTriggerOutputWithContext(ctx context.Context) MultiplePipelineTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplePipelineTriggerOutput)
}

// Base class for all triggers that support one to many model for trigger to pipeline.
type MultiplePipelineTriggerOutput struct{ *pulumi.OutputState }

func (MultiplePipelineTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplePipelineTrigger)(nil)).Elem()
}

func (o MultiplePipelineTriggerOutput) ToMultiplePipelineTriggerOutput() MultiplePipelineTriggerOutput {
	return o
}

func (o MultiplePipelineTriggerOutput) ToMultiplePipelineTriggerOutputWithContext(ctx context.Context) MultiplePipelineTriggerOutput {
	return o
}

// Trigger description.
func (o MultiplePipelineTriggerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MultiplePipelineTrigger) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Pipelines that need to be started.
func (o MultiplePipelineTriggerOutput) Pipelines() TriggerPipelineReferenceArrayOutput {
	return o.ApplyT(func(v MultiplePipelineTrigger) []TriggerPipelineReference { return v.Pipelines }).(TriggerPipelineReferenceArrayOutput)
}

// Trigger type.
// Expected value is 'MultiplePipelineTrigger'.
func (o MultiplePipelineTriggerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MultiplePipelineTrigger) string { return v.Type }).(pulumi.StringOutput)
}

// Base class for all triggers that support one to many model for trigger to pipeline.
type MultiplePipelineTriggerResponse struct {
	// Trigger description.
	Description *string `pulumi:"description"`
	// Pipelines that need to be started.
	Pipelines []TriggerPipelineReferenceResponse `pulumi:"pipelines"`
	// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
	RuntimeState string `pulumi:"runtimeState"`
	// Trigger type.
	// Expected value is 'MultiplePipelineTrigger'.
	Type string `pulumi:"type"`
}

// MultiplePipelineTriggerResponseInput is an input type that accepts MultiplePipelineTriggerResponseArgs and MultiplePipelineTriggerResponseOutput values.
// You can construct a concrete instance of `MultiplePipelineTriggerResponseInput` via:
//
//          MultiplePipelineTriggerResponseArgs{...}
type MultiplePipelineTriggerResponseInput interface {
	pulumi.Input

	ToMultiplePipelineTriggerResponseOutput() MultiplePipelineTriggerResponseOutput
	ToMultiplePipelineTriggerResponseOutputWithContext(context.Context) MultiplePipelineTriggerResponseOutput
}

// Base class for all triggers that support one to many model for trigger to pipeline.
type MultiplePipelineTriggerResponseArgs struct {
	// Trigger description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Pipelines that need to be started.
	Pipelines TriggerPipelineReferenceResponseArrayInput `pulumi:"pipelines"`
	// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
	RuntimeState pulumi.StringInput `pulumi:"runtimeState"`
	// Trigger type.
	// Expected value is 'MultiplePipelineTrigger'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MultiplePipelineTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplePipelineTriggerResponse)(nil)).Elem()
}

func (i MultiplePipelineTriggerResponseArgs) ToMultiplePipelineTriggerResponseOutput() MultiplePipelineTriggerResponseOutput {
	return i.ToMultiplePipelineTriggerResponseOutputWithContext(context.Background())
}

func (i MultiplePipelineTriggerResponseArgs) ToMultiplePipelineTriggerResponseOutputWithContext(ctx context.Context) MultiplePipelineTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplePipelineTriggerResponseOutput)
}

// Base class for all triggers that support one to many model for trigger to pipeline.
type MultiplePipelineTriggerResponseOutput struct{ *pulumi.OutputState }

func (MultiplePipelineTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplePipelineTriggerResponse)(nil)).Elem()
}

func (o MultiplePipelineTriggerResponseOutput) ToMultiplePipelineTriggerResponseOutput() MultiplePipelineTriggerResponseOutput {
	return o
}

func (o MultiplePipelineTriggerResponseOutput) ToMultiplePipelineTriggerResponseOutputWithContext(ctx context.Context) MultiplePipelineTriggerResponseOutput {
	return o
}

// Trigger description.
func (o MultiplePipelineTriggerResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MultiplePipelineTriggerResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Pipelines that need to be started.
func (o MultiplePipelineTriggerResponseOutput) Pipelines() TriggerPipelineReferenceResponseArrayOutput {
	return o.ApplyT(func(v MultiplePipelineTriggerResponse) []TriggerPipelineReferenceResponse { return v.Pipelines }).(TriggerPipelineReferenceResponseArrayOutput)
}

// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
func (o MultiplePipelineTriggerResponseOutput) RuntimeState() pulumi.StringOutput {
	return o.ApplyT(func(v MultiplePipelineTriggerResponse) string { return v.RuntimeState }).(pulumi.StringOutput)
}

// Trigger type.
// Expected value is 'MultiplePipelineTrigger'.
func (o MultiplePipelineTriggerResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MultiplePipelineTriggerResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Linked service for MySQL data source.
type MySqlLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// The connection string.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'MySql'.
	Type string `pulumi:"type"`
}

// MySqlLinkedServiceInput is an input type that accepts MySqlLinkedServiceArgs and MySqlLinkedServiceOutput values.
// You can construct a concrete instance of `MySqlLinkedServiceInput` via:
//
//          MySqlLinkedServiceArgs{...}
type MySqlLinkedServiceInput interface {
	pulumi.Input

	ToMySqlLinkedServiceOutput() MySqlLinkedServiceOutput
	ToMySqlLinkedServiceOutputWithContext(context.Context) MySqlLinkedServiceOutput
}

// Linked service for MySQL data source.
type MySqlLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// The connection string.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'MySql'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MySqlLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlLinkedService)(nil)).Elem()
}

func (i MySqlLinkedServiceArgs) ToMySqlLinkedServiceOutput() MySqlLinkedServiceOutput {
	return i.ToMySqlLinkedServiceOutputWithContext(context.Background())
}

func (i MySqlLinkedServiceArgs) ToMySqlLinkedServiceOutputWithContext(ctx context.Context) MySqlLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlLinkedServiceOutput)
}

// Linked service for MySQL data source.
type MySqlLinkedServiceOutput struct{ *pulumi.OutputState }

func (MySqlLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlLinkedService)(nil)).Elem()
}

func (o MySqlLinkedServiceOutput) ToMySqlLinkedServiceOutput() MySqlLinkedServiceOutput {
	return o
}

func (o MySqlLinkedServiceOutput) ToMySqlLinkedServiceOutputWithContext(ctx context.Context) MySqlLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o MySqlLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MySqlLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o MySqlLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v MySqlLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// The connection string.
func (o MySqlLinkedServiceOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v MySqlLinkedService) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o MySqlLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o MySqlLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v MySqlLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o MySqlLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v MySqlLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'MySql'.
func (o MySqlLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MySqlLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Linked service for MySQL data source.
type MySqlLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// The connection string.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'MySql'.
	Type string `pulumi:"type"`
}

// MySqlLinkedServiceResponseInput is an input type that accepts MySqlLinkedServiceResponseArgs and MySqlLinkedServiceResponseOutput values.
// You can construct a concrete instance of `MySqlLinkedServiceResponseInput` via:
//
//          MySqlLinkedServiceResponseArgs{...}
type MySqlLinkedServiceResponseInput interface {
	pulumi.Input

	ToMySqlLinkedServiceResponseOutput() MySqlLinkedServiceResponseOutput
	ToMySqlLinkedServiceResponseOutputWithContext(context.Context) MySqlLinkedServiceResponseOutput
}

// Linked service for MySQL data source.
type MySqlLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// The connection string.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'MySql'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MySqlLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlLinkedServiceResponse)(nil)).Elem()
}

func (i MySqlLinkedServiceResponseArgs) ToMySqlLinkedServiceResponseOutput() MySqlLinkedServiceResponseOutput {
	return i.ToMySqlLinkedServiceResponseOutputWithContext(context.Background())
}

func (i MySqlLinkedServiceResponseArgs) ToMySqlLinkedServiceResponseOutputWithContext(ctx context.Context) MySqlLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlLinkedServiceResponseOutput)
}

// Linked service for MySQL data source.
type MySqlLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (MySqlLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlLinkedServiceResponse)(nil)).Elem()
}

func (o MySqlLinkedServiceResponseOutput) ToMySqlLinkedServiceResponseOutput() MySqlLinkedServiceResponseOutput {
	return o
}

func (o MySqlLinkedServiceResponseOutput) ToMySqlLinkedServiceResponseOutputWithContext(ctx context.Context) MySqlLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o MySqlLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v MySqlLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o MySqlLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v MySqlLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// The connection string.
func (o MySqlLinkedServiceResponseOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v MySqlLinkedServiceResponse) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o MySqlLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o MySqlLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v MySqlLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o MySqlLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v MySqlLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'MySql'.
func (o MySqlLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MySqlLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Netezza linked service.
type NetezzaLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Netezza'.
	Type string `pulumi:"type"`
}

// NetezzaLinkedServiceInput is an input type that accepts NetezzaLinkedServiceArgs and NetezzaLinkedServiceOutput values.
// You can construct a concrete instance of `NetezzaLinkedServiceInput` via:
//
//          NetezzaLinkedServiceArgs{...}
type NetezzaLinkedServiceInput interface {
	pulumi.Input

	ToNetezzaLinkedServiceOutput() NetezzaLinkedServiceOutput
	ToNetezzaLinkedServiceOutputWithContext(context.Context) NetezzaLinkedServiceOutput
}

// Netezza linked service.
type NetezzaLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Netezza'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetezzaLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetezzaLinkedService)(nil)).Elem()
}

func (i NetezzaLinkedServiceArgs) ToNetezzaLinkedServiceOutput() NetezzaLinkedServiceOutput {
	return i.ToNetezzaLinkedServiceOutputWithContext(context.Background())
}

func (i NetezzaLinkedServiceArgs) ToNetezzaLinkedServiceOutputWithContext(ctx context.Context) NetezzaLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetezzaLinkedServiceOutput)
}

// Netezza linked service.
type NetezzaLinkedServiceOutput struct{ *pulumi.OutputState }

func (NetezzaLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetezzaLinkedService)(nil)).Elem()
}

func (o NetezzaLinkedServiceOutput) ToNetezzaLinkedServiceOutput() NetezzaLinkedServiceOutput {
	return o
}

func (o NetezzaLinkedServiceOutput) ToNetezzaLinkedServiceOutputWithContext(ctx context.Context) NetezzaLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o NetezzaLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v NetezzaLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o NetezzaLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v NetezzaLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o NetezzaLinkedServiceOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v NetezzaLinkedService) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o NetezzaLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetezzaLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o NetezzaLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v NetezzaLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o NetezzaLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v NetezzaLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'Netezza'.
func (o NetezzaLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetezzaLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Netezza linked service.
type NetezzaLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Netezza'.
	Type string `pulumi:"type"`
}

// NetezzaLinkedServiceResponseInput is an input type that accepts NetezzaLinkedServiceResponseArgs and NetezzaLinkedServiceResponseOutput values.
// You can construct a concrete instance of `NetezzaLinkedServiceResponseInput` via:
//
//          NetezzaLinkedServiceResponseArgs{...}
type NetezzaLinkedServiceResponseInput interface {
	pulumi.Input

	ToNetezzaLinkedServiceResponseOutput() NetezzaLinkedServiceResponseOutput
	ToNetezzaLinkedServiceResponseOutputWithContext(context.Context) NetezzaLinkedServiceResponseOutput
}

// Netezza linked service.
type NetezzaLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Netezza'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetezzaLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetezzaLinkedServiceResponse)(nil)).Elem()
}

func (i NetezzaLinkedServiceResponseArgs) ToNetezzaLinkedServiceResponseOutput() NetezzaLinkedServiceResponseOutput {
	return i.ToNetezzaLinkedServiceResponseOutputWithContext(context.Background())
}

func (i NetezzaLinkedServiceResponseArgs) ToNetezzaLinkedServiceResponseOutputWithContext(ctx context.Context) NetezzaLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetezzaLinkedServiceResponseOutput)
}

// Netezza linked service.
type NetezzaLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (NetezzaLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetezzaLinkedServiceResponse)(nil)).Elem()
}

func (o NetezzaLinkedServiceResponseOutput) ToNetezzaLinkedServiceResponseOutput() NetezzaLinkedServiceResponseOutput {
	return o
}

func (o NetezzaLinkedServiceResponseOutput) ToNetezzaLinkedServiceResponseOutputWithContext(ctx context.Context) NetezzaLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o NetezzaLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v NetezzaLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o NetezzaLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v NetezzaLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o NetezzaLinkedServiceResponseOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v NetezzaLinkedServiceResponse) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o NetezzaLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetezzaLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o NetezzaLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v NetezzaLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o NetezzaLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v NetezzaLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'Netezza'.
func (o NetezzaLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetezzaLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Netezza source.
type NetezzaSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'NetezzaSource'.
	Type string `pulumi:"type"`
}

// NetezzaSourceInput is an input type that accepts NetezzaSourceArgs and NetezzaSourceOutput values.
// You can construct a concrete instance of `NetezzaSourceInput` via:
//
//          NetezzaSourceArgs{...}
type NetezzaSourceInput interface {
	pulumi.Input

	ToNetezzaSourceOutput() NetezzaSourceOutput
	ToNetezzaSourceOutputWithContext(context.Context) NetezzaSourceOutput
}

// A copy activity Netezza source.
type NetezzaSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'NetezzaSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetezzaSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetezzaSource)(nil)).Elem()
}

func (i NetezzaSourceArgs) ToNetezzaSourceOutput() NetezzaSourceOutput {
	return i.ToNetezzaSourceOutputWithContext(context.Background())
}

func (i NetezzaSourceArgs) ToNetezzaSourceOutputWithContext(ctx context.Context) NetezzaSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetezzaSourceOutput)
}

// A copy activity Netezza source.
type NetezzaSourceOutput struct{ *pulumi.OutputState }

func (NetezzaSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetezzaSource)(nil)).Elem()
}

func (o NetezzaSourceOutput) ToNetezzaSourceOutput() NetezzaSourceOutput {
	return o
}

func (o NetezzaSourceOutput) ToNetezzaSourceOutputWithContext(ctx context.Context) NetezzaSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o NetezzaSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v NetezzaSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o NetezzaSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v NetezzaSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o NetezzaSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v NetezzaSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'NetezzaSource'.
func (o NetezzaSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetezzaSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Netezza source.
type NetezzaSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'NetezzaSource'.
	Type string `pulumi:"type"`
}

// NetezzaSourceResponseInput is an input type that accepts NetezzaSourceResponseArgs and NetezzaSourceResponseOutput values.
// You can construct a concrete instance of `NetezzaSourceResponseInput` via:
//
//          NetezzaSourceResponseArgs{...}
type NetezzaSourceResponseInput interface {
	pulumi.Input

	ToNetezzaSourceResponseOutput() NetezzaSourceResponseOutput
	ToNetezzaSourceResponseOutputWithContext(context.Context) NetezzaSourceResponseOutput
}

// A copy activity Netezza source.
type NetezzaSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'NetezzaSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetezzaSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetezzaSourceResponse)(nil)).Elem()
}

func (i NetezzaSourceResponseArgs) ToNetezzaSourceResponseOutput() NetezzaSourceResponseOutput {
	return i.ToNetezzaSourceResponseOutputWithContext(context.Background())
}

func (i NetezzaSourceResponseArgs) ToNetezzaSourceResponseOutputWithContext(ctx context.Context) NetezzaSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetezzaSourceResponseOutput)
}

// A copy activity Netezza source.
type NetezzaSourceResponseOutput struct{ *pulumi.OutputState }

func (NetezzaSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetezzaSourceResponse)(nil)).Elem()
}

func (o NetezzaSourceResponseOutput) ToNetezzaSourceResponseOutput() NetezzaSourceResponseOutput {
	return o
}

func (o NetezzaSourceResponseOutput) ToNetezzaSourceResponseOutputWithContext(ctx context.Context) NetezzaSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o NetezzaSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v NetezzaSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o NetezzaSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v NetezzaSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o NetezzaSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v NetezzaSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'NetezzaSource'.
func (o NetezzaSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetezzaSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Netezza dataset.
type NetezzaTableDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'NetezzaTable'.
	Type string `pulumi:"type"`
}

// NetezzaTableDatasetInput is an input type that accepts NetezzaTableDatasetArgs and NetezzaTableDatasetOutput values.
// You can construct a concrete instance of `NetezzaTableDatasetInput` via:
//
//          NetezzaTableDatasetArgs{...}
type NetezzaTableDatasetInput interface {
	pulumi.Input

	ToNetezzaTableDatasetOutput() NetezzaTableDatasetOutput
	ToNetezzaTableDatasetOutputWithContext(context.Context) NetezzaTableDatasetOutput
}

// Netezza dataset.
type NetezzaTableDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'NetezzaTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetezzaTableDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetezzaTableDataset)(nil)).Elem()
}

func (i NetezzaTableDatasetArgs) ToNetezzaTableDatasetOutput() NetezzaTableDatasetOutput {
	return i.ToNetezzaTableDatasetOutputWithContext(context.Background())
}

func (i NetezzaTableDatasetArgs) ToNetezzaTableDatasetOutputWithContext(ctx context.Context) NetezzaTableDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetezzaTableDatasetOutput)
}

// Netezza dataset.
type NetezzaTableDatasetOutput struct{ *pulumi.OutputState }

func (NetezzaTableDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetezzaTableDataset)(nil)).Elem()
}

func (o NetezzaTableDatasetOutput) ToNetezzaTableDatasetOutput() NetezzaTableDatasetOutput {
	return o
}

func (o NetezzaTableDatasetOutput) ToNetezzaTableDatasetOutputWithContext(ctx context.Context) NetezzaTableDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o NetezzaTableDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v NetezzaTableDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o NetezzaTableDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetezzaTableDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o NetezzaTableDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v NetezzaTableDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o NetezzaTableDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v NetezzaTableDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o NetezzaTableDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v NetezzaTableDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'NetezzaTable'.
func (o NetezzaTableDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetezzaTableDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Netezza dataset.
type NetezzaTableDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'NetezzaTable'.
	Type string `pulumi:"type"`
}

// NetezzaTableDatasetResponseInput is an input type that accepts NetezzaTableDatasetResponseArgs and NetezzaTableDatasetResponseOutput values.
// You can construct a concrete instance of `NetezzaTableDatasetResponseInput` via:
//
//          NetezzaTableDatasetResponseArgs{...}
type NetezzaTableDatasetResponseInput interface {
	pulumi.Input

	ToNetezzaTableDatasetResponseOutput() NetezzaTableDatasetResponseOutput
	ToNetezzaTableDatasetResponseOutputWithContext(context.Context) NetezzaTableDatasetResponseOutput
}

// Netezza dataset.
type NetezzaTableDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'NetezzaTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetezzaTableDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetezzaTableDatasetResponse)(nil)).Elem()
}

func (i NetezzaTableDatasetResponseArgs) ToNetezzaTableDatasetResponseOutput() NetezzaTableDatasetResponseOutput {
	return i.ToNetezzaTableDatasetResponseOutputWithContext(context.Background())
}

func (i NetezzaTableDatasetResponseArgs) ToNetezzaTableDatasetResponseOutputWithContext(ctx context.Context) NetezzaTableDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetezzaTableDatasetResponseOutput)
}

// Netezza dataset.
type NetezzaTableDatasetResponseOutput struct{ *pulumi.OutputState }

func (NetezzaTableDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetezzaTableDatasetResponse)(nil)).Elem()
}

func (o NetezzaTableDatasetResponseOutput) ToNetezzaTableDatasetResponseOutput() NetezzaTableDatasetResponseOutput {
	return o
}

func (o NetezzaTableDatasetResponseOutput) ToNetezzaTableDatasetResponseOutputWithContext(ctx context.Context) NetezzaTableDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o NetezzaTableDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v NetezzaTableDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o NetezzaTableDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetezzaTableDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o NetezzaTableDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v NetezzaTableDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o NetezzaTableDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v NetezzaTableDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o NetezzaTableDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v NetezzaTableDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'NetezzaTable'.
func (o NetezzaTableDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetezzaTableDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Open Data Protocol (OData) linked service.
type ODataLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Type of authentication used to connect to the OData service.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Password of the OData service.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'OData'.
	Type string `pulumi:"type"`
	// The URL of the OData service endpoint. Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
	// User name of the OData service. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// ODataLinkedServiceInput is an input type that accepts ODataLinkedServiceArgs and ODataLinkedServiceOutput values.
// You can construct a concrete instance of `ODataLinkedServiceInput` via:
//
//          ODataLinkedServiceArgs{...}
type ODataLinkedServiceInput interface {
	pulumi.Input

	ToODataLinkedServiceOutput() ODataLinkedServiceOutput
	ToODataLinkedServiceOutputWithContext(context.Context) ODataLinkedServiceOutput
}

// Open Data Protocol (OData) linked service.
type ODataLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Type of authentication used to connect to the OData service.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Password of the OData service.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'OData'.
	Type pulumi.StringInput `pulumi:"type"`
	// The URL of the OData service endpoint. Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
	// User name of the OData service. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (ODataLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ODataLinkedService)(nil)).Elem()
}

func (i ODataLinkedServiceArgs) ToODataLinkedServiceOutput() ODataLinkedServiceOutput {
	return i.ToODataLinkedServiceOutputWithContext(context.Background())
}

func (i ODataLinkedServiceArgs) ToODataLinkedServiceOutputWithContext(ctx context.Context) ODataLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ODataLinkedServiceOutput)
}

// Open Data Protocol (OData) linked service.
type ODataLinkedServiceOutput struct{ *pulumi.OutputState }

func (ODataLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ODataLinkedService)(nil)).Elem()
}

func (o ODataLinkedServiceOutput) ToODataLinkedServiceOutput() ODataLinkedServiceOutput {
	return o
}

func (o ODataLinkedServiceOutput) ToODataLinkedServiceOutputWithContext(ctx context.Context) ODataLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ODataLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ODataLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Type of authentication used to connect to the OData service.
func (o ODataLinkedServiceOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ODataLinkedService) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The integration runtime reference.
func (o ODataLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v ODataLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o ODataLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ODataLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o ODataLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v ODataLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o ODataLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v ODataLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Password of the OData service.
func (o ODataLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v ODataLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'OData'.
func (o ODataLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ODataLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// The URL of the OData service endpoint. Type: string (or Expression with resultType string).
func (o ODataLinkedServiceOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v ODataLinkedService) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// User name of the OData service. Type: string (or Expression with resultType string).
func (o ODataLinkedServiceOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v ODataLinkedService) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// Open Data Protocol (OData) linked service.
type ODataLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Type of authentication used to connect to the OData service.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Password of the OData service.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'OData'.
	Type string `pulumi:"type"`
	// The URL of the OData service endpoint. Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
	// User name of the OData service. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// ODataLinkedServiceResponseInput is an input type that accepts ODataLinkedServiceResponseArgs and ODataLinkedServiceResponseOutput values.
// You can construct a concrete instance of `ODataLinkedServiceResponseInput` via:
//
//          ODataLinkedServiceResponseArgs{...}
type ODataLinkedServiceResponseInput interface {
	pulumi.Input

	ToODataLinkedServiceResponseOutput() ODataLinkedServiceResponseOutput
	ToODataLinkedServiceResponseOutputWithContext(context.Context) ODataLinkedServiceResponseOutput
}

// Open Data Protocol (OData) linked service.
type ODataLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Type of authentication used to connect to the OData service.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Password of the OData service.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'OData'.
	Type pulumi.StringInput `pulumi:"type"`
	// The URL of the OData service endpoint. Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
	// User name of the OData service. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (ODataLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ODataLinkedServiceResponse)(nil)).Elem()
}

func (i ODataLinkedServiceResponseArgs) ToODataLinkedServiceResponseOutput() ODataLinkedServiceResponseOutput {
	return i.ToODataLinkedServiceResponseOutputWithContext(context.Background())
}

func (i ODataLinkedServiceResponseArgs) ToODataLinkedServiceResponseOutputWithContext(ctx context.Context) ODataLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ODataLinkedServiceResponseOutput)
}

// Open Data Protocol (OData) linked service.
type ODataLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (ODataLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ODataLinkedServiceResponse)(nil)).Elem()
}

func (o ODataLinkedServiceResponseOutput) ToODataLinkedServiceResponseOutput() ODataLinkedServiceResponseOutput {
	return o
}

func (o ODataLinkedServiceResponseOutput) ToODataLinkedServiceResponseOutputWithContext(ctx context.Context) ODataLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ODataLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ODataLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Type of authentication used to connect to the OData service.
func (o ODataLinkedServiceResponseOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ODataLinkedServiceResponse) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The integration runtime reference.
func (o ODataLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v ODataLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o ODataLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ODataLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o ODataLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v ODataLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o ODataLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v ODataLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Password of the OData service.
func (o ODataLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v ODataLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'OData'.
func (o ODataLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ODataLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The URL of the OData service endpoint. Type: string (or Expression with resultType string).
func (o ODataLinkedServiceResponseOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v ODataLinkedServiceResponse) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// User name of the OData service. Type: string (or Expression with resultType string).
func (o ODataLinkedServiceResponseOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v ODataLinkedServiceResponse) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// The Open Data Protocol (OData) resource dataset.
type ODataResourceDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The OData resource path. Type: string (or Expression with resultType string).
	Path interface{} `pulumi:"path"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ODataResource'.
	Type string `pulumi:"type"`
}

// ODataResourceDatasetInput is an input type that accepts ODataResourceDatasetArgs and ODataResourceDatasetOutput values.
// You can construct a concrete instance of `ODataResourceDatasetInput` via:
//
//          ODataResourceDatasetArgs{...}
type ODataResourceDatasetInput interface {
	pulumi.Input

	ToODataResourceDatasetOutput() ODataResourceDatasetOutput
	ToODataResourceDatasetOutputWithContext(context.Context) ODataResourceDatasetOutput
}

// The Open Data Protocol (OData) resource dataset.
type ODataResourceDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The OData resource path. Type: string (or Expression with resultType string).
	Path pulumi.Input `pulumi:"path"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ODataResource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ODataResourceDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ODataResourceDataset)(nil)).Elem()
}

func (i ODataResourceDatasetArgs) ToODataResourceDatasetOutput() ODataResourceDatasetOutput {
	return i.ToODataResourceDatasetOutputWithContext(context.Background())
}

func (i ODataResourceDatasetArgs) ToODataResourceDatasetOutputWithContext(ctx context.Context) ODataResourceDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ODataResourceDatasetOutput)
}

// The Open Data Protocol (OData) resource dataset.
type ODataResourceDatasetOutput struct{ *pulumi.OutputState }

func (ODataResourceDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ODataResourceDataset)(nil)).Elem()
}

func (o ODataResourceDatasetOutput) ToODataResourceDatasetOutput() ODataResourceDatasetOutput {
	return o
}

func (o ODataResourceDatasetOutput) ToODataResourceDatasetOutputWithContext(ctx context.Context) ODataResourceDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ODataResourceDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ODataResourceDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o ODataResourceDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ODataResourceDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o ODataResourceDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v ODataResourceDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o ODataResourceDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v ODataResourceDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The OData resource path. Type: string (or Expression with resultType string).
func (o ODataResourceDatasetOutput) Path() pulumi.AnyOutput {
	return o.ApplyT(func(v ODataResourceDataset) interface{} { return v.Path }).(pulumi.AnyOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o ODataResourceDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v ODataResourceDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'ODataResource'.
func (o ODataResourceDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ODataResourceDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The Open Data Protocol (OData) resource dataset.
type ODataResourceDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The OData resource path. Type: string (or Expression with resultType string).
	Path interface{} `pulumi:"path"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ODataResource'.
	Type string `pulumi:"type"`
}

// ODataResourceDatasetResponseInput is an input type that accepts ODataResourceDatasetResponseArgs and ODataResourceDatasetResponseOutput values.
// You can construct a concrete instance of `ODataResourceDatasetResponseInput` via:
//
//          ODataResourceDatasetResponseArgs{...}
type ODataResourceDatasetResponseInput interface {
	pulumi.Input

	ToODataResourceDatasetResponseOutput() ODataResourceDatasetResponseOutput
	ToODataResourceDatasetResponseOutputWithContext(context.Context) ODataResourceDatasetResponseOutput
}

// The Open Data Protocol (OData) resource dataset.
type ODataResourceDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The OData resource path. Type: string (or Expression with resultType string).
	Path pulumi.Input `pulumi:"path"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ODataResource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ODataResourceDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ODataResourceDatasetResponse)(nil)).Elem()
}

func (i ODataResourceDatasetResponseArgs) ToODataResourceDatasetResponseOutput() ODataResourceDatasetResponseOutput {
	return i.ToODataResourceDatasetResponseOutputWithContext(context.Background())
}

func (i ODataResourceDatasetResponseArgs) ToODataResourceDatasetResponseOutputWithContext(ctx context.Context) ODataResourceDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ODataResourceDatasetResponseOutput)
}

// The Open Data Protocol (OData) resource dataset.
type ODataResourceDatasetResponseOutput struct{ *pulumi.OutputState }

func (ODataResourceDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ODataResourceDatasetResponse)(nil)).Elem()
}

func (o ODataResourceDatasetResponseOutput) ToODataResourceDatasetResponseOutput() ODataResourceDatasetResponseOutput {
	return o
}

func (o ODataResourceDatasetResponseOutput) ToODataResourceDatasetResponseOutputWithContext(ctx context.Context) ODataResourceDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ODataResourceDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ODataResourceDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o ODataResourceDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ODataResourceDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o ODataResourceDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v ODataResourceDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o ODataResourceDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v ODataResourceDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The OData resource path. Type: string (or Expression with resultType string).
func (o ODataResourceDatasetResponseOutput) Path() pulumi.AnyOutput {
	return o.ApplyT(func(v ODataResourceDatasetResponse) interface{} { return v.Path }).(pulumi.AnyOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o ODataResourceDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v ODataResourceDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'ODataResource'.
func (o ODataResourceDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ODataResourceDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Open Database Connectivity (ODBC) linked service.
type OdbcLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Type of authentication used to connect to the ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).
	AuthenticationType interface{} `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// The access credential portion of the connection string specified in driver-specific property-value format.
	Credential interface{} `pulumi:"credential"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Password for Basic authentication.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'Odbc'.
	Type string `pulumi:"type"`
	// User name for Basic authentication. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// OdbcLinkedServiceInput is an input type that accepts OdbcLinkedServiceArgs and OdbcLinkedServiceOutput values.
// You can construct a concrete instance of `OdbcLinkedServiceInput` via:
//
//          OdbcLinkedServiceArgs{...}
type OdbcLinkedServiceInput interface {
	pulumi.Input

	ToOdbcLinkedServiceOutput() OdbcLinkedServiceOutput
	ToOdbcLinkedServiceOutputWithContext(context.Context) OdbcLinkedServiceOutput
}

// Open Database Connectivity (ODBC) linked service.
type OdbcLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Type of authentication used to connect to the ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).
	AuthenticationType pulumi.Input `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// The access credential portion of the connection string specified in driver-specific property-value format.
	Credential pulumi.Input `pulumi:"credential"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Password for Basic authentication.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'Odbc'.
	Type pulumi.StringInput `pulumi:"type"`
	// User name for Basic authentication. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (OdbcLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OdbcLinkedService)(nil)).Elem()
}

func (i OdbcLinkedServiceArgs) ToOdbcLinkedServiceOutput() OdbcLinkedServiceOutput {
	return i.ToOdbcLinkedServiceOutputWithContext(context.Background())
}

func (i OdbcLinkedServiceArgs) ToOdbcLinkedServiceOutputWithContext(ctx context.Context) OdbcLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OdbcLinkedServiceOutput)
}

// Open Database Connectivity (ODBC) linked service.
type OdbcLinkedServiceOutput struct{ *pulumi.OutputState }

func (OdbcLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OdbcLinkedService)(nil)).Elem()
}

func (o OdbcLinkedServiceOutput) ToOdbcLinkedServiceOutput() OdbcLinkedServiceOutput {
	return o
}

func (o OdbcLinkedServiceOutput) ToOdbcLinkedServiceOutputWithContext(ctx context.Context) OdbcLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o OdbcLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v OdbcLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Type of authentication used to connect to the ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).
func (o OdbcLinkedServiceOutput) AuthenticationType() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcLinkedService) interface{} { return v.AuthenticationType }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o OdbcLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v OdbcLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o OdbcLinkedServiceOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcLinkedService) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// The access credential portion of the connection string specified in driver-specific property-value format.
func (o OdbcLinkedServiceOutput) Credential() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcLinkedService) interface{} { return v.Credential }).(pulumi.AnyOutput)
}

// Linked service description.
func (o OdbcLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OdbcLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o OdbcLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o OdbcLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v OdbcLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Password for Basic authentication.
func (o OdbcLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Odbc'.
func (o OdbcLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OdbcLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// User name for Basic authentication. Type: string (or Expression with resultType string).
func (o OdbcLinkedServiceOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcLinkedService) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// Open Database Connectivity (ODBC) linked service.
type OdbcLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Type of authentication used to connect to the ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).
	AuthenticationType interface{} `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// The access credential portion of the connection string specified in driver-specific property-value format.
	Credential interface{} `pulumi:"credential"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Password for Basic authentication.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'Odbc'.
	Type string `pulumi:"type"`
	// User name for Basic authentication. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// OdbcLinkedServiceResponseInput is an input type that accepts OdbcLinkedServiceResponseArgs and OdbcLinkedServiceResponseOutput values.
// You can construct a concrete instance of `OdbcLinkedServiceResponseInput` via:
//
//          OdbcLinkedServiceResponseArgs{...}
type OdbcLinkedServiceResponseInput interface {
	pulumi.Input

	ToOdbcLinkedServiceResponseOutput() OdbcLinkedServiceResponseOutput
	ToOdbcLinkedServiceResponseOutputWithContext(context.Context) OdbcLinkedServiceResponseOutput
}

// Open Database Connectivity (ODBC) linked service.
type OdbcLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Type of authentication used to connect to the ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).
	AuthenticationType pulumi.Input `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// The access credential portion of the connection string specified in driver-specific property-value format.
	Credential pulumi.Input `pulumi:"credential"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Password for Basic authentication.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'Odbc'.
	Type pulumi.StringInput `pulumi:"type"`
	// User name for Basic authentication. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (OdbcLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OdbcLinkedServiceResponse)(nil)).Elem()
}

func (i OdbcLinkedServiceResponseArgs) ToOdbcLinkedServiceResponseOutput() OdbcLinkedServiceResponseOutput {
	return i.ToOdbcLinkedServiceResponseOutputWithContext(context.Background())
}

func (i OdbcLinkedServiceResponseArgs) ToOdbcLinkedServiceResponseOutputWithContext(ctx context.Context) OdbcLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OdbcLinkedServiceResponseOutput)
}

// Open Database Connectivity (ODBC) linked service.
type OdbcLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (OdbcLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OdbcLinkedServiceResponse)(nil)).Elem()
}

func (o OdbcLinkedServiceResponseOutput) ToOdbcLinkedServiceResponseOutput() OdbcLinkedServiceResponseOutput {
	return o
}

func (o OdbcLinkedServiceResponseOutput) ToOdbcLinkedServiceResponseOutputWithContext(ctx context.Context) OdbcLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o OdbcLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v OdbcLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Type of authentication used to connect to the ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).
func (o OdbcLinkedServiceResponseOutput) AuthenticationType() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcLinkedServiceResponse) interface{} { return v.AuthenticationType }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o OdbcLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v OdbcLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o OdbcLinkedServiceResponseOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcLinkedServiceResponse) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// The access credential portion of the connection string specified in driver-specific property-value format.
func (o OdbcLinkedServiceResponseOutput) Credential() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcLinkedServiceResponse) interface{} { return v.Credential }).(pulumi.AnyOutput)
}

// Linked service description.
func (o OdbcLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OdbcLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o OdbcLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o OdbcLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v OdbcLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Password for Basic authentication.
func (o OdbcLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Odbc'.
func (o OdbcLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OdbcLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// User name for Basic authentication. Type: string (or Expression with resultType string).
func (o OdbcLinkedServiceResponseOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcLinkedServiceResponse) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// A copy activity ODBC sink.
type OdbcSink struct {
	// A query to execute before starting the copy. Type: string (or Expression with resultType string).
	PreCopyScript interface{} `pulumi:"preCopyScript"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'OdbcSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// OdbcSinkInput is an input type that accepts OdbcSinkArgs and OdbcSinkOutput values.
// You can construct a concrete instance of `OdbcSinkInput` via:
//
//          OdbcSinkArgs{...}
type OdbcSinkInput interface {
	pulumi.Input

	ToOdbcSinkOutput() OdbcSinkOutput
	ToOdbcSinkOutputWithContext(context.Context) OdbcSinkOutput
}

// A copy activity ODBC sink.
type OdbcSinkArgs struct {
	// A query to execute before starting the copy. Type: string (or Expression with resultType string).
	PreCopyScript pulumi.Input `pulumi:"preCopyScript"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'OdbcSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (OdbcSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OdbcSink)(nil)).Elem()
}

func (i OdbcSinkArgs) ToOdbcSinkOutput() OdbcSinkOutput {
	return i.ToOdbcSinkOutputWithContext(context.Background())
}

func (i OdbcSinkArgs) ToOdbcSinkOutputWithContext(ctx context.Context) OdbcSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OdbcSinkOutput)
}

// A copy activity ODBC sink.
type OdbcSinkOutput struct{ *pulumi.OutputState }

func (OdbcSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OdbcSink)(nil)).Elem()
}

func (o OdbcSinkOutput) ToOdbcSinkOutput() OdbcSinkOutput {
	return o
}

func (o OdbcSinkOutput) ToOdbcSinkOutputWithContext(ctx context.Context) OdbcSinkOutput {
	return o
}

// A query to execute before starting the copy. Type: string (or Expression with resultType string).
func (o OdbcSinkOutput) PreCopyScript() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcSink) interface{} { return v.PreCopyScript }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o OdbcSinkOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcSink) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o OdbcSinkOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcSink) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'OdbcSink'.
func (o OdbcSinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OdbcSink) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o OdbcSinkOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcSink) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o OdbcSinkOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcSink) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity ODBC sink.
type OdbcSinkResponse struct {
	// A query to execute before starting the copy. Type: string (or Expression with resultType string).
	PreCopyScript interface{} `pulumi:"preCopyScript"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'OdbcSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// OdbcSinkResponseInput is an input type that accepts OdbcSinkResponseArgs and OdbcSinkResponseOutput values.
// You can construct a concrete instance of `OdbcSinkResponseInput` via:
//
//          OdbcSinkResponseArgs{...}
type OdbcSinkResponseInput interface {
	pulumi.Input

	ToOdbcSinkResponseOutput() OdbcSinkResponseOutput
	ToOdbcSinkResponseOutputWithContext(context.Context) OdbcSinkResponseOutput
}

// A copy activity ODBC sink.
type OdbcSinkResponseArgs struct {
	// A query to execute before starting the copy. Type: string (or Expression with resultType string).
	PreCopyScript pulumi.Input `pulumi:"preCopyScript"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'OdbcSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (OdbcSinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OdbcSinkResponse)(nil)).Elem()
}

func (i OdbcSinkResponseArgs) ToOdbcSinkResponseOutput() OdbcSinkResponseOutput {
	return i.ToOdbcSinkResponseOutputWithContext(context.Background())
}

func (i OdbcSinkResponseArgs) ToOdbcSinkResponseOutputWithContext(ctx context.Context) OdbcSinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OdbcSinkResponseOutput)
}

// A copy activity ODBC sink.
type OdbcSinkResponseOutput struct{ *pulumi.OutputState }

func (OdbcSinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OdbcSinkResponse)(nil)).Elem()
}

func (o OdbcSinkResponseOutput) ToOdbcSinkResponseOutput() OdbcSinkResponseOutput {
	return o
}

func (o OdbcSinkResponseOutput) ToOdbcSinkResponseOutputWithContext(ctx context.Context) OdbcSinkResponseOutput {
	return o
}

// A query to execute before starting the copy. Type: string (or Expression with resultType string).
func (o OdbcSinkResponseOutput) PreCopyScript() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcSinkResponse) interface{} { return v.PreCopyScript }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o OdbcSinkResponseOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcSinkResponse) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o OdbcSinkResponseOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcSinkResponse) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'OdbcSink'.
func (o OdbcSinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OdbcSinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o OdbcSinkResponseOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcSinkResponse) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o OdbcSinkResponseOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v OdbcSinkResponse) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// Oracle database.
type OracleLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Oracle'.
	Type string `pulumi:"type"`
}

// OracleLinkedServiceInput is an input type that accepts OracleLinkedServiceArgs and OracleLinkedServiceOutput values.
// You can construct a concrete instance of `OracleLinkedServiceInput` via:
//
//          OracleLinkedServiceArgs{...}
type OracleLinkedServiceInput interface {
	pulumi.Input

	ToOracleLinkedServiceOutput() OracleLinkedServiceOutput
	ToOracleLinkedServiceOutputWithContext(context.Context) OracleLinkedServiceOutput
}

// Oracle database.
type OracleLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Oracle'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (OracleLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleLinkedService)(nil)).Elem()
}

func (i OracleLinkedServiceArgs) ToOracleLinkedServiceOutput() OracleLinkedServiceOutput {
	return i.ToOracleLinkedServiceOutputWithContext(context.Background())
}

func (i OracleLinkedServiceArgs) ToOracleLinkedServiceOutputWithContext(ctx context.Context) OracleLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OracleLinkedServiceOutput)
}

// Oracle database.
type OracleLinkedServiceOutput struct{ *pulumi.OutputState }

func (OracleLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleLinkedService)(nil)).Elem()
}

func (o OracleLinkedServiceOutput) ToOracleLinkedServiceOutput() OracleLinkedServiceOutput {
	return o
}

func (o OracleLinkedServiceOutput) ToOracleLinkedServiceOutputWithContext(ctx context.Context) OracleLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o OracleLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v OracleLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o OracleLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v OracleLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o OracleLinkedServiceOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleLinkedService) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o OracleLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OracleLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o OracleLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o OracleLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v OracleLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'Oracle'.
func (o OracleLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OracleLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Oracle database.
type OracleLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Oracle'.
	Type string `pulumi:"type"`
}

// OracleLinkedServiceResponseInput is an input type that accepts OracleLinkedServiceResponseArgs and OracleLinkedServiceResponseOutput values.
// You can construct a concrete instance of `OracleLinkedServiceResponseInput` via:
//
//          OracleLinkedServiceResponseArgs{...}
type OracleLinkedServiceResponseInput interface {
	pulumi.Input

	ToOracleLinkedServiceResponseOutput() OracleLinkedServiceResponseOutput
	ToOracleLinkedServiceResponseOutputWithContext(context.Context) OracleLinkedServiceResponseOutput
}

// Oracle database.
type OracleLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Oracle'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (OracleLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleLinkedServiceResponse)(nil)).Elem()
}

func (i OracleLinkedServiceResponseArgs) ToOracleLinkedServiceResponseOutput() OracleLinkedServiceResponseOutput {
	return i.ToOracleLinkedServiceResponseOutputWithContext(context.Background())
}

func (i OracleLinkedServiceResponseArgs) ToOracleLinkedServiceResponseOutputWithContext(ctx context.Context) OracleLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OracleLinkedServiceResponseOutput)
}

// Oracle database.
type OracleLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (OracleLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleLinkedServiceResponse)(nil)).Elem()
}

func (o OracleLinkedServiceResponseOutput) ToOracleLinkedServiceResponseOutput() OracleLinkedServiceResponseOutput {
	return o
}

func (o OracleLinkedServiceResponseOutput) ToOracleLinkedServiceResponseOutputWithContext(ctx context.Context) OracleLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o OracleLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v OracleLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o OracleLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v OracleLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o OracleLinkedServiceResponseOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleLinkedServiceResponse) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o OracleLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OracleLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o OracleLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o OracleLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v OracleLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'Oracle'.
func (o OracleLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OracleLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Oracle sink.
type OracleSink struct {
	// SQL pre-copy script. Type: string (or Expression with resultType string).
	PreCopyScript interface{} `pulumi:"preCopyScript"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'OracleSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// OracleSinkInput is an input type that accepts OracleSinkArgs and OracleSinkOutput values.
// You can construct a concrete instance of `OracleSinkInput` via:
//
//          OracleSinkArgs{...}
type OracleSinkInput interface {
	pulumi.Input

	ToOracleSinkOutput() OracleSinkOutput
	ToOracleSinkOutputWithContext(context.Context) OracleSinkOutput
}

// A copy activity Oracle sink.
type OracleSinkArgs struct {
	// SQL pre-copy script. Type: string (or Expression with resultType string).
	PreCopyScript pulumi.Input `pulumi:"preCopyScript"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'OracleSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (OracleSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleSink)(nil)).Elem()
}

func (i OracleSinkArgs) ToOracleSinkOutput() OracleSinkOutput {
	return i.ToOracleSinkOutputWithContext(context.Background())
}

func (i OracleSinkArgs) ToOracleSinkOutputWithContext(ctx context.Context) OracleSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OracleSinkOutput)
}

// A copy activity Oracle sink.
type OracleSinkOutput struct{ *pulumi.OutputState }

func (OracleSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleSink)(nil)).Elem()
}

func (o OracleSinkOutput) ToOracleSinkOutput() OracleSinkOutput {
	return o
}

func (o OracleSinkOutput) ToOracleSinkOutputWithContext(ctx context.Context) OracleSinkOutput {
	return o
}

// SQL pre-copy script. Type: string (or Expression with resultType string).
func (o OracleSinkOutput) PreCopyScript() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSink) interface{} { return v.PreCopyScript }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o OracleSinkOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSink) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o OracleSinkOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSink) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'OracleSink'.
func (o OracleSinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OracleSink) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o OracleSinkOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSink) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o OracleSinkOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSink) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity Oracle sink.
type OracleSinkResponse struct {
	// SQL pre-copy script. Type: string (or Expression with resultType string).
	PreCopyScript interface{} `pulumi:"preCopyScript"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'OracleSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// OracleSinkResponseInput is an input type that accepts OracleSinkResponseArgs and OracleSinkResponseOutput values.
// You can construct a concrete instance of `OracleSinkResponseInput` via:
//
//          OracleSinkResponseArgs{...}
type OracleSinkResponseInput interface {
	pulumi.Input

	ToOracleSinkResponseOutput() OracleSinkResponseOutput
	ToOracleSinkResponseOutputWithContext(context.Context) OracleSinkResponseOutput
}

// A copy activity Oracle sink.
type OracleSinkResponseArgs struct {
	// SQL pre-copy script. Type: string (or Expression with resultType string).
	PreCopyScript pulumi.Input `pulumi:"preCopyScript"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'OracleSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (OracleSinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleSinkResponse)(nil)).Elem()
}

func (i OracleSinkResponseArgs) ToOracleSinkResponseOutput() OracleSinkResponseOutput {
	return i.ToOracleSinkResponseOutputWithContext(context.Background())
}

func (i OracleSinkResponseArgs) ToOracleSinkResponseOutputWithContext(ctx context.Context) OracleSinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OracleSinkResponseOutput)
}

// A copy activity Oracle sink.
type OracleSinkResponseOutput struct{ *pulumi.OutputState }

func (OracleSinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleSinkResponse)(nil)).Elem()
}

func (o OracleSinkResponseOutput) ToOracleSinkResponseOutput() OracleSinkResponseOutput {
	return o
}

func (o OracleSinkResponseOutput) ToOracleSinkResponseOutputWithContext(ctx context.Context) OracleSinkResponseOutput {
	return o
}

// SQL pre-copy script. Type: string (or Expression with resultType string).
func (o OracleSinkResponseOutput) PreCopyScript() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSinkResponse) interface{} { return v.PreCopyScript }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o OracleSinkResponseOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSinkResponse) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o OracleSinkResponseOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSinkResponse) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'OracleSink'.
func (o OracleSinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OracleSinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o OracleSinkResponseOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSinkResponse) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o OracleSinkResponseOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSinkResponse) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity Oracle source.
type OracleSource struct {
	// Oracle reader query. Type: string (or Expression with resultType string).
	OracleReaderQuery interface{} `pulumi:"oracleReaderQuery"`
	// Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	QueryTimeout interface{} `pulumi:"queryTimeout"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'OracleSource'.
	Type string `pulumi:"type"`
}

// OracleSourceInput is an input type that accepts OracleSourceArgs and OracleSourceOutput values.
// You can construct a concrete instance of `OracleSourceInput` via:
//
//          OracleSourceArgs{...}
type OracleSourceInput interface {
	pulumi.Input

	ToOracleSourceOutput() OracleSourceOutput
	ToOracleSourceOutputWithContext(context.Context) OracleSourceOutput
}

// A copy activity Oracle source.
type OracleSourceArgs struct {
	// Oracle reader query. Type: string (or Expression with resultType string).
	OracleReaderQuery pulumi.Input `pulumi:"oracleReaderQuery"`
	// Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	QueryTimeout pulumi.Input `pulumi:"queryTimeout"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'OracleSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (OracleSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleSource)(nil)).Elem()
}

func (i OracleSourceArgs) ToOracleSourceOutput() OracleSourceOutput {
	return i.ToOracleSourceOutputWithContext(context.Background())
}

func (i OracleSourceArgs) ToOracleSourceOutputWithContext(ctx context.Context) OracleSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OracleSourceOutput)
}

// A copy activity Oracle source.
type OracleSourceOutput struct{ *pulumi.OutputState }

func (OracleSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleSource)(nil)).Elem()
}

func (o OracleSourceOutput) ToOracleSourceOutput() OracleSourceOutput {
	return o
}

func (o OracleSourceOutput) ToOracleSourceOutputWithContext(ctx context.Context) OracleSourceOutput {
	return o
}

// Oracle reader query. Type: string (or Expression with resultType string).
func (o OracleSourceOutput) OracleReaderQuery() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSource) interface{} { return v.OracleReaderQuery }).(pulumi.AnyOutput)
}

// Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o OracleSourceOutput) QueryTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSource) interface{} { return v.QueryTimeout }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o OracleSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o OracleSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'OracleSource'.
func (o OracleSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OracleSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Oracle source.
type OracleSourceResponse struct {
	// Oracle reader query. Type: string (or Expression with resultType string).
	OracleReaderQuery interface{} `pulumi:"oracleReaderQuery"`
	// Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	QueryTimeout interface{} `pulumi:"queryTimeout"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'OracleSource'.
	Type string `pulumi:"type"`
}

// OracleSourceResponseInput is an input type that accepts OracleSourceResponseArgs and OracleSourceResponseOutput values.
// You can construct a concrete instance of `OracleSourceResponseInput` via:
//
//          OracleSourceResponseArgs{...}
type OracleSourceResponseInput interface {
	pulumi.Input

	ToOracleSourceResponseOutput() OracleSourceResponseOutput
	ToOracleSourceResponseOutputWithContext(context.Context) OracleSourceResponseOutput
}

// A copy activity Oracle source.
type OracleSourceResponseArgs struct {
	// Oracle reader query. Type: string (or Expression with resultType string).
	OracleReaderQuery pulumi.Input `pulumi:"oracleReaderQuery"`
	// Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	QueryTimeout pulumi.Input `pulumi:"queryTimeout"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'OracleSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (OracleSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleSourceResponse)(nil)).Elem()
}

func (i OracleSourceResponseArgs) ToOracleSourceResponseOutput() OracleSourceResponseOutput {
	return i.ToOracleSourceResponseOutputWithContext(context.Background())
}

func (i OracleSourceResponseArgs) ToOracleSourceResponseOutputWithContext(ctx context.Context) OracleSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OracleSourceResponseOutput)
}

// A copy activity Oracle source.
type OracleSourceResponseOutput struct{ *pulumi.OutputState }

func (OracleSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleSourceResponse)(nil)).Elem()
}

func (o OracleSourceResponseOutput) ToOracleSourceResponseOutput() OracleSourceResponseOutput {
	return o
}

func (o OracleSourceResponseOutput) ToOracleSourceResponseOutputWithContext(ctx context.Context) OracleSourceResponseOutput {
	return o
}

// Oracle reader query. Type: string (or Expression with resultType string).
func (o OracleSourceResponseOutput) OracleReaderQuery() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSourceResponse) interface{} { return v.OracleReaderQuery }).(pulumi.AnyOutput)
}

// Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o OracleSourceResponseOutput) QueryTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSourceResponse) interface{} { return v.QueryTimeout }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o OracleSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o OracleSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'OracleSource'.
func (o OracleSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OracleSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The on-premises Oracle database dataset.
type OracleTableDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The table name of the on-premises Oracle database. Type: string (or Expression with resultType string).
	TableName interface{} `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'OracleTable'.
	Type string `pulumi:"type"`
}

// OracleTableDatasetInput is an input type that accepts OracleTableDatasetArgs and OracleTableDatasetOutput values.
// You can construct a concrete instance of `OracleTableDatasetInput` via:
//
//          OracleTableDatasetArgs{...}
type OracleTableDatasetInput interface {
	pulumi.Input

	ToOracleTableDatasetOutput() OracleTableDatasetOutput
	ToOracleTableDatasetOutputWithContext(context.Context) OracleTableDatasetOutput
}

// The on-premises Oracle database dataset.
type OracleTableDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The table name of the on-premises Oracle database. Type: string (or Expression with resultType string).
	TableName pulumi.Input `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'OracleTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (OracleTableDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleTableDataset)(nil)).Elem()
}

func (i OracleTableDatasetArgs) ToOracleTableDatasetOutput() OracleTableDatasetOutput {
	return i.ToOracleTableDatasetOutputWithContext(context.Background())
}

func (i OracleTableDatasetArgs) ToOracleTableDatasetOutputWithContext(ctx context.Context) OracleTableDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OracleTableDatasetOutput)
}

// The on-premises Oracle database dataset.
type OracleTableDatasetOutput struct{ *pulumi.OutputState }

func (OracleTableDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleTableDataset)(nil)).Elem()
}

func (o OracleTableDatasetOutput) ToOracleTableDatasetOutput() OracleTableDatasetOutput {
	return o
}

func (o OracleTableDatasetOutput) ToOracleTableDatasetOutputWithContext(ctx context.Context) OracleTableDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o OracleTableDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v OracleTableDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o OracleTableDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OracleTableDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o OracleTableDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v OracleTableDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o OracleTableDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v OracleTableDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o OracleTableDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleTableDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The table name of the on-premises Oracle database. Type: string (or Expression with resultType string).
func (o OracleTableDatasetOutput) TableName() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleTableDataset) interface{} { return v.TableName }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'OracleTable'.
func (o OracleTableDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OracleTableDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The on-premises Oracle database dataset.
type OracleTableDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The table name of the on-premises Oracle database. Type: string (or Expression with resultType string).
	TableName interface{} `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'OracleTable'.
	Type string `pulumi:"type"`
}

// OracleTableDatasetResponseInput is an input type that accepts OracleTableDatasetResponseArgs and OracleTableDatasetResponseOutput values.
// You can construct a concrete instance of `OracleTableDatasetResponseInput` via:
//
//          OracleTableDatasetResponseArgs{...}
type OracleTableDatasetResponseInput interface {
	pulumi.Input

	ToOracleTableDatasetResponseOutput() OracleTableDatasetResponseOutput
	ToOracleTableDatasetResponseOutputWithContext(context.Context) OracleTableDatasetResponseOutput
}

// The on-premises Oracle database dataset.
type OracleTableDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The table name of the on-premises Oracle database. Type: string (or Expression with resultType string).
	TableName pulumi.Input `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'OracleTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (OracleTableDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleTableDatasetResponse)(nil)).Elem()
}

func (i OracleTableDatasetResponseArgs) ToOracleTableDatasetResponseOutput() OracleTableDatasetResponseOutput {
	return i.ToOracleTableDatasetResponseOutputWithContext(context.Background())
}

func (i OracleTableDatasetResponseArgs) ToOracleTableDatasetResponseOutputWithContext(ctx context.Context) OracleTableDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OracleTableDatasetResponseOutput)
}

// The on-premises Oracle database dataset.
type OracleTableDatasetResponseOutput struct{ *pulumi.OutputState }

func (OracleTableDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleTableDatasetResponse)(nil)).Elem()
}

func (o OracleTableDatasetResponseOutput) ToOracleTableDatasetResponseOutput() OracleTableDatasetResponseOutput {
	return o
}

func (o OracleTableDatasetResponseOutput) ToOracleTableDatasetResponseOutputWithContext(ctx context.Context) OracleTableDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o OracleTableDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v OracleTableDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o OracleTableDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OracleTableDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o OracleTableDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v OracleTableDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o OracleTableDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v OracleTableDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o OracleTableDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleTableDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The table name of the on-premises Oracle database. Type: string (or Expression with resultType string).
func (o OracleTableDatasetResponseOutput) TableName() pulumi.AnyOutput {
	return o.ApplyT(func(v OracleTableDatasetResponse) interface{} { return v.TableName }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'OracleTable'.
func (o OracleTableDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OracleTableDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The data stored in Optimized Row Columnar (ORC) format.
type OrcFormat struct {
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer interface{} `pulumi:"deserializer"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer interface{} `pulumi:"serializer"`
	// Type of dataset storage format.
	// Expected value is 'OrcFormat'.
	Type string `pulumi:"type"`
}

// OrcFormatInput is an input type that accepts OrcFormatArgs and OrcFormatOutput values.
// You can construct a concrete instance of `OrcFormatInput` via:
//
//          OrcFormatArgs{...}
type OrcFormatInput interface {
	pulumi.Input

	ToOrcFormatOutput() OrcFormatOutput
	ToOrcFormatOutputWithContext(context.Context) OrcFormatOutput
}

// The data stored in Optimized Row Columnar (ORC) format.
type OrcFormatArgs struct {
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer pulumi.Input `pulumi:"deserializer"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer pulumi.Input `pulumi:"serializer"`
	// Type of dataset storage format.
	// Expected value is 'OrcFormat'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (OrcFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrcFormat)(nil)).Elem()
}

func (i OrcFormatArgs) ToOrcFormatOutput() OrcFormatOutput {
	return i.ToOrcFormatOutputWithContext(context.Background())
}

func (i OrcFormatArgs) ToOrcFormatOutputWithContext(ctx context.Context) OrcFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrcFormatOutput)
}

// The data stored in Optimized Row Columnar (ORC) format.
type OrcFormatOutput struct{ *pulumi.OutputState }

func (OrcFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrcFormat)(nil)).Elem()
}

func (o OrcFormatOutput) ToOrcFormatOutput() OrcFormatOutput {
	return o
}

func (o OrcFormatOutput) ToOrcFormatOutputWithContext(ctx context.Context) OrcFormatOutput {
	return o
}

// Deserializer. Type: string (or Expression with resultType string).
func (o OrcFormatOutput) Deserializer() pulumi.AnyOutput {
	return o.ApplyT(func(v OrcFormat) interface{} { return v.Deserializer }).(pulumi.AnyOutput)
}

// Serializer. Type: string (or Expression with resultType string).
func (o OrcFormatOutput) Serializer() pulumi.AnyOutput {
	return o.ApplyT(func(v OrcFormat) interface{} { return v.Serializer }).(pulumi.AnyOutput)
}

// Type of dataset storage format.
// Expected value is 'OrcFormat'.
func (o OrcFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OrcFormat) string { return v.Type }).(pulumi.StringOutput)
}

// The data stored in Optimized Row Columnar (ORC) format.
type OrcFormatResponse struct {
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer interface{} `pulumi:"deserializer"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer interface{} `pulumi:"serializer"`
	// Type of dataset storage format.
	// Expected value is 'OrcFormat'.
	Type string `pulumi:"type"`
}

// OrcFormatResponseInput is an input type that accepts OrcFormatResponseArgs and OrcFormatResponseOutput values.
// You can construct a concrete instance of `OrcFormatResponseInput` via:
//
//          OrcFormatResponseArgs{...}
type OrcFormatResponseInput interface {
	pulumi.Input

	ToOrcFormatResponseOutput() OrcFormatResponseOutput
	ToOrcFormatResponseOutputWithContext(context.Context) OrcFormatResponseOutput
}

// The data stored in Optimized Row Columnar (ORC) format.
type OrcFormatResponseArgs struct {
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer pulumi.Input `pulumi:"deserializer"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer pulumi.Input `pulumi:"serializer"`
	// Type of dataset storage format.
	// Expected value is 'OrcFormat'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (OrcFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrcFormatResponse)(nil)).Elem()
}

func (i OrcFormatResponseArgs) ToOrcFormatResponseOutput() OrcFormatResponseOutput {
	return i.ToOrcFormatResponseOutputWithContext(context.Background())
}

func (i OrcFormatResponseArgs) ToOrcFormatResponseOutputWithContext(ctx context.Context) OrcFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrcFormatResponseOutput)
}

// The data stored in Optimized Row Columnar (ORC) format.
type OrcFormatResponseOutput struct{ *pulumi.OutputState }

func (OrcFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrcFormatResponse)(nil)).Elem()
}

func (o OrcFormatResponseOutput) ToOrcFormatResponseOutput() OrcFormatResponseOutput {
	return o
}

func (o OrcFormatResponseOutput) ToOrcFormatResponseOutputWithContext(ctx context.Context) OrcFormatResponseOutput {
	return o
}

// Deserializer. Type: string (or Expression with resultType string).
func (o OrcFormatResponseOutput) Deserializer() pulumi.AnyOutput {
	return o.ApplyT(func(v OrcFormatResponse) interface{} { return v.Deserializer }).(pulumi.AnyOutput)
}

// Serializer. Type: string (or Expression with resultType string).
func (o OrcFormatResponseOutput) Serializer() pulumi.AnyOutput {
	return o.ApplyT(func(v OrcFormatResponse) interface{} { return v.Serializer }).(pulumi.AnyOutput)
}

// Type of dataset storage format.
// Expected value is 'OrcFormat'.
func (o OrcFormatResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OrcFormatResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Definition of a single parameter for an entity.
type ParameterSpecification struct {
	// Default value of parameter.
	DefaultValue interface{} `pulumi:"defaultValue"`
	// Parameter type.
	Type string `pulumi:"type"`
}

// ParameterSpecificationInput is an input type that accepts ParameterSpecificationArgs and ParameterSpecificationOutput values.
// You can construct a concrete instance of `ParameterSpecificationInput` via:
//
//          ParameterSpecificationArgs{...}
type ParameterSpecificationInput interface {
	pulumi.Input

	ToParameterSpecificationOutput() ParameterSpecificationOutput
	ToParameterSpecificationOutputWithContext(context.Context) ParameterSpecificationOutput
}

// Definition of a single parameter for an entity.
type ParameterSpecificationArgs struct {
	// Default value of parameter.
	DefaultValue pulumi.Input `pulumi:"defaultValue"`
	// Parameter type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ParameterSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterSpecification)(nil)).Elem()
}

func (i ParameterSpecificationArgs) ToParameterSpecificationOutput() ParameterSpecificationOutput {
	return i.ToParameterSpecificationOutputWithContext(context.Background())
}

func (i ParameterSpecificationArgs) ToParameterSpecificationOutputWithContext(ctx context.Context) ParameterSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterSpecificationOutput)
}

// ParameterSpecificationMapInput is an input type that accepts ParameterSpecificationMap and ParameterSpecificationMapOutput values.
// You can construct a concrete instance of `ParameterSpecificationMapInput` via:
//
//          ParameterSpecificationMap{ "key": ParameterSpecificationArgs{...} }
type ParameterSpecificationMapInput interface {
	pulumi.Input

	ToParameterSpecificationMapOutput() ParameterSpecificationMapOutput
	ToParameterSpecificationMapOutputWithContext(context.Context) ParameterSpecificationMapOutput
}

type ParameterSpecificationMap map[string]ParameterSpecificationInput

func (ParameterSpecificationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterSpecification)(nil)).Elem()
}

func (i ParameterSpecificationMap) ToParameterSpecificationMapOutput() ParameterSpecificationMapOutput {
	return i.ToParameterSpecificationMapOutputWithContext(context.Background())
}

func (i ParameterSpecificationMap) ToParameterSpecificationMapOutputWithContext(ctx context.Context) ParameterSpecificationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterSpecificationMapOutput)
}

// Definition of a single parameter for an entity.
type ParameterSpecificationOutput struct{ *pulumi.OutputState }

func (ParameterSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterSpecification)(nil)).Elem()
}

func (o ParameterSpecificationOutput) ToParameterSpecificationOutput() ParameterSpecificationOutput {
	return o
}

func (o ParameterSpecificationOutput) ToParameterSpecificationOutputWithContext(ctx context.Context) ParameterSpecificationOutput {
	return o
}

// Default value of parameter.
func (o ParameterSpecificationOutput) DefaultValue() pulumi.AnyOutput {
	return o.ApplyT(func(v ParameterSpecification) interface{} { return v.DefaultValue }).(pulumi.AnyOutput)
}

// Parameter type.
func (o ParameterSpecificationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterSpecification) string { return v.Type }).(pulumi.StringOutput)
}

type ParameterSpecificationMapOutput struct{ *pulumi.OutputState }

func (ParameterSpecificationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterSpecification)(nil)).Elem()
}

func (o ParameterSpecificationMapOutput) ToParameterSpecificationMapOutput() ParameterSpecificationMapOutput {
	return o
}

func (o ParameterSpecificationMapOutput) ToParameterSpecificationMapOutputWithContext(ctx context.Context) ParameterSpecificationMapOutput {
	return o
}

func (o ParameterSpecificationMapOutput) MapIndex(k pulumi.StringInput) ParameterSpecificationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ParameterSpecification {
		return vs[0].(map[string]ParameterSpecification)[vs[1].(string)]
	}).(ParameterSpecificationOutput)
}

// Definition of a single parameter for an entity.
type ParameterSpecificationResponse struct {
	// Default value of parameter.
	DefaultValue interface{} `pulumi:"defaultValue"`
	// Parameter type.
	Type string `pulumi:"type"`
}

// ParameterSpecificationResponseInput is an input type that accepts ParameterSpecificationResponseArgs and ParameterSpecificationResponseOutput values.
// You can construct a concrete instance of `ParameterSpecificationResponseInput` via:
//
//          ParameterSpecificationResponseArgs{...}
type ParameterSpecificationResponseInput interface {
	pulumi.Input

	ToParameterSpecificationResponseOutput() ParameterSpecificationResponseOutput
	ToParameterSpecificationResponseOutputWithContext(context.Context) ParameterSpecificationResponseOutput
}

// Definition of a single parameter for an entity.
type ParameterSpecificationResponseArgs struct {
	// Default value of parameter.
	DefaultValue pulumi.Input `pulumi:"defaultValue"`
	// Parameter type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ParameterSpecificationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterSpecificationResponse)(nil)).Elem()
}

func (i ParameterSpecificationResponseArgs) ToParameterSpecificationResponseOutput() ParameterSpecificationResponseOutput {
	return i.ToParameterSpecificationResponseOutputWithContext(context.Background())
}

func (i ParameterSpecificationResponseArgs) ToParameterSpecificationResponseOutputWithContext(ctx context.Context) ParameterSpecificationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterSpecificationResponseOutput)
}

// ParameterSpecificationResponseMapInput is an input type that accepts ParameterSpecificationResponseMap and ParameterSpecificationResponseMapOutput values.
// You can construct a concrete instance of `ParameterSpecificationResponseMapInput` via:
//
//          ParameterSpecificationResponseMap{ "key": ParameterSpecificationResponseArgs{...} }
type ParameterSpecificationResponseMapInput interface {
	pulumi.Input

	ToParameterSpecificationResponseMapOutput() ParameterSpecificationResponseMapOutput
	ToParameterSpecificationResponseMapOutputWithContext(context.Context) ParameterSpecificationResponseMapOutput
}

type ParameterSpecificationResponseMap map[string]ParameterSpecificationResponseInput

func (ParameterSpecificationResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterSpecificationResponse)(nil)).Elem()
}

func (i ParameterSpecificationResponseMap) ToParameterSpecificationResponseMapOutput() ParameterSpecificationResponseMapOutput {
	return i.ToParameterSpecificationResponseMapOutputWithContext(context.Background())
}

func (i ParameterSpecificationResponseMap) ToParameterSpecificationResponseMapOutputWithContext(ctx context.Context) ParameterSpecificationResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterSpecificationResponseMapOutput)
}

// Definition of a single parameter for an entity.
type ParameterSpecificationResponseOutput struct{ *pulumi.OutputState }

func (ParameterSpecificationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterSpecificationResponse)(nil)).Elem()
}

func (o ParameterSpecificationResponseOutput) ToParameterSpecificationResponseOutput() ParameterSpecificationResponseOutput {
	return o
}

func (o ParameterSpecificationResponseOutput) ToParameterSpecificationResponseOutputWithContext(ctx context.Context) ParameterSpecificationResponseOutput {
	return o
}

// Default value of parameter.
func (o ParameterSpecificationResponseOutput) DefaultValue() pulumi.AnyOutput {
	return o.ApplyT(func(v ParameterSpecificationResponse) interface{} { return v.DefaultValue }).(pulumi.AnyOutput)
}

// Parameter type.
func (o ParameterSpecificationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterSpecificationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ParameterSpecificationResponseMapOutput struct{ *pulumi.OutputState }

func (ParameterSpecificationResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterSpecificationResponse)(nil)).Elem()
}

func (o ParameterSpecificationResponseMapOutput) ToParameterSpecificationResponseMapOutput() ParameterSpecificationResponseMapOutput {
	return o
}

func (o ParameterSpecificationResponseMapOutput) ToParameterSpecificationResponseMapOutputWithContext(ctx context.Context) ParameterSpecificationResponseMapOutput {
	return o
}

func (o ParameterSpecificationResponseMapOutput) MapIndex(k pulumi.StringInput) ParameterSpecificationResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ParameterSpecificationResponse {
		return vs[0].(map[string]ParameterSpecificationResponse)[vs[1].(string)]
	}).(ParameterSpecificationResponseOutput)
}

// The data stored in Parquet format.
type ParquetFormat struct {
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer interface{} `pulumi:"deserializer"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer interface{} `pulumi:"serializer"`
	// Type of dataset storage format.
	// Expected value is 'ParquetFormat'.
	Type string `pulumi:"type"`
}

// ParquetFormatInput is an input type that accepts ParquetFormatArgs and ParquetFormatOutput values.
// You can construct a concrete instance of `ParquetFormatInput` via:
//
//          ParquetFormatArgs{...}
type ParquetFormatInput interface {
	pulumi.Input

	ToParquetFormatOutput() ParquetFormatOutput
	ToParquetFormatOutputWithContext(context.Context) ParquetFormatOutput
}

// The data stored in Parquet format.
type ParquetFormatArgs struct {
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer pulumi.Input `pulumi:"deserializer"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer pulumi.Input `pulumi:"serializer"`
	// Type of dataset storage format.
	// Expected value is 'ParquetFormat'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ParquetFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParquetFormat)(nil)).Elem()
}

func (i ParquetFormatArgs) ToParquetFormatOutput() ParquetFormatOutput {
	return i.ToParquetFormatOutputWithContext(context.Background())
}

func (i ParquetFormatArgs) ToParquetFormatOutputWithContext(ctx context.Context) ParquetFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParquetFormatOutput)
}

// The data stored in Parquet format.
type ParquetFormatOutput struct{ *pulumi.OutputState }

func (ParquetFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParquetFormat)(nil)).Elem()
}

func (o ParquetFormatOutput) ToParquetFormatOutput() ParquetFormatOutput {
	return o
}

func (o ParquetFormatOutput) ToParquetFormatOutputWithContext(ctx context.Context) ParquetFormatOutput {
	return o
}

// Deserializer. Type: string (or Expression with resultType string).
func (o ParquetFormatOutput) Deserializer() pulumi.AnyOutput {
	return o.ApplyT(func(v ParquetFormat) interface{} { return v.Deserializer }).(pulumi.AnyOutput)
}

// Serializer. Type: string (or Expression with resultType string).
func (o ParquetFormatOutput) Serializer() pulumi.AnyOutput {
	return o.ApplyT(func(v ParquetFormat) interface{} { return v.Serializer }).(pulumi.AnyOutput)
}

// Type of dataset storage format.
// Expected value is 'ParquetFormat'.
func (o ParquetFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ParquetFormat) string { return v.Type }).(pulumi.StringOutput)
}

// The data stored in Parquet format.
type ParquetFormatResponse struct {
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer interface{} `pulumi:"deserializer"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer interface{} `pulumi:"serializer"`
	// Type of dataset storage format.
	// Expected value is 'ParquetFormat'.
	Type string `pulumi:"type"`
}

// ParquetFormatResponseInput is an input type that accepts ParquetFormatResponseArgs and ParquetFormatResponseOutput values.
// You can construct a concrete instance of `ParquetFormatResponseInput` via:
//
//          ParquetFormatResponseArgs{...}
type ParquetFormatResponseInput interface {
	pulumi.Input

	ToParquetFormatResponseOutput() ParquetFormatResponseOutput
	ToParquetFormatResponseOutputWithContext(context.Context) ParquetFormatResponseOutput
}

// The data stored in Parquet format.
type ParquetFormatResponseArgs struct {
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer pulumi.Input `pulumi:"deserializer"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer pulumi.Input `pulumi:"serializer"`
	// Type of dataset storage format.
	// Expected value is 'ParquetFormat'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ParquetFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParquetFormatResponse)(nil)).Elem()
}

func (i ParquetFormatResponseArgs) ToParquetFormatResponseOutput() ParquetFormatResponseOutput {
	return i.ToParquetFormatResponseOutputWithContext(context.Background())
}

func (i ParquetFormatResponseArgs) ToParquetFormatResponseOutputWithContext(ctx context.Context) ParquetFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParquetFormatResponseOutput)
}

// The data stored in Parquet format.
type ParquetFormatResponseOutput struct{ *pulumi.OutputState }

func (ParquetFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParquetFormatResponse)(nil)).Elem()
}

func (o ParquetFormatResponseOutput) ToParquetFormatResponseOutput() ParquetFormatResponseOutput {
	return o
}

func (o ParquetFormatResponseOutput) ToParquetFormatResponseOutputWithContext(ctx context.Context) ParquetFormatResponseOutput {
	return o
}

// Deserializer. Type: string (or Expression with resultType string).
func (o ParquetFormatResponseOutput) Deserializer() pulumi.AnyOutput {
	return o.ApplyT(func(v ParquetFormatResponse) interface{} { return v.Deserializer }).(pulumi.AnyOutput)
}

// Serializer. Type: string (or Expression with resultType string).
func (o ParquetFormatResponseOutput) Serializer() pulumi.AnyOutput {
	return o.ApplyT(func(v ParquetFormatResponse) interface{} { return v.Serializer }).(pulumi.AnyOutput)
}

// Type of dataset storage format.
// Expected value is 'ParquetFormat'.
func (o ParquetFormatResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ParquetFormatResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Paypal Service linked service.
type PaypalLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The client ID associated with your PayPal application.
	ClientId interface{} `pulumi:"clientId"`
	// The client secret associated with your PayPal application.
	ClientSecret interface{} `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The URL of the PayPal instance. (i.e. api.sandbox.paypal.com)
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Paypal'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// PaypalLinkedServiceInput is an input type that accepts PaypalLinkedServiceArgs and PaypalLinkedServiceOutput values.
// You can construct a concrete instance of `PaypalLinkedServiceInput` via:
//
//          PaypalLinkedServiceArgs{...}
type PaypalLinkedServiceInput interface {
	pulumi.Input

	ToPaypalLinkedServiceOutput() PaypalLinkedServiceOutput
	ToPaypalLinkedServiceOutputWithContext(context.Context) PaypalLinkedServiceOutput
}

// Paypal Service linked service.
type PaypalLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The client ID associated with your PayPal application.
	ClientId pulumi.Input `pulumi:"clientId"`
	// The client secret associated with your PayPal application.
	ClientSecret pulumi.Input `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The URL of the PayPal instance. (i.e. api.sandbox.paypal.com)
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Paypal'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (PaypalLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PaypalLinkedService)(nil)).Elem()
}

func (i PaypalLinkedServiceArgs) ToPaypalLinkedServiceOutput() PaypalLinkedServiceOutput {
	return i.ToPaypalLinkedServiceOutputWithContext(context.Background())
}

func (i PaypalLinkedServiceArgs) ToPaypalLinkedServiceOutputWithContext(ctx context.Context) PaypalLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PaypalLinkedServiceOutput)
}

// Paypal Service linked service.
type PaypalLinkedServiceOutput struct{ *pulumi.OutputState }

func (PaypalLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PaypalLinkedService)(nil)).Elem()
}

func (o PaypalLinkedServiceOutput) ToPaypalLinkedServiceOutput() PaypalLinkedServiceOutput {
	return o
}

func (o PaypalLinkedServiceOutput) ToPaypalLinkedServiceOutputWithContext(ctx context.Context) PaypalLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o PaypalLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v PaypalLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The client ID associated with your PayPal application.
func (o PaypalLinkedServiceOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalLinkedService) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The client secret associated with your PayPal application.
func (o PaypalLinkedServiceOutput) ClientSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalLinkedService) interface{} { return v.ClientSecret }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o PaypalLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v PaypalLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o PaypalLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PaypalLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o PaypalLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The URL of the PayPal instance. (i.e. api.sandbox.paypal.com)
func (o PaypalLinkedServiceOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalLinkedService) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o PaypalLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v PaypalLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'Paypal'.
func (o PaypalLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PaypalLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o PaypalLinkedServiceOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalLinkedService) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o PaypalLinkedServiceOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalLinkedService) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o PaypalLinkedServiceOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalLinkedService) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Paypal Service linked service.
type PaypalLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The client ID associated with your PayPal application.
	ClientId interface{} `pulumi:"clientId"`
	// The client secret associated with your PayPal application.
	ClientSecret interface{} `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The URL of the PayPal instance. (i.e. api.sandbox.paypal.com)
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Paypal'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// PaypalLinkedServiceResponseInput is an input type that accepts PaypalLinkedServiceResponseArgs and PaypalLinkedServiceResponseOutput values.
// You can construct a concrete instance of `PaypalLinkedServiceResponseInput` via:
//
//          PaypalLinkedServiceResponseArgs{...}
type PaypalLinkedServiceResponseInput interface {
	pulumi.Input

	ToPaypalLinkedServiceResponseOutput() PaypalLinkedServiceResponseOutput
	ToPaypalLinkedServiceResponseOutputWithContext(context.Context) PaypalLinkedServiceResponseOutput
}

// Paypal Service linked service.
type PaypalLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The client ID associated with your PayPal application.
	ClientId pulumi.Input `pulumi:"clientId"`
	// The client secret associated with your PayPal application.
	ClientSecret pulumi.Input `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The URL of the PayPal instance. (i.e. api.sandbox.paypal.com)
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Paypal'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (PaypalLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PaypalLinkedServiceResponse)(nil)).Elem()
}

func (i PaypalLinkedServiceResponseArgs) ToPaypalLinkedServiceResponseOutput() PaypalLinkedServiceResponseOutput {
	return i.ToPaypalLinkedServiceResponseOutputWithContext(context.Background())
}

func (i PaypalLinkedServiceResponseArgs) ToPaypalLinkedServiceResponseOutputWithContext(ctx context.Context) PaypalLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PaypalLinkedServiceResponseOutput)
}

// Paypal Service linked service.
type PaypalLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (PaypalLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PaypalLinkedServiceResponse)(nil)).Elem()
}

func (o PaypalLinkedServiceResponseOutput) ToPaypalLinkedServiceResponseOutput() PaypalLinkedServiceResponseOutput {
	return o
}

func (o PaypalLinkedServiceResponseOutput) ToPaypalLinkedServiceResponseOutputWithContext(ctx context.Context) PaypalLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o PaypalLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v PaypalLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The client ID associated with your PayPal application.
func (o PaypalLinkedServiceResponseOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalLinkedServiceResponse) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The client secret associated with your PayPal application.
func (o PaypalLinkedServiceResponseOutput) ClientSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalLinkedServiceResponse) interface{} { return v.ClientSecret }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o PaypalLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v PaypalLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o PaypalLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PaypalLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o PaypalLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The URL of the PayPal instance. (i.e. api.sandbox.paypal.com)
func (o PaypalLinkedServiceResponseOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalLinkedServiceResponse) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o PaypalLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v PaypalLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'Paypal'.
func (o PaypalLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PaypalLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o PaypalLinkedServiceResponseOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalLinkedServiceResponse) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o PaypalLinkedServiceResponseOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalLinkedServiceResponse) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o PaypalLinkedServiceResponseOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalLinkedServiceResponse) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Paypal Service dataset.
type PaypalObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'PaypalObject'.
	Type string `pulumi:"type"`
}

// PaypalObjectDatasetInput is an input type that accepts PaypalObjectDatasetArgs and PaypalObjectDatasetOutput values.
// You can construct a concrete instance of `PaypalObjectDatasetInput` via:
//
//          PaypalObjectDatasetArgs{...}
type PaypalObjectDatasetInput interface {
	pulumi.Input

	ToPaypalObjectDatasetOutput() PaypalObjectDatasetOutput
	ToPaypalObjectDatasetOutputWithContext(context.Context) PaypalObjectDatasetOutput
}

// Paypal Service dataset.
type PaypalObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'PaypalObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PaypalObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PaypalObjectDataset)(nil)).Elem()
}

func (i PaypalObjectDatasetArgs) ToPaypalObjectDatasetOutput() PaypalObjectDatasetOutput {
	return i.ToPaypalObjectDatasetOutputWithContext(context.Background())
}

func (i PaypalObjectDatasetArgs) ToPaypalObjectDatasetOutputWithContext(ctx context.Context) PaypalObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PaypalObjectDatasetOutput)
}

// Paypal Service dataset.
type PaypalObjectDatasetOutput struct{ *pulumi.OutputState }

func (PaypalObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PaypalObjectDataset)(nil)).Elem()
}

func (o PaypalObjectDatasetOutput) ToPaypalObjectDatasetOutput() PaypalObjectDatasetOutput {
	return o
}

func (o PaypalObjectDatasetOutput) ToPaypalObjectDatasetOutputWithContext(ctx context.Context) PaypalObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o PaypalObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v PaypalObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o PaypalObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PaypalObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o PaypalObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v PaypalObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o PaypalObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v PaypalObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o PaypalObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'PaypalObject'.
func (o PaypalObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PaypalObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Paypal Service dataset.
type PaypalObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'PaypalObject'.
	Type string `pulumi:"type"`
}

// PaypalObjectDatasetResponseInput is an input type that accepts PaypalObjectDatasetResponseArgs and PaypalObjectDatasetResponseOutput values.
// You can construct a concrete instance of `PaypalObjectDatasetResponseInput` via:
//
//          PaypalObjectDatasetResponseArgs{...}
type PaypalObjectDatasetResponseInput interface {
	pulumi.Input

	ToPaypalObjectDatasetResponseOutput() PaypalObjectDatasetResponseOutput
	ToPaypalObjectDatasetResponseOutputWithContext(context.Context) PaypalObjectDatasetResponseOutput
}

// Paypal Service dataset.
type PaypalObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'PaypalObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PaypalObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PaypalObjectDatasetResponse)(nil)).Elem()
}

func (i PaypalObjectDatasetResponseArgs) ToPaypalObjectDatasetResponseOutput() PaypalObjectDatasetResponseOutput {
	return i.ToPaypalObjectDatasetResponseOutputWithContext(context.Background())
}

func (i PaypalObjectDatasetResponseArgs) ToPaypalObjectDatasetResponseOutputWithContext(ctx context.Context) PaypalObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PaypalObjectDatasetResponseOutput)
}

// Paypal Service dataset.
type PaypalObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (PaypalObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PaypalObjectDatasetResponse)(nil)).Elem()
}

func (o PaypalObjectDatasetResponseOutput) ToPaypalObjectDatasetResponseOutput() PaypalObjectDatasetResponseOutput {
	return o
}

func (o PaypalObjectDatasetResponseOutput) ToPaypalObjectDatasetResponseOutputWithContext(ctx context.Context) PaypalObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o PaypalObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v PaypalObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o PaypalObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PaypalObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o PaypalObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v PaypalObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o PaypalObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v PaypalObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o PaypalObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'PaypalObject'.
func (o PaypalObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PaypalObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Paypal Service source.
type PaypalSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'PaypalSource'.
	Type string `pulumi:"type"`
}

// PaypalSourceInput is an input type that accepts PaypalSourceArgs and PaypalSourceOutput values.
// You can construct a concrete instance of `PaypalSourceInput` via:
//
//          PaypalSourceArgs{...}
type PaypalSourceInput interface {
	pulumi.Input

	ToPaypalSourceOutput() PaypalSourceOutput
	ToPaypalSourceOutputWithContext(context.Context) PaypalSourceOutput
}

// A copy activity Paypal Service source.
type PaypalSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'PaypalSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PaypalSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PaypalSource)(nil)).Elem()
}

func (i PaypalSourceArgs) ToPaypalSourceOutput() PaypalSourceOutput {
	return i.ToPaypalSourceOutputWithContext(context.Background())
}

func (i PaypalSourceArgs) ToPaypalSourceOutputWithContext(ctx context.Context) PaypalSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PaypalSourceOutput)
}

// A copy activity Paypal Service source.
type PaypalSourceOutput struct{ *pulumi.OutputState }

func (PaypalSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PaypalSource)(nil)).Elem()
}

func (o PaypalSourceOutput) ToPaypalSourceOutput() PaypalSourceOutput {
	return o
}

func (o PaypalSourceOutput) ToPaypalSourceOutputWithContext(ctx context.Context) PaypalSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o PaypalSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o PaypalSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o PaypalSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'PaypalSource'.
func (o PaypalSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PaypalSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Paypal Service source.
type PaypalSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'PaypalSource'.
	Type string `pulumi:"type"`
}

// PaypalSourceResponseInput is an input type that accepts PaypalSourceResponseArgs and PaypalSourceResponseOutput values.
// You can construct a concrete instance of `PaypalSourceResponseInput` via:
//
//          PaypalSourceResponseArgs{...}
type PaypalSourceResponseInput interface {
	pulumi.Input

	ToPaypalSourceResponseOutput() PaypalSourceResponseOutput
	ToPaypalSourceResponseOutputWithContext(context.Context) PaypalSourceResponseOutput
}

// A copy activity Paypal Service source.
type PaypalSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'PaypalSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PaypalSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PaypalSourceResponse)(nil)).Elem()
}

func (i PaypalSourceResponseArgs) ToPaypalSourceResponseOutput() PaypalSourceResponseOutput {
	return i.ToPaypalSourceResponseOutputWithContext(context.Background())
}

func (i PaypalSourceResponseArgs) ToPaypalSourceResponseOutputWithContext(ctx context.Context) PaypalSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PaypalSourceResponseOutput)
}

// A copy activity Paypal Service source.
type PaypalSourceResponseOutput struct{ *pulumi.OutputState }

func (PaypalSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PaypalSourceResponse)(nil)).Elem()
}

func (o PaypalSourceResponseOutput) ToPaypalSourceResponseOutput() PaypalSourceResponseOutput {
	return o
}

func (o PaypalSourceResponseOutput) ToPaypalSourceResponseOutputWithContext(ctx context.Context) PaypalSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o PaypalSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o PaypalSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o PaypalSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v PaypalSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'PaypalSource'.
func (o PaypalSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PaypalSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Phoenix server linked service.
type PhoenixLinkedService struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch interface{} `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert interface{} `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication mechanism used to connect to the Phoenix server.
	AuthenticationType string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl interface{} `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)
	Host interface{} `pulumi:"host"`
	// The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService.
	HttpPath interface{} `pulumi:"httpPath"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The password corresponding to the user name.
	Password interface{} `pulumi:"password"`
	// The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765.
	Port interface{} `pulumi:"port"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath interface{} `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Phoenix'.
	Type string `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore interface{} `pulumi:"useSystemTrustStore"`
	// The user name used to connect to the Phoenix server.
	Username interface{} `pulumi:"username"`
}

// PhoenixLinkedServiceInput is an input type that accepts PhoenixLinkedServiceArgs and PhoenixLinkedServiceOutput values.
// You can construct a concrete instance of `PhoenixLinkedServiceInput` via:
//
//          PhoenixLinkedServiceArgs{...}
type PhoenixLinkedServiceInput interface {
	pulumi.Input

	ToPhoenixLinkedServiceOutput() PhoenixLinkedServiceOutput
	ToPhoenixLinkedServiceOutputWithContext(context.Context) PhoenixLinkedServiceOutput
}

// Phoenix server linked service.
type PhoenixLinkedServiceArgs struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch pulumi.Input `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert pulumi.Input `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication mechanism used to connect to the Phoenix server.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl pulumi.Input `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)
	Host pulumi.Input `pulumi:"host"`
	// The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService.
	HttpPath pulumi.Input `pulumi:"httpPath"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The password corresponding to the user name.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765.
	Port pulumi.Input `pulumi:"port"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath pulumi.Input `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Phoenix'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore pulumi.Input `pulumi:"useSystemTrustStore"`
	// The user name used to connect to the Phoenix server.
	Username pulumi.Input `pulumi:"username"`
}

func (PhoenixLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoenixLinkedService)(nil)).Elem()
}

func (i PhoenixLinkedServiceArgs) ToPhoenixLinkedServiceOutput() PhoenixLinkedServiceOutput {
	return i.ToPhoenixLinkedServiceOutputWithContext(context.Background())
}

func (i PhoenixLinkedServiceArgs) ToPhoenixLinkedServiceOutputWithContext(ctx context.Context) PhoenixLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoenixLinkedServiceOutput)
}

// Phoenix server linked service.
type PhoenixLinkedServiceOutput struct{ *pulumi.OutputState }

func (PhoenixLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoenixLinkedService)(nil)).Elem()
}

func (o PhoenixLinkedServiceOutput) ToPhoenixLinkedServiceOutput() PhoenixLinkedServiceOutput {
	return o
}

func (o PhoenixLinkedServiceOutput) ToPhoenixLinkedServiceOutputWithContext(ctx context.Context) PhoenixLinkedServiceOutput {
	return o
}

// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
func (o PhoenixLinkedServiceOutput) AllowHostNameCNMismatch() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedService) interface{} { return v.AllowHostNameCNMismatch }).(pulumi.AnyOutput)
}

// Specifies whether to allow self-signed certificates from the server. The default value is false.
func (o PhoenixLinkedServiceOutput) AllowSelfSignedServerCert() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedService) interface{} { return v.AllowSelfSignedServerCert }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o PhoenixLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v PhoenixLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication mechanism used to connect to the Phoenix server.
func (o PhoenixLinkedServiceOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v PhoenixLinkedService) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The integration runtime reference.
func (o PhoenixLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v PhoenixLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o PhoenixLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhoenixLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
func (o PhoenixLinkedServiceOutput) EnableSsl() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedService) interface{} { return v.EnableSsl }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o PhoenixLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)
func (o PhoenixLinkedServiceOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedService) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService.
func (o PhoenixLinkedServiceOutput) HttpPath() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedService) interface{} { return v.HttpPath }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o PhoenixLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v PhoenixLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The password corresponding to the user name.
func (o PhoenixLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765.
func (o PhoenixLinkedServiceOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedService) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
func (o PhoenixLinkedServiceOutput) TrustedCertPath() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedService) interface{} { return v.TrustedCertPath }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Phoenix'.
func (o PhoenixLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PhoenixLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
func (o PhoenixLinkedServiceOutput) UseSystemTrustStore() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedService) interface{} { return v.UseSystemTrustStore }).(pulumi.AnyOutput)
}

// The user name used to connect to the Phoenix server.
func (o PhoenixLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Phoenix server linked service.
type PhoenixLinkedServiceResponse struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch interface{} `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert interface{} `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication mechanism used to connect to the Phoenix server.
	AuthenticationType string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl interface{} `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)
	Host interface{} `pulumi:"host"`
	// The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService.
	HttpPath interface{} `pulumi:"httpPath"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The password corresponding to the user name.
	Password interface{} `pulumi:"password"`
	// The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765.
	Port interface{} `pulumi:"port"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath interface{} `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Phoenix'.
	Type string `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore interface{} `pulumi:"useSystemTrustStore"`
	// The user name used to connect to the Phoenix server.
	Username interface{} `pulumi:"username"`
}

// PhoenixLinkedServiceResponseInput is an input type that accepts PhoenixLinkedServiceResponseArgs and PhoenixLinkedServiceResponseOutput values.
// You can construct a concrete instance of `PhoenixLinkedServiceResponseInput` via:
//
//          PhoenixLinkedServiceResponseArgs{...}
type PhoenixLinkedServiceResponseInput interface {
	pulumi.Input

	ToPhoenixLinkedServiceResponseOutput() PhoenixLinkedServiceResponseOutput
	ToPhoenixLinkedServiceResponseOutputWithContext(context.Context) PhoenixLinkedServiceResponseOutput
}

// Phoenix server linked service.
type PhoenixLinkedServiceResponseArgs struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch pulumi.Input `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert pulumi.Input `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication mechanism used to connect to the Phoenix server.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl pulumi.Input `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)
	Host pulumi.Input `pulumi:"host"`
	// The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService.
	HttpPath pulumi.Input `pulumi:"httpPath"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The password corresponding to the user name.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765.
	Port pulumi.Input `pulumi:"port"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath pulumi.Input `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Phoenix'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore pulumi.Input `pulumi:"useSystemTrustStore"`
	// The user name used to connect to the Phoenix server.
	Username pulumi.Input `pulumi:"username"`
}

func (PhoenixLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoenixLinkedServiceResponse)(nil)).Elem()
}

func (i PhoenixLinkedServiceResponseArgs) ToPhoenixLinkedServiceResponseOutput() PhoenixLinkedServiceResponseOutput {
	return i.ToPhoenixLinkedServiceResponseOutputWithContext(context.Background())
}

func (i PhoenixLinkedServiceResponseArgs) ToPhoenixLinkedServiceResponseOutputWithContext(ctx context.Context) PhoenixLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoenixLinkedServiceResponseOutput)
}

// Phoenix server linked service.
type PhoenixLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (PhoenixLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoenixLinkedServiceResponse)(nil)).Elem()
}

func (o PhoenixLinkedServiceResponseOutput) ToPhoenixLinkedServiceResponseOutput() PhoenixLinkedServiceResponseOutput {
	return o
}

func (o PhoenixLinkedServiceResponseOutput) ToPhoenixLinkedServiceResponseOutputWithContext(ctx context.Context) PhoenixLinkedServiceResponseOutput {
	return o
}

// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
func (o PhoenixLinkedServiceResponseOutput) AllowHostNameCNMismatch() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedServiceResponse) interface{} { return v.AllowHostNameCNMismatch }).(pulumi.AnyOutput)
}

// Specifies whether to allow self-signed certificates from the server. The default value is false.
func (o PhoenixLinkedServiceResponseOutput) AllowSelfSignedServerCert() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedServiceResponse) interface{} { return v.AllowSelfSignedServerCert }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o PhoenixLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v PhoenixLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication mechanism used to connect to the Phoenix server.
func (o PhoenixLinkedServiceResponseOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v PhoenixLinkedServiceResponse) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The integration runtime reference.
func (o PhoenixLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v PhoenixLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o PhoenixLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhoenixLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
func (o PhoenixLinkedServiceResponseOutput) EnableSsl() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedServiceResponse) interface{} { return v.EnableSsl }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o PhoenixLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)
func (o PhoenixLinkedServiceResponseOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedServiceResponse) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService.
func (o PhoenixLinkedServiceResponseOutput) HttpPath() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedServiceResponse) interface{} { return v.HttpPath }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o PhoenixLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v PhoenixLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The password corresponding to the user name.
func (o PhoenixLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765.
func (o PhoenixLinkedServiceResponseOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedServiceResponse) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
func (o PhoenixLinkedServiceResponseOutput) TrustedCertPath() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedServiceResponse) interface{} { return v.TrustedCertPath }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Phoenix'.
func (o PhoenixLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PhoenixLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
func (o PhoenixLinkedServiceResponseOutput) UseSystemTrustStore() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedServiceResponse) interface{} { return v.UseSystemTrustStore }).(pulumi.AnyOutput)
}

// The user name used to connect to the Phoenix server.
func (o PhoenixLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Phoenix server dataset.
type PhoenixObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'PhoenixObject'.
	Type string `pulumi:"type"`
}

// PhoenixObjectDatasetInput is an input type that accepts PhoenixObjectDatasetArgs and PhoenixObjectDatasetOutput values.
// You can construct a concrete instance of `PhoenixObjectDatasetInput` via:
//
//          PhoenixObjectDatasetArgs{...}
type PhoenixObjectDatasetInput interface {
	pulumi.Input

	ToPhoenixObjectDatasetOutput() PhoenixObjectDatasetOutput
	ToPhoenixObjectDatasetOutputWithContext(context.Context) PhoenixObjectDatasetOutput
}

// Phoenix server dataset.
type PhoenixObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'PhoenixObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PhoenixObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoenixObjectDataset)(nil)).Elem()
}

func (i PhoenixObjectDatasetArgs) ToPhoenixObjectDatasetOutput() PhoenixObjectDatasetOutput {
	return i.ToPhoenixObjectDatasetOutputWithContext(context.Background())
}

func (i PhoenixObjectDatasetArgs) ToPhoenixObjectDatasetOutputWithContext(ctx context.Context) PhoenixObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoenixObjectDatasetOutput)
}

// Phoenix server dataset.
type PhoenixObjectDatasetOutput struct{ *pulumi.OutputState }

func (PhoenixObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoenixObjectDataset)(nil)).Elem()
}

func (o PhoenixObjectDatasetOutput) ToPhoenixObjectDatasetOutput() PhoenixObjectDatasetOutput {
	return o
}

func (o PhoenixObjectDatasetOutput) ToPhoenixObjectDatasetOutputWithContext(ctx context.Context) PhoenixObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o PhoenixObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v PhoenixObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o PhoenixObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhoenixObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o PhoenixObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v PhoenixObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o PhoenixObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v PhoenixObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o PhoenixObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'PhoenixObject'.
func (o PhoenixObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PhoenixObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Phoenix server dataset.
type PhoenixObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'PhoenixObject'.
	Type string `pulumi:"type"`
}

// PhoenixObjectDatasetResponseInput is an input type that accepts PhoenixObjectDatasetResponseArgs and PhoenixObjectDatasetResponseOutput values.
// You can construct a concrete instance of `PhoenixObjectDatasetResponseInput` via:
//
//          PhoenixObjectDatasetResponseArgs{...}
type PhoenixObjectDatasetResponseInput interface {
	pulumi.Input

	ToPhoenixObjectDatasetResponseOutput() PhoenixObjectDatasetResponseOutput
	ToPhoenixObjectDatasetResponseOutputWithContext(context.Context) PhoenixObjectDatasetResponseOutput
}

// Phoenix server dataset.
type PhoenixObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'PhoenixObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PhoenixObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoenixObjectDatasetResponse)(nil)).Elem()
}

func (i PhoenixObjectDatasetResponseArgs) ToPhoenixObjectDatasetResponseOutput() PhoenixObjectDatasetResponseOutput {
	return i.ToPhoenixObjectDatasetResponseOutputWithContext(context.Background())
}

func (i PhoenixObjectDatasetResponseArgs) ToPhoenixObjectDatasetResponseOutputWithContext(ctx context.Context) PhoenixObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoenixObjectDatasetResponseOutput)
}

// Phoenix server dataset.
type PhoenixObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (PhoenixObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoenixObjectDatasetResponse)(nil)).Elem()
}

func (o PhoenixObjectDatasetResponseOutput) ToPhoenixObjectDatasetResponseOutput() PhoenixObjectDatasetResponseOutput {
	return o
}

func (o PhoenixObjectDatasetResponseOutput) ToPhoenixObjectDatasetResponseOutputWithContext(ctx context.Context) PhoenixObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o PhoenixObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v PhoenixObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o PhoenixObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhoenixObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o PhoenixObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v PhoenixObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o PhoenixObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v PhoenixObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o PhoenixObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'PhoenixObject'.
func (o PhoenixObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PhoenixObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Phoenix server source.
type PhoenixSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'PhoenixSource'.
	Type string `pulumi:"type"`
}

// PhoenixSourceInput is an input type that accepts PhoenixSourceArgs and PhoenixSourceOutput values.
// You can construct a concrete instance of `PhoenixSourceInput` via:
//
//          PhoenixSourceArgs{...}
type PhoenixSourceInput interface {
	pulumi.Input

	ToPhoenixSourceOutput() PhoenixSourceOutput
	ToPhoenixSourceOutputWithContext(context.Context) PhoenixSourceOutput
}

// A copy activity Phoenix server source.
type PhoenixSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'PhoenixSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PhoenixSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoenixSource)(nil)).Elem()
}

func (i PhoenixSourceArgs) ToPhoenixSourceOutput() PhoenixSourceOutput {
	return i.ToPhoenixSourceOutputWithContext(context.Background())
}

func (i PhoenixSourceArgs) ToPhoenixSourceOutputWithContext(ctx context.Context) PhoenixSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoenixSourceOutput)
}

// A copy activity Phoenix server source.
type PhoenixSourceOutput struct{ *pulumi.OutputState }

func (PhoenixSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoenixSource)(nil)).Elem()
}

func (o PhoenixSourceOutput) ToPhoenixSourceOutput() PhoenixSourceOutput {
	return o
}

func (o PhoenixSourceOutput) ToPhoenixSourceOutputWithContext(ctx context.Context) PhoenixSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o PhoenixSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o PhoenixSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o PhoenixSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'PhoenixSource'.
func (o PhoenixSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PhoenixSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Phoenix server source.
type PhoenixSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'PhoenixSource'.
	Type string `pulumi:"type"`
}

// PhoenixSourceResponseInput is an input type that accepts PhoenixSourceResponseArgs and PhoenixSourceResponseOutput values.
// You can construct a concrete instance of `PhoenixSourceResponseInput` via:
//
//          PhoenixSourceResponseArgs{...}
type PhoenixSourceResponseInput interface {
	pulumi.Input

	ToPhoenixSourceResponseOutput() PhoenixSourceResponseOutput
	ToPhoenixSourceResponseOutputWithContext(context.Context) PhoenixSourceResponseOutput
}

// A copy activity Phoenix server source.
type PhoenixSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'PhoenixSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PhoenixSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoenixSourceResponse)(nil)).Elem()
}

func (i PhoenixSourceResponseArgs) ToPhoenixSourceResponseOutput() PhoenixSourceResponseOutput {
	return i.ToPhoenixSourceResponseOutputWithContext(context.Background())
}

func (i PhoenixSourceResponseArgs) ToPhoenixSourceResponseOutputWithContext(ctx context.Context) PhoenixSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoenixSourceResponseOutput)
}

// A copy activity Phoenix server source.
type PhoenixSourceResponseOutput struct{ *pulumi.OutputState }

func (PhoenixSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoenixSourceResponse)(nil)).Elem()
}

func (o PhoenixSourceResponseOutput) ToPhoenixSourceResponseOutput() PhoenixSourceResponseOutput {
	return o
}

func (o PhoenixSourceResponseOutput) ToPhoenixSourceResponseOutputWithContext(ctx context.Context) PhoenixSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o PhoenixSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o PhoenixSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o PhoenixSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v PhoenixSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'PhoenixSource'.
func (o PhoenixSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PhoenixSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Pipeline reference type.
type PipelineReference struct {
	// Reference name.
	Name *string `pulumi:"name"`
	// Reference pipeline name.
	ReferenceName string `pulumi:"referenceName"`
	// Pipeline reference type.
	Type string `pulumi:"type"`
}

// PipelineReferenceInput is an input type that accepts PipelineReferenceArgs and PipelineReferenceOutput values.
// You can construct a concrete instance of `PipelineReferenceInput` via:
//
//          PipelineReferenceArgs{...}
type PipelineReferenceInput interface {
	pulumi.Input

	ToPipelineReferenceOutput() PipelineReferenceOutput
	ToPipelineReferenceOutputWithContext(context.Context) PipelineReferenceOutput
}

// Pipeline reference type.
type PipelineReferenceArgs struct {
	// Reference name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference pipeline name.
	ReferenceName pulumi.StringInput `pulumi:"referenceName"`
	// Pipeline reference type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PipelineReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineReference)(nil)).Elem()
}

func (i PipelineReferenceArgs) ToPipelineReferenceOutput() PipelineReferenceOutput {
	return i.ToPipelineReferenceOutputWithContext(context.Background())
}

func (i PipelineReferenceArgs) ToPipelineReferenceOutputWithContext(ctx context.Context) PipelineReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineReferenceOutput)
}

func (i PipelineReferenceArgs) ToPipelineReferencePtrOutput() PipelineReferencePtrOutput {
	return i.ToPipelineReferencePtrOutputWithContext(context.Background())
}

func (i PipelineReferenceArgs) ToPipelineReferencePtrOutputWithContext(ctx context.Context) PipelineReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineReferenceOutput).ToPipelineReferencePtrOutputWithContext(ctx)
}

// PipelineReferencePtrInput is an input type that accepts PipelineReferenceArgs, PipelineReferencePtr and PipelineReferencePtrOutput values.
// You can construct a concrete instance of `PipelineReferencePtrInput` via:
//
//          PipelineReferenceArgs{...}
//
//  or:
//
//          nil
type PipelineReferencePtrInput interface {
	pulumi.Input

	ToPipelineReferencePtrOutput() PipelineReferencePtrOutput
	ToPipelineReferencePtrOutputWithContext(context.Context) PipelineReferencePtrOutput
}

type pipelineReferencePtrType PipelineReferenceArgs

func PipelineReferencePtr(v *PipelineReferenceArgs) PipelineReferencePtrInput {
	return (*pipelineReferencePtrType)(v)
}

func (*pipelineReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineReference)(nil)).Elem()
}

func (i *pipelineReferencePtrType) ToPipelineReferencePtrOutput() PipelineReferencePtrOutput {
	return i.ToPipelineReferencePtrOutputWithContext(context.Background())
}

func (i *pipelineReferencePtrType) ToPipelineReferencePtrOutputWithContext(ctx context.Context) PipelineReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineReferencePtrOutput)
}

// Pipeline reference type.
type PipelineReferenceOutput struct{ *pulumi.OutputState }

func (PipelineReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineReference)(nil)).Elem()
}

func (o PipelineReferenceOutput) ToPipelineReferenceOutput() PipelineReferenceOutput {
	return o
}

func (o PipelineReferenceOutput) ToPipelineReferenceOutputWithContext(ctx context.Context) PipelineReferenceOutput {
	return o
}

func (o PipelineReferenceOutput) ToPipelineReferencePtrOutput() PipelineReferencePtrOutput {
	return o.ToPipelineReferencePtrOutputWithContext(context.Background())
}

func (o PipelineReferenceOutput) ToPipelineReferencePtrOutputWithContext(ctx context.Context) PipelineReferencePtrOutput {
	return o.ApplyT(func(v PipelineReference) *PipelineReference {
		return &v
	}).(PipelineReferencePtrOutput)
}

// Reference name.
func (o PipelineReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference pipeline name.
func (o PipelineReferenceOutput) ReferenceName() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineReference) string { return v.ReferenceName }).(pulumi.StringOutput)
}

// Pipeline reference type.
func (o PipelineReferenceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineReference) string { return v.Type }).(pulumi.StringOutput)
}

type PipelineReferencePtrOutput struct{ *pulumi.OutputState }

func (PipelineReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineReference)(nil)).Elem()
}

func (o PipelineReferencePtrOutput) ToPipelineReferencePtrOutput() PipelineReferencePtrOutput {
	return o
}

func (o PipelineReferencePtrOutput) ToPipelineReferencePtrOutputWithContext(ctx context.Context) PipelineReferencePtrOutput {
	return o
}

func (o PipelineReferencePtrOutput) Elem() PipelineReferenceOutput {
	return o.ApplyT(func(v *PipelineReference) PipelineReference { return *v }).(PipelineReferenceOutput)
}

// Reference name.
func (o PipelineReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference pipeline name.
func (o PipelineReferencePtrOutput) ReferenceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineReference) *string {
		if v == nil {
			return nil
		}
		return &v.ReferenceName
	}).(pulumi.StringPtrOutput)
}

// Pipeline reference type.
func (o PipelineReferencePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineReference) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Pipeline reference type.
type PipelineReferenceResponse struct {
	// Reference name.
	Name *string `pulumi:"name"`
	// Reference pipeline name.
	ReferenceName string `pulumi:"referenceName"`
	// Pipeline reference type.
	Type string `pulumi:"type"`
}

// PipelineReferenceResponseInput is an input type that accepts PipelineReferenceResponseArgs and PipelineReferenceResponseOutput values.
// You can construct a concrete instance of `PipelineReferenceResponseInput` via:
//
//          PipelineReferenceResponseArgs{...}
type PipelineReferenceResponseInput interface {
	pulumi.Input

	ToPipelineReferenceResponseOutput() PipelineReferenceResponseOutput
	ToPipelineReferenceResponseOutputWithContext(context.Context) PipelineReferenceResponseOutput
}

// Pipeline reference type.
type PipelineReferenceResponseArgs struct {
	// Reference name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference pipeline name.
	ReferenceName pulumi.StringInput `pulumi:"referenceName"`
	// Pipeline reference type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PipelineReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineReferenceResponse)(nil)).Elem()
}

func (i PipelineReferenceResponseArgs) ToPipelineReferenceResponseOutput() PipelineReferenceResponseOutput {
	return i.ToPipelineReferenceResponseOutputWithContext(context.Background())
}

func (i PipelineReferenceResponseArgs) ToPipelineReferenceResponseOutputWithContext(ctx context.Context) PipelineReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineReferenceResponseOutput)
}

func (i PipelineReferenceResponseArgs) ToPipelineReferenceResponsePtrOutput() PipelineReferenceResponsePtrOutput {
	return i.ToPipelineReferenceResponsePtrOutputWithContext(context.Background())
}

func (i PipelineReferenceResponseArgs) ToPipelineReferenceResponsePtrOutputWithContext(ctx context.Context) PipelineReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineReferenceResponseOutput).ToPipelineReferenceResponsePtrOutputWithContext(ctx)
}

// PipelineReferenceResponsePtrInput is an input type that accepts PipelineReferenceResponseArgs, PipelineReferenceResponsePtr and PipelineReferenceResponsePtrOutput values.
// You can construct a concrete instance of `PipelineReferenceResponsePtrInput` via:
//
//          PipelineReferenceResponseArgs{...}
//
//  or:
//
//          nil
type PipelineReferenceResponsePtrInput interface {
	pulumi.Input

	ToPipelineReferenceResponsePtrOutput() PipelineReferenceResponsePtrOutput
	ToPipelineReferenceResponsePtrOutputWithContext(context.Context) PipelineReferenceResponsePtrOutput
}

type pipelineReferenceResponsePtrType PipelineReferenceResponseArgs

func PipelineReferenceResponsePtr(v *PipelineReferenceResponseArgs) PipelineReferenceResponsePtrInput {
	return (*pipelineReferenceResponsePtrType)(v)
}

func (*pipelineReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineReferenceResponse)(nil)).Elem()
}

func (i *pipelineReferenceResponsePtrType) ToPipelineReferenceResponsePtrOutput() PipelineReferenceResponsePtrOutput {
	return i.ToPipelineReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *pipelineReferenceResponsePtrType) ToPipelineReferenceResponsePtrOutputWithContext(ctx context.Context) PipelineReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineReferenceResponsePtrOutput)
}

// Pipeline reference type.
type PipelineReferenceResponseOutput struct{ *pulumi.OutputState }

func (PipelineReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineReferenceResponse)(nil)).Elem()
}

func (o PipelineReferenceResponseOutput) ToPipelineReferenceResponseOutput() PipelineReferenceResponseOutput {
	return o
}

func (o PipelineReferenceResponseOutput) ToPipelineReferenceResponseOutputWithContext(ctx context.Context) PipelineReferenceResponseOutput {
	return o
}

func (o PipelineReferenceResponseOutput) ToPipelineReferenceResponsePtrOutput() PipelineReferenceResponsePtrOutput {
	return o.ToPipelineReferenceResponsePtrOutputWithContext(context.Background())
}

func (o PipelineReferenceResponseOutput) ToPipelineReferenceResponsePtrOutputWithContext(ctx context.Context) PipelineReferenceResponsePtrOutput {
	return o.ApplyT(func(v PipelineReferenceResponse) *PipelineReferenceResponse {
		return &v
	}).(PipelineReferenceResponsePtrOutput)
}

// Reference name.
func (o PipelineReferenceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineReferenceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference pipeline name.
func (o PipelineReferenceResponseOutput) ReferenceName() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineReferenceResponse) string { return v.ReferenceName }).(pulumi.StringOutput)
}

// Pipeline reference type.
func (o PipelineReferenceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineReferenceResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PipelineReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (PipelineReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineReferenceResponse)(nil)).Elem()
}

func (o PipelineReferenceResponsePtrOutput) ToPipelineReferenceResponsePtrOutput() PipelineReferenceResponsePtrOutput {
	return o
}

func (o PipelineReferenceResponsePtrOutput) ToPipelineReferenceResponsePtrOutputWithContext(ctx context.Context) PipelineReferenceResponsePtrOutput {
	return o
}

func (o PipelineReferenceResponsePtrOutput) Elem() PipelineReferenceResponseOutput {
	return o.ApplyT(func(v *PipelineReferenceResponse) PipelineReferenceResponse { return *v }).(PipelineReferenceResponseOutput)
}

// Reference name.
func (o PipelineReferenceResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference pipeline name.
func (o PipelineReferenceResponsePtrOutput) ReferenceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReferenceName
	}).(pulumi.StringPtrOutput)
}

// Pipeline reference type.
func (o PipelineReferenceResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// PolyBase settings.
type PolybaseSettings struct {
	// Determines the number of rows to attempt to retrieve before the PolyBase recalculates the percentage of rejected rows. Type: integer (or Expression with resultType integer), minimum: 0.
	RejectSampleValue interface{} `pulumi:"rejectSampleValue"`
	// Reject type.
	RejectType *string `pulumi:"rejectType"`
	// Specifies the value or the percentage of rows that can be rejected before the query fails. Type: number (or Expression with resultType number), minimum: 0.
	RejectValue interface{} `pulumi:"rejectValue"`
	// Specifies how to handle missing values in delimited text files when PolyBase retrieves data from the text file. Type: boolean (or Expression with resultType boolean).
	UseTypeDefault interface{} `pulumi:"useTypeDefault"`
}

// PolybaseSettingsInput is an input type that accepts PolybaseSettingsArgs and PolybaseSettingsOutput values.
// You can construct a concrete instance of `PolybaseSettingsInput` via:
//
//          PolybaseSettingsArgs{...}
type PolybaseSettingsInput interface {
	pulumi.Input

	ToPolybaseSettingsOutput() PolybaseSettingsOutput
	ToPolybaseSettingsOutputWithContext(context.Context) PolybaseSettingsOutput
}

// PolyBase settings.
type PolybaseSettingsArgs struct {
	// Determines the number of rows to attempt to retrieve before the PolyBase recalculates the percentage of rejected rows. Type: integer (or Expression with resultType integer), minimum: 0.
	RejectSampleValue pulumi.Input `pulumi:"rejectSampleValue"`
	// Reject type.
	RejectType pulumi.StringPtrInput `pulumi:"rejectType"`
	// Specifies the value or the percentage of rows that can be rejected before the query fails. Type: number (or Expression with resultType number), minimum: 0.
	RejectValue pulumi.Input `pulumi:"rejectValue"`
	// Specifies how to handle missing values in delimited text files when PolyBase retrieves data from the text file. Type: boolean (or Expression with resultType boolean).
	UseTypeDefault pulumi.Input `pulumi:"useTypeDefault"`
}

func (PolybaseSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolybaseSettings)(nil)).Elem()
}

func (i PolybaseSettingsArgs) ToPolybaseSettingsOutput() PolybaseSettingsOutput {
	return i.ToPolybaseSettingsOutputWithContext(context.Background())
}

func (i PolybaseSettingsArgs) ToPolybaseSettingsOutputWithContext(ctx context.Context) PolybaseSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolybaseSettingsOutput)
}

func (i PolybaseSettingsArgs) ToPolybaseSettingsPtrOutput() PolybaseSettingsPtrOutput {
	return i.ToPolybaseSettingsPtrOutputWithContext(context.Background())
}

func (i PolybaseSettingsArgs) ToPolybaseSettingsPtrOutputWithContext(ctx context.Context) PolybaseSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolybaseSettingsOutput).ToPolybaseSettingsPtrOutputWithContext(ctx)
}

// PolybaseSettingsPtrInput is an input type that accepts PolybaseSettingsArgs, PolybaseSettingsPtr and PolybaseSettingsPtrOutput values.
// You can construct a concrete instance of `PolybaseSettingsPtrInput` via:
//
//          PolybaseSettingsArgs{...}
//
//  or:
//
//          nil
type PolybaseSettingsPtrInput interface {
	pulumi.Input

	ToPolybaseSettingsPtrOutput() PolybaseSettingsPtrOutput
	ToPolybaseSettingsPtrOutputWithContext(context.Context) PolybaseSettingsPtrOutput
}

type polybaseSettingsPtrType PolybaseSettingsArgs

func PolybaseSettingsPtr(v *PolybaseSettingsArgs) PolybaseSettingsPtrInput {
	return (*polybaseSettingsPtrType)(v)
}

func (*polybaseSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolybaseSettings)(nil)).Elem()
}

func (i *polybaseSettingsPtrType) ToPolybaseSettingsPtrOutput() PolybaseSettingsPtrOutput {
	return i.ToPolybaseSettingsPtrOutputWithContext(context.Background())
}

func (i *polybaseSettingsPtrType) ToPolybaseSettingsPtrOutputWithContext(ctx context.Context) PolybaseSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolybaseSettingsPtrOutput)
}

// PolyBase settings.
type PolybaseSettingsOutput struct{ *pulumi.OutputState }

func (PolybaseSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolybaseSettings)(nil)).Elem()
}

func (o PolybaseSettingsOutput) ToPolybaseSettingsOutput() PolybaseSettingsOutput {
	return o
}

func (o PolybaseSettingsOutput) ToPolybaseSettingsOutputWithContext(ctx context.Context) PolybaseSettingsOutput {
	return o
}

func (o PolybaseSettingsOutput) ToPolybaseSettingsPtrOutput() PolybaseSettingsPtrOutput {
	return o.ToPolybaseSettingsPtrOutputWithContext(context.Background())
}

func (o PolybaseSettingsOutput) ToPolybaseSettingsPtrOutputWithContext(ctx context.Context) PolybaseSettingsPtrOutput {
	return o.ApplyT(func(v PolybaseSettings) *PolybaseSettings {
		return &v
	}).(PolybaseSettingsPtrOutput)
}

// Determines the number of rows to attempt to retrieve before the PolyBase recalculates the percentage of rejected rows. Type: integer (or Expression with resultType integer), minimum: 0.
func (o PolybaseSettingsOutput) RejectSampleValue() pulumi.AnyOutput {
	return o.ApplyT(func(v PolybaseSettings) interface{} { return v.RejectSampleValue }).(pulumi.AnyOutput)
}

// Reject type.
func (o PolybaseSettingsOutput) RejectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolybaseSettings) *string { return v.RejectType }).(pulumi.StringPtrOutput)
}

// Specifies the value or the percentage of rows that can be rejected before the query fails. Type: number (or Expression with resultType number), minimum: 0.
func (o PolybaseSettingsOutput) RejectValue() pulumi.AnyOutput {
	return o.ApplyT(func(v PolybaseSettings) interface{} { return v.RejectValue }).(pulumi.AnyOutput)
}

// Specifies how to handle missing values in delimited text files when PolyBase retrieves data from the text file. Type: boolean (or Expression with resultType boolean).
func (o PolybaseSettingsOutput) UseTypeDefault() pulumi.AnyOutput {
	return o.ApplyT(func(v PolybaseSettings) interface{} { return v.UseTypeDefault }).(pulumi.AnyOutput)
}

type PolybaseSettingsPtrOutput struct{ *pulumi.OutputState }

func (PolybaseSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolybaseSettings)(nil)).Elem()
}

func (o PolybaseSettingsPtrOutput) ToPolybaseSettingsPtrOutput() PolybaseSettingsPtrOutput {
	return o
}

func (o PolybaseSettingsPtrOutput) ToPolybaseSettingsPtrOutputWithContext(ctx context.Context) PolybaseSettingsPtrOutput {
	return o
}

func (o PolybaseSettingsPtrOutput) Elem() PolybaseSettingsOutput {
	return o.ApplyT(func(v *PolybaseSettings) PolybaseSettings { return *v }).(PolybaseSettingsOutput)
}

// Determines the number of rows to attempt to retrieve before the PolyBase recalculates the percentage of rejected rows. Type: integer (or Expression with resultType integer), minimum: 0.
func (o PolybaseSettingsPtrOutput) RejectSampleValue() pulumi.AnyOutput {
	return o.ApplyT(func(v *PolybaseSettings) interface{} {
		if v == nil {
			return nil
		}
		return v.RejectSampleValue
	}).(pulumi.AnyOutput)
}

// Reject type.
func (o PolybaseSettingsPtrOutput) RejectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolybaseSettings) *string {
		if v == nil {
			return nil
		}
		return v.RejectType
	}).(pulumi.StringPtrOutput)
}

// Specifies the value or the percentage of rows that can be rejected before the query fails. Type: number (or Expression with resultType number), minimum: 0.
func (o PolybaseSettingsPtrOutput) RejectValue() pulumi.AnyOutput {
	return o.ApplyT(func(v *PolybaseSettings) interface{} {
		if v == nil {
			return nil
		}
		return v.RejectValue
	}).(pulumi.AnyOutput)
}

// Specifies how to handle missing values in delimited text files when PolyBase retrieves data from the text file. Type: boolean (or Expression with resultType boolean).
func (o PolybaseSettingsPtrOutput) UseTypeDefault() pulumi.AnyOutput {
	return o.ApplyT(func(v *PolybaseSettings) interface{} {
		if v == nil {
			return nil
		}
		return v.UseTypeDefault
	}).(pulumi.AnyOutput)
}

// PolyBase settings.
type PolybaseSettingsResponse struct {
	// Determines the number of rows to attempt to retrieve before the PolyBase recalculates the percentage of rejected rows. Type: integer (or Expression with resultType integer), minimum: 0.
	RejectSampleValue interface{} `pulumi:"rejectSampleValue"`
	// Reject type.
	RejectType *string `pulumi:"rejectType"`
	// Specifies the value or the percentage of rows that can be rejected before the query fails. Type: number (or Expression with resultType number), minimum: 0.
	RejectValue interface{} `pulumi:"rejectValue"`
	// Specifies how to handle missing values in delimited text files when PolyBase retrieves data from the text file. Type: boolean (or Expression with resultType boolean).
	UseTypeDefault interface{} `pulumi:"useTypeDefault"`
}

// PolybaseSettingsResponseInput is an input type that accepts PolybaseSettingsResponseArgs and PolybaseSettingsResponseOutput values.
// You can construct a concrete instance of `PolybaseSettingsResponseInput` via:
//
//          PolybaseSettingsResponseArgs{...}
type PolybaseSettingsResponseInput interface {
	pulumi.Input

	ToPolybaseSettingsResponseOutput() PolybaseSettingsResponseOutput
	ToPolybaseSettingsResponseOutputWithContext(context.Context) PolybaseSettingsResponseOutput
}

// PolyBase settings.
type PolybaseSettingsResponseArgs struct {
	// Determines the number of rows to attempt to retrieve before the PolyBase recalculates the percentage of rejected rows. Type: integer (or Expression with resultType integer), minimum: 0.
	RejectSampleValue pulumi.Input `pulumi:"rejectSampleValue"`
	// Reject type.
	RejectType pulumi.StringPtrInput `pulumi:"rejectType"`
	// Specifies the value or the percentage of rows that can be rejected before the query fails. Type: number (or Expression with resultType number), minimum: 0.
	RejectValue pulumi.Input `pulumi:"rejectValue"`
	// Specifies how to handle missing values in delimited text files when PolyBase retrieves data from the text file. Type: boolean (or Expression with resultType boolean).
	UseTypeDefault pulumi.Input `pulumi:"useTypeDefault"`
}

func (PolybaseSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolybaseSettingsResponse)(nil)).Elem()
}

func (i PolybaseSettingsResponseArgs) ToPolybaseSettingsResponseOutput() PolybaseSettingsResponseOutput {
	return i.ToPolybaseSettingsResponseOutputWithContext(context.Background())
}

func (i PolybaseSettingsResponseArgs) ToPolybaseSettingsResponseOutputWithContext(ctx context.Context) PolybaseSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolybaseSettingsResponseOutput)
}

func (i PolybaseSettingsResponseArgs) ToPolybaseSettingsResponsePtrOutput() PolybaseSettingsResponsePtrOutput {
	return i.ToPolybaseSettingsResponsePtrOutputWithContext(context.Background())
}

func (i PolybaseSettingsResponseArgs) ToPolybaseSettingsResponsePtrOutputWithContext(ctx context.Context) PolybaseSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolybaseSettingsResponseOutput).ToPolybaseSettingsResponsePtrOutputWithContext(ctx)
}

// PolybaseSettingsResponsePtrInput is an input type that accepts PolybaseSettingsResponseArgs, PolybaseSettingsResponsePtr and PolybaseSettingsResponsePtrOutput values.
// You can construct a concrete instance of `PolybaseSettingsResponsePtrInput` via:
//
//          PolybaseSettingsResponseArgs{...}
//
//  or:
//
//          nil
type PolybaseSettingsResponsePtrInput interface {
	pulumi.Input

	ToPolybaseSettingsResponsePtrOutput() PolybaseSettingsResponsePtrOutput
	ToPolybaseSettingsResponsePtrOutputWithContext(context.Context) PolybaseSettingsResponsePtrOutput
}

type polybaseSettingsResponsePtrType PolybaseSettingsResponseArgs

func PolybaseSettingsResponsePtr(v *PolybaseSettingsResponseArgs) PolybaseSettingsResponsePtrInput {
	return (*polybaseSettingsResponsePtrType)(v)
}

func (*polybaseSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolybaseSettingsResponse)(nil)).Elem()
}

func (i *polybaseSettingsResponsePtrType) ToPolybaseSettingsResponsePtrOutput() PolybaseSettingsResponsePtrOutput {
	return i.ToPolybaseSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *polybaseSettingsResponsePtrType) ToPolybaseSettingsResponsePtrOutputWithContext(ctx context.Context) PolybaseSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolybaseSettingsResponsePtrOutput)
}

// PolyBase settings.
type PolybaseSettingsResponseOutput struct{ *pulumi.OutputState }

func (PolybaseSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolybaseSettingsResponse)(nil)).Elem()
}

func (o PolybaseSettingsResponseOutput) ToPolybaseSettingsResponseOutput() PolybaseSettingsResponseOutput {
	return o
}

func (o PolybaseSettingsResponseOutput) ToPolybaseSettingsResponseOutputWithContext(ctx context.Context) PolybaseSettingsResponseOutput {
	return o
}

func (o PolybaseSettingsResponseOutput) ToPolybaseSettingsResponsePtrOutput() PolybaseSettingsResponsePtrOutput {
	return o.ToPolybaseSettingsResponsePtrOutputWithContext(context.Background())
}

func (o PolybaseSettingsResponseOutput) ToPolybaseSettingsResponsePtrOutputWithContext(ctx context.Context) PolybaseSettingsResponsePtrOutput {
	return o.ApplyT(func(v PolybaseSettingsResponse) *PolybaseSettingsResponse {
		return &v
	}).(PolybaseSettingsResponsePtrOutput)
}

// Determines the number of rows to attempt to retrieve before the PolyBase recalculates the percentage of rejected rows. Type: integer (or Expression with resultType integer), minimum: 0.
func (o PolybaseSettingsResponseOutput) RejectSampleValue() pulumi.AnyOutput {
	return o.ApplyT(func(v PolybaseSettingsResponse) interface{} { return v.RejectSampleValue }).(pulumi.AnyOutput)
}

// Reject type.
func (o PolybaseSettingsResponseOutput) RejectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolybaseSettingsResponse) *string { return v.RejectType }).(pulumi.StringPtrOutput)
}

// Specifies the value or the percentage of rows that can be rejected before the query fails. Type: number (or Expression with resultType number), minimum: 0.
func (o PolybaseSettingsResponseOutput) RejectValue() pulumi.AnyOutput {
	return o.ApplyT(func(v PolybaseSettingsResponse) interface{} { return v.RejectValue }).(pulumi.AnyOutput)
}

// Specifies how to handle missing values in delimited text files when PolyBase retrieves data from the text file. Type: boolean (or Expression with resultType boolean).
func (o PolybaseSettingsResponseOutput) UseTypeDefault() pulumi.AnyOutput {
	return o.ApplyT(func(v PolybaseSettingsResponse) interface{} { return v.UseTypeDefault }).(pulumi.AnyOutput)
}

type PolybaseSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PolybaseSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolybaseSettingsResponse)(nil)).Elem()
}

func (o PolybaseSettingsResponsePtrOutput) ToPolybaseSettingsResponsePtrOutput() PolybaseSettingsResponsePtrOutput {
	return o
}

func (o PolybaseSettingsResponsePtrOutput) ToPolybaseSettingsResponsePtrOutputWithContext(ctx context.Context) PolybaseSettingsResponsePtrOutput {
	return o
}

func (o PolybaseSettingsResponsePtrOutput) Elem() PolybaseSettingsResponseOutput {
	return o.ApplyT(func(v *PolybaseSettingsResponse) PolybaseSettingsResponse { return *v }).(PolybaseSettingsResponseOutput)
}

// Determines the number of rows to attempt to retrieve before the PolyBase recalculates the percentage of rejected rows. Type: integer (or Expression with resultType integer), minimum: 0.
func (o PolybaseSettingsResponsePtrOutput) RejectSampleValue() pulumi.AnyOutput {
	return o.ApplyT(func(v *PolybaseSettingsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.RejectSampleValue
	}).(pulumi.AnyOutput)
}

// Reject type.
func (o PolybaseSettingsResponsePtrOutput) RejectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolybaseSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RejectType
	}).(pulumi.StringPtrOutput)
}

// Specifies the value or the percentage of rows that can be rejected before the query fails. Type: number (or Expression with resultType number), minimum: 0.
func (o PolybaseSettingsResponsePtrOutput) RejectValue() pulumi.AnyOutput {
	return o.ApplyT(func(v *PolybaseSettingsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.RejectValue
	}).(pulumi.AnyOutput)
}

// Specifies how to handle missing values in delimited text files when PolyBase retrieves data from the text file. Type: boolean (or Expression with resultType boolean).
func (o PolybaseSettingsResponsePtrOutput) UseTypeDefault() pulumi.AnyOutput {
	return o.ApplyT(func(v *PolybaseSettingsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.UseTypeDefault
	}).(pulumi.AnyOutput)
}

// Linked service for PostgreSQL data source.
type PostgreSqlLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// The connection string.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'PostgreSql'.
	Type string `pulumi:"type"`
}

// PostgreSqlLinkedServiceInput is an input type that accepts PostgreSqlLinkedServiceArgs and PostgreSqlLinkedServiceOutput values.
// You can construct a concrete instance of `PostgreSqlLinkedServiceInput` via:
//
//          PostgreSqlLinkedServiceArgs{...}
type PostgreSqlLinkedServiceInput interface {
	pulumi.Input

	ToPostgreSqlLinkedServiceOutput() PostgreSqlLinkedServiceOutput
	ToPostgreSqlLinkedServiceOutputWithContext(context.Context) PostgreSqlLinkedServiceOutput
}

// Linked service for PostgreSQL data source.
type PostgreSqlLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// The connection string.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'PostgreSql'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PostgreSqlLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgreSqlLinkedService)(nil)).Elem()
}

func (i PostgreSqlLinkedServiceArgs) ToPostgreSqlLinkedServiceOutput() PostgreSqlLinkedServiceOutput {
	return i.ToPostgreSqlLinkedServiceOutputWithContext(context.Background())
}

func (i PostgreSqlLinkedServiceArgs) ToPostgreSqlLinkedServiceOutputWithContext(ctx context.Context) PostgreSqlLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgreSqlLinkedServiceOutput)
}

// Linked service for PostgreSQL data source.
type PostgreSqlLinkedServiceOutput struct{ *pulumi.OutputState }

func (PostgreSqlLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgreSqlLinkedService)(nil)).Elem()
}

func (o PostgreSqlLinkedServiceOutput) ToPostgreSqlLinkedServiceOutput() PostgreSqlLinkedServiceOutput {
	return o
}

func (o PostgreSqlLinkedServiceOutput) ToPostgreSqlLinkedServiceOutputWithContext(ctx context.Context) PostgreSqlLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o PostgreSqlLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v PostgreSqlLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o PostgreSqlLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v PostgreSqlLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// The connection string.
func (o PostgreSqlLinkedServiceOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v PostgreSqlLinkedService) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o PostgreSqlLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgreSqlLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o PostgreSqlLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v PostgreSqlLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o PostgreSqlLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v PostgreSqlLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'PostgreSql'.
func (o PostgreSqlLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PostgreSqlLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Linked service for PostgreSQL data source.
type PostgreSqlLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// The connection string.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'PostgreSql'.
	Type string `pulumi:"type"`
}

// PostgreSqlLinkedServiceResponseInput is an input type that accepts PostgreSqlLinkedServiceResponseArgs and PostgreSqlLinkedServiceResponseOutput values.
// You can construct a concrete instance of `PostgreSqlLinkedServiceResponseInput` via:
//
//          PostgreSqlLinkedServiceResponseArgs{...}
type PostgreSqlLinkedServiceResponseInput interface {
	pulumi.Input

	ToPostgreSqlLinkedServiceResponseOutput() PostgreSqlLinkedServiceResponseOutput
	ToPostgreSqlLinkedServiceResponseOutputWithContext(context.Context) PostgreSqlLinkedServiceResponseOutput
}

// Linked service for PostgreSQL data source.
type PostgreSqlLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// The connection string.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'PostgreSql'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PostgreSqlLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgreSqlLinkedServiceResponse)(nil)).Elem()
}

func (i PostgreSqlLinkedServiceResponseArgs) ToPostgreSqlLinkedServiceResponseOutput() PostgreSqlLinkedServiceResponseOutput {
	return i.ToPostgreSqlLinkedServiceResponseOutputWithContext(context.Background())
}

func (i PostgreSqlLinkedServiceResponseArgs) ToPostgreSqlLinkedServiceResponseOutputWithContext(ctx context.Context) PostgreSqlLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgreSqlLinkedServiceResponseOutput)
}

// Linked service for PostgreSQL data source.
type PostgreSqlLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (PostgreSqlLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgreSqlLinkedServiceResponse)(nil)).Elem()
}

func (o PostgreSqlLinkedServiceResponseOutput) ToPostgreSqlLinkedServiceResponseOutput() PostgreSqlLinkedServiceResponseOutput {
	return o
}

func (o PostgreSqlLinkedServiceResponseOutput) ToPostgreSqlLinkedServiceResponseOutputWithContext(ctx context.Context) PostgreSqlLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o PostgreSqlLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v PostgreSqlLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o PostgreSqlLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v PostgreSqlLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// The connection string.
func (o PostgreSqlLinkedServiceResponseOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v PostgreSqlLinkedServiceResponse) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o PostgreSqlLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgreSqlLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o PostgreSqlLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v PostgreSqlLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o PostgreSqlLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v PostgreSqlLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'PostgreSql'.
func (o PostgreSqlLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PostgreSqlLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Presto server linked service.
type PrestoLinkedService struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch interface{} `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert interface{} `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication mechanism used to connect to the Presto server.
	AuthenticationType string `pulumi:"authenticationType"`
	// The catalog context for all request against the server.
	Catalog interface{} `pulumi:"catalog"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl interface{} `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The IP address or host name of the Presto server. (i.e. 192.168.222.160)
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The password corresponding to the user name.
	Password interface{} `pulumi:"password"`
	// The TCP port that the Presto server uses to listen for client connections. The default value is 8080.
	Port interface{} `pulumi:"port"`
	// The version of the Presto server. (i.e. 0.148-t)
	ServerVersion interface{} `pulumi:"serverVersion"`
	// The local time zone used by the connection. Valid values for this option are specified in the IANA Time Zone Database. The default value is the system time zone.
	TimeZoneID interface{} `pulumi:"timeZoneID"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath interface{} `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Presto'.
	Type string `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore interface{} `pulumi:"useSystemTrustStore"`
	// The user name used to connect to the Presto server.
	Username interface{} `pulumi:"username"`
}

// PrestoLinkedServiceInput is an input type that accepts PrestoLinkedServiceArgs and PrestoLinkedServiceOutput values.
// You can construct a concrete instance of `PrestoLinkedServiceInput` via:
//
//          PrestoLinkedServiceArgs{...}
type PrestoLinkedServiceInput interface {
	pulumi.Input

	ToPrestoLinkedServiceOutput() PrestoLinkedServiceOutput
	ToPrestoLinkedServiceOutputWithContext(context.Context) PrestoLinkedServiceOutput
}

// Presto server linked service.
type PrestoLinkedServiceArgs struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch pulumi.Input `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert pulumi.Input `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication mechanism used to connect to the Presto server.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The catalog context for all request against the server.
	Catalog pulumi.Input `pulumi:"catalog"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl pulumi.Input `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The IP address or host name of the Presto server. (i.e. 192.168.222.160)
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The password corresponding to the user name.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port that the Presto server uses to listen for client connections. The default value is 8080.
	Port pulumi.Input `pulumi:"port"`
	// The version of the Presto server. (i.e. 0.148-t)
	ServerVersion pulumi.Input `pulumi:"serverVersion"`
	// The local time zone used by the connection. Valid values for this option are specified in the IANA Time Zone Database. The default value is the system time zone.
	TimeZoneID pulumi.Input `pulumi:"timeZoneID"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath pulumi.Input `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Presto'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore pulumi.Input `pulumi:"useSystemTrustStore"`
	// The user name used to connect to the Presto server.
	Username pulumi.Input `pulumi:"username"`
}

func (PrestoLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrestoLinkedService)(nil)).Elem()
}

func (i PrestoLinkedServiceArgs) ToPrestoLinkedServiceOutput() PrestoLinkedServiceOutput {
	return i.ToPrestoLinkedServiceOutputWithContext(context.Background())
}

func (i PrestoLinkedServiceArgs) ToPrestoLinkedServiceOutputWithContext(ctx context.Context) PrestoLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrestoLinkedServiceOutput)
}

// Presto server linked service.
type PrestoLinkedServiceOutput struct{ *pulumi.OutputState }

func (PrestoLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrestoLinkedService)(nil)).Elem()
}

func (o PrestoLinkedServiceOutput) ToPrestoLinkedServiceOutput() PrestoLinkedServiceOutput {
	return o
}

func (o PrestoLinkedServiceOutput) ToPrestoLinkedServiceOutputWithContext(ctx context.Context) PrestoLinkedServiceOutput {
	return o
}

// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
func (o PrestoLinkedServiceOutput) AllowHostNameCNMismatch() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedService) interface{} { return v.AllowHostNameCNMismatch }).(pulumi.AnyOutput)
}

// Specifies whether to allow self-signed certificates from the server. The default value is false.
func (o PrestoLinkedServiceOutput) AllowSelfSignedServerCert() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedService) interface{} { return v.AllowSelfSignedServerCert }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o PrestoLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v PrestoLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication mechanism used to connect to the Presto server.
func (o PrestoLinkedServiceOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v PrestoLinkedService) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The catalog context for all request against the server.
func (o PrestoLinkedServiceOutput) Catalog() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedService) interface{} { return v.Catalog }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o PrestoLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v PrestoLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o PrestoLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrestoLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
func (o PrestoLinkedServiceOutput) EnableSsl() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedService) interface{} { return v.EnableSsl }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o PrestoLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The IP address or host name of the Presto server. (i.e. 192.168.222.160)
func (o PrestoLinkedServiceOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedService) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o PrestoLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v PrestoLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The password corresponding to the user name.
func (o PrestoLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port that the Presto server uses to listen for client connections. The default value is 8080.
func (o PrestoLinkedServiceOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedService) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The version of the Presto server. (i.e. 0.148-t)
func (o PrestoLinkedServiceOutput) ServerVersion() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedService) interface{} { return v.ServerVersion }).(pulumi.AnyOutput)
}

// The local time zone used by the connection. Valid values for this option are specified in the IANA Time Zone Database. The default value is the system time zone.
func (o PrestoLinkedServiceOutput) TimeZoneID() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedService) interface{} { return v.TimeZoneID }).(pulumi.AnyOutput)
}

// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
func (o PrestoLinkedServiceOutput) TrustedCertPath() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedService) interface{} { return v.TrustedCertPath }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Presto'.
func (o PrestoLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrestoLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
func (o PrestoLinkedServiceOutput) UseSystemTrustStore() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedService) interface{} { return v.UseSystemTrustStore }).(pulumi.AnyOutput)
}

// The user name used to connect to the Presto server.
func (o PrestoLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Presto server linked service.
type PrestoLinkedServiceResponse struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch interface{} `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert interface{} `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication mechanism used to connect to the Presto server.
	AuthenticationType string `pulumi:"authenticationType"`
	// The catalog context for all request against the server.
	Catalog interface{} `pulumi:"catalog"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl interface{} `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The IP address or host name of the Presto server. (i.e. 192.168.222.160)
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The password corresponding to the user name.
	Password interface{} `pulumi:"password"`
	// The TCP port that the Presto server uses to listen for client connections. The default value is 8080.
	Port interface{} `pulumi:"port"`
	// The version of the Presto server. (i.e. 0.148-t)
	ServerVersion interface{} `pulumi:"serverVersion"`
	// The local time zone used by the connection. Valid values for this option are specified in the IANA Time Zone Database. The default value is the system time zone.
	TimeZoneID interface{} `pulumi:"timeZoneID"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath interface{} `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Presto'.
	Type string `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore interface{} `pulumi:"useSystemTrustStore"`
	// The user name used to connect to the Presto server.
	Username interface{} `pulumi:"username"`
}

// PrestoLinkedServiceResponseInput is an input type that accepts PrestoLinkedServiceResponseArgs and PrestoLinkedServiceResponseOutput values.
// You can construct a concrete instance of `PrestoLinkedServiceResponseInput` via:
//
//          PrestoLinkedServiceResponseArgs{...}
type PrestoLinkedServiceResponseInput interface {
	pulumi.Input

	ToPrestoLinkedServiceResponseOutput() PrestoLinkedServiceResponseOutput
	ToPrestoLinkedServiceResponseOutputWithContext(context.Context) PrestoLinkedServiceResponseOutput
}

// Presto server linked service.
type PrestoLinkedServiceResponseArgs struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch pulumi.Input `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert pulumi.Input `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication mechanism used to connect to the Presto server.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The catalog context for all request against the server.
	Catalog pulumi.Input `pulumi:"catalog"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl pulumi.Input `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The IP address or host name of the Presto server. (i.e. 192.168.222.160)
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The password corresponding to the user name.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port that the Presto server uses to listen for client connections. The default value is 8080.
	Port pulumi.Input `pulumi:"port"`
	// The version of the Presto server. (i.e. 0.148-t)
	ServerVersion pulumi.Input `pulumi:"serverVersion"`
	// The local time zone used by the connection. Valid values for this option are specified in the IANA Time Zone Database. The default value is the system time zone.
	TimeZoneID pulumi.Input `pulumi:"timeZoneID"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath pulumi.Input `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Presto'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore pulumi.Input `pulumi:"useSystemTrustStore"`
	// The user name used to connect to the Presto server.
	Username pulumi.Input `pulumi:"username"`
}

func (PrestoLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrestoLinkedServiceResponse)(nil)).Elem()
}

func (i PrestoLinkedServiceResponseArgs) ToPrestoLinkedServiceResponseOutput() PrestoLinkedServiceResponseOutput {
	return i.ToPrestoLinkedServiceResponseOutputWithContext(context.Background())
}

func (i PrestoLinkedServiceResponseArgs) ToPrestoLinkedServiceResponseOutputWithContext(ctx context.Context) PrestoLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrestoLinkedServiceResponseOutput)
}

// Presto server linked service.
type PrestoLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (PrestoLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrestoLinkedServiceResponse)(nil)).Elem()
}

func (o PrestoLinkedServiceResponseOutput) ToPrestoLinkedServiceResponseOutput() PrestoLinkedServiceResponseOutput {
	return o
}

func (o PrestoLinkedServiceResponseOutput) ToPrestoLinkedServiceResponseOutputWithContext(ctx context.Context) PrestoLinkedServiceResponseOutput {
	return o
}

// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
func (o PrestoLinkedServiceResponseOutput) AllowHostNameCNMismatch() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) interface{} { return v.AllowHostNameCNMismatch }).(pulumi.AnyOutput)
}

// Specifies whether to allow self-signed certificates from the server. The default value is false.
func (o PrestoLinkedServiceResponseOutput) AllowSelfSignedServerCert() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) interface{} { return v.AllowSelfSignedServerCert }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o PrestoLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication mechanism used to connect to the Presto server.
func (o PrestoLinkedServiceResponseOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The catalog context for all request against the server.
func (o PrestoLinkedServiceResponseOutput) Catalog() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) interface{} { return v.Catalog }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o PrestoLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o PrestoLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
func (o PrestoLinkedServiceResponseOutput) EnableSsl() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) interface{} { return v.EnableSsl }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o PrestoLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The IP address or host name of the Presto server. (i.e. 192.168.222.160)
func (o PrestoLinkedServiceResponseOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o PrestoLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The password corresponding to the user name.
func (o PrestoLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port that the Presto server uses to listen for client connections. The default value is 8080.
func (o PrestoLinkedServiceResponseOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The version of the Presto server. (i.e. 0.148-t)
func (o PrestoLinkedServiceResponseOutput) ServerVersion() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) interface{} { return v.ServerVersion }).(pulumi.AnyOutput)
}

// The local time zone used by the connection. Valid values for this option are specified in the IANA Time Zone Database. The default value is the system time zone.
func (o PrestoLinkedServiceResponseOutput) TimeZoneID() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) interface{} { return v.TimeZoneID }).(pulumi.AnyOutput)
}

// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
func (o PrestoLinkedServiceResponseOutput) TrustedCertPath() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) interface{} { return v.TrustedCertPath }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Presto'.
func (o PrestoLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
func (o PrestoLinkedServiceResponseOutput) UseSystemTrustStore() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) interface{} { return v.UseSystemTrustStore }).(pulumi.AnyOutput)
}

// The user name used to connect to the Presto server.
func (o PrestoLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Presto server dataset.
type PrestoObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'PrestoObject'.
	Type string `pulumi:"type"`
}

// PrestoObjectDatasetInput is an input type that accepts PrestoObjectDatasetArgs and PrestoObjectDatasetOutput values.
// You can construct a concrete instance of `PrestoObjectDatasetInput` via:
//
//          PrestoObjectDatasetArgs{...}
type PrestoObjectDatasetInput interface {
	pulumi.Input

	ToPrestoObjectDatasetOutput() PrestoObjectDatasetOutput
	ToPrestoObjectDatasetOutputWithContext(context.Context) PrestoObjectDatasetOutput
}

// Presto server dataset.
type PrestoObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'PrestoObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PrestoObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrestoObjectDataset)(nil)).Elem()
}

func (i PrestoObjectDatasetArgs) ToPrestoObjectDatasetOutput() PrestoObjectDatasetOutput {
	return i.ToPrestoObjectDatasetOutputWithContext(context.Background())
}

func (i PrestoObjectDatasetArgs) ToPrestoObjectDatasetOutputWithContext(ctx context.Context) PrestoObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrestoObjectDatasetOutput)
}

// Presto server dataset.
type PrestoObjectDatasetOutput struct{ *pulumi.OutputState }

func (PrestoObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrestoObjectDataset)(nil)).Elem()
}

func (o PrestoObjectDatasetOutput) ToPrestoObjectDatasetOutput() PrestoObjectDatasetOutput {
	return o
}

func (o PrestoObjectDatasetOutput) ToPrestoObjectDatasetOutputWithContext(ctx context.Context) PrestoObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o PrestoObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v PrestoObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o PrestoObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrestoObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o PrestoObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v PrestoObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o PrestoObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v PrestoObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o PrestoObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'PrestoObject'.
func (o PrestoObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrestoObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Presto server dataset.
type PrestoObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'PrestoObject'.
	Type string `pulumi:"type"`
}

// PrestoObjectDatasetResponseInput is an input type that accepts PrestoObjectDatasetResponseArgs and PrestoObjectDatasetResponseOutput values.
// You can construct a concrete instance of `PrestoObjectDatasetResponseInput` via:
//
//          PrestoObjectDatasetResponseArgs{...}
type PrestoObjectDatasetResponseInput interface {
	pulumi.Input

	ToPrestoObjectDatasetResponseOutput() PrestoObjectDatasetResponseOutput
	ToPrestoObjectDatasetResponseOutputWithContext(context.Context) PrestoObjectDatasetResponseOutput
}

// Presto server dataset.
type PrestoObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'PrestoObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PrestoObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrestoObjectDatasetResponse)(nil)).Elem()
}

func (i PrestoObjectDatasetResponseArgs) ToPrestoObjectDatasetResponseOutput() PrestoObjectDatasetResponseOutput {
	return i.ToPrestoObjectDatasetResponseOutputWithContext(context.Background())
}

func (i PrestoObjectDatasetResponseArgs) ToPrestoObjectDatasetResponseOutputWithContext(ctx context.Context) PrestoObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrestoObjectDatasetResponseOutput)
}

// Presto server dataset.
type PrestoObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (PrestoObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrestoObjectDatasetResponse)(nil)).Elem()
}

func (o PrestoObjectDatasetResponseOutput) ToPrestoObjectDatasetResponseOutput() PrestoObjectDatasetResponseOutput {
	return o
}

func (o PrestoObjectDatasetResponseOutput) ToPrestoObjectDatasetResponseOutputWithContext(ctx context.Context) PrestoObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o PrestoObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v PrestoObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o PrestoObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrestoObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o PrestoObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v PrestoObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o PrestoObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v PrestoObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o PrestoObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'PrestoObject'.
func (o PrestoObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrestoObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Presto server source.
type PrestoSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'PrestoSource'.
	Type string `pulumi:"type"`
}

// PrestoSourceInput is an input type that accepts PrestoSourceArgs and PrestoSourceOutput values.
// You can construct a concrete instance of `PrestoSourceInput` via:
//
//          PrestoSourceArgs{...}
type PrestoSourceInput interface {
	pulumi.Input

	ToPrestoSourceOutput() PrestoSourceOutput
	ToPrestoSourceOutputWithContext(context.Context) PrestoSourceOutput
}

// A copy activity Presto server source.
type PrestoSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'PrestoSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PrestoSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrestoSource)(nil)).Elem()
}

func (i PrestoSourceArgs) ToPrestoSourceOutput() PrestoSourceOutput {
	return i.ToPrestoSourceOutputWithContext(context.Background())
}

func (i PrestoSourceArgs) ToPrestoSourceOutputWithContext(ctx context.Context) PrestoSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrestoSourceOutput)
}

// A copy activity Presto server source.
type PrestoSourceOutput struct{ *pulumi.OutputState }

func (PrestoSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrestoSource)(nil)).Elem()
}

func (o PrestoSourceOutput) ToPrestoSourceOutput() PrestoSourceOutput {
	return o
}

func (o PrestoSourceOutput) ToPrestoSourceOutputWithContext(ctx context.Context) PrestoSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o PrestoSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o PrestoSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o PrestoSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'PrestoSource'.
func (o PrestoSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrestoSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Presto server source.
type PrestoSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'PrestoSource'.
	Type string `pulumi:"type"`
}

// PrestoSourceResponseInput is an input type that accepts PrestoSourceResponseArgs and PrestoSourceResponseOutput values.
// You can construct a concrete instance of `PrestoSourceResponseInput` via:
//
//          PrestoSourceResponseArgs{...}
type PrestoSourceResponseInput interface {
	pulumi.Input

	ToPrestoSourceResponseOutput() PrestoSourceResponseOutput
	ToPrestoSourceResponseOutputWithContext(context.Context) PrestoSourceResponseOutput
}

// A copy activity Presto server source.
type PrestoSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'PrestoSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PrestoSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrestoSourceResponse)(nil)).Elem()
}

func (i PrestoSourceResponseArgs) ToPrestoSourceResponseOutput() PrestoSourceResponseOutput {
	return i.ToPrestoSourceResponseOutputWithContext(context.Background())
}

func (i PrestoSourceResponseArgs) ToPrestoSourceResponseOutputWithContext(ctx context.Context) PrestoSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrestoSourceResponseOutput)
}

// A copy activity Presto server source.
type PrestoSourceResponseOutput struct{ *pulumi.OutputState }

func (PrestoSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrestoSourceResponse)(nil)).Elem()
}

func (o PrestoSourceResponseOutput) ToPrestoSourceResponseOutput() PrestoSourceResponseOutput {
	return o
}

func (o PrestoSourceResponseOutput) ToPrestoSourceResponseOutputWithContext(ctx context.Context) PrestoSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o PrestoSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o PrestoSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o PrestoSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v PrestoSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'PrestoSource'.
func (o PrestoSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrestoSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// QuickBooks server linked service.
type QuickBooksLinkedService struct {
	// The access token for OAuth 1.0 authentication.
	AccessToken interface{} `pulumi:"accessToken"`
	// The access token secret for OAuth 1.0 authentication.
	AccessTokenSecret interface{} `pulumi:"accessTokenSecret"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The company ID of the QuickBooks company to authorize.
	CompanyId interface{} `pulumi:"companyId"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// The consumer key for OAuth 1.0 authentication.
	ConsumerKey interface{} `pulumi:"consumerKey"`
	// The consumer secret for OAuth 1.0 authentication.
	ConsumerSecret interface{} `pulumi:"consumerSecret"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)
	Endpoint interface{} `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'QuickBooks'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
}

// QuickBooksLinkedServiceInput is an input type that accepts QuickBooksLinkedServiceArgs and QuickBooksLinkedServiceOutput values.
// You can construct a concrete instance of `QuickBooksLinkedServiceInput` via:
//
//          QuickBooksLinkedServiceArgs{...}
type QuickBooksLinkedServiceInput interface {
	pulumi.Input

	ToQuickBooksLinkedServiceOutput() QuickBooksLinkedServiceOutput
	ToQuickBooksLinkedServiceOutputWithContext(context.Context) QuickBooksLinkedServiceOutput
}

// QuickBooks server linked service.
type QuickBooksLinkedServiceArgs struct {
	// The access token for OAuth 1.0 authentication.
	AccessToken pulumi.Input `pulumi:"accessToken"`
	// The access token secret for OAuth 1.0 authentication.
	AccessTokenSecret pulumi.Input `pulumi:"accessTokenSecret"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The company ID of the QuickBooks company to authorize.
	CompanyId pulumi.Input `pulumi:"companyId"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// The consumer key for OAuth 1.0 authentication.
	ConsumerKey pulumi.Input `pulumi:"consumerKey"`
	// The consumer secret for OAuth 1.0 authentication.
	ConsumerSecret pulumi.Input `pulumi:"consumerSecret"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)
	Endpoint pulumi.Input `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'QuickBooks'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
}

func (QuickBooksLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickBooksLinkedService)(nil)).Elem()
}

func (i QuickBooksLinkedServiceArgs) ToQuickBooksLinkedServiceOutput() QuickBooksLinkedServiceOutput {
	return i.ToQuickBooksLinkedServiceOutputWithContext(context.Background())
}

func (i QuickBooksLinkedServiceArgs) ToQuickBooksLinkedServiceOutputWithContext(ctx context.Context) QuickBooksLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickBooksLinkedServiceOutput)
}

// QuickBooks server linked service.
type QuickBooksLinkedServiceOutput struct{ *pulumi.OutputState }

func (QuickBooksLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickBooksLinkedService)(nil)).Elem()
}

func (o QuickBooksLinkedServiceOutput) ToQuickBooksLinkedServiceOutput() QuickBooksLinkedServiceOutput {
	return o
}

func (o QuickBooksLinkedServiceOutput) ToQuickBooksLinkedServiceOutputWithContext(ctx context.Context) QuickBooksLinkedServiceOutput {
	return o
}

// The access token for OAuth 1.0 authentication.
func (o QuickBooksLinkedServiceOutput) AccessToken() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksLinkedService) interface{} { return v.AccessToken }).(pulumi.AnyOutput)
}

// The access token secret for OAuth 1.0 authentication.
func (o QuickBooksLinkedServiceOutput) AccessTokenSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksLinkedService) interface{} { return v.AccessTokenSecret }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o QuickBooksLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v QuickBooksLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The company ID of the QuickBooks company to authorize.
func (o QuickBooksLinkedServiceOutput) CompanyId() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksLinkedService) interface{} { return v.CompanyId }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o QuickBooksLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v QuickBooksLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// The consumer key for OAuth 1.0 authentication.
func (o QuickBooksLinkedServiceOutput) ConsumerKey() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksLinkedService) interface{} { return v.ConsumerKey }).(pulumi.AnyOutput)
}

// The consumer secret for OAuth 1.0 authentication.
func (o QuickBooksLinkedServiceOutput) ConsumerSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksLinkedService) interface{} { return v.ConsumerSecret }).(pulumi.AnyOutput)
}

// Linked service description.
func (o QuickBooksLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QuickBooksLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o QuickBooksLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)
func (o QuickBooksLinkedServiceOutput) Endpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksLinkedService) interface{} { return v.Endpoint }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o QuickBooksLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v QuickBooksLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'QuickBooks'.
func (o QuickBooksLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v QuickBooksLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o QuickBooksLinkedServiceOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksLinkedService) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// QuickBooks server linked service.
type QuickBooksLinkedServiceResponse struct {
	// The access token for OAuth 1.0 authentication.
	AccessToken interface{} `pulumi:"accessToken"`
	// The access token secret for OAuth 1.0 authentication.
	AccessTokenSecret interface{} `pulumi:"accessTokenSecret"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The company ID of the QuickBooks company to authorize.
	CompanyId interface{} `pulumi:"companyId"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// The consumer key for OAuth 1.0 authentication.
	ConsumerKey interface{} `pulumi:"consumerKey"`
	// The consumer secret for OAuth 1.0 authentication.
	ConsumerSecret interface{} `pulumi:"consumerSecret"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)
	Endpoint interface{} `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'QuickBooks'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
}

// QuickBooksLinkedServiceResponseInput is an input type that accepts QuickBooksLinkedServiceResponseArgs and QuickBooksLinkedServiceResponseOutput values.
// You can construct a concrete instance of `QuickBooksLinkedServiceResponseInput` via:
//
//          QuickBooksLinkedServiceResponseArgs{...}
type QuickBooksLinkedServiceResponseInput interface {
	pulumi.Input

	ToQuickBooksLinkedServiceResponseOutput() QuickBooksLinkedServiceResponseOutput
	ToQuickBooksLinkedServiceResponseOutputWithContext(context.Context) QuickBooksLinkedServiceResponseOutput
}

// QuickBooks server linked service.
type QuickBooksLinkedServiceResponseArgs struct {
	// The access token for OAuth 1.0 authentication.
	AccessToken pulumi.Input `pulumi:"accessToken"`
	// The access token secret for OAuth 1.0 authentication.
	AccessTokenSecret pulumi.Input `pulumi:"accessTokenSecret"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The company ID of the QuickBooks company to authorize.
	CompanyId pulumi.Input `pulumi:"companyId"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// The consumer key for OAuth 1.0 authentication.
	ConsumerKey pulumi.Input `pulumi:"consumerKey"`
	// The consumer secret for OAuth 1.0 authentication.
	ConsumerSecret pulumi.Input `pulumi:"consumerSecret"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)
	Endpoint pulumi.Input `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'QuickBooks'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
}

func (QuickBooksLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickBooksLinkedServiceResponse)(nil)).Elem()
}

func (i QuickBooksLinkedServiceResponseArgs) ToQuickBooksLinkedServiceResponseOutput() QuickBooksLinkedServiceResponseOutput {
	return i.ToQuickBooksLinkedServiceResponseOutputWithContext(context.Background())
}

func (i QuickBooksLinkedServiceResponseArgs) ToQuickBooksLinkedServiceResponseOutputWithContext(ctx context.Context) QuickBooksLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickBooksLinkedServiceResponseOutput)
}

// QuickBooks server linked service.
type QuickBooksLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (QuickBooksLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickBooksLinkedServiceResponse)(nil)).Elem()
}

func (o QuickBooksLinkedServiceResponseOutput) ToQuickBooksLinkedServiceResponseOutput() QuickBooksLinkedServiceResponseOutput {
	return o
}

func (o QuickBooksLinkedServiceResponseOutput) ToQuickBooksLinkedServiceResponseOutputWithContext(ctx context.Context) QuickBooksLinkedServiceResponseOutput {
	return o
}

// The access token for OAuth 1.0 authentication.
func (o QuickBooksLinkedServiceResponseOutput) AccessToken() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksLinkedServiceResponse) interface{} { return v.AccessToken }).(pulumi.AnyOutput)
}

// The access token secret for OAuth 1.0 authentication.
func (o QuickBooksLinkedServiceResponseOutput) AccessTokenSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksLinkedServiceResponse) interface{} { return v.AccessTokenSecret }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o QuickBooksLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v QuickBooksLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The company ID of the QuickBooks company to authorize.
func (o QuickBooksLinkedServiceResponseOutput) CompanyId() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksLinkedServiceResponse) interface{} { return v.CompanyId }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o QuickBooksLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v QuickBooksLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// The consumer key for OAuth 1.0 authentication.
func (o QuickBooksLinkedServiceResponseOutput) ConsumerKey() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksLinkedServiceResponse) interface{} { return v.ConsumerKey }).(pulumi.AnyOutput)
}

// The consumer secret for OAuth 1.0 authentication.
func (o QuickBooksLinkedServiceResponseOutput) ConsumerSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksLinkedServiceResponse) interface{} { return v.ConsumerSecret }).(pulumi.AnyOutput)
}

// Linked service description.
func (o QuickBooksLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QuickBooksLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o QuickBooksLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)
func (o QuickBooksLinkedServiceResponseOutput) Endpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksLinkedServiceResponse) interface{} { return v.Endpoint }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o QuickBooksLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v QuickBooksLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'QuickBooks'.
func (o QuickBooksLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v QuickBooksLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o QuickBooksLinkedServiceResponseOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksLinkedServiceResponse) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// QuickBooks server dataset.
type QuickBooksObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'QuickBooksObject'.
	Type string `pulumi:"type"`
}

// QuickBooksObjectDatasetInput is an input type that accepts QuickBooksObjectDatasetArgs and QuickBooksObjectDatasetOutput values.
// You can construct a concrete instance of `QuickBooksObjectDatasetInput` via:
//
//          QuickBooksObjectDatasetArgs{...}
type QuickBooksObjectDatasetInput interface {
	pulumi.Input

	ToQuickBooksObjectDatasetOutput() QuickBooksObjectDatasetOutput
	ToQuickBooksObjectDatasetOutputWithContext(context.Context) QuickBooksObjectDatasetOutput
}

// QuickBooks server dataset.
type QuickBooksObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'QuickBooksObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (QuickBooksObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickBooksObjectDataset)(nil)).Elem()
}

func (i QuickBooksObjectDatasetArgs) ToQuickBooksObjectDatasetOutput() QuickBooksObjectDatasetOutput {
	return i.ToQuickBooksObjectDatasetOutputWithContext(context.Background())
}

func (i QuickBooksObjectDatasetArgs) ToQuickBooksObjectDatasetOutputWithContext(ctx context.Context) QuickBooksObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickBooksObjectDatasetOutput)
}

// QuickBooks server dataset.
type QuickBooksObjectDatasetOutput struct{ *pulumi.OutputState }

func (QuickBooksObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickBooksObjectDataset)(nil)).Elem()
}

func (o QuickBooksObjectDatasetOutput) ToQuickBooksObjectDatasetOutput() QuickBooksObjectDatasetOutput {
	return o
}

func (o QuickBooksObjectDatasetOutput) ToQuickBooksObjectDatasetOutputWithContext(ctx context.Context) QuickBooksObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o QuickBooksObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v QuickBooksObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o QuickBooksObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QuickBooksObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o QuickBooksObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v QuickBooksObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o QuickBooksObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v QuickBooksObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o QuickBooksObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'QuickBooksObject'.
func (o QuickBooksObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v QuickBooksObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// QuickBooks server dataset.
type QuickBooksObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'QuickBooksObject'.
	Type string `pulumi:"type"`
}

// QuickBooksObjectDatasetResponseInput is an input type that accepts QuickBooksObjectDatasetResponseArgs and QuickBooksObjectDatasetResponseOutput values.
// You can construct a concrete instance of `QuickBooksObjectDatasetResponseInput` via:
//
//          QuickBooksObjectDatasetResponseArgs{...}
type QuickBooksObjectDatasetResponseInput interface {
	pulumi.Input

	ToQuickBooksObjectDatasetResponseOutput() QuickBooksObjectDatasetResponseOutput
	ToQuickBooksObjectDatasetResponseOutputWithContext(context.Context) QuickBooksObjectDatasetResponseOutput
}

// QuickBooks server dataset.
type QuickBooksObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'QuickBooksObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (QuickBooksObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickBooksObjectDatasetResponse)(nil)).Elem()
}

func (i QuickBooksObjectDatasetResponseArgs) ToQuickBooksObjectDatasetResponseOutput() QuickBooksObjectDatasetResponseOutput {
	return i.ToQuickBooksObjectDatasetResponseOutputWithContext(context.Background())
}

func (i QuickBooksObjectDatasetResponseArgs) ToQuickBooksObjectDatasetResponseOutputWithContext(ctx context.Context) QuickBooksObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickBooksObjectDatasetResponseOutput)
}

// QuickBooks server dataset.
type QuickBooksObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (QuickBooksObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickBooksObjectDatasetResponse)(nil)).Elem()
}

func (o QuickBooksObjectDatasetResponseOutput) ToQuickBooksObjectDatasetResponseOutput() QuickBooksObjectDatasetResponseOutput {
	return o
}

func (o QuickBooksObjectDatasetResponseOutput) ToQuickBooksObjectDatasetResponseOutputWithContext(ctx context.Context) QuickBooksObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o QuickBooksObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v QuickBooksObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o QuickBooksObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QuickBooksObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o QuickBooksObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v QuickBooksObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o QuickBooksObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v QuickBooksObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o QuickBooksObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'QuickBooksObject'.
func (o QuickBooksObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v QuickBooksObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity QuickBooks server source.
type QuickBooksSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'QuickBooksSource'.
	Type string `pulumi:"type"`
}

// QuickBooksSourceInput is an input type that accepts QuickBooksSourceArgs and QuickBooksSourceOutput values.
// You can construct a concrete instance of `QuickBooksSourceInput` via:
//
//          QuickBooksSourceArgs{...}
type QuickBooksSourceInput interface {
	pulumi.Input

	ToQuickBooksSourceOutput() QuickBooksSourceOutput
	ToQuickBooksSourceOutputWithContext(context.Context) QuickBooksSourceOutput
}

// A copy activity QuickBooks server source.
type QuickBooksSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'QuickBooksSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (QuickBooksSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickBooksSource)(nil)).Elem()
}

func (i QuickBooksSourceArgs) ToQuickBooksSourceOutput() QuickBooksSourceOutput {
	return i.ToQuickBooksSourceOutputWithContext(context.Background())
}

func (i QuickBooksSourceArgs) ToQuickBooksSourceOutputWithContext(ctx context.Context) QuickBooksSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickBooksSourceOutput)
}

// A copy activity QuickBooks server source.
type QuickBooksSourceOutput struct{ *pulumi.OutputState }

func (QuickBooksSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickBooksSource)(nil)).Elem()
}

func (o QuickBooksSourceOutput) ToQuickBooksSourceOutput() QuickBooksSourceOutput {
	return o
}

func (o QuickBooksSourceOutput) ToQuickBooksSourceOutputWithContext(ctx context.Context) QuickBooksSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o QuickBooksSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o QuickBooksSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o QuickBooksSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'QuickBooksSource'.
func (o QuickBooksSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v QuickBooksSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity QuickBooks server source.
type QuickBooksSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'QuickBooksSource'.
	Type string `pulumi:"type"`
}

// QuickBooksSourceResponseInput is an input type that accepts QuickBooksSourceResponseArgs and QuickBooksSourceResponseOutput values.
// You can construct a concrete instance of `QuickBooksSourceResponseInput` via:
//
//          QuickBooksSourceResponseArgs{...}
type QuickBooksSourceResponseInput interface {
	pulumi.Input

	ToQuickBooksSourceResponseOutput() QuickBooksSourceResponseOutput
	ToQuickBooksSourceResponseOutputWithContext(context.Context) QuickBooksSourceResponseOutput
}

// A copy activity QuickBooks server source.
type QuickBooksSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'QuickBooksSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (QuickBooksSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickBooksSourceResponse)(nil)).Elem()
}

func (i QuickBooksSourceResponseArgs) ToQuickBooksSourceResponseOutput() QuickBooksSourceResponseOutput {
	return i.ToQuickBooksSourceResponseOutputWithContext(context.Background())
}

func (i QuickBooksSourceResponseArgs) ToQuickBooksSourceResponseOutputWithContext(ctx context.Context) QuickBooksSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickBooksSourceResponseOutput)
}

// A copy activity QuickBooks server source.
type QuickBooksSourceResponseOutput struct{ *pulumi.OutputState }

func (QuickBooksSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickBooksSourceResponse)(nil)).Elem()
}

func (o QuickBooksSourceResponseOutput) ToQuickBooksSourceResponseOutput() QuickBooksSourceResponseOutput {
	return o
}

func (o QuickBooksSourceResponseOutput) ToQuickBooksSourceResponseOutputWithContext(ctx context.Context) QuickBooksSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o QuickBooksSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o QuickBooksSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o QuickBooksSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v QuickBooksSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'QuickBooksSource'.
func (o QuickBooksSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v QuickBooksSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The recurrence schedule.
type RecurrenceSchedule struct {
	// The hours.
	Hours []int `pulumi:"hours"`
	// The minutes.
	Minutes []int `pulumi:"minutes"`
	// The month days.
	MonthDays []int `pulumi:"monthDays"`
	// The monthly occurrences.
	MonthlyOccurrences []RecurrenceScheduleOccurrence `pulumi:"monthlyOccurrences"`
	// The days of the week.
	WeekDays []string `pulumi:"weekDays"`
}

// RecurrenceScheduleInput is an input type that accepts RecurrenceScheduleArgs and RecurrenceScheduleOutput values.
// You can construct a concrete instance of `RecurrenceScheduleInput` via:
//
//          RecurrenceScheduleArgs{...}
type RecurrenceScheduleInput interface {
	pulumi.Input

	ToRecurrenceScheduleOutput() RecurrenceScheduleOutput
	ToRecurrenceScheduleOutputWithContext(context.Context) RecurrenceScheduleOutput
}

// The recurrence schedule.
type RecurrenceScheduleArgs struct {
	// The hours.
	Hours pulumi.IntArrayInput `pulumi:"hours"`
	// The minutes.
	Minutes pulumi.IntArrayInput `pulumi:"minutes"`
	// The month days.
	MonthDays pulumi.IntArrayInput `pulumi:"monthDays"`
	// The monthly occurrences.
	MonthlyOccurrences RecurrenceScheduleOccurrenceArrayInput `pulumi:"monthlyOccurrences"`
	// The days of the week.
	WeekDays DaysOfWeekArrayInput `pulumi:"weekDays"`
}

func (RecurrenceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceSchedule)(nil)).Elem()
}

func (i RecurrenceScheduleArgs) ToRecurrenceScheduleOutput() RecurrenceScheduleOutput {
	return i.ToRecurrenceScheduleOutputWithContext(context.Background())
}

func (i RecurrenceScheduleArgs) ToRecurrenceScheduleOutputWithContext(ctx context.Context) RecurrenceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecurrenceScheduleOutput)
}

func (i RecurrenceScheduleArgs) ToRecurrenceSchedulePtrOutput() RecurrenceSchedulePtrOutput {
	return i.ToRecurrenceSchedulePtrOutputWithContext(context.Background())
}

func (i RecurrenceScheduleArgs) ToRecurrenceSchedulePtrOutputWithContext(ctx context.Context) RecurrenceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecurrenceScheduleOutput).ToRecurrenceSchedulePtrOutputWithContext(ctx)
}

// RecurrenceSchedulePtrInput is an input type that accepts RecurrenceScheduleArgs, RecurrenceSchedulePtr and RecurrenceSchedulePtrOutput values.
// You can construct a concrete instance of `RecurrenceSchedulePtrInput` via:
//
//          RecurrenceScheduleArgs{...}
//
//  or:
//
//          nil
type RecurrenceSchedulePtrInput interface {
	pulumi.Input

	ToRecurrenceSchedulePtrOutput() RecurrenceSchedulePtrOutput
	ToRecurrenceSchedulePtrOutputWithContext(context.Context) RecurrenceSchedulePtrOutput
}

type recurrenceSchedulePtrType RecurrenceScheduleArgs

func RecurrenceSchedulePtr(v *RecurrenceScheduleArgs) RecurrenceSchedulePtrInput {
	return (*recurrenceSchedulePtrType)(v)
}

func (*recurrenceSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecurrenceSchedule)(nil)).Elem()
}

func (i *recurrenceSchedulePtrType) ToRecurrenceSchedulePtrOutput() RecurrenceSchedulePtrOutput {
	return i.ToRecurrenceSchedulePtrOutputWithContext(context.Background())
}

func (i *recurrenceSchedulePtrType) ToRecurrenceSchedulePtrOutputWithContext(ctx context.Context) RecurrenceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecurrenceSchedulePtrOutput)
}

// The recurrence schedule.
type RecurrenceScheduleOutput struct{ *pulumi.OutputState }

func (RecurrenceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceSchedule)(nil)).Elem()
}

func (o RecurrenceScheduleOutput) ToRecurrenceScheduleOutput() RecurrenceScheduleOutput {
	return o
}

func (o RecurrenceScheduleOutput) ToRecurrenceScheduleOutputWithContext(ctx context.Context) RecurrenceScheduleOutput {
	return o
}

func (o RecurrenceScheduleOutput) ToRecurrenceSchedulePtrOutput() RecurrenceSchedulePtrOutput {
	return o.ToRecurrenceSchedulePtrOutputWithContext(context.Background())
}

func (o RecurrenceScheduleOutput) ToRecurrenceSchedulePtrOutputWithContext(ctx context.Context) RecurrenceSchedulePtrOutput {
	return o.ApplyT(func(v RecurrenceSchedule) *RecurrenceSchedule {
		return &v
	}).(RecurrenceSchedulePtrOutput)
}

// The hours.
func (o RecurrenceScheduleOutput) Hours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v RecurrenceSchedule) []int { return v.Hours }).(pulumi.IntArrayOutput)
}

// The minutes.
func (o RecurrenceScheduleOutput) Minutes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v RecurrenceSchedule) []int { return v.Minutes }).(pulumi.IntArrayOutput)
}

// The month days.
func (o RecurrenceScheduleOutput) MonthDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v RecurrenceSchedule) []int { return v.MonthDays }).(pulumi.IntArrayOutput)
}

// The monthly occurrences.
func (o RecurrenceScheduleOutput) MonthlyOccurrences() RecurrenceScheduleOccurrenceArrayOutput {
	return o.ApplyT(func(v RecurrenceSchedule) []RecurrenceScheduleOccurrence { return v.MonthlyOccurrences }).(RecurrenceScheduleOccurrenceArrayOutput)
}

// The days of the week.
func (o RecurrenceScheduleOutput) WeekDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecurrenceSchedule) []string { return v.WeekDays }).(pulumi.StringArrayOutput)
}

type RecurrenceSchedulePtrOutput struct{ *pulumi.OutputState }

func (RecurrenceSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecurrenceSchedule)(nil)).Elem()
}

func (o RecurrenceSchedulePtrOutput) ToRecurrenceSchedulePtrOutput() RecurrenceSchedulePtrOutput {
	return o
}

func (o RecurrenceSchedulePtrOutput) ToRecurrenceSchedulePtrOutputWithContext(ctx context.Context) RecurrenceSchedulePtrOutput {
	return o
}

func (o RecurrenceSchedulePtrOutput) Elem() RecurrenceScheduleOutput {
	return o.ApplyT(func(v *RecurrenceSchedule) RecurrenceSchedule { return *v }).(RecurrenceScheduleOutput)
}

// The hours.
func (o RecurrenceSchedulePtrOutput) Hours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *RecurrenceSchedule) []int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntArrayOutput)
}

// The minutes.
func (o RecurrenceSchedulePtrOutput) Minutes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *RecurrenceSchedule) []int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntArrayOutput)
}

// The month days.
func (o RecurrenceSchedulePtrOutput) MonthDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *RecurrenceSchedule) []int {
		if v == nil {
			return nil
		}
		return v.MonthDays
	}).(pulumi.IntArrayOutput)
}

// The monthly occurrences.
func (o RecurrenceSchedulePtrOutput) MonthlyOccurrences() RecurrenceScheduleOccurrenceArrayOutput {
	return o.ApplyT(func(v *RecurrenceSchedule) []RecurrenceScheduleOccurrence {
		if v == nil {
			return nil
		}
		return v.MonthlyOccurrences
	}).(RecurrenceScheduleOccurrenceArrayOutput)
}

// The days of the week.
func (o RecurrenceSchedulePtrOutput) WeekDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RecurrenceSchedule) []string {
		if v == nil {
			return nil
		}
		return v.WeekDays
	}).(pulumi.StringArrayOutput)
}

// The recurrence schedule occurrence.
type RecurrenceScheduleOccurrence struct {
	// The day of the week.
	Day *string `pulumi:"day"`
	// The occurrence.
	Occurrence *int `pulumi:"occurrence"`
}

// RecurrenceScheduleOccurrenceInput is an input type that accepts RecurrenceScheduleOccurrenceArgs and RecurrenceScheduleOccurrenceOutput values.
// You can construct a concrete instance of `RecurrenceScheduleOccurrenceInput` via:
//
//          RecurrenceScheduleOccurrenceArgs{...}
type RecurrenceScheduleOccurrenceInput interface {
	pulumi.Input

	ToRecurrenceScheduleOccurrenceOutput() RecurrenceScheduleOccurrenceOutput
	ToRecurrenceScheduleOccurrenceOutputWithContext(context.Context) RecurrenceScheduleOccurrenceOutput
}

// The recurrence schedule occurrence.
type RecurrenceScheduleOccurrenceArgs struct {
	// The day of the week.
	Day *DayOfWeek `pulumi:"day"`
	// The occurrence.
	Occurrence pulumi.IntPtrInput `pulumi:"occurrence"`
}

func (RecurrenceScheduleOccurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceScheduleOccurrence)(nil)).Elem()
}

func (i RecurrenceScheduleOccurrenceArgs) ToRecurrenceScheduleOccurrenceOutput() RecurrenceScheduleOccurrenceOutput {
	return i.ToRecurrenceScheduleOccurrenceOutputWithContext(context.Background())
}

func (i RecurrenceScheduleOccurrenceArgs) ToRecurrenceScheduleOccurrenceOutputWithContext(ctx context.Context) RecurrenceScheduleOccurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecurrenceScheduleOccurrenceOutput)
}

// RecurrenceScheduleOccurrenceArrayInput is an input type that accepts RecurrenceScheduleOccurrenceArray and RecurrenceScheduleOccurrenceArrayOutput values.
// You can construct a concrete instance of `RecurrenceScheduleOccurrenceArrayInput` via:
//
//          RecurrenceScheduleOccurrenceArray{ RecurrenceScheduleOccurrenceArgs{...} }
type RecurrenceScheduleOccurrenceArrayInput interface {
	pulumi.Input

	ToRecurrenceScheduleOccurrenceArrayOutput() RecurrenceScheduleOccurrenceArrayOutput
	ToRecurrenceScheduleOccurrenceArrayOutputWithContext(context.Context) RecurrenceScheduleOccurrenceArrayOutput
}

type RecurrenceScheduleOccurrenceArray []RecurrenceScheduleOccurrenceInput

func (RecurrenceScheduleOccurrenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecurrenceScheduleOccurrence)(nil)).Elem()
}

func (i RecurrenceScheduleOccurrenceArray) ToRecurrenceScheduleOccurrenceArrayOutput() RecurrenceScheduleOccurrenceArrayOutput {
	return i.ToRecurrenceScheduleOccurrenceArrayOutputWithContext(context.Background())
}

func (i RecurrenceScheduleOccurrenceArray) ToRecurrenceScheduleOccurrenceArrayOutputWithContext(ctx context.Context) RecurrenceScheduleOccurrenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecurrenceScheduleOccurrenceArrayOutput)
}

// The recurrence schedule occurrence.
type RecurrenceScheduleOccurrenceOutput struct{ *pulumi.OutputState }

func (RecurrenceScheduleOccurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceScheduleOccurrence)(nil)).Elem()
}

func (o RecurrenceScheduleOccurrenceOutput) ToRecurrenceScheduleOccurrenceOutput() RecurrenceScheduleOccurrenceOutput {
	return o
}

func (o RecurrenceScheduleOccurrenceOutput) ToRecurrenceScheduleOccurrenceOutputWithContext(ctx context.Context) RecurrenceScheduleOccurrenceOutput {
	return o
}

// The day of the week.
func (o RecurrenceScheduleOccurrenceOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecurrenceScheduleOccurrence) *string { return v.Day }).(pulumi.StringPtrOutput)
}

// The occurrence.
func (o RecurrenceScheduleOccurrenceOutput) Occurrence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecurrenceScheduleOccurrence) *int { return v.Occurrence }).(pulumi.IntPtrOutput)
}

type RecurrenceScheduleOccurrenceArrayOutput struct{ *pulumi.OutputState }

func (RecurrenceScheduleOccurrenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecurrenceScheduleOccurrence)(nil)).Elem()
}

func (o RecurrenceScheduleOccurrenceArrayOutput) ToRecurrenceScheduleOccurrenceArrayOutput() RecurrenceScheduleOccurrenceArrayOutput {
	return o
}

func (o RecurrenceScheduleOccurrenceArrayOutput) ToRecurrenceScheduleOccurrenceArrayOutputWithContext(ctx context.Context) RecurrenceScheduleOccurrenceArrayOutput {
	return o
}

func (o RecurrenceScheduleOccurrenceArrayOutput) Index(i pulumi.IntInput) RecurrenceScheduleOccurrenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecurrenceScheduleOccurrence {
		return vs[0].([]RecurrenceScheduleOccurrence)[vs[1].(int)]
	}).(RecurrenceScheduleOccurrenceOutput)
}

// The recurrence schedule occurrence.
type RecurrenceScheduleOccurrenceResponse struct {
	// The day of the week.
	Day *string `pulumi:"day"`
	// The occurrence.
	Occurrence *int `pulumi:"occurrence"`
}

// RecurrenceScheduleOccurrenceResponseInput is an input type that accepts RecurrenceScheduleOccurrenceResponseArgs and RecurrenceScheduleOccurrenceResponseOutput values.
// You can construct a concrete instance of `RecurrenceScheduleOccurrenceResponseInput` via:
//
//          RecurrenceScheduleOccurrenceResponseArgs{...}
type RecurrenceScheduleOccurrenceResponseInput interface {
	pulumi.Input

	ToRecurrenceScheduleOccurrenceResponseOutput() RecurrenceScheduleOccurrenceResponseOutput
	ToRecurrenceScheduleOccurrenceResponseOutputWithContext(context.Context) RecurrenceScheduleOccurrenceResponseOutput
}

// The recurrence schedule occurrence.
type RecurrenceScheduleOccurrenceResponseArgs struct {
	// The day of the week.
	Day pulumi.StringPtrInput `pulumi:"day"`
	// The occurrence.
	Occurrence pulumi.IntPtrInput `pulumi:"occurrence"`
}

func (RecurrenceScheduleOccurrenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceScheduleOccurrenceResponse)(nil)).Elem()
}

func (i RecurrenceScheduleOccurrenceResponseArgs) ToRecurrenceScheduleOccurrenceResponseOutput() RecurrenceScheduleOccurrenceResponseOutput {
	return i.ToRecurrenceScheduleOccurrenceResponseOutputWithContext(context.Background())
}

func (i RecurrenceScheduleOccurrenceResponseArgs) ToRecurrenceScheduleOccurrenceResponseOutputWithContext(ctx context.Context) RecurrenceScheduleOccurrenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecurrenceScheduleOccurrenceResponseOutput)
}

// RecurrenceScheduleOccurrenceResponseArrayInput is an input type that accepts RecurrenceScheduleOccurrenceResponseArray and RecurrenceScheduleOccurrenceResponseArrayOutput values.
// You can construct a concrete instance of `RecurrenceScheduleOccurrenceResponseArrayInput` via:
//
//          RecurrenceScheduleOccurrenceResponseArray{ RecurrenceScheduleOccurrenceResponseArgs{...} }
type RecurrenceScheduleOccurrenceResponseArrayInput interface {
	pulumi.Input

	ToRecurrenceScheduleOccurrenceResponseArrayOutput() RecurrenceScheduleOccurrenceResponseArrayOutput
	ToRecurrenceScheduleOccurrenceResponseArrayOutputWithContext(context.Context) RecurrenceScheduleOccurrenceResponseArrayOutput
}

type RecurrenceScheduleOccurrenceResponseArray []RecurrenceScheduleOccurrenceResponseInput

func (RecurrenceScheduleOccurrenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecurrenceScheduleOccurrenceResponse)(nil)).Elem()
}

func (i RecurrenceScheduleOccurrenceResponseArray) ToRecurrenceScheduleOccurrenceResponseArrayOutput() RecurrenceScheduleOccurrenceResponseArrayOutput {
	return i.ToRecurrenceScheduleOccurrenceResponseArrayOutputWithContext(context.Background())
}

func (i RecurrenceScheduleOccurrenceResponseArray) ToRecurrenceScheduleOccurrenceResponseArrayOutputWithContext(ctx context.Context) RecurrenceScheduleOccurrenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecurrenceScheduleOccurrenceResponseArrayOutput)
}

// The recurrence schedule occurrence.
type RecurrenceScheduleOccurrenceResponseOutput struct{ *pulumi.OutputState }

func (RecurrenceScheduleOccurrenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceScheduleOccurrenceResponse)(nil)).Elem()
}

func (o RecurrenceScheduleOccurrenceResponseOutput) ToRecurrenceScheduleOccurrenceResponseOutput() RecurrenceScheduleOccurrenceResponseOutput {
	return o
}

func (o RecurrenceScheduleOccurrenceResponseOutput) ToRecurrenceScheduleOccurrenceResponseOutputWithContext(ctx context.Context) RecurrenceScheduleOccurrenceResponseOutput {
	return o
}

// The day of the week.
func (o RecurrenceScheduleOccurrenceResponseOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecurrenceScheduleOccurrenceResponse) *string { return v.Day }).(pulumi.StringPtrOutput)
}

// The occurrence.
func (o RecurrenceScheduleOccurrenceResponseOutput) Occurrence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecurrenceScheduleOccurrenceResponse) *int { return v.Occurrence }).(pulumi.IntPtrOutput)
}

type RecurrenceScheduleOccurrenceResponseArrayOutput struct{ *pulumi.OutputState }

func (RecurrenceScheduleOccurrenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecurrenceScheduleOccurrenceResponse)(nil)).Elem()
}

func (o RecurrenceScheduleOccurrenceResponseArrayOutput) ToRecurrenceScheduleOccurrenceResponseArrayOutput() RecurrenceScheduleOccurrenceResponseArrayOutput {
	return o
}

func (o RecurrenceScheduleOccurrenceResponseArrayOutput) ToRecurrenceScheduleOccurrenceResponseArrayOutputWithContext(ctx context.Context) RecurrenceScheduleOccurrenceResponseArrayOutput {
	return o
}

func (o RecurrenceScheduleOccurrenceResponseArrayOutput) Index(i pulumi.IntInput) RecurrenceScheduleOccurrenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecurrenceScheduleOccurrenceResponse {
		return vs[0].([]RecurrenceScheduleOccurrenceResponse)[vs[1].(int)]
	}).(RecurrenceScheduleOccurrenceResponseOutput)
}

// The recurrence schedule.
type RecurrenceScheduleResponse struct {
	// The hours.
	Hours []int `pulumi:"hours"`
	// The minutes.
	Minutes []int `pulumi:"minutes"`
	// The month days.
	MonthDays []int `pulumi:"monthDays"`
	// The monthly occurrences.
	MonthlyOccurrences []RecurrenceScheduleOccurrenceResponse `pulumi:"monthlyOccurrences"`
	// The days of the week.
	WeekDays []string `pulumi:"weekDays"`
}

// RecurrenceScheduleResponseInput is an input type that accepts RecurrenceScheduleResponseArgs and RecurrenceScheduleResponseOutput values.
// You can construct a concrete instance of `RecurrenceScheduleResponseInput` via:
//
//          RecurrenceScheduleResponseArgs{...}
type RecurrenceScheduleResponseInput interface {
	pulumi.Input

	ToRecurrenceScheduleResponseOutput() RecurrenceScheduleResponseOutput
	ToRecurrenceScheduleResponseOutputWithContext(context.Context) RecurrenceScheduleResponseOutput
}

// The recurrence schedule.
type RecurrenceScheduleResponseArgs struct {
	// The hours.
	Hours pulumi.IntArrayInput `pulumi:"hours"`
	// The minutes.
	Minutes pulumi.IntArrayInput `pulumi:"minutes"`
	// The month days.
	MonthDays pulumi.IntArrayInput `pulumi:"monthDays"`
	// The monthly occurrences.
	MonthlyOccurrences RecurrenceScheduleOccurrenceResponseArrayInput `pulumi:"monthlyOccurrences"`
	// The days of the week.
	WeekDays pulumi.StringArrayInput `pulumi:"weekDays"`
}

func (RecurrenceScheduleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceScheduleResponse)(nil)).Elem()
}

func (i RecurrenceScheduleResponseArgs) ToRecurrenceScheduleResponseOutput() RecurrenceScheduleResponseOutput {
	return i.ToRecurrenceScheduleResponseOutputWithContext(context.Background())
}

func (i RecurrenceScheduleResponseArgs) ToRecurrenceScheduleResponseOutputWithContext(ctx context.Context) RecurrenceScheduleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecurrenceScheduleResponseOutput)
}

func (i RecurrenceScheduleResponseArgs) ToRecurrenceScheduleResponsePtrOutput() RecurrenceScheduleResponsePtrOutput {
	return i.ToRecurrenceScheduleResponsePtrOutputWithContext(context.Background())
}

func (i RecurrenceScheduleResponseArgs) ToRecurrenceScheduleResponsePtrOutputWithContext(ctx context.Context) RecurrenceScheduleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecurrenceScheduleResponseOutput).ToRecurrenceScheduleResponsePtrOutputWithContext(ctx)
}

// RecurrenceScheduleResponsePtrInput is an input type that accepts RecurrenceScheduleResponseArgs, RecurrenceScheduleResponsePtr and RecurrenceScheduleResponsePtrOutput values.
// You can construct a concrete instance of `RecurrenceScheduleResponsePtrInput` via:
//
//          RecurrenceScheduleResponseArgs{...}
//
//  or:
//
//          nil
type RecurrenceScheduleResponsePtrInput interface {
	pulumi.Input

	ToRecurrenceScheduleResponsePtrOutput() RecurrenceScheduleResponsePtrOutput
	ToRecurrenceScheduleResponsePtrOutputWithContext(context.Context) RecurrenceScheduleResponsePtrOutput
}

type recurrenceScheduleResponsePtrType RecurrenceScheduleResponseArgs

func RecurrenceScheduleResponsePtr(v *RecurrenceScheduleResponseArgs) RecurrenceScheduleResponsePtrInput {
	return (*recurrenceScheduleResponsePtrType)(v)
}

func (*recurrenceScheduleResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecurrenceScheduleResponse)(nil)).Elem()
}

func (i *recurrenceScheduleResponsePtrType) ToRecurrenceScheduleResponsePtrOutput() RecurrenceScheduleResponsePtrOutput {
	return i.ToRecurrenceScheduleResponsePtrOutputWithContext(context.Background())
}

func (i *recurrenceScheduleResponsePtrType) ToRecurrenceScheduleResponsePtrOutputWithContext(ctx context.Context) RecurrenceScheduleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecurrenceScheduleResponsePtrOutput)
}

// The recurrence schedule.
type RecurrenceScheduleResponseOutput struct{ *pulumi.OutputState }

func (RecurrenceScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceScheduleResponse)(nil)).Elem()
}

func (o RecurrenceScheduleResponseOutput) ToRecurrenceScheduleResponseOutput() RecurrenceScheduleResponseOutput {
	return o
}

func (o RecurrenceScheduleResponseOutput) ToRecurrenceScheduleResponseOutputWithContext(ctx context.Context) RecurrenceScheduleResponseOutput {
	return o
}

func (o RecurrenceScheduleResponseOutput) ToRecurrenceScheduleResponsePtrOutput() RecurrenceScheduleResponsePtrOutput {
	return o.ToRecurrenceScheduleResponsePtrOutputWithContext(context.Background())
}

func (o RecurrenceScheduleResponseOutput) ToRecurrenceScheduleResponsePtrOutputWithContext(ctx context.Context) RecurrenceScheduleResponsePtrOutput {
	return o.ApplyT(func(v RecurrenceScheduleResponse) *RecurrenceScheduleResponse {
		return &v
	}).(RecurrenceScheduleResponsePtrOutput)
}

// The hours.
func (o RecurrenceScheduleResponseOutput) Hours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v RecurrenceScheduleResponse) []int { return v.Hours }).(pulumi.IntArrayOutput)
}

// The minutes.
func (o RecurrenceScheduleResponseOutput) Minutes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v RecurrenceScheduleResponse) []int { return v.Minutes }).(pulumi.IntArrayOutput)
}

// The month days.
func (o RecurrenceScheduleResponseOutput) MonthDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v RecurrenceScheduleResponse) []int { return v.MonthDays }).(pulumi.IntArrayOutput)
}

// The monthly occurrences.
func (o RecurrenceScheduleResponseOutput) MonthlyOccurrences() RecurrenceScheduleOccurrenceResponseArrayOutput {
	return o.ApplyT(func(v RecurrenceScheduleResponse) []RecurrenceScheduleOccurrenceResponse { return v.MonthlyOccurrences }).(RecurrenceScheduleOccurrenceResponseArrayOutput)
}

// The days of the week.
func (o RecurrenceScheduleResponseOutput) WeekDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecurrenceScheduleResponse) []string { return v.WeekDays }).(pulumi.StringArrayOutput)
}

type RecurrenceScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (RecurrenceScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecurrenceScheduleResponse)(nil)).Elem()
}

func (o RecurrenceScheduleResponsePtrOutput) ToRecurrenceScheduleResponsePtrOutput() RecurrenceScheduleResponsePtrOutput {
	return o
}

func (o RecurrenceScheduleResponsePtrOutput) ToRecurrenceScheduleResponsePtrOutputWithContext(ctx context.Context) RecurrenceScheduleResponsePtrOutput {
	return o
}

func (o RecurrenceScheduleResponsePtrOutput) Elem() RecurrenceScheduleResponseOutput {
	return o.ApplyT(func(v *RecurrenceScheduleResponse) RecurrenceScheduleResponse { return *v }).(RecurrenceScheduleResponseOutput)
}

// The hours.
func (o RecurrenceScheduleResponsePtrOutput) Hours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *RecurrenceScheduleResponse) []int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntArrayOutput)
}

// The minutes.
func (o RecurrenceScheduleResponsePtrOutput) Minutes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *RecurrenceScheduleResponse) []int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntArrayOutput)
}

// The month days.
func (o RecurrenceScheduleResponsePtrOutput) MonthDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *RecurrenceScheduleResponse) []int {
		if v == nil {
			return nil
		}
		return v.MonthDays
	}).(pulumi.IntArrayOutput)
}

// The monthly occurrences.
func (o RecurrenceScheduleResponsePtrOutput) MonthlyOccurrences() RecurrenceScheduleOccurrenceResponseArrayOutput {
	return o.ApplyT(func(v *RecurrenceScheduleResponse) []RecurrenceScheduleOccurrenceResponse {
		if v == nil {
			return nil
		}
		return v.MonthlyOccurrences
	}).(RecurrenceScheduleOccurrenceResponseArrayOutput)
}

// The days of the week.
func (o RecurrenceScheduleResponsePtrOutput) WeekDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RecurrenceScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.WeekDays
	}).(pulumi.StringArrayOutput)
}

// Redirect incompatible row settings
type RedirectIncompatibleRowSettings struct {
	// Name of the Azure Storage, Storage SAS, or Azure Data Lake Store linked service used for redirecting incompatible row. Must be specified if redirectIncompatibleRowSettings is specified. Type: string (or Expression with resultType string).
	LinkedServiceName interface{} `pulumi:"linkedServiceName"`
	// The path for storing the redirect incompatible row data. Type: string (or Expression with resultType string).
	Path interface{} `pulumi:"path"`
}

// RedirectIncompatibleRowSettingsInput is an input type that accepts RedirectIncompatibleRowSettingsArgs and RedirectIncompatibleRowSettingsOutput values.
// You can construct a concrete instance of `RedirectIncompatibleRowSettingsInput` via:
//
//          RedirectIncompatibleRowSettingsArgs{...}
type RedirectIncompatibleRowSettingsInput interface {
	pulumi.Input

	ToRedirectIncompatibleRowSettingsOutput() RedirectIncompatibleRowSettingsOutput
	ToRedirectIncompatibleRowSettingsOutputWithContext(context.Context) RedirectIncompatibleRowSettingsOutput
}

// Redirect incompatible row settings
type RedirectIncompatibleRowSettingsArgs struct {
	// Name of the Azure Storage, Storage SAS, or Azure Data Lake Store linked service used for redirecting incompatible row. Must be specified if redirectIncompatibleRowSettings is specified. Type: string (or Expression with resultType string).
	LinkedServiceName pulumi.Input `pulumi:"linkedServiceName"`
	// The path for storing the redirect incompatible row data. Type: string (or Expression with resultType string).
	Path pulumi.Input `pulumi:"path"`
}

func (RedirectIncompatibleRowSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectIncompatibleRowSettings)(nil)).Elem()
}

func (i RedirectIncompatibleRowSettingsArgs) ToRedirectIncompatibleRowSettingsOutput() RedirectIncompatibleRowSettingsOutput {
	return i.ToRedirectIncompatibleRowSettingsOutputWithContext(context.Background())
}

func (i RedirectIncompatibleRowSettingsArgs) ToRedirectIncompatibleRowSettingsOutputWithContext(ctx context.Context) RedirectIncompatibleRowSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectIncompatibleRowSettingsOutput)
}

func (i RedirectIncompatibleRowSettingsArgs) ToRedirectIncompatibleRowSettingsPtrOutput() RedirectIncompatibleRowSettingsPtrOutput {
	return i.ToRedirectIncompatibleRowSettingsPtrOutputWithContext(context.Background())
}

func (i RedirectIncompatibleRowSettingsArgs) ToRedirectIncompatibleRowSettingsPtrOutputWithContext(ctx context.Context) RedirectIncompatibleRowSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectIncompatibleRowSettingsOutput).ToRedirectIncompatibleRowSettingsPtrOutputWithContext(ctx)
}

// RedirectIncompatibleRowSettingsPtrInput is an input type that accepts RedirectIncompatibleRowSettingsArgs, RedirectIncompatibleRowSettingsPtr and RedirectIncompatibleRowSettingsPtrOutput values.
// You can construct a concrete instance of `RedirectIncompatibleRowSettingsPtrInput` via:
//
//          RedirectIncompatibleRowSettingsArgs{...}
//
//  or:
//
//          nil
type RedirectIncompatibleRowSettingsPtrInput interface {
	pulumi.Input

	ToRedirectIncompatibleRowSettingsPtrOutput() RedirectIncompatibleRowSettingsPtrOutput
	ToRedirectIncompatibleRowSettingsPtrOutputWithContext(context.Context) RedirectIncompatibleRowSettingsPtrOutput
}

type redirectIncompatibleRowSettingsPtrType RedirectIncompatibleRowSettingsArgs

func RedirectIncompatibleRowSettingsPtr(v *RedirectIncompatibleRowSettingsArgs) RedirectIncompatibleRowSettingsPtrInput {
	return (*redirectIncompatibleRowSettingsPtrType)(v)
}

func (*redirectIncompatibleRowSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedirectIncompatibleRowSettings)(nil)).Elem()
}

func (i *redirectIncompatibleRowSettingsPtrType) ToRedirectIncompatibleRowSettingsPtrOutput() RedirectIncompatibleRowSettingsPtrOutput {
	return i.ToRedirectIncompatibleRowSettingsPtrOutputWithContext(context.Background())
}

func (i *redirectIncompatibleRowSettingsPtrType) ToRedirectIncompatibleRowSettingsPtrOutputWithContext(ctx context.Context) RedirectIncompatibleRowSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectIncompatibleRowSettingsPtrOutput)
}

// Redirect incompatible row settings
type RedirectIncompatibleRowSettingsOutput struct{ *pulumi.OutputState }

func (RedirectIncompatibleRowSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectIncompatibleRowSettings)(nil)).Elem()
}

func (o RedirectIncompatibleRowSettingsOutput) ToRedirectIncompatibleRowSettingsOutput() RedirectIncompatibleRowSettingsOutput {
	return o
}

func (o RedirectIncompatibleRowSettingsOutput) ToRedirectIncompatibleRowSettingsOutputWithContext(ctx context.Context) RedirectIncompatibleRowSettingsOutput {
	return o
}

func (o RedirectIncompatibleRowSettingsOutput) ToRedirectIncompatibleRowSettingsPtrOutput() RedirectIncompatibleRowSettingsPtrOutput {
	return o.ToRedirectIncompatibleRowSettingsPtrOutputWithContext(context.Background())
}

func (o RedirectIncompatibleRowSettingsOutput) ToRedirectIncompatibleRowSettingsPtrOutputWithContext(ctx context.Context) RedirectIncompatibleRowSettingsPtrOutput {
	return o.ApplyT(func(v RedirectIncompatibleRowSettings) *RedirectIncompatibleRowSettings {
		return &v
	}).(RedirectIncompatibleRowSettingsPtrOutput)
}

// Name of the Azure Storage, Storage SAS, or Azure Data Lake Store linked service used for redirecting incompatible row. Must be specified if redirectIncompatibleRowSettings is specified. Type: string (or Expression with resultType string).
func (o RedirectIncompatibleRowSettingsOutput) LinkedServiceName() pulumi.AnyOutput {
	return o.ApplyT(func(v RedirectIncompatibleRowSettings) interface{} { return v.LinkedServiceName }).(pulumi.AnyOutput)
}

// The path for storing the redirect incompatible row data. Type: string (or Expression with resultType string).
func (o RedirectIncompatibleRowSettingsOutput) Path() pulumi.AnyOutput {
	return o.ApplyT(func(v RedirectIncompatibleRowSettings) interface{} { return v.Path }).(pulumi.AnyOutput)
}

type RedirectIncompatibleRowSettingsPtrOutput struct{ *pulumi.OutputState }

func (RedirectIncompatibleRowSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedirectIncompatibleRowSettings)(nil)).Elem()
}

func (o RedirectIncompatibleRowSettingsPtrOutput) ToRedirectIncompatibleRowSettingsPtrOutput() RedirectIncompatibleRowSettingsPtrOutput {
	return o
}

func (o RedirectIncompatibleRowSettingsPtrOutput) ToRedirectIncompatibleRowSettingsPtrOutputWithContext(ctx context.Context) RedirectIncompatibleRowSettingsPtrOutput {
	return o
}

func (o RedirectIncompatibleRowSettingsPtrOutput) Elem() RedirectIncompatibleRowSettingsOutput {
	return o.ApplyT(func(v *RedirectIncompatibleRowSettings) RedirectIncompatibleRowSettings { return *v }).(RedirectIncompatibleRowSettingsOutput)
}

// Name of the Azure Storage, Storage SAS, or Azure Data Lake Store linked service used for redirecting incompatible row. Must be specified if redirectIncompatibleRowSettings is specified. Type: string (or Expression with resultType string).
func (o RedirectIncompatibleRowSettingsPtrOutput) LinkedServiceName() pulumi.AnyOutput {
	return o.ApplyT(func(v *RedirectIncompatibleRowSettings) interface{} {
		if v == nil {
			return nil
		}
		return v.LinkedServiceName
	}).(pulumi.AnyOutput)
}

// The path for storing the redirect incompatible row data. Type: string (or Expression with resultType string).
func (o RedirectIncompatibleRowSettingsPtrOutput) Path() pulumi.AnyOutput {
	return o.ApplyT(func(v *RedirectIncompatibleRowSettings) interface{} {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.AnyOutput)
}

// Redirect incompatible row settings
type RedirectIncompatibleRowSettingsResponse struct {
	// Name of the Azure Storage, Storage SAS, or Azure Data Lake Store linked service used for redirecting incompatible row. Must be specified if redirectIncompatibleRowSettings is specified. Type: string (or Expression with resultType string).
	LinkedServiceName interface{} `pulumi:"linkedServiceName"`
	// The path for storing the redirect incompatible row data. Type: string (or Expression with resultType string).
	Path interface{} `pulumi:"path"`
}

// RedirectIncompatibleRowSettingsResponseInput is an input type that accepts RedirectIncompatibleRowSettingsResponseArgs and RedirectIncompatibleRowSettingsResponseOutput values.
// You can construct a concrete instance of `RedirectIncompatibleRowSettingsResponseInput` via:
//
//          RedirectIncompatibleRowSettingsResponseArgs{...}
type RedirectIncompatibleRowSettingsResponseInput interface {
	pulumi.Input

	ToRedirectIncompatibleRowSettingsResponseOutput() RedirectIncompatibleRowSettingsResponseOutput
	ToRedirectIncompatibleRowSettingsResponseOutputWithContext(context.Context) RedirectIncompatibleRowSettingsResponseOutput
}

// Redirect incompatible row settings
type RedirectIncompatibleRowSettingsResponseArgs struct {
	// Name of the Azure Storage, Storage SAS, or Azure Data Lake Store linked service used for redirecting incompatible row. Must be specified if redirectIncompatibleRowSettings is specified. Type: string (or Expression with resultType string).
	LinkedServiceName pulumi.Input `pulumi:"linkedServiceName"`
	// The path for storing the redirect incompatible row data. Type: string (or Expression with resultType string).
	Path pulumi.Input `pulumi:"path"`
}

func (RedirectIncompatibleRowSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectIncompatibleRowSettingsResponse)(nil)).Elem()
}

func (i RedirectIncompatibleRowSettingsResponseArgs) ToRedirectIncompatibleRowSettingsResponseOutput() RedirectIncompatibleRowSettingsResponseOutput {
	return i.ToRedirectIncompatibleRowSettingsResponseOutputWithContext(context.Background())
}

func (i RedirectIncompatibleRowSettingsResponseArgs) ToRedirectIncompatibleRowSettingsResponseOutputWithContext(ctx context.Context) RedirectIncompatibleRowSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectIncompatibleRowSettingsResponseOutput)
}

func (i RedirectIncompatibleRowSettingsResponseArgs) ToRedirectIncompatibleRowSettingsResponsePtrOutput() RedirectIncompatibleRowSettingsResponsePtrOutput {
	return i.ToRedirectIncompatibleRowSettingsResponsePtrOutputWithContext(context.Background())
}

func (i RedirectIncompatibleRowSettingsResponseArgs) ToRedirectIncompatibleRowSettingsResponsePtrOutputWithContext(ctx context.Context) RedirectIncompatibleRowSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectIncompatibleRowSettingsResponseOutput).ToRedirectIncompatibleRowSettingsResponsePtrOutputWithContext(ctx)
}

// RedirectIncompatibleRowSettingsResponsePtrInput is an input type that accepts RedirectIncompatibleRowSettingsResponseArgs, RedirectIncompatibleRowSettingsResponsePtr and RedirectIncompatibleRowSettingsResponsePtrOutput values.
// You can construct a concrete instance of `RedirectIncompatibleRowSettingsResponsePtrInput` via:
//
//          RedirectIncompatibleRowSettingsResponseArgs{...}
//
//  or:
//
//          nil
type RedirectIncompatibleRowSettingsResponsePtrInput interface {
	pulumi.Input

	ToRedirectIncompatibleRowSettingsResponsePtrOutput() RedirectIncompatibleRowSettingsResponsePtrOutput
	ToRedirectIncompatibleRowSettingsResponsePtrOutputWithContext(context.Context) RedirectIncompatibleRowSettingsResponsePtrOutput
}

type redirectIncompatibleRowSettingsResponsePtrType RedirectIncompatibleRowSettingsResponseArgs

func RedirectIncompatibleRowSettingsResponsePtr(v *RedirectIncompatibleRowSettingsResponseArgs) RedirectIncompatibleRowSettingsResponsePtrInput {
	return (*redirectIncompatibleRowSettingsResponsePtrType)(v)
}

func (*redirectIncompatibleRowSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedirectIncompatibleRowSettingsResponse)(nil)).Elem()
}

func (i *redirectIncompatibleRowSettingsResponsePtrType) ToRedirectIncompatibleRowSettingsResponsePtrOutput() RedirectIncompatibleRowSettingsResponsePtrOutput {
	return i.ToRedirectIncompatibleRowSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *redirectIncompatibleRowSettingsResponsePtrType) ToRedirectIncompatibleRowSettingsResponsePtrOutputWithContext(ctx context.Context) RedirectIncompatibleRowSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectIncompatibleRowSettingsResponsePtrOutput)
}

// Redirect incompatible row settings
type RedirectIncompatibleRowSettingsResponseOutput struct{ *pulumi.OutputState }

func (RedirectIncompatibleRowSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectIncompatibleRowSettingsResponse)(nil)).Elem()
}

func (o RedirectIncompatibleRowSettingsResponseOutput) ToRedirectIncompatibleRowSettingsResponseOutput() RedirectIncompatibleRowSettingsResponseOutput {
	return o
}

func (o RedirectIncompatibleRowSettingsResponseOutput) ToRedirectIncompatibleRowSettingsResponseOutputWithContext(ctx context.Context) RedirectIncompatibleRowSettingsResponseOutput {
	return o
}

func (o RedirectIncompatibleRowSettingsResponseOutput) ToRedirectIncompatibleRowSettingsResponsePtrOutput() RedirectIncompatibleRowSettingsResponsePtrOutput {
	return o.ToRedirectIncompatibleRowSettingsResponsePtrOutputWithContext(context.Background())
}

func (o RedirectIncompatibleRowSettingsResponseOutput) ToRedirectIncompatibleRowSettingsResponsePtrOutputWithContext(ctx context.Context) RedirectIncompatibleRowSettingsResponsePtrOutput {
	return o.ApplyT(func(v RedirectIncompatibleRowSettingsResponse) *RedirectIncompatibleRowSettingsResponse {
		return &v
	}).(RedirectIncompatibleRowSettingsResponsePtrOutput)
}

// Name of the Azure Storage, Storage SAS, or Azure Data Lake Store linked service used for redirecting incompatible row. Must be specified if redirectIncompatibleRowSettings is specified. Type: string (or Expression with resultType string).
func (o RedirectIncompatibleRowSettingsResponseOutput) LinkedServiceName() pulumi.AnyOutput {
	return o.ApplyT(func(v RedirectIncompatibleRowSettingsResponse) interface{} { return v.LinkedServiceName }).(pulumi.AnyOutput)
}

// The path for storing the redirect incompatible row data. Type: string (or Expression with resultType string).
func (o RedirectIncompatibleRowSettingsResponseOutput) Path() pulumi.AnyOutput {
	return o.ApplyT(func(v RedirectIncompatibleRowSettingsResponse) interface{} { return v.Path }).(pulumi.AnyOutput)
}

type RedirectIncompatibleRowSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (RedirectIncompatibleRowSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedirectIncompatibleRowSettingsResponse)(nil)).Elem()
}

func (o RedirectIncompatibleRowSettingsResponsePtrOutput) ToRedirectIncompatibleRowSettingsResponsePtrOutput() RedirectIncompatibleRowSettingsResponsePtrOutput {
	return o
}

func (o RedirectIncompatibleRowSettingsResponsePtrOutput) ToRedirectIncompatibleRowSettingsResponsePtrOutputWithContext(ctx context.Context) RedirectIncompatibleRowSettingsResponsePtrOutput {
	return o
}

func (o RedirectIncompatibleRowSettingsResponsePtrOutput) Elem() RedirectIncompatibleRowSettingsResponseOutput {
	return o.ApplyT(func(v *RedirectIncompatibleRowSettingsResponse) RedirectIncompatibleRowSettingsResponse { return *v }).(RedirectIncompatibleRowSettingsResponseOutput)
}

// Name of the Azure Storage, Storage SAS, or Azure Data Lake Store linked service used for redirecting incompatible row. Must be specified if redirectIncompatibleRowSettings is specified. Type: string (or Expression with resultType string).
func (o RedirectIncompatibleRowSettingsResponsePtrOutput) LinkedServiceName() pulumi.AnyOutput {
	return o.ApplyT(func(v *RedirectIncompatibleRowSettingsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.LinkedServiceName
	}).(pulumi.AnyOutput)
}

// The path for storing the redirect incompatible row data. Type: string (or Expression with resultType string).
func (o RedirectIncompatibleRowSettingsResponsePtrOutput) Path() pulumi.AnyOutput {
	return o.ApplyT(func(v *RedirectIncompatibleRowSettingsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.AnyOutput)
}

// The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.
type RedshiftUnloadSettings struct {
	// The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string).
	BucketName interface{} `pulumi:"bucketName"`
	// The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source.
	S3LinkedServiceName LinkedServiceReference `pulumi:"s3LinkedServiceName"`
}

// RedshiftUnloadSettingsInput is an input type that accepts RedshiftUnloadSettingsArgs and RedshiftUnloadSettingsOutput values.
// You can construct a concrete instance of `RedshiftUnloadSettingsInput` via:
//
//          RedshiftUnloadSettingsArgs{...}
type RedshiftUnloadSettingsInput interface {
	pulumi.Input

	ToRedshiftUnloadSettingsOutput() RedshiftUnloadSettingsOutput
	ToRedshiftUnloadSettingsOutputWithContext(context.Context) RedshiftUnloadSettingsOutput
}

// The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.
type RedshiftUnloadSettingsArgs struct {
	// The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string).
	BucketName pulumi.Input `pulumi:"bucketName"`
	// The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source.
	S3LinkedServiceName LinkedServiceReferenceInput `pulumi:"s3LinkedServiceName"`
}

func (RedshiftUnloadSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedshiftUnloadSettings)(nil)).Elem()
}

func (i RedshiftUnloadSettingsArgs) ToRedshiftUnloadSettingsOutput() RedshiftUnloadSettingsOutput {
	return i.ToRedshiftUnloadSettingsOutputWithContext(context.Background())
}

func (i RedshiftUnloadSettingsArgs) ToRedshiftUnloadSettingsOutputWithContext(ctx context.Context) RedshiftUnloadSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedshiftUnloadSettingsOutput)
}

func (i RedshiftUnloadSettingsArgs) ToRedshiftUnloadSettingsPtrOutput() RedshiftUnloadSettingsPtrOutput {
	return i.ToRedshiftUnloadSettingsPtrOutputWithContext(context.Background())
}

func (i RedshiftUnloadSettingsArgs) ToRedshiftUnloadSettingsPtrOutputWithContext(ctx context.Context) RedshiftUnloadSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedshiftUnloadSettingsOutput).ToRedshiftUnloadSettingsPtrOutputWithContext(ctx)
}

// RedshiftUnloadSettingsPtrInput is an input type that accepts RedshiftUnloadSettingsArgs, RedshiftUnloadSettingsPtr and RedshiftUnloadSettingsPtrOutput values.
// You can construct a concrete instance of `RedshiftUnloadSettingsPtrInput` via:
//
//          RedshiftUnloadSettingsArgs{...}
//
//  or:
//
//          nil
type RedshiftUnloadSettingsPtrInput interface {
	pulumi.Input

	ToRedshiftUnloadSettingsPtrOutput() RedshiftUnloadSettingsPtrOutput
	ToRedshiftUnloadSettingsPtrOutputWithContext(context.Context) RedshiftUnloadSettingsPtrOutput
}

type redshiftUnloadSettingsPtrType RedshiftUnloadSettingsArgs

func RedshiftUnloadSettingsPtr(v *RedshiftUnloadSettingsArgs) RedshiftUnloadSettingsPtrInput {
	return (*redshiftUnloadSettingsPtrType)(v)
}

func (*redshiftUnloadSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedshiftUnloadSettings)(nil)).Elem()
}

func (i *redshiftUnloadSettingsPtrType) ToRedshiftUnloadSettingsPtrOutput() RedshiftUnloadSettingsPtrOutput {
	return i.ToRedshiftUnloadSettingsPtrOutputWithContext(context.Background())
}

func (i *redshiftUnloadSettingsPtrType) ToRedshiftUnloadSettingsPtrOutputWithContext(ctx context.Context) RedshiftUnloadSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedshiftUnloadSettingsPtrOutput)
}

// The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.
type RedshiftUnloadSettingsOutput struct{ *pulumi.OutputState }

func (RedshiftUnloadSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedshiftUnloadSettings)(nil)).Elem()
}

func (o RedshiftUnloadSettingsOutput) ToRedshiftUnloadSettingsOutput() RedshiftUnloadSettingsOutput {
	return o
}

func (o RedshiftUnloadSettingsOutput) ToRedshiftUnloadSettingsOutputWithContext(ctx context.Context) RedshiftUnloadSettingsOutput {
	return o
}

func (o RedshiftUnloadSettingsOutput) ToRedshiftUnloadSettingsPtrOutput() RedshiftUnloadSettingsPtrOutput {
	return o.ToRedshiftUnloadSettingsPtrOutputWithContext(context.Background())
}

func (o RedshiftUnloadSettingsOutput) ToRedshiftUnloadSettingsPtrOutputWithContext(ctx context.Context) RedshiftUnloadSettingsPtrOutput {
	return o.ApplyT(func(v RedshiftUnloadSettings) *RedshiftUnloadSettings {
		return &v
	}).(RedshiftUnloadSettingsPtrOutput)
}

// The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string).
func (o RedshiftUnloadSettingsOutput) BucketName() pulumi.AnyOutput {
	return o.ApplyT(func(v RedshiftUnloadSettings) interface{} { return v.BucketName }).(pulumi.AnyOutput)
}

// The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source.
func (o RedshiftUnloadSettingsOutput) S3LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v RedshiftUnloadSettings) LinkedServiceReference { return v.S3LinkedServiceName }).(LinkedServiceReferenceOutput)
}

type RedshiftUnloadSettingsPtrOutput struct{ *pulumi.OutputState }

func (RedshiftUnloadSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedshiftUnloadSettings)(nil)).Elem()
}

func (o RedshiftUnloadSettingsPtrOutput) ToRedshiftUnloadSettingsPtrOutput() RedshiftUnloadSettingsPtrOutput {
	return o
}

func (o RedshiftUnloadSettingsPtrOutput) ToRedshiftUnloadSettingsPtrOutputWithContext(ctx context.Context) RedshiftUnloadSettingsPtrOutput {
	return o
}

func (o RedshiftUnloadSettingsPtrOutput) Elem() RedshiftUnloadSettingsOutput {
	return o.ApplyT(func(v *RedshiftUnloadSettings) RedshiftUnloadSettings { return *v }).(RedshiftUnloadSettingsOutput)
}

// The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string).
func (o RedshiftUnloadSettingsPtrOutput) BucketName() pulumi.AnyOutput {
	return o.ApplyT(func(v *RedshiftUnloadSettings) interface{} {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.AnyOutput)
}

// The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source.
func (o RedshiftUnloadSettingsPtrOutput) S3LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v *RedshiftUnloadSettings) *LinkedServiceReference {
		if v == nil {
			return nil
		}
		return &v.S3LinkedServiceName
	}).(LinkedServiceReferencePtrOutput)
}

// The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.
type RedshiftUnloadSettingsResponse struct {
	// The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string).
	BucketName interface{} `pulumi:"bucketName"`
	// The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source.
	S3LinkedServiceName LinkedServiceReferenceResponse `pulumi:"s3LinkedServiceName"`
}

// RedshiftUnloadSettingsResponseInput is an input type that accepts RedshiftUnloadSettingsResponseArgs and RedshiftUnloadSettingsResponseOutput values.
// You can construct a concrete instance of `RedshiftUnloadSettingsResponseInput` via:
//
//          RedshiftUnloadSettingsResponseArgs{...}
type RedshiftUnloadSettingsResponseInput interface {
	pulumi.Input

	ToRedshiftUnloadSettingsResponseOutput() RedshiftUnloadSettingsResponseOutput
	ToRedshiftUnloadSettingsResponseOutputWithContext(context.Context) RedshiftUnloadSettingsResponseOutput
}

// The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.
type RedshiftUnloadSettingsResponseArgs struct {
	// The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string).
	BucketName pulumi.Input `pulumi:"bucketName"`
	// The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source.
	S3LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"s3LinkedServiceName"`
}

func (RedshiftUnloadSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedshiftUnloadSettingsResponse)(nil)).Elem()
}

func (i RedshiftUnloadSettingsResponseArgs) ToRedshiftUnloadSettingsResponseOutput() RedshiftUnloadSettingsResponseOutput {
	return i.ToRedshiftUnloadSettingsResponseOutputWithContext(context.Background())
}

func (i RedshiftUnloadSettingsResponseArgs) ToRedshiftUnloadSettingsResponseOutputWithContext(ctx context.Context) RedshiftUnloadSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedshiftUnloadSettingsResponseOutput)
}

func (i RedshiftUnloadSettingsResponseArgs) ToRedshiftUnloadSettingsResponsePtrOutput() RedshiftUnloadSettingsResponsePtrOutput {
	return i.ToRedshiftUnloadSettingsResponsePtrOutputWithContext(context.Background())
}

func (i RedshiftUnloadSettingsResponseArgs) ToRedshiftUnloadSettingsResponsePtrOutputWithContext(ctx context.Context) RedshiftUnloadSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedshiftUnloadSettingsResponseOutput).ToRedshiftUnloadSettingsResponsePtrOutputWithContext(ctx)
}

// RedshiftUnloadSettingsResponsePtrInput is an input type that accepts RedshiftUnloadSettingsResponseArgs, RedshiftUnloadSettingsResponsePtr and RedshiftUnloadSettingsResponsePtrOutput values.
// You can construct a concrete instance of `RedshiftUnloadSettingsResponsePtrInput` via:
//
//          RedshiftUnloadSettingsResponseArgs{...}
//
//  or:
//
//          nil
type RedshiftUnloadSettingsResponsePtrInput interface {
	pulumi.Input

	ToRedshiftUnloadSettingsResponsePtrOutput() RedshiftUnloadSettingsResponsePtrOutput
	ToRedshiftUnloadSettingsResponsePtrOutputWithContext(context.Context) RedshiftUnloadSettingsResponsePtrOutput
}

type redshiftUnloadSettingsResponsePtrType RedshiftUnloadSettingsResponseArgs

func RedshiftUnloadSettingsResponsePtr(v *RedshiftUnloadSettingsResponseArgs) RedshiftUnloadSettingsResponsePtrInput {
	return (*redshiftUnloadSettingsResponsePtrType)(v)
}

func (*redshiftUnloadSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedshiftUnloadSettingsResponse)(nil)).Elem()
}

func (i *redshiftUnloadSettingsResponsePtrType) ToRedshiftUnloadSettingsResponsePtrOutput() RedshiftUnloadSettingsResponsePtrOutput {
	return i.ToRedshiftUnloadSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *redshiftUnloadSettingsResponsePtrType) ToRedshiftUnloadSettingsResponsePtrOutputWithContext(ctx context.Context) RedshiftUnloadSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedshiftUnloadSettingsResponsePtrOutput)
}

// The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.
type RedshiftUnloadSettingsResponseOutput struct{ *pulumi.OutputState }

func (RedshiftUnloadSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedshiftUnloadSettingsResponse)(nil)).Elem()
}

func (o RedshiftUnloadSettingsResponseOutput) ToRedshiftUnloadSettingsResponseOutput() RedshiftUnloadSettingsResponseOutput {
	return o
}

func (o RedshiftUnloadSettingsResponseOutput) ToRedshiftUnloadSettingsResponseOutputWithContext(ctx context.Context) RedshiftUnloadSettingsResponseOutput {
	return o
}

func (o RedshiftUnloadSettingsResponseOutput) ToRedshiftUnloadSettingsResponsePtrOutput() RedshiftUnloadSettingsResponsePtrOutput {
	return o.ToRedshiftUnloadSettingsResponsePtrOutputWithContext(context.Background())
}

func (o RedshiftUnloadSettingsResponseOutput) ToRedshiftUnloadSettingsResponsePtrOutputWithContext(ctx context.Context) RedshiftUnloadSettingsResponsePtrOutput {
	return o.ApplyT(func(v RedshiftUnloadSettingsResponse) *RedshiftUnloadSettingsResponse {
		return &v
	}).(RedshiftUnloadSettingsResponsePtrOutput)
}

// The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string).
func (o RedshiftUnloadSettingsResponseOutput) BucketName() pulumi.AnyOutput {
	return o.ApplyT(func(v RedshiftUnloadSettingsResponse) interface{} { return v.BucketName }).(pulumi.AnyOutput)
}

// The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source.
func (o RedshiftUnloadSettingsResponseOutput) S3LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v RedshiftUnloadSettingsResponse) LinkedServiceReferenceResponse { return v.S3LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

type RedshiftUnloadSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (RedshiftUnloadSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedshiftUnloadSettingsResponse)(nil)).Elem()
}

func (o RedshiftUnloadSettingsResponsePtrOutput) ToRedshiftUnloadSettingsResponsePtrOutput() RedshiftUnloadSettingsResponsePtrOutput {
	return o
}

func (o RedshiftUnloadSettingsResponsePtrOutput) ToRedshiftUnloadSettingsResponsePtrOutputWithContext(ctx context.Context) RedshiftUnloadSettingsResponsePtrOutput {
	return o
}

func (o RedshiftUnloadSettingsResponsePtrOutput) Elem() RedshiftUnloadSettingsResponseOutput {
	return o.ApplyT(func(v *RedshiftUnloadSettingsResponse) RedshiftUnloadSettingsResponse { return *v }).(RedshiftUnloadSettingsResponseOutput)
}

// The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string).
func (o RedshiftUnloadSettingsResponsePtrOutput) BucketName() pulumi.AnyOutput {
	return o.ApplyT(func(v *RedshiftUnloadSettingsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.AnyOutput)
}

// The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source.
func (o RedshiftUnloadSettingsResponsePtrOutput) S3LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v *RedshiftUnloadSettingsResponse) *LinkedServiceReferenceResponse {
		if v == nil {
			return nil
		}
		return &v.S3LinkedServiceName
	}).(LinkedServiceReferenceResponsePtrOutput)
}

// A copy activity source for various relational databases.
type RelationalSource struct {
	// Database query. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'RelationalSource'.
	Type string `pulumi:"type"`
}

// RelationalSourceInput is an input type that accepts RelationalSourceArgs and RelationalSourceOutput values.
// You can construct a concrete instance of `RelationalSourceInput` via:
//
//          RelationalSourceArgs{...}
type RelationalSourceInput interface {
	pulumi.Input

	ToRelationalSourceOutput() RelationalSourceOutput
	ToRelationalSourceOutputWithContext(context.Context) RelationalSourceOutput
}

// A copy activity source for various relational databases.
type RelationalSourceArgs struct {
	// Database query. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'RelationalSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RelationalSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RelationalSource)(nil)).Elem()
}

func (i RelationalSourceArgs) ToRelationalSourceOutput() RelationalSourceOutput {
	return i.ToRelationalSourceOutputWithContext(context.Background())
}

func (i RelationalSourceArgs) ToRelationalSourceOutputWithContext(ctx context.Context) RelationalSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelationalSourceOutput)
}

// A copy activity source for various relational databases.
type RelationalSourceOutput struct{ *pulumi.OutputState }

func (RelationalSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RelationalSource)(nil)).Elem()
}

func (o RelationalSourceOutput) ToRelationalSourceOutput() RelationalSourceOutput {
	return o
}

func (o RelationalSourceOutput) ToRelationalSourceOutputWithContext(ctx context.Context) RelationalSourceOutput {
	return o
}

// Database query. Type: string (or Expression with resultType string).
func (o RelationalSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v RelationalSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o RelationalSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v RelationalSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o RelationalSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v RelationalSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'RelationalSource'.
func (o RelationalSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RelationalSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity source for various relational databases.
type RelationalSourceResponse struct {
	// Database query. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'RelationalSource'.
	Type string `pulumi:"type"`
}

// RelationalSourceResponseInput is an input type that accepts RelationalSourceResponseArgs and RelationalSourceResponseOutput values.
// You can construct a concrete instance of `RelationalSourceResponseInput` via:
//
//          RelationalSourceResponseArgs{...}
type RelationalSourceResponseInput interface {
	pulumi.Input

	ToRelationalSourceResponseOutput() RelationalSourceResponseOutput
	ToRelationalSourceResponseOutputWithContext(context.Context) RelationalSourceResponseOutput
}

// A copy activity source for various relational databases.
type RelationalSourceResponseArgs struct {
	// Database query. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'RelationalSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RelationalSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RelationalSourceResponse)(nil)).Elem()
}

func (i RelationalSourceResponseArgs) ToRelationalSourceResponseOutput() RelationalSourceResponseOutput {
	return i.ToRelationalSourceResponseOutputWithContext(context.Background())
}

func (i RelationalSourceResponseArgs) ToRelationalSourceResponseOutputWithContext(ctx context.Context) RelationalSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelationalSourceResponseOutput)
}

// A copy activity source for various relational databases.
type RelationalSourceResponseOutput struct{ *pulumi.OutputState }

func (RelationalSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RelationalSourceResponse)(nil)).Elem()
}

func (o RelationalSourceResponseOutput) ToRelationalSourceResponseOutput() RelationalSourceResponseOutput {
	return o
}

func (o RelationalSourceResponseOutput) ToRelationalSourceResponseOutputWithContext(ctx context.Context) RelationalSourceResponseOutput {
	return o
}

// Database query. Type: string (or Expression with resultType string).
func (o RelationalSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v RelationalSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o RelationalSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v RelationalSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o RelationalSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v RelationalSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'RelationalSource'.
func (o RelationalSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RelationalSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The relational table dataset.
type RelationalTableDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The relational table name. Type: string (or Expression with resultType string).
	TableName interface{} `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'RelationalTable'.
	Type string `pulumi:"type"`
}

// RelationalTableDatasetInput is an input type that accepts RelationalTableDatasetArgs and RelationalTableDatasetOutput values.
// You can construct a concrete instance of `RelationalTableDatasetInput` via:
//
//          RelationalTableDatasetArgs{...}
type RelationalTableDatasetInput interface {
	pulumi.Input

	ToRelationalTableDatasetOutput() RelationalTableDatasetOutput
	ToRelationalTableDatasetOutputWithContext(context.Context) RelationalTableDatasetOutput
}

// The relational table dataset.
type RelationalTableDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The relational table name. Type: string (or Expression with resultType string).
	TableName pulumi.Input `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'RelationalTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RelationalTableDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RelationalTableDataset)(nil)).Elem()
}

func (i RelationalTableDatasetArgs) ToRelationalTableDatasetOutput() RelationalTableDatasetOutput {
	return i.ToRelationalTableDatasetOutputWithContext(context.Background())
}

func (i RelationalTableDatasetArgs) ToRelationalTableDatasetOutputWithContext(ctx context.Context) RelationalTableDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelationalTableDatasetOutput)
}

// The relational table dataset.
type RelationalTableDatasetOutput struct{ *pulumi.OutputState }

func (RelationalTableDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RelationalTableDataset)(nil)).Elem()
}

func (o RelationalTableDatasetOutput) ToRelationalTableDatasetOutput() RelationalTableDatasetOutput {
	return o
}

func (o RelationalTableDatasetOutput) ToRelationalTableDatasetOutputWithContext(ctx context.Context) RelationalTableDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o RelationalTableDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v RelationalTableDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o RelationalTableDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelationalTableDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o RelationalTableDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v RelationalTableDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o RelationalTableDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v RelationalTableDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o RelationalTableDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v RelationalTableDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The relational table name. Type: string (or Expression with resultType string).
func (o RelationalTableDatasetOutput) TableName() pulumi.AnyOutput {
	return o.ApplyT(func(v RelationalTableDataset) interface{} { return v.TableName }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'RelationalTable'.
func (o RelationalTableDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RelationalTableDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The relational table dataset.
type RelationalTableDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The relational table name. Type: string (or Expression with resultType string).
	TableName interface{} `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'RelationalTable'.
	Type string `pulumi:"type"`
}

// RelationalTableDatasetResponseInput is an input type that accepts RelationalTableDatasetResponseArgs and RelationalTableDatasetResponseOutput values.
// You can construct a concrete instance of `RelationalTableDatasetResponseInput` via:
//
//          RelationalTableDatasetResponseArgs{...}
type RelationalTableDatasetResponseInput interface {
	pulumi.Input

	ToRelationalTableDatasetResponseOutput() RelationalTableDatasetResponseOutput
	ToRelationalTableDatasetResponseOutputWithContext(context.Context) RelationalTableDatasetResponseOutput
}

// The relational table dataset.
type RelationalTableDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The relational table name. Type: string (or Expression with resultType string).
	TableName pulumi.Input `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'RelationalTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RelationalTableDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RelationalTableDatasetResponse)(nil)).Elem()
}

func (i RelationalTableDatasetResponseArgs) ToRelationalTableDatasetResponseOutput() RelationalTableDatasetResponseOutput {
	return i.ToRelationalTableDatasetResponseOutputWithContext(context.Background())
}

func (i RelationalTableDatasetResponseArgs) ToRelationalTableDatasetResponseOutputWithContext(ctx context.Context) RelationalTableDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelationalTableDatasetResponseOutput)
}

// The relational table dataset.
type RelationalTableDatasetResponseOutput struct{ *pulumi.OutputState }

func (RelationalTableDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RelationalTableDatasetResponse)(nil)).Elem()
}

func (o RelationalTableDatasetResponseOutput) ToRelationalTableDatasetResponseOutput() RelationalTableDatasetResponseOutput {
	return o
}

func (o RelationalTableDatasetResponseOutput) ToRelationalTableDatasetResponseOutputWithContext(ctx context.Context) RelationalTableDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o RelationalTableDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v RelationalTableDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o RelationalTableDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelationalTableDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o RelationalTableDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v RelationalTableDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o RelationalTableDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v RelationalTableDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o RelationalTableDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v RelationalTableDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The relational table name. Type: string (or Expression with resultType string).
func (o RelationalTableDatasetResponseOutput) TableName() pulumi.AnyOutput {
	return o.ApplyT(func(v RelationalTableDatasetResponse) interface{} { return v.TableName }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'RelationalTable'.
func (o RelationalTableDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RelationalTableDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Responsys linked service.
type ResponsysLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The client ID associated with the Responsys application. Type: string (or Expression with resultType string).
	ClientId interface{} `pulumi:"clientId"`
	// The client secret associated with the Responsys application. Type: string (or Expression with resultType string).
	ClientSecret interface{} `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the Responsys server.
	Endpoint interface{} `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Responsys'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// ResponsysLinkedServiceInput is an input type that accepts ResponsysLinkedServiceArgs and ResponsysLinkedServiceOutput values.
// You can construct a concrete instance of `ResponsysLinkedServiceInput` via:
//
//          ResponsysLinkedServiceArgs{...}
type ResponsysLinkedServiceInput interface {
	pulumi.Input

	ToResponsysLinkedServiceOutput() ResponsysLinkedServiceOutput
	ToResponsysLinkedServiceOutputWithContext(context.Context) ResponsysLinkedServiceOutput
}

// Responsys linked service.
type ResponsysLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The client ID associated with the Responsys application. Type: string (or Expression with resultType string).
	ClientId pulumi.Input `pulumi:"clientId"`
	// The client secret associated with the Responsys application. Type: string (or Expression with resultType string).
	ClientSecret pulumi.Input `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the Responsys server.
	Endpoint pulumi.Input `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Responsys'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (ResponsysLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsysLinkedService)(nil)).Elem()
}

func (i ResponsysLinkedServiceArgs) ToResponsysLinkedServiceOutput() ResponsysLinkedServiceOutput {
	return i.ToResponsysLinkedServiceOutputWithContext(context.Background())
}

func (i ResponsysLinkedServiceArgs) ToResponsysLinkedServiceOutputWithContext(ctx context.Context) ResponsysLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsysLinkedServiceOutput)
}

// Responsys linked service.
type ResponsysLinkedServiceOutput struct{ *pulumi.OutputState }

func (ResponsysLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsysLinkedService)(nil)).Elem()
}

func (o ResponsysLinkedServiceOutput) ToResponsysLinkedServiceOutput() ResponsysLinkedServiceOutput {
	return o
}

func (o ResponsysLinkedServiceOutput) ToResponsysLinkedServiceOutputWithContext(ctx context.Context) ResponsysLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ResponsysLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ResponsysLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The client ID associated with the Responsys application. Type: string (or Expression with resultType string).
func (o ResponsysLinkedServiceOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysLinkedService) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The client secret associated with the Responsys application. Type: string (or Expression with resultType string).
func (o ResponsysLinkedServiceOutput) ClientSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysLinkedService) interface{} { return v.ClientSecret }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o ResponsysLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v ResponsysLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o ResponsysLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponsysLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o ResponsysLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the Responsys server.
func (o ResponsysLinkedServiceOutput) Endpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysLinkedService) interface{} { return v.Endpoint }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o ResponsysLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v ResponsysLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'Responsys'.
func (o ResponsysLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsysLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
func (o ResponsysLinkedServiceOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysLinkedService) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
func (o ResponsysLinkedServiceOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysLinkedService) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
func (o ResponsysLinkedServiceOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysLinkedService) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Responsys linked service.
type ResponsysLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The client ID associated with the Responsys application. Type: string (or Expression with resultType string).
	ClientId interface{} `pulumi:"clientId"`
	// The client secret associated with the Responsys application. Type: string (or Expression with resultType string).
	ClientSecret interface{} `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the Responsys server.
	Endpoint interface{} `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Responsys'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// ResponsysLinkedServiceResponseInput is an input type that accepts ResponsysLinkedServiceResponseArgs and ResponsysLinkedServiceResponseOutput values.
// You can construct a concrete instance of `ResponsysLinkedServiceResponseInput` via:
//
//          ResponsysLinkedServiceResponseArgs{...}
type ResponsysLinkedServiceResponseInput interface {
	pulumi.Input

	ToResponsysLinkedServiceResponseOutput() ResponsysLinkedServiceResponseOutput
	ToResponsysLinkedServiceResponseOutputWithContext(context.Context) ResponsysLinkedServiceResponseOutput
}

// Responsys linked service.
type ResponsysLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The client ID associated with the Responsys application. Type: string (or Expression with resultType string).
	ClientId pulumi.Input `pulumi:"clientId"`
	// The client secret associated with the Responsys application. Type: string (or Expression with resultType string).
	ClientSecret pulumi.Input `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the Responsys server.
	Endpoint pulumi.Input `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Responsys'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (ResponsysLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsysLinkedServiceResponse)(nil)).Elem()
}

func (i ResponsysLinkedServiceResponseArgs) ToResponsysLinkedServiceResponseOutput() ResponsysLinkedServiceResponseOutput {
	return i.ToResponsysLinkedServiceResponseOutputWithContext(context.Background())
}

func (i ResponsysLinkedServiceResponseArgs) ToResponsysLinkedServiceResponseOutputWithContext(ctx context.Context) ResponsysLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsysLinkedServiceResponseOutput)
}

// Responsys linked service.
type ResponsysLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (ResponsysLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsysLinkedServiceResponse)(nil)).Elem()
}

func (o ResponsysLinkedServiceResponseOutput) ToResponsysLinkedServiceResponseOutput() ResponsysLinkedServiceResponseOutput {
	return o
}

func (o ResponsysLinkedServiceResponseOutput) ToResponsysLinkedServiceResponseOutputWithContext(ctx context.Context) ResponsysLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ResponsysLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ResponsysLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The client ID associated with the Responsys application. Type: string (or Expression with resultType string).
func (o ResponsysLinkedServiceResponseOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysLinkedServiceResponse) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The client secret associated with the Responsys application. Type: string (or Expression with resultType string).
func (o ResponsysLinkedServiceResponseOutput) ClientSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysLinkedServiceResponse) interface{} { return v.ClientSecret }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o ResponsysLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v ResponsysLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o ResponsysLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponsysLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o ResponsysLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the Responsys server.
func (o ResponsysLinkedServiceResponseOutput) Endpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysLinkedServiceResponse) interface{} { return v.Endpoint }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o ResponsysLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v ResponsysLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'Responsys'.
func (o ResponsysLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsysLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
func (o ResponsysLinkedServiceResponseOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysLinkedServiceResponse) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
func (o ResponsysLinkedServiceResponseOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysLinkedServiceResponse) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
func (o ResponsysLinkedServiceResponseOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysLinkedServiceResponse) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Responsys dataset.
type ResponsysObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ResponsysObject'.
	Type string `pulumi:"type"`
}

// ResponsysObjectDatasetInput is an input type that accepts ResponsysObjectDatasetArgs and ResponsysObjectDatasetOutput values.
// You can construct a concrete instance of `ResponsysObjectDatasetInput` via:
//
//          ResponsysObjectDatasetArgs{...}
type ResponsysObjectDatasetInput interface {
	pulumi.Input

	ToResponsysObjectDatasetOutput() ResponsysObjectDatasetOutput
	ToResponsysObjectDatasetOutputWithContext(context.Context) ResponsysObjectDatasetOutput
}

// Responsys dataset.
type ResponsysObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ResponsysObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ResponsysObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsysObjectDataset)(nil)).Elem()
}

func (i ResponsysObjectDatasetArgs) ToResponsysObjectDatasetOutput() ResponsysObjectDatasetOutput {
	return i.ToResponsysObjectDatasetOutputWithContext(context.Background())
}

func (i ResponsysObjectDatasetArgs) ToResponsysObjectDatasetOutputWithContext(ctx context.Context) ResponsysObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsysObjectDatasetOutput)
}

// Responsys dataset.
type ResponsysObjectDatasetOutput struct{ *pulumi.OutputState }

func (ResponsysObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsysObjectDataset)(nil)).Elem()
}

func (o ResponsysObjectDatasetOutput) ToResponsysObjectDatasetOutput() ResponsysObjectDatasetOutput {
	return o
}

func (o ResponsysObjectDatasetOutput) ToResponsysObjectDatasetOutputWithContext(ctx context.Context) ResponsysObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ResponsysObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ResponsysObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o ResponsysObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponsysObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o ResponsysObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v ResponsysObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o ResponsysObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v ResponsysObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o ResponsysObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'ResponsysObject'.
func (o ResponsysObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsysObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Responsys dataset.
type ResponsysObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ResponsysObject'.
	Type string `pulumi:"type"`
}

// ResponsysObjectDatasetResponseInput is an input type that accepts ResponsysObjectDatasetResponseArgs and ResponsysObjectDatasetResponseOutput values.
// You can construct a concrete instance of `ResponsysObjectDatasetResponseInput` via:
//
//          ResponsysObjectDatasetResponseArgs{...}
type ResponsysObjectDatasetResponseInput interface {
	pulumi.Input

	ToResponsysObjectDatasetResponseOutput() ResponsysObjectDatasetResponseOutput
	ToResponsysObjectDatasetResponseOutputWithContext(context.Context) ResponsysObjectDatasetResponseOutput
}

// Responsys dataset.
type ResponsysObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ResponsysObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ResponsysObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsysObjectDatasetResponse)(nil)).Elem()
}

func (i ResponsysObjectDatasetResponseArgs) ToResponsysObjectDatasetResponseOutput() ResponsysObjectDatasetResponseOutput {
	return i.ToResponsysObjectDatasetResponseOutputWithContext(context.Background())
}

func (i ResponsysObjectDatasetResponseArgs) ToResponsysObjectDatasetResponseOutputWithContext(ctx context.Context) ResponsysObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsysObjectDatasetResponseOutput)
}

// Responsys dataset.
type ResponsysObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (ResponsysObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsysObjectDatasetResponse)(nil)).Elem()
}

func (o ResponsysObjectDatasetResponseOutput) ToResponsysObjectDatasetResponseOutput() ResponsysObjectDatasetResponseOutput {
	return o
}

func (o ResponsysObjectDatasetResponseOutput) ToResponsysObjectDatasetResponseOutputWithContext(ctx context.Context) ResponsysObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ResponsysObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ResponsysObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o ResponsysObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponsysObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o ResponsysObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v ResponsysObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o ResponsysObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v ResponsysObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o ResponsysObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'ResponsysObject'.
func (o ResponsysObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsysObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Responsys source.
type ResponsysSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ResponsysSource'.
	Type string `pulumi:"type"`
}

// ResponsysSourceInput is an input type that accepts ResponsysSourceArgs and ResponsysSourceOutput values.
// You can construct a concrete instance of `ResponsysSourceInput` via:
//
//          ResponsysSourceArgs{...}
type ResponsysSourceInput interface {
	pulumi.Input

	ToResponsysSourceOutput() ResponsysSourceOutput
	ToResponsysSourceOutputWithContext(context.Context) ResponsysSourceOutput
}

// A copy activity Responsys source.
type ResponsysSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ResponsysSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ResponsysSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsysSource)(nil)).Elem()
}

func (i ResponsysSourceArgs) ToResponsysSourceOutput() ResponsysSourceOutput {
	return i.ToResponsysSourceOutputWithContext(context.Background())
}

func (i ResponsysSourceArgs) ToResponsysSourceOutputWithContext(ctx context.Context) ResponsysSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsysSourceOutput)
}

// A copy activity Responsys source.
type ResponsysSourceOutput struct{ *pulumi.OutputState }

func (ResponsysSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsysSource)(nil)).Elem()
}

func (o ResponsysSourceOutput) ToResponsysSourceOutput() ResponsysSourceOutput {
	return o
}

func (o ResponsysSourceOutput) ToResponsysSourceOutputWithContext(ctx context.Context) ResponsysSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o ResponsysSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o ResponsysSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o ResponsysSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'ResponsysSource'.
func (o ResponsysSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsysSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Responsys source.
type ResponsysSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ResponsysSource'.
	Type string `pulumi:"type"`
}

// ResponsysSourceResponseInput is an input type that accepts ResponsysSourceResponseArgs and ResponsysSourceResponseOutput values.
// You can construct a concrete instance of `ResponsysSourceResponseInput` via:
//
//          ResponsysSourceResponseArgs{...}
type ResponsysSourceResponseInput interface {
	pulumi.Input

	ToResponsysSourceResponseOutput() ResponsysSourceResponseOutput
	ToResponsysSourceResponseOutputWithContext(context.Context) ResponsysSourceResponseOutput
}

// A copy activity Responsys source.
type ResponsysSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ResponsysSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ResponsysSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsysSourceResponse)(nil)).Elem()
}

func (i ResponsysSourceResponseArgs) ToResponsysSourceResponseOutput() ResponsysSourceResponseOutput {
	return i.ToResponsysSourceResponseOutputWithContext(context.Background())
}

func (i ResponsysSourceResponseArgs) ToResponsysSourceResponseOutputWithContext(ctx context.Context) ResponsysSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsysSourceResponseOutput)
}

// A copy activity Responsys source.
type ResponsysSourceResponseOutput struct{ *pulumi.OutputState }

func (ResponsysSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsysSourceResponse)(nil)).Elem()
}

func (o ResponsysSourceResponseOutput) ToResponsysSourceResponseOutput() ResponsysSourceResponseOutput {
	return o
}

func (o ResponsysSourceResponseOutput) ToResponsysSourceResponseOutputWithContext(ctx context.Context) ResponsysSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o ResponsysSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o ResponsysSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o ResponsysSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v ResponsysSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'ResponsysSource'.
func (o ResponsysSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsysSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Execution policy for an activity.
type RetryPolicy struct {
	// Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
	Count interface{} `pulumi:"count"`
	// Interval between retries in seconds. Default is 30.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
}

// RetryPolicyInput is an input type that accepts RetryPolicyArgs and RetryPolicyOutput values.
// You can construct a concrete instance of `RetryPolicyInput` via:
//
//          RetryPolicyArgs{...}
type RetryPolicyInput interface {
	pulumi.Input

	ToRetryPolicyOutput() RetryPolicyOutput
	ToRetryPolicyOutputWithContext(context.Context) RetryPolicyOutput
}

// Execution policy for an activity.
type RetryPolicyArgs struct {
	// Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
	Count pulumi.Input `pulumi:"count"`
	// Interval between retries in seconds. Default is 30.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
}

func (RetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetryPolicy)(nil)).Elem()
}

func (i RetryPolicyArgs) ToRetryPolicyOutput() RetryPolicyOutput {
	return i.ToRetryPolicyOutputWithContext(context.Background())
}

func (i RetryPolicyArgs) ToRetryPolicyOutputWithContext(ctx context.Context) RetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetryPolicyOutput)
}

func (i RetryPolicyArgs) ToRetryPolicyPtrOutput() RetryPolicyPtrOutput {
	return i.ToRetryPolicyPtrOutputWithContext(context.Background())
}

func (i RetryPolicyArgs) ToRetryPolicyPtrOutputWithContext(ctx context.Context) RetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetryPolicyOutput).ToRetryPolicyPtrOutputWithContext(ctx)
}

// RetryPolicyPtrInput is an input type that accepts RetryPolicyArgs, RetryPolicyPtr and RetryPolicyPtrOutput values.
// You can construct a concrete instance of `RetryPolicyPtrInput` via:
//
//          RetryPolicyArgs{...}
//
//  or:
//
//          nil
type RetryPolicyPtrInput interface {
	pulumi.Input

	ToRetryPolicyPtrOutput() RetryPolicyPtrOutput
	ToRetryPolicyPtrOutputWithContext(context.Context) RetryPolicyPtrOutput
}

type retryPolicyPtrType RetryPolicyArgs

func RetryPolicyPtr(v *RetryPolicyArgs) RetryPolicyPtrInput {
	return (*retryPolicyPtrType)(v)
}

func (*retryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetryPolicy)(nil)).Elem()
}

func (i *retryPolicyPtrType) ToRetryPolicyPtrOutput() RetryPolicyPtrOutput {
	return i.ToRetryPolicyPtrOutputWithContext(context.Background())
}

func (i *retryPolicyPtrType) ToRetryPolicyPtrOutputWithContext(ctx context.Context) RetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetryPolicyPtrOutput)
}

// Execution policy for an activity.
type RetryPolicyOutput struct{ *pulumi.OutputState }

func (RetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetryPolicy)(nil)).Elem()
}

func (o RetryPolicyOutput) ToRetryPolicyOutput() RetryPolicyOutput {
	return o
}

func (o RetryPolicyOutput) ToRetryPolicyOutputWithContext(ctx context.Context) RetryPolicyOutput {
	return o
}

func (o RetryPolicyOutput) ToRetryPolicyPtrOutput() RetryPolicyPtrOutput {
	return o.ToRetryPolicyPtrOutputWithContext(context.Background())
}

func (o RetryPolicyOutput) ToRetryPolicyPtrOutputWithContext(ctx context.Context) RetryPolicyPtrOutput {
	return o.ApplyT(func(v RetryPolicy) *RetryPolicy {
		return &v
	}).(RetryPolicyPtrOutput)
}

// Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
func (o RetryPolicyOutput) Count() pulumi.AnyOutput {
	return o.ApplyT(func(v RetryPolicy) interface{} { return v.Count }).(pulumi.AnyOutput)
}

// Interval between retries in seconds. Default is 30.
func (o RetryPolicyOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetryPolicy) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

type RetryPolicyPtrOutput struct{ *pulumi.OutputState }

func (RetryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetryPolicy)(nil)).Elem()
}

func (o RetryPolicyPtrOutput) ToRetryPolicyPtrOutput() RetryPolicyPtrOutput {
	return o
}

func (o RetryPolicyPtrOutput) ToRetryPolicyPtrOutputWithContext(ctx context.Context) RetryPolicyPtrOutput {
	return o
}

func (o RetryPolicyPtrOutput) Elem() RetryPolicyOutput {
	return o.ApplyT(func(v *RetryPolicy) RetryPolicy { return *v }).(RetryPolicyOutput)
}

// Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
func (o RetryPolicyPtrOutput) Count() pulumi.AnyOutput {
	return o.ApplyT(func(v *RetryPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.AnyOutput)
}

// Interval between retries in seconds. Default is 30.
func (o RetryPolicyPtrOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetryPolicy) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// Execution policy for an activity.
type RetryPolicyResponse struct {
	// Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
	Count interface{} `pulumi:"count"`
	// Interval between retries in seconds. Default is 30.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
}

// RetryPolicyResponseInput is an input type that accepts RetryPolicyResponseArgs and RetryPolicyResponseOutput values.
// You can construct a concrete instance of `RetryPolicyResponseInput` via:
//
//          RetryPolicyResponseArgs{...}
type RetryPolicyResponseInput interface {
	pulumi.Input

	ToRetryPolicyResponseOutput() RetryPolicyResponseOutput
	ToRetryPolicyResponseOutputWithContext(context.Context) RetryPolicyResponseOutput
}

// Execution policy for an activity.
type RetryPolicyResponseArgs struct {
	// Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
	Count pulumi.Input `pulumi:"count"`
	// Interval between retries in seconds. Default is 30.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
}

func (RetryPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetryPolicyResponse)(nil)).Elem()
}

func (i RetryPolicyResponseArgs) ToRetryPolicyResponseOutput() RetryPolicyResponseOutput {
	return i.ToRetryPolicyResponseOutputWithContext(context.Background())
}

func (i RetryPolicyResponseArgs) ToRetryPolicyResponseOutputWithContext(ctx context.Context) RetryPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetryPolicyResponseOutput)
}

func (i RetryPolicyResponseArgs) ToRetryPolicyResponsePtrOutput() RetryPolicyResponsePtrOutput {
	return i.ToRetryPolicyResponsePtrOutputWithContext(context.Background())
}

func (i RetryPolicyResponseArgs) ToRetryPolicyResponsePtrOutputWithContext(ctx context.Context) RetryPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetryPolicyResponseOutput).ToRetryPolicyResponsePtrOutputWithContext(ctx)
}

// RetryPolicyResponsePtrInput is an input type that accepts RetryPolicyResponseArgs, RetryPolicyResponsePtr and RetryPolicyResponsePtrOutput values.
// You can construct a concrete instance of `RetryPolicyResponsePtrInput` via:
//
//          RetryPolicyResponseArgs{...}
//
//  or:
//
//          nil
type RetryPolicyResponsePtrInput interface {
	pulumi.Input

	ToRetryPolicyResponsePtrOutput() RetryPolicyResponsePtrOutput
	ToRetryPolicyResponsePtrOutputWithContext(context.Context) RetryPolicyResponsePtrOutput
}

type retryPolicyResponsePtrType RetryPolicyResponseArgs

func RetryPolicyResponsePtr(v *RetryPolicyResponseArgs) RetryPolicyResponsePtrInput {
	return (*retryPolicyResponsePtrType)(v)
}

func (*retryPolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetryPolicyResponse)(nil)).Elem()
}

func (i *retryPolicyResponsePtrType) ToRetryPolicyResponsePtrOutput() RetryPolicyResponsePtrOutput {
	return i.ToRetryPolicyResponsePtrOutputWithContext(context.Background())
}

func (i *retryPolicyResponsePtrType) ToRetryPolicyResponsePtrOutputWithContext(ctx context.Context) RetryPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetryPolicyResponsePtrOutput)
}

// Execution policy for an activity.
type RetryPolicyResponseOutput struct{ *pulumi.OutputState }

func (RetryPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetryPolicyResponse)(nil)).Elem()
}

func (o RetryPolicyResponseOutput) ToRetryPolicyResponseOutput() RetryPolicyResponseOutput {
	return o
}

func (o RetryPolicyResponseOutput) ToRetryPolicyResponseOutputWithContext(ctx context.Context) RetryPolicyResponseOutput {
	return o
}

func (o RetryPolicyResponseOutput) ToRetryPolicyResponsePtrOutput() RetryPolicyResponsePtrOutput {
	return o.ToRetryPolicyResponsePtrOutputWithContext(context.Background())
}

func (o RetryPolicyResponseOutput) ToRetryPolicyResponsePtrOutputWithContext(ctx context.Context) RetryPolicyResponsePtrOutput {
	return o.ApplyT(func(v RetryPolicyResponse) *RetryPolicyResponse {
		return &v
	}).(RetryPolicyResponsePtrOutput)
}

// Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
func (o RetryPolicyResponseOutput) Count() pulumi.AnyOutput {
	return o.ApplyT(func(v RetryPolicyResponse) interface{} { return v.Count }).(pulumi.AnyOutput)
}

// Interval between retries in seconds. Default is 30.
func (o RetryPolicyResponseOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetryPolicyResponse) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

type RetryPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (RetryPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetryPolicyResponse)(nil)).Elem()
}

func (o RetryPolicyResponsePtrOutput) ToRetryPolicyResponsePtrOutput() RetryPolicyResponsePtrOutput {
	return o
}

func (o RetryPolicyResponsePtrOutput) ToRetryPolicyResponsePtrOutputWithContext(ctx context.Context) RetryPolicyResponsePtrOutput {
	return o
}

func (o RetryPolicyResponsePtrOutput) Elem() RetryPolicyResponseOutput {
	return o.ApplyT(func(v *RetryPolicyResponse) RetryPolicyResponse { return *v }).(RetryPolicyResponseOutput)
}

// Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
func (o RetryPolicyResponsePtrOutput) Count() pulumi.AnyOutput {
	return o.ApplyT(func(v *RetryPolicyResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.AnyOutput)
}

// Interval between retries in seconds. Default is 30.
func (o RetryPolicyResponsePtrOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetryPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// SSIS access credential.
type SSISAccessCredential struct {
	// Domain for windows authentication.
	Domain interface{} `pulumi:"domain"`
	// Password for windows authentication.
	Password interface{} `pulumi:"password"`
	// UseName for windows authentication.
	UserName interface{} `pulumi:"userName"`
}

// SSISAccessCredentialInput is an input type that accepts SSISAccessCredentialArgs and SSISAccessCredentialOutput values.
// You can construct a concrete instance of `SSISAccessCredentialInput` via:
//
//          SSISAccessCredentialArgs{...}
type SSISAccessCredentialInput interface {
	pulumi.Input

	ToSSISAccessCredentialOutput() SSISAccessCredentialOutput
	ToSSISAccessCredentialOutputWithContext(context.Context) SSISAccessCredentialOutput
}

// SSIS access credential.
type SSISAccessCredentialArgs struct {
	// Domain for windows authentication.
	Domain pulumi.Input `pulumi:"domain"`
	// Password for windows authentication.
	Password pulumi.Input `pulumi:"password"`
	// UseName for windows authentication.
	UserName pulumi.Input `pulumi:"userName"`
}

func (SSISAccessCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISAccessCredential)(nil)).Elem()
}

func (i SSISAccessCredentialArgs) ToSSISAccessCredentialOutput() SSISAccessCredentialOutput {
	return i.ToSSISAccessCredentialOutputWithContext(context.Background())
}

func (i SSISAccessCredentialArgs) ToSSISAccessCredentialOutputWithContext(ctx context.Context) SSISAccessCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISAccessCredentialOutput)
}

func (i SSISAccessCredentialArgs) ToSSISAccessCredentialPtrOutput() SSISAccessCredentialPtrOutput {
	return i.ToSSISAccessCredentialPtrOutputWithContext(context.Background())
}

func (i SSISAccessCredentialArgs) ToSSISAccessCredentialPtrOutputWithContext(ctx context.Context) SSISAccessCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISAccessCredentialOutput).ToSSISAccessCredentialPtrOutputWithContext(ctx)
}

// SSISAccessCredentialPtrInput is an input type that accepts SSISAccessCredentialArgs, SSISAccessCredentialPtr and SSISAccessCredentialPtrOutput values.
// You can construct a concrete instance of `SSISAccessCredentialPtrInput` via:
//
//          SSISAccessCredentialArgs{...}
//
//  or:
//
//          nil
type SSISAccessCredentialPtrInput interface {
	pulumi.Input

	ToSSISAccessCredentialPtrOutput() SSISAccessCredentialPtrOutput
	ToSSISAccessCredentialPtrOutputWithContext(context.Context) SSISAccessCredentialPtrOutput
}

type ssisaccessCredentialPtrType SSISAccessCredentialArgs

func SSISAccessCredentialPtr(v *SSISAccessCredentialArgs) SSISAccessCredentialPtrInput {
	return (*ssisaccessCredentialPtrType)(v)
}

func (*ssisaccessCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SSISAccessCredential)(nil)).Elem()
}

func (i *ssisaccessCredentialPtrType) ToSSISAccessCredentialPtrOutput() SSISAccessCredentialPtrOutput {
	return i.ToSSISAccessCredentialPtrOutputWithContext(context.Background())
}

func (i *ssisaccessCredentialPtrType) ToSSISAccessCredentialPtrOutputWithContext(ctx context.Context) SSISAccessCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISAccessCredentialPtrOutput)
}

// SSIS access credential.
type SSISAccessCredentialOutput struct{ *pulumi.OutputState }

func (SSISAccessCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISAccessCredential)(nil)).Elem()
}

func (o SSISAccessCredentialOutput) ToSSISAccessCredentialOutput() SSISAccessCredentialOutput {
	return o
}

func (o SSISAccessCredentialOutput) ToSSISAccessCredentialOutputWithContext(ctx context.Context) SSISAccessCredentialOutput {
	return o
}

func (o SSISAccessCredentialOutput) ToSSISAccessCredentialPtrOutput() SSISAccessCredentialPtrOutput {
	return o.ToSSISAccessCredentialPtrOutputWithContext(context.Background())
}

func (o SSISAccessCredentialOutput) ToSSISAccessCredentialPtrOutputWithContext(ctx context.Context) SSISAccessCredentialPtrOutput {
	return o.ApplyT(func(v SSISAccessCredential) *SSISAccessCredential {
		return &v
	}).(SSISAccessCredentialPtrOutput)
}

// Domain for windows authentication.
func (o SSISAccessCredentialOutput) Domain() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISAccessCredential) interface{} { return v.Domain }).(pulumi.AnyOutput)
}

// Password for windows authentication.
func (o SSISAccessCredentialOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISAccessCredential) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// UseName for windows authentication.
func (o SSISAccessCredentialOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISAccessCredential) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

type SSISAccessCredentialPtrOutput struct{ *pulumi.OutputState }

func (SSISAccessCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSISAccessCredential)(nil)).Elem()
}

func (o SSISAccessCredentialPtrOutput) ToSSISAccessCredentialPtrOutput() SSISAccessCredentialPtrOutput {
	return o
}

func (o SSISAccessCredentialPtrOutput) ToSSISAccessCredentialPtrOutputWithContext(ctx context.Context) SSISAccessCredentialPtrOutput {
	return o
}

func (o SSISAccessCredentialPtrOutput) Elem() SSISAccessCredentialOutput {
	return o.ApplyT(func(v *SSISAccessCredential) SSISAccessCredential { return *v }).(SSISAccessCredentialOutput)
}

// Domain for windows authentication.
func (o SSISAccessCredentialPtrOutput) Domain() pulumi.AnyOutput {
	return o.ApplyT(func(v *SSISAccessCredential) interface{} {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.AnyOutput)
}

// Password for windows authentication.
func (o SSISAccessCredentialPtrOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v *SSISAccessCredential) interface{} {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.AnyOutput)
}

// UseName for windows authentication.
func (o SSISAccessCredentialPtrOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v *SSISAccessCredential) interface{} {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.AnyOutput)
}

// SSIS access credential.
type SSISAccessCredentialResponse struct {
	// Domain for windows authentication.
	Domain interface{} `pulumi:"domain"`
	// Password for windows authentication.
	Password interface{} `pulumi:"password"`
	// UseName for windows authentication.
	UserName interface{} `pulumi:"userName"`
}

// SSISAccessCredentialResponseInput is an input type that accepts SSISAccessCredentialResponseArgs and SSISAccessCredentialResponseOutput values.
// You can construct a concrete instance of `SSISAccessCredentialResponseInput` via:
//
//          SSISAccessCredentialResponseArgs{...}
type SSISAccessCredentialResponseInput interface {
	pulumi.Input

	ToSSISAccessCredentialResponseOutput() SSISAccessCredentialResponseOutput
	ToSSISAccessCredentialResponseOutputWithContext(context.Context) SSISAccessCredentialResponseOutput
}

// SSIS access credential.
type SSISAccessCredentialResponseArgs struct {
	// Domain for windows authentication.
	Domain pulumi.Input `pulumi:"domain"`
	// Password for windows authentication.
	Password pulumi.Input `pulumi:"password"`
	// UseName for windows authentication.
	UserName pulumi.Input `pulumi:"userName"`
}

func (SSISAccessCredentialResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISAccessCredentialResponse)(nil)).Elem()
}

func (i SSISAccessCredentialResponseArgs) ToSSISAccessCredentialResponseOutput() SSISAccessCredentialResponseOutput {
	return i.ToSSISAccessCredentialResponseOutputWithContext(context.Background())
}

func (i SSISAccessCredentialResponseArgs) ToSSISAccessCredentialResponseOutputWithContext(ctx context.Context) SSISAccessCredentialResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISAccessCredentialResponseOutput)
}

func (i SSISAccessCredentialResponseArgs) ToSSISAccessCredentialResponsePtrOutput() SSISAccessCredentialResponsePtrOutput {
	return i.ToSSISAccessCredentialResponsePtrOutputWithContext(context.Background())
}

func (i SSISAccessCredentialResponseArgs) ToSSISAccessCredentialResponsePtrOutputWithContext(ctx context.Context) SSISAccessCredentialResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISAccessCredentialResponseOutput).ToSSISAccessCredentialResponsePtrOutputWithContext(ctx)
}

// SSISAccessCredentialResponsePtrInput is an input type that accepts SSISAccessCredentialResponseArgs, SSISAccessCredentialResponsePtr and SSISAccessCredentialResponsePtrOutput values.
// You can construct a concrete instance of `SSISAccessCredentialResponsePtrInput` via:
//
//          SSISAccessCredentialResponseArgs{...}
//
//  or:
//
//          nil
type SSISAccessCredentialResponsePtrInput interface {
	pulumi.Input

	ToSSISAccessCredentialResponsePtrOutput() SSISAccessCredentialResponsePtrOutput
	ToSSISAccessCredentialResponsePtrOutputWithContext(context.Context) SSISAccessCredentialResponsePtrOutput
}

type ssisaccessCredentialResponsePtrType SSISAccessCredentialResponseArgs

func SSISAccessCredentialResponsePtr(v *SSISAccessCredentialResponseArgs) SSISAccessCredentialResponsePtrInput {
	return (*ssisaccessCredentialResponsePtrType)(v)
}

func (*ssisaccessCredentialResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SSISAccessCredentialResponse)(nil)).Elem()
}

func (i *ssisaccessCredentialResponsePtrType) ToSSISAccessCredentialResponsePtrOutput() SSISAccessCredentialResponsePtrOutput {
	return i.ToSSISAccessCredentialResponsePtrOutputWithContext(context.Background())
}

func (i *ssisaccessCredentialResponsePtrType) ToSSISAccessCredentialResponsePtrOutputWithContext(ctx context.Context) SSISAccessCredentialResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISAccessCredentialResponsePtrOutput)
}

// SSIS access credential.
type SSISAccessCredentialResponseOutput struct{ *pulumi.OutputState }

func (SSISAccessCredentialResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISAccessCredentialResponse)(nil)).Elem()
}

func (o SSISAccessCredentialResponseOutput) ToSSISAccessCredentialResponseOutput() SSISAccessCredentialResponseOutput {
	return o
}

func (o SSISAccessCredentialResponseOutput) ToSSISAccessCredentialResponseOutputWithContext(ctx context.Context) SSISAccessCredentialResponseOutput {
	return o
}

func (o SSISAccessCredentialResponseOutput) ToSSISAccessCredentialResponsePtrOutput() SSISAccessCredentialResponsePtrOutput {
	return o.ToSSISAccessCredentialResponsePtrOutputWithContext(context.Background())
}

func (o SSISAccessCredentialResponseOutput) ToSSISAccessCredentialResponsePtrOutputWithContext(ctx context.Context) SSISAccessCredentialResponsePtrOutput {
	return o.ApplyT(func(v SSISAccessCredentialResponse) *SSISAccessCredentialResponse {
		return &v
	}).(SSISAccessCredentialResponsePtrOutput)
}

// Domain for windows authentication.
func (o SSISAccessCredentialResponseOutput) Domain() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISAccessCredentialResponse) interface{} { return v.Domain }).(pulumi.AnyOutput)
}

// Password for windows authentication.
func (o SSISAccessCredentialResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISAccessCredentialResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// UseName for windows authentication.
func (o SSISAccessCredentialResponseOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISAccessCredentialResponse) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

type SSISAccessCredentialResponsePtrOutput struct{ *pulumi.OutputState }

func (SSISAccessCredentialResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSISAccessCredentialResponse)(nil)).Elem()
}

func (o SSISAccessCredentialResponsePtrOutput) ToSSISAccessCredentialResponsePtrOutput() SSISAccessCredentialResponsePtrOutput {
	return o
}

func (o SSISAccessCredentialResponsePtrOutput) ToSSISAccessCredentialResponsePtrOutputWithContext(ctx context.Context) SSISAccessCredentialResponsePtrOutput {
	return o
}

func (o SSISAccessCredentialResponsePtrOutput) Elem() SSISAccessCredentialResponseOutput {
	return o.ApplyT(func(v *SSISAccessCredentialResponse) SSISAccessCredentialResponse { return *v }).(SSISAccessCredentialResponseOutput)
}

// Domain for windows authentication.
func (o SSISAccessCredentialResponsePtrOutput) Domain() pulumi.AnyOutput {
	return o.ApplyT(func(v *SSISAccessCredentialResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.AnyOutput)
}

// Password for windows authentication.
func (o SSISAccessCredentialResponsePtrOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v *SSISAccessCredentialResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.AnyOutput)
}

// UseName for windows authentication.
func (o SSISAccessCredentialResponsePtrOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v *SSISAccessCredentialResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.AnyOutput)
}

// SSIS package execution credential.
type SSISExecutionCredential struct {
	// Domain for windows authentication.
	Domain interface{} `pulumi:"domain"`
	// Password for windows authentication.
	Password SecureString `pulumi:"password"`
	// UseName for windows authentication.
	UserName interface{} `pulumi:"userName"`
}

// SSISExecutionCredentialInput is an input type that accepts SSISExecutionCredentialArgs and SSISExecutionCredentialOutput values.
// You can construct a concrete instance of `SSISExecutionCredentialInput` via:
//
//          SSISExecutionCredentialArgs{...}
type SSISExecutionCredentialInput interface {
	pulumi.Input

	ToSSISExecutionCredentialOutput() SSISExecutionCredentialOutput
	ToSSISExecutionCredentialOutputWithContext(context.Context) SSISExecutionCredentialOutput
}

// SSIS package execution credential.
type SSISExecutionCredentialArgs struct {
	// Domain for windows authentication.
	Domain pulumi.Input `pulumi:"domain"`
	// Password for windows authentication.
	Password SecureStringInput `pulumi:"password"`
	// UseName for windows authentication.
	UserName pulumi.Input `pulumi:"userName"`
}

func (SSISExecutionCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISExecutionCredential)(nil)).Elem()
}

func (i SSISExecutionCredentialArgs) ToSSISExecutionCredentialOutput() SSISExecutionCredentialOutput {
	return i.ToSSISExecutionCredentialOutputWithContext(context.Background())
}

func (i SSISExecutionCredentialArgs) ToSSISExecutionCredentialOutputWithContext(ctx context.Context) SSISExecutionCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISExecutionCredentialOutput)
}

func (i SSISExecutionCredentialArgs) ToSSISExecutionCredentialPtrOutput() SSISExecutionCredentialPtrOutput {
	return i.ToSSISExecutionCredentialPtrOutputWithContext(context.Background())
}

func (i SSISExecutionCredentialArgs) ToSSISExecutionCredentialPtrOutputWithContext(ctx context.Context) SSISExecutionCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISExecutionCredentialOutput).ToSSISExecutionCredentialPtrOutputWithContext(ctx)
}

// SSISExecutionCredentialPtrInput is an input type that accepts SSISExecutionCredentialArgs, SSISExecutionCredentialPtr and SSISExecutionCredentialPtrOutput values.
// You can construct a concrete instance of `SSISExecutionCredentialPtrInput` via:
//
//          SSISExecutionCredentialArgs{...}
//
//  or:
//
//          nil
type SSISExecutionCredentialPtrInput interface {
	pulumi.Input

	ToSSISExecutionCredentialPtrOutput() SSISExecutionCredentialPtrOutput
	ToSSISExecutionCredentialPtrOutputWithContext(context.Context) SSISExecutionCredentialPtrOutput
}

type ssisexecutionCredentialPtrType SSISExecutionCredentialArgs

func SSISExecutionCredentialPtr(v *SSISExecutionCredentialArgs) SSISExecutionCredentialPtrInput {
	return (*ssisexecutionCredentialPtrType)(v)
}

func (*ssisexecutionCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SSISExecutionCredential)(nil)).Elem()
}

func (i *ssisexecutionCredentialPtrType) ToSSISExecutionCredentialPtrOutput() SSISExecutionCredentialPtrOutput {
	return i.ToSSISExecutionCredentialPtrOutputWithContext(context.Background())
}

func (i *ssisexecutionCredentialPtrType) ToSSISExecutionCredentialPtrOutputWithContext(ctx context.Context) SSISExecutionCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISExecutionCredentialPtrOutput)
}

// SSIS package execution credential.
type SSISExecutionCredentialOutput struct{ *pulumi.OutputState }

func (SSISExecutionCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISExecutionCredential)(nil)).Elem()
}

func (o SSISExecutionCredentialOutput) ToSSISExecutionCredentialOutput() SSISExecutionCredentialOutput {
	return o
}

func (o SSISExecutionCredentialOutput) ToSSISExecutionCredentialOutputWithContext(ctx context.Context) SSISExecutionCredentialOutput {
	return o
}

func (o SSISExecutionCredentialOutput) ToSSISExecutionCredentialPtrOutput() SSISExecutionCredentialPtrOutput {
	return o.ToSSISExecutionCredentialPtrOutputWithContext(context.Background())
}

func (o SSISExecutionCredentialOutput) ToSSISExecutionCredentialPtrOutputWithContext(ctx context.Context) SSISExecutionCredentialPtrOutput {
	return o.ApplyT(func(v SSISExecutionCredential) *SSISExecutionCredential {
		return &v
	}).(SSISExecutionCredentialPtrOutput)
}

// Domain for windows authentication.
func (o SSISExecutionCredentialOutput) Domain() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISExecutionCredential) interface{} { return v.Domain }).(pulumi.AnyOutput)
}

// Password for windows authentication.
func (o SSISExecutionCredentialOutput) Password() SecureStringOutput {
	return o.ApplyT(func(v SSISExecutionCredential) SecureString { return v.Password }).(SecureStringOutput)
}

// UseName for windows authentication.
func (o SSISExecutionCredentialOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISExecutionCredential) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

type SSISExecutionCredentialPtrOutput struct{ *pulumi.OutputState }

func (SSISExecutionCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSISExecutionCredential)(nil)).Elem()
}

func (o SSISExecutionCredentialPtrOutput) ToSSISExecutionCredentialPtrOutput() SSISExecutionCredentialPtrOutput {
	return o
}

func (o SSISExecutionCredentialPtrOutput) ToSSISExecutionCredentialPtrOutputWithContext(ctx context.Context) SSISExecutionCredentialPtrOutput {
	return o
}

func (o SSISExecutionCredentialPtrOutput) Elem() SSISExecutionCredentialOutput {
	return o.ApplyT(func(v *SSISExecutionCredential) SSISExecutionCredential { return *v }).(SSISExecutionCredentialOutput)
}

// Domain for windows authentication.
func (o SSISExecutionCredentialPtrOutput) Domain() pulumi.AnyOutput {
	return o.ApplyT(func(v *SSISExecutionCredential) interface{} {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.AnyOutput)
}

// Password for windows authentication.
func (o SSISExecutionCredentialPtrOutput) Password() SecureStringPtrOutput {
	return o.ApplyT(func(v *SSISExecutionCredential) *SecureString {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(SecureStringPtrOutput)
}

// UseName for windows authentication.
func (o SSISExecutionCredentialPtrOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v *SSISExecutionCredential) interface{} {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.AnyOutput)
}

// SSIS package execution credential.
type SSISExecutionCredentialResponse struct {
	// Domain for windows authentication.
	Domain interface{} `pulumi:"domain"`
	// Password for windows authentication.
	Password SecureStringResponse `pulumi:"password"`
	// UseName for windows authentication.
	UserName interface{} `pulumi:"userName"`
}

// SSISExecutionCredentialResponseInput is an input type that accepts SSISExecutionCredentialResponseArgs and SSISExecutionCredentialResponseOutput values.
// You can construct a concrete instance of `SSISExecutionCredentialResponseInput` via:
//
//          SSISExecutionCredentialResponseArgs{...}
type SSISExecutionCredentialResponseInput interface {
	pulumi.Input

	ToSSISExecutionCredentialResponseOutput() SSISExecutionCredentialResponseOutput
	ToSSISExecutionCredentialResponseOutputWithContext(context.Context) SSISExecutionCredentialResponseOutput
}

// SSIS package execution credential.
type SSISExecutionCredentialResponseArgs struct {
	// Domain for windows authentication.
	Domain pulumi.Input `pulumi:"domain"`
	// Password for windows authentication.
	Password SecureStringResponseInput `pulumi:"password"`
	// UseName for windows authentication.
	UserName pulumi.Input `pulumi:"userName"`
}

func (SSISExecutionCredentialResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISExecutionCredentialResponse)(nil)).Elem()
}

func (i SSISExecutionCredentialResponseArgs) ToSSISExecutionCredentialResponseOutput() SSISExecutionCredentialResponseOutput {
	return i.ToSSISExecutionCredentialResponseOutputWithContext(context.Background())
}

func (i SSISExecutionCredentialResponseArgs) ToSSISExecutionCredentialResponseOutputWithContext(ctx context.Context) SSISExecutionCredentialResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISExecutionCredentialResponseOutput)
}

func (i SSISExecutionCredentialResponseArgs) ToSSISExecutionCredentialResponsePtrOutput() SSISExecutionCredentialResponsePtrOutput {
	return i.ToSSISExecutionCredentialResponsePtrOutputWithContext(context.Background())
}

func (i SSISExecutionCredentialResponseArgs) ToSSISExecutionCredentialResponsePtrOutputWithContext(ctx context.Context) SSISExecutionCredentialResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISExecutionCredentialResponseOutput).ToSSISExecutionCredentialResponsePtrOutputWithContext(ctx)
}

// SSISExecutionCredentialResponsePtrInput is an input type that accepts SSISExecutionCredentialResponseArgs, SSISExecutionCredentialResponsePtr and SSISExecutionCredentialResponsePtrOutput values.
// You can construct a concrete instance of `SSISExecutionCredentialResponsePtrInput` via:
//
//          SSISExecutionCredentialResponseArgs{...}
//
//  or:
//
//          nil
type SSISExecutionCredentialResponsePtrInput interface {
	pulumi.Input

	ToSSISExecutionCredentialResponsePtrOutput() SSISExecutionCredentialResponsePtrOutput
	ToSSISExecutionCredentialResponsePtrOutputWithContext(context.Context) SSISExecutionCredentialResponsePtrOutput
}

type ssisexecutionCredentialResponsePtrType SSISExecutionCredentialResponseArgs

func SSISExecutionCredentialResponsePtr(v *SSISExecutionCredentialResponseArgs) SSISExecutionCredentialResponsePtrInput {
	return (*ssisexecutionCredentialResponsePtrType)(v)
}

func (*ssisexecutionCredentialResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SSISExecutionCredentialResponse)(nil)).Elem()
}

func (i *ssisexecutionCredentialResponsePtrType) ToSSISExecutionCredentialResponsePtrOutput() SSISExecutionCredentialResponsePtrOutput {
	return i.ToSSISExecutionCredentialResponsePtrOutputWithContext(context.Background())
}

func (i *ssisexecutionCredentialResponsePtrType) ToSSISExecutionCredentialResponsePtrOutputWithContext(ctx context.Context) SSISExecutionCredentialResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISExecutionCredentialResponsePtrOutput)
}

// SSIS package execution credential.
type SSISExecutionCredentialResponseOutput struct{ *pulumi.OutputState }

func (SSISExecutionCredentialResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISExecutionCredentialResponse)(nil)).Elem()
}

func (o SSISExecutionCredentialResponseOutput) ToSSISExecutionCredentialResponseOutput() SSISExecutionCredentialResponseOutput {
	return o
}

func (o SSISExecutionCredentialResponseOutput) ToSSISExecutionCredentialResponseOutputWithContext(ctx context.Context) SSISExecutionCredentialResponseOutput {
	return o
}

func (o SSISExecutionCredentialResponseOutput) ToSSISExecutionCredentialResponsePtrOutput() SSISExecutionCredentialResponsePtrOutput {
	return o.ToSSISExecutionCredentialResponsePtrOutputWithContext(context.Background())
}

func (o SSISExecutionCredentialResponseOutput) ToSSISExecutionCredentialResponsePtrOutputWithContext(ctx context.Context) SSISExecutionCredentialResponsePtrOutput {
	return o.ApplyT(func(v SSISExecutionCredentialResponse) *SSISExecutionCredentialResponse {
		return &v
	}).(SSISExecutionCredentialResponsePtrOutput)
}

// Domain for windows authentication.
func (o SSISExecutionCredentialResponseOutput) Domain() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISExecutionCredentialResponse) interface{} { return v.Domain }).(pulumi.AnyOutput)
}

// Password for windows authentication.
func (o SSISExecutionCredentialResponseOutput) Password() SecureStringResponseOutput {
	return o.ApplyT(func(v SSISExecutionCredentialResponse) SecureStringResponse { return v.Password }).(SecureStringResponseOutput)
}

// UseName for windows authentication.
func (o SSISExecutionCredentialResponseOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISExecutionCredentialResponse) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

type SSISExecutionCredentialResponsePtrOutput struct{ *pulumi.OutputState }

func (SSISExecutionCredentialResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSISExecutionCredentialResponse)(nil)).Elem()
}

func (o SSISExecutionCredentialResponsePtrOutput) ToSSISExecutionCredentialResponsePtrOutput() SSISExecutionCredentialResponsePtrOutput {
	return o
}

func (o SSISExecutionCredentialResponsePtrOutput) ToSSISExecutionCredentialResponsePtrOutputWithContext(ctx context.Context) SSISExecutionCredentialResponsePtrOutput {
	return o
}

func (o SSISExecutionCredentialResponsePtrOutput) Elem() SSISExecutionCredentialResponseOutput {
	return o.ApplyT(func(v *SSISExecutionCredentialResponse) SSISExecutionCredentialResponse { return *v }).(SSISExecutionCredentialResponseOutput)
}

// Domain for windows authentication.
func (o SSISExecutionCredentialResponsePtrOutput) Domain() pulumi.AnyOutput {
	return o.ApplyT(func(v *SSISExecutionCredentialResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.AnyOutput)
}

// Password for windows authentication.
func (o SSISExecutionCredentialResponsePtrOutput) Password() SecureStringResponsePtrOutput {
	return o.ApplyT(func(v *SSISExecutionCredentialResponse) *SecureStringResponse {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(SecureStringResponsePtrOutput)
}

// UseName for windows authentication.
func (o SSISExecutionCredentialResponsePtrOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v *SSISExecutionCredentialResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.AnyOutput)
}

// SSIS execution parameter.
type SSISExecutionParameter struct {
	// SSIS package execution parameter value. Type: string (or Expression with resultType string).
	Value interface{} `pulumi:"value"`
}

// SSISExecutionParameterInput is an input type that accepts SSISExecutionParameterArgs and SSISExecutionParameterOutput values.
// You can construct a concrete instance of `SSISExecutionParameterInput` via:
//
//          SSISExecutionParameterArgs{...}
type SSISExecutionParameterInput interface {
	pulumi.Input

	ToSSISExecutionParameterOutput() SSISExecutionParameterOutput
	ToSSISExecutionParameterOutputWithContext(context.Context) SSISExecutionParameterOutput
}

// SSIS execution parameter.
type SSISExecutionParameterArgs struct {
	// SSIS package execution parameter value. Type: string (or Expression with resultType string).
	Value pulumi.Input `pulumi:"value"`
}

func (SSISExecutionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISExecutionParameter)(nil)).Elem()
}

func (i SSISExecutionParameterArgs) ToSSISExecutionParameterOutput() SSISExecutionParameterOutput {
	return i.ToSSISExecutionParameterOutputWithContext(context.Background())
}

func (i SSISExecutionParameterArgs) ToSSISExecutionParameterOutputWithContext(ctx context.Context) SSISExecutionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISExecutionParameterOutput)
}

// SSISExecutionParameterMapInput is an input type that accepts SSISExecutionParameterMap and SSISExecutionParameterMapOutput values.
// You can construct a concrete instance of `SSISExecutionParameterMapInput` via:
//
//          SSISExecutionParameterMap{ "key": SSISExecutionParameterArgs{...} }
type SSISExecutionParameterMapInput interface {
	pulumi.Input

	ToSSISExecutionParameterMapOutput() SSISExecutionParameterMapOutput
	ToSSISExecutionParameterMapOutputWithContext(context.Context) SSISExecutionParameterMapOutput
}

type SSISExecutionParameterMap map[string]SSISExecutionParameterInput

func (SSISExecutionParameterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SSISExecutionParameter)(nil)).Elem()
}

func (i SSISExecutionParameterMap) ToSSISExecutionParameterMapOutput() SSISExecutionParameterMapOutput {
	return i.ToSSISExecutionParameterMapOutputWithContext(context.Background())
}

func (i SSISExecutionParameterMap) ToSSISExecutionParameterMapOutputWithContext(ctx context.Context) SSISExecutionParameterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISExecutionParameterMapOutput)
}

// SSIS execution parameter.
type SSISExecutionParameterOutput struct{ *pulumi.OutputState }

func (SSISExecutionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISExecutionParameter)(nil)).Elem()
}

func (o SSISExecutionParameterOutput) ToSSISExecutionParameterOutput() SSISExecutionParameterOutput {
	return o
}

func (o SSISExecutionParameterOutput) ToSSISExecutionParameterOutputWithContext(ctx context.Context) SSISExecutionParameterOutput {
	return o
}

// SSIS package execution parameter value. Type: string (or Expression with resultType string).
func (o SSISExecutionParameterOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISExecutionParameter) interface{} { return v.Value }).(pulumi.AnyOutput)
}

type SSISExecutionParameterMapOutput struct{ *pulumi.OutputState }

func (SSISExecutionParameterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SSISExecutionParameter)(nil)).Elem()
}

func (o SSISExecutionParameterMapOutput) ToSSISExecutionParameterMapOutput() SSISExecutionParameterMapOutput {
	return o
}

func (o SSISExecutionParameterMapOutput) ToSSISExecutionParameterMapOutputWithContext(ctx context.Context) SSISExecutionParameterMapOutput {
	return o
}

func (o SSISExecutionParameterMapOutput) MapIndex(k pulumi.StringInput) SSISExecutionParameterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SSISExecutionParameter {
		return vs[0].(map[string]SSISExecutionParameter)[vs[1].(string)]
	}).(SSISExecutionParameterOutput)
}

// SSIS execution parameter.
type SSISExecutionParameterResponse struct {
	// SSIS package execution parameter value. Type: string (or Expression with resultType string).
	Value interface{} `pulumi:"value"`
}

// SSISExecutionParameterResponseInput is an input type that accepts SSISExecutionParameterResponseArgs and SSISExecutionParameterResponseOutput values.
// You can construct a concrete instance of `SSISExecutionParameterResponseInput` via:
//
//          SSISExecutionParameterResponseArgs{...}
type SSISExecutionParameterResponseInput interface {
	pulumi.Input

	ToSSISExecutionParameterResponseOutput() SSISExecutionParameterResponseOutput
	ToSSISExecutionParameterResponseOutputWithContext(context.Context) SSISExecutionParameterResponseOutput
}

// SSIS execution parameter.
type SSISExecutionParameterResponseArgs struct {
	// SSIS package execution parameter value. Type: string (or Expression with resultType string).
	Value pulumi.Input `pulumi:"value"`
}

func (SSISExecutionParameterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISExecutionParameterResponse)(nil)).Elem()
}

func (i SSISExecutionParameterResponseArgs) ToSSISExecutionParameterResponseOutput() SSISExecutionParameterResponseOutput {
	return i.ToSSISExecutionParameterResponseOutputWithContext(context.Background())
}

func (i SSISExecutionParameterResponseArgs) ToSSISExecutionParameterResponseOutputWithContext(ctx context.Context) SSISExecutionParameterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISExecutionParameterResponseOutput)
}

// SSISExecutionParameterResponseMapInput is an input type that accepts SSISExecutionParameterResponseMap and SSISExecutionParameterResponseMapOutput values.
// You can construct a concrete instance of `SSISExecutionParameterResponseMapInput` via:
//
//          SSISExecutionParameterResponseMap{ "key": SSISExecutionParameterResponseArgs{...} }
type SSISExecutionParameterResponseMapInput interface {
	pulumi.Input

	ToSSISExecutionParameterResponseMapOutput() SSISExecutionParameterResponseMapOutput
	ToSSISExecutionParameterResponseMapOutputWithContext(context.Context) SSISExecutionParameterResponseMapOutput
}

type SSISExecutionParameterResponseMap map[string]SSISExecutionParameterResponseInput

func (SSISExecutionParameterResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SSISExecutionParameterResponse)(nil)).Elem()
}

func (i SSISExecutionParameterResponseMap) ToSSISExecutionParameterResponseMapOutput() SSISExecutionParameterResponseMapOutput {
	return i.ToSSISExecutionParameterResponseMapOutputWithContext(context.Background())
}

func (i SSISExecutionParameterResponseMap) ToSSISExecutionParameterResponseMapOutputWithContext(ctx context.Context) SSISExecutionParameterResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISExecutionParameterResponseMapOutput)
}

// SSIS execution parameter.
type SSISExecutionParameterResponseOutput struct{ *pulumi.OutputState }

func (SSISExecutionParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISExecutionParameterResponse)(nil)).Elem()
}

func (o SSISExecutionParameterResponseOutput) ToSSISExecutionParameterResponseOutput() SSISExecutionParameterResponseOutput {
	return o
}

func (o SSISExecutionParameterResponseOutput) ToSSISExecutionParameterResponseOutputWithContext(ctx context.Context) SSISExecutionParameterResponseOutput {
	return o
}

// SSIS package execution parameter value. Type: string (or Expression with resultType string).
func (o SSISExecutionParameterResponseOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISExecutionParameterResponse) interface{} { return v.Value }).(pulumi.AnyOutput)
}

type SSISExecutionParameterResponseMapOutput struct{ *pulumi.OutputState }

func (SSISExecutionParameterResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SSISExecutionParameterResponse)(nil)).Elem()
}

func (o SSISExecutionParameterResponseMapOutput) ToSSISExecutionParameterResponseMapOutput() SSISExecutionParameterResponseMapOutput {
	return o
}

func (o SSISExecutionParameterResponseMapOutput) ToSSISExecutionParameterResponseMapOutputWithContext(ctx context.Context) SSISExecutionParameterResponseMapOutput {
	return o
}

func (o SSISExecutionParameterResponseMapOutput) MapIndex(k pulumi.StringInput) SSISExecutionParameterResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SSISExecutionParameterResponse {
		return vs[0].(map[string]SSISExecutionParameterResponse)[vs[1].(string)]
	}).(SSISExecutionParameterResponseOutput)
}

// SSIS package execution log location
type SSISLogLocation struct {
	// The package execution log access credential.
	AccessCredential *SSISAccessCredential `pulumi:"accessCredential"`
	// The SSIS package execution log path. Type: string (or Expression with resultType string).
	LogPath interface{} `pulumi:"logPath"`
	// Specifies the interval to refresh log. The default interval is 5 minutes. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	LogRefreshInterval interface{} `pulumi:"logRefreshInterval"`
	// The type of SSIS log location.
	Type string `pulumi:"type"`
}

// SSISLogLocationInput is an input type that accepts SSISLogLocationArgs and SSISLogLocationOutput values.
// You can construct a concrete instance of `SSISLogLocationInput` via:
//
//          SSISLogLocationArgs{...}
type SSISLogLocationInput interface {
	pulumi.Input

	ToSSISLogLocationOutput() SSISLogLocationOutput
	ToSSISLogLocationOutputWithContext(context.Context) SSISLogLocationOutput
}

// SSIS package execution log location
type SSISLogLocationArgs struct {
	// The package execution log access credential.
	AccessCredential SSISAccessCredentialPtrInput `pulumi:"accessCredential"`
	// The SSIS package execution log path. Type: string (or Expression with resultType string).
	LogPath pulumi.Input `pulumi:"logPath"`
	// Specifies the interval to refresh log. The default interval is 5 minutes. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	LogRefreshInterval pulumi.Input `pulumi:"logRefreshInterval"`
	// The type of SSIS log location.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SSISLogLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISLogLocation)(nil)).Elem()
}

func (i SSISLogLocationArgs) ToSSISLogLocationOutput() SSISLogLocationOutput {
	return i.ToSSISLogLocationOutputWithContext(context.Background())
}

func (i SSISLogLocationArgs) ToSSISLogLocationOutputWithContext(ctx context.Context) SSISLogLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISLogLocationOutput)
}

func (i SSISLogLocationArgs) ToSSISLogLocationPtrOutput() SSISLogLocationPtrOutput {
	return i.ToSSISLogLocationPtrOutputWithContext(context.Background())
}

func (i SSISLogLocationArgs) ToSSISLogLocationPtrOutputWithContext(ctx context.Context) SSISLogLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISLogLocationOutput).ToSSISLogLocationPtrOutputWithContext(ctx)
}

// SSISLogLocationPtrInput is an input type that accepts SSISLogLocationArgs, SSISLogLocationPtr and SSISLogLocationPtrOutput values.
// You can construct a concrete instance of `SSISLogLocationPtrInput` via:
//
//          SSISLogLocationArgs{...}
//
//  or:
//
//          nil
type SSISLogLocationPtrInput interface {
	pulumi.Input

	ToSSISLogLocationPtrOutput() SSISLogLocationPtrOutput
	ToSSISLogLocationPtrOutputWithContext(context.Context) SSISLogLocationPtrOutput
}

type ssislogLocationPtrType SSISLogLocationArgs

func SSISLogLocationPtr(v *SSISLogLocationArgs) SSISLogLocationPtrInput {
	return (*ssislogLocationPtrType)(v)
}

func (*ssislogLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SSISLogLocation)(nil)).Elem()
}

func (i *ssislogLocationPtrType) ToSSISLogLocationPtrOutput() SSISLogLocationPtrOutput {
	return i.ToSSISLogLocationPtrOutputWithContext(context.Background())
}

func (i *ssislogLocationPtrType) ToSSISLogLocationPtrOutputWithContext(ctx context.Context) SSISLogLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISLogLocationPtrOutput)
}

// SSIS package execution log location
type SSISLogLocationOutput struct{ *pulumi.OutputState }

func (SSISLogLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISLogLocation)(nil)).Elem()
}

func (o SSISLogLocationOutput) ToSSISLogLocationOutput() SSISLogLocationOutput {
	return o
}

func (o SSISLogLocationOutput) ToSSISLogLocationOutputWithContext(ctx context.Context) SSISLogLocationOutput {
	return o
}

func (o SSISLogLocationOutput) ToSSISLogLocationPtrOutput() SSISLogLocationPtrOutput {
	return o.ToSSISLogLocationPtrOutputWithContext(context.Background())
}

func (o SSISLogLocationOutput) ToSSISLogLocationPtrOutputWithContext(ctx context.Context) SSISLogLocationPtrOutput {
	return o.ApplyT(func(v SSISLogLocation) *SSISLogLocation {
		return &v
	}).(SSISLogLocationPtrOutput)
}

// The package execution log access credential.
func (o SSISLogLocationOutput) AccessCredential() SSISAccessCredentialPtrOutput {
	return o.ApplyT(func(v SSISLogLocation) *SSISAccessCredential { return v.AccessCredential }).(SSISAccessCredentialPtrOutput)
}

// The SSIS package execution log path. Type: string (or Expression with resultType string).
func (o SSISLogLocationOutput) LogPath() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISLogLocation) interface{} { return v.LogPath }).(pulumi.AnyOutput)
}

// Specifies the interval to refresh log. The default interval is 5 minutes. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SSISLogLocationOutput) LogRefreshInterval() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISLogLocation) interface{} { return v.LogRefreshInterval }).(pulumi.AnyOutput)
}

// The type of SSIS log location.
func (o SSISLogLocationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SSISLogLocation) string { return v.Type }).(pulumi.StringOutput)
}

type SSISLogLocationPtrOutput struct{ *pulumi.OutputState }

func (SSISLogLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSISLogLocation)(nil)).Elem()
}

func (o SSISLogLocationPtrOutput) ToSSISLogLocationPtrOutput() SSISLogLocationPtrOutput {
	return o
}

func (o SSISLogLocationPtrOutput) ToSSISLogLocationPtrOutputWithContext(ctx context.Context) SSISLogLocationPtrOutput {
	return o
}

func (o SSISLogLocationPtrOutput) Elem() SSISLogLocationOutput {
	return o.ApplyT(func(v *SSISLogLocation) SSISLogLocation { return *v }).(SSISLogLocationOutput)
}

// The package execution log access credential.
func (o SSISLogLocationPtrOutput) AccessCredential() SSISAccessCredentialPtrOutput {
	return o.ApplyT(func(v *SSISLogLocation) *SSISAccessCredential {
		if v == nil {
			return nil
		}
		return v.AccessCredential
	}).(SSISAccessCredentialPtrOutput)
}

// The SSIS package execution log path. Type: string (or Expression with resultType string).
func (o SSISLogLocationPtrOutput) LogPath() pulumi.AnyOutput {
	return o.ApplyT(func(v *SSISLogLocation) interface{} {
		if v == nil {
			return nil
		}
		return v.LogPath
	}).(pulumi.AnyOutput)
}

// Specifies the interval to refresh log. The default interval is 5 minutes. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SSISLogLocationPtrOutput) LogRefreshInterval() pulumi.AnyOutput {
	return o.ApplyT(func(v *SSISLogLocation) interface{} {
		if v == nil {
			return nil
		}
		return v.LogRefreshInterval
	}).(pulumi.AnyOutput)
}

// The type of SSIS log location.
func (o SSISLogLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SSISLogLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// SSIS package execution log location
type SSISLogLocationResponse struct {
	// The package execution log access credential.
	AccessCredential *SSISAccessCredentialResponse `pulumi:"accessCredential"`
	// The SSIS package execution log path. Type: string (or Expression with resultType string).
	LogPath interface{} `pulumi:"logPath"`
	// Specifies the interval to refresh log. The default interval is 5 minutes. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	LogRefreshInterval interface{} `pulumi:"logRefreshInterval"`
	// The type of SSIS log location.
	Type string `pulumi:"type"`
}

// SSISLogLocationResponseInput is an input type that accepts SSISLogLocationResponseArgs and SSISLogLocationResponseOutput values.
// You can construct a concrete instance of `SSISLogLocationResponseInput` via:
//
//          SSISLogLocationResponseArgs{...}
type SSISLogLocationResponseInput interface {
	pulumi.Input

	ToSSISLogLocationResponseOutput() SSISLogLocationResponseOutput
	ToSSISLogLocationResponseOutputWithContext(context.Context) SSISLogLocationResponseOutput
}

// SSIS package execution log location
type SSISLogLocationResponseArgs struct {
	// The package execution log access credential.
	AccessCredential SSISAccessCredentialResponsePtrInput `pulumi:"accessCredential"`
	// The SSIS package execution log path. Type: string (or Expression with resultType string).
	LogPath pulumi.Input `pulumi:"logPath"`
	// Specifies the interval to refresh log. The default interval is 5 minutes. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	LogRefreshInterval pulumi.Input `pulumi:"logRefreshInterval"`
	// The type of SSIS log location.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SSISLogLocationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISLogLocationResponse)(nil)).Elem()
}

func (i SSISLogLocationResponseArgs) ToSSISLogLocationResponseOutput() SSISLogLocationResponseOutput {
	return i.ToSSISLogLocationResponseOutputWithContext(context.Background())
}

func (i SSISLogLocationResponseArgs) ToSSISLogLocationResponseOutputWithContext(ctx context.Context) SSISLogLocationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISLogLocationResponseOutput)
}

func (i SSISLogLocationResponseArgs) ToSSISLogLocationResponsePtrOutput() SSISLogLocationResponsePtrOutput {
	return i.ToSSISLogLocationResponsePtrOutputWithContext(context.Background())
}

func (i SSISLogLocationResponseArgs) ToSSISLogLocationResponsePtrOutputWithContext(ctx context.Context) SSISLogLocationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISLogLocationResponseOutput).ToSSISLogLocationResponsePtrOutputWithContext(ctx)
}

// SSISLogLocationResponsePtrInput is an input type that accepts SSISLogLocationResponseArgs, SSISLogLocationResponsePtr and SSISLogLocationResponsePtrOutput values.
// You can construct a concrete instance of `SSISLogLocationResponsePtrInput` via:
//
//          SSISLogLocationResponseArgs{...}
//
//  or:
//
//          nil
type SSISLogLocationResponsePtrInput interface {
	pulumi.Input

	ToSSISLogLocationResponsePtrOutput() SSISLogLocationResponsePtrOutput
	ToSSISLogLocationResponsePtrOutputWithContext(context.Context) SSISLogLocationResponsePtrOutput
}

type ssislogLocationResponsePtrType SSISLogLocationResponseArgs

func SSISLogLocationResponsePtr(v *SSISLogLocationResponseArgs) SSISLogLocationResponsePtrInput {
	return (*ssislogLocationResponsePtrType)(v)
}

func (*ssislogLocationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SSISLogLocationResponse)(nil)).Elem()
}

func (i *ssislogLocationResponsePtrType) ToSSISLogLocationResponsePtrOutput() SSISLogLocationResponsePtrOutput {
	return i.ToSSISLogLocationResponsePtrOutputWithContext(context.Background())
}

func (i *ssislogLocationResponsePtrType) ToSSISLogLocationResponsePtrOutputWithContext(ctx context.Context) SSISLogLocationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISLogLocationResponsePtrOutput)
}

// SSIS package execution log location
type SSISLogLocationResponseOutput struct{ *pulumi.OutputState }

func (SSISLogLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISLogLocationResponse)(nil)).Elem()
}

func (o SSISLogLocationResponseOutput) ToSSISLogLocationResponseOutput() SSISLogLocationResponseOutput {
	return o
}

func (o SSISLogLocationResponseOutput) ToSSISLogLocationResponseOutputWithContext(ctx context.Context) SSISLogLocationResponseOutput {
	return o
}

func (o SSISLogLocationResponseOutput) ToSSISLogLocationResponsePtrOutput() SSISLogLocationResponsePtrOutput {
	return o.ToSSISLogLocationResponsePtrOutputWithContext(context.Background())
}

func (o SSISLogLocationResponseOutput) ToSSISLogLocationResponsePtrOutputWithContext(ctx context.Context) SSISLogLocationResponsePtrOutput {
	return o.ApplyT(func(v SSISLogLocationResponse) *SSISLogLocationResponse {
		return &v
	}).(SSISLogLocationResponsePtrOutput)
}

// The package execution log access credential.
func (o SSISLogLocationResponseOutput) AccessCredential() SSISAccessCredentialResponsePtrOutput {
	return o.ApplyT(func(v SSISLogLocationResponse) *SSISAccessCredentialResponse { return v.AccessCredential }).(SSISAccessCredentialResponsePtrOutput)
}

// The SSIS package execution log path. Type: string (or Expression with resultType string).
func (o SSISLogLocationResponseOutput) LogPath() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISLogLocationResponse) interface{} { return v.LogPath }).(pulumi.AnyOutput)
}

// Specifies the interval to refresh log. The default interval is 5 minutes. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SSISLogLocationResponseOutput) LogRefreshInterval() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISLogLocationResponse) interface{} { return v.LogRefreshInterval }).(pulumi.AnyOutput)
}

// The type of SSIS log location.
func (o SSISLogLocationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SSISLogLocationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type SSISLogLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (SSISLogLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSISLogLocationResponse)(nil)).Elem()
}

func (o SSISLogLocationResponsePtrOutput) ToSSISLogLocationResponsePtrOutput() SSISLogLocationResponsePtrOutput {
	return o
}

func (o SSISLogLocationResponsePtrOutput) ToSSISLogLocationResponsePtrOutputWithContext(ctx context.Context) SSISLogLocationResponsePtrOutput {
	return o
}

func (o SSISLogLocationResponsePtrOutput) Elem() SSISLogLocationResponseOutput {
	return o.ApplyT(func(v *SSISLogLocationResponse) SSISLogLocationResponse { return *v }).(SSISLogLocationResponseOutput)
}

// The package execution log access credential.
func (o SSISLogLocationResponsePtrOutput) AccessCredential() SSISAccessCredentialResponsePtrOutput {
	return o.ApplyT(func(v *SSISLogLocationResponse) *SSISAccessCredentialResponse {
		if v == nil {
			return nil
		}
		return v.AccessCredential
	}).(SSISAccessCredentialResponsePtrOutput)
}

// The SSIS package execution log path. Type: string (or Expression with resultType string).
func (o SSISLogLocationResponsePtrOutput) LogPath() pulumi.AnyOutput {
	return o.ApplyT(func(v *SSISLogLocationResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.LogPath
	}).(pulumi.AnyOutput)
}

// Specifies the interval to refresh log. The default interval is 5 minutes. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SSISLogLocationResponsePtrOutput) LogRefreshInterval() pulumi.AnyOutput {
	return o.ApplyT(func(v *SSISLogLocationResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.LogRefreshInterval
	}).(pulumi.AnyOutput)
}

// The type of SSIS log location.
func (o SSISLogLocationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SSISLogLocationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// SSIS package location.
type SSISPackageLocation struct {
	// The package access credential.
	AccessCredential *SSISAccessCredential `pulumi:"accessCredential"`
	// The configuration file of the package execution. Type: string (or Expression with resultType string).
	ConfigurationPath interface{} `pulumi:"configurationPath"`
	// Password of the package.
	PackagePassword interface{} `pulumi:"packagePassword"`
	// The SSIS package path. Type: string (or Expression with resultType string).
	PackagePath interface{} `pulumi:"packagePath"`
	// The type of SSIS package location.
	Type *string `pulumi:"type"`
}

// SSISPackageLocationInput is an input type that accepts SSISPackageLocationArgs and SSISPackageLocationOutput values.
// You can construct a concrete instance of `SSISPackageLocationInput` via:
//
//          SSISPackageLocationArgs{...}
type SSISPackageLocationInput interface {
	pulumi.Input

	ToSSISPackageLocationOutput() SSISPackageLocationOutput
	ToSSISPackageLocationOutputWithContext(context.Context) SSISPackageLocationOutput
}

// SSIS package location.
type SSISPackageLocationArgs struct {
	// The package access credential.
	AccessCredential SSISAccessCredentialPtrInput `pulumi:"accessCredential"`
	// The configuration file of the package execution. Type: string (or Expression with resultType string).
	ConfigurationPath pulumi.Input `pulumi:"configurationPath"`
	// Password of the package.
	PackagePassword pulumi.Input `pulumi:"packagePassword"`
	// The SSIS package path. Type: string (or Expression with resultType string).
	PackagePath pulumi.Input `pulumi:"packagePath"`
	// The type of SSIS package location.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SSISPackageLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISPackageLocation)(nil)).Elem()
}

func (i SSISPackageLocationArgs) ToSSISPackageLocationOutput() SSISPackageLocationOutput {
	return i.ToSSISPackageLocationOutputWithContext(context.Background())
}

func (i SSISPackageLocationArgs) ToSSISPackageLocationOutputWithContext(ctx context.Context) SSISPackageLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISPackageLocationOutput)
}

// SSIS package location.
type SSISPackageLocationOutput struct{ *pulumi.OutputState }

func (SSISPackageLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISPackageLocation)(nil)).Elem()
}

func (o SSISPackageLocationOutput) ToSSISPackageLocationOutput() SSISPackageLocationOutput {
	return o
}

func (o SSISPackageLocationOutput) ToSSISPackageLocationOutputWithContext(ctx context.Context) SSISPackageLocationOutput {
	return o
}

// The package access credential.
func (o SSISPackageLocationOutput) AccessCredential() SSISAccessCredentialPtrOutput {
	return o.ApplyT(func(v SSISPackageLocation) *SSISAccessCredential { return v.AccessCredential }).(SSISAccessCredentialPtrOutput)
}

// The configuration file of the package execution. Type: string (or Expression with resultType string).
func (o SSISPackageLocationOutput) ConfigurationPath() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISPackageLocation) interface{} { return v.ConfigurationPath }).(pulumi.AnyOutput)
}

// Password of the package.
func (o SSISPackageLocationOutput) PackagePassword() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISPackageLocation) interface{} { return v.PackagePassword }).(pulumi.AnyOutput)
}

// The SSIS package path. Type: string (or Expression with resultType string).
func (o SSISPackageLocationOutput) PackagePath() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISPackageLocation) interface{} { return v.PackagePath }).(pulumi.AnyOutput)
}

// The type of SSIS package location.
func (o SSISPackageLocationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SSISPackageLocation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// SSIS package location.
type SSISPackageLocationResponse struct {
	// The package access credential.
	AccessCredential *SSISAccessCredentialResponse `pulumi:"accessCredential"`
	// The configuration file of the package execution. Type: string (or Expression with resultType string).
	ConfigurationPath interface{} `pulumi:"configurationPath"`
	// Password of the package.
	PackagePassword interface{} `pulumi:"packagePassword"`
	// The SSIS package path. Type: string (or Expression with resultType string).
	PackagePath interface{} `pulumi:"packagePath"`
	// The type of SSIS package location.
	Type *string `pulumi:"type"`
}

// SSISPackageLocationResponseInput is an input type that accepts SSISPackageLocationResponseArgs and SSISPackageLocationResponseOutput values.
// You can construct a concrete instance of `SSISPackageLocationResponseInput` via:
//
//          SSISPackageLocationResponseArgs{...}
type SSISPackageLocationResponseInput interface {
	pulumi.Input

	ToSSISPackageLocationResponseOutput() SSISPackageLocationResponseOutput
	ToSSISPackageLocationResponseOutputWithContext(context.Context) SSISPackageLocationResponseOutput
}

// SSIS package location.
type SSISPackageLocationResponseArgs struct {
	// The package access credential.
	AccessCredential SSISAccessCredentialResponsePtrInput `pulumi:"accessCredential"`
	// The configuration file of the package execution. Type: string (or Expression with resultType string).
	ConfigurationPath pulumi.Input `pulumi:"configurationPath"`
	// Password of the package.
	PackagePassword pulumi.Input `pulumi:"packagePassword"`
	// The SSIS package path. Type: string (or Expression with resultType string).
	PackagePath pulumi.Input `pulumi:"packagePath"`
	// The type of SSIS package location.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SSISPackageLocationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISPackageLocationResponse)(nil)).Elem()
}

func (i SSISPackageLocationResponseArgs) ToSSISPackageLocationResponseOutput() SSISPackageLocationResponseOutput {
	return i.ToSSISPackageLocationResponseOutputWithContext(context.Background())
}

func (i SSISPackageLocationResponseArgs) ToSSISPackageLocationResponseOutputWithContext(ctx context.Context) SSISPackageLocationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISPackageLocationResponseOutput)
}

// SSIS package location.
type SSISPackageLocationResponseOutput struct{ *pulumi.OutputState }

func (SSISPackageLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISPackageLocationResponse)(nil)).Elem()
}

func (o SSISPackageLocationResponseOutput) ToSSISPackageLocationResponseOutput() SSISPackageLocationResponseOutput {
	return o
}

func (o SSISPackageLocationResponseOutput) ToSSISPackageLocationResponseOutputWithContext(ctx context.Context) SSISPackageLocationResponseOutput {
	return o
}

// The package access credential.
func (o SSISPackageLocationResponseOutput) AccessCredential() SSISAccessCredentialResponsePtrOutput {
	return o.ApplyT(func(v SSISPackageLocationResponse) *SSISAccessCredentialResponse { return v.AccessCredential }).(SSISAccessCredentialResponsePtrOutput)
}

// The configuration file of the package execution. Type: string (or Expression with resultType string).
func (o SSISPackageLocationResponseOutput) ConfigurationPath() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISPackageLocationResponse) interface{} { return v.ConfigurationPath }).(pulumi.AnyOutput)
}

// Password of the package.
func (o SSISPackageLocationResponseOutput) PackagePassword() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISPackageLocationResponse) interface{} { return v.PackagePassword }).(pulumi.AnyOutput)
}

// The SSIS package path. Type: string (or Expression with resultType string).
func (o SSISPackageLocationResponseOutput) PackagePath() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISPackageLocationResponse) interface{} { return v.PackagePath }).(pulumi.AnyOutput)
}

// The type of SSIS package location.
func (o SSISPackageLocationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SSISPackageLocationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// SSIS property override.
type SSISPropertyOverride struct {
	// Whether SSIS package property override value is sensitive data. Value will be encrypted in SSISDB if it is true
	IsSensitive *bool `pulumi:"isSensitive"`
	// SSIS package property override value. Type: string (or Expression with resultType string).
	Value interface{} `pulumi:"value"`
}

// SSISPropertyOverrideInput is an input type that accepts SSISPropertyOverrideArgs and SSISPropertyOverrideOutput values.
// You can construct a concrete instance of `SSISPropertyOverrideInput` via:
//
//          SSISPropertyOverrideArgs{...}
type SSISPropertyOverrideInput interface {
	pulumi.Input

	ToSSISPropertyOverrideOutput() SSISPropertyOverrideOutput
	ToSSISPropertyOverrideOutputWithContext(context.Context) SSISPropertyOverrideOutput
}

// SSIS property override.
type SSISPropertyOverrideArgs struct {
	// Whether SSIS package property override value is sensitive data. Value will be encrypted in SSISDB if it is true
	IsSensitive pulumi.BoolPtrInput `pulumi:"isSensitive"`
	// SSIS package property override value. Type: string (or Expression with resultType string).
	Value pulumi.Input `pulumi:"value"`
}

func (SSISPropertyOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISPropertyOverride)(nil)).Elem()
}

func (i SSISPropertyOverrideArgs) ToSSISPropertyOverrideOutput() SSISPropertyOverrideOutput {
	return i.ToSSISPropertyOverrideOutputWithContext(context.Background())
}

func (i SSISPropertyOverrideArgs) ToSSISPropertyOverrideOutputWithContext(ctx context.Context) SSISPropertyOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISPropertyOverrideOutput)
}

// SSISPropertyOverrideMapInput is an input type that accepts SSISPropertyOverrideMap and SSISPropertyOverrideMapOutput values.
// You can construct a concrete instance of `SSISPropertyOverrideMapInput` via:
//
//          SSISPropertyOverrideMap{ "key": SSISPropertyOverrideArgs{...} }
type SSISPropertyOverrideMapInput interface {
	pulumi.Input

	ToSSISPropertyOverrideMapOutput() SSISPropertyOverrideMapOutput
	ToSSISPropertyOverrideMapOutputWithContext(context.Context) SSISPropertyOverrideMapOutput
}

type SSISPropertyOverrideMap map[string]SSISPropertyOverrideInput

func (SSISPropertyOverrideMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SSISPropertyOverride)(nil)).Elem()
}

func (i SSISPropertyOverrideMap) ToSSISPropertyOverrideMapOutput() SSISPropertyOverrideMapOutput {
	return i.ToSSISPropertyOverrideMapOutputWithContext(context.Background())
}

func (i SSISPropertyOverrideMap) ToSSISPropertyOverrideMapOutputWithContext(ctx context.Context) SSISPropertyOverrideMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISPropertyOverrideMapOutput)
}

// SSIS property override.
type SSISPropertyOverrideOutput struct{ *pulumi.OutputState }

func (SSISPropertyOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISPropertyOverride)(nil)).Elem()
}

func (o SSISPropertyOverrideOutput) ToSSISPropertyOverrideOutput() SSISPropertyOverrideOutput {
	return o
}

func (o SSISPropertyOverrideOutput) ToSSISPropertyOverrideOutputWithContext(ctx context.Context) SSISPropertyOverrideOutput {
	return o
}

// Whether SSIS package property override value is sensitive data. Value will be encrypted in SSISDB if it is true
func (o SSISPropertyOverrideOutput) IsSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SSISPropertyOverride) *bool { return v.IsSensitive }).(pulumi.BoolPtrOutput)
}

// SSIS package property override value. Type: string (or Expression with resultType string).
func (o SSISPropertyOverrideOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISPropertyOverride) interface{} { return v.Value }).(pulumi.AnyOutput)
}

type SSISPropertyOverrideMapOutput struct{ *pulumi.OutputState }

func (SSISPropertyOverrideMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SSISPropertyOverride)(nil)).Elem()
}

func (o SSISPropertyOverrideMapOutput) ToSSISPropertyOverrideMapOutput() SSISPropertyOverrideMapOutput {
	return o
}

func (o SSISPropertyOverrideMapOutput) ToSSISPropertyOverrideMapOutputWithContext(ctx context.Context) SSISPropertyOverrideMapOutput {
	return o
}

func (o SSISPropertyOverrideMapOutput) MapIndex(k pulumi.StringInput) SSISPropertyOverrideOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SSISPropertyOverride {
		return vs[0].(map[string]SSISPropertyOverride)[vs[1].(string)]
	}).(SSISPropertyOverrideOutput)
}

// SSIS property override.
type SSISPropertyOverrideResponse struct {
	// Whether SSIS package property override value is sensitive data. Value will be encrypted in SSISDB if it is true
	IsSensitive *bool `pulumi:"isSensitive"`
	// SSIS package property override value. Type: string (or Expression with resultType string).
	Value interface{} `pulumi:"value"`
}

// SSISPropertyOverrideResponseInput is an input type that accepts SSISPropertyOverrideResponseArgs and SSISPropertyOverrideResponseOutput values.
// You can construct a concrete instance of `SSISPropertyOverrideResponseInput` via:
//
//          SSISPropertyOverrideResponseArgs{...}
type SSISPropertyOverrideResponseInput interface {
	pulumi.Input

	ToSSISPropertyOverrideResponseOutput() SSISPropertyOverrideResponseOutput
	ToSSISPropertyOverrideResponseOutputWithContext(context.Context) SSISPropertyOverrideResponseOutput
}

// SSIS property override.
type SSISPropertyOverrideResponseArgs struct {
	// Whether SSIS package property override value is sensitive data. Value will be encrypted in SSISDB if it is true
	IsSensitive pulumi.BoolPtrInput `pulumi:"isSensitive"`
	// SSIS package property override value. Type: string (or Expression with resultType string).
	Value pulumi.Input `pulumi:"value"`
}

func (SSISPropertyOverrideResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISPropertyOverrideResponse)(nil)).Elem()
}

func (i SSISPropertyOverrideResponseArgs) ToSSISPropertyOverrideResponseOutput() SSISPropertyOverrideResponseOutput {
	return i.ToSSISPropertyOverrideResponseOutputWithContext(context.Background())
}

func (i SSISPropertyOverrideResponseArgs) ToSSISPropertyOverrideResponseOutputWithContext(ctx context.Context) SSISPropertyOverrideResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISPropertyOverrideResponseOutput)
}

// SSISPropertyOverrideResponseMapInput is an input type that accepts SSISPropertyOverrideResponseMap and SSISPropertyOverrideResponseMapOutput values.
// You can construct a concrete instance of `SSISPropertyOverrideResponseMapInput` via:
//
//          SSISPropertyOverrideResponseMap{ "key": SSISPropertyOverrideResponseArgs{...} }
type SSISPropertyOverrideResponseMapInput interface {
	pulumi.Input

	ToSSISPropertyOverrideResponseMapOutput() SSISPropertyOverrideResponseMapOutput
	ToSSISPropertyOverrideResponseMapOutputWithContext(context.Context) SSISPropertyOverrideResponseMapOutput
}

type SSISPropertyOverrideResponseMap map[string]SSISPropertyOverrideResponseInput

func (SSISPropertyOverrideResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SSISPropertyOverrideResponse)(nil)).Elem()
}

func (i SSISPropertyOverrideResponseMap) ToSSISPropertyOverrideResponseMapOutput() SSISPropertyOverrideResponseMapOutput {
	return i.ToSSISPropertyOverrideResponseMapOutputWithContext(context.Background())
}

func (i SSISPropertyOverrideResponseMap) ToSSISPropertyOverrideResponseMapOutputWithContext(ctx context.Context) SSISPropertyOverrideResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSISPropertyOverrideResponseMapOutput)
}

// SSIS property override.
type SSISPropertyOverrideResponseOutput struct{ *pulumi.OutputState }

func (SSISPropertyOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSISPropertyOverrideResponse)(nil)).Elem()
}

func (o SSISPropertyOverrideResponseOutput) ToSSISPropertyOverrideResponseOutput() SSISPropertyOverrideResponseOutput {
	return o
}

func (o SSISPropertyOverrideResponseOutput) ToSSISPropertyOverrideResponseOutputWithContext(ctx context.Context) SSISPropertyOverrideResponseOutput {
	return o
}

// Whether SSIS package property override value is sensitive data. Value will be encrypted in SSISDB if it is true
func (o SSISPropertyOverrideResponseOutput) IsSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SSISPropertyOverrideResponse) *bool { return v.IsSensitive }).(pulumi.BoolPtrOutput)
}

// SSIS package property override value. Type: string (or Expression with resultType string).
func (o SSISPropertyOverrideResponseOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v SSISPropertyOverrideResponse) interface{} { return v.Value }).(pulumi.AnyOutput)
}

type SSISPropertyOverrideResponseMapOutput struct{ *pulumi.OutputState }

func (SSISPropertyOverrideResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SSISPropertyOverrideResponse)(nil)).Elem()
}

func (o SSISPropertyOverrideResponseMapOutput) ToSSISPropertyOverrideResponseMapOutput() SSISPropertyOverrideResponseMapOutput {
	return o
}

func (o SSISPropertyOverrideResponseMapOutput) ToSSISPropertyOverrideResponseMapOutputWithContext(ctx context.Context) SSISPropertyOverrideResponseMapOutput {
	return o
}

func (o SSISPropertyOverrideResponseMapOutput) MapIndex(k pulumi.StringInput) SSISPropertyOverrideResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SSISPropertyOverrideResponse {
		return vs[0].(map[string]SSISPropertyOverrideResponse)[vs[1].(string)]
	}).(SSISPropertyOverrideResponseOutput)
}

// Linked service for Salesforce.
type SalesforceLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The URL of Salesforce instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).
	EnvironmentUrl interface{} `pulumi:"environmentUrl"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The password for Basic authentication of the Salesforce instance.
	Password interface{} `pulumi:"password"`
	// The security token is required to remotely access Salesforce instance.
	SecurityToken interface{} `pulumi:"securityToken"`
	// Type of linked service.
	// Expected value is 'Salesforce'.
	Type string `pulumi:"type"`
	// The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// SalesforceLinkedServiceInput is an input type that accepts SalesforceLinkedServiceArgs and SalesforceLinkedServiceOutput values.
// You can construct a concrete instance of `SalesforceLinkedServiceInput` via:
//
//          SalesforceLinkedServiceArgs{...}
type SalesforceLinkedServiceInput interface {
	pulumi.Input

	ToSalesforceLinkedServiceOutput() SalesforceLinkedServiceOutput
	ToSalesforceLinkedServiceOutputWithContext(context.Context) SalesforceLinkedServiceOutput
}

// Linked service for Salesforce.
type SalesforceLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The URL of Salesforce instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).
	EnvironmentUrl pulumi.Input `pulumi:"environmentUrl"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The password for Basic authentication of the Salesforce instance.
	Password pulumi.Input `pulumi:"password"`
	// The security token is required to remotely access Salesforce instance.
	SecurityToken pulumi.Input `pulumi:"securityToken"`
	// Type of linked service.
	// Expected value is 'Salesforce'.
	Type pulumi.StringInput `pulumi:"type"`
	// The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (SalesforceLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceLinkedService)(nil)).Elem()
}

func (i SalesforceLinkedServiceArgs) ToSalesforceLinkedServiceOutput() SalesforceLinkedServiceOutput {
	return i.ToSalesforceLinkedServiceOutputWithContext(context.Background())
}

func (i SalesforceLinkedServiceArgs) ToSalesforceLinkedServiceOutputWithContext(ctx context.Context) SalesforceLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SalesforceLinkedServiceOutput)
}

// Linked service for Salesforce.
type SalesforceLinkedServiceOutput struct{ *pulumi.OutputState }

func (SalesforceLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceLinkedService)(nil)).Elem()
}

func (o SalesforceLinkedServiceOutput) ToSalesforceLinkedServiceOutput() SalesforceLinkedServiceOutput {
	return o
}

func (o SalesforceLinkedServiceOutput) ToSalesforceLinkedServiceOutputWithContext(ctx context.Context) SalesforceLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SalesforceLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SalesforceLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o SalesforceLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v SalesforceLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o SalesforceLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SalesforceLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SalesforceLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The URL of Salesforce instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).
func (o SalesforceLinkedServiceOutput) EnvironmentUrl() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceLinkedService) interface{} { return v.EnvironmentUrl }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SalesforceLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SalesforceLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The password for Basic authentication of the Salesforce instance.
func (o SalesforceLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The security token is required to remotely access Salesforce instance.
func (o SalesforceLinkedServiceOutput) SecurityToken() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceLinkedService) interface{} { return v.SecurityToken }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Salesforce'.
func (o SalesforceLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SalesforceLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string).
func (o SalesforceLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Linked service for Salesforce.
type SalesforceLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The URL of Salesforce instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).
	EnvironmentUrl interface{} `pulumi:"environmentUrl"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The password for Basic authentication of the Salesforce instance.
	Password interface{} `pulumi:"password"`
	// The security token is required to remotely access Salesforce instance.
	SecurityToken interface{} `pulumi:"securityToken"`
	// Type of linked service.
	// Expected value is 'Salesforce'.
	Type string `pulumi:"type"`
	// The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// SalesforceLinkedServiceResponseInput is an input type that accepts SalesforceLinkedServiceResponseArgs and SalesforceLinkedServiceResponseOutput values.
// You can construct a concrete instance of `SalesforceLinkedServiceResponseInput` via:
//
//          SalesforceLinkedServiceResponseArgs{...}
type SalesforceLinkedServiceResponseInput interface {
	pulumi.Input

	ToSalesforceLinkedServiceResponseOutput() SalesforceLinkedServiceResponseOutput
	ToSalesforceLinkedServiceResponseOutputWithContext(context.Context) SalesforceLinkedServiceResponseOutput
}

// Linked service for Salesforce.
type SalesforceLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The URL of Salesforce instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).
	EnvironmentUrl pulumi.Input `pulumi:"environmentUrl"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The password for Basic authentication of the Salesforce instance.
	Password pulumi.Input `pulumi:"password"`
	// The security token is required to remotely access Salesforce instance.
	SecurityToken pulumi.Input `pulumi:"securityToken"`
	// Type of linked service.
	// Expected value is 'Salesforce'.
	Type pulumi.StringInput `pulumi:"type"`
	// The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (SalesforceLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceLinkedServiceResponse)(nil)).Elem()
}

func (i SalesforceLinkedServiceResponseArgs) ToSalesforceLinkedServiceResponseOutput() SalesforceLinkedServiceResponseOutput {
	return i.ToSalesforceLinkedServiceResponseOutputWithContext(context.Background())
}

func (i SalesforceLinkedServiceResponseArgs) ToSalesforceLinkedServiceResponseOutputWithContext(ctx context.Context) SalesforceLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SalesforceLinkedServiceResponseOutput)
}

// Linked service for Salesforce.
type SalesforceLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (SalesforceLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceLinkedServiceResponse)(nil)).Elem()
}

func (o SalesforceLinkedServiceResponseOutput) ToSalesforceLinkedServiceResponseOutput() SalesforceLinkedServiceResponseOutput {
	return o
}

func (o SalesforceLinkedServiceResponseOutput) ToSalesforceLinkedServiceResponseOutputWithContext(ctx context.Context) SalesforceLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SalesforceLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SalesforceLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o SalesforceLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v SalesforceLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o SalesforceLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SalesforceLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SalesforceLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The URL of Salesforce instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).
func (o SalesforceLinkedServiceResponseOutput) EnvironmentUrl() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceLinkedServiceResponse) interface{} { return v.EnvironmentUrl }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SalesforceLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SalesforceLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The password for Basic authentication of the Salesforce instance.
func (o SalesforceLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The security token is required to remotely access Salesforce instance.
func (o SalesforceLinkedServiceResponseOutput) SecurityToken() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceLinkedServiceResponse) interface{} { return v.SecurityToken }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Salesforce'.
func (o SalesforceLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SalesforceLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string).
func (o SalesforceLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Salesforce Marketing Cloud linked service.
type SalesforceMarketingCloudLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The client ID associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).
	ClientId interface{} `pulumi:"clientId"`
	// The client secret associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).
	ClientSecret interface{} `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'SalesforceMarketingCloud'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// SalesforceMarketingCloudLinkedServiceInput is an input type that accepts SalesforceMarketingCloudLinkedServiceArgs and SalesforceMarketingCloudLinkedServiceOutput values.
// You can construct a concrete instance of `SalesforceMarketingCloudLinkedServiceInput` via:
//
//          SalesforceMarketingCloudLinkedServiceArgs{...}
type SalesforceMarketingCloudLinkedServiceInput interface {
	pulumi.Input

	ToSalesforceMarketingCloudLinkedServiceOutput() SalesforceMarketingCloudLinkedServiceOutput
	ToSalesforceMarketingCloudLinkedServiceOutputWithContext(context.Context) SalesforceMarketingCloudLinkedServiceOutput
}

// Salesforce Marketing Cloud linked service.
type SalesforceMarketingCloudLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The client ID associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).
	ClientId pulumi.Input `pulumi:"clientId"`
	// The client secret associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).
	ClientSecret pulumi.Input `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'SalesforceMarketingCloud'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (SalesforceMarketingCloudLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceMarketingCloudLinkedService)(nil)).Elem()
}

func (i SalesforceMarketingCloudLinkedServiceArgs) ToSalesforceMarketingCloudLinkedServiceOutput() SalesforceMarketingCloudLinkedServiceOutput {
	return i.ToSalesforceMarketingCloudLinkedServiceOutputWithContext(context.Background())
}

func (i SalesforceMarketingCloudLinkedServiceArgs) ToSalesforceMarketingCloudLinkedServiceOutputWithContext(ctx context.Context) SalesforceMarketingCloudLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SalesforceMarketingCloudLinkedServiceOutput)
}

// Salesforce Marketing Cloud linked service.
type SalesforceMarketingCloudLinkedServiceOutput struct{ *pulumi.OutputState }

func (SalesforceMarketingCloudLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceMarketingCloudLinkedService)(nil)).Elem()
}

func (o SalesforceMarketingCloudLinkedServiceOutput) ToSalesforceMarketingCloudLinkedServiceOutput() SalesforceMarketingCloudLinkedServiceOutput {
	return o
}

func (o SalesforceMarketingCloudLinkedServiceOutput) ToSalesforceMarketingCloudLinkedServiceOutputWithContext(ctx context.Context) SalesforceMarketingCloudLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SalesforceMarketingCloudLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The client ID associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).
func (o SalesforceMarketingCloudLinkedServiceOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedService) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The client secret associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).
func (o SalesforceMarketingCloudLinkedServiceOutput) ClientSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedService) interface{} { return v.ClientSecret }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o SalesforceMarketingCloudLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o SalesforceMarketingCloudLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SalesforceMarketingCloudLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SalesforceMarketingCloudLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'SalesforceMarketingCloud'.
func (o SalesforceMarketingCloudLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
func (o SalesforceMarketingCloudLinkedServiceOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedService) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
func (o SalesforceMarketingCloudLinkedServiceOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedService) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
func (o SalesforceMarketingCloudLinkedServiceOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedService) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Salesforce Marketing Cloud linked service.
type SalesforceMarketingCloudLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The client ID associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).
	ClientId interface{} `pulumi:"clientId"`
	// The client secret associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).
	ClientSecret interface{} `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'SalesforceMarketingCloud'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// SalesforceMarketingCloudLinkedServiceResponseInput is an input type that accepts SalesforceMarketingCloudLinkedServiceResponseArgs and SalesforceMarketingCloudLinkedServiceResponseOutput values.
// You can construct a concrete instance of `SalesforceMarketingCloudLinkedServiceResponseInput` via:
//
//          SalesforceMarketingCloudLinkedServiceResponseArgs{...}
type SalesforceMarketingCloudLinkedServiceResponseInput interface {
	pulumi.Input

	ToSalesforceMarketingCloudLinkedServiceResponseOutput() SalesforceMarketingCloudLinkedServiceResponseOutput
	ToSalesforceMarketingCloudLinkedServiceResponseOutputWithContext(context.Context) SalesforceMarketingCloudLinkedServiceResponseOutput
}

// Salesforce Marketing Cloud linked service.
type SalesforceMarketingCloudLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The client ID associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).
	ClientId pulumi.Input `pulumi:"clientId"`
	// The client secret associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).
	ClientSecret pulumi.Input `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'SalesforceMarketingCloud'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (SalesforceMarketingCloudLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceMarketingCloudLinkedServiceResponse)(nil)).Elem()
}

func (i SalesforceMarketingCloudLinkedServiceResponseArgs) ToSalesforceMarketingCloudLinkedServiceResponseOutput() SalesforceMarketingCloudLinkedServiceResponseOutput {
	return i.ToSalesforceMarketingCloudLinkedServiceResponseOutputWithContext(context.Background())
}

func (i SalesforceMarketingCloudLinkedServiceResponseArgs) ToSalesforceMarketingCloudLinkedServiceResponseOutputWithContext(ctx context.Context) SalesforceMarketingCloudLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SalesforceMarketingCloudLinkedServiceResponseOutput)
}

// Salesforce Marketing Cloud linked service.
type SalesforceMarketingCloudLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (SalesforceMarketingCloudLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceMarketingCloudLinkedServiceResponse)(nil)).Elem()
}

func (o SalesforceMarketingCloudLinkedServiceResponseOutput) ToSalesforceMarketingCloudLinkedServiceResponseOutput() SalesforceMarketingCloudLinkedServiceResponseOutput {
	return o
}

func (o SalesforceMarketingCloudLinkedServiceResponseOutput) ToSalesforceMarketingCloudLinkedServiceResponseOutputWithContext(ctx context.Context) SalesforceMarketingCloudLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SalesforceMarketingCloudLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The client ID associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).
func (o SalesforceMarketingCloudLinkedServiceResponseOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedServiceResponse) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The client secret associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).
func (o SalesforceMarketingCloudLinkedServiceResponseOutput) ClientSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedServiceResponse) interface{} { return v.ClientSecret }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o SalesforceMarketingCloudLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedServiceResponse) *IntegrationRuntimeReferenceResponse {
		return v.ConnectVia
	}).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o SalesforceMarketingCloudLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SalesforceMarketingCloudLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SalesforceMarketingCloudLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedServiceResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'SalesforceMarketingCloud'.
func (o SalesforceMarketingCloudLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
func (o SalesforceMarketingCloudLinkedServiceResponseOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedServiceResponse) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
func (o SalesforceMarketingCloudLinkedServiceResponseOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedServiceResponse) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
func (o SalesforceMarketingCloudLinkedServiceResponseOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudLinkedServiceResponse) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Salesforce Marketing Cloud dataset.
type SalesforceMarketingCloudObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SalesforceMarketingCloudObject'.
	Type string `pulumi:"type"`
}

// SalesforceMarketingCloudObjectDatasetInput is an input type that accepts SalesforceMarketingCloudObjectDatasetArgs and SalesforceMarketingCloudObjectDatasetOutput values.
// You can construct a concrete instance of `SalesforceMarketingCloudObjectDatasetInput` via:
//
//          SalesforceMarketingCloudObjectDatasetArgs{...}
type SalesforceMarketingCloudObjectDatasetInput interface {
	pulumi.Input

	ToSalesforceMarketingCloudObjectDatasetOutput() SalesforceMarketingCloudObjectDatasetOutput
	ToSalesforceMarketingCloudObjectDatasetOutputWithContext(context.Context) SalesforceMarketingCloudObjectDatasetOutput
}

// Salesforce Marketing Cloud dataset.
type SalesforceMarketingCloudObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SalesforceMarketingCloudObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SalesforceMarketingCloudObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceMarketingCloudObjectDataset)(nil)).Elem()
}

func (i SalesforceMarketingCloudObjectDatasetArgs) ToSalesforceMarketingCloudObjectDatasetOutput() SalesforceMarketingCloudObjectDatasetOutput {
	return i.ToSalesforceMarketingCloudObjectDatasetOutputWithContext(context.Background())
}

func (i SalesforceMarketingCloudObjectDatasetArgs) ToSalesforceMarketingCloudObjectDatasetOutputWithContext(ctx context.Context) SalesforceMarketingCloudObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SalesforceMarketingCloudObjectDatasetOutput)
}

// Salesforce Marketing Cloud dataset.
type SalesforceMarketingCloudObjectDatasetOutput struct{ *pulumi.OutputState }

func (SalesforceMarketingCloudObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceMarketingCloudObjectDataset)(nil)).Elem()
}

func (o SalesforceMarketingCloudObjectDatasetOutput) ToSalesforceMarketingCloudObjectDatasetOutput() SalesforceMarketingCloudObjectDatasetOutput {
	return o
}

func (o SalesforceMarketingCloudObjectDatasetOutput) ToSalesforceMarketingCloudObjectDatasetOutputWithContext(ctx context.Context) SalesforceMarketingCloudObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SalesforceMarketingCloudObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o SalesforceMarketingCloudObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o SalesforceMarketingCloudObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o SalesforceMarketingCloudObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o SalesforceMarketingCloudObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'SalesforceMarketingCloudObject'.
func (o SalesforceMarketingCloudObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Salesforce Marketing Cloud dataset.
type SalesforceMarketingCloudObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SalesforceMarketingCloudObject'.
	Type string `pulumi:"type"`
}

// SalesforceMarketingCloudObjectDatasetResponseInput is an input type that accepts SalesforceMarketingCloudObjectDatasetResponseArgs and SalesforceMarketingCloudObjectDatasetResponseOutput values.
// You can construct a concrete instance of `SalesforceMarketingCloudObjectDatasetResponseInput` via:
//
//          SalesforceMarketingCloudObjectDatasetResponseArgs{...}
type SalesforceMarketingCloudObjectDatasetResponseInput interface {
	pulumi.Input

	ToSalesforceMarketingCloudObjectDatasetResponseOutput() SalesforceMarketingCloudObjectDatasetResponseOutput
	ToSalesforceMarketingCloudObjectDatasetResponseOutputWithContext(context.Context) SalesforceMarketingCloudObjectDatasetResponseOutput
}

// Salesforce Marketing Cloud dataset.
type SalesforceMarketingCloudObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SalesforceMarketingCloudObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SalesforceMarketingCloudObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceMarketingCloudObjectDatasetResponse)(nil)).Elem()
}

func (i SalesforceMarketingCloudObjectDatasetResponseArgs) ToSalesforceMarketingCloudObjectDatasetResponseOutput() SalesforceMarketingCloudObjectDatasetResponseOutput {
	return i.ToSalesforceMarketingCloudObjectDatasetResponseOutputWithContext(context.Background())
}

func (i SalesforceMarketingCloudObjectDatasetResponseArgs) ToSalesforceMarketingCloudObjectDatasetResponseOutputWithContext(ctx context.Context) SalesforceMarketingCloudObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SalesforceMarketingCloudObjectDatasetResponseOutput)
}

// Salesforce Marketing Cloud dataset.
type SalesforceMarketingCloudObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (SalesforceMarketingCloudObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceMarketingCloudObjectDatasetResponse)(nil)).Elem()
}

func (o SalesforceMarketingCloudObjectDatasetResponseOutput) ToSalesforceMarketingCloudObjectDatasetResponseOutput() SalesforceMarketingCloudObjectDatasetResponseOutput {
	return o
}

func (o SalesforceMarketingCloudObjectDatasetResponseOutput) ToSalesforceMarketingCloudObjectDatasetResponseOutputWithContext(ctx context.Context) SalesforceMarketingCloudObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SalesforceMarketingCloudObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o SalesforceMarketingCloudObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o SalesforceMarketingCloudObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudObjectDatasetResponse) LinkedServiceReferenceResponse {
		return v.LinkedServiceName
	}).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o SalesforceMarketingCloudObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudObjectDatasetResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o SalesforceMarketingCloudObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'SalesforceMarketingCloudObject'.
func (o SalesforceMarketingCloudObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Salesforce Marketing Cloud source.
type SalesforceMarketingCloudSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SalesforceMarketingCloudSource'.
	Type string `pulumi:"type"`
}

// SalesforceMarketingCloudSourceInput is an input type that accepts SalesforceMarketingCloudSourceArgs and SalesforceMarketingCloudSourceOutput values.
// You can construct a concrete instance of `SalesforceMarketingCloudSourceInput` via:
//
//          SalesforceMarketingCloudSourceArgs{...}
type SalesforceMarketingCloudSourceInput interface {
	pulumi.Input

	ToSalesforceMarketingCloudSourceOutput() SalesforceMarketingCloudSourceOutput
	ToSalesforceMarketingCloudSourceOutputWithContext(context.Context) SalesforceMarketingCloudSourceOutput
}

// A copy activity Salesforce Marketing Cloud source.
type SalesforceMarketingCloudSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SalesforceMarketingCloudSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SalesforceMarketingCloudSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceMarketingCloudSource)(nil)).Elem()
}

func (i SalesforceMarketingCloudSourceArgs) ToSalesforceMarketingCloudSourceOutput() SalesforceMarketingCloudSourceOutput {
	return i.ToSalesforceMarketingCloudSourceOutputWithContext(context.Background())
}

func (i SalesforceMarketingCloudSourceArgs) ToSalesforceMarketingCloudSourceOutputWithContext(ctx context.Context) SalesforceMarketingCloudSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SalesforceMarketingCloudSourceOutput)
}

// A copy activity Salesforce Marketing Cloud source.
type SalesforceMarketingCloudSourceOutput struct{ *pulumi.OutputState }

func (SalesforceMarketingCloudSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceMarketingCloudSource)(nil)).Elem()
}

func (o SalesforceMarketingCloudSourceOutput) ToSalesforceMarketingCloudSourceOutput() SalesforceMarketingCloudSourceOutput {
	return o
}

func (o SalesforceMarketingCloudSourceOutput) ToSalesforceMarketingCloudSourceOutputWithContext(ctx context.Context) SalesforceMarketingCloudSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o SalesforceMarketingCloudSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o SalesforceMarketingCloudSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SalesforceMarketingCloudSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'SalesforceMarketingCloudSource'.
func (o SalesforceMarketingCloudSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Salesforce Marketing Cloud source.
type SalesforceMarketingCloudSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SalesforceMarketingCloudSource'.
	Type string `pulumi:"type"`
}

// SalesforceMarketingCloudSourceResponseInput is an input type that accepts SalesforceMarketingCloudSourceResponseArgs and SalesforceMarketingCloudSourceResponseOutput values.
// You can construct a concrete instance of `SalesforceMarketingCloudSourceResponseInput` via:
//
//          SalesforceMarketingCloudSourceResponseArgs{...}
type SalesforceMarketingCloudSourceResponseInput interface {
	pulumi.Input

	ToSalesforceMarketingCloudSourceResponseOutput() SalesforceMarketingCloudSourceResponseOutput
	ToSalesforceMarketingCloudSourceResponseOutputWithContext(context.Context) SalesforceMarketingCloudSourceResponseOutput
}

// A copy activity Salesforce Marketing Cloud source.
type SalesforceMarketingCloudSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SalesforceMarketingCloudSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SalesforceMarketingCloudSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceMarketingCloudSourceResponse)(nil)).Elem()
}

func (i SalesforceMarketingCloudSourceResponseArgs) ToSalesforceMarketingCloudSourceResponseOutput() SalesforceMarketingCloudSourceResponseOutput {
	return i.ToSalesforceMarketingCloudSourceResponseOutputWithContext(context.Background())
}

func (i SalesforceMarketingCloudSourceResponseArgs) ToSalesforceMarketingCloudSourceResponseOutputWithContext(ctx context.Context) SalesforceMarketingCloudSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SalesforceMarketingCloudSourceResponseOutput)
}

// A copy activity Salesforce Marketing Cloud source.
type SalesforceMarketingCloudSourceResponseOutput struct{ *pulumi.OutputState }

func (SalesforceMarketingCloudSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceMarketingCloudSourceResponse)(nil)).Elem()
}

func (o SalesforceMarketingCloudSourceResponseOutput) ToSalesforceMarketingCloudSourceResponseOutput() SalesforceMarketingCloudSourceResponseOutput {
	return o
}

func (o SalesforceMarketingCloudSourceResponseOutput) ToSalesforceMarketingCloudSourceResponseOutputWithContext(ctx context.Context) SalesforceMarketingCloudSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o SalesforceMarketingCloudSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o SalesforceMarketingCloudSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SalesforceMarketingCloudSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'SalesforceMarketingCloudSource'.
func (o SalesforceMarketingCloudSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SalesforceMarketingCloudSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The Salesforce object dataset.
type SalesforceObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// The Salesforce object API name. Type: string (or Expression with resultType string).
	ObjectApiName interface{} `pulumi:"objectApiName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SalesforceObject'.
	Type string `pulumi:"type"`
}

// SalesforceObjectDatasetInput is an input type that accepts SalesforceObjectDatasetArgs and SalesforceObjectDatasetOutput values.
// You can construct a concrete instance of `SalesforceObjectDatasetInput` via:
//
//          SalesforceObjectDatasetArgs{...}
type SalesforceObjectDatasetInput interface {
	pulumi.Input

	ToSalesforceObjectDatasetOutput() SalesforceObjectDatasetOutput
	ToSalesforceObjectDatasetOutputWithContext(context.Context) SalesforceObjectDatasetOutput
}

// The Salesforce object dataset.
type SalesforceObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// The Salesforce object API name. Type: string (or Expression with resultType string).
	ObjectApiName pulumi.Input `pulumi:"objectApiName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SalesforceObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SalesforceObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceObjectDataset)(nil)).Elem()
}

func (i SalesforceObjectDatasetArgs) ToSalesforceObjectDatasetOutput() SalesforceObjectDatasetOutput {
	return i.ToSalesforceObjectDatasetOutputWithContext(context.Background())
}

func (i SalesforceObjectDatasetArgs) ToSalesforceObjectDatasetOutputWithContext(ctx context.Context) SalesforceObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SalesforceObjectDatasetOutput)
}

// The Salesforce object dataset.
type SalesforceObjectDatasetOutput struct{ *pulumi.OutputState }

func (SalesforceObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceObjectDataset)(nil)).Elem()
}

func (o SalesforceObjectDatasetOutput) ToSalesforceObjectDatasetOutput() SalesforceObjectDatasetOutput {
	return o
}

func (o SalesforceObjectDatasetOutput) ToSalesforceObjectDatasetOutputWithContext(ctx context.Context) SalesforceObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SalesforceObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SalesforceObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o SalesforceObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SalesforceObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o SalesforceObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v SalesforceObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// The Salesforce object API name. Type: string (or Expression with resultType string).
func (o SalesforceObjectDatasetOutput) ObjectApiName() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceObjectDataset) interface{} { return v.ObjectApiName }).(pulumi.AnyOutput)
}

// Parameters for dataset.
func (o SalesforceObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SalesforceObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o SalesforceObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'SalesforceObject'.
func (o SalesforceObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SalesforceObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The Salesforce object dataset.
type SalesforceObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// The Salesforce object API name. Type: string (or Expression with resultType string).
	ObjectApiName interface{} `pulumi:"objectApiName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SalesforceObject'.
	Type string `pulumi:"type"`
}

// SalesforceObjectDatasetResponseInput is an input type that accepts SalesforceObjectDatasetResponseArgs and SalesforceObjectDatasetResponseOutput values.
// You can construct a concrete instance of `SalesforceObjectDatasetResponseInput` via:
//
//          SalesforceObjectDatasetResponseArgs{...}
type SalesforceObjectDatasetResponseInput interface {
	pulumi.Input

	ToSalesforceObjectDatasetResponseOutput() SalesforceObjectDatasetResponseOutput
	ToSalesforceObjectDatasetResponseOutputWithContext(context.Context) SalesforceObjectDatasetResponseOutput
}

// The Salesforce object dataset.
type SalesforceObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// The Salesforce object API name. Type: string (or Expression with resultType string).
	ObjectApiName pulumi.Input `pulumi:"objectApiName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SalesforceObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SalesforceObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceObjectDatasetResponse)(nil)).Elem()
}

func (i SalesforceObjectDatasetResponseArgs) ToSalesforceObjectDatasetResponseOutput() SalesforceObjectDatasetResponseOutput {
	return i.ToSalesforceObjectDatasetResponseOutputWithContext(context.Background())
}

func (i SalesforceObjectDatasetResponseArgs) ToSalesforceObjectDatasetResponseOutputWithContext(ctx context.Context) SalesforceObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SalesforceObjectDatasetResponseOutput)
}

// The Salesforce object dataset.
type SalesforceObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (SalesforceObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceObjectDatasetResponse)(nil)).Elem()
}

func (o SalesforceObjectDatasetResponseOutput) ToSalesforceObjectDatasetResponseOutput() SalesforceObjectDatasetResponseOutput {
	return o
}

func (o SalesforceObjectDatasetResponseOutput) ToSalesforceObjectDatasetResponseOutputWithContext(ctx context.Context) SalesforceObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SalesforceObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SalesforceObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o SalesforceObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SalesforceObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o SalesforceObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v SalesforceObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// The Salesforce object API name. Type: string (or Expression with resultType string).
func (o SalesforceObjectDatasetResponseOutput) ObjectApiName() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceObjectDatasetResponse) interface{} { return v.ObjectApiName }).(pulumi.AnyOutput)
}

// Parameters for dataset.
func (o SalesforceObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SalesforceObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o SalesforceObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'SalesforceObject'.
func (o SalesforceObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SalesforceObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Salesforce sink.
type SalesforceSink struct {
	// The name of the external ID field for upsert operation. Default value is 'Id' column. Type: string (or Expression with resultType string).
	ExternalIdFieldName interface{} `pulumi:"externalIdFieldName"`
	// The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean).
	IgnoreNullValues interface{} `pulumi:"ignoreNullValues"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'SalesforceSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
	// The write behavior for the operation. Default is Insert.
	WriteBehavior *string `pulumi:"writeBehavior"`
}

// SalesforceSinkInput is an input type that accepts SalesforceSinkArgs and SalesforceSinkOutput values.
// You can construct a concrete instance of `SalesforceSinkInput` via:
//
//          SalesforceSinkArgs{...}
type SalesforceSinkInput interface {
	pulumi.Input

	ToSalesforceSinkOutput() SalesforceSinkOutput
	ToSalesforceSinkOutputWithContext(context.Context) SalesforceSinkOutput
}

// A copy activity Salesforce sink.
type SalesforceSinkArgs struct {
	// The name of the external ID field for upsert operation. Default value is 'Id' column. Type: string (or Expression with resultType string).
	ExternalIdFieldName pulumi.Input `pulumi:"externalIdFieldName"`
	// The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean).
	IgnoreNullValues pulumi.Input `pulumi:"ignoreNullValues"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'SalesforceSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
	// The write behavior for the operation. Default is Insert.
	WriteBehavior pulumi.StringPtrInput `pulumi:"writeBehavior"`
}

func (SalesforceSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceSink)(nil)).Elem()
}

func (i SalesforceSinkArgs) ToSalesforceSinkOutput() SalesforceSinkOutput {
	return i.ToSalesforceSinkOutputWithContext(context.Background())
}

func (i SalesforceSinkArgs) ToSalesforceSinkOutputWithContext(ctx context.Context) SalesforceSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SalesforceSinkOutput)
}

// A copy activity Salesforce sink.
type SalesforceSinkOutput struct{ *pulumi.OutputState }

func (SalesforceSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceSink)(nil)).Elem()
}

func (o SalesforceSinkOutput) ToSalesforceSinkOutput() SalesforceSinkOutput {
	return o
}

func (o SalesforceSinkOutput) ToSalesforceSinkOutputWithContext(ctx context.Context) SalesforceSinkOutput {
	return o
}

// The name of the external ID field for upsert operation. Default value is 'Id' column. Type: string (or Expression with resultType string).
func (o SalesforceSinkOutput) ExternalIdFieldName() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSink) interface{} { return v.ExternalIdFieldName }).(pulumi.AnyOutput)
}

// The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean).
func (o SalesforceSinkOutput) IgnoreNullValues() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSink) interface{} { return v.IgnoreNullValues }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o SalesforceSinkOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSink) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SalesforceSinkOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSink) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'SalesforceSink'.
func (o SalesforceSinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SalesforceSink) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o SalesforceSinkOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSink) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SalesforceSinkOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSink) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// The write behavior for the operation. Default is Insert.
func (o SalesforceSinkOutput) WriteBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SalesforceSink) *string { return v.WriteBehavior }).(pulumi.StringPtrOutput)
}

// A copy activity Salesforce sink.
type SalesforceSinkResponse struct {
	// The name of the external ID field for upsert operation. Default value is 'Id' column. Type: string (or Expression with resultType string).
	ExternalIdFieldName interface{} `pulumi:"externalIdFieldName"`
	// The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean).
	IgnoreNullValues interface{} `pulumi:"ignoreNullValues"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'SalesforceSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
	// The write behavior for the operation. Default is Insert.
	WriteBehavior *string `pulumi:"writeBehavior"`
}

// SalesforceSinkResponseInput is an input type that accepts SalesforceSinkResponseArgs and SalesforceSinkResponseOutput values.
// You can construct a concrete instance of `SalesforceSinkResponseInput` via:
//
//          SalesforceSinkResponseArgs{...}
type SalesforceSinkResponseInput interface {
	pulumi.Input

	ToSalesforceSinkResponseOutput() SalesforceSinkResponseOutput
	ToSalesforceSinkResponseOutputWithContext(context.Context) SalesforceSinkResponseOutput
}

// A copy activity Salesforce sink.
type SalesforceSinkResponseArgs struct {
	// The name of the external ID field for upsert operation. Default value is 'Id' column. Type: string (or Expression with resultType string).
	ExternalIdFieldName pulumi.Input `pulumi:"externalIdFieldName"`
	// The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean).
	IgnoreNullValues pulumi.Input `pulumi:"ignoreNullValues"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'SalesforceSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
	// The write behavior for the operation. Default is Insert.
	WriteBehavior pulumi.StringPtrInput `pulumi:"writeBehavior"`
}

func (SalesforceSinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceSinkResponse)(nil)).Elem()
}

func (i SalesforceSinkResponseArgs) ToSalesforceSinkResponseOutput() SalesforceSinkResponseOutput {
	return i.ToSalesforceSinkResponseOutputWithContext(context.Background())
}

func (i SalesforceSinkResponseArgs) ToSalesforceSinkResponseOutputWithContext(ctx context.Context) SalesforceSinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SalesforceSinkResponseOutput)
}

// A copy activity Salesforce sink.
type SalesforceSinkResponseOutput struct{ *pulumi.OutputState }

func (SalesforceSinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceSinkResponse)(nil)).Elem()
}

func (o SalesforceSinkResponseOutput) ToSalesforceSinkResponseOutput() SalesforceSinkResponseOutput {
	return o
}

func (o SalesforceSinkResponseOutput) ToSalesforceSinkResponseOutputWithContext(ctx context.Context) SalesforceSinkResponseOutput {
	return o
}

// The name of the external ID field for upsert operation. Default value is 'Id' column. Type: string (or Expression with resultType string).
func (o SalesforceSinkResponseOutput) ExternalIdFieldName() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSinkResponse) interface{} { return v.ExternalIdFieldName }).(pulumi.AnyOutput)
}

// The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean).
func (o SalesforceSinkResponseOutput) IgnoreNullValues() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSinkResponse) interface{} { return v.IgnoreNullValues }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o SalesforceSinkResponseOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSinkResponse) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SalesforceSinkResponseOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSinkResponse) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'SalesforceSink'.
func (o SalesforceSinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SalesforceSinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o SalesforceSinkResponseOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSinkResponse) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SalesforceSinkResponseOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSinkResponse) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// The write behavior for the operation. Default is Insert.
func (o SalesforceSinkResponseOutput) WriteBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SalesforceSinkResponse) *string { return v.WriteBehavior }).(pulumi.StringPtrOutput)
}

// A copy activity Salesforce source.
type SalesforceSource struct {
	// Database query. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// The read behavior for the operation. Default is Query.
	ReadBehavior *string `pulumi:"readBehavior"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SalesforceSource'.
	Type string `pulumi:"type"`
}

// SalesforceSourceInput is an input type that accepts SalesforceSourceArgs and SalesforceSourceOutput values.
// You can construct a concrete instance of `SalesforceSourceInput` via:
//
//          SalesforceSourceArgs{...}
type SalesforceSourceInput interface {
	pulumi.Input

	ToSalesforceSourceOutput() SalesforceSourceOutput
	ToSalesforceSourceOutputWithContext(context.Context) SalesforceSourceOutput
}

// A copy activity Salesforce source.
type SalesforceSourceArgs struct {
	// Database query. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// The read behavior for the operation. Default is Query.
	ReadBehavior pulumi.StringPtrInput `pulumi:"readBehavior"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SalesforceSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SalesforceSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceSource)(nil)).Elem()
}

func (i SalesforceSourceArgs) ToSalesforceSourceOutput() SalesforceSourceOutput {
	return i.ToSalesforceSourceOutputWithContext(context.Background())
}

func (i SalesforceSourceArgs) ToSalesforceSourceOutputWithContext(ctx context.Context) SalesforceSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SalesforceSourceOutput)
}

// A copy activity Salesforce source.
type SalesforceSourceOutput struct{ *pulumi.OutputState }

func (SalesforceSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceSource)(nil)).Elem()
}

func (o SalesforceSourceOutput) ToSalesforceSourceOutput() SalesforceSourceOutput {
	return o
}

func (o SalesforceSourceOutput) ToSalesforceSourceOutputWithContext(ctx context.Context) SalesforceSourceOutput {
	return o
}

// Database query. Type: string (or Expression with resultType string).
func (o SalesforceSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// The read behavior for the operation. Default is Query.
func (o SalesforceSourceOutput) ReadBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SalesforceSource) *string { return v.ReadBehavior }).(pulumi.StringPtrOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o SalesforceSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SalesforceSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'SalesforceSource'.
func (o SalesforceSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SalesforceSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Salesforce source.
type SalesforceSourceResponse struct {
	// Database query. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// The read behavior for the operation. Default is Query.
	ReadBehavior *string `pulumi:"readBehavior"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SalesforceSource'.
	Type string `pulumi:"type"`
}

// SalesforceSourceResponseInput is an input type that accepts SalesforceSourceResponseArgs and SalesforceSourceResponseOutput values.
// You can construct a concrete instance of `SalesforceSourceResponseInput` via:
//
//          SalesforceSourceResponseArgs{...}
type SalesforceSourceResponseInput interface {
	pulumi.Input

	ToSalesforceSourceResponseOutput() SalesforceSourceResponseOutput
	ToSalesforceSourceResponseOutputWithContext(context.Context) SalesforceSourceResponseOutput
}

// A copy activity Salesforce source.
type SalesforceSourceResponseArgs struct {
	// Database query. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// The read behavior for the operation. Default is Query.
	ReadBehavior pulumi.StringPtrInput `pulumi:"readBehavior"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SalesforceSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SalesforceSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceSourceResponse)(nil)).Elem()
}

func (i SalesforceSourceResponseArgs) ToSalesforceSourceResponseOutput() SalesforceSourceResponseOutput {
	return i.ToSalesforceSourceResponseOutputWithContext(context.Background())
}

func (i SalesforceSourceResponseArgs) ToSalesforceSourceResponseOutputWithContext(ctx context.Context) SalesforceSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SalesforceSourceResponseOutput)
}

// A copy activity Salesforce source.
type SalesforceSourceResponseOutput struct{ *pulumi.OutputState }

func (SalesforceSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SalesforceSourceResponse)(nil)).Elem()
}

func (o SalesforceSourceResponseOutput) ToSalesforceSourceResponseOutput() SalesforceSourceResponseOutput {
	return o
}

func (o SalesforceSourceResponseOutput) ToSalesforceSourceResponseOutputWithContext(ctx context.Context) SalesforceSourceResponseOutput {
	return o
}

// Database query. Type: string (or Expression with resultType string).
func (o SalesforceSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// The read behavior for the operation. Default is Query.
func (o SalesforceSourceResponseOutput) ReadBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SalesforceSourceResponse) *string { return v.ReadBehavior }).(pulumi.StringPtrOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o SalesforceSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SalesforceSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SalesforceSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'SalesforceSource'.
func (o SalesforceSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SalesforceSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// SAP Business Warehouse Linked Service.
type SapBWLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Client ID of the client on the BW system. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
	ClientId interface{} `pulumi:"clientId"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Password to access the SAP BW server.
	Password interface{} `pulumi:"password"`
	// Host name of the SAP BW instance. Type: string (or Expression with resultType string).
	Server interface{} `pulumi:"server"`
	// System number of the BW system. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
	SystemNumber interface{} `pulumi:"systemNumber"`
	// Type of linked service.
	// Expected value is 'SapBW'.
	Type string `pulumi:"type"`
	// Username to access the SAP BW server. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// SapBWLinkedServiceInput is an input type that accepts SapBWLinkedServiceArgs and SapBWLinkedServiceOutput values.
// You can construct a concrete instance of `SapBWLinkedServiceInput` via:
//
//          SapBWLinkedServiceArgs{...}
type SapBWLinkedServiceInput interface {
	pulumi.Input

	ToSapBWLinkedServiceOutput() SapBWLinkedServiceOutput
	ToSapBWLinkedServiceOutputWithContext(context.Context) SapBWLinkedServiceOutput
}

// SAP Business Warehouse Linked Service.
type SapBWLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Client ID of the client on the BW system. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
	ClientId pulumi.Input `pulumi:"clientId"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Password to access the SAP BW server.
	Password pulumi.Input `pulumi:"password"`
	// Host name of the SAP BW instance. Type: string (or Expression with resultType string).
	Server pulumi.Input `pulumi:"server"`
	// System number of the BW system. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
	SystemNumber pulumi.Input `pulumi:"systemNumber"`
	// Type of linked service.
	// Expected value is 'SapBW'.
	Type pulumi.StringInput `pulumi:"type"`
	// Username to access the SAP BW server. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (SapBWLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapBWLinkedService)(nil)).Elem()
}

func (i SapBWLinkedServiceArgs) ToSapBWLinkedServiceOutput() SapBWLinkedServiceOutput {
	return i.ToSapBWLinkedServiceOutputWithContext(context.Background())
}

func (i SapBWLinkedServiceArgs) ToSapBWLinkedServiceOutputWithContext(ctx context.Context) SapBWLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapBWLinkedServiceOutput)
}

// SAP Business Warehouse Linked Service.
type SapBWLinkedServiceOutput struct{ *pulumi.OutputState }

func (SapBWLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapBWLinkedService)(nil)).Elem()
}

func (o SapBWLinkedServiceOutput) ToSapBWLinkedServiceOutput() SapBWLinkedServiceOutput {
	return o
}

func (o SapBWLinkedServiceOutput) ToSapBWLinkedServiceOutputWithContext(ctx context.Context) SapBWLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SapBWLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SapBWLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Client ID of the client on the BW system. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
func (o SapBWLinkedServiceOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v SapBWLinkedService) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o SapBWLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v SapBWLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o SapBWLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapBWLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SapBWLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SapBWLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SapBWLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SapBWLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Password to access the SAP BW server.
func (o SapBWLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SapBWLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Host name of the SAP BW instance. Type: string (or Expression with resultType string).
func (o SapBWLinkedServiceOutput) Server() pulumi.AnyOutput {
	return o.ApplyT(func(v SapBWLinkedService) interface{} { return v.Server }).(pulumi.AnyOutput)
}

// System number of the BW system. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
func (o SapBWLinkedServiceOutput) SystemNumber() pulumi.AnyOutput {
	return o.ApplyT(func(v SapBWLinkedService) interface{} { return v.SystemNumber }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'SapBW'.
func (o SapBWLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapBWLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Username to access the SAP BW server. Type: string (or Expression with resultType string).
func (o SapBWLinkedServiceOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v SapBWLinkedService) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// SAP Business Warehouse Linked Service.
type SapBWLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Client ID of the client on the BW system. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
	ClientId interface{} `pulumi:"clientId"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Password to access the SAP BW server.
	Password interface{} `pulumi:"password"`
	// Host name of the SAP BW instance. Type: string (or Expression with resultType string).
	Server interface{} `pulumi:"server"`
	// System number of the BW system. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
	SystemNumber interface{} `pulumi:"systemNumber"`
	// Type of linked service.
	// Expected value is 'SapBW'.
	Type string `pulumi:"type"`
	// Username to access the SAP BW server. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// SapBWLinkedServiceResponseInput is an input type that accepts SapBWLinkedServiceResponseArgs and SapBWLinkedServiceResponseOutput values.
// You can construct a concrete instance of `SapBWLinkedServiceResponseInput` via:
//
//          SapBWLinkedServiceResponseArgs{...}
type SapBWLinkedServiceResponseInput interface {
	pulumi.Input

	ToSapBWLinkedServiceResponseOutput() SapBWLinkedServiceResponseOutput
	ToSapBWLinkedServiceResponseOutputWithContext(context.Context) SapBWLinkedServiceResponseOutput
}

// SAP Business Warehouse Linked Service.
type SapBWLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Client ID of the client on the BW system. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
	ClientId pulumi.Input `pulumi:"clientId"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Password to access the SAP BW server.
	Password pulumi.Input `pulumi:"password"`
	// Host name of the SAP BW instance. Type: string (or Expression with resultType string).
	Server pulumi.Input `pulumi:"server"`
	// System number of the BW system. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
	SystemNumber pulumi.Input `pulumi:"systemNumber"`
	// Type of linked service.
	// Expected value is 'SapBW'.
	Type pulumi.StringInput `pulumi:"type"`
	// Username to access the SAP BW server. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (SapBWLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapBWLinkedServiceResponse)(nil)).Elem()
}

func (i SapBWLinkedServiceResponseArgs) ToSapBWLinkedServiceResponseOutput() SapBWLinkedServiceResponseOutput {
	return i.ToSapBWLinkedServiceResponseOutputWithContext(context.Background())
}

func (i SapBWLinkedServiceResponseArgs) ToSapBWLinkedServiceResponseOutputWithContext(ctx context.Context) SapBWLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapBWLinkedServiceResponseOutput)
}

// SAP Business Warehouse Linked Service.
type SapBWLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (SapBWLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapBWLinkedServiceResponse)(nil)).Elem()
}

func (o SapBWLinkedServiceResponseOutput) ToSapBWLinkedServiceResponseOutput() SapBWLinkedServiceResponseOutput {
	return o
}

func (o SapBWLinkedServiceResponseOutput) ToSapBWLinkedServiceResponseOutputWithContext(ctx context.Context) SapBWLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SapBWLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SapBWLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Client ID of the client on the BW system. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
func (o SapBWLinkedServiceResponseOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v SapBWLinkedServiceResponse) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o SapBWLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v SapBWLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o SapBWLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapBWLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SapBWLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SapBWLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SapBWLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SapBWLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Password to access the SAP BW server.
func (o SapBWLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SapBWLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Host name of the SAP BW instance. Type: string (or Expression with resultType string).
func (o SapBWLinkedServiceResponseOutput) Server() pulumi.AnyOutput {
	return o.ApplyT(func(v SapBWLinkedServiceResponse) interface{} { return v.Server }).(pulumi.AnyOutput)
}

// System number of the BW system. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
func (o SapBWLinkedServiceResponseOutput) SystemNumber() pulumi.AnyOutput {
	return o.ApplyT(func(v SapBWLinkedServiceResponse) interface{} { return v.SystemNumber }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'SapBW'.
func (o SapBWLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapBWLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Username to access the SAP BW server. Type: string (or Expression with resultType string).
func (o SapBWLinkedServiceResponseOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v SapBWLinkedServiceResponse) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// Linked service for SAP Cloud for Customer.
type SapCloudForCustomerLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The password for Basic authentication.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'SapCloudForCustomer'.
	Type string `pulumi:"type"`
	// The URL of SAP Cloud for Customer OData API. For example, '[https://[tenantname].crm.ondemand.com/sap/c4c/odata/v1]'. Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
	// The username for Basic authentication. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// SapCloudForCustomerLinkedServiceInput is an input type that accepts SapCloudForCustomerLinkedServiceArgs and SapCloudForCustomerLinkedServiceOutput values.
// You can construct a concrete instance of `SapCloudForCustomerLinkedServiceInput` via:
//
//          SapCloudForCustomerLinkedServiceArgs{...}
type SapCloudForCustomerLinkedServiceInput interface {
	pulumi.Input

	ToSapCloudForCustomerLinkedServiceOutput() SapCloudForCustomerLinkedServiceOutput
	ToSapCloudForCustomerLinkedServiceOutputWithContext(context.Context) SapCloudForCustomerLinkedServiceOutput
}

// Linked service for SAP Cloud for Customer.
type SapCloudForCustomerLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The password for Basic authentication.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'SapCloudForCustomer'.
	Type pulumi.StringInput `pulumi:"type"`
	// The URL of SAP Cloud for Customer OData API. For example, '[https://[tenantname].crm.ondemand.com/sap/c4c/odata/v1]'. Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
	// The username for Basic authentication. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (SapCloudForCustomerLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapCloudForCustomerLinkedService)(nil)).Elem()
}

func (i SapCloudForCustomerLinkedServiceArgs) ToSapCloudForCustomerLinkedServiceOutput() SapCloudForCustomerLinkedServiceOutput {
	return i.ToSapCloudForCustomerLinkedServiceOutputWithContext(context.Background())
}

func (i SapCloudForCustomerLinkedServiceArgs) ToSapCloudForCustomerLinkedServiceOutputWithContext(ctx context.Context) SapCloudForCustomerLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapCloudForCustomerLinkedServiceOutput)
}

// Linked service for SAP Cloud for Customer.
type SapCloudForCustomerLinkedServiceOutput struct{ *pulumi.OutputState }

func (SapCloudForCustomerLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapCloudForCustomerLinkedService)(nil)).Elem()
}

func (o SapCloudForCustomerLinkedServiceOutput) ToSapCloudForCustomerLinkedServiceOutput() SapCloudForCustomerLinkedServiceOutput {
	return o
}

func (o SapCloudForCustomerLinkedServiceOutput) ToSapCloudForCustomerLinkedServiceOutputWithContext(ctx context.Context) SapCloudForCustomerLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SapCloudForCustomerLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o SapCloudForCustomerLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o SapCloudForCustomerLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).
func (o SapCloudForCustomerLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SapCloudForCustomerLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The password for Basic authentication.
func (o SapCloudForCustomerLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'SapCloudForCustomer'.
func (o SapCloudForCustomerLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// The URL of SAP Cloud for Customer OData API. For example, '[https://[tenantname].crm.ondemand.com/sap/c4c/odata/v1]'. Type: string (or Expression with resultType string).
func (o SapCloudForCustomerLinkedServiceOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedService) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// The username for Basic authentication. Type: string (or Expression with resultType string).
func (o SapCloudForCustomerLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Linked service for SAP Cloud for Customer.
type SapCloudForCustomerLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The password for Basic authentication.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'SapCloudForCustomer'.
	Type string `pulumi:"type"`
	// The URL of SAP Cloud for Customer OData API. For example, '[https://[tenantname].crm.ondemand.com/sap/c4c/odata/v1]'. Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
	// The username for Basic authentication. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// SapCloudForCustomerLinkedServiceResponseInput is an input type that accepts SapCloudForCustomerLinkedServiceResponseArgs and SapCloudForCustomerLinkedServiceResponseOutput values.
// You can construct a concrete instance of `SapCloudForCustomerLinkedServiceResponseInput` via:
//
//          SapCloudForCustomerLinkedServiceResponseArgs{...}
type SapCloudForCustomerLinkedServiceResponseInput interface {
	pulumi.Input

	ToSapCloudForCustomerLinkedServiceResponseOutput() SapCloudForCustomerLinkedServiceResponseOutput
	ToSapCloudForCustomerLinkedServiceResponseOutputWithContext(context.Context) SapCloudForCustomerLinkedServiceResponseOutput
}

// Linked service for SAP Cloud for Customer.
type SapCloudForCustomerLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The password for Basic authentication.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'SapCloudForCustomer'.
	Type pulumi.StringInput `pulumi:"type"`
	// The URL of SAP Cloud for Customer OData API. For example, '[https://[tenantname].crm.ondemand.com/sap/c4c/odata/v1]'. Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
	// The username for Basic authentication. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (SapCloudForCustomerLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapCloudForCustomerLinkedServiceResponse)(nil)).Elem()
}

func (i SapCloudForCustomerLinkedServiceResponseArgs) ToSapCloudForCustomerLinkedServiceResponseOutput() SapCloudForCustomerLinkedServiceResponseOutput {
	return i.ToSapCloudForCustomerLinkedServiceResponseOutputWithContext(context.Background())
}

func (i SapCloudForCustomerLinkedServiceResponseArgs) ToSapCloudForCustomerLinkedServiceResponseOutputWithContext(ctx context.Context) SapCloudForCustomerLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapCloudForCustomerLinkedServiceResponseOutput)
}

// Linked service for SAP Cloud for Customer.
type SapCloudForCustomerLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (SapCloudForCustomerLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapCloudForCustomerLinkedServiceResponse)(nil)).Elem()
}

func (o SapCloudForCustomerLinkedServiceResponseOutput) ToSapCloudForCustomerLinkedServiceResponseOutput() SapCloudForCustomerLinkedServiceResponseOutput {
	return o
}

func (o SapCloudForCustomerLinkedServiceResponseOutput) ToSapCloudForCustomerLinkedServiceResponseOutputWithContext(ctx context.Context) SapCloudForCustomerLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SapCloudForCustomerLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o SapCloudForCustomerLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedServiceResponse) *IntegrationRuntimeReferenceResponse {
		return v.ConnectVia
	}).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o SapCloudForCustomerLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).
func (o SapCloudForCustomerLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SapCloudForCustomerLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedServiceResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// The password for Basic authentication.
func (o SapCloudForCustomerLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'SapCloudForCustomer'.
func (o SapCloudForCustomerLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The URL of SAP Cloud for Customer OData API. For example, '[https://[tenantname].crm.ondemand.com/sap/c4c/odata/v1]'. Type: string (or Expression with resultType string).
func (o SapCloudForCustomerLinkedServiceResponseOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedServiceResponse) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// The username for Basic authentication. Type: string (or Expression with resultType string).
func (o SapCloudForCustomerLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// The path of the SAP Cloud for Customer OData entity.
type SapCloudForCustomerResourceDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The path of the SAP Cloud for Customer OData entity. Type: string (or Expression with resultType string).
	Path interface{} `pulumi:"path"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SapCloudForCustomerResource'.
	Type string `pulumi:"type"`
}

// SapCloudForCustomerResourceDatasetInput is an input type that accepts SapCloudForCustomerResourceDatasetArgs and SapCloudForCustomerResourceDatasetOutput values.
// You can construct a concrete instance of `SapCloudForCustomerResourceDatasetInput` via:
//
//          SapCloudForCustomerResourceDatasetArgs{...}
type SapCloudForCustomerResourceDatasetInput interface {
	pulumi.Input

	ToSapCloudForCustomerResourceDatasetOutput() SapCloudForCustomerResourceDatasetOutput
	ToSapCloudForCustomerResourceDatasetOutputWithContext(context.Context) SapCloudForCustomerResourceDatasetOutput
}

// The path of the SAP Cloud for Customer OData entity.
type SapCloudForCustomerResourceDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The path of the SAP Cloud for Customer OData entity. Type: string (or Expression with resultType string).
	Path pulumi.Input `pulumi:"path"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SapCloudForCustomerResource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SapCloudForCustomerResourceDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapCloudForCustomerResourceDataset)(nil)).Elem()
}

func (i SapCloudForCustomerResourceDatasetArgs) ToSapCloudForCustomerResourceDatasetOutput() SapCloudForCustomerResourceDatasetOutput {
	return i.ToSapCloudForCustomerResourceDatasetOutputWithContext(context.Background())
}

func (i SapCloudForCustomerResourceDatasetArgs) ToSapCloudForCustomerResourceDatasetOutputWithContext(ctx context.Context) SapCloudForCustomerResourceDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapCloudForCustomerResourceDatasetOutput)
}

// The path of the SAP Cloud for Customer OData entity.
type SapCloudForCustomerResourceDatasetOutput struct{ *pulumi.OutputState }

func (SapCloudForCustomerResourceDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapCloudForCustomerResourceDataset)(nil)).Elem()
}

func (o SapCloudForCustomerResourceDatasetOutput) ToSapCloudForCustomerResourceDatasetOutput() SapCloudForCustomerResourceDatasetOutput {
	return o
}

func (o SapCloudForCustomerResourceDatasetOutput) ToSapCloudForCustomerResourceDatasetOutputWithContext(ctx context.Context) SapCloudForCustomerResourceDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SapCloudForCustomerResourceDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SapCloudForCustomerResourceDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o SapCloudForCustomerResourceDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapCloudForCustomerResourceDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o SapCloudForCustomerResourceDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v SapCloudForCustomerResourceDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o SapCloudForCustomerResourceDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SapCloudForCustomerResourceDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The path of the SAP Cloud for Customer OData entity. Type: string (or Expression with resultType string).
func (o SapCloudForCustomerResourceDatasetOutput) Path() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerResourceDataset) interface{} { return v.Path }).(pulumi.AnyOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o SapCloudForCustomerResourceDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerResourceDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'SapCloudForCustomerResource'.
func (o SapCloudForCustomerResourceDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapCloudForCustomerResourceDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The path of the SAP Cloud for Customer OData entity.
type SapCloudForCustomerResourceDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The path of the SAP Cloud for Customer OData entity. Type: string (or Expression with resultType string).
	Path interface{} `pulumi:"path"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SapCloudForCustomerResource'.
	Type string `pulumi:"type"`
}

// SapCloudForCustomerResourceDatasetResponseInput is an input type that accepts SapCloudForCustomerResourceDatasetResponseArgs and SapCloudForCustomerResourceDatasetResponseOutput values.
// You can construct a concrete instance of `SapCloudForCustomerResourceDatasetResponseInput` via:
//
//          SapCloudForCustomerResourceDatasetResponseArgs{...}
type SapCloudForCustomerResourceDatasetResponseInput interface {
	pulumi.Input

	ToSapCloudForCustomerResourceDatasetResponseOutput() SapCloudForCustomerResourceDatasetResponseOutput
	ToSapCloudForCustomerResourceDatasetResponseOutputWithContext(context.Context) SapCloudForCustomerResourceDatasetResponseOutput
}

// The path of the SAP Cloud for Customer OData entity.
type SapCloudForCustomerResourceDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The path of the SAP Cloud for Customer OData entity. Type: string (or Expression with resultType string).
	Path pulumi.Input `pulumi:"path"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SapCloudForCustomerResource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SapCloudForCustomerResourceDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapCloudForCustomerResourceDatasetResponse)(nil)).Elem()
}

func (i SapCloudForCustomerResourceDatasetResponseArgs) ToSapCloudForCustomerResourceDatasetResponseOutput() SapCloudForCustomerResourceDatasetResponseOutput {
	return i.ToSapCloudForCustomerResourceDatasetResponseOutputWithContext(context.Background())
}

func (i SapCloudForCustomerResourceDatasetResponseArgs) ToSapCloudForCustomerResourceDatasetResponseOutputWithContext(ctx context.Context) SapCloudForCustomerResourceDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapCloudForCustomerResourceDatasetResponseOutput)
}

// The path of the SAP Cloud for Customer OData entity.
type SapCloudForCustomerResourceDatasetResponseOutput struct{ *pulumi.OutputState }

func (SapCloudForCustomerResourceDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapCloudForCustomerResourceDatasetResponse)(nil)).Elem()
}

func (o SapCloudForCustomerResourceDatasetResponseOutput) ToSapCloudForCustomerResourceDatasetResponseOutput() SapCloudForCustomerResourceDatasetResponseOutput {
	return o
}

func (o SapCloudForCustomerResourceDatasetResponseOutput) ToSapCloudForCustomerResourceDatasetResponseOutputWithContext(ctx context.Context) SapCloudForCustomerResourceDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SapCloudForCustomerResourceDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SapCloudForCustomerResourceDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o SapCloudForCustomerResourceDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapCloudForCustomerResourceDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o SapCloudForCustomerResourceDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v SapCloudForCustomerResourceDatasetResponse) LinkedServiceReferenceResponse {
		return v.LinkedServiceName
	}).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o SapCloudForCustomerResourceDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SapCloudForCustomerResourceDatasetResponse) map[string]ParameterSpecificationResponse {
		return v.Parameters
	}).(ParameterSpecificationResponseMapOutput)
}

// The path of the SAP Cloud for Customer OData entity. Type: string (or Expression with resultType string).
func (o SapCloudForCustomerResourceDatasetResponseOutput) Path() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerResourceDatasetResponse) interface{} { return v.Path }).(pulumi.AnyOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o SapCloudForCustomerResourceDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerResourceDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'SapCloudForCustomerResource'.
func (o SapCloudForCustomerResourceDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapCloudForCustomerResourceDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity SAP Cloud for Customer sink.
type SapCloudForCustomerSink struct {
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'SapCloudForCustomerSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
	// The write behavior for the operation. Default is 'Insert'.
	WriteBehavior *string `pulumi:"writeBehavior"`
}

// SapCloudForCustomerSinkInput is an input type that accepts SapCloudForCustomerSinkArgs and SapCloudForCustomerSinkOutput values.
// You can construct a concrete instance of `SapCloudForCustomerSinkInput` via:
//
//          SapCloudForCustomerSinkArgs{...}
type SapCloudForCustomerSinkInput interface {
	pulumi.Input

	ToSapCloudForCustomerSinkOutput() SapCloudForCustomerSinkOutput
	ToSapCloudForCustomerSinkOutputWithContext(context.Context) SapCloudForCustomerSinkOutput
}

// A copy activity SAP Cloud for Customer sink.
type SapCloudForCustomerSinkArgs struct {
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'SapCloudForCustomerSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
	// The write behavior for the operation. Default is 'Insert'.
	WriteBehavior pulumi.StringPtrInput `pulumi:"writeBehavior"`
}

func (SapCloudForCustomerSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapCloudForCustomerSink)(nil)).Elem()
}

func (i SapCloudForCustomerSinkArgs) ToSapCloudForCustomerSinkOutput() SapCloudForCustomerSinkOutput {
	return i.ToSapCloudForCustomerSinkOutputWithContext(context.Background())
}

func (i SapCloudForCustomerSinkArgs) ToSapCloudForCustomerSinkOutputWithContext(ctx context.Context) SapCloudForCustomerSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapCloudForCustomerSinkOutput)
}

// A copy activity SAP Cloud for Customer sink.
type SapCloudForCustomerSinkOutput struct{ *pulumi.OutputState }

func (SapCloudForCustomerSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapCloudForCustomerSink)(nil)).Elem()
}

func (o SapCloudForCustomerSinkOutput) ToSapCloudForCustomerSinkOutput() SapCloudForCustomerSinkOutput {
	return o
}

func (o SapCloudForCustomerSinkOutput) ToSapCloudForCustomerSinkOutputWithContext(ctx context.Context) SapCloudForCustomerSinkOutput {
	return o
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o SapCloudForCustomerSinkOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerSink) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SapCloudForCustomerSinkOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerSink) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'SapCloudForCustomerSink'.
func (o SapCloudForCustomerSinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapCloudForCustomerSink) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o SapCloudForCustomerSinkOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerSink) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SapCloudForCustomerSinkOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerSink) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// The write behavior for the operation. Default is 'Insert'.
func (o SapCloudForCustomerSinkOutput) WriteBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapCloudForCustomerSink) *string { return v.WriteBehavior }).(pulumi.StringPtrOutput)
}

// A copy activity SAP Cloud for Customer sink.
type SapCloudForCustomerSinkResponse struct {
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'SapCloudForCustomerSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
	// The write behavior for the operation. Default is 'Insert'.
	WriteBehavior *string `pulumi:"writeBehavior"`
}

// SapCloudForCustomerSinkResponseInput is an input type that accepts SapCloudForCustomerSinkResponseArgs and SapCloudForCustomerSinkResponseOutput values.
// You can construct a concrete instance of `SapCloudForCustomerSinkResponseInput` via:
//
//          SapCloudForCustomerSinkResponseArgs{...}
type SapCloudForCustomerSinkResponseInput interface {
	pulumi.Input

	ToSapCloudForCustomerSinkResponseOutput() SapCloudForCustomerSinkResponseOutput
	ToSapCloudForCustomerSinkResponseOutputWithContext(context.Context) SapCloudForCustomerSinkResponseOutput
}

// A copy activity SAP Cloud for Customer sink.
type SapCloudForCustomerSinkResponseArgs struct {
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'SapCloudForCustomerSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
	// The write behavior for the operation. Default is 'Insert'.
	WriteBehavior pulumi.StringPtrInput `pulumi:"writeBehavior"`
}

func (SapCloudForCustomerSinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapCloudForCustomerSinkResponse)(nil)).Elem()
}

func (i SapCloudForCustomerSinkResponseArgs) ToSapCloudForCustomerSinkResponseOutput() SapCloudForCustomerSinkResponseOutput {
	return i.ToSapCloudForCustomerSinkResponseOutputWithContext(context.Background())
}

func (i SapCloudForCustomerSinkResponseArgs) ToSapCloudForCustomerSinkResponseOutputWithContext(ctx context.Context) SapCloudForCustomerSinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapCloudForCustomerSinkResponseOutput)
}

// A copy activity SAP Cloud for Customer sink.
type SapCloudForCustomerSinkResponseOutput struct{ *pulumi.OutputState }

func (SapCloudForCustomerSinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapCloudForCustomerSinkResponse)(nil)).Elem()
}

func (o SapCloudForCustomerSinkResponseOutput) ToSapCloudForCustomerSinkResponseOutput() SapCloudForCustomerSinkResponseOutput {
	return o
}

func (o SapCloudForCustomerSinkResponseOutput) ToSapCloudForCustomerSinkResponseOutputWithContext(ctx context.Context) SapCloudForCustomerSinkResponseOutput {
	return o
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o SapCloudForCustomerSinkResponseOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerSinkResponse) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SapCloudForCustomerSinkResponseOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerSinkResponse) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'SapCloudForCustomerSink'.
func (o SapCloudForCustomerSinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapCloudForCustomerSinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o SapCloudForCustomerSinkResponseOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerSinkResponse) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SapCloudForCustomerSinkResponseOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerSinkResponse) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// The write behavior for the operation. Default is 'Insert'.
func (o SapCloudForCustomerSinkResponseOutput) WriteBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapCloudForCustomerSinkResponse) *string { return v.WriteBehavior }).(pulumi.StringPtrOutput)
}

// A copy activity source for SAP Cloud for Customer source.
type SapCloudForCustomerSource struct {
	// SAP Cloud for Customer OData query. For example, "$top=1". Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SapCloudForCustomerSource'.
	Type string `pulumi:"type"`
}

// SapCloudForCustomerSourceInput is an input type that accepts SapCloudForCustomerSourceArgs and SapCloudForCustomerSourceOutput values.
// You can construct a concrete instance of `SapCloudForCustomerSourceInput` via:
//
//          SapCloudForCustomerSourceArgs{...}
type SapCloudForCustomerSourceInput interface {
	pulumi.Input

	ToSapCloudForCustomerSourceOutput() SapCloudForCustomerSourceOutput
	ToSapCloudForCustomerSourceOutputWithContext(context.Context) SapCloudForCustomerSourceOutput
}

// A copy activity source for SAP Cloud for Customer source.
type SapCloudForCustomerSourceArgs struct {
	// SAP Cloud for Customer OData query. For example, "$top=1". Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SapCloudForCustomerSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SapCloudForCustomerSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapCloudForCustomerSource)(nil)).Elem()
}

func (i SapCloudForCustomerSourceArgs) ToSapCloudForCustomerSourceOutput() SapCloudForCustomerSourceOutput {
	return i.ToSapCloudForCustomerSourceOutputWithContext(context.Background())
}

func (i SapCloudForCustomerSourceArgs) ToSapCloudForCustomerSourceOutputWithContext(ctx context.Context) SapCloudForCustomerSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapCloudForCustomerSourceOutput)
}

// A copy activity source for SAP Cloud for Customer source.
type SapCloudForCustomerSourceOutput struct{ *pulumi.OutputState }

func (SapCloudForCustomerSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapCloudForCustomerSource)(nil)).Elem()
}

func (o SapCloudForCustomerSourceOutput) ToSapCloudForCustomerSourceOutput() SapCloudForCustomerSourceOutput {
	return o
}

func (o SapCloudForCustomerSourceOutput) ToSapCloudForCustomerSourceOutputWithContext(ctx context.Context) SapCloudForCustomerSourceOutput {
	return o
}

// SAP Cloud for Customer OData query. For example, "$top=1". Type: string (or Expression with resultType string).
func (o SapCloudForCustomerSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o SapCloudForCustomerSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SapCloudForCustomerSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'SapCloudForCustomerSource'.
func (o SapCloudForCustomerSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapCloudForCustomerSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity source for SAP Cloud for Customer source.
type SapCloudForCustomerSourceResponse struct {
	// SAP Cloud for Customer OData query. For example, "$top=1". Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SapCloudForCustomerSource'.
	Type string `pulumi:"type"`
}

// SapCloudForCustomerSourceResponseInput is an input type that accepts SapCloudForCustomerSourceResponseArgs and SapCloudForCustomerSourceResponseOutput values.
// You can construct a concrete instance of `SapCloudForCustomerSourceResponseInput` via:
//
//          SapCloudForCustomerSourceResponseArgs{...}
type SapCloudForCustomerSourceResponseInput interface {
	pulumi.Input

	ToSapCloudForCustomerSourceResponseOutput() SapCloudForCustomerSourceResponseOutput
	ToSapCloudForCustomerSourceResponseOutputWithContext(context.Context) SapCloudForCustomerSourceResponseOutput
}

// A copy activity source for SAP Cloud for Customer source.
type SapCloudForCustomerSourceResponseArgs struct {
	// SAP Cloud for Customer OData query. For example, "$top=1". Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SapCloudForCustomerSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SapCloudForCustomerSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapCloudForCustomerSourceResponse)(nil)).Elem()
}

func (i SapCloudForCustomerSourceResponseArgs) ToSapCloudForCustomerSourceResponseOutput() SapCloudForCustomerSourceResponseOutput {
	return i.ToSapCloudForCustomerSourceResponseOutputWithContext(context.Background())
}

func (i SapCloudForCustomerSourceResponseArgs) ToSapCloudForCustomerSourceResponseOutputWithContext(ctx context.Context) SapCloudForCustomerSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapCloudForCustomerSourceResponseOutput)
}

// A copy activity source for SAP Cloud for Customer source.
type SapCloudForCustomerSourceResponseOutput struct{ *pulumi.OutputState }

func (SapCloudForCustomerSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapCloudForCustomerSourceResponse)(nil)).Elem()
}

func (o SapCloudForCustomerSourceResponseOutput) ToSapCloudForCustomerSourceResponseOutput() SapCloudForCustomerSourceResponseOutput {
	return o
}

func (o SapCloudForCustomerSourceResponseOutput) ToSapCloudForCustomerSourceResponseOutputWithContext(ctx context.Context) SapCloudForCustomerSourceResponseOutput {
	return o
}

// SAP Cloud for Customer OData query. For example, "$top=1". Type: string (or Expression with resultType string).
func (o SapCloudForCustomerSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o SapCloudForCustomerSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SapCloudForCustomerSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SapCloudForCustomerSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'SapCloudForCustomerSource'.
func (o SapCloudForCustomerSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapCloudForCustomerSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Linked service for SAP ERP Central Component(SAP ECC).
type SapEccLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).
	EncryptedCredential *string `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The password for Basic authentication.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'SapEcc'.
	Type string `pulumi:"type"`
	// The URL of SAP ECC OData API. For example, '[https://hostname:port/sap/opu/odata/sap/servicename/]'. Type: string (or Expression with resultType string).
	Url string `pulumi:"url"`
	// The username for Basic authentication. Type: string (or Expression with resultType string).
	Username *string `pulumi:"username"`
}

// SapEccLinkedServiceInput is an input type that accepts SapEccLinkedServiceArgs and SapEccLinkedServiceOutput values.
// You can construct a concrete instance of `SapEccLinkedServiceInput` via:
//
//          SapEccLinkedServiceArgs{...}
type SapEccLinkedServiceInput interface {
	pulumi.Input

	ToSapEccLinkedServiceOutput() SapEccLinkedServiceOutput
	ToSapEccLinkedServiceOutputWithContext(context.Context) SapEccLinkedServiceOutput
}

// Linked service for SAP ERP Central Component(SAP ECC).
type SapEccLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.StringPtrInput `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The password for Basic authentication.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'SapEcc'.
	Type pulumi.StringInput `pulumi:"type"`
	// The URL of SAP ECC OData API. For example, '[https://hostname:port/sap/opu/odata/sap/servicename/]'. Type: string (or Expression with resultType string).
	Url pulumi.StringInput `pulumi:"url"`
	// The username for Basic authentication. Type: string (or Expression with resultType string).
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (SapEccLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapEccLinkedService)(nil)).Elem()
}

func (i SapEccLinkedServiceArgs) ToSapEccLinkedServiceOutput() SapEccLinkedServiceOutput {
	return i.ToSapEccLinkedServiceOutputWithContext(context.Background())
}

func (i SapEccLinkedServiceArgs) ToSapEccLinkedServiceOutputWithContext(ctx context.Context) SapEccLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapEccLinkedServiceOutput)
}

// Linked service for SAP ERP Central Component(SAP ECC).
type SapEccLinkedServiceOutput struct{ *pulumi.OutputState }

func (SapEccLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapEccLinkedService)(nil)).Elem()
}

func (o SapEccLinkedServiceOutput) ToSapEccLinkedServiceOutput() SapEccLinkedServiceOutput {
	return o
}

func (o SapEccLinkedServiceOutput) ToSapEccLinkedServiceOutputWithContext(ctx context.Context) SapEccLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SapEccLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SapEccLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o SapEccLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v SapEccLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o SapEccLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapEccLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).
func (o SapEccLinkedServiceOutput) EncryptedCredential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapEccLinkedService) *string { return v.EncryptedCredential }).(pulumi.StringPtrOutput)
}

// Parameters for linked service.
func (o SapEccLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SapEccLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The password for Basic authentication.
func (o SapEccLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SapEccLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'SapEcc'.
func (o SapEccLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapEccLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// The URL of SAP ECC OData API. For example, '[https://hostname:port/sap/opu/odata/sap/servicename/]'. Type: string (or Expression with resultType string).
func (o SapEccLinkedServiceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v SapEccLinkedService) string { return v.Url }).(pulumi.StringOutput)
}

// The username for Basic authentication. Type: string (or Expression with resultType string).
func (o SapEccLinkedServiceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapEccLinkedService) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Linked service for SAP ERP Central Component(SAP ECC).
type SapEccLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).
	EncryptedCredential *string `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The password for Basic authentication.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'SapEcc'.
	Type string `pulumi:"type"`
	// The URL of SAP ECC OData API. For example, '[https://hostname:port/sap/opu/odata/sap/servicename/]'. Type: string (or Expression with resultType string).
	Url string `pulumi:"url"`
	// The username for Basic authentication. Type: string (or Expression with resultType string).
	Username *string `pulumi:"username"`
}

// SapEccLinkedServiceResponseInput is an input type that accepts SapEccLinkedServiceResponseArgs and SapEccLinkedServiceResponseOutput values.
// You can construct a concrete instance of `SapEccLinkedServiceResponseInput` via:
//
//          SapEccLinkedServiceResponseArgs{...}
type SapEccLinkedServiceResponseInput interface {
	pulumi.Input

	ToSapEccLinkedServiceResponseOutput() SapEccLinkedServiceResponseOutput
	ToSapEccLinkedServiceResponseOutputWithContext(context.Context) SapEccLinkedServiceResponseOutput
}

// Linked service for SAP ERP Central Component(SAP ECC).
type SapEccLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.StringPtrInput `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The password for Basic authentication.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'SapEcc'.
	Type pulumi.StringInput `pulumi:"type"`
	// The URL of SAP ECC OData API. For example, '[https://hostname:port/sap/opu/odata/sap/servicename/]'. Type: string (or Expression with resultType string).
	Url pulumi.StringInput `pulumi:"url"`
	// The username for Basic authentication. Type: string (or Expression with resultType string).
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (SapEccLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapEccLinkedServiceResponse)(nil)).Elem()
}

func (i SapEccLinkedServiceResponseArgs) ToSapEccLinkedServiceResponseOutput() SapEccLinkedServiceResponseOutput {
	return i.ToSapEccLinkedServiceResponseOutputWithContext(context.Background())
}

func (i SapEccLinkedServiceResponseArgs) ToSapEccLinkedServiceResponseOutputWithContext(ctx context.Context) SapEccLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapEccLinkedServiceResponseOutput)
}

// Linked service for SAP ERP Central Component(SAP ECC).
type SapEccLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (SapEccLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapEccLinkedServiceResponse)(nil)).Elem()
}

func (o SapEccLinkedServiceResponseOutput) ToSapEccLinkedServiceResponseOutput() SapEccLinkedServiceResponseOutput {
	return o
}

func (o SapEccLinkedServiceResponseOutput) ToSapEccLinkedServiceResponseOutputWithContext(ctx context.Context) SapEccLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SapEccLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SapEccLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o SapEccLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v SapEccLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o SapEccLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapEccLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).
func (o SapEccLinkedServiceResponseOutput) EncryptedCredential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapEccLinkedServiceResponse) *string { return v.EncryptedCredential }).(pulumi.StringPtrOutput)
}

// Parameters for linked service.
func (o SapEccLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SapEccLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The password for Basic authentication.
func (o SapEccLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SapEccLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'SapEcc'.
func (o SapEccLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapEccLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The URL of SAP ECC OData API. For example, '[https://hostname:port/sap/opu/odata/sap/servicename/]'. Type: string (or Expression with resultType string).
func (o SapEccLinkedServiceResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v SapEccLinkedServiceResponse) string { return v.Url }).(pulumi.StringOutput)
}

// The username for Basic authentication. Type: string (or Expression with resultType string).
func (o SapEccLinkedServiceResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapEccLinkedServiceResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// The path of the SAP ECC OData entity.
type SapEccResourceDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The path of the SAP ECC OData entity. Type: string (or Expression with resultType string).
	Path interface{} `pulumi:"path"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SapEccResource'.
	Type string `pulumi:"type"`
}

// SapEccResourceDatasetInput is an input type that accepts SapEccResourceDatasetArgs and SapEccResourceDatasetOutput values.
// You can construct a concrete instance of `SapEccResourceDatasetInput` via:
//
//          SapEccResourceDatasetArgs{...}
type SapEccResourceDatasetInput interface {
	pulumi.Input

	ToSapEccResourceDatasetOutput() SapEccResourceDatasetOutput
	ToSapEccResourceDatasetOutputWithContext(context.Context) SapEccResourceDatasetOutput
}

// The path of the SAP ECC OData entity.
type SapEccResourceDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The path of the SAP ECC OData entity. Type: string (or Expression with resultType string).
	Path pulumi.Input `pulumi:"path"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SapEccResource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SapEccResourceDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapEccResourceDataset)(nil)).Elem()
}

func (i SapEccResourceDatasetArgs) ToSapEccResourceDatasetOutput() SapEccResourceDatasetOutput {
	return i.ToSapEccResourceDatasetOutputWithContext(context.Background())
}

func (i SapEccResourceDatasetArgs) ToSapEccResourceDatasetOutputWithContext(ctx context.Context) SapEccResourceDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapEccResourceDatasetOutput)
}

// The path of the SAP ECC OData entity.
type SapEccResourceDatasetOutput struct{ *pulumi.OutputState }

func (SapEccResourceDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapEccResourceDataset)(nil)).Elem()
}

func (o SapEccResourceDatasetOutput) ToSapEccResourceDatasetOutput() SapEccResourceDatasetOutput {
	return o
}

func (o SapEccResourceDatasetOutput) ToSapEccResourceDatasetOutputWithContext(ctx context.Context) SapEccResourceDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SapEccResourceDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SapEccResourceDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o SapEccResourceDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapEccResourceDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o SapEccResourceDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v SapEccResourceDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o SapEccResourceDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SapEccResourceDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The path of the SAP ECC OData entity. Type: string (or Expression with resultType string).
func (o SapEccResourceDatasetOutput) Path() pulumi.AnyOutput {
	return o.ApplyT(func(v SapEccResourceDataset) interface{} { return v.Path }).(pulumi.AnyOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o SapEccResourceDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v SapEccResourceDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'SapEccResource'.
func (o SapEccResourceDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapEccResourceDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The path of the SAP ECC OData entity.
type SapEccResourceDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The path of the SAP ECC OData entity. Type: string (or Expression with resultType string).
	Path interface{} `pulumi:"path"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SapEccResource'.
	Type string `pulumi:"type"`
}

// SapEccResourceDatasetResponseInput is an input type that accepts SapEccResourceDatasetResponseArgs and SapEccResourceDatasetResponseOutput values.
// You can construct a concrete instance of `SapEccResourceDatasetResponseInput` via:
//
//          SapEccResourceDatasetResponseArgs{...}
type SapEccResourceDatasetResponseInput interface {
	pulumi.Input

	ToSapEccResourceDatasetResponseOutput() SapEccResourceDatasetResponseOutput
	ToSapEccResourceDatasetResponseOutputWithContext(context.Context) SapEccResourceDatasetResponseOutput
}

// The path of the SAP ECC OData entity.
type SapEccResourceDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The path of the SAP ECC OData entity. Type: string (or Expression with resultType string).
	Path pulumi.Input `pulumi:"path"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SapEccResource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SapEccResourceDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapEccResourceDatasetResponse)(nil)).Elem()
}

func (i SapEccResourceDatasetResponseArgs) ToSapEccResourceDatasetResponseOutput() SapEccResourceDatasetResponseOutput {
	return i.ToSapEccResourceDatasetResponseOutputWithContext(context.Background())
}

func (i SapEccResourceDatasetResponseArgs) ToSapEccResourceDatasetResponseOutputWithContext(ctx context.Context) SapEccResourceDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapEccResourceDatasetResponseOutput)
}

// The path of the SAP ECC OData entity.
type SapEccResourceDatasetResponseOutput struct{ *pulumi.OutputState }

func (SapEccResourceDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapEccResourceDatasetResponse)(nil)).Elem()
}

func (o SapEccResourceDatasetResponseOutput) ToSapEccResourceDatasetResponseOutput() SapEccResourceDatasetResponseOutput {
	return o
}

func (o SapEccResourceDatasetResponseOutput) ToSapEccResourceDatasetResponseOutputWithContext(ctx context.Context) SapEccResourceDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SapEccResourceDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SapEccResourceDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o SapEccResourceDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapEccResourceDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o SapEccResourceDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v SapEccResourceDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o SapEccResourceDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SapEccResourceDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The path of the SAP ECC OData entity. Type: string (or Expression with resultType string).
func (o SapEccResourceDatasetResponseOutput) Path() pulumi.AnyOutput {
	return o.ApplyT(func(v SapEccResourceDatasetResponse) interface{} { return v.Path }).(pulumi.AnyOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o SapEccResourceDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v SapEccResourceDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'SapEccResource'.
func (o SapEccResourceDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapEccResourceDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity source for SAP ECC source.
type SapEccSource struct {
	// SAP ECC OData query. For example, "$top=1". Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SapEccSource'.
	Type string `pulumi:"type"`
}

// SapEccSourceInput is an input type that accepts SapEccSourceArgs and SapEccSourceOutput values.
// You can construct a concrete instance of `SapEccSourceInput` via:
//
//          SapEccSourceArgs{...}
type SapEccSourceInput interface {
	pulumi.Input

	ToSapEccSourceOutput() SapEccSourceOutput
	ToSapEccSourceOutputWithContext(context.Context) SapEccSourceOutput
}

// A copy activity source for SAP ECC source.
type SapEccSourceArgs struct {
	// SAP ECC OData query. For example, "$top=1". Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SapEccSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SapEccSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapEccSource)(nil)).Elem()
}

func (i SapEccSourceArgs) ToSapEccSourceOutput() SapEccSourceOutput {
	return i.ToSapEccSourceOutputWithContext(context.Background())
}

func (i SapEccSourceArgs) ToSapEccSourceOutputWithContext(ctx context.Context) SapEccSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapEccSourceOutput)
}

// A copy activity source for SAP ECC source.
type SapEccSourceOutput struct{ *pulumi.OutputState }

func (SapEccSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapEccSource)(nil)).Elem()
}

func (o SapEccSourceOutput) ToSapEccSourceOutput() SapEccSourceOutput {
	return o
}

func (o SapEccSourceOutput) ToSapEccSourceOutputWithContext(ctx context.Context) SapEccSourceOutput {
	return o
}

// SAP ECC OData query. For example, "$top=1". Type: string (or Expression with resultType string).
func (o SapEccSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v SapEccSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o SapEccSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SapEccSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SapEccSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SapEccSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'SapEccSource'.
func (o SapEccSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapEccSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity source for SAP ECC source.
type SapEccSourceResponse struct {
	// SAP ECC OData query. For example, "$top=1". Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SapEccSource'.
	Type string `pulumi:"type"`
}

// SapEccSourceResponseInput is an input type that accepts SapEccSourceResponseArgs and SapEccSourceResponseOutput values.
// You can construct a concrete instance of `SapEccSourceResponseInput` via:
//
//          SapEccSourceResponseArgs{...}
type SapEccSourceResponseInput interface {
	pulumi.Input

	ToSapEccSourceResponseOutput() SapEccSourceResponseOutput
	ToSapEccSourceResponseOutputWithContext(context.Context) SapEccSourceResponseOutput
}

// A copy activity source for SAP ECC source.
type SapEccSourceResponseArgs struct {
	// SAP ECC OData query. For example, "$top=1". Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SapEccSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SapEccSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapEccSourceResponse)(nil)).Elem()
}

func (i SapEccSourceResponseArgs) ToSapEccSourceResponseOutput() SapEccSourceResponseOutput {
	return i.ToSapEccSourceResponseOutputWithContext(context.Background())
}

func (i SapEccSourceResponseArgs) ToSapEccSourceResponseOutputWithContext(ctx context.Context) SapEccSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapEccSourceResponseOutput)
}

// A copy activity source for SAP ECC source.
type SapEccSourceResponseOutput struct{ *pulumi.OutputState }

func (SapEccSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapEccSourceResponse)(nil)).Elem()
}

func (o SapEccSourceResponseOutput) ToSapEccSourceResponseOutput() SapEccSourceResponseOutput {
	return o
}

func (o SapEccSourceResponseOutput) ToSapEccSourceResponseOutputWithContext(ctx context.Context) SapEccSourceResponseOutput {
	return o
}

// SAP ECC OData query. For example, "$top=1". Type: string (or Expression with resultType string).
func (o SapEccSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v SapEccSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o SapEccSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SapEccSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SapEccSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SapEccSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'SapEccSource'.
func (o SapEccSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapEccSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// SAP HANA Linked Service.
type SapHanaLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication type to be used to connect to the SAP HANA server.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Password to access the SAP HANA server.
	Password interface{} `pulumi:"password"`
	// Host name of the SAP HANA server. Type: string (or Expression with resultType string).
	Server interface{} `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'SapHana'.
	Type string `pulumi:"type"`
	// Username to access the SAP HANA server. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// SapHanaLinkedServiceInput is an input type that accepts SapHanaLinkedServiceArgs and SapHanaLinkedServiceOutput values.
// You can construct a concrete instance of `SapHanaLinkedServiceInput` via:
//
//          SapHanaLinkedServiceArgs{...}
type SapHanaLinkedServiceInput interface {
	pulumi.Input

	ToSapHanaLinkedServiceOutput() SapHanaLinkedServiceOutput
	ToSapHanaLinkedServiceOutputWithContext(context.Context) SapHanaLinkedServiceOutput
}

// SAP HANA Linked Service.
type SapHanaLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication type to be used to connect to the SAP HANA server.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Password to access the SAP HANA server.
	Password pulumi.Input `pulumi:"password"`
	// Host name of the SAP HANA server. Type: string (or Expression with resultType string).
	Server pulumi.Input `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'SapHana'.
	Type pulumi.StringInput `pulumi:"type"`
	// Username to access the SAP HANA server. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (SapHanaLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapHanaLinkedService)(nil)).Elem()
}

func (i SapHanaLinkedServiceArgs) ToSapHanaLinkedServiceOutput() SapHanaLinkedServiceOutput {
	return i.ToSapHanaLinkedServiceOutputWithContext(context.Background())
}

func (i SapHanaLinkedServiceArgs) ToSapHanaLinkedServiceOutputWithContext(ctx context.Context) SapHanaLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapHanaLinkedServiceOutput)
}

// SAP HANA Linked Service.
type SapHanaLinkedServiceOutput struct{ *pulumi.OutputState }

func (SapHanaLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapHanaLinkedService)(nil)).Elem()
}

func (o SapHanaLinkedServiceOutput) ToSapHanaLinkedServiceOutput() SapHanaLinkedServiceOutput {
	return o
}

func (o SapHanaLinkedServiceOutput) ToSapHanaLinkedServiceOutputWithContext(ctx context.Context) SapHanaLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SapHanaLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SapHanaLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication type to be used to connect to the SAP HANA server.
func (o SapHanaLinkedServiceOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapHanaLinkedService) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The integration runtime reference.
func (o SapHanaLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v SapHanaLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o SapHanaLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapHanaLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SapHanaLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SapHanaLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SapHanaLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SapHanaLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Password to access the SAP HANA server.
func (o SapHanaLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SapHanaLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Host name of the SAP HANA server. Type: string (or Expression with resultType string).
func (o SapHanaLinkedServiceOutput) Server() pulumi.AnyOutput {
	return o.ApplyT(func(v SapHanaLinkedService) interface{} { return v.Server }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'SapHana'.
func (o SapHanaLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapHanaLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Username to access the SAP HANA server. Type: string (or Expression with resultType string).
func (o SapHanaLinkedServiceOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v SapHanaLinkedService) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// SAP HANA Linked Service.
type SapHanaLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication type to be used to connect to the SAP HANA server.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Password to access the SAP HANA server.
	Password interface{} `pulumi:"password"`
	// Host name of the SAP HANA server. Type: string (or Expression with resultType string).
	Server interface{} `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'SapHana'.
	Type string `pulumi:"type"`
	// Username to access the SAP HANA server. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// SapHanaLinkedServiceResponseInput is an input type that accepts SapHanaLinkedServiceResponseArgs and SapHanaLinkedServiceResponseOutput values.
// You can construct a concrete instance of `SapHanaLinkedServiceResponseInput` via:
//
//          SapHanaLinkedServiceResponseArgs{...}
type SapHanaLinkedServiceResponseInput interface {
	pulumi.Input

	ToSapHanaLinkedServiceResponseOutput() SapHanaLinkedServiceResponseOutput
	ToSapHanaLinkedServiceResponseOutputWithContext(context.Context) SapHanaLinkedServiceResponseOutput
}

// SAP HANA Linked Service.
type SapHanaLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication type to be used to connect to the SAP HANA server.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Password to access the SAP HANA server.
	Password pulumi.Input `pulumi:"password"`
	// Host name of the SAP HANA server. Type: string (or Expression with resultType string).
	Server pulumi.Input `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'SapHana'.
	Type pulumi.StringInput `pulumi:"type"`
	// Username to access the SAP HANA server. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (SapHanaLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SapHanaLinkedServiceResponse)(nil)).Elem()
}

func (i SapHanaLinkedServiceResponseArgs) ToSapHanaLinkedServiceResponseOutput() SapHanaLinkedServiceResponseOutput {
	return i.ToSapHanaLinkedServiceResponseOutputWithContext(context.Background())
}

func (i SapHanaLinkedServiceResponseArgs) ToSapHanaLinkedServiceResponseOutputWithContext(ctx context.Context) SapHanaLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SapHanaLinkedServiceResponseOutput)
}

// SAP HANA Linked Service.
type SapHanaLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (SapHanaLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SapHanaLinkedServiceResponse)(nil)).Elem()
}

func (o SapHanaLinkedServiceResponseOutput) ToSapHanaLinkedServiceResponseOutput() SapHanaLinkedServiceResponseOutput {
	return o
}

func (o SapHanaLinkedServiceResponseOutput) ToSapHanaLinkedServiceResponseOutputWithContext(ctx context.Context) SapHanaLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SapHanaLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SapHanaLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication type to be used to connect to the SAP HANA server.
func (o SapHanaLinkedServiceResponseOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapHanaLinkedServiceResponse) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The integration runtime reference.
func (o SapHanaLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v SapHanaLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o SapHanaLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SapHanaLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SapHanaLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SapHanaLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SapHanaLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SapHanaLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Password to access the SAP HANA server.
func (o SapHanaLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SapHanaLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Host name of the SAP HANA server. Type: string (or Expression with resultType string).
func (o SapHanaLinkedServiceResponseOutput) Server() pulumi.AnyOutput {
	return o.ApplyT(func(v SapHanaLinkedServiceResponse) interface{} { return v.Server }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'SapHana'.
func (o SapHanaLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SapHanaLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Username to access the SAP HANA server. Type: string (or Expression with resultType string).
func (o SapHanaLinkedServiceResponseOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v SapHanaLinkedServiceResponse) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// Trigger that creates pipeline runs periodically, on schedule.
type ScheduleTrigger struct {
	// Trigger description.
	Description *string `pulumi:"description"`
	// Pipelines that need to be started.
	Pipelines []TriggerPipelineReference `pulumi:"pipelines"`
	// Recurrence schedule configuration.
	Recurrence ScheduleTriggerRecurrence `pulumi:"recurrence"`
	// Trigger type.
	// Expected value is 'MultiplePipelineTrigger'.
	Type string `pulumi:"type"`
}

// ScheduleTriggerInput is an input type that accepts ScheduleTriggerArgs and ScheduleTriggerOutput values.
// You can construct a concrete instance of `ScheduleTriggerInput` via:
//
//          ScheduleTriggerArgs{...}
type ScheduleTriggerInput interface {
	pulumi.Input

	ToScheduleTriggerOutput() ScheduleTriggerOutput
	ToScheduleTriggerOutputWithContext(context.Context) ScheduleTriggerOutput
}

// Trigger that creates pipeline runs periodically, on schedule.
type ScheduleTriggerArgs struct {
	// Trigger description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Pipelines that need to be started.
	Pipelines TriggerPipelineReferenceArrayInput `pulumi:"pipelines"`
	// Recurrence schedule configuration.
	Recurrence ScheduleTriggerRecurrenceInput `pulumi:"recurrence"`
	// Trigger type.
	// Expected value is 'MultiplePipelineTrigger'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ScheduleTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTrigger)(nil)).Elem()
}

func (i ScheduleTriggerArgs) ToScheduleTriggerOutput() ScheduleTriggerOutput {
	return i.ToScheduleTriggerOutputWithContext(context.Background())
}

func (i ScheduleTriggerArgs) ToScheduleTriggerOutputWithContext(ctx context.Context) ScheduleTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTriggerOutput)
}

// Trigger that creates pipeline runs periodically, on schedule.
type ScheduleTriggerOutput struct{ *pulumi.OutputState }

func (ScheduleTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTrigger)(nil)).Elem()
}

func (o ScheduleTriggerOutput) ToScheduleTriggerOutput() ScheduleTriggerOutput {
	return o
}

func (o ScheduleTriggerOutput) ToScheduleTriggerOutputWithContext(ctx context.Context) ScheduleTriggerOutput {
	return o
}

// Trigger description.
func (o ScheduleTriggerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTrigger) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Pipelines that need to be started.
func (o ScheduleTriggerOutput) Pipelines() TriggerPipelineReferenceArrayOutput {
	return o.ApplyT(func(v ScheduleTrigger) []TriggerPipelineReference { return v.Pipelines }).(TriggerPipelineReferenceArrayOutput)
}

// Recurrence schedule configuration.
func (o ScheduleTriggerOutput) Recurrence() ScheduleTriggerRecurrenceOutput {
	return o.ApplyT(func(v ScheduleTrigger) ScheduleTriggerRecurrence { return v.Recurrence }).(ScheduleTriggerRecurrenceOutput)
}

// Trigger type.
// Expected value is 'MultiplePipelineTrigger'.
func (o ScheduleTriggerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleTrigger) string { return v.Type }).(pulumi.StringOutput)
}

// The workflow trigger recurrence.
type ScheduleTriggerRecurrence struct {
	// The end time.
	EndTime *string `pulumi:"endTime"`
	// The frequency.
	Frequency *string `pulumi:"frequency"`
	// The interval.
	Interval *int `pulumi:"interval"`
	// The recurrence schedule.
	Schedule *RecurrenceSchedule `pulumi:"schedule"`
	// The start time.
	StartTime *string `pulumi:"startTime"`
	// The time zone.
	TimeZone *string `pulumi:"timeZone"`
}

// ScheduleTriggerRecurrenceInput is an input type that accepts ScheduleTriggerRecurrenceArgs and ScheduleTriggerRecurrenceOutput values.
// You can construct a concrete instance of `ScheduleTriggerRecurrenceInput` via:
//
//          ScheduleTriggerRecurrenceArgs{...}
type ScheduleTriggerRecurrenceInput interface {
	pulumi.Input

	ToScheduleTriggerRecurrenceOutput() ScheduleTriggerRecurrenceOutput
	ToScheduleTriggerRecurrenceOutputWithContext(context.Context) ScheduleTriggerRecurrenceOutput
}

// The workflow trigger recurrence.
type ScheduleTriggerRecurrenceArgs struct {
	// The end time.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// The frequency.
	Frequency pulumi.StringPtrInput `pulumi:"frequency"`
	// The interval.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The recurrence schedule.
	Schedule RecurrenceSchedulePtrInput `pulumi:"schedule"`
	// The start time.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// The time zone.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (ScheduleTriggerRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTriggerRecurrence)(nil)).Elem()
}

func (i ScheduleTriggerRecurrenceArgs) ToScheduleTriggerRecurrenceOutput() ScheduleTriggerRecurrenceOutput {
	return i.ToScheduleTriggerRecurrenceOutputWithContext(context.Background())
}

func (i ScheduleTriggerRecurrenceArgs) ToScheduleTriggerRecurrenceOutputWithContext(ctx context.Context) ScheduleTriggerRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTriggerRecurrenceOutput)
}

// The workflow trigger recurrence.
type ScheduleTriggerRecurrenceOutput struct{ *pulumi.OutputState }

func (ScheduleTriggerRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTriggerRecurrence)(nil)).Elem()
}

func (o ScheduleTriggerRecurrenceOutput) ToScheduleTriggerRecurrenceOutput() ScheduleTriggerRecurrenceOutput {
	return o
}

func (o ScheduleTriggerRecurrenceOutput) ToScheduleTriggerRecurrenceOutputWithContext(ctx context.Context) ScheduleTriggerRecurrenceOutput {
	return o
}

// The end time.
func (o ScheduleTriggerRecurrenceOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTriggerRecurrence) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The frequency.
func (o ScheduleTriggerRecurrenceOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTriggerRecurrence) *string { return v.Frequency }).(pulumi.StringPtrOutput)
}

// The interval.
func (o ScheduleTriggerRecurrenceOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduleTriggerRecurrence) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The recurrence schedule.
func (o ScheduleTriggerRecurrenceOutput) Schedule() RecurrenceSchedulePtrOutput {
	return o.ApplyT(func(v ScheduleTriggerRecurrence) *RecurrenceSchedule { return v.Schedule }).(RecurrenceSchedulePtrOutput)
}

// The start time.
func (o ScheduleTriggerRecurrenceOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTriggerRecurrence) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The time zone.
func (o ScheduleTriggerRecurrenceOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTriggerRecurrence) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// The workflow trigger recurrence.
type ScheduleTriggerRecurrenceResponse struct {
	// The end time.
	EndTime *string `pulumi:"endTime"`
	// The frequency.
	Frequency *string `pulumi:"frequency"`
	// The interval.
	Interval *int `pulumi:"interval"`
	// The recurrence schedule.
	Schedule *RecurrenceScheduleResponse `pulumi:"schedule"`
	// The start time.
	StartTime *string `pulumi:"startTime"`
	// The time zone.
	TimeZone *string `pulumi:"timeZone"`
}

// ScheduleTriggerRecurrenceResponseInput is an input type that accepts ScheduleTriggerRecurrenceResponseArgs and ScheduleTriggerRecurrenceResponseOutput values.
// You can construct a concrete instance of `ScheduleTriggerRecurrenceResponseInput` via:
//
//          ScheduleTriggerRecurrenceResponseArgs{...}
type ScheduleTriggerRecurrenceResponseInput interface {
	pulumi.Input

	ToScheduleTriggerRecurrenceResponseOutput() ScheduleTriggerRecurrenceResponseOutput
	ToScheduleTriggerRecurrenceResponseOutputWithContext(context.Context) ScheduleTriggerRecurrenceResponseOutput
}

// The workflow trigger recurrence.
type ScheduleTriggerRecurrenceResponseArgs struct {
	// The end time.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// The frequency.
	Frequency pulumi.StringPtrInput `pulumi:"frequency"`
	// The interval.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The recurrence schedule.
	Schedule RecurrenceScheduleResponsePtrInput `pulumi:"schedule"`
	// The start time.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// The time zone.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (ScheduleTriggerRecurrenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTriggerRecurrenceResponse)(nil)).Elem()
}

func (i ScheduleTriggerRecurrenceResponseArgs) ToScheduleTriggerRecurrenceResponseOutput() ScheduleTriggerRecurrenceResponseOutput {
	return i.ToScheduleTriggerRecurrenceResponseOutputWithContext(context.Background())
}

func (i ScheduleTriggerRecurrenceResponseArgs) ToScheduleTriggerRecurrenceResponseOutputWithContext(ctx context.Context) ScheduleTriggerRecurrenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTriggerRecurrenceResponseOutput)
}

// The workflow trigger recurrence.
type ScheduleTriggerRecurrenceResponseOutput struct{ *pulumi.OutputState }

func (ScheduleTriggerRecurrenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTriggerRecurrenceResponse)(nil)).Elem()
}

func (o ScheduleTriggerRecurrenceResponseOutput) ToScheduleTriggerRecurrenceResponseOutput() ScheduleTriggerRecurrenceResponseOutput {
	return o
}

func (o ScheduleTriggerRecurrenceResponseOutput) ToScheduleTriggerRecurrenceResponseOutputWithContext(ctx context.Context) ScheduleTriggerRecurrenceResponseOutput {
	return o
}

// The end time.
func (o ScheduleTriggerRecurrenceResponseOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTriggerRecurrenceResponse) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The frequency.
func (o ScheduleTriggerRecurrenceResponseOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTriggerRecurrenceResponse) *string { return v.Frequency }).(pulumi.StringPtrOutput)
}

// The interval.
func (o ScheduleTriggerRecurrenceResponseOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduleTriggerRecurrenceResponse) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The recurrence schedule.
func (o ScheduleTriggerRecurrenceResponseOutput) Schedule() RecurrenceScheduleResponsePtrOutput {
	return o.ApplyT(func(v ScheduleTriggerRecurrenceResponse) *RecurrenceScheduleResponse { return v.Schedule }).(RecurrenceScheduleResponsePtrOutput)
}

// The start time.
func (o ScheduleTriggerRecurrenceResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTriggerRecurrenceResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The time zone.
func (o ScheduleTriggerRecurrenceResponseOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTriggerRecurrenceResponse) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Trigger that creates pipeline runs periodically, on schedule.
type ScheduleTriggerResponse struct {
	// Trigger description.
	Description *string `pulumi:"description"`
	// Pipelines that need to be started.
	Pipelines []TriggerPipelineReferenceResponse `pulumi:"pipelines"`
	// Recurrence schedule configuration.
	Recurrence ScheduleTriggerRecurrenceResponse `pulumi:"recurrence"`
	// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
	RuntimeState string `pulumi:"runtimeState"`
	// Trigger type.
	// Expected value is 'MultiplePipelineTrigger'.
	Type string `pulumi:"type"`
}

// ScheduleTriggerResponseInput is an input type that accepts ScheduleTriggerResponseArgs and ScheduleTriggerResponseOutput values.
// You can construct a concrete instance of `ScheduleTriggerResponseInput` via:
//
//          ScheduleTriggerResponseArgs{...}
type ScheduleTriggerResponseInput interface {
	pulumi.Input

	ToScheduleTriggerResponseOutput() ScheduleTriggerResponseOutput
	ToScheduleTriggerResponseOutputWithContext(context.Context) ScheduleTriggerResponseOutput
}

// Trigger that creates pipeline runs periodically, on schedule.
type ScheduleTriggerResponseArgs struct {
	// Trigger description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Pipelines that need to be started.
	Pipelines TriggerPipelineReferenceResponseArrayInput `pulumi:"pipelines"`
	// Recurrence schedule configuration.
	Recurrence ScheduleTriggerRecurrenceResponseInput `pulumi:"recurrence"`
	// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
	RuntimeState pulumi.StringInput `pulumi:"runtimeState"`
	// Trigger type.
	// Expected value is 'MultiplePipelineTrigger'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ScheduleTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTriggerResponse)(nil)).Elem()
}

func (i ScheduleTriggerResponseArgs) ToScheduleTriggerResponseOutput() ScheduleTriggerResponseOutput {
	return i.ToScheduleTriggerResponseOutputWithContext(context.Background())
}

func (i ScheduleTriggerResponseArgs) ToScheduleTriggerResponseOutputWithContext(ctx context.Context) ScheduleTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTriggerResponseOutput)
}

// Trigger that creates pipeline runs periodically, on schedule.
type ScheduleTriggerResponseOutput struct{ *pulumi.OutputState }

func (ScheduleTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTriggerResponse)(nil)).Elem()
}

func (o ScheduleTriggerResponseOutput) ToScheduleTriggerResponseOutput() ScheduleTriggerResponseOutput {
	return o
}

func (o ScheduleTriggerResponseOutput) ToScheduleTriggerResponseOutputWithContext(ctx context.Context) ScheduleTriggerResponseOutput {
	return o
}

// Trigger description.
func (o ScheduleTriggerResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTriggerResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Pipelines that need to be started.
func (o ScheduleTriggerResponseOutput) Pipelines() TriggerPipelineReferenceResponseArrayOutput {
	return o.ApplyT(func(v ScheduleTriggerResponse) []TriggerPipelineReferenceResponse { return v.Pipelines }).(TriggerPipelineReferenceResponseArrayOutput)
}

// Recurrence schedule configuration.
func (o ScheduleTriggerResponseOutput) Recurrence() ScheduleTriggerRecurrenceResponseOutput {
	return o.ApplyT(func(v ScheduleTriggerResponse) ScheduleTriggerRecurrenceResponse { return v.Recurrence }).(ScheduleTriggerRecurrenceResponseOutput)
}

// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
func (o ScheduleTriggerResponseOutput) RuntimeState() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleTriggerResponse) string { return v.RuntimeState }).(pulumi.StringOutput)
}

// Trigger type.
// Expected value is 'MultiplePipelineTrigger'.
func (o ScheduleTriggerResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleTriggerResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.
type SecureString struct {
	// Type of the secret.
	// Expected value is 'SecureString'.
	Type string `pulumi:"type"`
	// Value of secure string.
	Value string `pulumi:"value"`
}

// SecureStringInput is an input type that accepts SecureStringArgs and SecureStringOutput values.
// You can construct a concrete instance of `SecureStringInput` via:
//
//          SecureStringArgs{...}
type SecureStringInput interface {
	pulumi.Input

	ToSecureStringOutput() SecureStringOutput
	ToSecureStringOutputWithContext(context.Context) SecureStringOutput
}

// Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.
type SecureStringArgs struct {
	// Type of the secret.
	// Expected value is 'SecureString'.
	Type pulumi.StringInput `pulumi:"type"`
	// Value of secure string.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SecureStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecureString)(nil)).Elem()
}

func (i SecureStringArgs) ToSecureStringOutput() SecureStringOutput {
	return i.ToSecureStringOutputWithContext(context.Background())
}

func (i SecureStringArgs) ToSecureStringOutputWithContext(ctx context.Context) SecureStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecureStringOutput)
}

func (i SecureStringArgs) ToSecureStringPtrOutput() SecureStringPtrOutput {
	return i.ToSecureStringPtrOutputWithContext(context.Background())
}

func (i SecureStringArgs) ToSecureStringPtrOutputWithContext(ctx context.Context) SecureStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecureStringOutput).ToSecureStringPtrOutputWithContext(ctx)
}

// SecureStringPtrInput is an input type that accepts SecureStringArgs, SecureStringPtr and SecureStringPtrOutput values.
// You can construct a concrete instance of `SecureStringPtrInput` via:
//
//          SecureStringArgs{...}
//
//  or:
//
//          nil
type SecureStringPtrInput interface {
	pulumi.Input

	ToSecureStringPtrOutput() SecureStringPtrOutput
	ToSecureStringPtrOutputWithContext(context.Context) SecureStringPtrOutput
}

type secureStringPtrType SecureStringArgs

func SecureStringPtr(v *SecureStringArgs) SecureStringPtrInput {
	return (*secureStringPtrType)(v)
}

func (*secureStringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecureString)(nil)).Elem()
}

func (i *secureStringPtrType) ToSecureStringPtrOutput() SecureStringPtrOutput {
	return i.ToSecureStringPtrOutputWithContext(context.Background())
}

func (i *secureStringPtrType) ToSecureStringPtrOutputWithContext(ctx context.Context) SecureStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecureStringPtrOutput)
}

// Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.
type SecureStringOutput struct{ *pulumi.OutputState }

func (SecureStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecureString)(nil)).Elem()
}

func (o SecureStringOutput) ToSecureStringOutput() SecureStringOutput {
	return o
}

func (o SecureStringOutput) ToSecureStringOutputWithContext(ctx context.Context) SecureStringOutput {
	return o
}

func (o SecureStringOutput) ToSecureStringPtrOutput() SecureStringPtrOutput {
	return o.ToSecureStringPtrOutputWithContext(context.Background())
}

func (o SecureStringOutput) ToSecureStringPtrOutputWithContext(ctx context.Context) SecureStringPtrOutput {
	return o.ApplyT(func(v SecureString) *SecureString {
		return &v
	}).(SecureStringPtrOutput)
}

// Type of the secret.
// Expected value is 'SecureString'.
func (o SecureStringOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecureString) string { return v.Type }).(pulumi.StringOutput)
}

// Value of secure string.
func (o SecureStringOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SecureString) string { return v.Value }).(pulumi.StringOutput)
}

type SecureStringPtrOutput struct{ *pulumi.OutputState }

func (SecureStringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecureString)(nil)).Elem()
}

func (o SecureStringPtrOutput) ToSecureStringPtrOutput() SecureStringPtrOutput {
	return o
}

func (o SecureStringPtrOutput) ToSecureStringPtrOutputWithContext(ctx context.Context) SecureStringPtrOutput {
	return o
}

func (o SecureStringPtrOutput) Elem() SecureStringOutput {
	return o.ApplyT(func(v *SecureString) SecureString { return *v }).(SecureStringOutput)
}

// Type of the secret.
// Expected value is 'SecureString'.
func (o SecureStringPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecureString) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Value of secure string.
func (o SecureStringPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecureString) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.
type SecureStringResponse struct {
	// Type of the secret.
	// Expected value is 'SecureString'.
	Type string `pulumi:"type"`
	// Value of secure string.
	Value string `pulumi:"value"`
}

// SecureStringResponseInput is an input type that accepts SecureStringResponseArgs and SecureStringResponseOutput values.
// You can construct a concrete instance of `SecureStringResponseInput` via:
//
//          SecureStringResponseArgs{...}
type SecureStringResponseInput interface {
	pulumi.Input

	ToSecureStringResponseOutput() SecureStringResponseOutput
	ToSecureStringResponseOutputWithContext(context.Context) SecureStringResponseOutput
}

// Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.
type SecureStringResponseArgs struct {
	// Type of the secret.
	// Expected value is 'SecureString'.
	Type pulumi.StringInput `pulumi:"type"`
	// Value of secure string.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SecureStringResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecureStringResponse)(nil)).Elem()
}

func (i SecureStringResponseArgs) ToSecureStringResponseOutput() SecureStringResponseOutput {
	return i.ToSecureStringResponseOutputWithContext(context.Background())
}

func (i SecureStringResponseArgs) ToSecureStringResponseOutputWithContext(ctx context.Context) SecureStringResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecureStringResponseOutput)
}

func (i SecureStringResponseArgs) ToSecureStringResponsePtrOutput() SecureStringResponsePtrOutput {
	return i.ToSecureStringResponsePtrOutputWithContext(context.Background())
}

func (i SecureStringResponseArgs) ToSecureStringResponsePtrOutputWithContext(ctx context.Context) SecureStringResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecureStringResponseOutput).ToSecureStringResponsePtrOutputWithContext(ctx)
}

// SecureStringResponsePtrInput is an input type that accepts SecureStringResponseArgs, SecureStringResponsePtr and SecureStringResponsePtrOutput values.
// You can construct a concrete instance of `SecureStringResponsePtrInput` via:
//
//          SecureStringResponseArgs{...}
//
//  or:
//
//          nil
type SecureStringResponsePtrInput interface {
	pulumi.Input

	ToSecureStringResponsePtrOutput() SecureStringResponsePtrOutput
	ToSecureStringResponsePtrOutputWithContext(context.Context) SecureStringResponsePtrOutput
}

type secureStringResponsePtrType SecureStringResponseArgs

func SecureStringResponsePtr(v *SecureStringResponseArgs) SecureStringResponsePtrInput {
	return (*secureStringResponsePtrType)(v)
}

func (*secureStringResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecureStringResponse)(nil)).Elem()
}

func (i *secureStringResponsePtrType) ToSecureStringResponsePtrOutput() SecureStringResponsePtrOutput {
	return i.ToSecureStringResponsePtrOutputWithContext(context.Background())
}

func (i *secureStringResponsePtrType) ToSecureStringResponsePtrOutputWithContext(ctx context.Context) SecureStringResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecureStringResponsePtrOutput)
}

// Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.
type SecureStringResponseOutput struct{ *pulumi.OutputState }

func (SecureStringResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecureStringResponse)(nil)).Elem()
}

func (o SecureStringResponseOutput) ToSecureStringResponseOutput() SecureStringResponseOutput {
	return o
}

func (o SecureStringResponseOutput) ToSecureStringResponseOutputWithContext(ctx context.Context) SecureStringResponseOutput {
	return o
}

func (o SecureStringResponseOutput) ToSecureStringResponsePtrOutput() SecureStringResponsePtrOutput {
	return o.ToSecureStringResponsePtrOutputWithContext(context.Background())
}

func (o SecureStringResponseOutput) ToSecureStringResponsePtrOutputWithContext(ctx context.Context) SecureStringResponsePtrOutput {
	return o.ApplyT(func(v SecureStringResponse) *SecureStringResponse {
		return &v
	}).(SecureStringResponsePtrOutput)
}

// Type of the secret.
// Expected value is 'SecureString'.
func (o SecureStringResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecureStringResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Value of secure string.
func (o SecureStringResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SecureStringResponse) string { return v.Value }).(pulumi.StringOutput)
}

type SecureStringResponsePtrOutput struct{ *pulumi.OutputState }

func (SecureStringResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecureStringResponse)(nil)).Elem()
}

func (o SecureStringResponsePtrOutput) ToSecureStringResponsePtrOutput() SecureStringResponsePtrOutput {
	return o
}

func (o SecureStringResponsePtrOutput) ToSecureStringResponsePtrOutputWithContext(ctx context.Context) SecureStringResponsePtrOutput {
	return o
}

func (o SecureStringResponsePtrOutput) Elem() SecureStringResponseOutput {
	return o.ApplyT(func(v *SecureStringResponse) SecureStringResponse { return *v }).(SecureStringResponseOutput)
}

// Type of the secret.
// Expected value is 'SecureString'.
func (o SecureStringResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecureStringResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Value of secure string.
func (o SecureStringResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecureStringResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// Self-hosted integration runtime.
type SelfHostedIntegrationRuntime struct {
	// Integration runtime description.
	Description *string `pulumi:"description"`
	// The base definition of a secret type.
	LinkedInfo interface{} `pulumi:"linkedInfo"`
	// Type of integration runtime.
	// Expected value is 'SelfHosted'.
	Type string `pulumi:"type"`
}

// SelfHostedIntegrationRuntimeInput is an input type that accepts SelfHostedIntegrationRuntimeArgs and SelfHostedIntegrationRuntimeOutput values.
// You can construct a concrete instance of `SelfHostedIntegrationRuntimeInput` via:
//
//          SelfHostedIntegrationRuntimeArgs{...}
type SelfHostedIntegrationRuntimeInput interface {
	pulumi.Input

	ToSelfHostedIntegrationRuntimeOutput() SelfHostedIntegrationRuntimeOutput
	ToSelfHostedIntegrationRuntimeOutputWithContext(context.Context) SelfHostedIntegrationRuntimeOutput
}

// Self-hosted integration runtime.
type SelfHostedIntegrationRuntimeArgs struct {
	// Integration runtime description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The base definition of a secret type.
	LinkedInfo pulumi.Input `pulumi:"linkedInfo"`
	// Type of integration runtime.
	// Expected value is 'SelfHosted'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SelfHostedIntegrationRuntimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SelfHostedIntegrationRuntime)(nil)).Elem()
}

func (i SelfHostedIntegrationRuntimeArgs) ToSelfHostedIntegrationRuntimeOutput() SelfHostedIntegrationRuntimeOutput {
	return i.ToSelfHostedIntegrationRuntimeOutputWithContext(context.Background())
}

func (i SelfHostedIntegrationRuntimeArgs) ToSelfHostedIntegrationRuntimeOutputWithContext(ctx context.Context) SelfHostedIntegrationRuntimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelfHostedIntegrationRuntimeOutput)
}

// Self-hosted integration runtime.
type SelfHostedIntegrationRuntimeOutput struct{ *pulumi.OutputState }

func (SelfHostedIntegrationRuntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SelfHostedIntegrationRuntime)(nil)).Elem()
}

func (o SelfHostedIntegrationRuntimeOutput) ToSelfHostedIntegrationRuntimeOutput() SelfHostedIntegrationRuntimeOutput {
	return o
}

func (o SelfHostedIntegrationRuntimeOutput) ToSelfHostedIntegrationRuntimeOutputWithContext(ctx context.Context) SelfHostedIntegrationRuntimeOutput {
	return o
}

// Integration runtime description.
func (o SelfHostedIntegrationRuntimeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntime) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The base definition of a secret type.
func (o SelfHostedIntegrationRuntimeOutput) LinkedInfo() pulumi.AnyOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntime) interface{} { return v.LinkedInfo }).(pulumi.AnyOutput)
}

// Type of integration runtime.
// Expected value is 'SelfHosted'.
func (o SelfHostedIntegrationRuntimeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntime) string { return v.Type }).(pulumi.StringOutput)
}

// Properties of Self-hosted integration runtime node.
type SelfHostedIntegrationRuntimeNodeResponse struct {
	// The integration runtime capabilities dictionary
	Capabilities map[string]string `pulumi:"capabilities"`
	// Maximum concurrent jobs on the integration runtime node.
	ConcurrentJobsLimit int `pulumi:"concurrentJobsLimit"`
	// The time at which the integration runtime will expire in ISO8601 format.
	ExpiryTime string `pulumi:"expiryTime"`
	// URI for the host machine of the integration runtime.
	HostServiceUri string `pulumi:"hostServiceUri"`
	// Indicates whether this node is the active dispatcher for integration runtime requests.
	IsActiveDispatcher bool `pulumi:"isActiveDispatcher"`
	// The most recent time at which the integration runtime was connected in ISO8601 format.
	LastConnectTime string `pulumi:"lastConnectTime"`
	// The last time for the integration runtime node update end.
	LastEndUpdateTime string `pulumi:"lastEndUpdateTime"`
	// The time the node last started up.
	LastStartTime string `pulumi:"lastStartTime"`
	// The last time for the integration runtime node update start.
	LastStartUpdateTime string `pulumi:"lastStartUpdateTime"`
	// The integration runtime node last stop time.
	LastStopTime string `pulumi:"lastStopTime"`
	// The result of the last integration runtime node update.
	LastUpdateResult string `pulumi:"lastUpdateResult"`
	// Machine name of the integration runtime node.
	MachineName string `pulumi:"machineName"`
	// The maximum concurrent jobs in this integration runtime.
	MaxConcurrentJobs int `pulumi:"maxConcurrentJobs"`
	// Name of the integration runtime node.
	NodeName string `pulumi:"nodeName"`
	// The time at which the integration runtime node was registered in ISO8601 format.
	RegisterTime string `pulumi:"registerTime"`
	// Status of the integration runtime node.
	Status string `pulumi:"status"`
	// Version of the integration runtime node.
	Version string `pulumi:"version"`
	// Status of the integration runtime node version.
	VersionStatus string `pulumi:"versionStatus"`
}

// SelfHostedIntegrationRuntimeNodeResponseInput is an input type that accepts SelfHostedIntegrationRuntimeNodeResponseArgs and SelfHostedIntegrationRuntimeNodeResponseOutput values.
// You can construct a concrete instance of `SelfHostedIntegrationRuntimeNodeResponseInput` via:
//
//          SelfHostedIntegrationRuntimeNodeResponseArgs{...}
type SelfHostedIntegrationRuntimeNodeResponseInput interface {
	pulumi.Input

	ToSelfHostedIntegrationRuntimeNodeResponseOutput() SelfHostedIntegrationRuntimeNodeResponseOutput
	ToSelfHostedIntegrationRuntimeNodeResponseOutputWithContext(context.Context) SelfHostedIntegrationRuntimeNodeResponseOutput
}

// Properties of Self-hosted integration runtime node.
type SelfHostedIntegrationRuntimeNodeResponseArgs struct {
	// The integration runtime capabilities dictionary
	Capabilities pulumi.StringMapInput `pulumi:"capabilities"`
	// Maximum concurrent jobs on the integration runtime node.
	ConcurrentJobsLimit pulumi.IntInput `pulumi:"concurrentJobsLimit"`
	// The time at which the integration runtime will expire in ISO8601 format.
	ExpiryTime pulumi.StringInput `pulumi:"expiryTime"`
	// URI for the host machine of the integration runtime.
	HostServiceUri pulumi.StringInput `pulumi:"hostServiceUri"`
	// Indicates whether this node is the active dispatcher for integration runtime requests.
	IsActiveDispatcher pulumi.BoolInput `pulumi:"isActiveDispatcher"`
	// The most recent time at which the integration runtime was connected in ISO8601 format.
	LastConnectTime pulumi.StringInput `pulumi:"lastConnectTime"`
	// The last time for the integration runtime node update end.
	LastEndUpdateTime pulumi.StringInput `pulumi:"lastEndUpdateTime"`
	// The time the node last started up.
	LastStartTime pulumi.StringInput `pulumi:"lastStartTime"`
	// The last time for the integration runtime node update start.
	LastStartUpdateTime pulumi.StringInput `pulumi:"lastStartUpdateTime"`
	// The integration runtime node last stop time.
	LastStopTime pulumi.StringInput `pulumi:"lastStopTime"`
	// The result of the last integration runtime node update.
	LastUpdateResult pulumi.StringInput `pulumi:"lastUpdateResult"`
	// Machine name of the integration runtime node.
	MachineName pulumi.StringInput `pulumi:"machineName"`
	// The maximum concurrent jobs in this integration runtime.
	MaxConcurrentJobs pulumi.IntInput `pulumi:"maxConcurrentJobs"`
	// Name of the integration runtime node.
	NodeName pulumi.StringInput `pulumi:"nodeName"`
	// The time at which the integration runtime node was registered in ISO8601 format.
	RegisterTime pulumi.StringInput `pulumi:"registerTime"`
	// Status of the integration runtime node.
	Status pulumi.StringInput `pulumi:"status"`
	// Version of the integration runtime node.
	Version pulumi.StringInput `pulumi:"version"`
	// Status of the integration runtime node version.
	VersionStatus pulumi.StringInput `pulumi:"versionStatus"`
}

func (SelfHostedIntegrationRuntimeNodeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SelfHostedIntegrationRuntimeNodeResponse)(nil)).Elem()
}

func (i SelfHostedIntegrationRuntimeNodeResponseArgs) ToSelfHostedIntegrationRuntimeNodeResponseOutput() SelfHostedIntegrationRuntimeNodeResponseOutput {
	return i.ToSelfHostedIntegrationRuntimeNodeResponseOutputWithContext(context.Background())
}

func (i SelfHostedIntegrationRuntimeNodeResponseArgs) ToSelfHostedIntegrationRuntimeNodeResponseOutputWithContext(ctx context.Context) SelfHostedIntegrationRuntimeNodeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelfHostedIntegrationRuntimeNodeResponseOutput)
}

// SelfHostedIntegrationRuntimeNodeResponseArrayInput is an input type that accepts SelfHostedIntegrationRuntimeNodeResponseArray and SelfHostedIntegrationRuntimeNodeResponseArrayOutput values.
// You can construct a concrete instance of `SelfHostedIntegrationRuntimeNodeResponseArrayInput` via:
//
//          SelfHostedIntegrationRuntimeNodeResponseArray{ SelfHostedIntegrationRuntimeNodeResponseArgs{...} }
type SelfHostedIntegrationRuntimeNodeResponseArrayInput interface {
	pulumi.Input

	ToSelfHostedIntegrationRuntimeNodeResponseArrayOutput() SelfHostedIntegrationRuntimeNodeResponseArrayOutput
	ToSelfHostedIntegrationRuntimeNodeResponseArrayOutputWithContext(context.Context) SelfHostedIntegrationRuntimeNodeResponseArrayOutput
}

type SelfHostedIntegrationRuntimeNodeResponseArray []SelfHostedIntegrationRuntimeNodeResponseInput

func (SelfHostedIntegrationRuntimeNodeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SelfHostedIntegrationRuntimeNodeResponse)(nil)).Elem()
}

func (i SelfHostedIntegrationRuntimeNodeResponseArray) ToSelfHostedIntegrationRuntimeNodeResponseArrayOutput() SelfHostedIntegrationRuntimeNodeResponseArrayOutput {
	return i.ToSelfHostedIntegrationRuntimeNodeResponseArrayOutputWithContext(context.Background())
}

func (i SelfHostedIntegrationRuntimeNodeResponseArray) ToSelfHostedIntegrationRuntimeNodeResponseArrayOutputWithContext(ctx context.Context) SelfHostedIntegrationRuntimeNodeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelfHostedIntegrationRuntimeNodeResponseArrayOutput)
}

// Properties of Self-hosted integration runtime node.
type SelfHostedIntegrationRuntimeNodeResponseOutput struct{ *pulumi.OutputState }

func (SelfHostedIntegrationRuntimeNodeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SelfHostedIntegrationRuntimeNodeResponse)(nil)).Elem()
}

func (o SelfHostedIntegrationRuntimeNodeResponseOutput) ToSelfHostedIntegrationRuntimeNodeResponseOutput() SelfHostedIntegrationRuntimeNodeResponseOutput {
	return o
}

func (o SelfHostedIntegrationRuntimeNodeResponseOutput) ToSelfHostedIntegrationRuntimeNodeResponseOutputWithContext(ctx context.Context) SelfHostedIntegrationRuntimeNodeResponseOutput {
	return o
}

// The integration runtime capabilities dictionary
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) Capabilities() pulumi.StringMapOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) map[string]string { return v.Capabilities }).(pulumi.StringMapOutput)
}

// Maximum concurrent jobs on the integration runtime node.
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) ConcurrentJobsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) int { return v.ConcurrentJobsLimit }).(pulumi.IntOutput)
}

// The time at which the integration runtime will expire in ISO8601 format.
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) ExpiryTime() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) string { return v.ExpiryTime }).(pulumi.StringOutput)
}

// URI for the host machine of the integration runtime.
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) HostServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) string { return v.HostServiceUri }).(pulumi.StringOutput)
}

// Indicates whether this node is the active dispatcher for integration runtime requests.
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) IsActiveDispatcher() pulumi.BoolOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) bool { return v.IsActiveDispatcher }).(pulumi.BoolOutput)
}

// The most recent time at which the integration runtime was connected in ISO8601 format.
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) LastConnectTime() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) string { return v.LastConnectTime }).(pulumi.StringOutput)
}

// The last time for the integration runtime node update end.
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) LastEndUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) string { return v.LastEndUpdateTime }).(pulumi.StringOutput)
}

// The time the node last started up.
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) LastStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) string { return v.LastStartTime }).(pulumi.StringOutput)
}

// The last time for the integration runtime node update start.
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) LastStartUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) string { return v.LastStartUpdateTime }).(pulumi.StringOutput)
}

// The integration runtime node last stop time.
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) LastStopTime() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) string { return v.LastStopTime }).(pulumi.StringOutput)
}

// The result of the last integration runtime node update.
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) LastUpdateResult() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) string { return v.LastUpdateResult }).(pulumi.StringOutput)
}

// Machine name of the integration runtime node.
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) MachineName() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) string { return v.MachineName }).(pulumi.StringOutput)
}

// The maximum concurrent jobs in this integration runtime.
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) MaxConcurrentJobs() pulumi.IntOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) int { return v.MaxConcurrentJobs }).(pulumi.IntOutput)
}

// Name of the integration runtime node.
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) string { return v.NodeName }).(pulumi.StringOutput)
}

// The time at which the integration runtime node was registered in ISO8601 format.
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) RegisterTime() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) string { return v.RegisterTime }).(pulumi.StringOutput)
}

// Status of the integration runtime node.
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Version of the integration runtime node.
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) string { return v.Version }).(pulumi.StringOutput)
}

// Status of the integration runtime node version.
func (o SelfHostedIntegrationRuntimeNodeResponseOutput) VersionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeNodeResponse) string { return v.VersionStatus }).(pulumi.StringOutput)
}

type SelfHostedIntegrationRuntimeNodeResponseArrayOutput struct{ *pulumi.OutputState }

func (SelfHostedIntegrationRuntimeNodeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SelfHostedIntegrationRuntimeNodeResponse)(nil)).Elem()
}

func (o SelfHostedIntegrationRuntimeNodeResponseArrayOutput) ToSelfHostedIntegrationRuntimeNodeResponseArrayOutput() SelfHostedIntegrationRuntimeNodeResponseArrayOutput {
	return o
}

func (o SelfHostedIntegrationRuntimeNodeResponseArrayOutput) ToSelfHostedIntegrationRuntimeNodeResponseArrayOutputWithContext(ctx context.Context) SelfHostedIntegrationRuntimeNodeResponseArrayOutput {
	return o
}

func (o SelfHostedIntegrationRuntimeNodeResponseArrayOutput) Index(i pulumi.IntInput) SelfHostedIntegrationRuntimeNodeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SelfHostedIntegrationRuntimeNodeResponse {
		return vs[0].([]SelfHostedIntegrationRuntimeNodeResponse)[vs[1].(int)]
	}).(SelfHostedIntegrationRuntimeNodeResponseOutput)
}

// Self-hosted integration runtime.
type SelfHostedIntegrationRuntimeResponse struct {
	// Integration runtime description.
	Description *string `pulumi:"description"`
	// The base definition of a secret type.
	LinkedInfo interface{} `pulumi:"linkedInfo"`
	// Type of integration runtime.
	// Expected value is 'SelfHosted'.
	Type string `pulumi:"type"`
}

// SelfHostedIntegrationRuntimeResponseInput is an input type that accepts SelfHostedIntegrationRuntimeResponseArgs and SelfHostedIntegrationRuntimeResponseOutput values.
// You can construct a concrete instance of `SelfHostedIntegrationRuntimeResponseInput` via:
//
//          SelfHostedIntegrationRuntimeResponseArgs{...}
type SelfHostedIntegrationRuntimeResponseInput interface {
	pulumi.Input

	ToSelfHostedIntegrationRuntimeResponseOutput() SelfHostedIntegrationRuntimeResponseOutput
	ToSelfHostedIntegrationRuntimeResponseOutputWithContext(context.Context) SelfHostedIntegrationRuntimeResponseOutput
}

// Self-hosted integration runtime.
type SelfHostedIntegrationRuntimeResponseArgs struct {
	// Integration runtime description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The base definition of a secret type.
	LinkedInfo pulumi.Input `pulumi:"linkedInfo"`
	// Type of integration runtime.
	// Expected value is 'SelfHosted'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SelfHostedIntegrationRuntimeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SelfHostedIntegrationRuntimeResponse)(nil)).Elem()
}

func (i SelfHostedIntegrationRuntimeResponseArgs) ToSelfHostedIntegrationRuntimeResponseOutput() SelfHostedIntegrationRuntimeResponseOutput {
	return i.ToSelfHostedIntegrationRuntimeResponseOutputWithContext(context.Background())
}

func (i SelfHostedIntegrationRuntimeResponseArgs) ToSelfHostedIntegrationRuntimeResponseOutputWithContext(ctx context.Context) SelfHostedIntegrationRuntimeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelfHostedIntegrationRuntimeResponseOutput)
}

// Self-hosted integration runtime.
type SelfHostedIntegrationRuntimeResponseOutput struct{ *pulumi.OutputState }

func (SelfHostedIntegrationRuntimeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SelfHostedIntegrationRuntimeResponse)(nil)).Elem()
}

func (o SelfHostedIntegrationRuntimeResponseOutput) ToSelfHostedIntegrationRuntimeResponseOutput() SelfHostedIntegrationRuntimeResponseOutput {
	return o
}

func (o SelfHostedIntegrationRuntimeResponseOutput) ToSelfHostedIntegrationRuntimeResponseOutputWithContext(ctx context.Context) SelfHostedIntegrationRuntimeResponseOutput {
	return o
}

// Integration runtime description.
func (o SelfHostedIntegrationRuntimeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The base definition of a secret type.
func (o SelfHostedIntegrationRuntimeResponseOutput) LinkedInfo() pulumi.AnyOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeResponse) interface{} { return v.LinkedInfo }).(pulumi.AnyOutput)
}

// Type of integration runtime.
// Expected value is 'SelfHosted'.
func (o SelfHostedIntegrationRuntimeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Self-hosted integration runtime status.
type SelfHostedIntegrationRuntimeStatusResponse struct {
	// Whether Self-hosted integration runtime auto update has been turned on.
	AutoUpdate string `pulumi:"autoUpdate"`
	// Object with additional information about integration runtime capabilities.
	Capabilities map[string]string `pulumi:"capabilities"`
	// The time at which the integration runtime was created, in ISO8601 format.
	CreateTime string `pulumi:"createTime"`
	// The data factory name which the integration runtime belong to.
	DataFactoryName string `pulumi:"dataFactoryName"`
	// It is used to set the encryption mode for node-node communication channel (when more than 2 self-hosted integration runtime nodes exist).
	InternalChannelEncryption string `pulumi:"internalChannelEncryption"`
	// The list of linked integration runtimes that are created to share with this integration runtime.
	Links []LinkedIntegrationRuntimeResponse `pulumi:"links"`
	// The local time zone offset in hours.
	LocalTimeZoneOffset string `pulumi:"localTimeZoneOffset"`
	// The list of nodes for this integration runtime.
	Nodes []SelfHostedIntegrationRuntimeNodeResponse `pulumi:"nodes"`
	// The date at which the integration runtime will be scheduled to update, in ISO8601 format.
	ScheduledUpdateDate string `pulumi:"scheduledUpdateDate"`
	// The URLs for the services used in integration runtime backend service.
	ServiceUrls []string `pulumi:"serviceUrls"`
	// The state of integration runtime.
	State string `pulumi:"state"`
	// The task queue id of the integration runtime.
	TaskQueueId string `pulumi:"taskQueueId"`
	// Type of integration runtime.
	// Expected value is 'SelfHosted'.
	Type *string `pulumi:"type"`
	// The time in the date scheduled by service to update the integration runtime, e.g., PT03H is 3 hours
	UpdateDelayOffset string `pulumi:"updateDelayOffset"`
	// Version of the integration runtime.
	Version string `pulumi:"version"`
	// Status of the integration runtime version.
	VersionStatus string `pulumi:"versionStatus"`
}

// SelfHostedIntegrationRuntimeStatusResponseInput is an input type that accepts SelfHostedIntegrationRuntimeStatusResponseArgs and SelfHostedIntegrationRuntimeStatusResponseOutput values.
// You can construct a concrete instance of `SelfHostedIntegrationRuntimeStatusResponseInput` via:
//
//          SelfHostedIntegrationRuntimeStatusResponseArgs{...}
type SelfHostedIntegrationRuntimeStatusResponseInput interface {
	pulumi.Input

	ToSelfHostedIntegrationRuntimeStatusResponseOutput() SelfHostedIntegrationRuntimeStatusResponseOutput
	ToSelfHostedIntegrationRuntimeStatusResponseOutputWithContext(context.Context) SelfHostedIntegrationRuntimeStatusResponseOutput
}

// Self-hosted integration runtime status.
type SelfHostedIntegrationRuntimeStatusResponseArgs struct {
	// Whether Self-hosted integration runtime auto update has been turned on.
	AutoUpdate pulumi.StringInput `pulumi:"autoUpdate"`
	// Object with additional information about integration runtime capabilities.
	Capabilities pulumi.StringMapInput `pulumi:"capabilities"`
	// The time at which the integration runtime was created, in ISO8601 format.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The data factory name which the integration runtime belong to.
	DataFactoryName pulumi.StringInput `pulumi:"dataFactoryName"`
	// It is used to set the encryption mode for node-node communication channel (when more than 2 self-hosted integration runtime nodes exist).
	InternalChannelEncryption pulumi.StringInput `pulumi:"internalChannelEncryption"`
	// The list of linked integration runtimes that are created to share with this integration runtime.
	Links LinkedIntegrationRuntimeResponseArrayInput `pulumi:"links"`
	// The local time zone offset in hours.
	LocalTimeZoneOffset pulumi.StringInput `pulumi:"localTimeZoneOffset"`
	// The list of nodes for this integration runtime.
	Nodes SelfHostedIntegrationRuntimeNodeResponseArrayInput `pulumi:"nodes"`
	// The date at which the integration runtime will be scheduled to update, in ISO8601 format.
	ScheduledUpdateDate pulumi.StringInput `pulumi:"scheduledUpdateDate"`
	// The URLs for the services used in integration runtime backend service.
	ServiceUrls pulumi.StringArrayInput `pulumi:"serviceUrls"`
	// The state of integration runtime.
	State pulumi.StringInput `pulumi:"state"`
	// The task queue id of the integration runtime.
	TaskQueueId pulumi.StringInput `pulumi:"taskQueueId"`
	// Type of integration runtime.
	// Expected value is 'SelfHosted'.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The time in the date scheduled by service to update the integration runtime, e.g., PT03H is 3 hours
	UpdateDelayOffset pulumi.StringInput `pulumi:"updateDelayOffset"`
	// Version of the integration runtime.
	Version pulumi.StringInput `pulumi:"version"`
	// Status of the integration runtime version.
	VersionStatus pulumi.StringInput `pulumi:"versionStatus"`
}

func (SelfHostedIntegrationRuntimeStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SelfHostedIntegrationRuntimeStatusResponse)(nil)).Elem()
}

func (i SelfHostedIntegrationRuntimeStatusResponseArgs) ToSelfHostedIntegrationRuntimeStatusResponseOutput() SelfHostedIntegrationRuntimeStatusResponseOutput {
	return i.ToSelfHostedIntegrationRuntimeStatusResponseOutputWithContext(context.Background())
}

func (i SelfHostedIntegrationRuntimeStatusResponseArgs) ToSelfHostedIntegrationRuntimeStatusResponseOutputWithContext(ctx context.Context) SelfHostedIntegrationRuntimeStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelfHostedIntegrationRuntimeStatusResponseOutput)
}

// Self-hosted integration runtime status.
type SelfHostedIntegrationRuntimeStatusResponseOutput struct{ *pulumi.OutputState }

func (SelfHostedIntegrationRuntimeStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SelfHostedIntegrationRuntimeStatusResponse)(nil)).Elem()
}

func (o SelfHostedIntegrationRuntimeStatusResponseOutput) ToSelfHostedIntegrationRuntimeStatusResponseOutput() SelfHostedIntegrationRuntimeStatusResponseOutput {
	return o
}

func (o SelfHostedIntegrationRuntimeStatusResponseOutput) ToSelfHostedIntegrationRuntimeStatusResponseOutputWithContext(ctx context.Context) SelfHostedIntegrationRuntimeStatusResponseOutput {
	return o
}

// Whether Self-hosted integration runtime auto update has been turned on.
func (o SelfHostedIntegrationRuntimeStatusResponseOutput) AutoUpdate() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeStatusResponse) string { return v.AutoUpdate }).(pulumi.StringOutput)
}

// Object with additional information about integration runtime capabilities.
func (o SelfHostedIntegrationRuntimeStatusResponseOutput) Capabilities() pulumi.StringMapOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeStatusResponse) map[string]string { return v.Capabilities }).(pulumi.StringMapOutput)
}

// The time at which the integration runtime was created, in ISO8601 format.
func (o SelfHostedIntegrationRuntimeStatusResponseOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeStatusResponse) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The data factory name which the integration runtime belong to.
func (o SelfHostedIntegrationRuntimeStatusResponseOutput) DataFactoryName() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeStatusResponse) string { return v.DataFactoryName }).(pulumi.StringOutput)
}

// It is used to set the encryption mode for node-node communication channel (when more than 2 self-hosted integration runtime nodes exist).
func (o SelfHostedIntegrationRuntimeStatusResponseOutput) InternalChannelEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeStatusResponse) string { return v.InternalChannelEncryption }).(pulumi.StringOutput)
}

// The list of linked integration runtimes that are created to share with this integration runtime.
func (o SelfHostedIntegrationRuntimeStatusResponseOutput) Links() LinkedIntegrationRuntimeResponseArrayOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeStatusResponse) []LinkedIntegrationRuntimeResponse { return v.Links }).(LinkedIntegrationRuntimeResponseArrayOutput)
}

// The local time zone offset in hours.
func (o SelfHostedIntegrationRuntimeStatusResponseOutput) LocalTimeZoneOffset() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeStatusResponse) string { return v.LocalTimeZoneOffset }).(pulumi.StringOutput)
}

// The list of nodes for this integration runtime.
func (o SelfHostedIntegrationRuntimeStatusResponseOutput) Nodes() SelfHostedIntegrationRuntimeNodeResponseArrayOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeStatusResponse) []SelfHostedIntegrationRuntimeNodeResponse {
		return v.Nodes
	}).(SelfHostedIntegrationRuntimeNodeResponseArrayOutput)
}

// The date at which the integration runtime will be scheduled to update, in ISO8601 format.
func (o SelfHostedIntegrationRuntimeStatusResponseOutput) ScheduledUpdateDate() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeStatusResponse) string { return v.ScheduledUpdateDate }).(pulumi.StringOutput)
}

// The URLs for the services used in integration runtime backend service.
func (o SelfHostedIntegrationRuntimeStatusResponseOutput) ServiceUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeStatusResponse) []string { return v.ServiceUrls }).(pulumi.StringArrayOutput)
}

// The state of integration runtime.
func (o SelfHostedIntegrationRuntimeStatusResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeStatusResponse) string { return v.State }).(pulumi.StringOutput)
}

// The task queue id of the integration runtime.
func (o SelfHostedIntegrationRuntimeStatusResponseOutput) TaskQueueId() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeStatusResponse) string { return v.TaskQueueId }).(pulumi.StringOutput)
}

// Type of integration runtime.
// Expected value is 'SelfHosted'.
func (o SelfHostedIntegrationRuntimeStatusResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeStatusResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The time in the date scheduled by service to update the integration runtime, e.g., PT03H is 3 hours
func (o SelfHostedIntegrationRuntimeStatusResponseOutput) UpdateDelayOffset() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeStatusResponse) string { return v.UpdateDelayOffset }).(pulumi.StringOutput)
}

// Version of the integration runtime.
func (o SelfHostedIntegrationRuntimeStatusResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeStatusResponse) string { return v.Version }).(pulumi.StringOutput)
}

// Status of the integration runtime version.
func (o SelfHostedIntegrationRuntimeStatusResponseOutput) VersionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v SelfHostedIntegrationRuntimeStatusResponse) string { return v.VersionStatus }).(pulumi.StringOutput)
}

// ServiceNow server linked service.
type ServiceNowLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication type to use.
	AuthenticationType string `pulumi:"authenticationType"`
	// The client id for OAuth2 authentication.
	ClientId interface{} `pulumi:"clientId"`
	// The client secret for OAuth2 authentication.
	ClientSecret interface{} `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the ServiceNow server. (i.e. <instance>.service-now.com)
	Endpoint interface{} `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The password corresponding to the user name for Basic and OAuth2 authentication.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'ServiceNow'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
	// The user name used to connect to the ServiceNow server for Basic and OAuth2 authentication.
	Username interface{} `pulumi:"username"`
}

// ServiceNowLinkedServiceInput is an input type that accepts ServiceNowLinkedServiceArgs and ServiceNowLinkedServiceOutput values.
// You can construct a concrete instance of `ServiceNowLinkedServiceInput` via:
//
//          ServiceNowLinkedServiceArgs{...}
type ServiceNowLinkedServiceInput interface {
	pulumi.Input

	ToServiceNowLinkedServiceOutput() ServiceNowLinkedServiceOutput
	ToServiceNowLinkedServiceOutputWithContext(context.Context) ServiceNowLinkedServiceOutput
}

// ServiceNow server linked service.
type ServiceNowLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication type to use.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The client id for OAuth2 authentication.
	ClientId pulumi.Input `pulumi:"clientId"`
	// The client secret for OAuth2 authentication.
	ClientSecret pulumi.Input `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the ServiceNow server. (i.e. <instance>.service-now.com)
	Endpoint pulumi.Input `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The password corresponding to the user name for Basic and OAuth2 authentication.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'ServiceNow'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
	// The user name used to connect to the ServiceNow server for Basic and OAuth2 authentication.
	Username pulumi.Input `pulumi:"username"`
}

func (ServiceNowLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowLinkedService)(nil)).Elem()
}

func (i ServiceNowLinkedServiceArgs) ToServiceNowLinkedServiceOutput() ServiceNowLinkedServiceOutput {
	return i.ToServiceNowLinkedServiceOutputWithContext(context.Background())
}

func (i ServiceNowLinkedServiceArgs) ToServiceNowLinkedServiceOutputWithContext(ctx context.Context) ServiceNowLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowLinkedServiceOutput)
}

// ServiceNow server linked service.
type ServiceNowLinkedServiceOutput struct{ *pulumi.OutputState }

func (ServiceNowLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowLinkedService)(nil)).Elem()
}

func (o ServiceNowLinkedServiceOutput) ToServiceNowLinkedServiceOutput() ServiceNowLinkedServiceOutput {
	return o
}

func (o ServiceNowLinkedServiceOutput) ToServiceNowLinkedServiceOutputWithContext(ctx context.Context) ServiceNowLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ServiceNowLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ServiceNowLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication type to use.
func (o ServiceNowLinkedServiceOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowLinkedService) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The client id for OAuth2 authentication.
func (o ServiceNowLinkedServiceOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedService) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The client secret for OAuth2 authentication.
func (o ServiceNowLinkedServiceOutput) ClientSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedService) interface{} { return v.ClientSecret }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o ServiceNowLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v ServiceNowLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o ServiceNowLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNowLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o ServiceNowLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the ServiceNow server. (i.e. <instance>.service-now.com)
func (o ServiceNowLinkedServiceOutput) Endpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedService) interface{} { return v.Endpoint }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o ServiceNowLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v ServiceNowLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The password corresponding to the user name for Basic and OAuth2 authentication.
func (o ServiceNowLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'ServiceNow'.
func (o ServiceNowLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o ServiceNowLinkedServiceOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedService) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o ServiceNowLinkedServiceOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedService) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o ServiceNowLinkedServiceOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedService) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// The user name used to connect to the ServiceNow server for Basic and OAuth2 authentication.
func (o ServiceNowLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// ServiceNow server linked service.
type ServiceNowLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication type to use.
	AuthenticationType string `pulumi:"authenticationType"`
	// The client id for OAuth2 authentication.
	ClientId interface{} `pulumi:"clientId"`
	// The client secret for OAuth2 authentication.
	ClientSecret interface{} `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the ServiceNow server. (i.e. <instance>.service-now.com)
	Endpoint interface{} `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The password corresponding to the user name for Basic and OAuth2 authentication.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'ServiceNow'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
	// The user name used to connect to the ServiceNow server for Basic and OAuth2 authentication.
	Username interface{} `pulumi:"username"`
}

// ServiceNowLinkedServiceResponseInput is an input type that accepts ServiceNowLinkedServiceResponseArgs and ServiceNowLinkedServiceResponseOutput values.
// You can construct a concrete instance of `ServiceNowLinkedServiceResponseInput` via:
//
//          ServiceNowLinkedServiceResponseArgs{...}
type ServiceNowLinkedServiceResponseInput interface {
	pulumi.Input

	ToServiceNowLinkedServiceResponseOutput() ServiceNowLinkedServiceResponseOutput
	ToServiceNowLinkedServiceResponseOutputWithContext(context.Context) ServiceNowLinkedServiceResponseOutput
}

// ServiceNow server linked service.
type ServiceNowLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication type to use.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The client id for OAuth2 authentication.
	ClientId pulumi.Input `pulumi:"clientId"`
	// The client secret for OAuth2 authentication.
	ClientSecret pulumi.Input `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the ServiceNow server. (i.e. <instance>.service-now.com)
	Endpoint pulumi.Input `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The password corresponding to the user name for Basic and OAuth2 authentication.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'ServiceNow'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
	// The user name used to connect to the ServiceNow server for Basic and OAuth2 authentication.
	Username pulumi.Input `pulumi:"username"`
}

func (ServiceNowLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowLinkedServiceResponse)(nil)).Elem()
}

func (i ServiceNowLinkedServiceResponseArgs) ToServiceNowLinkedServiceResponseOutput() ServiceNowLinkedServiceResponseOutput {
	return i.ToServiceNowLinkedServiceResponseOutputWithContext(context.Background())
}

func (i ServiceNowLinkedServiceResponseArgs) ToServiceNowLinkedServiceResponseOutputWithContext(ctx context.Context) ServiceNowLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowLinkedServiceResponseOutput)
}

// ServiceNow server linked service.
type ServiceNowLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (ServiceNowLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowLinkedServiceResponse)(nil)).Elem()
}

func (o ServiceNowLinkedServiceResponseOutput) ToServiceNowLinkedServiceResponseOutput() ServiceNowLinkedServiceResponseOutput {
	return o
}

func (o ServiceNowLinkedServiceResponseOutput) ToServiceNowLinkedServiceResponseOutputWithContext(ctx context.Context) ServiceNowLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ServiceNowLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ServiceNowLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication type to use.
func (o ServiceNowLinkedServiceResponseOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowLinkedServiceResponse) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The client id for OAuth2 authentication.
func (o ServiceNowLinkedServiceResponseOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedServiceResponse) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The client secret for OAuth2 authentication.
func (o ServiceNowLinkedServiceResponseOutput) ClientSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedServiceResponse) interface{} { return v.ClientSecret }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o ServiceNowLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v ServiceNowLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o ServiceNowLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNowLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o ServiceNowLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the ServiceNow server. (i.e. <instance>.service-now.com)
func (o ServiceNowLinkedServiceResponseOutput) Endpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedServiceResponse) interface{} { return v.Endpoint }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o ServiceNowLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v ServiceNowLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The password corresponding to the user name for Basic and OAuth2 authentication.
func (o ServiceNowLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'ServiceNow'.
func (o ServiceNowLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o ServiceNowLinkedServiceResponseOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedServiceResponse) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o ServiceNowLinkedServiceResponseOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedServiceResponse) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o ServiceNowLinkedServiceResponseOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedServiceResponse) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// The user name used to connect to the ServiceNow server for Basic and OAuth2 authentication.
func (o ServiceNowLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// ServiceNow server dataset.
type ServiceNowObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ServiceNowObject'.
	Type string `pulumi:"type"`
}

// ServiceNowObjectDatasetInput is an input type that accepts ServiceNowObjectDatasetArgs and ServiceNowObjectDatasetOutput values.
// You can construct a concrete instance of `ServiceNowObjectDatasetInput` via:
//
//          ServiceNowObjectDatasetArgs{...}
type ServiceNowObjectDatasetInput interface {
	pulumi.Input

	ToServiceNowObjectDatasetOutput() ServiceNowObjectDatasetOutput
	ToServiceNowObjectDatasetOutputWithContext(context.Context) ServiceNowObjectDatasetOutput
}

// ServiceNow server dataset.
type ServiceNowObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ServiceNowObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServiceNowObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowObjectDataset)(nil)).Elem()
}

func (i ServiceNowObjectDatasetArgs) ToServiceNowObjectDatasetOutput() ServiceNowObjectDatasetOutput {
	return i.ToServiceNowObjectDatasetOutputWithContext(context.Background())
}

func (i ServiceNowObjectDatasetArgs) ToServiceNowObjectDatasetOutputWithContext(ctx context.Context) ServiceNowObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowObjectDatasetOutput)
}

// ServiceNow server dataset.
type ServiceNowObjectDatasetOutput struct{ *pulumi.OutputState }

func (ServiceNowObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowObjectDataset)(nil)).Elem()
}

func (o ServiceNowObjectDatasetOutput) ToServiceNowObjectDatasetOutput() ServiceNowObjectDatasetOutput {
	return o
}

func (o ServiceNowObjectDatasetOutput) ToServiceNowObjectDatasetOutputWithContext(ctx context.Context) ServiceNowObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ServiceNowObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ServiceNowObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o ServiceNowObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNowObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o ServiceNowObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v ServiceNowObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o ServiceNowObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v ServiceNowObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o ServiceNowObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'ServiceNowObject'.
func (o ServiceNowObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// ServiceNow server dataset.
type ServiceNowObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ServiceNowObject'.
	Type string `pulumi:"type"`
}

// ServiceNowObjectDatasetResponseInput is an input type that accepts ServiceNowObjectDatasetResponseArgs and ServiceNowObjectDatasetResponseOutput values.
// You can construct a concrete instance of `ServiceNowObjectDatasetResponseInput` via:
//
//          ServiceNowObjectDatasetResponseArgs{...}
type ServiceNowObjectDatasetResponseInput interface {
	pulumi.Input

	ToServiceNowObjectDatasetResponseOutput() ServiceNowObjectDatasetResponseOutput
	ToServiceNowObjectDatasetResponseOutputWithContext(context.Context) ServiceNowObjectDatasetResponseOutput
}

// ServiceNow server dataset.
type ServiceNowObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ServiceNowObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServiceNowObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowObjectDatasetResponse)(nil)).Elem()
}

func (i ServiceNowObjectDatasetResponseArgs) ToServiceNowObjectDatasetResponseOutput() ServiceNowObjectDatasetResponseOutput {
	return i.ToServiceNowObjectDatasetResponseOutputWithContext(context.Background())
}

func (i ServiceNowObjectDatasetResponseArgs) ToServiceNowObjectDatasetResponseOutputWithContext(ctx context.Context) ServiceNowObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowObjectDatasetResponseOutput)
}

// ServiceNow server dataset.
type ServiceNowObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (ServiceNowObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowObjectDatasetResponse)(nil)).Elem()
}

func (o ServiceNowObjectDatasetResponseOutput) ToServiceNowObjectDatasetResponseOutput() ServiceNowObjectDatasetResponseOutput {
	return o
}

func (o ServiceNowObjectDatasetResponseOutput) ToServiceNowObjectDatasetResponseOutputWithContext(ctx context.Context) ServiceNowObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ServiceNowObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ServiceNowObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o ServiceNowObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNowObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o ServiceNowObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v ServiceNowObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o ServiceNowObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v ServiceNowObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o ServiceNowObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'ServiceNowObject'.
func (o ServiceNowObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity ServiceNow server source.
type ServiceNowSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ServiceNowSource'.
	Type string `pulumi:"type"`
}

// ServiceNowSourceInput is an input type that accepts ServiceNowSourceArgs and ServiceNowSourceOutput values.
// You can construct a concrete instance of `ServiceNowSourceInput` via:
//
//          ServiceNowSourceArgs{...}
type ServiceNowSourceInput interface {
	pulumi.Input

	ToServiceNowSourceOutput() ServiceNowSourceOutput
	ToServiceNowSourceOutputWithContext(context.Context) ServiceNowSourceOutput
}

// A copy activity ServiceNow server source.
type ServiceNowSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ServiceNowSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServiceNowSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowSource)(nil)).Elem()
}

func (i ServiceNowSourceArgs) ToServiceNowSourceOutput() ServiceNowSourceOutput {
	return i.ToServiceNowSourceOutputWithContext(context.Background())
}

func (i ServiceNowSourceArgs) ToServiceNowSourceOutputWithContext(ctx context.Context) ServiceNowSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowSourceOutput)
}

// A copy activity ServiceNow server source.
type ServiceNowSourceOutput struct{ *pulumi.OutputState }

func (ServiceNowSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowSource)(nil)).Elem()
}

func (o ServiceNowSourceOutput) ToServiceNowSourceOutput() ServiceNowSourceOutput {
	return o
}

func (o ServiceNowSourceOutput) ToServiceNowSourceOutputWithContext(ctx context.Context) ServiceNowSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o ServiceNowSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o ServiceNowSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o ServiceNowSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'ServiceNowSource'.
func (o ServiceNowSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity ServiceNow server source.
type ServiceNowSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ServiceNowSource'.
	Type string `pulumi:"type"`
}

// ServiceNowSourceResponseInput is an input type that accepts ServiceNowSourceResponseArgs and ServiceNowSourceResponseOutput values.
// You can construct a concrete instance of `ServiceNowSourceResponseInput` via:
//
//          ServiceNowSourceResponseArgs{...}
type ServiceNowSourceResponseInput interface {
	pulumi.Input

	ToServiceNowSourceResponseOutput() ServiceNowSourceResponseOutput
	ToServiceNowSourceResponseOutputWithContext(context.Context) ServiceNowSourceResponseOutput
}

// A copy activity ServiceNow server source.
type ServiceNowSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ServiceNowSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServiceNowSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowSourceResponse)(nil)).Elem()
}

func (i ServiceNowSourceResponseArgs) ToServiceNowSourceResponseOutput() ServiceNowSourceResponseOutput {
	return i.ToServiceNowSourceResponseOutputWithContext(context.Background())
}

func (i ServiceNowSourceResponseArgs) ToServiceNowSourceResponseOutputWithContext(ctx context.Context) ServiceNowSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowSourceResponseOutput)
}

// A copy activity ServiceNow server source.
type ServiceNowSourceResponseOutput struct{ *pulumi.OutputState }

func (ServiceNowSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowSourceResponse)(nil)).Elem()
}

func (o ServiceNowSourceResponseOutput) ToServiceNowSourceResponseOutput() ServiceNowSourceResponseOutput {
	return o
}

func (o ServiceNowSourceResponseOutput) ToServiceNowSourceResponseOutputWithContext(ctx context.Context) ServiceNowSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o ServiceNowSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o ServiceNowSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o ServiceNowSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceNowSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'ServiceNowSource'.
func (o ServiceNowSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A linked service for an SSH File Transfer Protocol (SFTP) server.
type SftpServerLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication type to be used to connect to the FTP server.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The SFTP server host name. Type: string (or Expression with resultType string).
	Host interface{} `pulumi:"host"`
	// The host key finger-print of the SFTP server. When SkipHostKeyValidation is false, HostKeyFingerprint should be specified. Type: string (or Expression with resultType string).
	HostKeyFingerprint interface{} `pulumi:"hostKeyFingerprint"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The password to decrypt the SSH private key if the SSH private key is encrypted.
	PassPhrase interface{} `pulumi:"passPhrase"`
	// Password to logon the SFTP server for Basic authentication.
	Password interface{} `pulumi:"password"`
	// The TCP port number that the SFTP server uses to listen for client connections. Default value is 22. Type: integer (or Expression with resultType integer), minimum: 0.
	Port interface{} `pulumi:"port"`
	// Base64 encoded SSH private key content for SshPublicKey authentication. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format.
	PrivateKeyContent interface{} `pulumi:"privateKeyContent"`
	// The SSH private key file path for SshPublicKey authentication. Only valid for on-premises copy. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format. Type: string (or Expression with resultType string).
	PrivateKeyPath interface{} `pulumi:"privateKeyPath"`
	// If true, skip the SSH host key validation. Default value is false. Type: boolean (or Expression with resultType boolean).
	SkipHostKeyValidation interface{} `pulumi:"skipHostKeyValidation"`
	// Type of linked service.
	// Expected value is 'Sftp'.
	Type string `pulumi:"type"`
	// The username used to log on to the SFTP server. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// SftpServerLinkedServiceInput is an input type that accepts SftpServerLinkedServiceArgs and SftpServerLinkedServiceOutput values.
// You can construct a concrete instance of `SftpServerLinkedServiceInput` via:
//
//          SftpServerLinkedServiceArgs{...}
type SftpServerLinkedServiceInput interface {
	pulumi.Input

	ToSftpServerLinkedServiceOutput() SftpServerLinkedServiceOutput
	ToSftpServerLinkedServiceOutputWithContext(context.Context) SftpServerLinkedServiceOutput
}

// A linked service for an SSH File Transfer Protocol (SFTP) server.
type SftpServerLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication type to be used to connect to the FTP server.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The SFTP server host name. Type: string (or Expression with resultType string).
	Host pulumi.Input `pulumi:"host"`
	// The host key finger-print of the SFTP server. When SkipHostKeyValidation is false, HostKeyFingerprint should be specified. Type: string (or Expression with resultType string).
	HostKeyFingerprint pulumi.Input `pulumi:"hostKeyFingerprint"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The password to decrypt the SSH private key if the SSH private key is encrypted.
	PassPhrase pulumi.Input `pulumi:"passPhrase"`
	// Password to logon the SFTP server for Basic authentication.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port number that the SFTP server uses to listen for client connections. Default value is 22. Type: integer (or Expression with resultType integer), minimum: 0.
	Port pulumi.Input `pulumi:"port"`
	// Base64 encoded SSH private key content for SshPublicKey authentication. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format.
	PrivateKeyContent pulumi.Input `pulumi:"privateKeyContent"`
	// The SSH private key file path for SshPublicKey authentication. Only valid for on-premises copy. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format. Type: string (or Expression with resultType string).
	PrivateKeyPath pulumi.Input `pulumi:"privateKeyPath"`
	// If true, skip the SSH host key validation. Default value is false. Type: boolean (or Expression with resultType boolean).
	SkipHostKeyValidation pulumi.Input `pulumi:"skipHostKeyValidation"`
	// Type of linked service.
	// Expected value is 'Sftp'.
	Type pulumi.StringInput `pulumi:"type"`
	// The username used to log on to the SFTP server. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (SftpServerLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SftpServerLinkedService)(nil)).Elem()
}

func (i SftpServerLinkedServiceArgs) ToSftpServerLinkedServiceOutput() SftpServerLinkedServiceOutput {
	return i.ToSftpServerLinkedServiceOutputWithContext(context.Background())
}

func (i SftpServerLinkedServiceArgs) ToSftpServerLinkedServiceOutputWithContext(ctx context.Context) SftpServerLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SftpServerLinkedServiceOutput)
}

// A linked service for an SSH File Transfer Protocol (SFTP) server.
type SftpServerLinkedServiceOutput struct{ *pulumi.OutputState }

func (SftpServerLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SftpServerLinkedService)(nil)).Elem()
}

func (o SftpServerLinkedServiceOutput) ToSftpServerLinkedServiceOutput() SftpServerLinkedServiceOutput {
	return o
}

func (o SftpServerLinkedServiceOutput) ToSftpServerLinkedServiceOutputWithContext(ctx context.Context) SftpServerLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SftpServerLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SftpServerLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication type to be used to connect to the FTP server.
func (o SftpServerLinkedServiceOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SftpServerLinkedService) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The integration runtime reference.
func (o SftpServerLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v SftpServerLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o SftpServerLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SftpServerLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SftpServerLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The SFTP server host name. Type: string (or Expression with resultType string).
func (o SftpServerLinkedServiceOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedService) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// The host key finger-print of the SFTP server. When SkipHostKeyValidation is false, HostKeyFingerprint should be specified. Type: string (or Expression with resultType string).
func (o SftpServerLinkedServiceOutput) HostKeyFingerprint() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedService) interface{} { return v.HostKeyFingerprint }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SftpServerLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SftpServerLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The password to decrypt the SSH private key if the SSH private key is encrypted.
func (o SftpServerLinkedServiceOutput) PassPhrase() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedService) interface{} { return v.PassPhrase }).(pulumi.AnyOutput)
}

// Password to logon the SFTP server for Basic authentication.
func (o SftpServerLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port number that the SFTP server uses to listen for client connections. Default value is 22. Type: integer (or Expression with resultType integer), minimum: 0.
func (o SftpServerLinkedServiceOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedService) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// Base64 encoded SSH private key content for SshPublicKey authentication. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format.
func (o SftpServerLinkedServiceOutput) PrivateKeyContent() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedService) interface{} { return v.PrivateKeyContent }).(pulumi.AnyOutput)
}

// The SSH private key file path for SshPublicKey authentication. Only valid for on-premises copy. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format. Type: string (or Expression with resultType string).
func (o SftpServerLinkedServiceOutput) PrivateKeyPath() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedService) interface{} { return v.PrivateKeyPath }).(pulumi.AnyOutput)
}

// If true, skip the SSH host key validation. Default value is false. Type: boolean (or Expression with resultType boolean).
func (o SftpServerLinkedServiceOutput) SkipHostKeyValidation() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedService) interface{} { return v.SkipHostKeyValidation }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Sftp'.
func (o SftpServerLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SftpServerLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// The username used to log on to the SFTP server. Type: string (or Expression with resultType string).
func (o SftpServerLinkedServiceOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedService) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// A linked service for an SSH File Transfer Protocol (SFTP) server.
type SftpServerLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication type to be used to connect to the FTP server.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The SFTP server host name. Type: string (or Expression with resultType string).
	Host interface{} `pulumi:"host"`
	// The host key finger-print of the SFTP server. When SkipHostKeyValidation is false, HostKeyFingerprint should be specified. Type: string (or Expression with resultType string).
	HostKeyFingerprint interface{} `pulumi:"hostKeyFingerprint"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The password to decrypt the SSH private key if the SSH private key is encrypted.
	PassPhrase interface{} `pulumi:"passPhrase"`
	// Password to logon the SFTP server for Basic authentication.
	Password interface{} `pulumi:"password"`
	// The TCP port number that the SFTP server uses to listen for client connections. Default value is 22. Type: integer (or Expression with resultType integer), minimum: 0.
	Port interface{} `pulumi:"port"`
	// Base64 encoded SSH private key content for SshPublicKey authentication. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format.
	PrivateKeyContent interface{} `pulumi:"privateKeyContent"`
	// The SSH private key file path for SshPublicKey authentication. Only valid for on-premises copy. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format. Type: string (or Expression with resultType string).
	PrivateKeyPath interface{} `pulumi:"privateKeyPath"`
	// If true, skip the SSH host key validation. Default value is false. Type: boolean (or Expression with resultType boolean).
	SkipHostKeyValidation interface{} `pulumi:"skipHostKeyValidation"`
	// Type of linked service.
	// Expected value is 'Sftp'.
	Type string `pulumi:"type"`
	// The username used to log on to the SFTP server. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// SftpServerLinkedServiceResponseInput is an input type that accepts SftpServerLinkedServiceResponseArgs and SftpServerLinkedServiceResponseOutput values.
// You can construct a concrete instance of `SftpServerLinkedServiceResponseInput` via:
//
//          SftpServerLinkedServiceResponseArgs{...}
type SftpServerLinkedServiceResponseInput interface {
	pulumi.Input

	ToSftpServerLinkedServiceResponseOutput() SftpServerLinkedServiceResponseOutput
	ToSftpServerLinkedServiceResponseOutputWithContext(context.Context) SftpServerLinkedServiceResponseOutput
}

// A linked service for an SSH File Transfer Protocol (SFTP) server.
type SftpServerLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication type to be used to connect to the FTP server.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The SFTP server host name. Type: string (or Expression with resultType string).
	Host pulumi.Input `pulumi:"host"`
	// The host key finger-print of the SFTP server. When SkipHostKeyValidation is false, HostKeyFingerprint should be specified. Type: string (or Expression with resultType string).
	HostKeyFingerprint pulumi.Input `pulumi:"hostKeyFingerprint"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The password to decrypt the SSH private key if the SSH private key is encrypted.
	PassPhrase pulumi.Input `pulumi:"passPhrase"`
	// Password to logon the SFTP server for Basic authentication.
	Password pulumi.Input `pulumi:"password"`
	// The TCP port number that the SFTP server uses to listen for client connections. Default value is 22. Type: integer (or Expression with resultType integer), minimum: 0.
	Port pulumi.Input `pulumi:"port"`
	// Base64 encoded SSH private key content for SshPublicKey authentication. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format.
	PrivateKeyContent pulumi.Input `pulumi:"privateKeyContent"`
	// The SSH private key file path for SshPublicKey authentication. Only valid for on-premises copy. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format. Type: string (or Expression with resultType string).
	PrivateKeyPath pulumi.Input `pulumi:"privateKeyPath"`
	// If true, skip the SSH host key validation. Default value is false. Type: boolean (or Expression with resultType boolean).
	SkipHostKeyValidation pulumi.Input `pulumi:"skipHostKeyValidation"`
	// Type of linked service.
	// Expected value is 'Sftp'.
	Type pulumi.StringInput `pulumi:"type"`
	// The username used to log on to the SFTP server. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (SftpServerLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SftpServerLinkedServiceResponse)(nil)).Elem()
}

func (i SftpServerLinkedServiceResponseArgs) ToSftpServerLinkedServiceResponseOutput() SftpServerLinkedServiceResponseOutput {
	return i.ToSftpServerLinkedServiceResponseOutputWithContext(context.Background())
}

func (i SftpServerLinkedServiceResponseArgs) ToSftpServerLinkedServiceResponseOutputWithContext(ctx context.Context) SftpServerLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SftpServerLinkedServiceResponseOutput)
}

// A linked service for an SSH File Transfer Protocol (SFTP) server.
type SftpServerLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (SftpServerLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SftpServerLinkedServiceResponse)(nil)).Elem()
}

func (o SftpServerLinkedServiceResponseOutput) ToSftpServerLinkedServiceResponseOutput() SftpServerLinkedServiceResponseOutput {
	return o
}

func (o SftpServerLinkedServiceResponseOutput) ToSftpServerLinkedServiceResponseOutputWithContext(ctx context.Context) SftpServerLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SftpServerLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SftpServerLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication type to be used to connect to the FTP server.
func (o SftpServerLinkedServiceResponseOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SftpServerLinkedServiceResponse) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The integration runtime reference.
func (o SftpServerLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v SftpServerLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o SftpServerLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SftpServerLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SftpServerLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The SFTP server host name. Type: string (or Expression with resultType string).
func (o SftpServerLinkedServiceResponseOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedServiceResponse) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// The host key finger-print of the SFTP server. When SkipHostKeyValidation is false, HostKeyFingerprint should be specified. Type: string (or Expression with resultType string).
func (o SftpServerLinkedServiceResponseOutput) HostKeyFingerprint() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedServiceResponse) interface{} { return v.HostKeyFingerprint }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SftpServerLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SftpServerLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The password to decrypt the SSH private key if the SSH private key is encrypted.
func (o SftpServerLinkedServiceResponseOutput) PassPhrase() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedServiceResponse) interface{} { return v.PassPhrase }).(pulumi.AnyOutput)
}

// Password to logon the SFTP server for Basic authentication.
func (o SftpServerLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port number that the SFTP server uses to listen for client connections. Default value is 22. Type: integer (or Expression with resultType integer), minimum: 0.
func (o SftpServerLinkedServiceResponseOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedServiceResponse) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// Base64 encoded SSH private key content for SshPublicKey authentication. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format.
func (o SftpServerLinkedServiceResponseOutput) PrivateKeyContent() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedServiceResponse) interface{} { return v.PrivateKeyContent }).(pulumi.AnyOutput)
}

// The SSH private key file path for SshPublicKey authentication. Only valid for on-premises copy. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format. Type: string (or Expression with resultType string).
func (o SftpServerLinkedServiceResponseOutput) PrivateKeyPath() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedServiceResponse) interface{} { return v.PrivateKeyPath }).(pulumi.AnyOutput)
}

// If true, skip the SSH host key validation. Default value is false. Type: boolean (or Expression with resultType boolean).
func (o SftpServerLinkedServiceResponseOutput) SkipHostKeyValidation() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedServiceResponse) interface{} { return v.SkipHostKeyValidation }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Sftp'.
func (o SftpServerLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SftpServerLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The username used to log on to the SFTP server. Type: string (or Expression with resultType string).
func (o SftpServerLinkedServiceResponseOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v SftpServerLinkedServiceResponse) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// Shopify Service linked service.
type ShopifyLinkedService struct {
	// The API access token that can be used to access Shopify’s data. The token won't expire if it is offline mode.
	AccessToken interface{} `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the Shopify server. (i.e. mystore.myshopify.com)
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Shopify'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// ShopifyLinkedServiceInput is an input type that accepts ShopifyLinkedServiceArgs and ShopifyLinkedServiceOutput values.
// You can construct a concrete instance of `ShopifyLinkedServiceInput` via:
//
//          ShopifyLinkedServiceArgs{...}
type ShopifyLinkedServiceInput interface {
	pulumi.Input

	ToShopifyLinkedServiceOutput() ShopifyLinkedServiceOutput
	ToShopifyLinkedServiceOutputWithContext(context.Context) ShopifyLinkedServiceOutput
}

// Shopify Service linked service.
type ShopifyLinkedServiceArgs struct {
	// The API access token that can be used to access Shopify’s data. The token won't expire if it is offline mode.
	AccessToken pulumi.Input `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the Shopify server. (i.e. mystore.myshopify.com)
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Shopify'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (ShopifyLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShopifyLinkedService)(nil)).Elem()
}

func (i ShopifyLinkedServiceArgs) ToShopifyLinkedServiceOutput() ShopifyLinkedServiceOutput {
	return i.ToShopifyLinkedServiceOutputWithContext(context.Background())
}

func (i ShopifyLinkedServiceArgs) ToShopifyLinkedServiceOutputWithContext(ctx context.Context) ShopifyLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShopifyLinkedServiceOutput)
}

// Shopify Service linked service.
type ShopifyLinkedServiceOutput struct{ *pulumi.OutputState }

func (ShopifyLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShopifyLinkedService)(nil)).Elem()
}

func (o ShopifyLinkedServiceOutput) ToShopifyLinkedServiceOutput() ShopifyLinkedServiceOutput {
	return o
}

func (o ShopifyLinkedServiceOutput) ToShopifyLinkedServiceOutputWithContext(ctx context.Context) ShopifyLinkedServiceOutput {
	return o
}

// The API access token that can be used to access Shopify’s data. The token won't expire if it is offline mode.
func (o ShopifyLinkedServiceOutput) AccessToken() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifyLinkedService) interface{} { return v.AccessToken }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o ShopifyLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ShopifyLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o ShopifyLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v ShopifyLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o ShopifyLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShopifyLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o ShopifyLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifyLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the Shopify server. (i.e. mystore.myshopify.com)
func (o ShopifyLinkedServiceOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifyLinkedService) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o ShopifyLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v ShopifyLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'Shopify'.
func (o ShopifyLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ShopifyLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o ShopifyLinkedServiceOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifyLinkedService) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o ShopifyLinkedServiceOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifyLinkedService) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o ShopifyLinkedServiceOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifyLinkedService) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Shopify Service linked service.
type ShopifyLinkedServiceResponse struct {
	// The API access token that can be used to access Shopify’s data. The token won't expire if it is offline mode.
	AccessToken interface{} `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the Shopify server. (i.e. mystore.myshopify.com)
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Shopify'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// ShopifyLinkedServiceResponseInput is an input type that accepts ShopifyLinkedServiceResponseArgs and ShopifyLinkedServiceResponseOutput values.
// You can construct a concrete instance of `ShopifyLinkedServiceResponseInput` via:
//
//          ShopifyLinkedServiceResponseArgs{...}
type ShopifyLinkedServiceResponseInput interface {
	pulumi.Input

	ToShopifyLinkedServiceResponseOutput() ShopifyLinkedServiceResponseOutput
	ToShopifyLinkedServiceResponseOutputWithContext(context.Context) ShopifyLinkedServiceResponseOutput
}

// Shopify Service linked service.
type ShopifyLinkedServiceResponseArgs struct {
	// The API access token that can be used to access Shopify’s data. The token won't expire if it is offline mode.
	AccessToken pulumi.Input `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the Shopify server. (i.e. mystore.myshopify.com)
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Shopify'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (ShopifyLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShopifyLinkedServiceResponse)(nil)).Elem()
}

func (i ShopifyLinkedServiceResponseArgs) ToShopifyLinkedServiceResponseOutput() ShopifyLinkedServiceResponseOutput {
	return i.ToShopifyLinkedServiceResponseOutputWithContext(context.Background())
}

func (i ShopifyLinkedServiceResponseArgs) ToShopifyLinkedServiceResponseOutputWithContext(ctx context.Context) ShopifyLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShopifyLinkedServiceResponseOutput)
}

// Shopify Service linked service.
type ShopifyLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (ShopifyLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShopifyLinkedServiceResponse)(nil)).Elem()
}

func (o ShopifyLinkedServiceResponseOutput) ToShopifyLinkedServiceResponseOutput() ShopifyLinkedServiceResponseOutput {
	return o
}

func (o ShopifyLinkedServiceResponseOutput) ToShopifyLinkedServiceResponseOutputWithContext(ctx context.Context) ShopifyLinkedServiceResponseOutput {
	return o
}

// The API access token that can be used to access Shopify’s data. The token won't expire if it is offline mode.
func (o ShopifyLinkedServiceResponseOutput) AccessToken() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifyLinkedServiceResponse) interface{} { return v.AccessToken }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o ShopifyLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ShopifyLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o ShopifyLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v ShopifyLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o ShopifyLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShopifyLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o ShopifyLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifyLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the Shopify server. (i.e. mystore.myshopify.com)
func (o ShopifyLinkedServiceResponseOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifyLinkedServiceResponse) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o ShopifyLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v ShopifyLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'Shopify'.
func (o ShopifyLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ShopifyLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o ShopifyLinkedServiceResponseOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifyLinkedServiceResponse) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o ShopifyLinkedServiceResponseOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifyLinkedServiceResponse) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o ShopifyLinkedServiceResponseOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifyLinkedServiceResponse) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Shopify Service dataset.
type ShopifyObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ShopifyObject'.
	Type string `pulumi:"type"`
}

// ShopifyObjectDatasetInput is an input type that accepts ShopifyObjectDatasetArgs and ShopifyObjectDatasetOutput values.
// You can construct a concrete instance of `ShopifyObjectDatasetInput` via:
//
//          ShopifyObjectDatasetArgs{...}
type ShopifyObjectDatasetInput interface {
	pulumi.Input

	ToShopifyObjectDatasetOutput() ShopifyObjectDatasetOutput
	ToShopifyObjectDatasetOutputWithContext(context.Context) ShopifyObjectDatasetOutput
}

// Shopify Service dataset.
type ShopifyObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ShopifyObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ShopifyObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShopifyObjectDataset)(nil)).Elem()
}

func (i ShopifyObjectDatasetArgs) ToShopifyObjectDatasetOutput() ShopifyObjectDatasetOutput {
	return i.ToShopifyObjectDatasetOutputWithContext(context.Background())
}

func (i ShopifyObjectDatasetArgs) ToShopifyObjectDatasetOutputWithContext(ctx context.Context) ShopifyObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShopifyObjectDatasetOutput)
}

// Shopify Service dataset.
type ShopifyObjectDatasetOutput struct{ *pulumi.OutputState }

func (ShopifyObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShopifyObjectDataset)(nil)).Elem()
}

func (o ShopifyObjectDatasetOutput) ToShopifyObjectDatasetOutput() ShopifyObjectDatasetOutput {
	return o
}

func (o ShopifyObjectDatasetOutput) ToShopifyObjectDatasetOutputWithContext(ctx context.Context) ShopifyObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ShopifyObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ShopifyObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o ShopifyObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShopifyObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o ShopifyObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v ShopifyObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o ShopifyObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v ShopifyObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o ShopifyObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifyObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'ShopifyObject'.
func (o ShopifyObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ShopifyObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Shopify Service dataset.
type ShopifyObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ShopifyObject'.
	Type string `pulumi:"type"`
}

// ShopifyObjectDatasetResponseInput is an input type that accepts ShopifyObjectDatasetResponseArgs and ShopifyObjectDatasetResponseOutput values.
// You can construct a concrete instance of `ShopifyObjectDatasetResponseInput` via:
//
//          ShopifyObjectDatasetResponseArgs{...}
type ShopifyObjectDatasetResponseInput interface {
	pulumi.Input

	ToShopifyObjectDatasetResponseOutput() ShopifyObjectDatasetResponseOutput
	ToShopifyObjectDatasetResponseOutputWithContext(context.Context) ShopifyObjectDatasetResponseOutput
}

// Shopify Service dataset.
type ShopifyObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ShopifyObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ShopifyObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShopifyObjectDatasetResponse)(nil)).Elem()
}

func (i ShopifyObjectDatasetResponseArgs) ToShopifyObjectDatasetResponseOutput() ShopifyObjectDatasetResponseOutput {
	return i.ToShopifyObjectDatasetResponseOutputWithContext(context.Background())
}

func (i ShopifyObjectDatasetResponseArgs) ToShopifyObjectDatasetResponseOutputWithContext(ctx context.Context) ShopifyObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShopifyObjectDatasetResponseOutput)
}

// Shopify Service dataset.
type ShopifyObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (ShopifyObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShopifyObjectDatasetResponse)(nil)).Elem()
}

func (o ShopifyObjectDatasetResponseOutput) ToShopifyObjectDatasetResponseOutput() ShopifyObjectDatasetResponseOutput {
	return o
}

func (o ShopifyObjectDatasetResponseOutput) ToShopifyObjectDatasetResponseOutputWithContext(ctx context.Context) ShopifyObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ShopifyObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ShopifyObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o ShopifyObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShopifyObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o ShopifyObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v ShopifyObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o ShopifyObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v ShopifyObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o ShopifyObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifyObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'ShopifyObject'.
func (o ShopifyObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ShopifyObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Shopify Service source.
type ShopifySource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ShopifySource'.
	Type string `pulumi:"type"`
}

// ShopifySourceInput is an input type that accepts ShopifySourceArgs and ShopifySourceOutput values.
// You can construct a concrete instance of `ShopifySourceInput` via:
//
//          ShopifySourceArgs{...}
type ShopifySourceInput interface {
	pulumi.Input

	ToShopifySourceOutput() ShopifySourceOutput
	ToShopifySourceOutputWithContext(context.Context) ShopifySourceOutput
}

// A copy activity Shopify Service source.
type ShopifySourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ShopifySource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ShopifySourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShopifySource)(nil)).Elem()
}

func (i ShopifySourceArgs) ToShopifySourceOutput() ShopifySourceOutput {
	return i.ToShopifySourceOutputWithContext(context.Background())
}

func (i ShopifySourceArgs) ToShopifySourceOutputWithContext(ctx context.Context) ShopifySourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShopifySourceOutput)
}

// A copy activity Shopify Service source.
type ShopifySourceOutput struct{ *pulumi.OutputState }

func (ShopifySourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShopifySource)(nil)).Elem()
}

func (o ShopifySourceOutput) ToShopifySourceOutput() ShopifySourceOutput {
	return o
}

func (o ShopifySourceOutput) ToShopifySourceOutputWithContext(ctx context.Context) ShopifySourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o ShopifySourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifySource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o ShopifySourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifySource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o ShopifySourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifySource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'ShopifySource'.
func (o ShopifySourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ShopifySource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Shopify Service source.
type ShopifySourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ShopifySource'.
	Type string `pulumi:"type"`
}

// ShopifySourceResponseInput is an input type that accepts ShopifySourceResponseArgs and ShopifySourceResponseOutput values.
// You can construct a concrete instance of `ShopifySourceResponseInput` via:
//
//          ShopifySourceResponseArgs{...}
type ShopifySourceResponseInput interface {
	pulumi.Input

	ToShopifySourceResponseOutput() ShopifySourceResponseOutput
	ToShopifySourceResponseOutputWithContext(context.Context) ShopifySourceResponseOutput
}

// A copy activity Shopify Service source.
type ShopifySourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ShopifySource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ShopifySourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShopifySourceResponse)(nil)).Elem()
}

func (i ShopifySourceResponseArgs) ToShopifySourceResponseOutput() ShopifySourceResponseOutput {
	return i.ToShopifySourceResponseOutputWithContext(context.Background())
}

func (i ShopifySourceResponseArgs) ToShopifySourceResponseOutputWithContext(ctx context.Context) ShopifySourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShopifySourceResponseOutput)
}

// A copy activity Shopify Service source.
type ShopifySourceResponseOutput struct{ *pulumi.OutputState }

func (ShopifySourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShopifySourceResponse)(nil)).Elem()
}

func (o ShopifySourceResponseOutput) ToShopifySourceResponseOutput() ShopifySourceResponseOutput {
	return o
}

func (o ShopifySourceResponseOutput) ToShopifySourceResponseOutputWithContext(ctx context.Context) ShopifySourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o ShopifySourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifySourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o ShopifySourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifySourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o ShopifySourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v ShopifySourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'ShopifySource'.
func (o ShopifySourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ShopifySourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Spark Server linked service.
type SparkLinkedService struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch interface{} `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert interface{} `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication method used to access the Spark server.
	AuthenticationType string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl interface{} `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// IP address or host name of the Spark server
	Host interface{} `pulumi:"host"`
	// The partial URL corresponding to the Spark server.
	HttpPath interface{} `pulumi:"httpPath"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The password corresponding to the user name that you provided in the Username field
	Password interface{} `pulumi:"password"`
	// The TCP port that the Spark server uses to listen for client connections.
	Port interface{} `pulumi:"port"`
	// The type of Spark server.
	ServerType *string `pulumi:"serverType"`
	// The transport protocol to use in the Thrift layer.
	ThriftTransportProtocol *string `pulumi:"thriftTransportProtocol"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath interface{} `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Spark'.
	Type string `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore interface{} `pulumi:"useSystemTrustStore"`
	// The user name that you use to access Spark Server.
	Username interface{} `pulumi:"username"`
}

// SparkLinkedServiceInput is an input type that accepts SparkLinkedServiceArgs and SparkLinkedServiceOutput values.
// You can construct a concrete instance of `SparkLinkedServiceInput` via:
//
//          SparkLinkedServiceArgs{...}
type SparkLinkedServiceInput interface {
	pulumi.Input

	ToSparkLinkedServiceOutput() SparkLinkedServiceOutput
	ToSparkLinkedServiceOutputWithContext(context.Context) SparkLinkedServiceOutput
}

// Spark Server linked service.
type SparkLinkedServiceArgs struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch pulumi.Input `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert pulumi.Input `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication method used to access the Spark server.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl pulumi.Input `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// IP address or host name of the Spark server
	Host pulumi.Input `pulumi:"host"`
	// The partial URL corresponding to the Spark server.
	HttpPath pulumi.Input `pulumi:"httpPath"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The password corresponding to the user name that you provided in the Username field
	Password pulumi.Input `pulumi:"password"`
	// The TCP port that the Spark server uses to listen for client connections.
	Port pulumi.Input `pulumi:"port"`
	// The type of Spark server.
	ServerType pulumi.StringPtrInput `pulumi:"serverType"`
	// The transport protocol to use in the Thrift layer.
	ThriftTransportProtocol pulumi.StringPtrInput `pulumi:"thriftTransportProtocol"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath pulumi.Input `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Spark'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore pulumi.Input `pulumi:"useSystemTrustStore"`
	// The user name that you use to access Spark Server.
	Username pulumi.Input `pulumi:"username"`
}

func (SparkLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkLinkedService)(nil)).Elem()
}

func (i SparkLinkedServiceArgs) ToSparkLinkedServiceOutput() SparkLinkedServiceOutput {
	return i.ToSparkLinkedServiceOutputWithContext(context.Background())
}

func (i SparkLinkedServiceArgs) ToSparkLinkedServiceOutputWithContext(ctx context.Context) SparkLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkLinkedServiceOutput)
}

// Spark Server linked service.
type SparkLinkedServiceOutput struct{ *pulumi.OutputState }

func (SparkLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkLinkedService)(nil)).Elem()
}

func (o SparkLinkedServiceOutput) ToSparkLinkedServiceOutput() SparkLinkedServiceOutput {
	return o
}

func (o SparkLinkedServiceOutput) ToSparkLinkedServiceOutputWithContext(ctx context.Context) SparkLinkedServiceOutput {
	return o
}

// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
func (o SparkLinkedServiceOutput) AllowHostNameCNMismatch() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedService) interface{} { return v.AllowHostNameCNMismatch }).(pulumi.AnyOutput)
}

// Specifies whether to allow self-signed certificates from the server. The default value is false.
func (o SparkLinkedServiceOutput) AllowSelfSignedServerCert() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedService) interface{} { return v.AllowSelfSignedServerCert }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o SparkLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SparkLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication method used to access the Spark server.
func (o SparkLinkedServiceOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v SparkLinkedService) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The integration runtime reference.
func (o SparkLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v SparkLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o SparkLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
func (o SparkLinkedServiceOutput) EnableSsl() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedService) interface{} { return v.EnableSsl }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SparkLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// IP address or host name of the Spark server
func (o SparkLinkedServiceOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedService) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// The partial URL corresponding to the Spark server.
func (o SparkLinkedServiceOutput) HttpPath() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedService) interface{} { return v.HttpPath }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SparkLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SparkLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The password corresponding to the user name that you provided in the Username field
func (o SparkLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port that the Spark server uses to listen for client connections.
func (o SparkLinkedServiceOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedService) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The type of Spark server.
func (o SparkLinkedServiceOutput) ServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkLinkedService) *string { return v.ServerType }).(pulumi.StringPtrOutput)
}

// The transport protocol to use in the Thrift layer.
func (o SparkLinkedServiceOutput) ThriftTransportProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkLinkedService) *string { return v.ThriftTransportProtocol }).(pulumi.StringPtrOutput)
}

// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
func (o SparkLinkedServiceOutput) TrustedCertPath() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedService) interface{} { return v.TrustedCertPath }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Spark'.
func (o SparkLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SparkLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
func (o SparkLinkedServiceOutput) UseSystemTrustStore() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedService) interface{} { return v.UseSystemTrustStore }).(pulumi.AnyOutput)
}

// The user name that you use to access Spark Server.
func (o SparkLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Spark Server linked service.
type SparkLinkedServiceResponse struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch interface{} `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert interface{} `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The authentication method used to access the Spark server.
	AuthenticationType string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl interface{} `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// IP address or host name of the Spark server
	Host interface{} `pulumi:"host"`
	// The partial URL corresponding to the Spark server.
	HttpPath interface{} `pulumi:"httpPath"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The password corresponding to the user name that you provided in the Username field
	Password interface{} `pulumi:"password"`
	// The TCP port that the Spark server uses to listen for client connections.
	Port interface{} `pulumi:"port"`
	// The type of Spark server.
	ServerType *string `pulumi:"serverType"`
	// The transport protocol to use in the Thrift layer.
	ThriftTransportProtocol *string `pulumi:"thriftTransportProtocol"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath interface{} `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Spark'.
	Type string `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore interface{} `pulumi:"useSystemTrustStore"`
	// The user name that you use to access Spark Server.
	Username interface{} `pulumi:"username"`
}

// SparkLinkedServiceResponseInput is an input type that accepts SparkLinkedServiceResponseArgs and SparkLinkedServiceResponseOutput values.
// You can construct a concrete instance of `SparkLinkedServiceResponseInput` via:
//
//          SparkLinkedServiceResponseArgs{...}
type SparkLinkedServiceResponseInput interface {
	pulumi.Input

	ToSparkLinkedServiceResponseOutput() SparkLinkedServiceResponseOutput
	ToSparkLinkedServiceResponseOutputWithContext(context.Context) SparkLinkedServiceResponseOutput
}

// Spark Server linked service.
type SparkLinkedServiceResponseArgs struct {
	// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
	AllowHostNameCNMismatch pulumi.Input `pulumi:"allowHostNameCNMismatch"`
	// Specifies whether to allow self-signed certificates from the server. The default value is false.
	AllowSelfSignedServerCert pulumi.Input `pulumi:"allowSelfSignedServerCert"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The authentication method used to access the Spark server.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
	EnableSsl pulumi.Input `pulumi:"enableSsl"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// IP address or host name of the Spark server
	Host pulumi.Input `pulumi:"host"`
	// The partial URL corresponding to the Spark server.
	HttpPath pulumi.Input `pulumi:"httpPath"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The password corresponding to the user name that you provided in the Username field
	Password pulumi.Input `pulumi:"password"`
	// The TCP port that the Spark server uses to listen for client connections.
	Port pulumi.Input `pulumi:"port"`
	// The type of Spark server.
	ServerType pulumi.StringPtrInput `pulumi:"serverType"`
	// The transport protocol to use in the Thrift layer.
	ThriftTransportProtocol pulumi.StringPtrInput `pulumi:"thriftTransportProtocol"`
	// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
	TrustedCertPath pulumi.Input `pulumi:"trustedCertPath"`
	// Type of linked service.
	// Expected value is 'Spark'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
	UseSystemTrustStore pulumi.Input `pulumi:"useSystemTrustStore"`
	// The user name that you use to access Spark Server.
	Username pulumi.Input `pulumi:"username"`
}

func (SparkLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkLinkedServiceResponse)(nil)).Elem()
}

func (i SparkLinkedServiceResponseArgs) ToSparkLinkedServiceResponseOutput() SparkLinkedServiceResponseOutput {
	return i.ToSparkLinkedServiceResponseOutputWithContext(context.Background())
}

func (i SparkLinkedServiceResponseArgs) ToSparkLinkedServiceResponseOutputWithContext(ctx context.Context) SparkLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkLinkedServiceResponseOutput)
}

// Spark Server linked service.
type SparkLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (SparkLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkLinkedServiceResponse)(nil)).Elem()
}

func (o SparkLinkedServiceResponseOutput) ToSparkLinkedServiceResponseOutput() SparkLinkedServiceResponseOutput {
	return o
}

func (o SparkLinkedServiceResponseOutput) ToSparkLinkedServiceResponseOutputWithContext(ctx context.Context) SparkLinkedServiceResponseOutput {
	return o
}

// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
func (o SparkLinkedServiceResponseOutput) AllowHostNameCNMismatch() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) interface{} { return v.AllowHostNameCNMismatch }).(pulumi.AnyOutput)
}

// Specifies whether to allow self-signed certificates from the server. The default value is false.
func (o SparkLinkedServiceResponseOutput) AllowSelfSignedServerCert() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) interface{} { return v.AllowSelfSignedServerCert }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o SparkLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The authentication method used to access the Spark server.
func (o SparkLinkedServiceResponseOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The integration runtime reference.
func (o SparkLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o SparkLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
func (o SparkLinkedServiceResponseOutput) EnableSsl() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) interface{} { return v.EnableSsl }).(pulumi.AnyOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SparkLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// IP address or host name of the Spark server
func (o SparkLinkedServiceResponseOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// The partial URL corresponding to the Spark server.
func (o SparkLinkedServiceResponseOutput) HttpPath() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) interface{} { return v.HttpPath }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SparkLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The password corresponding to the user name that you provided in the Username field
func (o SparkLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The TCP port that the Spark server uses to listen for client connections.
func (o SparkLinkedServiceResponseOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// The type of Spark server.
func (o SparkLinkedServiceResponseOutput) ServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) *string { return v.ServerType }).(pulumi.StringPtrOutput)
}

// The transport protocol to use in the Thrift layer.
func (o SparkLinkedServiceResponseOutput) ThriftTransportProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) *string { return v.ThriftTransportProtocol }).(pulumi.StringPtrOutput)
}

// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
func (o SparkLinkedServiceResponseOutput) TrustedCertPath() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) interface{} { return v.TrustedCertPath }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Spark'.
func (o SparkLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
func (o SparkLinkedServiceResponseOutput) UseSystemTrustStore() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) interface{} { return v.UseSystemTrustStore }).(pulumi.AnyOutput)
}

// The user name that you use to access Spark Server.
func (o SparkLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Spark Server dataset.
type SparkObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SparkObject'.
	Type string `pulumi:"type"`
}

// SparkObjectDatasetInput is an input type that accepts SparkObjectDatasetArgs and SparkObjectDatasetOutput values.
// You can construct a concrete instance of `SparkObjectDatasetInput` via:
//
//          SparkObjectDatasetArgs{...}
type SparkObjectDatasetInput interface {
	pulumi.Input

	ToSparkObjectDatasetOutput() SparkObjectDatasetOutput
	ToSparkObjectDatasetOutputWithContext(context.Context) SparkObjectDatasetOutput
}

// Spark Server dataset.
type SparkObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SparkObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SparkObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkObjectDataset)(nil)).Elem()
}

func (i SparkObjectDatasetArgs) ToSparkObjectDatasetOutput() SparkObjectDatasetOutput {
	return i.ToSparkObjectDatasetOutputWithContext(context.Background())
}

func (i SparkObjectDatasetArgs) ToSparkObjectDatasetOutputWithContext(ctx context.Context) SparkObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkObjectDatasetOutput)
}

// Spark Server dataset.
type SparkObjectDatasetOutput struct{ *pulumi.OutputState }

func (SparkObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkObjectDataset)(nil)).Elem()
}

func (o SparkObjectDatasetOutput) ToSparkObjectDatasetOutput() SparkObjectDatasetOutput {
	return o
}

func (o SparkObjectDatasetOutput) ToSparkObjectDatasetOutputWithContext(ctx context.Context) SparkObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SparkObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SparkObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o SparkObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o SparkObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v SparkObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o SparkObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SparkObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o SparkObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'SparkObject'.
func (o SparkObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SparkObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Spark Server dataset.
type SparkObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SparkObject'.
	Type string `pulumi:"type"`
}

// SparkObjectDatasetResponseInput is an input type that accepts SparkObjectDatasetResponseArgs and SparkObjectDatasetResponseOutput values.
// You can construct a concrete instance of `SparkObjectDatasetResponseInput` via:
//
//          SparkObjectDatasetResponseArgs{...}
type SparkObjectDatasetResponseInput interface {
	pulumi.Input

	ToSparkObjectDatasetResponseOutput() SparkObjectDatasetResponseOutput
	ToSparkObjectDatasetResponseOutputWithContext(context.Context) SparkObjectDatasetResponseOutput
}

// Spark Server dataset.
type SparkObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SparkObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SparkObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkObjectDatasetResponse)(nil)).Elem()
}

func (i SparkObjectDatasetResponseArgs) ToSparkObjectDatasetResponseOutput() SparkObjectDatasetResponseOutput {
	return i.ToSparkObjectDatasetResponseOutputWithContext(context.Background())
}

func (i SparkObjectDatasetResponseArgs) ToSparkObjectDatasetResponseOutputWithContext(ctx context.Context) SparkObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkObjectDatasetResponseOutput)
}

// Spark Server dataset.
type SparkObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (SparkObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkObjectDatasetResponse)(nil)).Elem()
}

func (o SparkObjectDatasetResponseOutput) ToSparkObjectDatasetResponseOutput() SparkObjectDatasetResponseOutput {
	return o
}

func (o SparkObjectDatasetResponseOutput) ToSparkObjectDatasetResponseOutputWithContext(ctx context.Context) SparkObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SparkObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SparkObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o SparkObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o SparkObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v SparkObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o SparkObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SparkObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o SparkObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'SparkObject'.
func (o SparkObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SparkObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Spark Server source.
type SparkSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SparkSource'.
	Type string `pulumi:"type"`
}

// SparkSourceInput is an input type that accepts SparkSourceArgs and SparkSourceOutput values.
// You can construct a concrete instance of `SparkSourceInput` via:
//
//          SparkSourceArgs{...}
type SparkSourceInput interface {
	pulumi.Input

	ToSparkSourceOutput() SparkSourceOutput
	ToSparkSourceOutputWithContext(context.Context) SparkSourceOutput
}

// A copy activity Spark Server source.
type SparkSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SparkSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SparkSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkSource)(nil)).Elem()
}

func (i SparkSourceArgs) ToSparkSourceOutput() SparkSourceOutput {
	return i.ToSparkSourceOutputWithContext(context.Background())
}

func (i SparkSourceArgs) ToSparkSourceOutputWithContext(ctx context.Context) SparkSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkSourceOutput)
}

// A copy activity Spark Server source.
type SparkSourceOutput struct{ *pulumi.OutputState }

func (SparkSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkSource)(nil)).Elem()
}

func (o SparkSourceOutput) ToSparkSourceOutput() SparkSourceOutput {
	return o
}

func (o SparkSourceOutput) ToSparkSourceOutputWithContext(ctx context.Context) SparkSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o SparkSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o SparkSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SparkSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'SparkSource'.
func (o SparkSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SparkSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Spark Server source.
type SparkSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SparkSource'.
	Type string `pulumi:"type"`
}

// SparkSourceResponseInput is an input type that accepts SparkSourceResponseArgs and SparkSourceResponseOutput values.
// You can construct a concrete instance of `SparkSourceResponseInput` via:
//
//          SparkSourceResponseArgs{...}
type SparkSourceResponseInput interface {
	pulumi.Input

	ToSparkSourceResponseOutput() SparkSourceResponseOutput
	ToSparkSourceResponseOutputWithContext(context.Context) SparkSourceResponseOutput
}

// A copy activity Spark Server source.
type SparkSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SparkSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SparkSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkSourceResponse)(nil)).Elem()
}

func (i SparkSourceResponseArgs) ToSparkSourceResponseOutput() SparkSourceResponseOutput {
	return i.ToSparkSourceResponseOutputWithContext(context.Background())
}

func (i SparkSourceResponseArgs) ToSparkSourceResponseOutputWithContext(ctx context.Context) SparkSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkSourceResponseOutput)
}

// A copy activity Spark Server source.
type SparkSourceResponseOutput struct{ *pulumi.OutputState }

func (SparkSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkSourceResponse)(nil)).Elem()
}

func (o SparkSourceResponseOutput) ToSparkSourceResponseOutput() SparkSourceResponseOutput {
	return o
}

func (o SparkSourceResponseOutput) ToSparkSourceResponseOutputWithContext(ctx context.Context) SparkSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o SparkSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o SparkSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SparkSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SparkSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'SparkSource'.
func (o SparkSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SparkSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity SQL Data Warehouse sink.
type SqlDWSink struct {
	// Indicates to use PolyBase to copy data into SQL Data Warehouse when applicable. Type: boolean (or Expression with resultType boolean).
	AllowPolyBase interface{} `pulumi:"allowPolyBase"`
	// Specifies PolyBase-related settings when allowPolyBase is true.
	PolyBaseSettings *PolybaseSettings `pulumi:"polyBaseSettings"`
	// SQL pre-copy script. Type: string (or Expression with resultType string).
	PreCopyScript interface{} `pulumi:"preCopyScript"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'SqlDWSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// SqlDWSinkInput is an input type that accepts SqlDWSinkArgs and SqlDWSinkOutput values.
// You can construct a concrete instance of `SqlDWSinkInput` via:
//
//          SqlDWSinkArgs{...}
type SqlDWSinkInput interface {
	pulumi.Input

	ToSqlDWSinkOutput() SqlDWSinkOutput
	ToSqlDWSinkOutputWithContext(context.Context) SqlDWSinkOutput
}

// A copy activity SQL Data Warehouse sink.
type SqlDWSinkArgs struct {
	// Indicates to use PolyBase to copy data into SQL Data Warehouse when applicable. Type: boolean (or Expression with resultType boolean).
	AllowPolyBase pulumi.Input `pulumi:"allowPolyBase"`
	// Specifies PolyBase-related settings when allowPolyBase is true.
	PolyBaseSettings PolybaseSettingsPtrInput `pulumi:"polyBaseSettings"`
	// SQL pre-copy script. Type: string (or Expression with resultType string).
	PreCopyScript pulumi.Input `pulumi:"preCopyScript"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'SqlDWSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (SqlDWSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDWSink)(nil)).Elem()
}

func (i SqlDWSinkArgs) ToSqlDWSinkOutput() SqlDWSinkOutput {
	return i.ToSqlDWSinkOutputWithContext(context.Background())
}

func (i SqlDWSinkArgs) ToSqlDWSinkOutputWithContext(ctx context.Context) SqlDWSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDWSinkOutput)
}

// A copy activity SQL Data Warehouse sink.
type SqlDWSinkOutput struct{ *pulumi.OutputState }

func (SqlDWSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDWSink)(nil)).Elem()
}

func (o SqlDWSinkOutput) ToSqlDWSinkOutput() SqlDWSinkOutput {
	return o
}

func (o SqlDWSinkOutput) ToSqlDWSinkOutputWithContext(ctx context.Context) SqlDWSinkOutput {
	return o
}

// Indicates to use PolyBase to copy data into SQL Data Warehouse when applicable. Type: boolean (or Expression with resultType boolean).
func (o SqlDWSinkOutput) AllowPolyBase() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSink) interface{} { return v.AllowPolyBase }).(pulumi.AnyOutput)
}

// Specifies PolyBase-related settings when allowPolyBase is true.
func (o SqlDWSinkOutput) PolyBaseSettings() PolybaseSettingsPtrOutput {
	return o.ApplyT(func(v SqlDWSink) *PolybaseSettings { return v.PolyBaseSettings }).(PolybaseSettingsPtrOutput)
}

// SQL pre-copy script. Type: string (or Expression with resultType string).
func (o SqlDWSinkOutput) PreCopyScript() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSink) interface{} { return v.PreCopyScript }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o SqlDWSinkOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSink) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SqlDWSinkOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSink) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'SqlDWSink'.
func (o SqlDWSinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDWSink) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o SqlDWSinkOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSink) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SqlDWSinkOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSink) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity SQL Data Warehouse sink.
type SqlDWSinkResponse struct {
	// Indicates to use PolyBase to copy data into SQL Data Warehouse when applicable. Type: boolean (or Expression with resultType boolean).
	AllowPolyBase interface{} `pulumi:"allowPolyBase"`
	// Specifies PolyBase-related settings when allowPolyBase is true.
	PolyBaseSettings *PolybaseSettingsResponse `pulumi:"polyBaseSettings"`
	// SQL pre-copy script. Type: string (or Expression with resultType string).
	PreCopyScript interface{} `pulumi:"preCopyScript"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'SqlDWSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// SqlDWSinkResponseInput is an input type that accepts SqlDWSinkResponseArgs and SqlDWSinkResponseOutput values.
// You can construct a concrete instance of `SqlDWSinkResponseInput` via:
//
//          SqlDWSinkResponseArgs{...}
type SqlDWSinkResponseInput interface {
	pulumi.Input

	ToSqlDWSinkResponseOutput() SqlDWSinkResponseOutput
	ToSqlDWSinkResponseOutputWithContext(context.Context) SqlDWSinkResponseOutput
}

// A copy activity SQL Data Warehouse sink.
type SqlDWSinkResponseArgs struct {
	// Indicates to use PolyBase to copy data into SQL Data Warehouse when applicable. Type: boolean (or Expression with resultType boolean).
	AllowPolyBase pulumi.Input `pulumi:"allowPolyBase"`
	// Specifies PolyBase-related settings when allowPolyBase is true.
	PolyBaseSettings PolybaseSettingsResponsePtrInput `pulumi:"polyBaseSettings"`
	// SQL pre-copy script. Type: string (or Expression with resultType string).
	PreCopyScript pulumi.Input `pulumi:"preCopyScript"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// Copy sink type.
	// Expected value is 'SqlDWSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (SqlDWSinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDWSinkResponse)(nil)).Elem()
}

func (i SqlDWSinkResponseArgs) ToSqlDWSinkResponseOutput() SqlDWSinkResponseOutput {
	return i.ToSqlDWSinkResponseOutputWithContext(context.Background())
}

func (i SqlDWSinkResponseArgs) ToSqlDWSinkResponseOutputWithContext(ctx context.Context) SqlDWSinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDWSinkResponseOutput)
}

// A copy activity SQL Data Warehouse sink.
type SqlDWSinkResponseOutput struct{ *pulumi.OutputState }

func (SqlDWSinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDWSinkResponse)(nil)).Elem()
}

func (o SqlDWSinkResponseOutput) ToSqlDWSinkResponseOutput() SqlDWSinkResponseOutput {
	return o
}

func (o SqlDWSinkResponseOutput) ToSqlDWSinkResponseOutputWithContext(ctx context.Context) SqlDWSinkResponseOutput {
	return o
}

// Indicates to use PolyBase to copy data into SQL Data Warehouse when applicable. Type: boolean (or Expression with resultType boolean).
func (o SqlDWSinkResponseOutput) AllowPolyBase() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSinkResponse) interface{} { return v.AllowPolyBase }).(pulumi.AnyOutput)
}

// Specifies PolyBase-related settings when allowPolyBase is true.
func (o SqlDWSinkResponseOutput) PolyBaseSettings() PolybaseSettingsResponsePtrOutput {
	return o.ApplyT(func(v SqlDWSinkResponse) *PolybaseSettingsResponse { return v.PolyBaseSettings }).(PolybaseSettingsResponsePtrOutput)
}

// SQL pre-copy script. Type: string (or Expression with resultType string).
func (o SqlDWSinkResponseOutput) PreCopyScript() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSinkResponse) interface{} { return v.PreCopyScript }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o SqlDWSinkResponseOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSinkResponse) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SqlDWSinkResponseOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSinkResponse) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// Copy sink type.
// Expected value is 'SqlDWSink'.
func (o SqlDWSinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDWSinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o SqlDWSinkResponseOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSinkResponse) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SqlDWSinkResponseOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSinkResponse) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity SQL Data Warehouse source.
type SqlDWSource struct {
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// SQL Data Warehouse reader query. Type: string (or Expression with resultType string).
	SqlReaderQuery interface{} `pulumi:"sqlReaderQuery"`
	// Name of the stored procedure for a SQL Data Warehouse source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
	SqlReaderStoredProcedureName interface{} `pulumi:"sqlReaderStoredProcedureName"`
	// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}". Type: object (or Expression with resultType object), itemType: StoredProcedureParameter.
	StoredProcedureParameters interface{} `pulumi:"storedProcedureParameters"`
	// Copy source type.
	// Expected value is 'SqlDWSource'.
	Type string `pulumi:"type"`
}

// SqlDWSourceInput is an input type that accepts SqlDWSourceArgs and SqlDWSourceOutput values.
// You can construct a concrete instance of `SqlDWSourceInput` via:
//
//          SqlDWSourceArgs{...}
type SqlDWSourceInput interface {
	pulumi.Input

	ToSqlDWSourceOutput() SqlDWSourceOutput
	ToSqlDWSourceOutputWithContext(context.Context) SqlDWSourceOutput
}

// A copy activity SQL Data Warehouse source.
type SqlDWSourceArgs struct {
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// SQL Data Warehouse reader query. Type: string (or Expression with resultType string).
	SqlReaderQuery pulumi.Input `pulumi:"sqlReaderQuery"`
	// Name of the stored procedure for a SQL Data Warehouse source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
	SqlReaderStoredProcedureName pulumi.Input `pulumi:"sqlReaderStoredProcedureName"`
	// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}". Type: object (or Expression with resultType object), itemType: StoredProcedureParameter.
	StoredProcedureParameters pulumi.Input `pulumi:"storedProcedureParameters"`
	// Copy source type.
	// Expected value is 'SqlDWSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SqlDWSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDWSource)(nil)).Elem()
}

func (i SqlDWSourceArgs) ToSqlDWSourceOutput() SqlDWSourceOutput {
	return i.ToSqlDWSourceOutputWithContext(context.Background())
}

func (i SqlDWSourceArgs) ToSqlDWSourceOutputWithContext(ctx context.Context) SqlDWSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDWSourceOutput)
}

// A copy activity SQL Data Warehouse source.
type SqlDWSourceOutput struct{ *pulumi.OutputState }

func (SqlDWSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDWSource)(nil)).Elem()
}

func (o SqlDWSourceOutput) ToSqlDWSourceOutput() SqlDWSourceOutput {
	return o
}

func (o SqlDWSourceOutput) ToSqlDWSourceOutputWithContext(ctx context.Context) SqlDWSourceOutput {
	return o
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o SqlDWSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SqlDWSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// SQL Data Warehouse reader query. Type: string (or Expression with resultType string).
func (o SqlDWSourceOutput) SqlReaderQuery() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSource) interface{} { return v.SqlReaderQuery }).(pulumi.AnyOutput)
}

// Name of the stored procedure for a SQL Data Warehouse source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
func (o SqlDWSourceOutput) SqlReaderStoredProcedureName() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSource) interface{} { return v.SqlReaderStoredProcedureName }).(pulumi.AnyOutput)
}

// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}". Type: object (or Expression with resultType object), itemType: StoredProcedureParameter.
func (o SqlDWSourceOutput) StoredProcedureParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSource) interface{} { return v.StoredProcedureParameters }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'SqlDWSource'.
func (o SqlDWSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDWSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity SQL Data Warehouse source.
type SqlDWSourceResponse struct {
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// SQL Data Warehouse reader query. Type: string (or Expression with resultType string).
	SqlReaderQuery interface{} `pulumi:"sqlReaderQuery"`
	// Name of the stored procedure for a SQL Data Warehouse source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
	SqlReaderStoredProcedureName interface{} `pulumi:"sqlReaderStoredProcedureName"`
	// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}". Type: object (or Expression with resultType object), itemType: StoredProcedureParameter.
	StoredProcedureParameters interface{} `pulumi:"storedProcedureParameters"`
	// Copy source type.
	// Expected value is 'SqlDWSource'.
	Type string `pulumi:"type"`
}

// SqlDWSourceResponseInput is an input type that accepts SqlDWSourceResponseArgs and SqlDWSourceResponseOutput values.
// You can construct a concrete instance of `SqlDWSourceResponseInput` via:
//
//          SqlDWSourceResponseArgs{...}
type SqlDWSourceResponseInput interface {
	pulumi.Input

	ToSqlDWSourceResponseOutput() SqlDWSourceResponseOutput
	ToSqlDWSourceResponseOutputWithContext(context.Context) SqlDWSourceResponseOutput
}

// A copy activity SQL Data Warehouse source.
type SqlDWSourceResponseArgs struct {
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// SQL Data Warehouse reader query. Type: string (or Expression with resultType string).
	SqlReaderQuery pulumi.Input `pulumi:"sqlReaderQuery"`
	// Name of the stored procedure for a SQL Data Warehouse source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
	SqlReaderStoredProcedureName pulumi.Input `pulumi:"sqlReaderStoredProcedureName"`
	// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}". Type: object (or Expression with resultType object), itemType: StoredProcedureParameter.
	StoredProcedureParameters pulumi.Input `pulumi:"storedProcedureParameters"`
	// Copy source type.
	// Expected value is 'SqlDWSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SqlDWSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDWSourceResponse)(nil)).Elem()
}

func (i SqlDWSourceResponseArgs) ToSqlDWSourceResponseOutput() SqlDWSourceResponseOutput {
	return i.ToSqlDWSourceResponseOutputWithContext(context.Background())
}

func (i SqlDWSourceResponseArgs) ToSqlDWSourceResponseOutputWithContext(ctx context.Context) SqlDWSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDWSourceResponseOutput)
}

// A copy activity SQL Data Warehouse source.
type SqlDWSourceResponseOutput struct{ *pulumi.OutputState }

func (SqlDWSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDWSourceResponse)(nil)).Elem()
}

func (o SqlDWSourceResponseOutput) ToSqlDWSourceResponseOutput() SqlDWSourceResponseOutput {
	return o
}

func (o SqlDWSourceResponseOutput) ToSqlDWSourceResponseOutputWithContext(ctx context.Context) SqlDWSourceResponseOutput {
	return o
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o SqlDWSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SqlDWSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// SQL Data Warehouse reader query. Type: string (or Expression with resultType string).
func (o SqlDWSourceResponseOutput) SqlReaderQuery() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSourceResponse) interface{} { return v.SqlReaderQuery }).(pulumi.AnyOutput)
}

// Name of the stored procedure for a SQL Data Warehouse source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
func (o SqlDWSourceResponseOutput) SqlReaderStoredProcedureName() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSourceResponse) interface{} { return v.SqlReaderStoredProcedureName }).(pulumi.AnyOutput)
}

// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}". Type: object (or Expression with resultType object), itemType: StoredProcedureParameter.
func (o SqlDWSourceResponseOutput) StoredProcedureParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDWSourceResponse) interface{} { return v.StoredProcedureParameters }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'SqlDWSource'.
func (o SqlDWSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDWSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// SQL Server linked service.
type SqlServerLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The on-premises Windows authentication password.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'SqlServer'.
	Type string `pulumi:"type"`
	// The on-premises Windows authentication user name. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// SqlServerLinkedServiceInput is an input type that accepts SqlServerLinkedServiceArgs and SqlServerLinkedServiceOutput values.
// You can construct a concrete instance of `SqlServerLinkedServiceInput` via:
//
//          SqlServerLinkedServiceArgs{...}
type SqlServerLinkedServiceInput interface {
	pulumi.Input

	ToSqlServerLinkedServiceOutput() SqlServerLinkedServiceOutput
	ToSqlServerLinkedServiceOutputWithContext(context.Context) SqlServerLinkedServiceOutput
}

// SQL Server linked service.
type SqlServerLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The on-premises Windows authentication password.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'SqlServer'.
	Type pulumi.StringInput `pulumi:"type"`
	// The on-premises Windows authentication user name. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (SqlServerLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerLinkedService)(nil)).Elem()
}

func (i SqlServerLinkedServiceArgs) ToSqlServerLinkedServiceOutput() SqlServerLinkedServiceOutput {
	return i.ToSqlServerLinkedServiceOutputWithContext(context.Background())
}

func (i SqlServerLinkedServiceArgs) ToSqlServerLinkedServiceOutputWithContext(ctx context.Context) SqlServerLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerLinkedServiceOutput)
}

// SQL Server linked service.
type SqlServerLinkedServiceOutput struct{ *pulumi.OutputState }

func (SqlServerLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerLinkedService)(nil)).Elem()
}

func (o SqlServerLinkedServiceOutput) ToSqlServerLinkedServiceOutput() SqlServerLinkedServiceOutput {
	return o
}

func (o SqlServerLinkedServiceOutput) ToSqlServerLinkedServiceOutputWithContext(ctx context.Context) SqlServerLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SqlServerLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SqlServerLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o SqlServerLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v SqlServerLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o SqlServerLinkedServiceOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlServerLinkedService) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o SqlServerLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SqlServerLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlServerLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SqlServerLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SqlServerLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The on-premises Windows authentication password.
func (o SqlServerLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlServerLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'SqlServer'.
func (o SqlServerLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// The on-premises Windows authentication user name. Type: string (or Expression with resultType string).
func (o SqlServerLinkedServiceOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlServerLinkedService) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// SQL Server linked service.
type SqlServerLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The on-premises Windows authentication password.
	Password interface{} `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'SqlServer'.
	Type string `pulumi:"type"`
	// The on-premises Windows authentication user name. Type: string (or Expression with resultType string).
	UserName interface{} `pulumi:"userName"`
}

// SqlServerLinkedServiceResponseInput is an input type that accepts SqlServerLinkedServiceResponseArgs and SqlServerLinkedServiceResponseOutput values.
// You can construct a concrete instance of `SqlServerLinkedServiceResponseInput` via:
//
//          SqlServerLinkedServiceResponseArgs{...}
type SqlServerLinkedServiceResponseInput interface {
	pulumi.Input

	ToSqlServerLinkedServiceResponseOutput() SqlServerLinkedServiceResponseOutput
	ToSqlServerLinkedServiceResponseOutputWithContext(context.Context) SqlServerLinkedServiceResponseOutput
}

// SQL Server linked service.
type SqlServerLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The on-premises Windows authentication password.
	Password pulumi.Input `pulumi:"password"`
	// Type of linked service.
	// Expected value is 'SqlServer'.
	Type pulumi.StringInput `pulumi:"type"`
	// The on-premises Windows authentication user name. Type: string (or Expression with resultType string).
	UserName pulumi.Input `pulumi:"userName"`
}

func (SqlServerLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerLinkedServiceResponse)(nil)).Elem()
}

func (i SqlServerLinkedServiceResponseArgs) ToSqlServerLinkedServiceResponseOutput() SqlServerLinkedServiceResponseOutput {
	return i.ToSqlServerLinkedServiceResponseOutputWithContext(context.Background())
}

func (i SqlServerLinkedServiceResponseArgs) ToSqlServerLinkedServiceResponseOutputWithContext(ctx context.Context) SqlServerLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerLinkedServiceResponseOutput)
}

// SQL Server linked service.
type SqlServerLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (SqlServerLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerLinkedServiceResponse)(nil)).Elem()
}

func (o SqlServerLinkedServiceResponseOutput) ToSqlServerLinkedServiceResponseOutput() SqlServerLinkedServiceResponseOutput {
	return o
}

func (o SqlServerLinkedServiceResponseOutput) ToSqlServerLinkedServiceResponseOutputWithContext(ctx context.Context) SqlServerLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SqlServerLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SqlServerLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o SqlServerLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v SqlServerLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o SqlServerLinkedServiceResponseOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlServerLinkedServiceResponse) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o SqlServerLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SqlServerLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlServerLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SqlServerLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SqlServerLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The on-premises Windows authentication password.
func (o SqlServerLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlServerLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'SqlServer'.
func (o SqlServerLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The on-premises Windows authentication user name. Type: string (or Expression with resultType string).
func (o SqlServerLinkedServiceResponseOutput) UserName() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlServerLinkedServiceResponse) interface{} { return v.UserName }).(pulumi.AnyOutput)
}

// SQL stored procedure activity type.
type SqlServerStoredProcedureActivity struct {
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicy `pulumi:"policy"`
	// Stored procedure name. Type: string (or Expression with resultType string).
	StoredProcedureName interface{} `pulumi:"storedProcedureName"`
	// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".
	StoredProcedureParameters map[string]StoredProcedureParameter `pulumi:"storedProcedureParameters"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// SqlServerStoredProcedureActivityInput is an input type that accepts SqlServerStoredProcedureActivityArgs and SqlServerStoredProcedureActivityOutput values.
// You can construct a concrete instance of `SqlServerStoredProcedureActivityInput` via:
//
//          SqlServerStoredProcedureActivityArgs{...}
type SqlServerStoredProcedureActivityInput interface {
	pulumi.Input

	ToSqlServerStoredProcedureActivityOutput() SqlServerStoredProcedureActivityOutput
	ToSqlServerStoredProcedureActivityOutputWithContext(context.Context) SqlServerStoredProcedureActivityOutput
}

// SQL stored procedure activity type.
type SqlServerStoredProcedureActivityArgs struct {
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyPtrInput `pulumi:"policy"`
	// Stored procedure name. Type: string (or Expression with resultType string).
	StoredProcedureName pulumi.Input `pulumi:"storedProcedureName"`
	// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".
	StoredProcedureParameters StoredProcedureParameterMapInput `pulumi:"storedProcedureParameters"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SqlServerStoredProcedureActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerStoredProcedureActivity)(nil)).Elem()
}

func (i SqlServerStoredProcedureActivityArgs) ToSqlServerStoredProcedureActivityOutput() SqlServerStoredProcedureActivityOutput {
	return i.ToSqlServerStoredProcedureActivityOutputWithContext(context.Background())
}

func (i SqlServerStoredProcedureActivityArgs) ToSqlServerStoredProcedureActivityOutputWithContext(ctx context.Context) SqlServerStoredProcedureActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerStoredProcedureActivityOutput)
}

// SQL stored procedure activity type.
type SqlServerStoredProcedureActivityOutput struct{ *pulumi.OutputState }

func (SqlServerStoredProcedureActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerStoredProcedureActivity)(nil)).Elem()
}

func (o SqlServerStoredProcedureActivityOutput) ToSqlServerStoredProcedureActivityOutput() SqlServerStoredProcedureActivityOutput {
	return o
}

func (o SqlServerStoredProcedureActivityOutput) ToSqlServerStoredProcedureActivityOutputWithContext(ctx context.Context) SqlServerStoredProcedureActivityOutput {
	return o
}

// Activity depends on condition.
func (o SqlServerStoredProcedureActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v SqlServerStoredProcedureActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o SqlServerStoredProcedureActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerStoredProcedureActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o SqlServerStoredProcedureActivityOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v SqlServerStoredProcedureActivity) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Activity name.
func (o SqlServerStoredProcedureActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerStoredProcedureActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o SqlServerStoredProcedureActivityOutput) Policy() ActivityPolicyPtrOutput {
	return o.ApplyT(func(v SqlServerStoredProcedureActivity) *ActivityPolicy { return v.Policy }).(ActivityPolicyPtrOutput)
}

// Stored procedure name. Type: string (or Expression with resultType string).
func (o SqlServerStoredProcedureActivityOutput) StoredProcedureName() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlServerStoredProcedureActivity) interface{} { return v.StoredProcedureName }).(pulumi.AnyOutput)
}

// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".
func (o SqlServerStoredProcedureActivityOutput) StoredProcedureParameters() StoredProcedureParameterMapOutput {
	return o.ApplyT(func(v SqlServerStoredProcedureActivity) map[string]StoredProcedureParameter {
		return v.StoredProcedureParameters
	}).(StoredProcedureParameterMapOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o SqlServerStoredProcedureActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerStoredProcedureActivity) string { return v.Type }).(pulumi.StringOutput)
}

// SQL stored procedure activity type.
type SqlServerStoredProcedureActivityResponse struct {
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicyResponse `pulumi:"policy"`
	// Stored procedure name. Type: string (or Expression with resultType string).
	StoredProcedureName interface{} `pulumi:"storedProcedureName"`
	// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".
	StoredProcedureParameters map[string]StoredProcedureParameterResponse `pulumi:"storedProcedureParameters"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
}

// SqlServerStoredProcedureActivityResponseInput is an input type that accepts SqlServerStoredProcedureActivityResponseArgs and SqlServerStoredProcedureActivityResponseOutput values.
// You can construct a concrete instance of `SqlServerStoredProcedureActivityResponseInput` via:
//
//          SqlServerStoredProcedureActivityResponseArgs{...}
type SqlServerStoredProcedureActivityResponseInput interface {
	pulumi.Input

	ToSqlServerStoredProcedureActivityResponseOutput() SqlServerStoredProcedureActivityResponseOutput
	ToSqlServerStoredProcedureActivityResponseOutputWithContext(context.Context) SqlServerStoredProcedureActivityResponseOutput
}

// SQL stored procedure activity type.
type SqlServerStoredProcedureActivityResponseArgs struct {
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyResponsePtrInput `pulumi:"policy"`
	// Stored procedure name. Type: string (or Expression with resultType string).
	StoredProcedureName pulumi.Input `pulumi:"storedProcedureName"`
	// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".
	StoredProcedureParameters StoredProcedureParameterResponseMapInput `pulumi:"storedProcedureParameters"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SqlServerStoredProcedureActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerStoredProcedureActivityResponse)(nil)).Elem()
}

func (i SqlServerStoredProcedureActivityResponseArgs) ToSqlServerStoredProcedureActivityResponseOutput() SqlServerStoredProcedureActivityResponseOutput {
	return i.ToSqlServerStoredProcedureActivityResponseOutputWithContext(context.Background())
}

func (i SqlServerStoredProcedureActivityResponseArgs) ToSqlServerStoredProcedureActivityResponseOutputWithContext(ctx context.Context) SqlServerStoredProcedureActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerStoredProcedureActivityResponseOutput)
}

// SQL stored procedure activity type.
type SqlServerStoredProcedureActivityResponseOutput struct{ *pulumi.OutputState }

func (SqlServerStoredProcedureActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerStoredProcedureActivityResponse)(nil)).Elem()
}

func (o SqlServerStoredProcedureActivityResponseOutput) ToSqlServerStoredProcedureActivityResponseOutput() SqlServerStoredProcedureActivityResponseOutput {
	return o
}

func (o SqlServerStoredProcedureActivityResponseOutput) ToSqlServerStoredProcedureActivityResponseOutputWithContext(ctx context.Context) SqlServerStoredProcedureActivityResponseOutput {
	return o
}

// Activity depends on condition.
func (o SqlServerStoredProcedureActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v SqlServerStoredProcedureActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o SqlServerStoredProcedureActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerStoredProcedureActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o SqlServerStoredProcedureActivityResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v SqlServerStoredProcedureActivityResponse) LinkedServiceReferenceResponse {
		return v.LinkedServiceName
	}).(LinkedServiceReferenceResponseOutput)
}

// Activity name.
func (o SqlServerStoredProcedureActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerStoredProcedureActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o SqlServerStoredProcedureActivityResponseOutput) Policy() ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v SqlServerStoredProcedureActivityResponse) *ActivityPolicyResponse { return v.Policy }).(ActivityPolicyResponsePtrOutput)
}

// Stored procedure name. Type: string (or Expression with resultType string).
func (o SqlServerStoredProcedureActivityResponseOutput) StoredProcedureName() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlServerStoredProcedureActivityResponse) interface{} { return v.StoredProcedureName }).(pulumi.AnyOutput)
}

// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".
func (o SqlServerStoredProcedureActivityResponseOutput) StoredProcedureParameters() StoredProcedureParameterResponseMapOutput {
	return o.ApplyT(func(v SqlServerStoredProcedureActivityResponse) map[string]StoredProcedureParameterResponse {
		return v.StoredProcedureParameters
	}).(StoredProcedureParameterResponseMapOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o SqlServerStoredProcedureActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerStoredProcedureActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The on-premises SQL Server dataset.
type SqlServerTableDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The table name of the SQL Server dataset. Type: string (or Expression with resultType string).
	TableName interface{} `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'SqlServerTable'.
	Type string `pulumi:"type"`
}

// SqlServerTableDatasetInput is an input type that accepts SqlServerTableDatasetArgs and SqlServerTableDatasetOutput values.
// You can construct a concrete instance of `SqlServerTableDatasetInput` via:
//
//          SqlServerTableDatasetArgs{...}
type SqlServerTableDatasetInput interface {
	pulumi.Input

	ToSqlServerTableDatasetOutput() SqlServerTableDatasetOutput
	ToSqlServerTableDatasetOutputWithContext(context.Context) SqlServerTableDatasetOutput
}

// The on-premises SQL Server dataset.
type SqlServerTableDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The table name of the SQL Server dataset. Type: string (or Expression with resultType string).
	TableName pulumi.Input `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'SqlServerTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SqlServerTableDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerTableDataset)(nil)).Elem()
}

func (i SqlServerTableDatasetArgs) ToSqlServerTableDatasetOutput() SqlServerTableDatasetOutput {
	return i.ToSqlServerTableDatasetOutputWithContext(context.Background())
}

func (i SqlServerTableDatasetArgs) ToSqlServerTableDatasetOutputWithContext(ctx context.Context) SqlServerTableDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerTableDatasetOutput)
}

// The on-premises SQL Server dataset.
type SqlServerTableDatasetOutput struct{ *pulumi.OutputState }

func (SqlServerTableDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerTableDataset)(nil)).Elem()
}

func (o SqlServerTableDatasetOutput) ToSqlServerTableDatasetOutput() SqlServerTableDatasetOutput {
	return o
}

func (o SqlServerTableDatasetOutput) ToSqlServerTableDatasetOutputWithContext(ctx context.Context) SqlServerTableDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SqlServerTableDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SqlServerTableDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o SqlServerTableDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerTableDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o SqlServerTableDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v SqlServerTableDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o SqlServerTableDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SqlServerTableDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o SqlServerTableDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlServerTableDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The table name of the SQL Server dataset. Type: string (or Expression with resultType string).
func (o SqlServerTableDatasetOutput) TableName() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlServerTableDataset) interface{} { return v.TableName }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'SqlServerTable'.
func (o SqlServerTableDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerTableDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The on-premises SQL Server dataset.
type SqlServerTableDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// The table name of the SQL Server dataset. Type: string (or Expression with resultType string).
	TableName interface{} `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'SqlServerTable'.
	Type string `pulumi:"type"`
}

// SqlServerTableDatasetResponseInput is an input type that accepts SqlServerTableDatasetResponseArgs and SqlServerTableDatasetResponseOutput values.
// You can construct a concrete instance of `SqlServerTableDatasetResponseInput` via:
//
//          SqlServerTableDatasetResponseArgs{...}
type SqlServerTableDatasetResponseInput interface {
	pulumi.Input

	ToSqlServerTableDatasetResponseOutput() SqlServerTableDatasetResponseOutput
	ToSqlServerTableDatasetResponseOutputWithContext(context.Context) SqlServerTableDatasetResponseOutput
}

// The on-premises SQL Server dataset.
type SqlServerTableDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// The table name of the SQL Server dataset. Type: string (or Expression with resultType string).
	TableName pulumi.Input `pulumi:"tableName"`
	// Type of dataset.
	// Expected value is 'SqlServerTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SqlServerTableDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerTableDatasetResponse)(nil)).Elem()
}

func (i SqlServerTableDatasetResponseArgs) ToSqlServerTableDatasetResponseOutput() SqlServerTableDatasetResponseOutput {
	return i.ToSqlServerTableDatasetResponseOutputWithContext(context.Background())
}

func (i SqlServerTableDatasetResponseArgs) ToSqlServerTableDatasetResponseOutputWithContext(ctx context.Context) SqlServerTableDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerTableDatasetResponseOutput)
}

// The on-premises SQL Server dataset.
type SqlServerTableDatasetResponseOutput struct{ *pulumi.OutputState }

func (SqlServerTableDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerTableDatasetResponse)(nil)).Elem()
}

func (o SqlServerTableDatasetResponseOutput) ToSqlServerTableDatasetResponseOutput() SqlServerTableDatasetResponseOutput {
	return o
}

func (o SqlServerTableDatasetResponseOutput) ToSqlServerTableDatasetResponseOutputWithContext(ctx context.Context) SqlServerTableDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SqlServerTableDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SqlServerTableDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o SqlServerTableDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlServerTableDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o SqlServerTableDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v SqlServerTableDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o SqlServerTableDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SqlServerTableDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o SqlServerTableDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlServerTableDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// The table name of the SQL Server dataset. Type: string (or Expression with resultType string).
func (o SqlServerTableDatasetResponseOutput) TableName() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlServerTableDatasetResponse) interface{} { return v.TableName }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'SqlServerTable'.
func (o SqlServerTableDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerTableDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity SQL sink.
type SqlSink struct {
	// SQL pre-copy script. Type: string (or Expression with resultType string).
	PreCopyScript interface{} `pulumi:"preCopyScript"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// SQL writer stored procedure name. Type: string (or Expression with resultType string).
	SqlWriterStoredProcedureName interface{} `pulumi:"sqlWriterStoredProcedureName"`
	// SQL writer table type. Type: string (or Expression with resultType string).
	SqlWriterTableType interface{} `pulumi:"sqlWriterTableType"`
	// SQL stored procedure parameters.
	StoredProcedureParameters map[string]StoredProcedureParameter `pulumi:"storedProcedureParameters"`
	// Copy sink type.
	// Expected value is 'SqlSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// SqlSinkInput is an input type that accepts SqlSinkArgs and SqlSinkOutput values.
// You can construct a concrete instance of `SqlSinkInput` via:
//
//          SqlSinkArgs{...}
type SqlSinkInput interface {
	pulumi.Input

	ToSqlSinkOutput() SqlSinkOutput
	ToSqlSinkOutputWithContext(context.Context) SqlSinkOutput
}

// A copy activity SQL sink.
type SqlSinkArgs struct {
	// SQL pre-copy script. Type: string (or Expression with resultType string).
	PreCopyScript pulumi.Input `pulumi:"preCopyScript"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// SQL writer stored procedure name. Type: string (or Expression with resultType string).
	SqlWriterStoredProcedureName pulumi.Input `pulumi:"sqlWriterStoredProcedureName"`
	// SQL writer table type. Type: string (or Expression with resultType string).
	SqlWriterTableType pulumi.Input `pulumi:"sqlWriterTableType"`
	// SQL stored procedure parameters.
	StoredProcedureParameters StoredProcedureParameterMapInput `pulumi:"storedProcedureParameters"`
	// Copy sink type.
	// Expected value is 'SqlSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (SqlSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlSink)(nil)).Elem()
}

func (i SqlSinkArgs) ToSqlSinkOutput() SqlSinkOutput {
	return i.ToSqlSinkOutputWithContext(context.Background())
}

func (i SqlSinkArgs) ToSqlSinkOutputWithContext(ctx context.Context) SqlSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlSinkOutput)
}

// A copy activity SQL sink.
type SqlSinkOutput struct{ *pulumi.OutputState }

func (SqlSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlSink)(nil)).Elem()
}

func (o SqlSinkOutput) ToSqlSinkOutput() SqlSinkOutput {
	return o
}

func (o SqlSinkOutput) ToSqlSinkOutputWithContext(ctx context.Context) SqlSinkOutput {
	return o
}

// SQL pre-copy script. Type: string (or Expression with resultType string).
func (o SqlSinkOutput) PreCopyScript() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSink) interface{} { return v.PreCopyScript }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o SqlSinkOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSink) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SqlSinkOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSink) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// SQL writer stored procedure name. Type: string (or Expression with resultType string).
func (o SqlSinkOutput) SqlWriterStoredProcedureName() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSink) interface{} { return v.SqlWriterStoredProcedureName }).(pulumi.AnyOutput)
}

// SQL writer table type. Type: string (or Expression with resultType string).
func (o SqlSinkOutput) SqlWriterTableType() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSink) interface{} { return v.SqlWriterTableType }).(pulumi.AnyOutput)
}

// SQL stored procedure parameters.
func (o SqlSinkOutput) StoredProcedureParameters() StoredProcedureParameterMapOutput {
	return o.ApplyT(func(v SqlSink) map[string]StoredProcedureParameter { return v.StoredProcedureParameters }).(StoredProcedureParameterMapOutput)
}

// Copy sink type.
// Expected value is 'SqlSink'.
func (o SqlSinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlSink) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o SqlSinkOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSink) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SqlSinkOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSink) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity SQL sink.
type SqlSinkResponse struct {
	// SQL pre-copy script. Type: string (or Expression with resultType string).
	PreCopyScript interface{} `pulumi:"preCopyScript"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount interface{} `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait interface{} `pulumi:"sinkRetryWait"`
	// SQL writer stored procedure name. Type: string (or Expression with resultType string).
	SqlWriterStoredProcedureName interface{} `pulumi:"sqlWriterStoredProcedureName"`
	// SQL writer table type. Type: string (or Expression with resultType string).
	SqlWriterTableType interface{} `pulumi:"sqlWriterTableType"`
	// SQL stored procedure parameters.
	StoredProcedureParameters map[string]StoredProcedureParameterResponse `pulumi:"storedProcedureParameters"`
	// Copy sink type.
	// Expected value is 'SqlSink'.
	Type string `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize interface{} `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout interface{} `pulumi:"writeBatchTimeout"`
}

// SqlSinkResponseInput is an input type that accepts SqlSinkResponseArgs and SqlSinkResponseOutput values.
// You can construct a concrete instance of `SqlSinkResponseInput` via:
//
//          SqlSinkResponseArgs{...}
type SqlSinkResponseInput interface {
	pulumi.Input

	ToSqlSinkResponseOutput() SqlSinkResponseOutput
	ToSqlSinkResponseOutputWithContext(context.Context) SqlSinkResponseOutput
}

// A copy activity SQL sink.
type SqlSinkResponseArgs struct {
	// SQL pre-copy script. Type: string (or Expression with resultType string).
	PreCopyScript pulumi.Input `pulumi:"preCopyScript"`
	// Sink retry count. Type: integer (or Expression with resultType integer).
	SinkRetryCount pulumi.Input `pulumi:"sinkRetryCount"`
	// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SinkRetryWait pulumi.Input `pulumi:"sinkRetryWait"`
	// SQL writer stored procedure name. Type: string (or Expression with resultType string).
	SqlWriterStoredProcedureName pulumi.Input `pulumi:"sqlWriterStoredProcedureName"`
	// SQL writer table type. Type: string (or Expression with resultType string).
	SqlWriterTableType pulumi.Input `pulumi:"sqlWriterTableType"`
	// SQL stored procedure parameters.
	StoredProcedureParameters StoredProcedureParameterResponseMapInput `pulumi:"storedProcedureParameters"`
	// Copy sink type.
	// Expected value is 'SqlSink'.
	Type pulumi.StringInput `pulumi:"type"`
	// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
	WriteBatchSize pulumi.Input `pulumi:"writeBatchSize"`
	// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	WriteBatchTimeout pulumi.Input `pulumi:"writeBatchTimeout"`
}

func (SqlSinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlSinkResponse)(nil)).Elem()
}

func (i SqlSinkResponseArgs) ToSqlSinkResponseOutput() SqlSinkResponseOutput {
	return i.ToSqlSinkResponseOutputWithContext(context.Background())
}

func (i SqlSinkResponseArgs) ToSqlSinkResponseOutputWithContext(ctx context.Context) SqlSinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlSinkResponseOutput)
}

// A copy activity SQL sink.
type SqlSinkResponseOutput struct{ *pulumi.OutputState }

func (SqlSinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlSinkResponse)(nil)).Elem()
}

func (o SqlSinkResponseOutput) ToSqlSinkResponseOutput() SqlSinkResponseOutput {
	return o
}

func (o SqlSinkResponseOutput) ToSqlSinkResponseOutputWithContext(ctx context.Context) SqlSinkResponseOutput {
	return o
}

// SQL pre-copy script. Type: string (or Expression with resultType string).
func (o SqlSinkResponseOutput) PreCopyScript() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSinkResponse) interface{} { return v.PreCopyScript }).(pulumi.AnyOutput)
}

// Sink retry count. Type: integer (or Expression with resultType integer).
func (o SqlSinkResponseOutput) SinkRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSinkResponse) interface{} { return v.SinkRetryCount }).(pulumi.AnyOutput)
}

// Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SqlSinkResponseOutput) SinkRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSinkResponse) interface{} { return v.SinkRetryWait }).(pulumi.AnyOutput)
}

// SQL writer stored procedure name. Type: string (or Expression with resultType string).
func (o SqlSinkResponseOutput) SqlWriterStoredProcedureName() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSinkResponse) interface{} { return v.SqlWriterStoredProcedureName }).(pulumi.AnyOutput)
}

// SQL writer table type. Type: string (or Expression with resultType string).
func (o SqlSinkResponseOutput) SqlWriterTableType() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSinkResponse) interface{} { return v.SqlWriterTableType }).(pulumi.AnyOutput)
}

// SQL stored procedure parameters.
func (o SqlSinkResponseOutput) StoredProcedureParameters() StoredProcedureParameterResponseMapOutput {
	return o.ApplyT(func(v SqlSinkResponse) map[string]StoredProcedureParameterResponse {
		return v.StoredProcedureParameters
	}).(StoredProcedureParameterResponseMapOutput)
}

// Copy sink type.
// Expected value is 'SqlSink'.
func (o SqlSinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlSinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.
func (o SqlSinkResponseOutput) WriteBatchSize() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSinkResponse) interface{} { return v.WriteBatchSize }).(pulumi.AnyOutput)
}

// Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SqlSinkResponseOutput) WriteBatchTimeout() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSinkResponse) interface{} { return v.WriteBatchTimeout }).(pulumi.AnyOutput)
}

// A copy activity SQL source.
type SqlSource struct {
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// SQL reader query. Type: string (or Expression with resultType string).
	SqlReaderQuery interface{} `pulumi:"sqlReaderQuery"`
	// Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
	SqlReaderStoredProcedureName interface{} `pulumi:"sqlReaderStoredProcedureName"`
	// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".
	StoredProcedureParameters map[string]StoredProcedureParameter `pulumi:"storedProcedureParameters"`
	// Copy source type.
	// Expected value is 'SqlSource'.
	Type string `pulumi:"type"`
}

// SqlSourceInput is an input type that accepts SqlSourceArgs and SqlSourceOutput values.
// You can construct a concrete instance of `SqlSourceInput` via:
//
//          SqlSourceArgs{...}
type SqlSourceInput interface {
	pulumi.Input

	ToSqlSourceOutput() SqlSourceOutput
	ToSqlSourceOutputWithContext(context.Context) SqlSourceOutput
}

// A copy activity SQL source.
type SqlSourceArgs struct {
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// SQL reader query. Type: string (or Expression with resultType string).
	SqlReaderQuery pulumi.Input `pulumi:"sqlReaderQuery"`
	// Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
	SqlReaderStoredProcedureName pulumi.Input `pulumi:"sqlReaderStoredProcedureName"`
	// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".
	StoredProcedureParameters StoredProcedureParameterMapInput `pulumi:"storedProcedureParameters"`
	// Copy source type.
	// Expected value is 'SqlSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SqlSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlSource)(nil)).Elem()
}

func (i SqlSourceArgs) ToSqlSourceOutput() SqlSourceOutput {
	return i.ToSqlSourceOutputWithContext(context.Background())
}

func (i SqlSourceArgs) ToSqlSourceOutputWithContext(ctx context.Context) SqlSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlSourceOutput)
}

// A copy activity SQL source.
type SqlSourceOutput struct{ *pulumi.OutputState }

func (SqlSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlSource)(nil)).Elem()
}

func (o SqlSourceOutput) ToSqlSourceOutput() SqlSourceOutput {
	return o
}

func (o SqlSourceOutput) ToSqlSourceOutputWithContext(ctx context.Context) SqlSourceOutput {
	return o
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o SqlSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SqlSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// SQL reader query. Type: string (or Expression with resultType string).
func (o SqlSourceOutput) SqlReaderQuery() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSource) interface{} { return v.SqlReaderQuery }).(pulumi.AnyOutput)
}

// Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
func (o SqlSourceOutput) SqlReaderStoredProcedureName() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSource) interface{} { return v.SqlReaderStoredProcedureName }).(pulumi.AnyOutput)
}

// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".
func (o SqlSourceOutput) StoredProcedureParameters() StoredProcedureParameterMapOutput {
	return o.ApplyT(func(v SqlSource) map[string]StoredProcedureParameter { return v.StoredProcedureParameters }).(StoredProcedureParameterMapOutput)
}

// Copy source type.
// Expected value is 'SqlSource'.
func (o SqlSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity SQL source.
type SqlSourceResponse struct {
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// SQL reader query. Type: string (or Expression with resultType string).
	SqlReaderQuery interface{} `pulumi:"sqlReaderQuery"`
	// Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
	SqlReaderStoredProcedureName interface{} `pulumi:"sqlReaderStoredProcedureName"`
	// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".
	StoredProcedureParameters map[string]StoredProcedureParameterResponse `pulumi:"storedProcedureParameters"`
	// Copy source type.
	// Expected value is 'SqlSource'.
	Type string `pulumi:"type"`
}

// SqlSourceResponseInput is an input type that accepts SqlSourceResponseArgs and SqlSourceResponseOutput values.
// You can construct a concrete instance of `SqlSourceResponseInput` via:
//
//          SqlSourceResponseArgs{...}
type SqlSourceResponseInput interface {
	pulumi.Input

	ToSqlSourceResponseOutput() SqlSourceResponseOutput
	ToSqlSourceResponseOutputWithContext(context.Context) SqlSourceResponseOutput
}

// A copy activity SQL source.
type SqlSourceResponseArgs struct {
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// SQL reader query. Type: string (or Expression with resultType string).
	SqlReaderQuery pulumi.Input `pulumi:"sqlReaderQuery"`
	// Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
	SqlReaderStoredProcedureName pulumi.Input `pulumi:"sqlReaderStoredProcedureName"`
	// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".
	StoredProcedureParameters StoredProcedureParameterResponseMapInput `pulumi:"storedProcedureParameters"`
	// Copy source type.
	// Expected value is 'SqlSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SqlSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlSourceResponse)(nil)).Elem()
}

func (i SqlSourceResponseArgs) ToSqlSourceResponseOutput() SqlSourceResponseOutput {
	return i.ToSqlSourceResponseOutputWithContext(context.Background())
}

func (i SqlSourceResponseArgs) ToSqlSourceResponseOutputWithContext(ctx context.Context) SqlSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlSourceResponseOutput)
}

// A copy activity SQL source.
type SqlSourceResponseOutput struct{ *pulumi.OutputState }

func (SqlSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlSourceResponse)(nil)).Elem()
}

func (o SqlSourceResponseOutput) ToSqlSourceResponseOutput() SqlSourceResponseOutput {
	return o
}

func (o SqlSourceResponseOutput) ToSqlSourceResponseOutputWithContext(ctx context.Context) SqlSourceResponseOutput {
	return o
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o SqlSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SqlSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// SQL reader query. Type: string (or Expression with resultType string).
func (o SqlSourceResponseOutput) SqlReaderQuery() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSourceResponse) interface{} { return v.SqlReaderQuery }).(pulumi.AnyOutput)
}

// Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
func (o SqlSourceResponseOutput) SqlReaderStoredProcedureName() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlSourceResponse) interface{} { return v.SqlReaderStoredProcedureName }).(pulumi.AnyOutput)
}

// Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".
func (o SqlSourceResponseOutput) StoredProcedureParameters() StoredProcedureParameterResponseMapOutput {
	return o.ApplyT(func(v SqlSourceResponse) map[string]StoredProcedureParameterResponse {
		return v.StoredProcedureParameters
	}).(StoredProcedureParameterResponseMapOutput)
}

// Copy source type.
// Expected value is 'SqlSource'.
func (o SqlSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Square Service linked service.
type SquareLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The client ID associated with your Square application.
	ClientId interface{} `pulumi:"clientId"`
	// The client secret associated with your Square application.
	ClientSecret interface{} `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The URL of the Square instance. (i.e. mystore.mysquare.com)
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The redirect URL assigned in the Square application dashboard. (i.e. http://localhost:2500)
	RedirectUri interface{} `pulumi:"redirectUri"`
	// Type of linked service.
	// Expected value is 'Square'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// SquareLinkedServiceInput is an input type that accepts SquareLinkedServiceArgs and SquareLinkedServiceOutput values.
// You can construct a concrete instance of `SquareLinkedServiceInput` via:
//
//          SquareLinkedServiceArgs{...}
type SquareLinkedServiceInput interface {
	pulumi.Input

	ToSquareLinkedServiceOutput() SquareLinkedServiceOutput
	ToSquareLinkedServiceOutputWithContext(context.Context) SquareLinkedServiceOutput
}

// Square Service linked service.
type SquareLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The client ID associated with your Square application.
	ClientId pulumi.Input `pulumi:"clientId"`
	// The client secret associated with your Square application.
	ClientSecret pulumi.Input `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The URL of the Square instance. (i.e. mystore.mysquare.com)
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The redirect URL assigned in the Square application dashboard. (i.e. http://localhost:2500)
	RedirectUri pulumi.Input `pulumi:"redirectUri"`
	// Type of linked service.
	// Expected value is 'Square'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (SquareLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SquareLinkedService)(nil)).Elem()
}

func (i SquareLinkedServiceArgs) ToSquareLinkedServiceOutput() SquareLinkedServiceOutput {
	return i.ToSquareLinkedServiceOutputWithContext(context.Background())
}

func (i SquareLinkedServiceArgs) ToSquareLinkedServiceOutputWithContext(ctx context.Context) SquareLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SquareLinkedServiceOutput)
}

// Square Service linked service.
type SquareLinkedServiceOutput struct{ *pulumi.OutputState }

func (SquareLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SquareLinkedService)(nil)).Elem()
}

func (o SquareLinkedServiceOutput) ToSquareLinkedServiceOutput() SquareLinkedServiceOutput {
	return o
}

func (o SquareLinkedServiceOutput) ToSquareLinkedServiceOutputWithContext(ctx context.Context) SquareLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SquareLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SquareLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The client ID associated with your Square application.
func (o SquareLinkedServiceOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareLinkedService) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The client secret associated with your Square application.
func (o SquareLinkedServiceOutput) ClientSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareLinkedService) interface{} { return v.ClientSecret }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o SquareLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v SquareLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o SquareLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SquareLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SquareLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The URL of the Square instance. (i.e. mystore.mysquare.com)
func (o SquareLinkedServiceOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareLinkedService) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SquareLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SquareLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The redirect URL assigned in the Square application dashboard. (i.e. http://localhost:2500)
func (o SquareLinkedServiceOutput) RedirectUri() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareLinkedService) interface{} { return v.RedirectUri }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Square'.
func (o SquareLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SquareLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o SquareLinkedServiceOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareLinkedService) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o SquareLinkedServiceOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareLinkedService) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o SquareLinkedServiceOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareLinkedService) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Square Service linked service.
type SquareLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The client ID associated with your Square application.
	ClientId interface{} `pulumi:"clientId"`
	// The client secret associated with your Square application.
	ClientSecret interface{} `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The URL of the Square instance. (i.e. mystore.mysquare.com)
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The redirect URL assigned in the Square application dashboard. (i.e. http://localhost:2500)
	RedirectUri interface{} `pulumi:"redirectUri"`
	// Type of linked service.
	// Expected value is 'Square'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// SquareLinkedServiceResponseInput is an input type that accepts SquareLinkedServiceResponseArgs and SquareLinkedServiceResponseOutput values.
// You can construct a concrete instance of `SquareLinkedServiceResponseInput` via:
//
//          SquareLinkedServiceResponseArgs{...}
type SquareLinkedServiceResponseInput interface {
	pulumi.Input

	ToSquareLinkedServiceResponseOutput() SquareLinkedServiceResponseOutput
	ToSquareLinkedServiceResponseOutputWithContext(context.Context) SquareLinkedServiceResponseOutput
}

// Square Service linked service.
type SquareLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The client ID associated with your Square application.
	ClientId pulumi.Input `pulumi:"clientId"`
	// The client secret associated with your Square application.
	ClientSecret pulumi.Input `pulumi:"clientSecret"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The URL of the Square instance. (i.e. mystore.mysquare.com)
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The redirect URL assigned in the Square application dashboard. (i.e. http://localhost:2500)
	RedirectUri pulumi.Input `pulumi:"redirectUri"`
	// Type of linked service.
	// Expected value is 'Square'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (SquareLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SquareLinkedServiceResponse)(nil)).Elem()
}

func (i SquareLinkedServiceResponseArgs) ToSquareLinkedServiceResponseOutput() SquareLinkedServiceResponseOutput {
	return i.ToSquareLinkedServiceResponseOutputWithContext(context.Background())
}

func (i SquareLinkedServiceResponseArgs) ToSquareLinkedServiceResponseOutputWithContext(ctx context.Context) SquareLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SquareLinkedServiceResponseOutput)
}

// Square Service linked service.
type SquareLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (SquareLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SquareLinkedServiceResponse)(nil)).Elem()
}

func (o SquareLinkedServiceResponseOutput) ToSquareLinkedServiceResponseOutput() SquareLinkedServiceResponseOutput {
	return o
}

func (o SquareLinkedServiceResponseOutput) ToSquareLinkedServiceResponseOutputWithContext(ctx context.Context) SquareLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SquareLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SquareLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The client ID associated with your Square application.
func (o SquareLinkedServiceResponseOutput) ClientId() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareLinkedServiceResponse) interface{} { return v.ClientId }).(pulumi.AnyOutput)
}

// The client secret associated with your Square application.
func (o SquareLinkedServiceResponseOutput) ClientSecret() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareLinkedServiceResponse) interface{} { return v.ClientSecret }).(pulumi.AnyOutput)
}

// The integration runtime reference.
func (o SquareLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v SquareLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o SquareLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SquareLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SquareLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The URL of the Square instance. (i.e. mystore.mysquare.com)
func (o SquareLinkedServiceResponseOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareLinkedServiceResponse) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SquareLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SquareLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The redirect URL assigned in the Square application dashboard. (i.e. http://localhost:2500)
func (o SquareLinkedServiceResponseOutput) RedirectUri() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareLinkedServiceResponse) interface{} { return v.RedirectUri }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Square'.
func (o SquareLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SquareLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o SquareLinkedServiceResponseOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareLinkedServiceResponse) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o SquareLinkedServiceResponseOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareLinkedServiceResponse) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o SquareLinkedServiceResponseOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareLinkedServiceResponse) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Square Service dataset.
type SquareObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SquareObject'.
	Type string `pulumi:"type"`
}

// SquareObjectDatasetInput is an input type that accepts SquareObjectDatasetArgs and SquareObjectDatasetOutput values.
// You can construct a concrete instance of `SquareObjectDatasetInput` via:
//
//          SquareObjectDatasetArgs{...}
type SquareObjectDatasetInput interface {
	pulumi.Input

	ToSquareObjectDatasetOutput() SquareObjectDatasetOutput
	ToSquareObjectDatasetOutputWithContext(context.Context) SquareObjectDatasetOutput
}

// Square Service dataset.
type SquareObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SquareObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SquareObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SquareObjectDataset)(nil)).Elem()
}

func (i SquareObjectDatasetArgs) ToSquareObjectDatasetOutput() SquareObjectDatasetOutput {
	return i.ToSquareObjectDatasetOutputWithContext(context.Background())
}

func (i SquareObjectDatasetArgs) ToSquareObjectDatasetOutputWithContext(ctx context.Context) SquareObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SquareObjectDatasetOutput)
}

// Square Service dataset.
type SquareObjectDatasetOutput struct{ *pulumi.OutputState }

func (SquareObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SquareObjectDataset)(nil)).Elem()
}

func (o SquareObjectDatasetOutput) ToSquareObjectDatasetOutput() SquareObjectDatasetOutput {
	return o
}

func (o SquareObjectDatasetOutput) ToSquareObjectDatasetOutputWithContext(ctx context.Context) SquareObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SquareObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SquareObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o SquareObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SquareObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o SquareObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v SquareObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o SquareObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SquareObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o SquareObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'SquareObject'.
func (o SquareObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SquareObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Square Service dataset.
type SquareObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SquareObject'.
	Type string `pulumi:"type"`
}

// SquareObjectDatasetResponseInput is an input type that accepts SquareObjectDatasetResponseArgs and SquareObjectDatasetResponseOutput values.
// You can construct a concrete instance of `SquareObjectDatasetResponseInput` via:
//
//          SquareObjectDatasetResponseArgs{...}
type SquareObjectDatasetResponseInput interface {
	pulumi.Input

	ToSquareObjectDatasetResponseOutput() SquareObjectDatasetResponseOutput
	ToSquareObjectDatasetResponseOutputWithContext(context.Context) SquareObjectDatasetResponseOutput
}

// Square Service dataset.
type SquareObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'SquareObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SquareObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SquareObjectDatasetResponse)(nil)).Elem()
}

func (i SquareObjectDatasetResponseArgs) ToSquareObjectDatasetResponseOutput() SquareObjectDatasetResponseOutput {
	return i.ToSquareObjectDatasetResponseOutputWithContext(context.Background())
}

func (i SquareObjectDatasetResponseArgs) ToSquareObjectDatasetResponseOutputWithContext(ctx context.Context) SquareObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SquareObjectDatasetResponseOutput)
}

// Square Service dataset.
type SquareObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (SquareObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SquareObjectDatasetResponse)(nil)).Elem()
}

func (o SquareObjectDatasetResponseOutput) ToSquareObjectDatasetResponseOutput() SquareObjectDatasetResponseOutput {
	return o
}

func (o SquareObjectDatasetResponseOutput) ToSquareObjectDatasetResponseOutputWithContext(ctx context.Context) SquareObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SquareObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SquareObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o SquareObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SquareObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o SquareObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v SquareObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o SquareObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SquareObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o SquareObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'SquareObject'.
func (o SquareObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SquareObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Square Service source.
type SquareSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SquareSource'.
	Type string `pulumi:"type"`
}

// SquareSourceInput is an input type that accepts SquareSourceArgs and SquareSourceOutput values.
// You can construct a concrete instance of `SquareSourceInput` via:
//
//          SquareSourceArgs{...}
type SquareSourceInput interface {
	pulumi.Input

	ToSquareSourceOutput() SquareSourceOutput
	ToSquareSourceOutputWithContext(context.Context) SquareSourceOutput
}

// A copy activity Square Service source.
type SquareSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SquareSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SquareSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SquareSource)(nil)).Elem()
}

func (i SquareSourceArgs) ToSquareSourceOutput() SquareSourceOutput {
	return i.ToSquareSourceOutputWithContext(context.Background())
}

func (i SquareSourceArgs) ToSquareSourceOutputWithContext(ctx context.Context) SquareSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SquareSourceOutput)
}

// A copy activity Square Service source.
type SquareSourceOutput struct{ *pulumi.OutputState }

func (SquareSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SquareSource)(nil)).Elem()
}

func (o SquareSourceOutput) ToSquareSourceOutput() SquareSourceOutput {
	return o
}

func (o SquareSourceOutput) ToSquareSourceOutputWithContext(ctx context.Context) SquareSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o SquareSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o SquareSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SquareSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'SquareSource'.
func (o SquareSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SquareSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Square Service source.
type SquareSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SquareSource'.
	Type string `pulumi:"type"`
}

// SquareSourceResponseInput is an input type that accepts SquareSourceResponseArgs and SquareSourceResponseOutput values.
// You can construct a concrete instance of `SquareSourceResponseInput` via:
//
//          SquareSourceResponseArgs{...}
type SquareSourceResponseInput interface {
	pulumi.Input

	ToSquareSourceResponseOutput() SquareSourceResponseOutput
	ToSquareSourceResponseOutputWithContext(context.Context) SquareSourceResponseOutput
}

// A copy activity Square Service source.
type SquareSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'SquareSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SquareSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SquareSourceResponse)(nil)).Elem()
}

func (i SquareSourceResponseArgs) ToSquareSourceResponseOutput() SquareSourceResponseOutput {
	return i.ToSquareSourceResponseOutputWithContext(context.Background())
}

func (i SquareSourceResponseArgs) ToSquareSourceResponseOutputWithContext(ctx context.Context) SquareSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SquareSourceResponseOutput)
}

// A copy activity Square Service source.
type SquareSourceResponseOutput struct{ *pulumi.OutputState }

func (SquareSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SquareSourceResponse)(nil)).Elem()
}

func (o SquareSourceResponseOutput) ToSquareSourceResponseOutput() SquareSourceResponseOutput {
	return o
}

func (o SquareSourceResponseOutput) ToSquareSourceResponseOutputWithContext(ctx context.Context) SquareSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o SquareSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o SquareSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o SquareSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v SquareSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'SquareSource'.
func (o SquareSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SquareSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Staging settings.
type StagingSettings struct {
	// Specifies whether to use compression when copying data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
	EnableCompression interface{} `pulumi:"enableCompression"`
	// Staging linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// The path to storage for storing the interim data. Type: string (or Expression with resultType string).
	Path interface{} `pulumi:"path"`
}

// StagingSettingsInput is an input type that accepts StagingSettingsArgs and StagingSettingsOutput values.
// You can construct a concrete instance of `StagingSettingsInput` via:
//
//          StagingSettingsArgs{...}
type StagingSettingsInput interface {
	pulumi.Input

	ToStagingSettingsOutput() StagingSettingsOutput
	ToStagingSettingsOutputWithContext(context.Context) StagingSettingsOutput
}

// Staging settings.
type StagingSettingsArgs struct {
	// Specifies whether to use compression when copying data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
	EnableCompression pulumi.Input `pulumi:"enableCompression"`
	// Staging linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// The path to storage for storing the interim data. Type: string (or Expression with resultType string).
	Path pulumi.Input `pulumi:"path"`
}

func (StagingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StagingSettings)(nil)).Elem()
}

func (i StagingSettingsArgs) ToStagingSettingsOutput() StagingSettingsOutput {
	return i.ToStagingSettingsOutputWithContext(context.Background())
}

func (i StagingSettingsArgs) ToStagingSettingsOutputWithContext(ctx context.Context) StagingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StagingSettingsOutput)
}

func (i StagingSettingsArgs) ToStagingSettingsPtrOutput() StagingSettingsPtrOutput {
	return i.ToStagingSettingsPtrOutputWithContext(context.Background())
}

func (i StagingSettingsArgs) ToStagingSettingsPtrOutputWithContext(ctx context.Context) StagingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StagingSettingsOutput).ToStagingSettingsPtrOutputWithContext(ctx)
}

// StagingSettingsPtrInput is an input type that accepts StagingSettingsArgs, StagingSettingsPtr and StagingSettingsPtrOutput values.
// You can construct a concrete instance of `StagingSettingsPtrInput` via:
//
//          StagingSettingsArgs{...}
//
//  or:
//
//          nil
type StagingSettingsPtrInput interface {
	pulumi.Input

	ToStagingSettingsPtrOutput() StagingSettingsPtrOutput
	ToStagingSettingsPtrOutputWithContext(context.Context) StagingSettingsPtrOutput
}

type stagingSettingsPtrType StagingSettingsArgs

func StagingSettingsPtr(v *StagingSettingsArgs) StagingSettingsPtrInput {
	return (*stagingSettingsPtrType)(v)
}

func (*stagingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StagingSettings)(nil)).Elem()
}

func (i *stagingSettingsPtrType) ToStagingSettingsPtrOutput() StagingSettingsPtrOutput {
	return i.ToStagingSettingsPtrOutputWithContext(context.Background())
}

func (i *stagingSettingsPtrType) ToStagingSettingsPtrOutputWithContext(ctx context.Context) StagingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StagingSettingsPtrOutput)
}

// Staging settings.
type StagingSettingsOutput struct{ *pulumi.OutputState }

func (StagingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StagingSettings)(nil)).Elem()
}

func (o StagingSettingsOutput) ToStagingSettingsOutput() StagingSettingsOutput {
	return o
}

func (o StagingSettingsOutput) ToStagingSettingsOutputWithContext(ctx context.Context) StagingSettingsOutput {
	return o
}

func (o StagingSettingsOutput) ToStagingSettingsPtrOutput() StagingSettingsPtrOutput {
	return o.ToStagingSettingsPtrOutputWithContext(context.Background())
}

func (o StagingSettingsOutput) ToStagingSettingsPtrOutputWithContext(ctx context.Context) StagingSettingsPtrOutput {
	return o.ApplyT(func(v StagingSettings) *StagingSettings {
		return &v
	}).(StagingSettingsPtrOutput)
}

// Specifies whether to use compression when copying data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
func (o StagingSettingsOutput) EnableCompression() pulumi.AnyOutput {
	return o.ApplyT(func(v StagingSettings) interface{} { return v.EnableCompression }).(pulumi.AnyOutput)
}

// Staging linked service reference.
func (o StagingSettingsOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v StagingSettings) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// The path to storage for storing the interim data. Type: string (or Expression with resultType string).
func (o StagingSettingsOutput) Path() pulumi.AnyOutput {
	return o.ApplyT(func(v StagingSettings) interface{} { return v.Path }).(pulumi.AnyOutput)
}

type StagingSettingsPtrOutput struct{ *pulumi.OutputState }

func (StagingSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StagingSettings)(nil)).Elem()
}

func (o StagingSettingsPtrOutput) ToStagingSettingsPtrOutput() StagingSettingsPtrOutput {
	return o
}

func (o StagingSettingsPtrOutput) ToStagingSettingsPtrOutputWithContext(ctx context.Context) StagingSettingsPtrOutput {
	return o
}

func (o StagingSettingsPtrOutput) Elem() StagingSettingsOutput {
	return o.ApplyT(func(v *StagingSettings) StagingSettings { return *v }).(StagingSettingsOutput)
}

// Specifies whether to use compression when copying data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
func (o StagingSettingsPtrOutput) EnableCompression() pulumi.AnyOutput {
	return o.ApplyT(func(v *StagingSettings) interface{} {
		if v == nil {
			return nil
		}
		return v.EnableCompression
	}).(pulumi.AnyOutput)
}

// Staging linked service reference.
func (o StagingSettingsPtrOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v *StagingSettings) *LinkedServiceReference {
		if v == nil {
			return nil
		}
		return &v.LinkedServiceName
	}).(LinkedServiceReferencePtrOutput)
}

// The path to storage for storing the interim data. Type: string (or Expression with resultType string).
func (o StagingSettingsPtrOutput) Path() pulumi.AnyOutput {
	return o.ApplyT(func(v *StagingSettings) interface{} {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.AnyOutput)
}

// Staging settings.
type StagingSettingsResponse struct {
	// Specifies whether to use compression when copying data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
	EnableCompression interface{} `pulumi:"enableCompression"`
	// Staging linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// The path to storage for storing the interim data. Type: string (or Expression with resultType string).
	Path interface{} `pulumi:"path"`
}

// StagingSettingsResponseInput is an input type that accepts StagingSettingsResponseArgs and StagingSettingsResponseOutput values.
// You can construct a concrete instance of `StagingSettingsResponseInput` via:
//
//          StagingSettingsResponseArgs{...}
type StagingSettingsResponseInput interface {
	pulumi.Input

	ToStagingSettingsResponseOutput() StagingSettingsResponseOutput
	ToStagingSettingsResponseOutputWithContext(context.Context) StagingSettingsResponseOutput
}

// Staging settings.
type StagingSettingsResponseArgs struct {
	// Specifies whether to use compression when copying data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
	EnableCompression pulumi.Input `pulumi:"enableCompression"`
	// Staging linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// The path to storage for storing the interim data. Type: string (or Expression with resultType string).
	Path pulumi.Input `pulumi:"path"`
}

func (StagingSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StagingSettingsResponse)(nil)).Elem()
}

func (i StagingSettingsResponseArgs) ToStagingSettingsResponseOutput() StagingSettingsResponseOutput {
	return i.ToStagingSettingsResponseOutputWithContext(context.Background())
}

func (i StagingSettingsResponseArgs) ToStagingSettingsResponseOutputWithContext(ctx context.Context) StagingSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StagingSettingsResponseOutput)
}

func (i StagingSettingsResponseArgs) ToStagingSettingsResponsePtrOutput() StagingSettingsResponsePtrOutput {
	return i.ToStagingSettingsResponsePtrOutputWithContext(context.Background())
}

func (i StagingSettingsResponseArgs) ToStagingSettingsResponsePtrOutputWithContext(ctx context.Context) StagingSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StagingSettingsResponseOutput).ToStagingSettingsResponsePtrOutputWithContext(ctx)
}

// StagingSettingsResponsePtrInput is an input type that accepts StagingSettingsResponseArgs, StagingSettingsResponsePtr and StagingSettingsResponsePtrOutput values.
// You can construct a concrete instance of `StagingSettingsResponsePtrInput` via:
//
//          StagingSettingsResponseArgs{...}
//
//  or:
//
//          nil
type StagingSettingsResponsePtrInput interface {
	pulumi.Input

	ToStagingSettingsResponsePtrOutput() StagingSettingsResponsePtrOutput
	ToStagingSettingsResponsePtrOutputWithContext(context.Context) StagingSettingsResponsePtrOutput
}

type stagingSettingsResponsePtrType StagingSettingsResponseArgs

func StagingSettingsResponsePtr(v *StagingSettingsResponseArgs) StagingSettingsResponsePtrInput {
	return (*stagingSettingsResponsePtrType)(v)
}

func (*stagingSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StagingSettingsResponse)(nil)).Elem()
}

func (i *stagingSettingsResponsePtrType) ToStagingSettingsResponsePtrOutput() StagingSettingsResponsePtrOutput {
	return i.ToStagingSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *stagingSettingsResponsePtrType) ToStagingSettingsResponsePtrOutputWithContext(ctx context.Context) StagingSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StagingSettingsResponsePtrOutput)
}

// Staging settings.
type StagingSettingsResponseOutput struct{ *pulumi.OutputState }

func (StagingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StagingSettingsResponse)(nil)).Elem()
}

func (o StagingSettingsResponseOutput) ToStagingSettingsResponseOutput() StagingSettingsResponseOutput {
	return o
}

func (o StagingSettingsResponseOutput) ToStagingSettingsResponseOutputWithContext(ctx context.Context) StagingSettingsResponseOutput {
	return o
}

func (o StagingSettingsResponseOutput) ToStagingSettingsResponsePtrOutput() StagingSettingsResponsePtrOutput {
	return o.ToStagingSettingsResponsePtrOutputWithContext(context.Background())
}

func (o StagingSettingsResponseOutput) ToStagingSettingsResponsePtrOutputWithContext(ctx context.Context) StagingSettingsResponsePtrOutput {
	return o.ApplyT(func(v StagingSettingsResponse) *StagingSettingsResponse {
		return &v
	}).(StagingSettingsResponsePtrOutput)
}

// Specifies whether to use compression when copying data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
func (o StagingSettingsResponseOutput) EnableCompression() pulumi.AnyOutput {
	return o.ApplyT(func(v StagingSettingsResponse) interface{} { return v.EnableCompression }).(pulumi.AnyOutput)
}

// Staging linked service reference.
func (o StagingSettingsResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v StagingSettingsResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// The path to storage for storing the interim data. Type: string (or Expression with resultType string).
func (o StagingSettingsResponseOutput) Path() pulumi.AnyOutput {
	return o.ApplyT(func(v StagingSettingsResponse) interface{} { return v.Path }).(pulumi.AnyOutput)
}

type StagingSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (StagingSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StagingSettingsResponse)(nil)).Elem()
}

func (o StagingSettingsResponsePtrOutput) ToStagingSettingsResponsePtrOutput() StagingSettingsResponsePtrOutput {
	return o
}

func (o StagingSettingsResponsePtrOutput) ToStagingSettingsResponsePtrOutputWithContext(ctx context.Context) StagingSettingsResponsePtrOutput {
	return o
}

func (o StagingSettingsResponsePtrOutput) Elem() StagingSettingsResponseOutput {
	return o.ApplyT(func(v *StagingSettingsResponse) StagingSettingsResponse { return *v }).(StagingSettingsResponseOutput)
}

// Specifies whether to use compression when copying data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
func (o StagingSettingsResponsePtrOutput) EnableCompression() pulumi.AnyOutput {
	return o.ApplyT(func(v *StagingSettingsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.EnableCompression
	}).(pulumi.AnyOutput)
}

// Staging linked service reference.
func (o StagingSettingsResponsePtrOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v *StagingSettingsResponse) *LinkedServiceReferenceResponse {
		if v == nil {
			return nil
		}
		return &v.LinkedServiceName
	}).(LinkedServiceReferenceResponsePtrOutput)
}

// The path to storage for storing the interim data. Type: string (or Expression with resultType string).
func (o StagingSettingsResponsePtrOutput) Path() pulumi.AnyOutput {
	return o.ApplyT(func(v *StagingSettingsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.AnyOutput)
}

// SQL stored procedure parameter.
type StoredProcedureParameter struct {
	// Stored procedure parameter type.
	Type *string `pulumi:"type"`
	// Stored procedure parameter value. Type: string (or Expression with resultType string).
	Value interface{} `pulumi:"value"`
}

// StoredProcedureParameterInput is an input type that accepts StoredProcedureParameterArgs and StoredProcedureParameterOutput values.
// You can construct a concrete instance of `StoredProcedureParameterInput` via:
//
//          StoredProcedureParameterArgs{...}
type StoredProcedureParameterInput interface {
	pulumi.Input

	ToStoredProcedureParameterOutput() StoredProcedureParameterOutput
	ToStoredProcedureParameterOutputWithContext(context.Context) StoredProcedureParameterOutput
}

// SQL stored procedure parameter.
type StoredProcedureParameterArgs struct {
	// Stored procedure parameter type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Stored procedure parameter value. Type: string (or Expression with resultType string).
	Value pulumi.Input `pulumi:"value"`
}

func (StoredProcedureParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StoredProcedureParameter)(nil)).Elem()
}

func (i StoredProcedureParameterArgs) ToStoredProcedureParameterOutput() StoredProcedureParameterOutput {
	return i.ToStoredProcedureParameterOutputWithContext(context.Background())
}

func (i StoredProcedureParameterArgs) ToStoredProcedureParameterOutputWithContext(ctx context.Context) StoredProcedureParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoredProcedureParameterOutput)
}

// StoredProcedureParameterMapInput is an input type that accepts StoredProcedureParameterMap and StoredProcedureParameterMapOutput values.
// You can construct a concrete instance of `StoredProcedureParameterMapInput` via:
//
//          StoredProcedureParameterMap{ "key": StoredProcedureParameterArgs{...} }
type StoredProcedureParameterMapInput interface {
	pulumi.Input

	ToStoredProcedureParameterMapOutput() StoredProcedureParameterMapOutput
	ToStoredProcedureParameterMapOutputWithContext(context.Context) StoredProcedureParameterMapOutput
}

type StoredProcedureParameterMap map[string]StoredProcedureParameterInput

func (StoredProcedureParameterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StoredProcedureParameter)(nil)).Elem()
}

func (i StoredProcedureParameterMap) ToStoredProcedureParameterMapOutput() StoredProcedureParameterMapOutput {
	return i.ToStoredProcedureParameterMapOutputWithContext(context.Background())
}

func (i StoredProcedureParameterMap) ToStoredProcedureParameterMapOutputWithContext(ctx context.Context) StoredProcedureParameterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoredProcedureParameterMapOutput)
}

// SQL stored procedure parameter.
type StoredProcedureParameterOutput struct{ *pulumi.OutputState }

func (StoredProcedureParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StoredProcedureParameter)(nil)).Elem()
}

func (o StoredProcedureParameterOutput) ToStoredProcedureParameterOutput() StoredProcedureParameterOutput {
	return o
}

func (o StoredProcedureParameterOutput) ToStoredProcedureParameterOutputWithContext(ctx context.Context) StoredProcedureParameterOutput {
	return o
}

// Stored procedure parameter type.
func (o StoredProcedureParameterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StoredProcedureParameter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Stored procedure parameter value. Type: string (or Expression with resultType string).
func (o StoredProcedureParameterOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v StoredProcedureParameter) interface{} { return v.Value }).(pulumi.AnyOutput)
}

type StoredProcedureParameterMapOutput struct{ *pulumi.OutputState }

func (StoredProcedureParameterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StoredProcedureParameter)(nil)).Elem()
}

func (o StoredProcedureParameterMapOutput) ToStoredProcedureParameterMapOutput() StoredProcedureParameterMapOutput {
	return o
}

func (o StoredProcedureParameterMapOutput) ToStoredProcedureParameterMapOutputWithContext(ctx context.Context) StoredProcedureParameterMapOutput {
	return o
}

func (o StoredProcedureParameterMapOutput) MapIndex(k pulumi.StringInput) StoredProcedureParameterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) StoredProcedureParameter {
		return vs[0].(map[string]StoredProcedureParameter)[vs[1].(string)]
	}).(StoredProcedureParameterOutput)
}

// SQL stored procedure parameter.
type StoredProcedureParameterResponse struct {
	// Stored procedure parameter type.
	Type *string `pulumi:"type"`
	// Stored procedure parameter value. Type: string (or Expression with resultType string).
	Value interface{} `pulumi:"value"`
}

// StoredProcedureParameterResponseInput is an input type that accepts StoredProcedureParameterResponseArgs and StoredProcedureParameterResponseOutput values.
// You can construct a concrete instance of `StoredProcedureParameterResponseInput` via:
//
//          StoredProcedureParameterResponseArgs{...}
type StoredProcedureParameterResponseInput interface {
	pulumi.Input

	ToStoredProcedureParameterResponseOutput() StoredProcedureParameterResponseOutput
	ToStoredProcedureParameterResponseOutputWithContext(context.Context) StoredProcedureParameterResponseOutput
}

// SQL stored procedure parameter.
type StoredProcedureParameterResponseArgs struct {
	// Stored procedure parameter type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Stored procedure parameter value. Type: string (or Expression with resultType string).
	Value pulumi.Input `pulumi:"value"`
}

func (StoredProcedureParameterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StoredProcedureParameterResponse)(nil)).Elem()
}

func (i StoredProcedureParameterResponseArgs) ToStoredProcedureParameterResponseOutput() StoredProcedureParameterResponseOutput {
	return i.ToStoredProcedureParameterResponseOutputWithContext(context.Background())
}

func (i StoredProcedureParameterResponseArgs) ToStoredProcedureParameterResponseOutputWithContext(ctx context.Context) StoredProcedureParameterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoredProcedureParameterResponseOutput)
}

// StoredProcedureParameterResponseMapInput is an input type that accepts StoredProcedureParameterResponseMap and StoredProcedureParameterResponseMapOutput values.
// You can construct a concrete instance of `StoredProcedureParameterResponseMapInput` via:
//
//          StoredProcedureParameterResponseMap{ "key": StoredProcedureParameterResponseArgs{...} }
type StoredProcedureParameterResponseMapInput interface {
	pulumi.Input

	ToStoredProcedureParameterResponseMapOutput() StoredProcedureParameterResponseMapOutput
	ToStoredProcedureParameterResponseMapOutputWithContext(context.Context) StoredProcedureParameterResponseMapOutput
}

type StoredProcedureParameterResponseMap map[string]StoredProcedureParameterResponseInput

func (StoredProcedureParameterResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StoredProcedureParameterResponse)(nil)).Elem()
}

func (i StoredProcedureParameterResponseMap) ToStoredProcedureParameterResponseMapOutput() StoredProcedureParameterResponseMapOutput {
	return i.ToStoredProcedureParameterResponseMapOutputWithContext(context.Background())
}

func (i StoredProcedureParameterResponseMap) ToStoredProcedureParameterResponseMapOutputWithContext(ctx context.Context) StoredProcedureParameterResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoredProcedureParameterResponseMapOutput)
}

// SQL stored procedure parameter.
type StoredProcedureParameterResponseOutput struct{ *pulumi.OutputState }

func (StoredProcedureParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StoredProcedureParameterResponse)(nil)).Elem()
}

func (o StoredProcedureParameterResponseOutput) ToStoredProcedureParameterResponseOutput() StoredProcedureParameterResponseOutput {
	return o
}

func (o StoredProcedureParameterResponseOutput) ToStoredProcedureParameterResponseOutputWithContext(ctx context.Context) StoredProcedureParameterResponseOutput {
	return o
}

// Stored procedure parameter type.
func (o StoredProcedureParameterResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StoredProcedureParameterResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Stored procedure parameter value. Type: string (or Expression with resultType string).
func (o StoredProcedureParameterResponseOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v StoredProcedureParameterResponse) interface{} { return v.Value }).(pulumi.AnyOutput)
}

type StoredProcedureParameterResponseMapOutput struct{ *pulumi.OutputState }

func (StoredProcedureParameterResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StoredProcedureParameterResponse)(nil)).Elem()
}

func (o StoredProcedureParameterResponseMapOutput) ToStoredProcedureParameterResponseMapOutput() StoredProcedureParameterResponseMapOutput {
	return o
}

func (o StoredProcedureParameterResponseMapOutput) ToStoredProcedureParameterResponseMapOutputWithContext(ctx context.Context) StoredProcedureParameterResponseMapOutput {
	return o
}

func (o StoredProcedureParameterResponseMapOutput) MapIndex(k pulumi.StringInput) StoredProcedureParameterResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) StoredProcedureParameterResponse {
		return vs[0].(map[string]StoredProcedureParameterResponse)[vs[1].(string)]
	}).(StoredProcedureParameterResponseOutput)
}

// Linked service for Sybase data source.
type SybaseLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// AuthenticationType to be used for connection.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Database name for connection. Type: string (or Expression with resultType string).
	Database interface{} `pulumi:"database"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Password for authentication.
	Password interface{} `pulumi:"password"`
	// Schema name for connection. Type: string (or Expression with resultType string).
	Schema interface{} `pulumi:"schema"`
	// Server name for connection. Type: string (or Expression with resultType string).
	Server interface{} `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'Sybase'.
	Type string `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// SybaseLinkedServiceInput is an input type that accepts SybaseLinkedServiceArgs and SybaseLinkedServiceOutput values.
// You can construct a concrete instance of `SybaseLinkedServiceInput` via:
//
//          SybaseLinkedServiceArgs{...}
type SybaseLinkedServiceInput interface {
	pulumi.Input

	ToSybaseLinkedServiceOutput() SybaseLinkedServiceOutput
	ToSybaseLinkedServiceOutputWithContext(context.Context) SybaseLinkedServiceOutput
}

// Linked service for Sybase data source.
type SybaseLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// AuthenticationType to be used for connection.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Database name for connection. Type: string (or Expression with resultType string).
	Database pulumi.Input `pulumi:"database"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Password for authentication.
	Password pulumi.Input `pulumi:"password"`
	// Schema name for connection. Type: string (or Expression with resultType string).
	Schema pulumi.Input `pulumi:"schema"`
	// Server name for connection. Type: string (or Expression with resultType string).
	Server pulumi.Input `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'Sybase'.
	Type pulumi.StringInput `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (SybaseLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SybaseLinkedService)(nil)).Elem()
}

func (i SybaseLinkedServiceArgs) ToSybaseLinkedServiceOutput() SybaseLinkedServiceOutput {
	return i.ToSybaseLinkedServiceOutputWithContext(context.Background())
}

func (i SybaseLinkedServiceArgs) ToSybaseLinkedServiceOutputWithContext(ctx context.Context) SybaseLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SybaseLinkedServiceOutput)
}

// Linked service for Sybase data source.
type SybaseLinkedServiceOutput struct{ *pulumi.OutputState }

func (SybaseLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SybaseLinkedService)(nil)).Elem()
}

func (o SybaseLinkedServiceOutput) ToSybaseLinkedServiceOutput() SybaseLinkedServiceOutput {
	return o
}

func (o SybaseLinkedServiceOutput) ToSybaseLinkedServiceOutputWithContext(ctx context.Context) SybaseLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SybaseLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SybaseLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// AuthenticationType to be used for connection.
func (o SybaseLinkedServiceOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SybaseLinkedService) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The integration runtime reference.
func (o SybaseLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v SybaseLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Database name for connection. Type: string (or Expression with resultType string).
func (o SybaseLinkedServiceOutput) Database() pulumi.AnyOutput {
	return o.ApplyT(func(v SybaseLinkedService) interface{} { return v.Database }).(pulumi.AnyOutput)
}

// Linked service description.
func (o SybaseLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SybaseLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SybaseLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SybaseLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SybaseLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v SybaseLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Password for authentication.
func (o SybaseLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SybaseLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Schema name for connection. Type: string (or Expression with resultType string).
func (o SybaseLinkedServiceOutput) Schema() pulumi.AnyOutput {
	return o.ApplyT(func(v SybaseLinkedService) interface{} { return v.Schema }).(pulumi.AnyOutput)
}

// Server name for connection. Type: string (or Expression with resultType string).
func (o SybaseLinkedServiceOutput) Server() pulumi.AnyOutput {
	return o.ApplyT(func(v SybaseLinkedService) interface{} { return v.Server }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Sybase'.
func (o SybaseLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SybaseLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Username for authentication. Type: string (or Expression with resultType string).
func (o SybaseLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v SybaseLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Linked service for Sybase data source.
type SybaseLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// AuthenticationType to be used for connection.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Database name for connection. Type: string (or Expression with resultType string).
	Database interface{} `pulumi:"database"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Password for authentication.
	Password interface{} `pulumi:"password"`
	// Schema name for connection. Type: string (or Expression with resultType string).
	Schema interface{} `pulumi:"schema"`
	// Server name for connection. Type: string (or Expression with resultType string).
	Server interface{} `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'Sybase'.
	Type string `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// SybaseLinkedServiceResponseInput is an input type that accepts SybaseLinkedServiceResponseArgs and SybaseLinkedServiceResponseOutput values.
// You can construct a concrete instance of `SybaseLinkedServiceResponseInput` via:
//
//          SybaseLinkedServiceResponseArgs{...}
type SybaseLinkedServiceResponseInput interface {
	pulumi.Input

	ToSybaseLinkedServiceResponseOutput() SybaseLinkedServiceResponseOutput
	ToSybaseLinkedServiceResponseOutputWithContext(context.Context) SybaseLinkedServiceResponseOutput
}

// Linked service for Sybase data source.
type SybaseLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// AuthenticationType to be used for connection.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Database name for connection. Type: string (or Expression with resultType string).
	Database pulumi.Input `pulumi:"database"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Password for authentication.
	Password pulumi.Input `pulumi:"password"`
	// Schema name for connection. Type: string (or Expression with resultType string).
	Schema pulumi.Input `pulumi:"schema"`
	// Server name for connection. Type: string (or Expression with resultType string).
	Server pulumi.Input `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'Sybase'.
	Type pulumi.StringInput `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (SybaseLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SybaseLinkedServiceResponse)(nil)).Elem()
}

func (i SybaseLinkedServiceResponseArgs) ToSybaseLinkedServiceResponseOutput() SybaseLinkedServiceResponseOutput {
	return i.ToSybaseLinkedServiceResponseOutputWithContext(context.Background())
}

func (i SybaseLinkedServiceResponseArgs) ToSybaseLinkedServiceResponseOutputWithContext(ctx context.Context) SybaseLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SybaseLinkedServiceResponseOutput)
}

// Linked service for Sybase data source.
type SybaseLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (SybaseLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SybaseLinkedServiceResponse)(nil)).Elem()
}

func (o SybaseLinkedServiceResponseOutput) ToSybaseLinkedServiceResponseOutput() SybaseLinkedServiceResponseOutput {
	return o
}

func (o SybaseLinkedServiceResponseOutput) ToSybaseLinkedServiceResponseOutputWithContext(ctx context.Context) SybaseLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o SybaseLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v SybaseLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// AuthenticationType to be used for connection.
func (o SybaseLinkedServiceResponseOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SybaseLinkedServiceResponse) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The integration runtime reference.
func (o SybaseLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v SybaseLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Database name for connection. Type: string (or Expression with resultType string).
func (o SybaseLinkedServiceResponseOutput) Database() pulumi.AnyOutput {
	return o.ApplyT(func(v SybaseLinkedServiceResponse) interface{} { return v.Database }).(pulumi.AnyOutput)
}

// Linked service description.
func (o SybaseLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SybaseLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o SybaseLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v SybaseLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o SybaseLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v SybaseLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Password for authentication.
func (o SybaseLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v SybaseLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Schema name for connection. Type: string (or Expression with resultType string).
func (o SybaseLinkedServiceResponseOutput) Schema() pulumi.AnyOutput {
	return o.ApplyT(func(v SybaseLinkedServiceResponse) interface{} { return v.Schema }).(pulumi.AnyOutput)
}

// Server name for connection. Type: string (or Expression with resultType string).
func (o SybaseLinkedServiceResponseOutput) Server() pulumi.AnyOutput {
	return o.ApplyT(func(v SybaseLinkedServiceResponse) interface{} { return v.Server }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Sybase'.
func (o SybaseLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SybaseLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Username for authentication. Type: string (or Expression with resultType string).
func (o SybaseLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v SybaseLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Linked service for Teradata data source.
type TeradataLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// AuthenticationType to be used for connection.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Password for authentication.
	Password interface{} `pulumi:"password"`
	// Server name for connection. Type: string (or Expression with resultType string).
	Server interface{} `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'Teradata'.
	Type string `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// TeradataLinkedServiceInput is an input type that accepts TeradataLinkedServiceArgs and TeradataLinkedServiceOutput values.
// You can construct a concrete instance of `TeradataLinkedServiceInput` via:
//
//          TeradataLinkedServiceArgs{...}
type TeradataLinkedServiceInput interface {
	pulumi.Input

	ToTeradataLinkedServiceOutput() TeradataLinkedServiceOutput
	ToTeradataLinkedServiceOutputWithContext(context.Context) TeradataLinkedServiceOutput
}

// Linked service for Teradata data source.
type TeradataLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// AuthenticationType to be used for connection.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Password for authentication.
	Password pulumi.Input `pulumi:"password"`
	// Server name for connection. Type: string (or Expression with resultType string).
	Server pulumi.Input `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'Teradata'.
	Type pulumi.StringInput `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (TeradataLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeradataLinkedService)(nil)).Elem()
}

func (i TeradataLinkedServiceArgs) ToTeradataLinkedServiceOutput() TeradataLinkedServiceOutput {
	return i.ToTeradataLinkedServiceOutputWithContext(context.Background())
}

func (i TeradataLinkedServiceArgs) ToTeradataLinkedServiceOutputWithContext(ctx context.Context) TeradataLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeradataLinkedServiceOutput)
}

// Linked service for Teradata data source.
type TeradataLinkedServiceOutput struct{ *pulumi.OutputState }

func (TeradataLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeradataLinkedService)(nil)).Elem()
}

func (o TeradataLinkedServiceOutput) ToTeradataLinkedServiceOutput() TeradataLinkedServiceOutput {
	return o
}

func (o TeradataLinkedServiceOutput) ToTeradataLinkedServiceOutputWithContext(ctx context.Context) TeradataLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o TeradataLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v TeradataLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// AuthenticationType to be used for connection.
func (o TeradataLinkedServiceOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeradataLinkedService) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The integration runtime reference.
func (o TeradataLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v TeradataLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o TeradataLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeradataLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o TeradataLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v TeradataLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o TeradataLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v TeradataLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Password for authentication.
func (o TeradataLinkedServiceOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v TeradataLinkedService) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Server name for connection. Type: string (or Expression with resultType string).
func (o TeradataLinkedServiceOutput) Server() pulumi.AnyOutput {
	return o.ApplyT(func(v TeradataLinkedService) interface{} { return v.Server }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Teradata'.
func (o TeradataLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TeradataLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Username for authentication. Type: string (or Expression with resultType string).
func (o TeradataLinkedServiceOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v TeradataLinkedService) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// Linked service for Teradata data source.
type TeradataLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// AuthenticationType to be used for connection.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Password for authentication.
	Password interface{} `pulumi:"password"`
	// Server name for connection. Type: string (or Expression with resultType string).
	Server interface{} `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'Teradata'.
	Type string `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// TeradataLinkedServiceResponseInput is an input type that accepts TeradataLinkedServiceResponseArgs and TeradataLinkedServiceResponseOutput values.
// You can construct a concrete instance of `TeradataLinkedServiceResponseInput` via:
//
//          TeradataLinkedServiceResponseArgs{...}
type TeradataLinkedServiceResponseInput interface {
	pulumi.Input

	ToTeradataLinkedServiceResponseOutput() TeradataLinkedServiceResponseOutput
	ToTeradataLinkedServiceResponseOutputWithContext(context.Context) TeradataLinkedServiceResponseOutput
}

// Linked service for Teradata data source.
type TeradataLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// AuthenticationType to be used for connection.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Password for authentication.
	Password pulumi.Input `pulumi:"password"`
	// Server name for connection. Type: string (or Expression with resultType string).
	Server pulumi.Input `pulumi:"server"`
	// Type of linked service.
	// Expected value is 'Teradata'.
	Type pulumi.StringInput `pulumi:"type"`
	// Username for authentication. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (TeradataLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeradataLinkedServiceResponse)(nil)).Elem()
}

func (i TeradataLinkedServiceResponseArgs) ToTeradataLinkedServiceResponseOutput() TeradataLinkedServiceResponseOutput {
	return i.ToTeradataLinkedServiceResponseOutputWithContext(context.Background())
}

func (i TeradataLinkedServiceResponseArgs) ToTeradataLinkedServiceResponseOutputWithContext(ctx context.Context) TeradataLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeradataLinkedServiceResponseOutput)
}

// Linked service for Teradata data source.
type TeradataLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (TeradataLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeradataLinkedServiceResponse)(nil)).Elem()
}

func (o TeradataLinkedServiceResponseOutput) ToTeradataLinkedServiceResponseOutput() TeradataLinkedServiceResponseOutput {
	return o
}

func (o TeradataLinkedServiceResponseOutput) ToTeradataLinkedServiceResponseOutputWithContext(ctx context.Context) TeradataLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o TeradataLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v TeradataLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// AuthenticationType to be used for connection.
func (o TeradataLinkedServiceResponseOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeradataLinkedServiceResponse) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The integration runtime reference.
func (o TeradataLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v TeradataLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o TeradataLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeradataLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o TeradataLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v TeradataLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o TeradataLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v TeradataLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Password for authentication.
func (o TeradataLinkedServiceResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v TeradataLinkedServiceResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Server name for connection. Type: string (or Expression with resultType string).
func (o TeradataLinkedServiceResponseOutput) Server() pulumi.AnyOutput {
	return o.ApplyT(func(v TeradataLinkedServiceResponse) interface{} { return v.Server }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Teradata'.
func (o TeradataLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TeradataLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Username for authentication. Type: string (or Expression with resultType string).
func (o TeradataLinkedServiceResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v TeradataLinkedServiceResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// The data stored in text format.
type TextFormat struct {
	// The column delimiter. Type: string (or Expression with resultType string).
	ColumnDelimiter interface{} `pulumi:"columnDelimiter"`
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer interface{} `pulumi:"deserializer"`
	// The code page name of the preferred encoding. If miss, the default value is ΓÇ£utf-8ΓÇ¥, unless BOM denotes another Unicode encoding. Refer to the ΓÇ£NameΓÇ¥ column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
	EncodingName interface{} `pulumi:"encodingName"`
	// The escape character. Type: string (or Expression with resultType string).
	EscapeChar interface{} `pulumi:"escapeChar"`
	// When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).
	FirstRowAsHeader interface{} `pulumi:"firstRowAsHeader"`
	// The null value string. Type: string (or Expression with resultType string).
	NullValue interface{} `pulumi:"nullValue"`
	// The quote character. Type: string (or Expression with resultType string).
	QuoteChar interface{} `pulumi:"quoteChar"`
	// The row delimiter. Type: string (or Expression with resultType string).
	RowDelimiter interface{} `pulumi:"rowDelimiter"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer interface{} `pulumi:"serializer"`
	// The number of lines/rows to be skipped when parsing text files. The default value is 0. Type: integer (or Expression with resultType integer).
	SkipLineCount interface{} `pulumi:"skipLineCount"`
	// Treat empty column values in the text file as null. The default value is true. Type: boolean (or Expression with resultType boolean).
	TreatEmptyAsNull interface{} `pulumi:"treatEmptyAsNull"`
	// Type of dataset storage format.
	// Expected value is 'TextFormat'.
	Type string `pulumi:"type"`
}

// TextFormatInput is an input type that accepts TextFormatArgs and TextFormatOutput values.
// You can construct a concrete instance of `TextFormatInput` via:
//
//          TextFormatArgs{...}
type TextFormatInput interface {
	pulumi.Input

	ToTextFormatOutput() TextFormatOutput
	ToTextFormatOutputWithContext(context.Context) TextFormatOutput
}

// The data stored in text format.
type TextFormatArgs struct {
	// The column delimiter. Type: string (or Expression with resultType string).
	ColumnDelimiter pulumi.Input `pulumi:"columnDelimiter"`
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer pulumi.Input `pulumi:"deserializer"`
	// The code page name of the preferred encoding. If miss, the default value is ΓÇ£utf-8ΓÇ¥, unless BOM denotes another Unicode encoding. Refer to the ΓÇ£NameΓÇ¥ column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
	EncodingName pulumi.Input `pulumi:"encodingName"`
	// The escape character. Type: string (or Expression with resultType string).
	EscapeChar pulumi.Input `pulumi:"escapeChar"`
	// When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).
	FirstRowAsHeader pulumi.Input `pulumi:"firstRowAsHeader"`
	// The null value string. Type: string (or Expression with resultType string).
	NullValue pulumi.Input `pulumi:"nullValue"`
	// The quote character. Type: string (or Expression with resultType string).
	QuoteChar pulumi.Input `pulumi:"quoteChar"`
	// The row delimiter. Type: string (or Expression with resultType string).
	RowDelimiter pulumi.Input `pulumi:"rowDelimiter"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer pulumi.Input `pulumi:"serializer"`
	// The number of lines/rows to be skipped when parsing text files. The default value is 0. Type: integer (or Expression with resultType integer).
	SkipLineCount pulumi.Input `pulumi:"skipLineCount"`
	// Treat empty column values in the text file as null. The default value is true. Type: boolean (or Expression with resultType boolean).
	TreatEmptyAsNull pulumi.Input `pulumi:"treatEmptyAsNull"`
	// Type of dataset storage format.
	// Expected value is 'TextFormat'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TextFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TextFormat)(nil)).Elem()
}

func (i TextFormatArgs) ToTextFormatOutput() TextFormatOutput {
	return i.ToTextFormatOutputWithContext(context.Background())
}

func (i TextFormatArgs) ToTextFormatOutputWithContext(ctx context.Context) TextFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TextFormatOutput)
}

// The data stored in text format.
type TextFormatOutput struct{ *pulumi.OutputState }

func (TextFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TextFormat)(nil)).Elem()
}

func (o TextFormatOutput) ToTextFormatOutput() TextFormatOutput {
	return o
}

func (o TextFormatOutput) ToTextFormatOutputWithContext(ctx context.Context) TextFormatOutput {
	return o
}

// The column delimiter. Type: string (or Expression with resultType string).
func (o TextFormatOutput) ColumnDelimiter() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormat) interface{} { return v.ColumnDelimiter }).(pulumi.AnyOutput)
}

// Deserializer. Type: string (or Expression with resultType string).
func (o TextFormatOutput) Deserializer() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormat) interface{} { return v.Deserializer }).(pulumi.AnyOutput)
}

// The code page name of the preferred encoding. If miss, the default value is ΓÇ£utf-8ΓÇ¥, unless BOM denotes another Unicode encoding. Refer to the ΓÇ£NameΓÇ¥ column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
func (o TextFormatOutput) EncodingName() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormat) interface{} { return v.EncodingName }).(pulumi.AnyOutput)
}

// The escape character. Type: string (or Expression with resultType string).
func (o TextFormatOutput) EscapeChar() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormat) interface{} { return v.EscapeChar }).(pulumi.AnyOutput)
}

// When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).
func (o TextFormatOutput) FirstRowAsHeader() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormat) interface{} { return v.FirstRowAsHeader }).(pulumi.AnyOutput)
}

// The null value string. Type: string (or Expression with resultType string).
func (o TextFormatOutput) NullValue() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormat) interface{} { return v.NullValue }).(pulumi.AnyOutput)
}

// The quote character. Type: string (or Expression with resultType string).
func (o TextFormatOutput) QuoteChar() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormat) interface{} { return v.QuoteChar }).(pulumi.AnyOutput)
}

// The row delimiter. Type: string (or Expression with resultType string).
func (o TextFormatOutput) RowDelimiter() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormat) interface{} { return v.RowDelimiter }).(pulumi.AnyOutput)
}

// Serializer. Type: string (or Expression with resultType string).
func (o TextFormatOutput) Serializer() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormat) interface{} { return v.Serializer }).(pulumi.AnyOutput)
}

// The number of lines/rows to be skipped when parsing text files. The default value is 0. Type: integer (or Expression with resultType integer).
func (o TextFormatOutput) SkipLineCount() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormat) interface{} { return v.SkipLineCount }).(pulumi.AnyOutput)
}

// Treat empty column values in the text file as null. The default value is true. Type: boolean (or Expression with resultType boolean).
func (o TextFormatOutput) TreatEmptyAsNull() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormat) interface{} { return v.TreatEmptyAsNull }).(pulumi.AnyOutput)
}

// Type of dataset storage format.
// Expected value is 'TextFormat'.
func (o TextFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TextFormat) string { return v.Type }).(pulumi.StringOutput)
}

// The data stored in text format.
type TextFormatResponse struct {
	// The column delimiter. Type: string (or Expression with resultType string).
	ColumnDelimiter interface{} `pulumi:"columnDelimiter"`
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer interface{} `pulumi:"deserializer"`
	// The code page name of the preferred encoding. If miss, the default value is ΓÇ£utf-8ΓÇ¥, unless BOM denotes another Unicode encoding. Refer to the ΓÇ£NameΓÇ¥ column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
	EncodingName interface{} `pulumi:"encodingName"`
	// The escape character. Type: string (or Expression with resultType string).
	EscapeChar interface{} `pulumi:"escapeChar"`
	// When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).
	FirstRowAsHeader interface{} `pulumi:"firstRowAsHeader"`
	// The null value string. Type: string (or Expression with resultType string).
	NullValue interface{} `pulumi:"nullValue"`
	// The quote character. Type: string (or Expression with resultType string).
	QuoteChar interface{} `pulumi:"quoteChar"`
	// The row delimiter. Type: string (or Expression with resultType string).
	RowDelimiter interface{} `pulumi:"rowDelimiter"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer interface{} `pulumi:"serializer"`
	// The number of lines/rows to be skipped when parsing text files. The default value is 0. Type: integer (or Expression with resultType integer).
	SkipLineCount interface{} `pulumi:"skipLineCount"`
	// Treat empty column values in the text file as null. The default value is true. Type: boolean (or Expression with resultType boolean).
	TreatEmptyAsNull interface{} `pulumi:"treatEmptyAsNull"`
	// Type of dataset storage format.
	// Expected value is 'TextFormat'.
	Type string `pulumi:"type"`
}

// TextFormatResponseInput is an input type that accepts TextFormatResponseArgs and TextFormatResponseOutput values.
// You can construct a concrete instance of `TextFormatResponseInput` via:
//
//          TextFormatResponseArgs{...}
type TextFormatResponseInput interface {
	pulumi.Input

	ToTextFormatResponseOutput() TextFormatResponseOutput
	ToTextFormatResponseOutputWithContext(context.Context) TextFormatResponseOutput
}

// The data stored in text format.
type TextFormatResponseArgs struct {
	// The column delimiter. Type: string (or Expression with resultType string).
	ColumnDelimiter pulumi.Input `pulumi:"columnDelimiter"`
	// Deserializer. Type: string (or Expression with resultType string).
	Deserializer pulumi.Input `pulumi:"deserializer"`
	// The code page name of the preferred encoding. If miss, the default value is ΓÇ£utf-8ΓÇ¥, unless BOM denotes another Unicode encoding. Refer to the ΓÇ£NameΓÇ¥ column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
	EncodingName pulumi.Input `pulumi:"encodingName"`
	// The escape character. Type: string (or Expression with resultType string).
	EscapeChar pulumi.Input `pulumi:"escapeChar"`
	// When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).
	FirstRowAsHeader pulumi.Input `pulumi:"firstRowAsHeader"`
	// The null value string. Type: string (or Expression with resultType string).
	NullValue pulumi.Input `pulumi:"nullValue"`
	// The quote character. Type: string (or Expression with resultType string).
	QuoteChar pulumi.Input `pulumi:"quoteChar"`
	// The row delimiter. Type: string (or Expression with resultType string).
	RowDelimiter pulumi.Input `pulumi:"rowDelimiter"`
	// Serializer. Type: string (or Expression with resultType string).
	Serializer pulumi.Input `pulumi:"serializer"`
	// The number of lines/rows to be skipped when parsing text files. The default value is 0. Type: integer (or Expression with resultType integer).
	SkipLineCount pulumi.Input `pulumi:"skipLineCount"`
	// Treat empty column values in the text file as null. The default value is true. Type: boolean (or Expression with resultType boolean).
	TreatEmptyAsNull pulumi.Input `pulumi:"treatEmptyAsNull"`
	// Type of dataset storage format.
	// Expected value is 'TextFormat'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TextFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TextFormatResponse)(nil)).Elem()
}

func (i TextFormatResponseArgs) ToTextFormatResponseOutput() TextFormatResponseOutput {
	return i.ToTextFormatResponseOutputWithContext(context.Background())
}

func (i TextFormatResponseArgs) ToTextFormatResponseOutputWithContext(ctx context.Context) TextFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TextFormatResponseOutput)
}

// The data stored in text format.
type TextFormatResponseOutput struct{ *pulumi.OutputState }

func (TextFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TextFormatResponse)(nil)).Elem()
}

func (o TextFormatResponseOutput) ToTextFormatResponseOutput() TextFormatResponseOutput {
	return o
}

func (o TextFormatResponseOutput) ToTextFormatResponseOutputWithContext(ctx context.Context) TextFormatResponseOutput {
	return o
}

// The column delimiter. Type: string (or Expression with resultType string).
func (o TextFormatResponseOutput) ColumnDelimiter() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormatResponse) interface{} { return v.ColumnDelimiter }).(pulumi.AnyOutput)
}

// Deserializer. Type: string (or Expression with resultType string).
func (o TextFormatResponseOutput) Deserializer() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormatResponse) interface{} { return v.Deserializer }).(pulumi.AnyOutput)
}

// The code page name of the preferred encoding. If miss, the default value is ΓÇ£utf-8ΓÇ¥, unless BOM denotes another Unicode encoding. Refer to the ΓÇ£NameΓÇ¥ column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
func (o TextFormatResponseOutput) EncodingName() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormatResponse) interface{} { return v.EncodingName }).(pulumi.AnyOutput)
}

// The escape character. Type: string (or Expression with resultType string).
func (o TextFormatResponseOutput) EscapeChar() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormatResponse) interface{} { return v.EscapeChar }).(pulumi.AnyOutput)
}

// When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).
func (o TextFormatResponseOutput) FirstRowAsHeader() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormatResponse) interface{} { return v.FirstRowAsHeader }).(pulumi.AnyOutput)
}

// The null value string. Type: string (or Expression with resultType string).
func (o TextFormatResponseOutput) NullValue() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormatResponse) interface{} { return v.NullValue }).(pulumi.AnyOutput)
}

// The quote character. Type: string (or Expression with resultType string).
func (o TextFormatResponseOutput) QuoteChar() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormatResponse) interface{} { return v.QuoteChar }).(pulumi.AnyOutput)
}

// The row delimiter. Type: string (or Expression with resultType string).
func (o TextFormatResponseOutput) RowDelimiter() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormatResponse) interface{} { return v.RowDelimiter }).(pulumi.AnyOutput)
}

// Serializer. Type: string (or Expression with resultType string).
func (o TextFormatResponseOutput) Serializer() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormatResponse) interface{} { return v.Serializer }).(pulumi.AnyOutput)
}

// The number of lines/rows to be skipped when parsing text files. The default value is 0. Type: integer (or Expression with resultType integer).
func (o TextFormatResponseOutput) SkipLineCount() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormatResponse) interface{} { return v.SkipLineCount }).(pulumi.AnyOutput)
}

// Treat empty column values in the text file as null. The default value is true. Type: boolean (or Expression with resultType boolean).
func (o TextFormatResponseOutput) TreatEmptyAsNull() pulumi.AnyOutput {
	return o.ApplyT(func(v TextFormatResponse) interface{} { return v.TreatEmptyAsNull }).(pulumi.AnyOutput)
}

// Type of dataset storage format.
// Expected value is 'TextFormat'.
func (o TextFormatResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TextFormatResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Pipeline that needs to be triggered with the given parameters.
type TriggerPipelineReference struct {
	// Pipeline parameters.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// Pipeline reference.
	PipelineReference *PipelineReference `pulumi:"pipelineReference"`
}

// TriggerPipelineReferenceInput is an input type that accepts TriggerPipelineReferenceArgs and TriggerPipelineReferenceOutput values.
// You can construct a concrete instance of `TriggerPipelineReferenceInput` via:
//
//          TriggerPipelineReferenceArgs{...}
type TriggerPipelineReferenceInput interface {
	pulumi.Input

	ToTriggerPipelineReferenceOutput() TriggerPipelineReferenceOutput
	ToTriggerPipelineReferenceOutputWithContext(context.Context) TriggerPipelineReferenceOutput
}

// Pipeline that needs to be triggered with the given parameters.
type TriggerPipelineReferenceArgs struct {
	// Pipeline parameters.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// Pipeline reference.
	PipelineReference PipelineReferencePtrInput `pulumi:"pipelineReference"`
}

func (TriggerPipelineReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPipelineReference)(nil)).Elem()
}

func (i TriggerPipelineReferenceArgs) ToTriggerPipelineReferenceOutput() TriggerPipelineReferenceOutput {
	return i.ToTriggerPipelineReferenceOutputWithContext(context.Background())
}

func (i TriggerPipelineReferenceArgs) ToTriggerPipelineReferenceOutputWithContext(ctx context.Context) TriggerPipelineReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPipelineReferenceOutput)
}

// TriggerPipelineReferenceArrayInput is an input type that accepts TriggerPipelineReferenceArray and TriggerPipelineReferenceArrayOutput values.
// You can construct a concrete instance of `TriggerPipelineReferenceArrayInput` via:
//
//          TriggerPipelineReferenceArray{ TriggerPipelineReferenceArgs{...} }
type TriggerPipelineReferenceArrayInput interface {
	pulumi.Input

	ToTriggerPipelineReferenceArrayOutput() TriggerPipelineReferenceArrayOutput
	ToTriggerPipelineReferenceArrayOutputWithContext(context.Context) TriggerPipelineReferenceArrayOutput
}

type TriggerPipelineReferenceArray []TriggerPipelineReferenceInput

func (TriggerPipelineReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerPipelineReference)(nil)).Elem()
}

func (i TriggerPipelineReferenceArray) ToTriggerPipelineReferenceArrayOutput() TriggerPipelineReferenceArrayOutput {
	return i.ToTriggerPipelineReferenceArrayOutputWithContext(context.Background())
}

func (i TriggerPipelineReferenceArray) ToTriggerPipelineReferenceArrayOutputWithContext(ctx context.Context) TriggerPipelineReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPipelineReferenceArrayOutput)
}

// Pipeline that needs to be triggered with the given parameters.
type TriggerPipelineReferenceOutput struct{ *pulumi.OutputState }

func (TriggerPipelineReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPipelineReference)(nil)).Elem()
}

func (o TriggerPipelineReferenceOutput) ToTriggerPipelineReferenceOutput() TriggerPipelineReferenceOutput {
	return o
}

func (o TriggerPipelineReferenceOutput) ToTriggerPipelineReferenceOutputWithContext(ctx context.Context) TriggerPipelineReferenceOutput {
	return o
}

// Pipeline parameters.
func (o TriggerPipelineReferenceOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v TriggerPipelineReference) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

// Pipeline reference.
func (o TriggerPipelineReferenceOutput) PipelineReference() PipelineReferencePtrOutput {
	return o.ApplyT(func(v TriggerPipelineReference) *PipelineReference { return v.PipelineReference }).(PipelineReferencePtrOutput)
}

type TriggerPipelineReferenceArrayOutput struct{ *pulumi.OutputState }

func (TriggerPipelineReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerPipelineReference)(nil)).Elem()
}

func (o TriggerPipelineReferenceArrayOutput) ToTriggerPipelineReferenceArrayOutput() TriggerPipelineReferenceArrayOutput {
	return o
}

func (o TriggerPipelineReferenceArrayOutput) ToTriggerPipelineReferenceArrayOutputWithContext(ctx context.Context) TriggerPipelineReferenceArrayOutput {
	return o
}

func (o TriggerPipelineReferenceArrayOutput) Index(i pulumi.IntInput) TriggerPipelineReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerPipelineReference {
		return vs[0].([]TriggerPipelineReference)[vs[1].(int)]
	}).(TriggerPipelineReferenceOutput)
}

// Pipeline that needs to be triggered with the given parameters.
type TriggerPipelineReferenceResponse struct {
	// Pipeline parameters.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// Pipeline reference.
	PipelineReference *PipelineReferenceResponse `pulumi:"pipelineReference"`
}

// TriggerPipelineReferenceResponseInput is an input type that accepts TriggerPipelineReferenceResponseArgs and TriggerPipelineReferenceResponseOutput values.
// You can construct a concrete instance of `TriggerPipelineReferenceResponseInput` via:
//
//          TriggerPipelineReferenceResponseArgs{...}
type TriggerPipelineReferenceResponseInput interface {
	pulumi.Input

	ToTriggerPipelineReferenceResponseOutput() TriggerPipelineReferenceResponseOutput
	ToTriggerPipelineReferenceResponseOutputWithContext(context.Context) TriggerPipelineReferenceResponseOutput
}

// Pipeline that needs to be triggered with the given parameters.
type TriggerPipelineReferenceResponseArgs struct {
	// Pipeline parameters.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// Pipeline reference.
	PipelineReference PipelineReferenceResponsePtrInput `pulumi:"pipelineReference"`
}

func (TriggerPipelineReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPipelineReferenceResponse)(nil)).Elem()
}

func (i TriggerPipelineReferenceResponseArgs) ToTriggerPipelineReferenceResponseOutput() TriggerPipelineReferenceResponseOutput {
	return i.ToTriggerPipelineReferenceResponseOutputWithContext(context.Background())
}

func (i TriggerPipelineReferenceResponseArgs) ToTriggerPipelineReferenceResponseOutputWithContext(ctx context.Context) TriggerPipelineReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPipelineReferenceResponseOutput)
}

// TriggerPipelineReferenceResponseArrayInput is an input type that accepts TriggerPipelineReferenceResponseArray and TriggerPipelineReferenceResponseArrayOutput values.
// You can construct a concrete instance of `TriggerPipelineReferenceResponseArrayInput` via:
//
//          TriggerPipelineReferenceResponseArray{ TriggerPipelineReferenceResponseArgs{...} }
type TriggerPipelineReferenceResponseArrayInput interface {
	pulumi.Input

	ToTriggerPipelineReferenceResponseArrayOutput() TriggerPipelineReferenceResponseArrayOutput
	ToTriggerPipelineReferenceResponseArrayOutputWithContext(context.Context) TriggerPipelineReferenceResponseArrayOutput
}

type TriggerPipelineReferenceResponseArray []TriggerPipelineReferenceResponseInput

func (TriggerPipelineReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerPipelineReferenceResponse)(nil)).Elem()
}

func (i TriggerPipelineReferenceResponseArray) ToTriggerPipelineReferenceResponseArrayOutput() TriggerPipelineReferenceResponseArrayOutput {
	return i.ToTriggerPipelineReferenceResponseArrayOutputWithContext(context.Background())
}

func (i TriggerPipelineReferenceResponseArray) ToTriggerPipelineReferenceResponseArrayOutputWithContext(ctx context.Context) TriggerPipelineReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPipelineReferenceResponseArrayOutput)
}

// Pipeline that needs to be triggered with the given parameters.
type TriggerPipelineReferenceResponseOutput struct{ *pulumi.OutputState }

func (TriggerPipelineReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPipelineReferenceResponse)(nil)).Elem()
}

func (o TriggerPipelineReferenceResponseOutput) ToTriggerPipelineReferenceResponseOutput() TriggerPipelineReferenceResponseOutput {
	return o
}

func (o TriggerPipelineReferenceResponseOutput) ToTriggerPipelineReferenceResponseOutputWithContext(ctx context.Context) TriggerPipelineReferenceResponseOutput {
	return o
}

// Pipeline parameters.
func (o TriggerPipelineReferenceResponseOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v TriggerPipelineReferenceResponse) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

// Pipeline reference.
func (o TriggerPipelineReferenceResponseOutput) PipelineReference() PipelineReferenceResponsePtrOutput {
	return o.ApplyT(func(v TriggerPipelineReferenceResponse) *PipelineReferenceResponse { return v.PipelineReference }).(PipelineReferenceResponsePtrOutput)
}

type TriggerPipelineReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (TriggerPipelineReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerPipelineReferenceResponse)(nil)).Elem()
}

func (o TriggerPipelineReferenceResponseArrayOutput) ToTriggerPipelineReferenceResponseArrayOutput() TriggerPipelineReferenceResponseArrayOutput {
	return o
}

func (o TriggerPipelineReferenceResponseArrayOutput) ToTriggerPipelineReferenceResponseArrayOutputWithContext(ctx context.Context) TriggerPipelineReferenceResponseArrayOutput {
	return o
}

func (o TriggerPipelineReferenceResponseArrayOutput) Index(i pulumi.IntInput) TriggerPipelineReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerPipelineReferenceResponse {
		return vs[0].([]TriggerPipelineReferenceResponse)[vs[1].(int)]
	}).(TriggerPipelineReferenceResponseOutput)
}

// Trigger that schedules pipeline runs for all fixed time interval windows from a start time without gaps and also supports backfill scenarios (when start time is in the past).
type TumblingWindowTrigger struct {
	// Specifies how long the trigger waits past due time before triggering new run. It doesn't alter window start and end time. The default is 0. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	Delay interface{} `pulumi:"delay"`
	// Trigger description.
	Description *string `pulumi:"description"`
	// The end time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported.
	EndTime *string `pulumi:"endTime"`
	// The frequency of the time windows.
	Frequency string `pulumi:"frequency"`
	// The interval of the time windows. The minimum interval allowed is 15 Minutes.
	Interval int `pulumi:"interval"`
	// The max number of parallel time windows (ready for execution) for which a new run is triggered.
	MaxConcurrency int `pulumi:"maxConcurrency"`
	// Pipeline for which runs are created when an event is fired for trigger window that is ready.
	Pipeline TriggerPipelineReference `pulumi:"pipeline"`
	// Retry policy that will be applied for failed pipeline runs.
	RetryPolicy *RetryPolicy `pulumi:"retryPolicy"`
	// The start time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported.
	StartTime string `pulumi:"startTime"`
	// Trigger type.
	// Expected value is 'TumblingWindowTrigger'.
	Type string `pulumi:"type"`
}

// TumblingWindowTriggerInput is an input type that accepts TumblingWindowTriggerArgs and TumblingWindowTriggerOutput values.
// You can construct a concrete instance of `TumblingWindowTriggerInput` via:
//
//          TumblingWindowTriggerArgs{...}
type TumblingWindowTriggerInput interface {
	pulumi.Input

	ToTumblingWindowTriggerOutput() TumblingWindowTriggerOutput
	ToTumblingWindowTriggerOutputWithContext(context.Context) TumblingWindowTriggerOutput
}

// Trigger that schedules pipeline runs for all fixed time interval windows from a start time without gaps and also supports backfill scenarios (when start time is in the past).
type TumblingWindowTriggerArgs struct {
	// Specifies how long the trigger waits past due time before triggering new run. It doesn't alter window start and end time. The default is 0. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	Delay pulumi.Input `pulumi:"delay"`
	// Trigger description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The end time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// The frequency of the time windows.
	Frequency pulumi.StringInput `pulumi:"frequency"`
	// The interval of the time windows. The minimum interval allowed is 15 Minutes.
	Interval pulumi.IntInput `pulumi:"interval"`
	// The max number of parallel time windows (ready for execution) for which a new run is triggered.
	MaxConcurrency pulumi.IntInput `pulumi:"maxConcurrency"`
	// Pipeline for which runs are created when an event is fired for trigger window that is ready.
	Pipeline TriggerPipelineReferenceInput `pulumi:"pipeline"`
	// Retry policy that will be applied for failed pipeline runs.
	RetryPolicy RetryPolicyPtrInput `pulumi:"retryPolicy"`
	// The start time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Trigger type.
	// Expected value is 'TumblingWindowTrigger'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TumblingWindowTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TumblingWindowTrigger)(nil)).Elem()
}

func (i TumblingWindowTriggerArgs) ToTumblingWindowTriggerOutput() TumblingWindowTriggerOutput {
	return i.ToTumblingWindowTriggerOutputWithContext(context.Background())
}

func (i TumblingWindowTriggerArgs) ToTumblingWindowTriggerOutputWithContext(ctx context.Context) TumblingWindowTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TumblingWindowTriggerOutput)
}

// Trigger that schedules pipeline runs for all fixed time interval windows from a start time without gaps and also supports backfill scenarios (when start time is in the past).
type TumblingWindowTriggerOutput struct{ *pulumi.OutputState }

func (TumblingWindowTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TumblingWindowTrigger)(nil)).Elem()
}

func (o TumblingWindowTriggerOutput) ToTumblingWindowTriggerOutput() TumblingWindowTriggerOutput {
	return o
}

func (o TumblingWindowTriggerOutput) ToTumblingWindowTriggerOutputWithContext(ctx context.Context) TumblingWindowTriggerOutput {
	return o
}

// Specifies how long the trigger waits past due time before triggering new run. It doesn't alter window start and end time. The default is 0. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o TumblingWindowTriggerOutput) Delay() pulumi.AnyOutput {
	return o.ApplyT(func(v TumblingWindowTrigger) interface{} { return v.Delay }).(pulumi.AnyOutput)
}

// Trigger description.
func (o TumblingWindowTriggerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TumblingWindowTrigger) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The end time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported.
func (o TumblingWindowTriggerOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TumblingWindowTrigger) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The frequency of the time windows.
func (o TumblingWindowTriggerOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v TumblingWindowTrigger) string { return v.Frequency }).(pulumi.StringOutput)
}

// The interval of the time windows. The minimum interval allowed is 15 Minutes.
func (o TumblingWindowTriggerOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v TumblingWindowTrigger) int { return v.Interval }).(pulumi.IntOutput)
}

// The max number of parallel time windows (ready for execution) for which a new run is triggered.
func (o TumblingWindowTriggerOutput) MaxConcurrency() pulumi.IntOutput {
	return o.ApplyT(func(v TumblingWindowTrigger) int { return v.MaxConcurrency }).(pulumi.IntOutput)
}

// Pipeline for which runs are created when an event is fired for trigger window that is ready.
func (o TumblingWindowTriggerOutput) Pipeline() TriggerPipelineReferenceOutput {
	return o.ApplyT(func(v TumblingWindowTrigger) TriggerPipelineReference { return v.Pipeline }).(TriggerPipelineReferenceOutput)
}

// Retry policy that will be applied for failed pipeline runs.
func (o TumblingWindowTriggerOutput) RetryPolicy() RetryPolicyPtrOutput {
	return o.ApplyT(func(v TumblingWindowTrigger) *RetryPolicy { return v.RetryPolicy }).(RetryPolicyPtrOutput)
}

// The start time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported.
func (o TumblingWindowTriggerOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v TumblingWindowTrigger) string { return v.StartTime }).(pulumi.StringOutput)
}

// Trigger type.
// Expected value is 'TumblingWindowTrigger'.
func (o TumblingWindowTriggerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TumblingWindowTrigger) string { return v.Type }).(pulumi.StringOutput)
}

// Trigger that schedules pipeline runs for all fixed time interval windows from a start time without gaps and also supports backfill scenarios (when start time is in the past).
type TumblingWindowTriggerResponse struct {
	// Specifies how long the trigger waits past due time before triggering new run. It doesn't alter window start and end time. The default is 0. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	Delay interface{} `pulumi:"delay"`
	// Trigger description.
	Description *string `pulumi:"description"`
	// The end time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported.
	EndTime *string `pulumi:"endTime"`
	// The frequency of the time windows.
	Frequency string `pulumi:"frequency"`
	// The interval of the time windows. The minimum interval allowed is 15 Minutes.
	Interval int `pulumi:"interval"`
	// The max number of parallel time windows (ready for execution) for which a new run is triggered.
	MaxConcurrency int `pulumi:"maxConcurrency"`
	// Pipeline for which runs are created when an event is fired for trigger window that is ready.
	Pipeline TriggerPipelineReferenceResponse `pulumi:"pipeline"`
	// Retry policy that will be applied for failed pipeline runs.
	RetryPolicy *RetryPolicyResponse `pulumi:"retryPolicy"`
	// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
	RuntimeState string `pulumi:"runtimeState"`
	// The start time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported.
	StartTime string `pulumi:"startTime"`
	// Trigger type.
	// Expected value is 'TumblingWindowTrigger'.
	Type string `pulumi:"type"`
}

// TumblingWindowTriggerResponseInput is an input type that accepts TumblingWindowTriggerResponseArgs and TumblingWindowTriggerResponseOutput values.
// You can construct a concrete instance of `TumblingWindowTriggerResponseInput` via:
//
//          TumblingWindowTriggerResponseArgs{...}
type TumblingWindowTriggerResponseInput interface {
	pulumi.Input

	ToTumblingWindowTriggerResponseOutput() TumblingWindowTriggerResponseOutput
	ToTumblingWindowTriggerResponseOutputWithContext(context.Context) TumblingWindowTriggerResponseOutput
}

// Trigger that schedules pipeline runs for all fixed time interval windows from a start time without gaps and also supports backfill scenarios (when start time is in the past).
type TumblingWindowTriggerResponseArgs struct {
	// Specifies how long the trigger waits past due time before triggering new run. It doesn't alter window start and end time. The default is 0. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	Delay pulumi.Input `pulumi:"delay"`
	// Trigger description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The end time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// The frequency of the time windows.
	Frequency pulumi.StringInput `pulumi:"frequency"`
	// The interval of the time windows. The minimum interval allowed is 15 Minutes.
	Interval pulumi.IntInput `pulumi:"interval"`
	// The max number of parallel time windows (ready for execution) for which a new run is triggered.
	MaxConcurrency pulumi.IntInput `pulumi:"maxConcurrency"`
	// Pipeline for which runs are created when an event is fired for trigger window that is ready.
	Pipeline TriggerPipelineReferenceResponseInput `pulumi:"pipeline"`
	// Retry policy that will be applied for failed pipeline runs.
	RetryPolicy RetryPolicyResponsePtrInput `pulumi:"retryPolicy"`
	// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
	RuntimeState pulumi.StringInput `pulumi:"runtimeState"`
	// The start time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Trigger type.
	// Expected value is 'TumblingWindowTrigger'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TumblingWindowTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TumblingWindowTriggerResponse)(nil)).Elem()
}

func (i TumblingWindowTriggerResponseArgs) ToTumblingWindowTriggerResponseOutput() TumblingWindowTriggerResponseOutput {
	return i.ToTumblingWindowTriggerResponseOutputWithContext(context.Background())
}

func (i TumblingWindowTriggerResponseArgs) ToTumblingWindowTriggerResponseOutputWithContext(ctx context.Context) TumblingWindowTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TumblingWindowTriggerResponseOutput)
}

// Trigger that schedules pipeline runs for all fixed time interval windows from a start time without gaps and also supports backfill scenarios (when start time is in the past).
type TumblingWindowTriggerResponseOutput struct{ *pulumi.OutputState }

func (TumblingWindowTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TumblingWindowTriggerResponse)(nil)).Elem()
}

func (o TumblingWindowTriggerResponseOutput) ToTumblingWindowTriggerResponseOutput() TumblingWindowTriggerResponseOutput {
	return o
}

func (o TumblingWindowTriggerResponseOutput) ToTumblingWindowTriggerResponseOutputWithContext(ctx context.Context) TumblingWindowTriggerResponseOutput {
	return o
}

// Specifies how long the trigger waits past due time before triggering new run. It doesn't alter window start and end time. The default is 0. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o TumblingWindowTriggerResponseOutput) Delay() pulumi.AnyOutput {
	return o.ApplyT(func(v TumblingWindowTriggerResponse) interface{} { return v.Delay }).(pulumi.AnyOutput)
}

// Trigger description.
func (o TumblingWindowTriggerResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TumblingWindowTriggerResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The end time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported.
func (o TumblingWindowTriggerResponseOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TumblingWindowTriggerResponse) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The frequency of the time windows.
func (o TumblingWindowTriggerResponseOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v TumblingWindowTriggerResponse) string { return v.Frequency }).(pulumi.StringOutput)
}

// The interval of the time windows. The minimum interval allowed is 15 Minutes.
func (o TumblingWindowTriggerResponseOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v TumblingWindowTriggerResponse) int { return v.Interval }).(pulumi.IntOutput)
}

// The max number of parallel time windows (ready for execution) for which a new run is triggered.
func (o TumblingWindowTriggerResponseOutput) MaxConcurrency() pulumi.IntOutput {
	return o.ApplyT(func(v TumblingWindowTriggerResponse) int { return v.MaxConcurrency }).(pulumi.IntOutput)
}

// Pipeline for which runs are created when an event is fired for trigger window that is ready.
func (o TumblingWindowTriggerResponseOutput) Pipeline() TriggerPipelineReferenceResponseOutput {
	return o.ApplyT(func(v TumblingWindowTriggerResponse) TriggerPipelineReferenceResponse { return v.Pipeline }).(TriggerPipelineReferenceResponseOutput)
}

// Retry policy that will be applied for failed pipeline runs.
func (o TumblingWindowTriggerResponseOutput) RetryPolicy() RetryPolicyResponsePtrOutput {
	return o.ApplyT(func(v TumblingWindowTriggerResponse) *RetryPolicyResponse { return v.RetryPolicy }).(RetryPolicyResponsePtrOutput)
}

// Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
func (o TumblingWindowTriggerResponseOutput) RuntimeState() pulumi.StringOutput {
	return o.ApplyT(func(v TumblingWindowTriggerResponse) string { return v.RuntimeState }).(pulumi.StringOutput)
}

// The start time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported.
func (o TumblingWindowTriggerResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v TumblingWindowTriggerResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Trigger type.
// Expected value is 'TumblingWindowTrigger'.
func (o TumblingWindowTriggerResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TumblingWindowTriggerResponse) string { return v.Type }).(pulumi.StringOutput)
}

// This activity executes inner activities until the specified boolean expression results to true or timeout is reached, whichever is earlier.
type UntilActivity struct {
	// List of activities to execute.
	Activities []interface{} `pulumi:"activities"`
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// An expression that would evaluate to Boolean. The loop will continue until this expression evaluates to true
	Expression Expression `pulumi:"expression"`
	// Activity name.
	Name string `pulumi:"name"`
	// Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])). Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	Timeout interface{} `pulumi:"timeout"`
	// Type of activity.
	// Expected value is 'Container'.
	Type string `pulumi:"type"`
}

// UntilActivityInput is an input type that accepts UntilActivityArgs and UntilActivityOutput values.
// You can construct a concrete instance of `UntilActivityInput` via:
//
//          UntilActivityArgs{...}
type UntilActivityInput interface {
	pulumi.Input

	ToUntilActivityOutput() UntilActivityOutput
	ToUntilActivityOutputWithContext(context.Context) UntilActivityOutput
}

// This activity executes inner activities until the specified boolean expression results to true or timeout is reached, whichever is earlier.
type UntilActivityArgs struct {
	// List of activities to execute.
	Activities pulumi.ArrayInput `pulumi:"activities"`
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// An expression that would evaluate to Boolean. The loop will continue until this expression evaluates to true
	Expression ExpressionInput `pulumi:"expression"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])). Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	Timeout pulumi.Input `pulumi:"timeout"`
	// Type of activity.
	// Expected value is 'Container'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (UntilActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UntilActivity)(nil)).Elem()
}

func (i UntilActivityArgs) ToUntilActivityOutput() UntilActivityOutput {
	return i.ToUntilActivityOutputWithContext(context.Background())
}

func (i UntilActivityArgs) ToUntilActivityOutputWithContext(ctx context.Context) UntilActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UntilActivityOutput)
}

// This activity executes inner activities until the specified boolean expression results to true or timeout is reached, whichever is earlier.
type UntilActivityOutput struct{ *pulumi.OutputState }

func (UntilActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UntilActivity)(nil)).Elem()
}

func (o UntilActivityOutput) ToUntilActivityOutput() UntilActivityOutput {
	return o
}

func (o UntilActivityOutput) ToUntilActivityOutputWithContext(ctx context.Context) UntilActivityOutput {
	return o
}

// List of activities to execute.
func (o UntilActivityOutput) Activities() pulumi.ArrayOutput {
	return o.ApplyT(func(v UntilActivity) []interface{} { return v.Activities }).(pulumi.ArrayOutput)
}

// Activity depends on condition.
func (o UntilActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v UntilActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o UntilActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UntilActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// An expression that would evaluate to Boolean. The loop will continue until this expression evaluates to true
func (o UntilActivityOutput) Expression() ExpressionOutput {
	return o.ApplyT(func(v UntilActivity) Expression { return v.Expression }).(ExpressionOutput)
}

// Activity name.
func (o UntilActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UntilActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])). Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o UntilActivityOutput) Timeout() pulumi.AnyOutput {
	return o.ApplyT(func(v UntilActivity) interface{} { return v.Timeout }).(pulumi.AnyOutput)
}

// Type of activity.
// Expected value is 'Container'.
func (o UntilActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v UntilActivity) string { return v.Type }).(pulumi.StringOutput)
}

// This activity executes inner activities until the specified boolean expression results to true or timeout is reached, whichever is earlier.
type UntilActivityResponse struct {
	// List of activities to execute.
	Activities []interface{} `pulumi:"activities"`
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// An expression that would evaluate to Boolean. The loop will continue until this expression evaluates to true
	Expression ExpressionResponse `pulumi:"expression"`
	// Activity name.
	Name string `pulumi:"name"`
	// Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])). Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	Timeout interface{} `pulumi:"timeout"`
	// Type of activity.
	// Expected value is 'Container'.
	Type string `pulumi:"type"`
}

// UntilActivityResponseInput is an input type that accepts UntilActivityResponseArgs and UntilActivityResponseOutput values.
// You can construct a concrete instance of `UntilActivityResponseInput` via:
//
//          UntilActivityResponseArgs{...}
type UntilActivityResponseInput interface {
	pulumi.Input

	ToUntilActivityResponseOutput() UntilActivityResponseOutput
	ToUntilActivityResponseOutputWithContext(context.Context) UntilActivityResponseOutput
}

// This activity executes inner activities until the specified boolean expression results to true or timeout is reached, whichever is earlier.
type UntilActivityResponseArgs struct {
	// List of activities to execute.
	Activities pulumi.ArrayInput `pulumi:"activities"`
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// An expression that would evaluate to Boolean. The loop will continue until this expression evaluates to true
	Expression ExpressionResponseInput `pulumi:"expression"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])). Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	Timeout pulumi.Input `pulumi:"timeout"`
	// Type of activity.
	// Expected value is 'Container'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (UntilActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UntilActivityResponse)(nil)).Elem()
}

func (i UntilActivityResponseArgs) ToUntilActivityResponseOutput() UntilActivityResponseOutput {
	return i.ToUntilActivityResponseOutputWithContext(context.Background())
}

func (i UntilActivityResponseArgs) ToUntilActivityResponseOutputWithContext(ctx context.Context) UntilActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UntilActivityResponseOutput)
}

// This activity executes inner activities until the specified boolean expression results to true or timeout is reached, whichever is earlier.
type UntilActivityResponseOutput struct{ *pulumi.OutputState }

func (UntilActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UntilActivityResponse)(nil)).Elem()
}

func (o UntilActivityResponseOutput) ToUntilActivityResponseOutput() UntilActivityResponseOutput {
	return o
}

func (o UntilActivityResponseOutput) ToUntilActivityResponseOutputWithContext(ctx context.Context) UntilActivityResponseOutput {
	return o
}

// List of activities to execute.
func (o UntilActivityResponseOutput) Activities() pulumi.ArrayOutput {
	return o.ApplyT(func(v UntilActivityResponse) []interface{} { return v.Activities }).(pulumi.ArrayOutput)
}

// Activity depends on condition.
func (o UntilActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v UntilActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o UntilActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UntilActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// An expression that would evaluate to Boolean. The loop will continue until this expression evaluates to true
func (o UntilActivityResponseOutput) Expression() ExpressionResponseOutput {
	return o.ApplyT(func(v UntilActivityResponse) ExpressionResponse { return v.Expression }).(ExpressionResponseOutput)
}

// Activity name.
func (o UntilActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UntilActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])). Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o UntilActivityResponseOutput) Timeout() pulumi.AnyOutput {
	return o.ApplyT(func(v UntilActivityResponse) interface{} { return v.Timeout }).(pulumi.AnyOutput)
}

// Type of activity.
// Expected value is 'Container'.
func (o UntilActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v UntilActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Vertica linked service.
type VerticaLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Vertica'.
	Type string `pulumi:"type"`
}

// VerticaLinkedServiceInput is an input type that accepts VerticaLinkedServiceArgs and VerticaLinkedServiceOutput values.
// You can construct a concrete instance of `VerticaLinkedServiceInput` via:
//
//          VerticaLinkedServiceArgs{...}
type VerticaLinkedServiceInput interface {
	pulumi.Input

	ToVerticaLinkedServiceOutput() VerticaLinkedServiceOutput
	ToVerticaLinkedServiceOutputWithContext(context.Context) VerticaLinkedServiceOutput
}

// Vertica linked service.
type VerticaLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Vertica'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VerticaLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VerticaLinkedService)(nil)).Elem()
}

func (i VerticaLinkedServiceArgs) ToVerticaLinkedServiceOutput() VerticaLinkedServiceOutput {
	return i.ToVerticaLinkedServiceOutputWithContext(context.Background())
}

func (i VerticaLinkedServiceArgs) ToVerticaLinkedServiceOutputWithContext(ctx context.Context) VerticaLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VerticaLinkedServiceOutput)
}

// Vertica linked service.
type VerticaLinkedServiceOutput struct{ *pulumi.OutputState }

func (VerticaLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VerticaLinkedService)(nil)).Elem()
}

func (o VerticaLinkedServiceOutput) ToVerticaLinkedServiceOutput() VerticaLinkedServiceOutput {
	return o
}

func (o VerticaLinkedServiceOutput) ToVerticaLinkedServiceOutputWithContext(ctx context.Context) VerticaLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o VerticaLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v VerticaLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o VerticaLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v VerticaLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o VerticaLinkedServiceOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v VerticaLinkedService) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o VerticaLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VerticaLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o VerticaLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v VerticaLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o VerticaLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v VerticaLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'Vertica'.
func (o VerticaLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VerticaLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Vertica linked service.
type VerticaLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString interface{} `pulumi:"connectionString"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Vertica'.
	Type string `pulumi:"type"`
}

// VerticaLinkedServiceResponseInput is an input type that accepts VerticaLinkedServiceResponseArgs and VerticaLinkedServiceResponseOutput values.
// You can construct a concrete instance of `VerticaLinkedServiceResponseInput` via:
//
//          VerticaLinkedServiceResponseArgs{...}
type VerticaLinkedServiceResponseInput interface {
	pulumi.Input

	ToVerticaLinkedServiceResponseOutput() VerticaLinkedServiceResponseOutput
	ToVerticaLinkedServiceResponseOutputWithContext(context.Context) VerticaLinkedServiceResponseOutput
}

// Vertica linked service.
type VerticaLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
	ConnectionString pulumi.Input `pulumi:"connectionString"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Vertica'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VerticaLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VerticaLinkedServiceResponse)(nil)).Elem()
}

func (i VerticaLinkedServiceResponseArgs) ToVerticaLinkedServiceResponseOutput() VerticaLinkedServiceResponseOutput {
	return i.ToVerticaLinkedServiceResponseOutputWithContext(context.Background())
}

func (i VerticaLinkedServiceResponseArgs) ToVerticaLinkedServiceResponseOutputWithContext(ctx context.Context) VerticaLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VerticaLinkedServiceResponseOutput)
}

// Vertica linked service.
type VerticaLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (VerticaLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VerticaLinkedServiceResponse)(nil)).Elem()
}

func (o VerticaLinkedServiceResponseOutput) ToVerticaLinkedServiceResponseOutput() VerticaLinkedServiceResponseOutput {
	return o
}

func (o VerticaLinkedServiceResponseOutput) ToVerticaLinkedServiceResponseOutputWithContext(ctx context.Context) VerticaLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o VerticaLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v VerticaLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o VerticaLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v VerticaLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
func (o VerticaLinkedServiceResponseOutput) ConnectionString() pulumi.AnyOutput {
	return o.ApplyT(func(v VerticaLinkedServiceResponse) interface{} { return v.ConnectionString }).(pulumi.AnyOutput)
}

// Linked service description.
func (o VerticaLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VerticaLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o VerticaLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v VerticaLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o VerticaLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v VerticaLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'Vertica'.
func (o VerticaLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VerticaLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Vertica source.
type VerticaSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'VerticaSource'.
	Type string `pulumi:"type"`
}

// VerticaSourceInput is an input type that accepts VerticaSourceArgs and VerticaSourceOutput values.
// You can construct a concrete instance of `VerticaSourceInput` via:
//
//          VerticaSourceArgs{...}
type VerticaSourceInput interface {
	pulumi.Input

	ToVerticaSourceOutput() VerticaSourceOutput
	ToVerticaSourceOutputWithContext(context.Context) VerticaSourceOutput
}

// A copy activity Vertica source.
type VerticaSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'VerticaSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VerticaSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VerticaSource)(nil)).Elem()
}

func (i VerticaSourceArgs) ToVerticaSourceOutput() VerticaSourceOutput {
	return i.ToVerticaSourceOutputWithContext(context.Background())
}

func (i VerticaSourceArgs) ToVerticaSourceOutputWithContext(ctx context.Context) VerticaSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VerticaSourceOutput)
}

// A copy activity Vertica source.
type VerticaSourceOutput struct{ *pulumi.OutputState }

func (VerticaSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VerticaSource)(nil)).Elem()
}

func (o VerticaSourceOutput) ToVerticaSourceOutput() VerticaSourceOutput {
	return o
}

func (o VerticaSourceOutput) ToVerticaSourceOutputWithContext(ctx context.Context) VerticaSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o VerticaSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v VerticaSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o VerticaSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v VerticaSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o VerticaSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v VerticaSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'VerticaSource'.
func (o VerticaSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VerticaSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Vertica source.
type VerticaSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'VerticaSource'.
	Type string `pulumi:"type"`
}

// VerticaSourceResponseInput is an input type that accepts VerticaSourceResponseArgs and VerticaSourceResponseOutput values.
// You can construct a concrete instance of `VerticaSourceResponseInput` via:
//
//          VerticaSourceResponseArgs{...}
type VerticaSourceResponseInput interface {
	pulumi.Input

	ToVerticaSourceResponseOutput() VerticaSourceResponseOutput
	ToVerticaSourceResponseOutputWithContext(context.Context) VerticaSourceResponseOutput
}

// A copy activity Vertica source.
type VerticaSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'VerticaSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VerticaSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VerticaSourceResponse)(nil)).Elem()
}

func (i VerticaSourceResponseArgs) ToVerticaSourceResponseOutput() VerticaSourceResponseOutput {
	return i.ToVerticaSourceResponseOutputWithContext(context.Background())
}

func (i VerticaSourceResponseArgs) ToVerticaSourceResponseOutputWithContext(ctx context.Context) VerticaSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VerticaSourceResponseOutput)
}

// A copy activity Vertica source.
type VerticaSourceResponseOutput struct{ *pulumi.OutputState }

func (VerticaSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VerticaSourceResponse)(nil)).Elem()
}

func (o VerticaSourceResponseOutput) ToVerticaSourceResponseOutput() VerticaSourceResponseOutput {
	return o
}

func (o VerticaSourceResponseOutput) ToVerticaSourceResponseOutputWithContext(ctx context.Context) VerticaSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o VerticaSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v VerticaSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o VerticaSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v VerticaSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o VerticaSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v VerticaSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'VerticaSource'.
func (o VerticaSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VerticaSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Vertica dataset.
type VerticaTableDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'VerticaTable'.
	Type string `pulumi:"type"`
}

// VerticaTableDatasetInput is an input type that accepts VerticaTableDatasetArgs and VerticaTableDatasetOutput values.
// You can construct a concrete instance of `VerticaTableDatasetInput` via:
//
//          VerticaTableDatasetArgs{...}
type VerticaTableDatasetInput interface {
	pulumi.Input

	ToVerticaTableDatasetOutput() VerticaTableDatasetOutput
	ToVerticaTableDatasetOutputWithContext(context.Context) VerticaTableDatasetOutput
}

// Vertica dataset.
type VerticaTableDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'VerticaTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VerticaTableDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VerticaTableDataset)(nil)).Elem()
}

func (i VerticaTableDatasetArgs) ToVerticaTableDatasetOutput() VerticaTableDatasetOutput {
	return i.ToVerticaTableDatasetOutputWithContext(context.Background())
}

func (i VerticaTableDatasetArgs) ToVerticaTableDatasetOutputWithContext(ctx context.Context) VerticaTableDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VerticaTableDatasetOutput)
}

// Vertica dataset.
type VerticaTableDatasetOutput struct{ *pulumi.OutputState }

func (VerticaTableDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VerticaTableDataset)(nil)).Elem()
}

func (o VerticaTableDatasetOutput) ToVerticaTableDatasetOutput() VerticaTableDatasetOutput {
	return o
}

func (o VerticaTableDatasetOutput) ToVerticaTableDatasetOutputWithContext(ctx context.Context) VerticaTableDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o VerticaTableDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v VerticaTableDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o VerticaTableDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VerticaTableDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o VerticaTableDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v VerticaTableDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o VerticaTableDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v VerticaTableDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o VerticaTableDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v VerticaTableDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'VerticaTable'.
func (o VerticaTableDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VerticaTableDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Vertica dataset.
type VerticaTableDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'VerticaTable'.
	Type string `pulumi:"type"`
}

// VerticaTableDatasetResponseInput is an input type that accepts VerticaTableDatasetResponseArgs and VerticaTableDatasetResponseOutput values.
// You can construct a concrete instance of `VerticaTableDatasetResponseInput` via:
//
//          VerticaTableDatasetResponseArgs{...}
type VerticaTableDatasetResponseInput interface {
	pulumi.Input

	ToVerticaTableDatasetResponseOutput() VerticaTableDatasetResponseOutput
	ToVerticaTableDatasetResponseOutputWithContext(context.Context) VerticaTableDatasetResponseOutput
}

// Vertica dataset.
type VerticaTableDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'VerticaTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VerticaTableDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VerticaTableDatasetResponse)(nil)).Elem()
}

func (i VerticaTableDatasetResponseArgs) ToVerticaTableDatasetResponseOutput() VerticaTableDatasetResponseOutput {
	return i.ToVerticaTableDatasetResponseOutputWithContext(context.Background())
}

func (i VerticaTableDatasetResponseArgs) ToVerticaTableDatasetResponseOutputWithContext(ctx context.Context) VerticaTableDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VerticaTableDatasetResponseOutput)
}

// Vertica dataset.
type VerticaTableDatasetResponseOutput struct{ *pulumi.OutputState }

func (VerticaTableDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VerticaTableDatasetResponse)(nil)).Elem()
}

func (o VerticaTableDatasetResponseOutput) ToVerticaTableDatasetResponseOutput() VerticaTableDatasetResponseOutput {
	return o
}

func (o VerticaTableDatasetResponseOutput) ToVerticaTableDatasetResponseOutputWithContext(ctx context.Context) VerticaTableDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o VerticaTableDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v VerticaTableDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o VerticaTableDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VerticaTableDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o VerticaTableDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v VerticaTableDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o VerticaTableDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v VerticaTableDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o VerticaTableDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v VerticaTableDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'VerticaTable'.
func (o VerticaTableDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VerticaTableDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// This activity suspends pipeline execution for the specified interval.
type WaitActivity struct {
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Activity name.
	Name string `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type string `pulumi:"type"`
	// Duration in seconds.
	WaitTimeInSeconds int `pulumi:"waitTimeInSeconds"`
}

// WaitActivityInput is an input type that accepts WaitActivityArgs and WaitActivityOutput values.
// You can construct a concrete instance of `WaitActivityInput` via:
//
//          WaitActivityArgs{...}
type WaitActivityInput interface {
	pulumi.Input

	ToWaitActivityOutput() WaitActivityOutput
	ToWaitActivityOutputWithContext(context.Context) WaitActivityOutput
}

// This activity suspends pipeline execution for the specified interval.
type WaitActivityArgs struct {
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type pulumi.StringInput `pulumi:"type"`
	// Duration in seconds.
	WaitTimeInSeconds pulumi.IntInput `pulumi:"waitTimeInSeconds"`
}

func (WaitActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitActivity)(nil)).Elem()
}

func (i WaitActivityArgs) ToWaitActivityOutput() WaitActivityOutput {
	return i.ToWaitActivityOutputWithContext(context.Background())
}

func (i WaitActivityArgs) ToWaitActivityOutputWithContext(ctx context.Context) WaitActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitActivityOutput)
}

// This activity suspends pipeline execution for the specified interval.
type WaitActivityOutput struct{ *pulumi.OutputState }

func (WaitActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitActivity)(nil)).Elem()
}

func (o WaitActivityOutput) ToWaitActivityOutput() WaitActivityOutput {
	return o
}

func (o WaitActivityOutput) ToWaitActivityOutputWithContext(ctx context.Context) WaitActivityOutput {
	return o
}

// Activity depends on condition.
func (o WaitActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v WaitActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o WaitActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WaitActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Activity name.
func (o WaitActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WaitActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Type of activity.
// Expected value is 'Container'.
func (o WaitActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WaitActivity) string { return v.Type }).(pulumi.StringOutput)
}

// Duration in seconds.
func (o WaitActivityOutput) WaitTimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v WaitActivity) int { return v.WaitTimeInSeconds }).(pulumi.IntOutput)
}

// This activity suspends pipeline execution for the specified interval.
type WaitActivityResponse struct {
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Activity name.
	Name string `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type string `pulumi:"type"`
	// Duration in seconds.
	WaitTimeInSeconds int `pulumi:"waitTimeInSeconds"`
}

// WaitActivityResponseInput is an input type that accepts WaitActivityResponseArgs and WaitActivityResponseOutput values.
// You can construct a concrete instance of `WaitActivityResponseInput` via:
//
//          WaitActivityResponseArgs{...}
type WaitActivityResponseInput interface {
	pulumi.Input

	ToWaitActivityResponseOutput() WaitActivityResponseOutput
	ToWaitActivityResponseOutputWithContext(context.Context) WaitActivityResponseOutput
}

// This activity suspends pipeline execution for the specified interval.
type WaitActivityResponseArgs struct {
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of activity.
	// Expected value is 'Container'.
	Type pulumi.StringInput `pulumi:"type"`
	// Duration in seconds.
	WaitTimeInSeconds pulumi.IntInput `pulumi:"waitTimeInSeconds"`
}

func (WaitActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitActivityResponse)(nil)).Elem()
}

func (i WaitActivityResponseArgs) ToWaitActivityResponseOutput() WaitActivityResponseOutput {
	return i.ToWaitActivityResponseOutputWithContext(context.Background())
}

func (i WaitActivityResponseArgs) ToWaitActivityResponseOutputWithContext(ctx context.Context) WaitActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitActivityResponseOutput)
}

// This activity suspends pipeline execution for the specified interval.
type WaitActivityResponseOutput struct{ *pulumi.OutputState }

func (WaitActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitActivityResponse)(nil)).Elem()
}

func (o WaitActivityResponseOutput) ToWaitActivityResponseOutput() WaitActivityResponseOutput {
	return o
}

func (o WaitActivityResponseOutput) ToWaitActivityResponseOutputWithContext(ctx context.Context) WaitActivityResponseOutput {
	return o
}

// Activity depends on condition.
func (o WaitActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v WaitActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o WaitActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WaitActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Activity name.
func (o WaitActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WaitActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Type of activity.
// Expected value is 'Container'.
func (o WaitActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WaitActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Duration in seconds.
func (o WaitActivityResponseOutput) WaitTimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v WaitActivityResponse) int { return v.WaitTimeInSeconds }).(pulumi.IntOutput)
}

// Web activity.
type WebActivity struct {
	// Authentication method used for calling the endpoint.
	Authentication *WebActivityAuthentication `pulumi:"authentication"`
	// Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).
	Body interface{} `pulumi:"body"`
	// List of datasets passed to web endpoint.
	Datasets []DatasetReference `pulumi:"datasets"`
	// Activity depends on condition.
	DependsOn []ActivityDependency `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string).
	Headers interface{} `pulumi:"headers"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReference `pulumi:"linkedServiceName"`
	// List of linked services passed to web endpoint.
	LinkedServices []LinkedServiceReference `pulumi:"linkedServices"`
	// Rest API method for target endpoint.
	Method string `pulumi:"method"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicy `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
	// Web activity target endpoint and path. Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
}

// WebActivityInput is an input type that accepts WebActivityArgs and WebActivityOutput values.
// You can construct a concrete instance of `WebActivityInput` via:
//
//          WebActivityArgs{...}
type WebActivityInput interface {
	pulumi.Input

	ToWebActivityOutput() WebActivityOutput
	ToWebActivityOutputWithContext(context.Context) WebActivityOutput
}

// Web activity.
type WebActivityArgs struct {
	// Authentication method used for calling the endpoint.
	Authentication WebActivityAuthenticationPtrInput `pulumi:"authentication"`
	// Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).
	Body pulumi.Input `pulumi:"body"`
	// List of datasets passed to web endpoint.
	Datasets DatasetReferenceArrayInput `pulumi:"datasets"`
	// Activity depends on condition.
	DependsOn ActivityDependencyArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string).
	Headers pulumi.Input `pulumi:"headers"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferencePtrInput `pulumi:"linkedServiceName"`
	// List of linked services passed to web endpoint.
	LinkedServices LinkedServiceReferenceArrayInput `pulumi:"linkedServices"`
	// Rest API method for target endpoint.
	Method pulumi.StringInput `pulumi:"method"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyPtrInput `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
	// Web activity target endpoint and path. Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
}

func (WebActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebActivity)(nil)).Elem()
}

func (i WebActivityArgs) ToWebActivityOutput() WebActivityOutput {
	return i.ToWebActivityOutputWithContext(context.Background())
}

func (i WebActivityArgs) ToWebActivityOutputWithContext(ctx context.Context) WebActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebActivityOutput)
}

// Web activity.
type WebActivityOutput struct{ *pulumi.OutputState }

func (WebActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebActivity)(nil)).Elem()
}

func (o WebActivityOutput) ToWebActivityOutput() WebActivityOutput {
	return o
}

func (o WebActivityOutput) ToWebActivityOutputWithContext(ctx context.Context) WebActivityOutput {
	return o
}

// Authentication method used for calling the endpoint.
func (o WebActivityOutput) Authentication() WebActivityAuthenticationPtrOutput {
	return o.ApplyT(func(v WebActivity) *WebActivityAuthentication { return v.Authentication }).(WebActivityAuthenticationPtrOutput)
}

// Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).
func (o WebActivityOutput) Body() pulumi.AnyOutput {
	return o.ApplyT(func(v WebActivity) interface{} { return v.Body }).(pulumi.AnyOutput)
}

// List of datasets passed to web endpoint.
func (o WebActivityOutput) Datasets() DatasetReferenceArrayOutput {
	return o.ApplyT(func(v WebActivity) []DatasetReference { return v.Datasets }).(DatasetReferenceArrayOutput)
}

// Activity depends on condition.
func (o WebActivityOutput) DependsOn() ActivityDependencyArrayOutput {
	return o.ApplyT(func(v WebActivity) []ActivityDependency { return v.DependsOn }).(ActivityDependencyArrayOutput)
}

// Activity description.
func (o WebActivityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebActivity) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string).
func (o WebActivityOutput) Headers() pulumi.AnyOutput {
	return o.ApplyT(func(v WebActivity) interface{} { return v.Headers }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o WebActivityOutput) LinkedServiceName() LinkedServiceReferencePtrOutput {
	return o.ApplyT(func(v WebActivity) *LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferencePtrOutput)
}

// List of linked services passed to web endpoint.
func (o WebActivityOutput) LinkedServices() LinkedServiceReferenceArrayOutput {
	return o.ApplyT(func(v WebActivity) []LinkedServiceReference { return v.LinkedServices }).(LinkedServiceReferenceArrayOutput)
}

// Rest API method for target endpoint.
func (o WebActivityOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v WebActivity) string { return v.Method }).(pulumi.StringOutput)
}

// Activity name.
func (o WebActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebActivity) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o WebActivityOutput) Policy() ActivityPolicyPtrOutput {
	return o.ApplyT(func(v WebActivity) *ActivityPolicy { return v.Policy }).(ActivityPolicyPtrOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o WebActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebActivity) string { return v.Type }).(pulumi.StringOutput)
}

// Web activity target endpoint and path. Type: string (or Expression with resultType string).
func (o WebActivityOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v WebActivity) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// Web activity authentication properties.
type WebActivityAuthentication struct {
	// Password for the PFX file or basic authentication.
	Password *SecureString `pulumi:"password"`
	// Base64-encoded contents of a PFX file.
	Pfx *SecureString `pulumi:"pfx"`
	// Resource for which Azure Auth token will be requested when using MSI Authentication.
	Resource *string `pulumi:"resource"`
	// Web activity authentication (Basic/ClientCertificate/MSI)
	Type string `pulumi:"type"`
	// Web activity authentication user name for basic authentication.
	Username *string `pulumi:"username"`
}

// WebActivityAuthenticationInput is an input type that accepts WebActivityAuthenticationArgs and WebActivityAuthenticationOutput values.
// You can construct a concrete instance of `WebActivityAuthenticationInput` via:
//
//          WebActivityAuthenticationArgs{...}
type WebActivityAuthenticationInput interface {
	pulumi.Input

	ToWebActivityAuthenticationOutput() WebActivityAuthenticationOutput
	ToWebActivityAuthenticationOutputWithContext(context.Context) WebActivityAuthenticationOutput
}

// Web activity authentication properties.
type WebActivityAuthenticationArgs struct {
	// Password for the PFX file or basic authentication.
	Password SecureStringPtrInput `pulumi:"password"`
	// Base64-encoded contents of a PFX file.
	Pfx SecureStringPtrInput `pulumi:"pfx"`
	// Resource for which Azure Auth token will be requested when using MSI Authentication.
	Resource pulumi.StringPtrInput `pulumi:"resource"`
	// Web activity authentication (Basic/ClientCertificate/MSI)
	Type pulumi.StringInput `pulumi:"type"`
	// Web activity authentication user name for basic authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (WebActivityAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebActivityAuthentication)(nil)).Elem()
}

func (i WebActivityAuthenticationArgs) ToWebActivityAuthenticationOutput() WebActivityAuthenticationOutput {
	return i.ToWebActivityAuthenticationOutputWithContext(context.Background())
}

func (i WebActivityAuthenticationArgs) ToWebActivityAuthenticationOutputWithContext(ctx context.Context) WebActivityAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebActivityAuthenticationOutput)
}

func (i WebActivityAuthenticationArgs) ToWebActivityAuthenticationPtrOutput() WebActivityAuthenticationPtrOutput {
	return i.ToWebActivityAuthenticationPtrOutputWithContext(context.Background())
}

func (i WebActivityAuthenticationArgs) ToWebActivityAuthenticationPtrOutputWithContext(ctx context.Context) WebActivityAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebActivityAuthenticationOutput).ToWebActivityAuthenticationPtrOutputWithContext(ctx)
}

// WebActivityAuthenticationPtrInput is an input type that accepts WebActivityAuthenticationArgs, WebActivityAuthenticationPtr and WebActivityAuthenticationPtrOutput values.
// You can construct a concrete instance of `WebActivityAuthenticationPtrInput` via:
//
//          WebActivityAuthenticationArgs{...}
//
//  or:
//
//          nil
type WebActivityAuthenticationPtrInput interface {
	pulumi.Input

	ToWebActivityAuthenticationPtrOutput() WebActivityAuthenticationPtrOutput
	ToWebActivityAuthenticationPtrOutputWithContext(context.Context) WebActivityAuthenticationPtrOutput
}

type webActivityAuthenticationPtrType WebActivityAuthenticationArgs

func WebActivityAuthenticationPtr(v *WebActivityAuthenticationArgs) WebActivityAuthenticationPtrInput {
	return (*webActivityAuthenticationPtrType)(v)
}

func (*webActivityAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebActivityAuthentication)(nil)).Elem()
}

func (i *webActivityAuthenticationPtrType) ToWebActivityAuthenticationPtrOutput() WebActivityAuthenticationPtrOutput {
	return i.ToWebActivityAuthenticationPtrOutputWithContext(context.Background())
}

func (i *webActivityAuthenticationPtrType) ToWebActivityAuthenticationPtrOutputWithContext(ctx context.Context) WebActivityAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebActivityAuthenticationPtrOutput)
}

// Web activity authentication properties.
type WebActivityAuthenticationOutput struct{ *pulumi.OutputState }

func (WebActivityAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebActivityAuthentication)(nil)).Elem()
}

func (o WebActivityAuthenticationOutput) ToWebActivityAuthenticationOutput() WebActivityAuthenticationOutput {
	return o
}

func (o WebActivityAuthenticationOutput) ToWebActivityAuthenticationOutputWithContext(ctx context.Context) WebActivityAuthenticationOutput {
	return o
}

func (o WebActivityAuthenticationOutput) ToWebActivityAuthenticationPtrOutput() WebActivityAuthenticationPtrOutput {
	return o.ToWebActivityAuthenticationPtrOutputWithContext(context.Background())
}

func (o WebActivityAuthenticationOutput) ToWebActivityAuthenticationPtrOutputWithContext(ctx context.Context) WebActivityAuthenticationPtrOutput {
	return o.ApplyT(func(v WebActivityAuthentication) *WebActivityAuthentication {
		return &v
	}).(WebActivityAuthenticationPtrOutput)
}

// Password for the PFX file or basic authentication.
func (o WebActivityAuthenticationOutput) Password() SecureStringPtrOutput {
	return o.ApplyT(func(v WebActivityAuthentication) *SecureString { return v.Password }).(SecureStringPtrOutput)
}

// Base64-encoded contents of a PFX file.
func (o WebActivityAuthenticationOutput) Pfx() SecureStringPtrOutput {
	return o.ApplyT(func(v WebActivityAuthentication) *SecureString { return v.Pfx }).(SecureStringPtrOutput)
}

// Resource for which Azure Auth token will be requested when using MSI Authentication.
func (o WebActivityAuthenticationOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebActivityAuthentication) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

// Web activity authentication (Basic/ClientCertificate/MSI)
func (o WebActivityAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebActivityAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

// Web activity authentication user name for basic authentication.
func (o WebActivityAuthenticationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebActivityAuthentication) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type WebActivityAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (WebActivityAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebActivityAuthentication)(nil)).Elem()
}

func (o WebActivityAuthenticationPtrOutput) ToWebActivityAuthenticationPtrOutput() WebActivityAuthenticationPtrOutput {
	return o
}

func (o WebActivityAuthenticationPtrOutput) ToWebActivityAuthenticationPtrOutputWithContext(ctx context.Context) WebActivityAuthenticationPtrOutput {
	return o
}

func (o WebActivityAuthenticationPtrOutput) Elem() WebActivityAuthenticationOutput {
	return o.ApplyT(func(v *WebActivityAuthentication) WebActivityAuthentication { return *v }).(WebActivityAuthenticationOutput)
}

// Password for the PFX file or basic authentication.
func (o WebActivityAuthenticationPtrOutput) Password() SecureStringPtrOutput {
	return o.ApplyT(func(v *WebActivityAuthentication) *SecureString {
		if v == nil {
			return nil
		}
		return v.Password
	}).(SecureStringPtrOutput)
}

// Base64-encoded contents of a PFX file.
func (o WebActivityAuthenticationPtrOutput) Pfx() SecureStringPtrOutput {
	return o.ApplyT(func(v *WebActivityAuthentication) *SecureString {
		if v == nil {
			return nil
		}
		return v.Pfx
	}).(SecureStringPtrOutput)
}

// Resource for which Azure Auth token will be requested when using MSI Authentication.
func (o WebActivityAuthenticationPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebActivityAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// Web activity authentication (Basic/ClientCertificate/MSI)
func (o WebActivityAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebActivityAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Web activity authentication user name for basic authentication.
func (o WebActivityAuthenticationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebActivityAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Web activity authentication properties.
type WebActivityAuthenticationResponse struct {
	// Password for the PFX file or basic authentication.
	Password *SecureStringResponse `pulumi:"password"`
	// Base64-encoded contents of a PFX file.
	Pfx *SecureStringResponse `pulumi:"pfx"`
	// Resource for which Azure Auth token will be requested when using MSI Authentication.
	Resource *string `pulumi:"resource"`
	// Web activity authentication (Basic/ClientCertificate/MSI)
	Type string `pulumi:"type"`
	// Web activity authentication user name for basic authentication.
	Username *string `pulumi:"username"`
}

// WebActivityAuthenticationResponseInput is an input type that accepts WebActivityAuthenticationResponseArgs and WebActivityAuthenticationResponseOutput values.
// You can construct a concrete instance of `WebActivityAuthenticationResponseInput` via:
//
//          WebActivityAuthenticationResponseArgs{...}
type WebActivityAuthenticationResponseInput interface {
	pulumi.Input

	ToWebActivityAuthenticationResponseOutput() WebActivityAuthenticationResponseOutput
	ToWebActivityAuthenticationResponseOutputWithContext(context.Context) WebActivityAuthenticationResponseOutput
}

// Web activity authentication properties.
type WebActivityAuthenticationResponseArgs struct {
	// Password for the PFX file or basic authentication.
	Password SecureStringResponsePtrInput `pulumi:"password"`
	// Base64-encoded contents of a PFX file.
	Pfx SecureStringResponsePtrInput `pulumi:"pfx"`
	// Resource for which Azure Auth token will be requested when using MSI Authentication.
	Resource pulumi.StringPtrInput `pulumi:"resource"`
	// Web activity authentication (Basic/ClientCertificate/MSI)
	Type pulumi.StringInput `pulumi:"type"`
	// Web activity authentication user name for basic authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (WebActivityAuthenticationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebActivityAuthenticationResponse)(nil)).Elem()
}

func (i WebActivityAuthenticationResponseArgs) ToWebActivityAuthenticationResponseOutput() WebActivityAuthenticationResponseOutput {
	return i.ToWebActivityAuthenticationResponseOutputWithContext(context.Background())
}

func (i WebActivityAuthenticationResponseArgs) ToWebActivityAuthenticationResponseOutputWithContext(ctx context.Context) WebActivityAuthenticationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebActivityAuthenticationResponseOutput)
}

func (i WebActivityAuthenticationResponseArgs) ToWebActivityAuthenticationResponsePtrOutput() WebActivityAuthenticationResponsePtrOutput {
	return i.ToWebActivityAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (i WebActivityAuthenticationResponseArgs) ToWebActivityAuthenticationResponsePtrOutputWithContext(ctx context.Context) WebActivityAuthenticationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebActivityAuthenticationResponseOutput).ToWebActivityAuthenticationResponsePtrOutputWithContext(ctx)
}

// WebActivityAuthenticationResponsePtrInput is an input type that accepts WebActivityAuthenticationResponseArgs, WebActivityAuthenticationResponsePtr and WebActivityAuthenticationResponsePtrOutput values.
// You can construct a concrete instance of `WebActivityAuthenticationResponsePtrInput` via:
//
//          WebActivityAuthenticationResponseArgs{...}
//
//  or:
//
//          nil
type WebActivityAuthenticationResponsePtrInput interface {
	pulumi.Input

	ToWebActivityAuthenticationResponsePtrOutput() WebActivityAuthenticationResponsePtrOutput
	ToWebActivityAuthenticationResponsePtrOutputWithContext(context.Context) WebActivityAuthenticationResponsePtrOutput
}

type webActivityAuthenticationResponsePtrType WebActivityAuthenticationResponseArgs

func WebActivityAuthenticationResponsePtr(v *WebActivityAuthenticationResponseArgs) WebActivityAuthenticationResponsePtrInput {
	return (*webActivityAuthenticationResponsePtrType)(v)
}

func (*webActivityAuthenticationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebActivityAuthenticationResponse)(nil)).Elem()
}

func (i *webActivityAuthenticationResponsePtrType) ToWebActivityAuthenticationResponsePtrOutput() WebActivityAuthenticationResponsePtrOutput {
	return i.ToWebActivityAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (i *webActivityAuthenticationResponsePtrType) ToWebActivityAuthenticationResponsePtrOutputWithContext(ctx context.Context) WebActivityAuthenticationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebActivityAuthenticationResponsePtrOutput)
}

// Web activity authentication properties.
type WebActivityAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (WebActivityAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebActivityAuthenticationResponse)(nil)).Elem()
}

func (o WebActivityAuthenticationResponseOutput) ToWebActivityAuthenticationResponseOutput() WebActivityAuthenticationResponseOutput {
	return o
}

func (o WebActivityAuthenticationResponseOutput) ToWebActivityAuthenticationResponseOutputWithContext(ctx context.Context) WebActivityAuthenticationResponseOutput {
	return o
}

func (o WebActivityAuthenticationResponseOutput) ToWebActivityAuthenticationResponsePtrOutput() WebActivityAuthenticationResponsePtrOutput {
	return o.ToWebActivityAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (o WebActivityAuthenticationResponseOutput) ToWebActivityAuthenticationResponsePtrOutputWithContext(ctx context.Context) WebActivityAuthenticationResponsePtrOutput {
	return o.ApplyT(func(v WebActivityAuthenticationResponse) *WebActivityAuthenticationResponse {
		return &v
	}).(WebActivityAuthenticationResponsePtrOutput)
}

// Password for the PFX file or basic authentication.
func (o WebActivityAuthenticationResponseOutput) Password() SecureStringResponsePtrOutput {
	return o.ApplyT(func(v WebActivityAuthenticationResponse) *SecureStringResponse { return v.Password }).(SecureStringResponsePtrOutput)
}

// Base64-encoded contents of a PFX file.
func (o WebActivityAuthenticationResponseOutput) Pfx() SecureStringResponsePtrOutput {
	return o.ApplyT(func(v WebActivityAuthenticationResponse) *SecureStringResponse { return v.Pfx }).(SecureStringResponsePtrOutput)
}

// Resource for which Azure Auth token will be requested when using MSI Authentication.
func (o WebActivityAuthenticationResponseOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebActivityAuthenticationResponse) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

// Web activity authentication (Basic/ClientCertificate/MSI)
func (o WebActivityAuthenticationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebActivityAuthenticationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Web activity authentication user name for basic authentication.
func (o WebActivityAuthenticationResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebActivityAuthenticationResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type WebActivityAuthenticationResponsePtrOutput struct{ *pulumi.OutputState }

func (WebActivityAuthenticationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebActivityAuthenticationResponse)(nil)).Elem()
}

func (o WebActivityAuthenticationResponsePtrOutput) ToWebActivityAuthenticationResponsePtrOutput() WebActivityAuthenticationResponsePtrOutput {
	return o
}

func (o WebActivityAuthenticationResponsePtrOutput) ToWebActivityAuthenticationResponsePtrOutputWithContext(ctx context.Context) WebActivityAuthenticationResponsePtrOutput {
	return o
}

func (o WebActivityAuthenticationResponsePtrOutput) Elem() WebActivityAuthenticationResponseOutput {
	return o.ApplyT(func(v *WebActivityAuthenticationResponse) WebActivityAuthenticationResponse { return *v }).(WebActivityAuthenticationResponseOutput)
}

// Password for the PFX file or basic authentication.
func (o WebActivityAuthenticationResponsePtrOutput) Password() SecureStringResponsePtrOutput {
	return o.ApplyT(func(v *WebActivityAuthenticationResponse) *SecureStringResponse {
		if v == nil {
			return nil
		}
		return v.Password
	}).(SecureStringResponsePtrOutput)
}

// Base64-encoded contents of a PFX file.
func (o WebActivityAuthenticationResponsePtrOutput) Pfx() SecureStringResponsePtrOutput {
	return o.ApplyT(func(v *WebActivityAuthenticationResponse) *SecureStringResponse {
		if v == nil {
			return nil
		}
		return v.Pfx
	}).(SecureStringResponsePtrOutput)
}

// Resource for which Azure Auth token will be requested when using MSI Authentication.
func (o WebActivityAuthenticationResponsePtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebActivityAuthenticationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// Web activity authentication (Basic/ClientCertificate/MSI)
func (o WebActivityAuthenticationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebActivityAuthenticationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Web activity authentication user name for basic authentication.
func (o WebActivityAuthenticationResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebActivityAuthenticationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Web activity.
type WebActivityResponse struct {
	// Authentication method used for calling the endpoint.
	Authentication *WebActivityAuthenticationResponse `pulumi:"authentication"`
	// Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).
	Body interface{} `pulumi:"body"`
	// List of datasets passed to web endpoint.
	Datasets []DatasetReferenceResponse `pulumi:"datasets"`
	// Activity depends on condition.
	DependsOn []ActivityDependencyResponse `pulumi:"dependsOn"`
	// Activity description.
	Description *string `pulumi:"description"`
	// Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string).
	Headers interface{} `pulumi:"headers"`
	// Linked service reference.
	LinkedServiceName *LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// List of linked services passed to web endpoint.
	LinkedServices []LinkedServiceReferenceResponse `pulumi:"linkedServices"`
	// Rest API method for target endpoint.
	Method string `pulumi:"method"`
	// Activity name.
	Name string `pulumi:"name"`
	// Activity policy.
	Policy *ActivityPolicyResponse `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type string `pulumi:"type"`
	// Web activity target endpoint and path. Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
}

// WebActivityResponseInput is an input type that accepts WebActivityResponseArgs and WebActivityResponseOutput values.
// You can construct a concrete instance of `WebActivityResponseInput` via:
//
//          WebActivityResponseArgs{...}
type WebActivityResponseInput interface {
	pulumi.Input

	ToWebActivityResponseOutput() WebActivityResponseOutput
	ToWebActivityResponseOutputWithContext(context.Context) WebActivityResponseOutput
}

// Web activity.
type WebActivityResponseArgs struct {
	// Authentication method used for calling the endpoint.
	Authentication WebActivityAuthenticationResponsePtrInput `pulumi:"authentication"`
	// Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).
	Body pulumi.Input `pulumi:"body"`
	// List of datasets passed to web endpoint.
	Datasets DatasetReferenceResponseArrayInput `pulumi:"datasets"`
	// Activity depends on condition.
	DependsOn ActivityDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Activity description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string).
	Headers pulumi.Input `pulumi:"headers"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponsePtrInput `pulumi:"linkedServiceName"`
	// List of linked services passed to web endpoint.
	LinkedServices LinkedServiceReferenceResponseArrayInput `pulumi:"linkedServices"`
	// Rest API method for target endpoint.
	Method pulumi.StringInput `pulumi:"method"`
	// Activity name.
	Name pulumi.StringInput `pulumi:"name"`
	// Activity policy.
	Policy ActivityPolicyResponsePtrInput `pulumi:"policy"`
	// Type of activity.
	// Expected value is 'Execution'.
	Type pulumi.StringInput `pulumi:"type"`
	// Web activity target endpoint and path. Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
}

func (WebActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebActivityResponse)(nil)).Elem()
}

func (i WebActivityResponseArgs) ToWebActivityResponseOutput() WebActivityResponseOutput {
	return i.ToWebActivityResponseOutputWithContext(context.Background())
}

func (i WebActivityResponseArgs) ToWebActivityResponseOutputWithContext(ctx context.Context) WebActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebActivityResponseOutput)
}

// Web activity.
type WebActivityResponseOutput struct{ *pulumi.OutputState }

func (WebActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebActivityResponse)(nil)).Elem()
}

func (o WebActivityResponseOutput) ToWebActivityResponseOutput() WebActivityResponseOutput {
	return o
}

func (o WebActivityResponseOutput) ToWebActivityResponseOutputWithContext(ctx context.Context) WebActivityResponseOutput {
	return o
}

// Authentication method used for calling the endpoint.
func (o WebActivityResponseOutput) Authentication() WebActivityAuthenticationResponsePtrOutput {
	return o.ApplyT(func(v WebActivityResponse) *WebActivityAuthenticationResponse { return v.Authentication }).(WebActivityAuthenticationResponsePtrOutput)
}

// Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).
func (o WebActivityResponseOutput) Body() pulumi.AnyOutput {
	return o.ApplyT(func(v WebActivityResponse) interface{} { return v.Body }).(pulumi.AnyOutput)
}

// List of datasets passed to web endpoint.
func (o WebActivityResponseOutput) Datasets() DatasetReferenceResponseArrayOutput {
	return o.ApplyT(func(v WebActivityResponse) []DatasetReferenceResponse { return v.Datasets }).(DatasetReferenceResponseArrayOutput)
}

// Activity depends on condition.
func (o WebActivityResponseOutput) DependsOn() ActivityDependencyResponseArrayOutput {
	return o.ApplyT(func(v WebActivityResponse) []ActivityDependencyResponse { return v.DependsOn }).(ActivityDependencyResponseArrayOutput)
}

// Activity description.
func (o WebActivityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebActivityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string).
func (o WebActivityResponseOutput) Headers() pulumi.AnyOutput {
	return o.ApplyT(func(v WebActivityResponse) interface{} { return v.Headers }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o WebActivityResponseOutput) LinkedServiceName() LinkedServiceReferenceResponsePtrOutput {
	return o.ApplyT(func(v WebActivityResponse) *LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponsePtrOutput)
}

// List of linked services passed to web endpoint.
func (o WebActivityResponseOutput) LinkedServices() LinkedServiceReferenceResponseArrayOutput {
	return o.ApplyT(func(v WebActivityResponse) []LinkedServiceReferenceResponse { return v.LinkedServices }).(LinkedServiceReferenceResponseArrayOutput)
}

// Rest API method for target endpoint.
func (o WebActivityResponseOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v WebActivityResponse) string { return v.Method }).(pulumi.StringOutput)
}

// Activity name.
func (o WebActivityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebActivityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Activity policy.
func (o WebActivityResponseOutput) Policy() ActivityPolicyResponsePtrOutput {
	return o.ApplyT(func(v WebActivityResponse) *ActivityPolicyResponse { return v.Policy }).(ActivityPolicyResponsePtrOutput)
}

// Type of activity.
// Expected value is 'Execution'.
func (o WebActivityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebActivityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Web activity target endpoint and path. Type: string (or Expression with resultType string).
func (o WebActivityResponseOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v WebActivityResponse) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// A WebLinkedService that uses anonymous authentication to communicate with an HTTP endpoint.
type WebAnonymousAuthentication struct {
	// Type of authentication used to connect to the web table source.
	// Expected value is 'Anonymous'.
	AuthenticationType string `pulumi:"authenticationType"`
	// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
}

// WebAnonymousAuthenticationInput is an input type that accepts WebAnonymousAuthenticationArgs and WebAnonymousAuthenticationOutput values.
// You can construct a concrete instance of `WebAnonymousAuthenticationInput` via:
//
//          WebAnonymousAuthenticationArgs{...}
type WebAnonymousAuthenticationInput interface {
	pulumi.Input

	ToWebAnonymousAuthenticationOutput() WebAnonymousAuthenticationOutput
	ToWebAnonymousAuthenticationOutputWithContext(context.Context) WebAnonymousAuthenticationOutput
}

// A WebLinkedService that uses anonymous authentication to communicate with an HTTP endpoint.
type WebAnonymousAuthenticationArgs struct {
	// Type of authentication used to connect to the web table source.
	// Expected value is 'Anonymous'.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
}

func (WebAnonymousAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAnonymousAuthentication)(nil)).Elem()
}

func (i WebAnonymousAuthenticationArgs) ToWebAnonymousAuthenticationOutput() WebAnonymousAuthenticationOutput {
	return i.ToWebAnonymousAuthenticationOutputWithContext(context.Background())
}

func (i WebAnonymousAuthenticationArgs) ToWebAnonymousAuthenticationOutputWithContext(ctx context.Context) WebAnonymousAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAnonymousAuthenticationOutput)
}

// A WebLinkedService that uses anonymous authentication to communicate with an HTTP endpoint.
type WebAnonymousAuthenticationOutput struct{ *pulumi.OutputState }

func (WebAnonymousAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAnonymousAuthentication)(nil)).Elem()
}

func (o WebAnonymousAuthenticationOutput) ToWebAnonymousAuthenticationOutput() WebAnonymousAuthenticationOutput {
	return o
}

func (o WebAnonymousAuthenticationOutput) ToWebAnonymousAuthenticationOutputWithContext(ctx context.Context) WebAnonymousAuthenticationOutput {
	return o
}

// Type of authentication used to connect to the web table source.
// Expected value is 'Anonymous'.
func (o WebAnonymousAuthenticationOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v WebAnonymousAuthentication) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
func (o WebAnonymousAuthenticationOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v WebAnonymousAuthentication) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// A WebLinkedService that uses anonymous authentication to communicate with an HTTP endpoint.
type WebAnonymousAuthenticationResponse struct {
	// Type of authentication used to connect to the web table source.
	// Expected value is 'Anonymous'.
	AuthenticationType string `pulumi:"authenticationType"`
	// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
}

// WebAnonymousAuthenticationResponseInput is an input type that accepts WebAnonymousAuthenticationResponseArgs and WebAnonymousAuthenticationResponseOutput values.
// You can construct a concrete instance of `WebAnonymousAuthenticationResponseInput` via:
//
//          WebAnonymousAuthenticationResponseArgs{...}
type WebAnonymousAuthenticationResponseInput interface {
	pulumi.Input

	ToWebAnonymousAuthenticationResponseOutput() WebAnonymousAuthenticationResponseOutput
	ToWebAnonymousAuthenticationResponseOutputWithContext(context.Context) WebAnonymousAuthenticationResponseOutput
}

// A WebLinkedService that uses anonymous authentication to communicate with an HTTP endpoint.
type WebAnonymousAuthenticationResponseArgs struct {
	// Type of authentication used to connect to the web table source.
	// Expected value is 'Anonymous'.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
}

func (WebAnonymousAuthenticationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAnonymousAuthenticationResponse)(nil)).Elem()
}

func (i WebAnonymousAuthenticationResponseArgs) ToWebAnonymousAuthenticationResponseOutput() WebAnonymousAuthenticationResponseOutput {
	return i.ToWebAnonymousAuthenticationResponseOutputWithContext(context.Background())
}

func (i WebAnonymousAuthenticationResponseArgs) ToWebAnonymousAuthenticationResponseOutputWithContext(ctx context.Context) WebAnonymousAuthenticationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAnonymousAuthenticationResponseOutput)
}

// A WebLinkedService that uses anonymous authentication to communicate with an HTTP endpoint.
type WebAnonymousAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (WebAnonymousAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAnonymousAuthenticationResponse)(nil)).Elem()
}

func (o WebAnonymousAuthenticationResponseOutput) ToWebAnonymousAuthenticationResponseOutput() WebAnonymousAuthenticationResponseOutput {
	return o
}

func (o WebAnonymousAuthenticationResponseOutput) ToWebAnonymousAuthenticationResponseOutputWithContext(ctx context.Context) WebAnonymousAuthenticationResponseOutput {
	return o
}

// Type of authentication used to connect to the web table source.
// Expected value is 'Anonymous'.
func (o WebAnonymousAuthenticationResponseOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v WebAnonymousAuthenticationResponse) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
func (o WebAnonymousAuthenticationResponseOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v WebAnonymousAuthenticationResponse) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// A WebLinkedService that uses basic authentication to communicate with an HTTP endpoint.
type WebBasicAuthentication struct {
	// Type of authentication used to connect to the web table source.
	// Expected value is 'Basic'.
	AuthenticationType string `pulumi:"authenticationType"`
	// The password for Basic authentication.
	Password interface{} `pulumi:"password"`
	// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
	// User name for Basic authentication. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// WebBasicAuthenticationInput is an input type that accepts WebBasicAuthenticationArgs and WebBasicAuthenticationOutput values.
// You can construct a concrete instance of `WebBasicAuthenticationInput` via:
//
//          WebBasicAuthenticationArgs{...}
type WebBasicAuthenticationInput interface {
	pulumi.Input

	ToWebBasicAuthenticationOutput() WebBasicAuthenticationOutput
	ToWebBasicAuthenticationOutputWithContext(context.Context) WebBasicAuthenticationOutput
}

// A WebLinkedService that uses basic authentication to communicate with an HTTP endpoint.
type WebBasicAuthenticationArgs struct {
	// Type of authentication used to connect to the web table source.
	// Expected value is 'Basic'.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The password for Basic authentication.
	Password pulumi.Input `pulumi:"password"`
	// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
	// User name for Basic authentication. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (WebBasicAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebBasicAuthentication)(nil)).Elem()
}

func (i WebBasicAuthenticationArgs) ToWebBasicAuthenticationOutput() WebBasicAuthenticationOutput {
	return i.ToWebBasicAuthenticationOutputWithContext(context.Background())
}

func (i WebBasicAuthenticationArgs) ToWebBasicAuthenticationOutputWithContext(ctx context.Context) WebBasicAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebBasicAuthenticationOutput)
}

// A WebLinkedService that uses basic authentication to communicate with an HTTP endpoint.
type WebBasicAuthenticationOutput struct{ *pulumi.OutputState }

func (WebBasicAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebBasicAuthentication)(nil)).Elem()
}

func (o WebBasicAuthenticationOutput) ToWebBasicAuthenticationOutput() WebBasicAuthenticationOutput {
	return o
}

func (o WebBasicAuthenticationOutput) ToWebBasicAuthenticationOutputWithContext(ctx context.Context) WebBasicAuthenticationOutput {
	return o
}

// Type of authentication used to connect to the web table source.
// Expected value is 'Basic'.
func (o WebBasicAuthenticationOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v WebBasicAuthentication) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The password for Basic authentication.
func (o WebBasicAuthenticationOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v WebBasicAuthentication) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
func (o WebBasicAuthenticationOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v WebBasicAuthentication) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// User name for Basic authentication. Type: string (or Expression with resultType string).
func (o WebBasicAuthenticationOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v WebBasicAuthentication) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// A WebLinkedService that uses basic authentication to communicate with an HTTP endpoint.
type WebBasicAuthenticationResponse struct {
	// Type of authentication used to connect to the web table source.
	// Expected value is 'Basic'.
	AuthenticationType string `pulumi:"authenticationType"`
	// The password for Basic authentication.
	Password interface{} `pulumi:"password"`
	// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
	// User name for Basic authentication. Type: string (or Expression with resultType string).
	Username interface{} `pulumi:"username"`
}

// WebBasicAuthenticationResponseInput is an input type that accepts WebBasicAuthenticationResponseArgs and WebBasicAuthenticationResponseOutput values.
// You can construct a concrete instance of `WebBasicAuthenticationResponseInput` via:
//
//          WebBasicAuthenticationResponseArgs{...}
type WebBasicAuthenticationResponseInput interface {
	pulumi.Input

	ToWebBasicAuthenticationResponseOutput() WebBasicAuthenticationResponseOutput
	ToWebBasicAuthenticationResponseOutputWithContext(context.Context) WebBasicAuthenticationResponseOutput
}

// A WebLinkedService that uses basic authentication to communicate with an HTTP endpoint.
type WebBasicAuthenticationResponseArgs struct {
	// Type of authentication used to connect to the web table source.
	// Expected value is 'Basic'.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The password for Basic authentication.
	Password pulumi.Input `pulumi:"password"`
	// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
	// User name for Basic authentication. Type: string (or Expression with resultType string).
	Username pulumi.Input `pulumi:"username"`
}

func (WebBasicAuthenticationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebBasicAuthenticationResponse)(nil)).Elem()
}

func (i WebBasicAuthenticationResponseArgs) ToWebBasicAuthenticationResponseOutput() WebBasicAuthenticationResponseOutput {
	return i.ToWebBasicAuthenticationResponseOutputWithContext(context.Background())
}

func (i WebBasicAuthenticationResponseArgs) ToWebBasicAuthenticationResponseOutputWithContext(ctx context.Context) WebBasicAuthenticationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebBasicAuthenticationResponseOutput)
}

// A WebLinkedService that uses basic authentication to communicate with an HTTP endpoint.
type WebBasicAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (WebBasicAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebBasicAuthenticationResponse)(nil)).Elem()
}

func (o WebBasicAuthenticationResponseOutput) ToWebBasicAuthenticationResponseOutput() WebBasicAuthenticationResponseOutput {
	return o
}

func (o WebBasicAuthenticationResponseOutput) ToWebBasicAuthenticationResponseOutputWithContext(ctx context.Context) WebBasicAuthenticationResponseOutput {
	return o
}

// Type of authentication used to connect to the web table source.
// Expected value is 'Basic'.
func (o WebBasicAuthenticationResponseOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v WebBasicAuthenticationResponse) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The password for Basic authentication.
func (o WebBasicAuthenticationResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v WebBasicAuthenticationResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
func (o WebBasicAuthenticationResponseOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v WebBasicAuthenticationResponse) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// User name for Basic authentication. Type: string (or Expression with resultType string).
func (o WebBasicAuthenticationResponseOutput) Username() pulumi.AnyOutput {
	return o.ApplyT(func(v WebBasicAuthenticationResponse) interface{} { return v.Username }).(pulumi.AnyOutput)
}

// A WebLinkedService that uses client certificate based authentication to communicate with an HTTP endpoint. This scheme follows mutual authentication; the server must also provide valid credentials to the client.
type WebClientCertificateAuthentication struct {
	// Type of authentication used to connect to the web table source.
	// Expected value is 'ClientCertificate'.
	AuthenticationType string `pulumi:"authenticationType"`
	// Password for the PFX file.
	Password interface{} `pulumi:"password"`
	// Base64-encoded contents of a PFX file.
	Pfx interface{} `pulumi:"pfx"`
	// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
}

// WebClientCertificateAuthenticationInput is an input type that accepts WebClientCertificateAuthenticationArgs and WebClientCertificateAuthenticationOutput values.
// You can construct a concrete instance of `WebClientCertificateAuthenticationInput` via:
//
//          WebClientCertificateAuthenticationArgs{...}
type WebClientCertificateAuthenticationInput interface {
	pulumi.Input

	ToWebClientCertificateAuthenticationOutput() WebClientCertificateAuthenticationOutput
	ToWebClientCertificateAuthenticationOutputWithContext(context.Context) WebClientCertificateAuthenticationOutput
}

// A WebLinkedService that uses client certificate based authentication to communicate with an HTTP endpoint. This scheme follows mutual authentication; the server must also provide valid credentials to the client.
type WebClientCertificateAuthenticationArgs struct {
	// Type of authentication used to connect to the web table source.
	// Expected value is 'ClientCertificate'.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// Password for the PFX file.
	Password pulumi.Input `pulumi:"password"`
	// Base64-encoded contents of a PFX file.
	Pfx pulumi.Input `pulumi:"pfx"`
	// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
}

func (WebClientCertificateAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebClientCertificateAuthentication)(nil)).Elem()
}

func (i WebClientCertificateAuthenticationArgs) ToWebClientCertificateAuthenticationOutput() WebClientCertificateAuthenticationOutput {
	return i.ToWebClientCertificateAuthenticationOutputWithContext(context.Background())
}

func (i WebClientCertificateAuthenticationArgs) ToWebClientCertificateAuthenticationOutputWithContext(ctx context.Context) WebClientCertificateAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebClientCertificateAuthenticationOutput)
}

// A WebLinkedService that uses client certificate based authentication to communicate with an HTTP endpoint. This scheme follows mutual authentication; the server must also provide valid credentials to the client.
type WebClientCertificateAuthenticationOutput struct{ *pulumi.OutputState }

func (WebClientCertificateAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebClientCertificateAuthentication)(nil)).Elem()
}

func (o WebClientCertificateAuthenticationOutput) ToWebClientCertificateAuthenticationOutput() WebClientCertificateAuthenticationOutput {
	return o
}

func (o WebClientCertificateAuthenticationOutput) ToWebClientCertificateAuthenticationOutputWithContext(ctx context.Context) WebClientCertificateAuthenticationOutput {
	return o
}

// Type of authentication used to connect to the web table source.
// Expected value is 'ClientCertificate'.
func (o WebClientCertificateAuthenticationOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v WebClientCertificateAuthentication) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// Password for the PFX file.
func (o WebClientCertificateAuthenticationOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v WebClientCertificateAuthentication) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Base64-encoded contents of a PFX file.
func (o WebClientCertificateAuthenticationOutput) Pfx() pulumi.AnyOutput {
	return o.ApplyT(func(v WebClientCertificateAuthentication) interface{} { return v.Pfx }).(pulumi.AnyOutput)
}

// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
func (o WebClientCertificateAuthenticationOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v WebClientCertificateAuthentication) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// A WebLinkedService that uses client certificate based authentication to communicate with an HTTP endpoint. This scheme follows mutual authentication; the server must also provide valid credentials to the client.
type WebClientCertificateAuthenticationResponse struct {
	// Type of authentication used to connect to the web table source.
	// Expected value is 'ClientCertificate'.
	AuthenticationType string `pulumi:"authenticationType"`
	// Password for the PFX file.
	Password interface{} `pulumi:"password"`
	// Base64-encoded contents of a PFX file.
	Pfx interface{} `pulumi:"pfx"`
	// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
	Url interface{} `pulumi:"url"`
}

// WebClientCertificateAuthenticationResponseInput is an input type that accepts WebClientCertificateAuthenticationResponseArgs and WebClientCertificateAuthenticationResponseOutput values.
// You can construct a concrete instance of `WebClientCertificateAuthenticationResponseInput` via:
//
//          WebClientCertificateAuthenticationResponseArgs{...}
type WebClientCertificateAuthenticationResponseInput interface {
	pulumi.Input

	ToWebClientCertificateAuthenticationResponseOutput() WebClientCertificateAuthenticationResponseOutput
	ToWebClientCertificateAuthenticationResponseOutputWithContext(context.Context) WebClientCertificateAuthenticationResponseOutput
}

// A WebLinkedService that uses client certificate based authentication to communicate with an HTTP endpoint. This scheme follows mutual authentication; the server must also provide valid credentials to the client.
type WebClientCertificateAuthenticationResponseArgs struct {
	// Type of authentication used to connect to the web table source.
	// Expected value is 'ClientCertificate'.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// Password for the PFX file.
	Password pulumi.Input `pulumi:"password"`
	// Base64-encoded contents of a PFX file.
	Pfx pulumi.Input `pulumi:"pfx"`
	// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
	Url pulumi.Input `pulumi:"url"`
}

func (WebClientCertificateAuthenticationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebClientCertificateAuthenticationResponse)(nil)).Elem()
}

func (i WebClientCertificateAuthenticationResponseArgs) ToWebClientCertificateAuthenticationResponseOutput() WebClientCertificateAuthenticationResponseOutput {
	return i.ToWebClientCertificateAuthenticationResponseOutputWithContext(context.Background())
}

func (i WebClientCertificateAuthenticationResponseArgs) ToWebClientCertificateAuthenticationResponseOutputWithContext(ctx context.Context) WebClientCertificateAuthenticationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebClientCertificateAuthenticationResponseOutput)
}

// A WebLinkedService that uses client certificate based authentication to communicate with an HTTP endpoint. This scheme follows mutual authentication; the server must also provide valid credentials to the client.
type WebClientCertificateAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (WebClientCertificateAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebClientCertificateAuthenticationResponse)(nil)).Elem()
}

func (o WebClientCertificateAuthenticationResponseOutput) ToWebClientCertificateAuthenticationResponseOutput() WebClientCertificateAuthenticationResponseOutput {
	return o
}

func (o WebClientCertificateAuthenticationResponseOutput) ToWebClientCertificateAuthenticationResponseOutputWithContext(ctx context.Context) WebClientCertificateAuthenticationResponseOutput {
	return o
}

// Type of authentication used to connect to the web table source.
// Expected value is 'ClientCertificate'.
func (o WebClientCertificateAuthenticationResponseOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v WebClientCertificateAuthenticationResponse) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// Password for the PFX file.
func (o WebClientCertificateAuthenticationResponseOutput) Password() pulumi.AnyOutput {
	return o.ApplyT(func(v WebClientCertificateAuthenticationResponse) interface{} { return v.Password }).(pulumi.AnyOutput)
}

// Base64-encoded contents of a PFX file.
func (o WebClientCertificateAuthenticationResponseOutput) Pfx() pulumi.AnyOutput {
	return o.ApplyT(func(v WebClientCertificateAuthenticationResponse) interface{} { return v.Pfx }).(pulumi.AnyOutput)
}

// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
func (o WebClientCertificateAuthenticationResponseOutput) Url() pulumi.AnyOutput {
	return o.ApplyT(func(v WebClientCertificateAuthenticationResponse) interface{} { return v.Url }).(pulumi.AnyOutput)
}

// Web linked service.
type WebLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Web'.
	Type string `pulumi:"type"`
	// Web linked service properties.
	TypeProperties interface{} `pulumi:"typeProperties"`
}

// WebLinkedServiceInput is an input type that accepts WebLinkedServiceArgs and WebLinkedServiceOutput values.
// You can construct a concrete instance of `WebLinkedServiceInput` via:
//
//          WebLinkedServiceArgs{...}
type WebLinkedServiceInput interface {
	pulumi.Input

	ToWebLinkedServiceOutput() WebLinkedServiceOutput
	ToWebLinkedServiceOutputWithContext(context.Context) WebLinkedServiceOutput
}

// Web linked service.
type WebLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Web'.
	Type pulumi.StringInput `pulumi:"type"`
	// Web linked service properties.
	TypeProperties pulumi.Input `pulumi:"typeProperties"`
}

func (WebLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebLinkedService)(nil)).Elem()
}

func (i WebLinkedServiceArgs) ToWebLinkedServiceOutput() WebLinkedServiceOutput {
	return i.ToWebLinkedServiceOutputWithContext(context.Background())
}

func (i WebLinkedServiceArgs) ToWebLinkedServiceOutputWithContext(ctx context.Context) WebLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebLinkedServiceOutput)
}

// Web linked service.
type WebLinkedServiceOutput struct{ *pulumi.OutputState }

func (WebLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebLinkedService)(nil)).Elem()
}

func (o WebLinkedServiceOutput) ToWebLinkedServiceOutput() WebLinkedServiceOutput {
	return o
}

func (o WebLinkedServiceOutput) ToWebLinkedServiceOutputWithContext(ctx context.Context) WebLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o WebLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v WebLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o WebLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v WebLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o WebLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Parameters for linked service.
func (o WebLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v WebLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'Web'.
func (o WebLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Web linked service properties.
func (o WebLinkedServiceOutput) TypeProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v WebLinkedService) interface{} { return v.TypeProperties }).(pulumi.AnyOutput)
}

// Web linked service.
type WebLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Web'.
	Type string `pulumi:"type"`
	// Web linked service properties.
	TypeProperties interface{} `pulumi:"typeProperties"`
}

// WebLinkedServiceResponseInput is an input type that accepts WebLinkedServiceResponseArgs and WebLinkedServiceResponseOutput values.
// You can construct a concrete instance of `WebLinkedServiceResponseInput` via:
//
//          WebLinkedServiceResponseArgs{...}
type WebLinkedServiceResponseInput interface {
	pulumi.Input

	ToWebLinkedServiceResponseOutput() WebLinkedServiceResponseOutput
	ToWebLinkedServiceResponseOutputWithContext(context.Context) WebLinkedServiceResponseOutput
}

// Web linked service.
type WebLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Web'.
	Type pulumi.StringInput `pulumi:"type"`
	// Web linked service properties.
	TypeProperties pulumi.Input `pulumi:"typeProperties"`
}

func (WebLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebLinkedServiceResponse)(nil)).Elem()
}

func (i WebLinkedServiceResponseArgs) ToWebLinkedServiceResponseOutput() WebLinkedServiceResponseOutput {
	return i.ToWebLinkedServiceResponseOutputWithContext(context.Background())
}

func (i WebLinkedServiceResponseArgs) ToWebLinkedServiceResponseOutputWithContext(ctx context.Context) WebLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebLinkedServiceResponseOutput)
}

// Web linked service.
type WebLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (WebLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebLinkedServiceResponse)(nil)).Elem()
}

func (o WebLinkedServiceResponseOutput) ToWebLinkedServiceResponseOutput() WebLinkedServiceResponseOutput {
	return o
}

func (o WebLinkedServiceResponseOutput) ToWebLinkedServiceResponseOutputWithContext(ctx context.Context) WebLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o WebLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v WebLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o WebLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v WebLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o WebLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Parameters for linked service.
func (o WebLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v WebLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'Web'.
func (o WebLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Web linked service properties.
func (o WebLinkedServiceResponseOutput) TypeProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v WebLinkedServiceResponse) interface{} { return v.TypeProperties }).(pulumi.AnyOutput)
}

// A copy activity source for web page table.
type WebSource struct {
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'WebSource'.
	Type string `pulumi:"type"`
}

// WebSourceInput is an input type that accepts WebSourceArgs and WebSourceOutput values.
// You can construct a concrete instance of `WebSourceInput` via:
//
//          WebSourceArgs{...}
type WebSourceInput interface {
	pulumi.Input

	ToWebSourceOutput() WebSourceOutput
	ToWebSourceOutputWithContext(context.Context) WebSourceOutput
}

// A copy activity source for web page table.
type WebSourceArgs struct {
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'WebSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebSource)(nil)).Elem()
}

func (i WebSourceArgs) ToWebSourceOutput() WebSourceOutput {
	return i.ToWebSourceOutputWithContext(context.Background())
}

func (i WebSourceArgs) ToWebSourceOutputWithContext(ctx context.Context) WebSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebSourceOutput)
}

// A copy activity source for web page table.
type WebSourceOutput struct{ *pulumi.OutputState }

func (WebSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebSource)(nil)).Elem()
}

func (o WebSourceOutput) ToWebSourceOutput() WebSourceOutput {
	return o
}

func (o WebSourceOutput) ToWebSourceOutputWithContext(ctx context.Context) WebSourceOutput {
	return o
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o WebSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v WebSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o WebSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v WebSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'WebSource'.
func (o WebSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity source for web page table.
type WebSourceResponse struct {
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'WebSource'.
	Type string `pulumi:"type"`
}

// WebSourceResponseInput is an input type that accepts WebSourceResponseArgs and WebSourceResponseOutput values.
// You can construct a concrete instance of `WebSourceResponseInput` via:
//
//          WebSourceResponseArgs{...}
type WebSourceResponseInput interface {
	pulumi.Input

	ToWebSourceResponseOutput() WebSourceResponseOutput
	ToWebSourceResponseOutputWithContext(context.Context) WebSourceResponseOutput
}

// A copy activity source for web page table.
type WebSourceResponseArgs struct {
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'WebSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebSourceResponse)(nil)).Elem()
}

func (i WebSourceResponseArgs) ToWebSourceResponseOutput() WebSourceResponseOutput {
	return i.ToWebSourceResponseOutputWithContext(context.Background())
}

func (i WebSourceResponseArgs) ToWebSourceResponseOutputWithContext(ctx context.Context) WebSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebSourceResponseOutput)
}

// A copy activity source for web page table.
type WebSourceResponseOutput struct{ *pulumi.OutputState }

func (WebSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebSourceResponse)(nil)).Elem()
}

func (o WebSourceResponseOutput) ToWebSourceResponseOutput() WebSourceResponseOutput {
	return o
}

func (o WebSourceResponseOutput) ToWebSourceResponseOutputWithContext(ctx context.Context) WebSourceResponseOutput {
	return o
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o WebSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v WebSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o WebSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v WebSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'WebSource'.
func (o WebSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The dataset points to a HTML table in the web page.
type WebTableDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// The zero-based index of the table in the web page. Type: integer (or Expression with resultType integer), minimum: 0.
	Index interface{} `pulumi:"index"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The relative URL to the web page from the linked service URL. Type: string (or Expression with resultType string).
	Path interface{} `pulumi:"path"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'WebTable'.
	Type string `pulumi:"type"`
}

// WebTableDatasetInput is an input type that accepts WebTableDatasetArgs and WebTableDatasetOutput values.
// You can construct a concrete instance of `WebTableDatasetInput` via:
//
//          WebTableDatasetArgs{...}
type WebTableDatasetInput interface {
	pulumi.Input

	ToWebTableDatasetOutput() WebTableDatasetOutput
	ToWebTableDatasetOutputWithContext(context.Context) WebTableDatasetOutput
}

// The dataset points to a HTML table in the web page.
type WebTableDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The zero-based index of the table in the web page. Type: integer (or Expression with resultType integer), minimum: 0.
	Index pulumi.Input `pulumi:"index"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The relative URL to the web page from the linked service URL. Type: string (or Expression with resultType string).
	Path pulumi.Input `pulumi:"path"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'WebTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebTableDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTableDataset)(nil)).Elem()
}

func (i WebTableDatasetArgs) ToWebTableDatasetOutput() WebTableDatasetOutput {
	return i.ToWebTableDatasetOutputWithContext(context.Background())
}

func (i WebTableDatasetArgs) ToWebTableDatasetOutputWithContext(ctx context.Context) WebTableDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTableDatasetOutput)
}

// The dataset points to a HTML table in the web page.
type WebTableDatasetOutput struct{ *pulumi.OutputState }

func (WebTableDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTableDataset)(nil)).Elem()
}

func (o WebTableDatasetOutput) ToWebTableDatasetOutput() WebTableDatasetOutput {
	return o
}

func (o WebTableDatasetOutput) ToWebTableDatasetOutputWithContext(ctx context.Context) WebTableDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o WebTableDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v WebTableDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o WebTableDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTableDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The zero-based index of the table in the web page. Type: integer (or Expression with resultType integer), minimum: 0.
func (o WebTableDatasetOutput) Index() pulumi.AnyOutput {
	return o.ApplyT(func(v WebTableDataset) interface{} { return v.Index }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o WebTableDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v WebTableDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o WebTableDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v WebTableDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The relative URL to the web page from the linked service URL. Type: string (or Expression with resultType string).
func (o WebTableDatasetOutput) Path() pulumi.AnyOutput {
	return o.ApplyT(func(v WebTableDataset) interface{} { return v.Path }).(pulumi.AnyOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o WebTableDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v WebTableDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'WebTable'.
func (o WebTableDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebTableDataset) string { return v.Type }).(pulumi.StringOutput)
}

// The dataset points to a HTML table in the web page.
type WebTableDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// The zero-based index of the table in the web page. Type: integer (or Expression with resultType integer), minimum: 0.
	Index interface{} `pulumi:"index"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The relative URL to the web page from the linked service URL. Type: string (or Expression with resultType string).
	Path interface{} `pulumi:"path"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'WebTable'.
	Type string `pulumi:"type"`
}

// WebTableDatasetResponseInput is an input type that accepts WebTableDatasetResponseArgs and WebTableDatasetResponseOutput values.
// You can construct a concrete instance of `WebTableDatasetResponseInput` via:
//
//          WebTableDatasetResponseArgs{...}
type WebTableDatasetResponseInput interface {
	pulumi.Input

	ToWebTableDatasetResponseOutput() WebTableDatasetResponseOutput
	ToWebTableDatasetResponseOutputWithContext(context.Context) WebTableDatasetResponseOutput
}

// The dataset points to a HTML table in the web page.
type WebTableDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The zero-based index of the table in the web page. Type: integer (or Expression with resultType integer), minimum: 0.
	Index pulumi.Input `pulumi:"index"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The relative URL to the web page from the linked service URL. Type: string (or Expression with resultType string).
	Path pulumi.Input `pulumi:"path"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'WebTable'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebTableDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTableDatasetResponse)(nil)).Elem()
}

func (i WebTableDatasetResponseArgs) ToWebTableDatasetResponseOutput() WebTableDatasetResponseOutput {
	return i.ToWebTableDatasetResponseOutputWithContext(context.Background())
}

func (i WebTableDatasetResponseArgs) ToWebTableDatasetResponseOutputWithContext(ctx context.Context) WebTableDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTableDatasetResponseOutput)
}

// The dataset points to a HTML table in the web page.
type WebTableDatasetResponseOutput struct{ *pulumi.OutputState }

func (WebTableDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTableDatasetResponse)(nil)).Elem()
}

func (o WebTableDatasetResponseOutput) ToWebTableDatasetResponseOutput() WebTableDatasetResponseOutput {
	return o
}

func (o WebTableDatasetResponseOutput) ToWebTableDatasetResponseOutputWithContext(ctx context.Context) WebTableDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o WebTableDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v WebTableDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o WebTableDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTableDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The zero-based index of the table in the web page. Type: integer (or Expression with resultType integer), minimum: 0.
func (o WebTableDatasetResponseOutput) Index() pulumi.AnyOutput {
	return o.ApplyT(func(v WebTableDatasetResponse) interface{} { return v.Index }).(pulumi.AnyOutput)
}

// Linked service reference.
func (o WebTableDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v WebTableDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o WebTableDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v WebTableDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The relative URL to the web page from the linked service URL. Type: string (or Expression with resultType string).
func (o WebTableDatasetResponseOutput) Path() pulumi.AnyOutput {
	return o.ApplyT(func(v WebTableDatasetResponse) interface{} { return v.Path }).(pulumi.AnyOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o WebTableDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v WebTableDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'WebTable'.
func (o WebTableDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebTableDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Xero Service linked service.
type XeroLinkedService struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// The consumer key associated with the Xero application.
	ConsumerKey interface{} `pulumi:"consumerKey"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the Xero server. (i.e. api.xero.com)
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// The private key from the .pem file that was generated for your Xero private application. You must include all the text from the .pem file, including the Unix line endings(
	// ).
	PrivateKey interface{} `pulumi:"privateKey"`
	// Type of linked service.
	// Expected value is 'Xero'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// XeroLinkedServiceInput is an input type that accepts XeroLinkedServiceArgs and XeroLinkedServiceOutput values.
// You can construct a concrete instance of `XeroLinkedServiceInput` via:
//
//          XeroLinkedServiceArgs{...}
type XeroLinkedServiceInput interface {
	pulumi.Input

	ToXeroLinkedServiceOutput() XeroLinkedServiceOutput
	ToXeroLinkedServiceOutputWithContext(context.Context) XeroLinkedServiceOutput
}

// Xero Service linked service.
type XeroLinkedServiceArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// The consumer key associated with the Xero application.
	ConsumerKey pulumi.Input `pulumi:"consumerKey"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the Xero server. (i.e. api.xero.com)
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// The private key from the .pem file that was generated for your Xero private application. You must include all the text from the .pem file, including the Unix line endings(
	// ).
	PrivateKey pulumi.Input `pulumi:"privateKey"`
	// Type of linked service.
	// Expected value is 'Xero'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (XeroLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XeroLinkedService)(nil)).Elem()
}

func (i XeroLinkedServiceArgs) ToXeroLinkedServiceOutput() XeroLinkedServiceOutput {
	return i.ToXeroLinkedServiceOutputWithContext(context.Background())
}

func (i XeroLinkedServiceArgs) ToXeroLinkedServiceOutputWithContext(ctx context.Context) XeroLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XeroLinkedServiceOutput)
}

// Xero Service linked service.
type XeroLinkedServiceOutput struct{ *pulumi.OutputState }

func (XeroLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XeroLinkedService)(nil)).Elem()
}

func (o XeroLinkedServiceOutput) ToXeroLinkedServiceOutput() XeroLinkedServiceOutput {
	return o
}

func (o XeroLinkedServiceOutput) ToXeroLinkedServiceOutputWithContext(ctx context.Context) XeroLinkedServiceOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o XeroLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v XeroLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o XeroLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v XeroLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// The consumer key associated with the Xero application.
func (o XeroLinkedServiceOutput) ConsumerKey() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroLinkedService) interface{} { return v.ConsumerKey }).(pulumi.AnyOutput)
}

// Linked service description.
func (o XeroLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v XeroLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o XeroLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the Xero server. (i.e. api.xero.com)
func (o XeroLinkedServiceOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroLinkedService) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o XeroLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v XeroLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// The private key from the .pem file that was generated for your Xero private application. You must include all the text from the .pem file, including the Unix line endings(
// ).
func (o XeroLinkedServiceOutput) PrivateKey() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroLinkedService) interface{} { return v.PrivateKey }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Xero'.
func (o XeroLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v XeroLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o XeroLinkedServiceOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroLinkedService) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o XeroLinkedServiceOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroLinkedService) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o XeroLinkedServiceOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroLinkedService) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Xero Service linked service.
type XeroLinkedServiceResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// The consumer key associated with the Xero application.
	ConsumerKey interface{} `pulumi:"consumerKey"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the Xero server. (i.e. api.xero.com)
	Host interface{} `pulumi:"host"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// The private key from the .pem file that was generated for your Xero private application. You must include all the text from the .pem file, including the Unix line endings(
	// ).
	PrivateKey interface{} `pulumi:"privateKey"`
	// Type of linked service.
	// Expected value is 'Xero'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// XeroLinkedServiceResponseInput is an input type that accepts XeroLinkedServiceResponseArgs and XeroLinkedServiceResponseOutput values.
// You can construct a concrete instance of `XeroLinkedServiceResponseInput` via:
//
//          XeroLinkedServiceResponseArgs{...}
type XeroLinkedServiceResponseInput interface {
	pulumi.Input

	ToXeroLinkedServiceResponseOutput() XeroLinkedServiceResponseOutput
	ToXeroLinkedServiceResponseOutputWithContext(context.Context) XeroLinkedServiceResponseOutput
}

// Xero Service linked service.
type XeroLinkedServiceResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// The consumer key associated with the Xero application.
	ConsumerKey pulumi.Input `pulumi:"consumerKey"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the Xero server. (i.e. api.xero.com)
	Host pulumi.Input `pulumi:"host"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// The private key from the .pem file that was generated for your Xero private application. You must include all the text from the .pem file, including the Unix line endings(
	// ).
	PrivateKey pulumi.Input `pulumi:"privateKey"`
	// Type of linked service.
	// Expected value is 'Xero'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (XeroLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XeroLinkedServiceResponse)(nil)).Elem()
}

func (i XeroLinkedServiceResponseArgs) ToXeroLinkedServiceResponseOutput() XeroLinkedServiceResponseOutput {
	return i.ToXeroLinkedServiceResponseOutputWithContext(context.Background())
}

func (i XeroLinkedServiceResponseArgs) ToXeroLinkedServiceResponseOutputWithContext(ctx context.Context) XeroLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XeroLinkedServiceResponseOutput)
}

// Xero Service linked service.
type XeroLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (XeroLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XeroLinkedServiceResponse)(nil)).Elem()
}

func (o XeroLinkedServiceResponseOutput) ToXeroLinkedServiceResponseOutput() XeroLinkedServiceResponseOutput {
	return o
}

func (o XeroLinkedServiceResponseOutput) ToXeroLinkedServiceResponseOutputWithContext(ctx context.Context) XeroLinkedServiceResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o XeroLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v XeroLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o XeroLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v XeroLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// The consumer key associated with the Xero application.
func (o XeroLinkedServiceResponseOutput) ConsumerKey() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroLinkedServiceResponse) interface{} { return v.ConsumerKey }).(pulumi.AnyOutput)
}

// Linked service description.
func (o XeroLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v XeroLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o XeroLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the Xero server. (i.e. api.xero.com)
func (o XeroLinkedServiceResponseOutput) Host() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroLinkedServiceResponse) interface{} { return v.Host }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o XeroLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v XeroLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// The private key from the .pem file that was generated for your Xero private application. You must include all the text from the .pem file, including the Unix line endings(
// ).
func (o XeroLinkedServiceResponseOutput) PrivateKey() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroLinkedServiceResponse) interface{} { return v.PrivateKey }).(pulumi.AnyOutput)
}

// Type of linked service.
// Expected value is 'Xero'.
func (o XeroLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v XeroLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o XeroLinkedServiceResponseOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroLinkedServiceResponse) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o XeroLinkedServiceResponseOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroLinkedServiceResponse) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o XeroLinkedServiceResponseOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroLinkedServiceResponse) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Xero Service dataset.
type XeroObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'XeroObject'.
	Type string `pulumi:"type"`
}

// XeroObjectDatasetInput is an input type that accepts XeroObjectDatasetArgs and XeroObjectDatasetOutput values.
// You can construct a concrete instance of `XeroObjectDatasetInput` via:
//
//          XeroObjectDatasetArgs{...}
type XeroObjectDatasetInput interface {
	pulumi.Input

	ToXeroObjectDatasetOutput() XeroObjectDatasetOutput
	ToXeroObjectDatasetOutputWithContext(context.Context) XeroObjectDatasetOutput
}

// Xero Service dataset.
type XeroObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'XeroObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (XeroObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XeroObjectDataset)(nil)).Elem()
}

func (i XeroObjectDatasetArgs) ToXeroObjectDatasetOutput() XeroObjectDatasetOutput {
	return i.ToXeroObjectDatasetOutputWithContext(context.Background())
}

func (i XeroObjectDatasetArgs) ToXeroObjectDatasetOutputWithContext(ctx context.Context) XeroObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XeroObjectDatasetOutput)
}

// Xero Service dataset.
type XeroObjectDatasetOutput struct{ *pulumi.OutputState }

func (XeroObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XeroObjectDataset)(nil)).Elem()
}

func (o XeroObjectDatasetOutput) ToXeroObjectDatasetOutput() XeroObjectDatasetOutput {
	return o
}

func (o XeroObjectDatasetOutput) ToXeroObjectDatasetOutputWithContext(ctx context.Context) XeroObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o XeroObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v XeroObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o XeroObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v XeroObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o XeroObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v XeroObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o XeroObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v XeroObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o XeroObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'XeroObject'.
func (o XeroObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v XeroObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Xero Service dataset.
type XeroObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'XeroObject'.
	Type string `pulumi:"type"`
}

// XeroObjectDatasetResponseInput is an input type that accepts XeroObjectDatasetResponseArgs and XeroObjectDatasetResponseOutput values.
// You can construct a concrete instance of `XeroObjectDatasetResponseInput` via:
//
//          XeroObjectDatasetResponseArgs{...}
type XeroObjectDatasetResponseInput interface {
	pulumi.Input

	ToXeroObjectDatasetResponseOutput() XeroObjectDatasetResponseOutput
	ToXeroObjectDatasetResponseOutputWithContext(context.Context) XeroObjectDatasetResponseOutput
}

// Xero Service dataset.
type XeroObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'XeroObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (XeroObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XeroObjectDatasetResponse)(nil)).Elem()
}

func (i XeroObjectDatasetResponseArgs) ToXeroObjectDatasetResponseOutput() XeroObjectDatasetResponseOutput {
	return i.ToXeroObjectDatasetResponseOutputWithContext(context.Background())
}

func (i XeroObjectDatasetResponseArgs) ToXeroObjectDatasetResponseOutputWithContext(ctx context.Context) XeroObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XeroObjectDatasetResponseOutput)
}

// Xero Service dataset.
type XeroObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (XeroObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XeroObjectDatasetResponse)(nil)).Elem()
}

func (o XeroObjectDatasetResponseOutput) ToXeroObjectDatasetResponseOutput() XeroObjectDatasetResponseOutput {
	return o
}

func (o XeroObjectDatasetResponseOutput) ToXeroObjectDatasetResponseOutputWithContext(ctx context.Context) XeroObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o XeroObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v XeroObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o XeroObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v XeroObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o XeroObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v XeroObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o XeroObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v XeroObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o XeroObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'XeroObject'.
func (o XeroObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v XeroObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Xero Service source.
type XeroSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'XeroSource'.
	Type string `pulumi:"type"`
}

// XeroSourceInput is an input type that accepts XeroSourceArgs and XeroSourceOutput values.
// You can construct a concrete instance of `XeroSourceInput` via:
//
//          XeroSourceArgs{...}
type XeroSourceInput interface {
	pulumi.Input

	ToXeroSourceOutput() XeroSourceOutput
	ToXeroSourceOutputWithContext(context.Context) XeroSourceOutput
}

// A copy activity Xero Service source.
type XeroSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'XeroSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (XeroSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XeroSource)(nil)).Elem()
}

func (i XeroSourceArgs) ToXeroSourceOutput() XeroSourceOutput {
	return i.ToXeroSourceOutputWithContext(context.Background())
}

func (i XeroSourceArgs) ToXeroSourceOutputWithContext(ctx context.Context) XeroSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XeroSourceOutput)
}

// A copy activity Xero Service source.
type XeroSourceOutput struct{ *pulumi.OutputState }

func (XeroSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XeroSource)(nil)).Elem()
}

func (o XeroSourceOutput) ToXeroSourceOutput() XeroSourceOutput {
	return o
}

func (o XeroSourceOutput) ToXeroSourceOutputWithContext(ctx context.Context) XeroSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o XeroSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o XeroSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o XeroSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'XeroSource'.
func (o XeroSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v XeroSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Xero Service source.
type XeroSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'XeroSource'.
	Type string `pulumi:"type"`
}

// XeroSourceResponseInput is an input type that accepts XeroSourceResponseArgs and XeroSourceResponseOutput values.
// You can construct a concrete instance of `XeroSourceResponseInput` via:
//
//          XeroSourceResponseArgs{...}
type XeroSourceResponseInput interface {
	pulumi.Input

	ToXeroSourceResponseOutput() XeroSourceResponseOutput
	ToXeroSourceResponseOutputWithContext(context.Context) XeroSourceResponseOutput
}

// A copy activity Xero Service source.
type XeroSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'XeroSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (XeroSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XeroSourceResponse)(nil)).Elem()
}

func (i XeroSourceResponseArgs) ToXeroSourceResponseOutput() XeroSourceResponseOutput {
	return i.ToXeroSourceResponseOutputWithContext(context.Background())
}

func (i XeroSourceResponseArgs) ToXeroSourceResponseOutputWithContext(ctx context.Context) XeroSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XeroSourceResponseOutput)
}

// A copy activity Xero Service source.
type XeroSourceResponseOutput struct{ *pulumi.OutputState }

func (XeroSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XeroSourceResponse)(nil)).Elem()
}

func (o XeroSourceResponseOutput) ToXeroSourceResponseOutput() XeroSourceResponseOutput {
	return o
}

func (o XeroSourceResponseOutput) ToXeroSourceResponseOutputWithContext(ctx context.Context) XeroSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o XeroSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o XeroSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o XeroSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v XeroSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'XeroSource'.
func (o XeroSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v XeroSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Zoho server linked service.
type ZohoLinkedService struct {
	// The access token for Zoho authentication.
	AccessToken interface{} `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReference `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the Zoho server. (i.e. crm.zoho.com/crm/private)
	Endpoint interface{} `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Zoho'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// ZohoLinkedServiceInput is an input type that accepts ZohoLinkedServiceArgs and ZohoLinkedServiceOutput values.
// You can construct a concrete instance of `ZohoLinkedServiceInput` via:
//
//          ZohoLinkedServiceArgs{...}
type ZohoLinkedServiceInput interface {
	pulumi.Input

	ToZohoLinkedServiceOutput() ZohoLinkedServiceOutput
	ToZohoLinkedServiceOutputWithContext(context.Context) ZohoLinkedServiceOutput
}

// Zoho server linked service.
type ZohoLinkedServiceArgs struct {
	// The access token for Zoho authentication.
	AccessToken pulumi.Input `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferencePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the Zoho server. (i.e. crm.zoho.com/crm/private)
	Endpoint pulumi.Input `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Zoho'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (ZohoLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZohoLinkedService)(nil)).Elem()
}

func (i ZohoLinkedServiceArgs) ToZohoLinkedServiceOutput() ZohoLinkedServiceOutput {
	return i.ToZohoLinkedServiceOutputWithContext(context.Background())
}

func (i ZohoLinkedServiceArgs) ToZohoLinkedServiceOutputWithContext(ctx context.Context) ZohoLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZohoLinkedServiceOutput)
}

// Zoho server linked service.
type ZohoLinkedServiceOutput struct{ *pulumi.OutputState }

func (ZohoLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZohoLinkedService)(nil)).Elem()
}

func (o ZohoLinkedServiceOutput) ToZohoLinkedServiceOutput() ZohoLinkedServiceOutput {
	return o
}

func (o ZohoLinkedServiceOutput) ToZohoLinkedServiceOutputWithContext(ctx context.Context) ZohoLinkedServiceOutput {
	return o
}

// The access token for Zoho authentication.
func (o ZohoLinkedServiceOutput) AccessToken() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoLinkedService) interface{} { return v.AccessToken }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o ZohoLinkedServiceOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ZohoLinkedService) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o ZohoLinkedServiceOutput) ConnectVia() IntegrationRuntimeReferencePtrOutput {
	return o.ApplyT(func(v ZohoLinkedService) *IntegrationRuntimeReference { return v.ConnectVia }).(IntegrationRuntimeReferencePtrOutput)
}

// Linked service description.
func (o ZohoLinkedServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZohoLinkedService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o ZohoLinkedServiceOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoLinkedService) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the Zoho server. (i.e. crm.zoho.com/crm/private)
func (o ZohoLinkedServiceOutput) Endpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoLinkedService) interface{} { return v.Endpoint }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o ZohoLinkedServiceOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v ZohoLinkedService) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Type of linked service.
// Expected value is 'Zoho'.
func (o ZohoLinkedServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ZohoLinkedService) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o ZohoLinkedServiceOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoLinkedService) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o ZohoLinkedServiceOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoLinkedService) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o ZohoLinkedServiceOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoLinkedService) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Zoho server linked service.
type ZohoLinkedServiceResponse struct {
	// The access token for Zoho authentication.
	AccessToken interface{} `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia *IntegrationRuntimeReferenceResponse `pulumi:"connectVia"`
	// Linked service description.
	Description *string `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential interface{} `pulumi:"encryptedCredential"`
	// The endpoint of the Zoho server. (i.e. crm.zoho.com/crm/private)
	Endpoint interface{} `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Zoho'.
	Type string `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints interface{} `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification interface{} `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification interface{} `pulumi:"usePeerVerification"`
}

// ZohoLinkedServiceResponseInput is an input type that accepts ZohoLinkedServiceResponseArgs and ZohoLinkedServiceResponseOutput values.
// You can construct a concrete instance of `ZohoLinkedServiceResponseInput` via:
//
//          ZohoLinkedServiceResponseArgs{...}
type ZohoLinkedServiceResponseInput interface {
	pulumi.Input

	ToZohoLinkedServiceResponseOutput() ZohoLinkedServiceResponseOutput
	ToZohoLinkedServiceResponseOutputWithContext(context.Context) ZohoLinkedServiceResponseOutput
}

// Zoho server linked service.
type ZohoLinkedServiceResponseArgs struct {
	// The access token for Zoho authentication.
	AccessToken pulumi.Input `pulumi:"accessToken"`
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// The integration runtime reference.
	ConnectVia IntegrationRuntimeReferenceResponsePtrInput `pulumi:"connectVia"`
	// Linked service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
	EncryptedCredential pulumi.Input `pulumi:"encryptedCredential"`
	// The endpoint of the Zoho server. (i.e. crm.zoho.com/crm/private)
	Endpoint pulumi.Input `pulumi:"endpoint"`
	// Parameters for linked service.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Type of linked service.
	// Expected value is 'Zoho'.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
	UseEncryptedEndpoints pulumi.Input `pulumi:"useEncryptedEndpoints"`
	// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
	UseHostVerification pulumi.Input `pulumi:"useHostVerification"`
	// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
	UsePeerVerification pulumi.Input `pulumi:"usePeerVerification"`
}

func (ZohoLinkedServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZohoLinkedServiceResponse)(nil)).Elem()
}

func (i ZohoLinkedServiceResponseArgs) ToZohoLinkedServiceResponseOutput() ZohoLinkedServiceResponseOutput {
	return i.ToZohoLinkedServiceResponseOutputWithContext(context.Background())
}

func (i ZohoLinkedServiceResponseArgs) ToZohoLinkedServiceResponseOutputWithContext(ctx context.Context) ZohoLinkedServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZohoLinkedServiceResponseOutput)
}

// Zoho server linked service.
type ZohoLinkedServiceResponseOutput struct{ *pulumi.OutputState }

func (ZohoLinkedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZohoLinkedServiceResponse)(nil)).Elem()
}

func (o ZohoLinkedServiceResponseOutput) ToZohoLinkedServiceResponseOutput() ZohoLinkedServiceResponseOutput {
	return o
}

func (o ZohoLinkedServiceResponseOutput) ToZohoLinkedServiceResponseOutputWithContext(ctx context.Context) ZohoLinkedServiceResponseOutput {
	return o
}

// The access token for Zoho authentication.
func (o ZohoLinkedServiceResponseOutput) AccessToken() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoLinkedServiceResponse) interface{} { return v.AccessToken }).(pulumi.AnyOutput)
}

// List of tags that can be used for describing the Dataset.
func (o ZohoLinkedServiceResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ZohoLinkedServiceResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// The integration runtime reference.
func (o ZohoLinkedServiceResponseOutput) ConnectVia() IntegrationRuntimeReferenceResponsePtrOutput {
	return o.ApplyT(func(v ZohoLinkedServiceResponse) *IntegrationRuntimeReferenceResponse { return v.ConnectVia }).(IntegrationRuntimeReferenceResponsePtrOutput)
}

// Linked service description.
func (o ZohoLinkedServiceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZohoLinkedServiceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
func (o ZohoLinkedServiceResponseOutput) EncryptedCredential() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoLinkedServiceResponse) interface{} { return v.EncryptedCredential }).(pulumi.AnyOutput)
}

// The endpoint of the Zoho server. (i.e. crm.zoho.com/crm/private)
func (o ZohoLinkedServiceResponseOutput) Endpoint() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoLinkedServiceResponse) interface{} { return v.Endpoint }).(pulumi.AnyOutput)
}

// Parameters for linked service.
func (o ZohoLinkedServiceResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v ZohoLinkedServiceResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Type of linked service.
// Expected value is 'Zoho'.
func (o ZohoLinkedServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ZohoLinkedServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
func (o ZohoLinkedServiceResponseOutput) UseEncryptedEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoLinkedServiceResponse) interface{} { return v.UseEncryptedEndpoints }).(pulumi.AnyOutput)
}

// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
func (o ZohoLinkedServiceResponseOutput) UseHostVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoLinkedServiceResponse) interface{} { return v.UseHostVerification }).(pulumi.AnyOutput)
}

// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
func (o ZohoLinkedServiceResponseOutput) UsePeerVerification() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoLinkedServiceResponse) interface{} { return v.UsePeerVerification }).(pulumi.AnyOutput)
}

// Zoho server dataset.
type ZohoObjectDataset struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReference `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecification `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ZohoObject'.
	Type string `pulumi:"type"`
}

// ZohoObjectDatasetInput is an input type that accepts ZohoObjectDatasetArgs and ZohoObjectDatasetOutput values.
// You can construct a concrete instance of `ZohoObjectDatasetInput` via:
//
//          ZohoObjectDatasetArgs{...}
type ZohoObjectDatasetInput interface {
	pulumi.Input

	ToZohoObjectDatasetOutput() ZohoObjectDatasetOutput
	ToZohoObjectDatasetOutputWithContext(context.Context) ZohoObjectDatasetOutput
}

// Zoho server dataset.
type ZohoObjectDatasetArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ZohoObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ZohoObjectDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZohoObjectDataset)(nil)).Elem()
}

func (i ZohoObjectDatasetArgs) ToZohoObjectDatasetOutput() ZohoObjectDatasetOutput {
	return i.ToZohoObjectDatasetOutputWithContext(context.Background())
}

func (i ZohoObjectDatasetArgs) ToZohoObjectDatasetOutputWithContext(ctx context.Context) ZohoObjectDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZohoObjectDatasetOutput)
}

// Zoho server dataset.
type ZohoObjectDatasetOutput struct{ *pulumi.OutputState }

func (ZohoObjectDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZohoObjectDataset)(nil)).Elem()
}

func (o ZohoObjectDatasetOutput) ToZohoObjectDatasetOutput() ZohoObjectDatasetOutput {
	return o
}

func (o ZohoObjectDatasetOutput) ToZohoObjectDatasetOutputWithContext(ctx context.Context) ZohoObjectDatasetOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ZohoObjectDatasetOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ZohoObjectDataset) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o ZohoObjectDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZohoObjectDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o ZohoObjectDatasetOutput) LinkedServiceName() LinkedServiceReferenceOutput {
	return o.ApplyT(func(v ZohoObjectDataset) LinkedServiceReference { return v.LinkedServiceName }).(LinkedServiceReferenceOutput)
}

// Parameters for dataset.
func (o ZohoObjectDatasetOutput) Parameters() ParameterSpecificationMapOutput {
	return o.ApplyT(func(v ZohoObjectDataset) map[string]ParameterSpecification { return v.Parameters }).(ParameterSpecificationMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o ZohoObjectDatasetOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoObjectDataset) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'ZohoObject'.
func (o ZohoObjectDatasetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ZohoObjectDataset) string { return v.Type }).(pulumi.StringOutput)
}

// Zoho server dataset.
type ZohoObjectDatasetResponse struct {
	// List of tags that can be used for describing the Dataset.
	Annotations []interface{} `pulumi:"annotations"`
	// Dataset description.
	Description *string `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponse `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters map[string]ParameterSpecificationResponse `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure interface{} `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ZohoObject'.
	Type string `pulumi:"type"`
}

// ZohoObjectDatasetResponseInput is an input type that accepts ZohoObjectDatasetResponseArgs and ZohoObjectDatasetResponseOutput values.
// You can construct a concrete instance of `ZohoObjectDatasetResponseInput` via:
//
//          ZohoObjectDatasetResponseArgs{...}
type ZohoObjectDatasetResponseInput interface {
	pulumi.Input

	ToZohoObjectDatasetResponseOutput() ZohoObjectDatasetResponseOutput
	ToZohoObjectDatasetResponseOutputWithContext(context.Context) ZohoObjectDatasetResponseOutput
}

// Zoho server dataset.
type ZohoObjectDatasetResponseArgs struct {
	// List of tags that can be used for describing the Dataset.
	Annotations pulumi.ArrayInput `pulumi:"annotations"`
	// Dataset description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Linked service reference.
	LinkedServiceName LinkedServiceReferenceResponseInput `pulumi:"linkedServiceName"`
	// Parameters for dataset.
	Parameters ParameterSpecificationResponseMapInput `pulumi:"parameters"`
	// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
	Structure pulumi.Input `pulumi:"structure"`
	// Type of dataset.
	// Expected value is 'ZohoObject'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ZohoObjectDatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZohoObjectDatasetResponse)(nil)).Elem()
}

func (i ZohoObjectDatasetResponseArgs) ToZohoObjectDatasetResponseOutput() ZohoObjectDatasetResponseOutput {
	return i.ToZohoObjectDatasetResponseOutputWithContext(context.Background())
}

func (i ZohoObjectDatasetResponseArgs) ToZohoObjectDatasetResponseOutputWithContext(ctx context.Context) ZohoObjectDatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZohoObjectDatasetResponseOutput)
}

// Zoho server dataset.
type ZohoObjectDatasetResponseOutput struct{ *pulumi.OutputState }

func (ZohoObjectDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZohoObjectDatasetResponse)(nil)).Elem()
}

func (o ZohoObjectDatasetResponseOutput) ToZohoObjectDatasetResponseOutput() ZohoObjectDatasetResponseOutput {
	return o
}

func (o ZohoObjectDatasetResponseOutput) ToZohoObjectDatasetResponseOutputWithContext(ctx context.Context) ZohoObjectDatasetResponseOutput {
	return o
}

// List of tags that can be used for describing the Dataset.
func (o ZohoObjectDatasetResponseOutput) Annotations() pulumi.ArrayOutput {
	return o.ApplyT(func(v ZohoObjectDatasetResponse) []interface{} { return v.Annotations }).(pulumi.ArrayOutput)
}

// Dataset description.
func (o ZohoObjectDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZohoObjectDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Linked service reference.
func (o ZohoObjectDatasetResponseOutput) LinkedServiceName() LinkedServiceReferenceResponseOutput {
	return o.ApplyT(func(v ZohoObjectDatasetResponse) LinkedServiceReferenceResponse { return v.LinkedServiceName }).(LinkedServiceReferenceResponseOutput)
}

// Parameters for dataset.
func (o ZohoObjectDatasetResponseOutput) Parameters() ParameterSpecificationResponseMapOutput {
	return o.ApplyT(func(v ZohoObjectDatasetResponse) map[string]ParameterSpecificationResponse { return v.Parameters }).(ParameterSpecificationResponseMapOutput)
}

// Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.
func (o ZohoObjectDatasetResponseOutput) Structure() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoObjectDatasetResponse) interface{} { return v.Structure }).(pulumi.AnyOutput)
}

// Type of dataset.
// Expected value is 'ZohoObject'.
func (o ZohoObjectDatasetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ZohoObjectDatasetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Zoho server source.
type ZohoSource struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ZohoSource'.
	Type string `pulumi:"type"`
}

// ZohoSourceInput is an input type that accepts ZohoSourceArgs and ZohoSourceOutput values.
// You can construct a concrete instance of `ZohoSourceInput` via:
//
//          ZohoSourceArgs{...}
type ZohoSourceInput interface {
	pulumi.Input

	ToZohoSourceOutput() ZohoSourceOutput
	ToZohoSourceOutputWithContext(context.Context) ZohoSourceOutput
}

// A copy activity Zoho server source.
type ZohoSourceArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ZohoSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ZohoSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZohoSource)(nil)).Elem()
}

func (i ZohoSourceArgs) ToZohoSourceOutput() ZohoSourceOutput {
	return i.ToZohoSourceOutputWithContext(context.Background())
}

func (i ZohoSourceArgs) ToZohoSourceOutputWithContext(ctx context.Context) ZohoSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZohoSourceOutput)
}

// A copy activity Zoho server source.
type ZohoSourceOutput struct{ *pulumi.OutputState }

func (ZohoSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZohoSource)(nil)).Elem()
}

func (o ZohoSourceOutput) ToZohoSourceOutput() ZohoSourceOutput {
	return o
}

func (o ZohoSourceOutput) ToZohoSourceOutputWithContext(ctx context.Context) ZohoSourceOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o ZohoSourceOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoSource) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o ZohoSourceOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoSource) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o ZohoSourceOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoSource) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'ZohoSource'.
func (o ZohoSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ZohoSource) string { return v.Type }).(pulumi.StringOutput)
}

// A copy activity Zoho server source.
type ZohoSourceResponse struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query interface{} `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount interface{} `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait interface{} `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ZohoSource'.
	Type string `pulumi:"type"`
}

// ZohoSourceResponseInput is an input type that accepts ZohoSourceResponseArgs and ZohoSourceResponseOutput values.
// You can construct a concrete instance of `ZohoSourceResponseInput` via:
//
//          ZohoSourceResponseArgs{...}
type ZohoSourceResponseInput interface {
	pulumi.Input

	ToZohoSourceResponseOutput() ZohoSourceResponseOutput
	ToZohoSourceResponseOutputWithContext(context.Context) ZohoSourceResponseOutput
}

// A copy activity Zoho server source.
type ZohoSourceResponseArgs struct {
	// A query to retrieve data from source. Type: string (or Expression with resultType string).
	Query pulumi.Input `pulumi:"query"`
	// Source retry count. Type: integer (or Expression with resultType integer).
	SourceRetryCount pulumi.Input `pulumi:"sourceRetryCount"`
	// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
	SourceRetryWait pulumi.Input `pulumi:"sourceRetryWait"`
	// Copy source type.
	// Expected value is 'ZohoSource'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ZohoSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZohoSourceResponse)(nil)).Elem()
}

func (i ZohoSourceResponseArgs) ToZohoSourceResponseOutput() ZohoSourceResponseOutput {
	return i.ToZohoSourceResponseOutputWithContext(context.Background())
}

func (i ZohoSourceResponseArgs) ToZohoSourceResponseOutputWithContext(ctx context.Context) ZohoSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZohoSourceResponseOutput)
}

// A copy activity Zoho server source.
type ZohoSourceResponseOutput struct{ *pulumi.OutputState }

func (ZohoSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZohoSourceResponse)(nil)).Elem()
}

func (o ZohoSourceResponseOutput) ToZohoSourceResponseOutput() ZohoSourceResponseOutput {
	return o
}

func (o ZohoSourceResponseOutput) ToZohoSourceResponseOutputWithContext(ctx context.Context) ZohoSourceResponseOutput {
	return o
}

// A query to retrieve data from source. Type: string (or Expression with resultType string).
func (o ZohoSourceResponseOutput) Query() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoSourceResponse) interface{} { return v.Query }).(pulumi.AnyOutput)
}

// Source retry count. Type: integer (or Expression with resultType integer).
func (o ZohoSourceResponseOutput) SourceRetryCount() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoSourceResponse) interface{} { return v.SourceRetryCount }).(pulumi.AnyOutput)
}

// Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
func (o ZohoSourceResponseOutput) SourceRetryWait() pulumi.AnyOutput {
	return o.ApplyT(func(v ZohoSourceResponse) interface{} { return v.SourceRetryWait }).(pulumi.AnyOutput)
}

// Copy source type.
// Expected value is 'ZohoSource'.
func (o ZohoSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ZohoSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ActivityDependencyOutput{})
	pulumi.RegisterOutputType(ActivityDependencyArrayOutput{})
	pulumi.RegisterOutputType(ActivityDependencyResponseOutput{})
	pulumi.RegisterOutputType(ActivityDependencyResponseArrayOutput{})
	pulumi.RegisterOutputType(ActivityPolicyOutput{})
	pulumi.RegisterOutputType(ActivityPolicyPtrOutput{})
	pulumi.RegisterOutputType(ActivityPolicyResponseOutput{})
	pulumi.RegisterOutputType(ActivityPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(AmazonMWSLinkedServiceOutput{})
	pulumi.RegisterOutputType(AmazonMWSLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(AmazonMWSObjectDatasetOutput{})
	pulumi.RegisterOutputType(AmazonMWSObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(AmazonMWSSourceOutput{})
	pulumi.RegisterOutputType(AmazonMWSSourceResponseOutput{})
	pulumi.RegisterOutputType(AmazonRedshiftLinkedServiceOutput{})
	pulumi.RegisterOutputType(AmazonRedshiftLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(AmazonRedshiftSourceOutput{})
	pulumi.RegisterOutputType(AmazonRedshiftSourceResponseOutput{})
	pulumi.RegisterOutputType(AmazonS3DatasetOutput{})
	pulumi.RegisterOutputType(AmazonS3DatasetResponseOutput{})
	pulumi.RegisterOutputType(AmazonS3LinkedServiceOutput{})
	pulumi.RegisterOutputType(AmazonS3LinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(AvroFormatOutput{})
	pulumi.RegisterOutputType(AvroFormatResponseOutput{})
	pulumi.RegisterOutputType(AzureBatchLinkedServiceOutput{})
	pulumi.RegisterOutputType(AzureBatchLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(AzureBlobDatasetOutput{})
	pulumi.RegisterOutputType(AzureBlobDatasetResponseOutput{})
	pulumi.RegisterOutputType(AzureDataLakeAnalyticsLinkedServiceOutput{})
	pulumi.RegisterOutputType(AzureDataLakeAnalyticsLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(AzureDataLakeStoreDatasetOutput{})
	pulumi.RegisterOutputType(AzureDataLakeStoreDatasetResponseOutput{})
	pulumi.RegisterOutputType(AzureDataLakeStoreLinkedServiceOutput{})
	pulumi.RegisterOutputType(AzureDataLakeStoreLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(AzureDataLakeStoreSinkOutput{})
	pulumi.RegisterOutputType(AzureDataLakeStoreSinkResponseOutput{})
	pulumi.RegisterOutputType(AzureDataLakeStoreSourceOutput{})
	pulumi.RegisterOutputType(AzureDataLakeStoreSourceResponseOutput{})
	pulumi.RegisterOutputType(AzureDatabricksLinkedServiceOutput{})
	pulumi.RegisterOutputType(AzureDatabricksLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(AzureKeyVaultLinkedServiceOutput{})
	pulumi.RegisterOutputType(AzureKeyVaultLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(AzureKeyVaultSecretReferenceOutput{})
	pulumi.RegisterOutputType(AzureKeyVaultSecretReferenceResponseOutput{})
	pulumi.RegisterOutputType(AzureMLBatchExecutionActivityOutput{})
	pulumi.RegisterOutputType(AzureMLBatchExecutionActivityResponseOutput{})
	pulumi.RegisterOutputType(AzureMLLinkedServiceOutput{})
	pulumi.RegisterOutputType(AzureMLLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(AzureMLUpdateResourceActivityOutput{})
	pulumi.RegisterOutputType(AzureMLUpdateResourceActivityResponseOutput{})
	pulumi.RegisterOutputType(AzureMLWebServiceFileOutput{})
	pulumi.RegisterOutputType(AzureMLWebServiceFileMapOutput{})
	pulumi.RegisterOutputType(AzureMLWebServiceFileResponseOutput{})
	pulumi.RegisterOutputType(AzureMLWebServiceFileResponseMapOutput{})
	pulumi.RegisterOutputType(AzureMySqlLinkedServiceOutput{})
	pulumi.RegisterOutputType(AzureMySqlLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(AzureMySqlSourceOutput{})
	pulumi.RegisterOutputType(AzureMySqlSourceResponseOutput{})
	pulumi.RegisterOutputType(AzureMySqlTableDatasetOutput{})
	pulumi.RegisterOutputType(AzureMySqlTableDatasetResponseOutput{})
	pulumi.RegisterOutputType(AzurePostgreSqlLinkedServiceOutput{})
	pulumi.RegisterOutputType(AzurePostgreSqlLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(AzurePostgreSqlSourceOutput{})
	pulumi.RegisterOutputType(AzurePostgreSqlSourceResponseOutput{})
	pulumi.RegisterOutputType(AzurePostgreSqlTableDatasetOutput{})
	pulumi.RegisterOutputType(AzurePostgreSqlTableDatasetResponseOutput{})
	pulumi.RegisterOutputType(AzureQueueSinkOutput{})
	pulumi.RegisterOutputType(AzureQueueSinkResponseOutput{})
	pulumi.RegisterOutputType(AzureSearchIndexDatasetOutput{})
	pulumi.RegisterOutputType(AzureSearchIndexDatasetResponseOutput{})
	pulumi.RegisterOutputType(AzureSearchIndexSinkOutput{})
	pulumi.RegisterOutputType(AzureSearchIndexSinkResponseOutput{})
	pulumi.RegisterOutputType(AzureSearchLinkedServiceOutput{})
	pulumi.RegisterOutputType(AzureSearchLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlDWLinkedServiceOutput{})
	pulumi.RegisterOutputType(AzureSqlDWLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlDWTableDatasetOutput{})
	pulumi.RegisterOutputType(AzureSqlDWTableDatasetResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlDatabaseLinkedServiceOutput{})
	pulumi.RegisterOutputType(AzureSqlDatabaseLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlTableDatasetOutput{})
	pulumi.RegisterOutputType(AzureSqlTableDatasetResponseOutput{})
	pulumi.RegisterOutputType(AzureStorageLinkedServiceOutput{})
	pulumi.RegisterOutputType(AzureStorageLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(AzureTableDatasetOutput{})
	pulumi.RegisterOutputType(AzureTableDatasetResponseOutput{})
	pulumi.RegisterOutputType(AzureTableSinkOutput{})
	pulumi.RegisterOutputType(AzureTableSinkResponseOutput{})
	pulumi.RegisterOutputType(AzureTableSourceOutput{})
	pulumi.RegisterOutputType(AzureTableSourceResponseOutput{})
	pulumi.RegisterOutputType(BlobEventsTriggerOutput{})
	pulumi.RegisterOutputType(BlobEventsTriggerResponseOutput{})
	pulumi.RegisterOutputType(BlobSinkOutput{})
	pulumi.RegisterOutputType(BlobSinkResponseOutput{})
	pulumi.RegisterOutputType(BlobSourceOutput{})
	pulumi.RegisterOutputType(BlobSourceResponseOutput{})
	pulumi.RegisterOutputType(BlobTriggerOutput{})
	pulumi.RegisterOutputType(BlobTriggerResponseOutput{})
	pulumi.RegisterOutputType(CassandraLinkedServiceOutput{})
	pulumi.RegisterOutputType(CassandraLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(CassandraSourceOutput{})
	pulumi.RegisterOutputType(CassandraSourceResponseOutput{})
	pulumi.RegisterOutputType(CassandraTableDatasetOutput{})
	pulumi.RegisterOutputType(CassandraTableDatasetResponseOutput{})
	pulumi.RegisterOutputType(ConcurLinkedServiceOutput{})
	pulumi.RegisterOutputType(ConcurLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(ConcurObjectDatasetOutput{})
	pulumi.RegisterOutputType(ConcurObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(ConcurSourceOutput{})
	pulumi.RegisterOutputType(ConcurSourceResponseOutput{})
	pulumi.RegisterOutputType(ControlActivityOutput{})
	pulumi.RegisterOutputType(ControlActivityResponseOutput{})
	pulumi.RegisterOutputType(CopyActivityOutput{})
	pulumi.RegisterOutputType(CopyActivityResponseOutput{})
	pulumi.RegisterOutputType(CosmosDbLinkedServiceOutput{})
	pulumi.RegisterOutputType(CosmosDbLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(CouchbaseLinkedServiceOutput{})
	pulumi.RegisterOutputType(CouchbaseLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(CouchbaseSourceOutput{})
	pulumi.RegisterOutputType(CouchbaseSourceResponseOutput{})
	pulumi.RegisterOutputType(CouchbaseTableDatasetOutput{})
	pulumi.RegisterOutputType(CouchbaseTableDatasetResponseOutput{})
	pulumi.RegisterOutputType(CustomActivityOutput{})
	pulumi.RegisterOutputType(CustomActivityReferenceObjectOutput{})
	pulumi.RegisterOutputType(CustomActivityReferenceObjectPtrOutput{})
	pulumi.RegisterOutputType(CustomActivityReferenceObjectResponseOutput{})
	pulumi.RegisterOutputType(CustomActivityReferenceObjectResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomActivityResponseOutput{})
	pulumi.RegisterOutputType(CustomDataSourceLinkedServiceOutput{})
	pulumi.RegisterOutputType(CustomDataSourceLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(CustomDatasetOutput{})
	pulumi.RegisterOutputType(CustomDatasetResponseOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsUSQLActivityOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsUSQLActivityResponseOutput{})
	pulumi.RegisterOutputType(DatabricksNotebookActivityOutput{})
	pulumi.RegisterOutputType(DatabricksNotebookActivityResponseOutput{})
	pulumi.RegisterOutputType(DatasetBZip2CompressionOutput{})
	pulumi.RegisterOutputType(DatasetBZip2CompressionResponseOutput{})
	pulumi.RegisterOutputType(DatasetDeflateCompressionOutput{})
	pulumi.RegisterOutputType(DatasetDeflateCompressionResponseOutput{})
	pulumi.RegisterOutputType(DatasetGZipCompressionOutput{})
	pulumi.RegisterOutputType(DatasetGZipCompressionResponseOutput{})
	pulumi.RegisterOutputType(DatasetReferenceOutput{})
	pulumi.RegisterOutputType(DatasetReferenceArrayOutput{})
	pulumi.RegisterOutputType(DatasetReferenceResponseOutput{})
	pulumi.RegisterOutputType(DatasetReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(DatasetZipDeflateCompressionOutput{})
	pulumi.RegisterOutputType(DatasetZipDeflateCompressionResponseOutput{})
	pulumi.RegisterOutputType(Db2LinkedServiceOutput{})
	pulumi.RegisterOutputType(Db2LinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(DistcpSettingsOutput{})
	pulumi.RegisterOutputType(DistcpSettingsPtrOutput{})
	pulumi.RegisterOutputType(DistcpSettingsResponseOutput{})
	pulumi.RegisterOutputType(DistcpSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DocumentDbCollectionDatasetOutput{})
	pulumi.RegisterOutputType(DocumentDbCollectionDatasetResponseOutput{})
	pulumi.RegisterOutputType(DocumentDbCollectionSinkOutput{})
	pulumi.RegisterOutputType(DocumentDbCollectionSinkResponseOutput{})
	pulumi.RegisterOutputType(DocumentDbCollectionSourceOutput{})
	pulumi.RegisterOutputType(DocumentDbCollectionSourceResponseOutput{})
	pulumi.RegisterOutputType(DrillLinkedServiceOutput{})
	pulumi.RegisterOutputType(DrillLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(DrillSourceOutput{})
	pulumi.RegisterOutputType(DrillSourceResponseOutput{})
	pulumi.RegisterOutputType(DrillTableDatasetOutput{})
	pulumi.RegisterOutputType(DrillTableDatasetResponseOutput{})
	pulumi.RegisterOutputType(DynamicsEntityDatasetOutput{})
	pulumi.RegisterOutputType(DynamicsEntityDatasetResponseOutput{})
	pulumi.RegisterOutputType(DynamicsLinkedServiceOutput{})
	pulumi.RegisterOutputType(DynamicsLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(DynamicsSinkOutput{})
	pulumi.RegisterOutputType(DynamicsSinkResponseOutput{})
	pulumi.RegisterOutputType(DynamicsSourceOutput{})
	pulumi.RegisterOutputType(DynamicsSourceResponseOutput{})
	pulumi.RegisterOutputType(EloquaLinkedServiceOutput{})
	pulumi.RegisterOutputType(EloquaLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(EloquaObjectDatasetOutput{})
	pulumi.RegisterOutputType(EloquaObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(EloquaSourceOutput{})
	pulumi.RegisterOutputType(EloquaSourceResponseOutput{})
	pulumi.RegisterOutputType(EntityReferenceOutput{})
	pulumi.RegisterOutputType(EntityReferencePtrOutput{})
	pulumi.RegisterOutputType(EntityReferenceResponseOutput{})
	pulumi.RegisterOutputType(EntityReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ExecutePipelineActivityOutput{})
	pulumi.RegisterOutputType(ExecutePipelineActivityResponseOutput{})
	pulumi.RegisterOutputType(ExecuteSSISPackageActivityOutput{})
	pulumi.RegisterOutputType(ExecuteSSISPackageActivityResponseOutput{})
	pulumi.RegisterOutputType(ExecutionActivityOutput{})
	pulumi.RegisterOutputType(ExecutionActivityResponseOutput{})
	pulumi.RegisterOutputType(ExpressionOutput{})
	pulumi.RegisterOutputType(ExpressionResponseOutput{})
	pulumi.RegisterOutputType(FactoryIdentityOutput{})
	pulumi.RegisterOutputType(FactoryIdentityPtrOutput{})
	pulumi.RegisterOutputType(FactoryIdentityResponseOutput{})
	pulumi.RegisterOutputType(FactoryIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(FactoryVSTSConfigurationOutput{})
	pulumi.RegisterOutputType(FactoryVSTSConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FactoryVSTSConfigurationResponseOutput{})
	pulumi.RegisterOutputType(FactoryVSTSConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(FileServerLinkedServiceOutput{})
	pulumi.RegisterOutputType(FileServerLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(FileShareDatasetOutput{})
	pulumi.RegisterOutputType(FileShareDatasetResponseOutput{})
	pulumi.RegisterOutputType(FileSystemSinkOutput{})
	pulumi.RegisterOutputType(FileSystemSinkResponseOutput{})
	pulumi.RegisterOutputType(FileSystemSourceOutput{})
	pulumi.RegisterOutputType(FileSystemSourceResponseOutput{})
	pulumi.RegisterOutputType(FilterActivityOutput{})
	pulumi.RegisterOutputType(FilterActivityResponseOutput{})
	pulumi.RegisterOutputType(ForEachActivityOutput{})
	pulumi.RegisterOutputType(ForEachActivityResponseOutput{})
	pulumi.RegisterOutputType(FtpServerLinkedServiceOutput{})
	pulumi.RegisterOutputType(FtpServerLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(GetMetadataActivityOutput{})
	pulumi.RegisterOutputType(GetMetadataActivityResponseOutput{})
	pulumi.RegisterOutputType(GoogleBigQueryLinkedServiceOutput{})
	pulumi.RegisterOutputType(GoogleBigQueryLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(GoogleBigQueryObjectDatasetOutput{})
	pulumi.RegisterOutputType(GoogleBigQueryObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(GoogleBigQuerySourceOutput{})
	pulumi.RegisterOutputType(GoogleBigQuerySourceResponseOutput{})
	pulumi.RegisterOutputType(GreenplumLinkedServiceOutput{})
	pulumi.RegisterOutputType(GreenplumLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(GreenplumSourceOutput{})
	pulumi.RegisterOutputType(GreenplumSourceResponseOutput{})
	pulumi.RegisterOutputType(GreenplumTableDatasetOutput{})
	pulumi.RegisterOutputType(GreenplumTableDatasetResponseOutput{})
	pulumi.RegisterOutputType(HBaseLinkedServiceOutput{})
	pulumi.RegisterOutputType(HBaseLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(HBaseObjectDatasetOutput{})
	pulumi.RegisterOutputType(HBaseObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(HBaseSourceOutput{})
	pulumi.RegisterOutputType(HBaseSourceResponseOutput{})
	pulumi.RegisterOutputType(HDInsightHiveActivityOutput{})
	pulumi.RegisterOutputType(HDInsightHiveActivityResponseOutput{})
	pulumi.RegisterOutputType(HDInsightLinkedServiceOutput{})
	pulumi.RegisterOutputType(HDInsightLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(HDInsightMapReduceActivityOutput{})
	pulumi.RegisterOutputType(HDInsightMapReduceActivityResponseOutput{})
	pulumi.RegisterOutputType(HDInsightOnDemandLinkedServiceOutput{})
	pulumi.RegisterOutputType(HDInsightOnDemandLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(HDInsightPigActivityOutput{})
	pulumi.RegisterOutputType(HDInsightPigActivityResponseOutput{})
	pulumi.RegisterOutputType(HDInsightSparkActivityOutput{})
	pulumi.RegisterOutputType(HDInsightSparkActivityResponseOutput{})
	pulumi.RegisterOutputType(HDInsightStreamingActivityOutput{})
	pulumi.RegisterOutputType(HDInsightStreamingActivityResponseOutput{})
	pulumi.RegisterOutputType(HdfsLinkedServiceOutput{})
	pulumi.RegisterOutputType(HdfsLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(HdfsSourceOutput{})
	pulumi.RegisterOutputType(HdfsSourceResponseOutput{})
	pulumi.RegisterOutputType(HiveLinkedServiceOutput{})
	pulumi.RegisterOutputType(HiveLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(HiveObjectDatasetOutput{})
	pulumi.RegisterOutputType(HiveObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(HiveSourceOutput{})
	pulumi.RegisterOutputType(HiveSourceResponseOutput{})
	pulumi.RegisterOutputType(HttpDatasetOutput{})
	pulumi.RegisterOutputType(HttpDatasetResponseOutput{})
	pulumi.RegisterOutputType(HttpLinkedServiceOutput{})
	pulumi.RegisterOutputType(HttpLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(HttpSourceOutput{})
	pulumi.RegisterOutputType(HttpSourceResponseOutput{})
	pulumi.RegisterOutputType(HubspotLinkedServiceOutput{})
	pulumi.RegisterOutputType(HubspotLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(HubspotObjectDatasetOutput{})
	pulumi.RegisterOutputType(HubspotObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(HubspotSourceOutput{})
	pulumi.RegisterOutputType(HubspotSourceResponseOutput{})
	pulumi.RegisterOutputType(IfConditionActivityOutput{})
	pulumi.RegisterOutputType(IfConditionActivityResponseOutput{})
	pulumi.RegisterOutputType(ImpalaLinkedServiceOutput{})
	pulumi.RegisterOutputType(ImpalaLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(ImpalaObjectDatasetOutput{})
	pulumi.RegisterOutputType(ImpalaObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(ImpalaSourceOutput{})
	pulumi.RegisterOutputType(ImpalaSourceResponseOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeComputePropertiesOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeComputePropertiesPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeComputePropertiesResponseOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeComputePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeCustomSetupScriptPropertiesOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeCustomSetupScriptPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeCustomSetupScriptPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeCustomSetupScriptPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeDataProxyPropertiesOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeDataProxyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeDataProxyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeDataProxyPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeReferenceOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeReferencePtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeReferenceResponseOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisCatalogInfoOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisCatalogInfoPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisCatalogInfoResponseOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisCatalogInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisPropertiesOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeVNetPropertiesOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeVNetPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeVNetPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeVNetPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(JiraLinkedServiceOutput{})
	pulumi.RegisterOutputType(JiraLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(JiraObjectDatasetOutput{})
	pulumi.RegisterOutputType(JiraObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(JiraSourceOutput{})
	pulumi.RegisterOutputType(JiraSourceResponseOutput{})
	pulumi.RegisterOutputType(JsonFormatOutput{})
	pulumi.RegisterOutputType(JsonFormatResponseOutput{})
	pulumi.RegisterOutputType(LinkedIntegrationRuntimeKeyOutput{})
	pulumi.RegisterOutputType(LinkedIntegrationRuntimeKeyResponseOutput{})
	pulumi.RegisterOutputType(LinkedIntegrationRuntimeRbacOutput{})
	pulumi.RegisterOutputType(LinkedIntegrationRuntimeRbacResponseOutput{})
	pulumi.RegisterOutputType(LinkedIntegrationRuntimeResponseOutput{})
	pulumi.RegisterOutputType(LinkedIntegrationRuntimeResponseArrayOutput{})
	pulumi.RegisterOutputType(LinkedServiceReferenceOutput{})
	pulumi.RegisterOutputType(LinkedServiceReferencePtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceReferenceArrayOutput{})
	pulumi.RegisterOutputType(LinkedServiceReferenceResponseOutput{})
	pulumi.RegisterOutputType(LinkedServiceReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(LookupActivityOutput{})
	pulumi.RegisterOutputType(LookupActivityResponseOutput{})
	pulumi.RegisterOutputType(MagentoLinkedServiceOutput{})
	pulumi.RegisterOutputType(MagentoLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(MagentoObjectDatasetOutput{})
	pulumi.RegisterOutputType(MagentoObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(MagentoSourceOutput{})
	pulumi.RegisterOutputType(MagentoSourceResponseOutput{})
	pulumi.RegisterOutputType(ManagedIntegrationRuntimeOutput{})
	pulumi.RegisterOutputType(ManagedIntegrationRuntimeErrorResponseOutput{})
	pulumi.RegisterOutputType(ManagedIntegrationRuntimeErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedIntegrationRuntimeNodeResponseOutput{})
	pulumi.RegisterOutputType(ManagedIntegrationRuntimeNodeResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedIntegrationRuntimeOperationResultResponseOutput{})
	pulumi.RegisterOutputType(ManagedIntegrationRuntimeResponseOutput{})
	pulumi.RegisterOutputType(ManagedIntegrationRuntimeStatusResponseOutput{})
	pulumi.RegisterOutputType(MariaDBLinkedServiceOutput{})
	pulumi.RegisterOutputType(MariaDBLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(MariaDBSourceOutput{})
	pulumi.RegisterOutputType(MariaDBSourceResponseOutput{})
	pulumi.RegisterOutputType(MariaDBTableDatasetOutput{})
	pulumi.RegisterOutputType(MariaDBTableDatasetResponseOutput{})
	pulumi.RegisterOutputType(MarketoLinkedServiceOutput{})
	pulumi.RegisterOutputType(MarketoLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(MarketoObjectDatasetOutput{})
	pulumi.RegisterOutputType(MarketoObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(MarketoSourceOutput{})
	pulumi.RegisterOutputType(MarketoSourceResponseOutput{})
	pulumi.RegisterOutputType(MongoDbCollectionDatasetOutput{})
	pulumi.RegisterOutputType(MongoDbCollectionDatasetResponseOutput{})
	pulumi.RegisterOutputType(MongoDbLinkedServiceOutput{})
	pulumi.RegisterOutputType(MongoDbLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(MongoDbSourceOutput{})
	pulumi.RegisterOutputType(MongoDbSourceResponseOutput{})
	pulumi.RegisterOutputType(MultiplePipelineTriggerOutput{})
	pulumi.RegisterOutputType(MultiplePipelineTriggerResponseOutput{})
	pulumi.RegisterOutputType(MySqlLinkedServiceOutput{})
	pulumi.RegisterOutputType(MySqlLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(NetezzaLinkedServiceOutput{})
	pulumi.RegisterOutputType(NetezzaLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(NetezzaSourceOutput{})
	pulumi.RegisterOutputType(NetezzaSourceResponseOutput{})
	pulumi.RegisterOutputType(NetezzaTableDatasetOutput{})
	pulumi.RegisterOutputType(NetezzaTableDatasetResponseOutput{})
	pulumi.RegisterOutputType(ODataLinkedServiceOutput{})
	pulumi.RegisterOutputType(ODataLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(ODataResourceDatasetOutput{})
	pulumi.RegisterOutputType(ODataResourceDatasetResponseOutput{})
	pulumi.RegisterOutputType(OdbcLinkedServiceOutput{})
	pulumi.RegisterOutputType(OdbcLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(OdbcSinkOutput{})
	pulumi.RegisterOutputType(OdbcSinkResponseOutput{})
	pulumi.RegisterOutputType(OracleLinkedServiceOutput{})
	pulumi.RegisterOutputType(OracleLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(OracleSinkOutput{})
	pulumi.RegisterOutputType(OracleSinkResponseOutput{})
	pulumi.RegisterOutputType(OracleSourceOutput{})
	pulumi.RegisterOutputType(OracleSourceResponseOutput{})
	pulumi.RegisterOutputType(OracleTableDatasetOutput{})
	pulumi.RegisterOutputType(OracleTableDatasetResponseOutput{})
	pulumi.RegisterOutputType(OrcFormatOutput{})
	pulumi.RegisterOutputType(OrcFormatResponseOutput{})
	pulumi.RegisterOutputType(ParameterSpecificationOutput{})
	pulumi.RegisterOutputType(ParameterSpecificationMapOutput{})
	pulumi.RegisterOutputType(ParameterSpecificationResponseOutput{})
	pulumi.RegisterOutputType(ParameterSpecificationResponseMapOutput{})
	pulumi.RegisterOutputType(ParquetFormatOutput{})
	pulumi.RegisterOutputType(ParquetFormatResponseOutput{})
	pulumi.RegisterOutputType(PaypalLinkedServiceOutput{})
	pulumi.RegisterOutputType(PaypalLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(PaypalObjectDatasetOutput{})
	pulumi.RegisterOutputType(PaypalObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(PaypalSourceOutput{})
	pulumi.RegisterOutputType(PaypalSourceResponseOutput{})
	pulumi.RegisterOutputType(PhoenixLinkedServiceOutput{})
	pulumi.RegisterOutputType(PhoenixLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(PhoenixObjectDatasetOutput{})
	pulumi.RegisterOutputType(PhoenixObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(PhoenixSourceOutput{})
	pulumi.RegisterOutputType(PhoenixSourceResponseOutput{})
	pulumi.RegisterOutputType(PipelineReferenceOutput{})
	pulumi.RegisterOutputType(PipelineReferencePtrOutput{})
	pulumi.RegisterOutputType(PipelineReferenceResponseOutput{})
	pulumi.RegisterOutputType(PipelineReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(PolybaseSettingsOutput{})
	pulumi.RegisterOutputType(PolybaseSettingsPtrOutput{})
	pulumi.RegisterOutputType(PolybaseSettingsResponseOutput{})
	pulumi.RegisterOutputType(PolybaseSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PostgreSqlLinkedServiceOutput{})
	pulumi.RegisterOutputType(PostgreSqlLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(PrestoLinkedServiceOutput{})
	pulumi.RegisterOutputType(PrestoLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(PrestoObjectDatasetOutput{})
	pulumi.RegisterOutputType(PrestoObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(PrestoSourceOutput{})
	pulumi.RegisterOutputType(PrestoSourceResponseOutput{})
	pulumi.RegisterOutputType(QuickBooksLinkedServiceOutput{})
	pulumi.RegisterOutputType(QuickBooksLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(QuickBooksObjectDatasetOutput{})
	pulumi.RegisterOutputType(QuickBooksObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(QuickBooksSourceOutput{})
	pulumi.RegisterOutputType(QuickBooksSourceResponseOutput{})
	pulumi.RegisterOutputType(RecurrenceScheduleOutput{})
	pulumi.RegisterOutputType(RecurrenceSchedulePtrOutput{})
	pulumi.RegisterOutputType(RecurrenceScheduleOccurrenceOutput{})
	pulumi.RegisterOutputType(RecurrenceScheduleOccurrenceArrayOutput{})
	pulumi.RegisterOutputType(RecurrenceScheduleOccurrenceResponseOutput{})
	pulumi.RegisterOutputType(RecurrenceScheduleOccurrenceResponseArrayOutput{})
	pulumi.RegisterOutputType(RecurrenceScheduleResponseOutput{})
	pulumi.RegisterOutputType(RecurrenceScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(RedirectIncompatibleRowSettingsOutput{})
	pulumi.RegisterOutputType(RedirectIncompatibleRowSettingsPtrOutput{})
	pulumi.RegisterOutputType(RedirectIncompatibleRowSettingsResponseOutput{})
	pulumi.RegisterOutputType(RedirectIncompatibleRowSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(RedshiftUnloadSettingsOutput{})
	pulumi.RegisterOutputType(RedshiftUnloadSettingsPtrOutput{})
	pulumi.RegisterOutputType(RedshiftUnloadSettingsResponseOutput{})
	pulumi.RegisterOutputType(RedshiftUnloadSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(RelationalSourceOutput{})
	pulumi.RegisterOutputType(RelationalSourceResponseOutput{})
	pulumi.RegisterOutputType(RelationalTableDatasetOutput{})
	pulumi.RegisterOutputType(RelationalTableDatasetResponseOutput{})
	pulumi.RegisterOutputType(ResponsysLinkedServiceOutput{})
	pulumi.RegisterOutputType(ResponsysLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(ResponsysObjectDatasetOutput{})
	pulumi.RegisterOutputType(ResponsysObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(ResponsysSourceOutput{})
	pulumi.RegisterOutputType(ResponsysSourceResponseOutput{})
	pulumi.RegisterOutputType(RetryPolicyOutput{})
	pulumi.RegisterOutputType(RetryPolicyPtrOutput{})
	pulumi.RegisterOutputType(RetryPolicyResponseOutput{})
	pulumi.RegisterOutputType(RetryPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(SSISAccessCredentialOutput{})
	pulumi.RegisterOutputType(SSISAccessCredentialPtrOutput{})
	pulumi.RegisterOutputType(SSISAccessCredentialResponseOutput{})
	pulumi.RegisterOutputType(SSISAccessCredentialResponsePtrOutput{})
	pulumi.RegisterOutputType(SSISExecutionCredentialOutput{})
	pulumi.RegisterOutputType(SSISExecutionCredentialPtrOutput{})
	pulumi.RegisterOutputType(SSISExecutionCredentialResponseOutput{})
	pulumi.RegisterOutputType(SSISExecutionCredentialResponsePtrOutput{})
	pulumi.RegisterOutputType(SSISExecutionParameterOutput{})
	pulumi.RegisterOutputType(SSISExecutionParameterMapOutput{})
	pulumi.RegisterOutputType(SSISExecutionParameterResponseOutput{})
	pulumi.RegisterOutputType(SSISExecutionParameterResponseMapOutput{})
	pulumi.RegisterOutputType(SSISLogLocationOutput{})
	pulumi.RegisterOutputType(SSISLogLocationPtrOutput{})
	pulumi.RegisterOutputType(SSISLogLocationResponseOutput{})
	pulumi.RegisterOutputType(SSISLogLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(SSISPackageLocationOutput{})
	pulumi.RegisterOutputType(SSISPackageLocationResponseOutput{})
	pulumi.RegisterOutputType(SSISPropertyOverrideOutput{})
	pulumi.RegisterOutputType(SSISPropertyOverrideMapOutput{})
	pulumi.RegisterOutputType(SSISPropertyOverrideResponseOutput{})
	pulumi.RegisterOutputType(SSISPropertyOverrideResponseMapOutput{})
	pulumi.RegisterOutputType(SalesforceLinkedServiceOutput{})
	pulumi.RegisterOutputType(SalesforceLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(SalesforceMarketingCloudLinkedServiceOutput{})
	pulumi.RegisterOutputType(SalesforceMarketingCloudLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(SalesforceMarketingCloudObjectDatasetOutput{})
	pulumi.RegisterOutputType(SalesforceMarketingCloudObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(SalesforceMarketingCloudSourceOutput{})
	pulumi.RegisterOutputType(SalesforceMarketingCloudSourceResponseOutput{})
	pulumi.RegisterOutputType(SalesforceObjectDatasetOutput{})
	pulumi.RegisterOutputType(SalesforceObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(SalesforceSinkOutput{})
	pulumi.RegisterOutputType(SalesforceSinkResponseOutput{})
	pulumi.RegisterOutputType(SalesforceSourceOutput{})
	pulumi.RegisterOutputType(SalesforceSourceResponseOutput{})
	pulumi.RegisterOutputType(SapBWLinkedServiceOutput{})
	pulumi.RegisterOutputType(SapBWLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(SapCloudForCustomerLinkedServiceOutput{})
	pulumi.RegisterOutputType(SapCloudForCustomerLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(SapCloudForCustomerResourceDatasetOutput{})
	pulumi.RegisterOutputType(SapCloudForCustomerResourceDatasetResponseOutput{})
	pulumi.RegisterOutputType(SapCloudForCustomerSinkOutput{})
	pulumi.RegisterOutputType(SapCloudForCustomerSinkResponseOutput{})
	pulumi.RegisterOutputType(SapCloudForCustomerSourceOutput{})
	pulumi.RegisterOutputType(SapCloudForCustomerSourceResponseOutput{})
	pulumi.RegisterOutputType(SapEccLinkedServiceOutput{})
	pulumi.RegisterOutputType(SapEccLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(SapEccResourceDatasetOutput{})
	pulumi.RegisterOutputType(SapEccResourceDatasetResponseOutput{})
	pulumi.RegisterOutputType(SapEccSourceOutput{})
	pulumi.RegisterOutputType(SapEccSourceResponseOutput{})
	pulumi.RegisterOutputType(SapHanaLinkedServiceOutput{})
	pulumi.RegisterOutputType(SapHanaLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(ScheduleTriggerOutput{})
	pulumi.RegisterOutputType(ScheduleTriggerRecurrenceOutput{})
	pulumi.RegisterOutputType(ScheduleTriggerRecurrenceResponseOutput{})
	pulumi.RegisterOutputType(ScheduleTriggerResponseOutput{})
	pulumi.RegisterOutputType(SecureStringOutput{})
	pulumi.RegisterOutputType(SecureStringPtrOutput{})
	pulumi.RegisterOutputType(SecureStringResponseOutput{})
	pulumi.RegisterOutputType(SecureStringResponsePtrOutput{})
	pulumi.RegisterOutputType(SelfHostedIntegrationRuntimeOutput{})
	pulumi.RegisterOutputType(SelfHostedIntegrationRuntimeNodeResponseOutput{})
	pulumi.RegisterOutputType(SelfHostedIntegrationRuntimeNodeResponseArrayOutput{})
	pulumi.RegisterOutputType(SelfHostedIntegrationRuntimeResponseOutput{})
	pulumi.RegisterOutputType(SelfHostedIntegrationRuntimeStatusResponseOutput{})
	pulumi.RegisterOutputType(ServiceNowLinkedServiceOutput{})
	pulumi.RegisterOutputType(ServiceNowLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(ServiceNowObjectDatasetOutput{})
	pulumi.RegisterOutputType(ServiceNowObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(ServiceNowSourceOutput{})
	pulumi.RegisterOutputType(ServiceNowSourceResponseOutput{})
	pulumi.RegisterOutputType(SftpServerLinkedServiceOutput{})
	pulumi.RegisterOutputType(SftpServerLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(ShopifyLinkedServiceOutput{})
	pulumi.RegisterOutputType(ShopifyLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(ShopifyObjectDatasetOutput{})
	pulumi.RegisterOutputType(ShopifyObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(ShopifySourceOutput{})
	pulumi.RegisterOutputType(ShopifySourceResponseOutput{})
	pulumi.RegisterOutputType(SparkLinkedServiceOutput{})
	pulumi.RegisterOutputType(SparkLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(SparkObjectDatasetOutput{})
	pulumi.RegisterOutputType(SparkObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(SparkSourceOutput{})
	pulumi.RegisterOutputType(SparkSourceResponseOutput{})
	pulumi.RegisterOutputType(SqlDWSinkOutput{})
	pulumi.RegisterOutputType(SqlDWSinkResponseOutput{})
	pulumi.RegisterOutputType(SqlDWSourceOutput{})
	pulumi.RegisterOutputType(SqlDWSourceResponseOutput{})
	pulumi.RegisterOutputType(SqlServerLinkedServiceOutput{})
	pulumi.RegisterOutputType(SqlServerLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(SqlServerStoredProcedureActivityOutput{})
	pulumi.RegisterOutputType(SqlServerStoredProcedureActivityResponseOutput{})
	pulumi.RegisterOutputType(SqlServerTableDatasetOutput{})
	pulumi.RegisterOutputType(SqlServerTableDatasetResponseOutput{})
	pulumi.RegisterOutputType(SqlSinkOutput{})
	pulumi.RegisterOutputType(SqlSinkResponseOutput{})
	pulumi.RegisterOutputType(SqlSourceOutput{})
	pulumi.RegisterOutputType(SqlSourceResponseOutput{})
	pulumi.RegisterOutputType(SquareLinkedServiceOutput{})
	pulumi.RegisterOutputType(SquareLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(SquareObjectDatasetOutput{})
	pulumi.RegisterOutputType(SquareObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(SquareSourceOutput{})
	pulumi.RegisterOutputType(SquareSourceResponseOutput{})
	pulumi.RegisterOutputType(StagingSettingsOutput{})
	pulumi.RegisterOutputType(StagingSettingsPtrOutput{})
	pulumi.RegisterOutputType(StagingSettingsResponseOutput{})
	pulumi.RegisterOutputType(StagingSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(StoredProcedureParameterOutput{})
	pulumi.RegisterOutputType(StoredProcedureParameterMapOutput{})
	pulumi.RegisterOutputType(StoredProcedureParameterResponseOutput{})
	pulumi.RegisterOutputType(StoredProcedureParameterResponseMapOutput{})
	pulumi.RegisterOutputType(SybaseLinkedServiceOutput{})
	pulumi.RegisterOutputType(SybaseLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(TeradataLinkedServiceOutput{})
	pulumi.RegisterOutputType(TeradataLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(TextFormatOutput{})
	pulumi.RegisterOutputType(TextFormatResponseOutput{})
	pulumi.RegisterOutputType(TriggerPipelineReferenceOutput{})
	pulumi.RegisterOutputType(TriggerPipelineReferenceArrayOutput{})
	pulumi.RegisterOutputType(TriggerPipelineReferenceResponseOutput{})
	pulumi.RegisterOutputType(TriggerPipelineReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(TumblingWindowTriggerOutput{})
	pulumi.RegisterOutputType(TumblingWindowTriggerResponseOutput{})
	pulumi.RegisterOutputType(UntilActivityOutput{})
	pulumi.RegisterOutputType(UntilActivityResponseOutput{})
	pulumi.RegisterOutputType(VerticaLinkedServiceOutput{})
	pulumi.RegisterOutputType(VerticaLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(VerticaSourceOutput{})
	pulumi.RegisterOutputType(VerticaSourceResponseOutput{})
	pulumi.RegisterOutputType(VerticaTableDatasetOutput{})
	pulumi.RegisterOutputType(VerticaTableDatasetResponseOutput{})
	pulumi.RegisterOutputType(WaitActivityOutput{})
	pulumi.RegisterOutputType(WaitActivityResponseOutput{})
	pulumi.RegisterOutputType(WebActivityOutput{})
	pulumi.RegisterOutputType(WebActivityAuthenticationOutput{})
	pulumi.RegisterOutputType(WebActivityAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(WebActivityAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(WebActivityAuthenticationResponsePtrOutput{})
	pulumi.RegisterOutputType(WebActivityResponseOutput{})
	pulumi.RegisterOutputType(WebAnonymousAuthenticationOutput{})
	pulumi.RegisterOutputType(WebAnonymousAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(WebBasicAuthenticationOutput{})
	pulumi.RegisterOutputType(WebBasicAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(WebClientCertificateAuthenticationOutput{})
	pulumi.RegisterOutputType(WebClientCertificateAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(WebLinkedServiceOutput{})
	pulumi.RegisterOutputType(WebLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(WebSourceOutput{})
	pulumi.RegisterOutputType(WebSourceResponseOutput{})
	pulumi.RegisterOutputType(WebTableDatasetOutput{})
	pulumi.RegisterOutputType(WebTableDatasetResponseOutput{})
	pulumi.RegisterOutputType(XeroLinkedServiceOutput{})
	pulumi.RegisterOutputType(XeroLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(XeroObjectDatasetOutput{})
	pulumi.RegisterOutputType(XeroObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(XeroSourceOutput{})
	pulumi.RegisterOutputType(XeroSourceResponseOutput{})
	pulumi.RegisterOutputType(ZohoLinkedServiceOutput{})
	pulumi.RegisterOutputType(ZohoLinkedServiceResponseOutput{})
	pulumi.RegisterOutputType(ZohoObjectDatasetOutput{})
	pulumi.RegisterOutputType(ZohoObjectDatasetResponseOutput{})
	pulumi.RegisterOutputType(ZohoSourceOutput{})
	pulumi.RegisterOutputType(ZohoSourceResponseOutput{})
}
