// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20170901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Factory resource type.
//
// Deprecated: Version 2017-09-01-preview will be removed in v2 of the provider.
func LookupFactory(ctx *pulumi.Context, args *LookupFactoryArgs, opts ...pulumi.InvokeOption) (*LookupFactoryResult, error) {
	var rv LookupFactoryResult
	err := ctx.Invoke("azure-native:datafactory/v20170901preview:getFactory", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFactoryArgs struct {
	// The factory name.
	FactoryName string `pulumi:"factoryName"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Factory resource type.
type LookupFactoryResult struct {
	// Time the factory was created in ISO8601 format.
	CreateTime string `pulumi:"createTime"`
	// The resource identifier.
	Id string `pulumi:"id"`
	// Managed service identity of the factory.
	Identity *FactoryIdentityResponse `pulumi:"identity"`
	// The resource location.
	Location *string `pulumi:"location"`
	// The resource name.
	Name string `pulumi:"name"`
	// Factory provisioning state, example Succeeded.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The resource type.
	Type string `pulumi:"type"`
	// Version of the factory.
	Version string `pulumi:"version"`
	// VSTS repo information of the factory.
	VstsConfiguration *FactoryVSTSConfigurationResponse `pulumi:"vstsConfiguration"`
}

func LookupFactoryOutput(ctx *pulumi.Context, args LookupFactoryOutputArgs, opts ...pulumi.InvokeOption) LookupFactoryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFactoryResult, error) {
			args := v.(LookupFactoryArgs)
			r, err := LookupFactory(ctx, &args, opts...)
			var s LookupFactoryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFactoryResultOutput)
}

type LookupFactoryOutputArgs struct {
	// The factory name.
	FactoryName pulumi.StringInput `pulumi:"factoryName"`
	// The resource group name.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupFactoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFactoryArgs)(nil)).Elem()
}

// Factory resource type.
type LookupFactoryResultOutput struct{ *pulumi.OutputState }

func (LookupFactoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFactoryResult)(nil)).Elem()
}

func (o LookupFactoryResultOutput) ToLookupFactoryResultOutput() LookupFactoryResultOutput {
	return o
}

func (o LookupFactoryResultOutput) ToLookupFactoryResultOutputWithContext(ctx context.Context) LookupFactoryResultOutput {
	return o
}

// Time the factory was created in ISO8601 format.
func (o LookupFactoryResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFactoryResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The resource identifier.
func (o LookupFactoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFactoryResult) string { return v.Id }).(pulumi.StringOutput)
}

// Managed service identity of the factory.
func (o LookupFactoryResultOutput) Identity() FactoryIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupFactoryResult) *FactoryIdentityResponse { return v.Identity }).(FactoryIdentityResponsePtrOutput)
}

// The resource location.
func (o LookupFactoryResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFactoryResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The resource name.
func (o LookupFactoryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFactoryResult) string { return v.Name }).(pulumi.StringOutput)
}

// Factory provisioning state, example Succeeded.
func (o LookupFactoryResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFactoryResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource tags.
func (o LookupFactoryResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFactoryResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The resource type.
func (o LookupFactoryResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFactoryResult) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the factory.
func (o LookupFactoryResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFactoryResult) string { return v.Version }).(pulumi.StringOutput)
}

// VSTS repo information of the factory.
func (o LookupFactoryResultOutput) VstsConfiguration() FactoryVSTSConfigurationResponsePtrOutput {
	return o.ApplyT(func(v LookupFactoryResult) *FactoryVSTSConfigurationResponse { return v.VstsConfiguration }).(FactoryVSTSConfigurationResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFactoryResultOutput{})
}
