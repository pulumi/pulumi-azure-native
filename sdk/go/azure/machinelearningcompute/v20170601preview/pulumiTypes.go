// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20170601preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Information about the container service backing the cluster
type AcsClusterProperties struct {
	// The number of agent nodes in the Container Service. This can be changed to scale the cluster.
	AgentCount *int `pulumi:"agentCount"`
	// The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is created.
	AgentVmSize *string `pulumi:"agentVmSize"`
	// Orchestrator specific properties
	OrchestratorProperties KubernetesClusterProperties `pulumi:"orchestratorProperties"`
	// Type of orchestrator. It cannot be changed once the cluster is created.
	OrchestratorType string `pulumi:"orchestratorType"`
	// The system services deployed to the cluster
	SystemServices []string `pulumi:"systemServices"`
}

// Defaults sets the appropriate defaults for AcsClusterProperties
func (val *AcsClusterProperties) Defaults() *AcsClusterProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.AgentCount) {
		agentCount_ := 2
		tmp.AgentCount = &agentCount_
	}
	if isZero(tmp.AgentVmSize) {
		agentVmSize_ := "Standard_D2_v2"
		tmp.AgentVmSize = &agentVmSize_
	}
	return &tmp
}

// AcsClusterPropertiesInput is an input type that accepts AcsClusterPropertiesArgs and AcsClusterPropertiesOutput values.
// You can construct a concrete instance of `AcsClusterPropertiesInput` via:
//
//	AcsClusterPropertiesArgs{...}
type AcsClusterPropertiesInput interface {
	pulumi.Input

	ToAcsClusterPropertiesOutput() AcsClusterPropertiesOutput
	ToAcsClusterPropertiesOutputWithContext(context.Context) AcsClusterPropertiesOutput
}

// Information about the container service backing the cluster
type AcsClusterPropertiesArgs struct {
	// The number of agent nodes in the Container Service. This can be changed to scale the cluster.
	AgentCount pulumi.IntPtrInput `pulumi:"agentCount"`
	// The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is created.
	AgentVmSize pulumi.StringPtrInput `pulumi:"agentVmSize"`
	// Orchestrator specific properties
	OrchestratorProperties KubernetesClusterPropertiesInput `pulumi:"orchestratorProperties"`
	// Type of orchestrator. It cannot be changed once the cluster is created.
	OrchestratorType pulumi.StringInput `pulumi:"orchestratorType"`
	// The system services deployed to the cluster
	SystemServices pulumi.StringArrayInput `pulumi:"systemServices"`
}

// Defaults sets the appropriate defaults for AcsClusterPropertiesArgs
func (val *AcsClusterPropertiesArgs) Defaults() *AcsClusterPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.AgentCount) {
		tmp.AgentCount = pulumi.IntPtr(2)
	}
	if isZero(tmp.AgentVmSize) {
		tmp.AgentVmSize = pulumi.StringPtr("Standard_D2_v2")
	}
	return &tmp
}
func (AcsClusterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AcsClusterProperties)(nil)).Elem()
}

func (i AcsClusterPropertiesArgs) ToAcsClusterPropertiesOutput() AcsClusterPropertiesOutput {
	return i.ToAcsClusterPropertiesOutputWithContext(context.Background())
}

func (i AcsClusterPropertiesArgs) ToAcsClusterPropertiesOutputWithContext(ctx context.Context) AcsClusterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcsClusterPropertiesOutput)
}

// Information about the container service backing the cluster
type AcsClusterPropertiesOutput struct{ *pulumi.OutputState }

func (AcsClusterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AcsClusterProperties)(nil)).Elem()
}

func (o AcsClusterPropertiesOutput) ToAcsClusterPropertiesOutput() AcsClusterPropertiesOutput {
	return o
}

func (o AcsClusterPropertiesOutput) ToAcsClusterPropertiesOutputWithContext(ctx context.Context) AcsClusterPropertiesOutput {
	return o
}

// The number of agent nodes in the Container Service. This can be changed to scale the cluster.
func (o AcsClusterPropertiesOutput) AgentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AcsClusterProperties) *int { return v.AgentCount }).(pulumi.IntPtrOutput)
}

// The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is created.
func (o AcsClusterPropertiesOutput) AgentVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcsClusterProperties) *string { return v.AgentVmSize }).(pulumi.StringPtrOutput)
}

// Orchestrator specific properties
func (o AcsClusterPropertiesOutput) OrchestratorProperties() KubernetesClusterPropertiesOutput {
	return o.ApplyT(func(v AcsClusterProperties) KubernetesClusterProperties { return v.OrchestratorProperties }).(KubernetesClusterPropertiesOutput)
}

// Type of orchestrator. It cannot be changed once the cluster is created.
func (o AcsClusterPropertiesOutput) OrchestratorType() pulumi.StringOutput {
	return o.ApplyT(func(v AcsClusterProperties) string { return v.OrchestratorType }).(pulumi.StringOutput)
}

// The system services deployed to the cluster
func (o AcsClusterPropertiesOutput) SystemServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AcsClusterProperties) []string { return v.SystemServices }).(pulumi.StringArrayOutput)
}

// Information about the container service backing the cluster
type AcsClusterPropertiesResponse struct {
	// The number of agent nodes in the Container Service. This can be changed to scale the cluster.
	AgentCount *int `pulumi:"agentCount"`
	// The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is created.
	AgentVmSize *string `pulumi:"agentVmSize"`
	// The FQDN of the cluster.
	ClusterFqdn string `pulumi:"clusterFqdn"`
	// Orchestrator specific properties
	OrchestratorProperties KubernetesClusterPropertiesResponse `pulumi:"orchestratorProperties"`
	// Type of orchestrator. It cannot be changed once the cluster is created.
	OrchestratorType string `pulumi:"orchestratorType"`
	// The system services deployed to the cluster
	SystemServices []string `pulumi:"systemServices"`
}

// Defaults sets the appropriate defaults for AcsClusterPropertiesResponse
func (val *AcsClusterPropertiesResponse) Defaults() *AcsClusterPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.AgentCount) {
		agentCount_ := 2
		tmp.AgentCount = &agentCount_
	}
	if isZero(tmp.AgentVmSize) {
		agentVmSize_ := "Standard_D2_v2"
		tmp.AgentVmSize = &agentVmSize_
	}
	return &tmp
}

// Information about the container service backing the cluster
type AcsClusterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AcsClusterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AcsClusterPropertiesResponse)(nil)).Elem()
}

func (o AcsClusterPropertiesResponseOutput) ToAcsClusterPropertiesResponseOutput() AcsClusterPropertiesResponseOutput {
	return o
}

func (o AcsClusterPropertiesResponseOutput) ToAcsClusterPropertiesResponseOutputWithContext(ctx context.Context) AcsClusterPropertiesResponseOutput {
	return o
}

// The number of agent nodes in the Container Service. This can be changed to scale the cluster.
func (o AcsClusterPropertiesResponseOutput) AgentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AcsClusterPropertiesResponse) *int { return v.AgentCount }).(pulumi.IntPtrOutput)
}

// The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is created.
func (o AcsClusterPropertiesResponseOutput) AgentVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcsClusterPropertiesResponse) *string { return v.AgentVmSize }).(pulumi.StringPtrOutput)
}

// The FQDN of the cluster.
func (o AcsClusterPropertiesResponseOutput) ClusterFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v AcsClusterPropertiesResponse) string { return v.ClusterFqdn }).(pulumi.StringOutput)
}

// Orchestrator specific properties
func (o AcsClusterPropertiesResponseOutput) OrchestratorProperties() KubernetesClusterPropertiesResponseOutput {
	return o.ApplyT(func(v AcsClusterPropertiesResponse) KubernetesClusterPropertiesResponse {
		return v.OrchestratorProperties
	}).(KubernetesClusterPropertiesResponseOutput)
}

// Type of orchestrator. It cannot be changed once the cluster is created.
func (o AcsClusterPropertiesResponseOutput) OrchestratorType() pulumi.StringOutput {
	return o.ApplyT(func(v AcsClusterPropertiesResponse) string { return v.OrchestratorType }).(pulumi.StringOutput)
}

// The system services deployed to the cluster
func (o AcsClusterPropertiesResponseOutput) SystemServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AcsClusterPropertiesResponse) []string { return v.SystemServices }).(pulumi.StringArrayOutput)
}

// AppInsights credentials.
type AppInsightsCredentials struct {
	// The AppInsights API key. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
	ApiKey *string `pulumi:"apiKey"`
	// The AppInsights application ID.
	AppId *string `pulumi:"appId"`
}

// AppInsightsCredentialsInput is an input type that accepts AppInsightsCredentialsArgs and AppInsightsCredentialsOutput values.
// You can construct a concrete instance of `AppInsightsCredentialsInput` via:
//
//	AppInsightsCredentialsArgs{...}
type AppInsightsCredentialsInput interface {
	pulumi.Input

	ToAppInsightsCredentialsOutput() AppInsightsCredentialsOutput
	ToAppInsightsCredentialsOutputWithContext(context.Context) AppInsightsCredentialsOutput
}

// AppInsights credentials.
type AppInsightsCredentialsArgs struct {
	// The AppInsights API key. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// The AppInsights application ID.
	AppId pulumi.StringPtrInput `pulumi:"appId"`
}

func (AppInsightsCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppInsightsCredentials)(nil)).Elem()
}

func (i AppInsightsCredentialsArgs) ToAppInsightsCredentialsOutput() AppInsightsCredentialsOutput {
	return i.ToAppInsightsCredentialsOutputWithContext(context.Background())
}

func (i AppInsightsCredentialsArgs) ToAppInsightsCredentialsOutputWithContext(ctx context.Context) AppInsightsCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppInsightsCredentialsOutput)
}

func (i AppInsightsCredentialsArgs) ToAppInsightsCredentialsPtrOutput() AppInsightsCredentialsPtrOutput {
	return i.ToAppInsightsCredentialsPtrOutputWithContext(context.Background())
}

func (i AppInsightsCredentialsArgs) ToAppInsightsCredentialsPtrOutputWithContext(ctx context.Context) AppInsightsCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppInsightsCredentialsOutput).ToAppInsightsCredentialsPtrOutputWithContext(ctx)
}

// AppInsightsCredentialsPtrInput is an input type that accepts AppInsightsCredentialsArgs, AppInsightsCredentialsPtr and AppInsightsCredentialsPtrOutput values.
// You can construct a concrete instance of `AppInsightsCredentialsPtrInput` via:
//
//	        AppInsightsCredentialsArgs{...}
//
//	or:
//
//	        nil
type AppInsightsCredentialsPtrInput interface {
	pulumi.Input

	ToAppInsightsCredentialsPtrOutput() AppInsightsCredentialsPtrOutput
	ToAppInsightsCredentialsPtrOutputWithContext(context.Context) AppInsightsCredentialsPtrOutput
}

type appInsightsCredentialsPtrType AppInsightsCredentialsArgs

func AppInsightsCredentialsPtr(v *AppInsightsCredentialsArgs) AppInsightsCredentialsPtrInput {
	return (*appInsightsCredentialsPtrType)(v)
}

func (*appInsightsCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppInsightsCredentials)(nil)).Elem()
}

func (i *appInsightsCredentialsPtrType) ToAppInsightsCredentialsPtrOutput() AppInsightsCredentialsPtrOutput {
	return i.ToAppInsightsCredentialsPtrOutputWithContext(context.Background())
}

func (i *appInsightsCredentialsPtrType) ToAppInsightsCredentialsPtrOutputWithContext(ctx context.Context) AppInsightsCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppInsightsCredentialsPtrOutput)
}

// AppInsights credentials.
type AppInsightsCredentialsOutput struct{ *pulumi.OutputState }

func (AppInsightsCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppInsightsCredentials)(nil)).Elem()
}

func (o AppInsightsCredentialsOutput) ToAppInsightsCredentialsOutput() AppInsightsCredentialsOutput {
	return o
}

func (o AppInsightsCredentialsOutput) ToAppInsightsCredentialsOutputWithContext(ctx context.Context) AppInsightsCredentialsOutput {
	return o
}

func (o AppInsightsCredentialsOutput) ToAppInsightsCredentialsPtrOutput() AppInsightsCredentialsPtrOutput {
	return o.ToAppInsightsCredentialsPtrOutputWithContext(context.Background())
}

func (o AppInsightsCredentialsOutput) ToAppInsightsCredentialsPtrOutputWithContext(ctx context.Context) AppInsightsCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppInsightsCredentials) *AppInsightsCredentials {
		return &v
	}).(AppInsightsCredentialsPtrOutput)
}

// The AppInsights API key. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
func (o AppInsightsCredentialsOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppInsightsCredentials) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// The AppInsights application ID.
func (o AppInsightsCredentialsOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppInsightsCredentials) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

type AppInsightsCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AppInsightsCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppInsightsCredentials)(nil)).Elem()
}

func (o AppInsightsCredentialsPtrOutput) ToAppInsightsCredentialsPtrOutput() AppInsightsCredentialsPtrOutput {
	return o
}

func (o AppInsightsCredentialsPtrOutput) ToAppInsightsCredentialsPtrOutputWithContext(ctx context.Context) AppInsightsCredentialsPtrOutput {
	return o
}

func (o AppInsightsCredentialsPtrOutput) Elem() AppInsightsCredentialsOutput {
	return o.ApplyT(func(v *AppInsightsCredentials) AppInsightsCredentials {
		if v != nil {
			return *v
		}
		var ret AppInsightsCredentials
		return ret
	}).(AppInsightsCredentialsOutput)
}

// The AppInsights API key. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
func (o AppInsightsCredentialsPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppInsightsCredentials) *string {
		if v == nil {
			return nil
		}
		return v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// The AppInsights application ID.
func (o AppInsightsCredentialsPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppInsightsCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AppId
	}).(pulumi.StringPtrOutput)
}

// AppInsights credentials.
type AppInsightsCredentialsResponse struct {
	// The AppInsights API key. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
	ApiKey *string `pulumi:"apiKey"`
	// The AppInsights application ID.
	AppId *string `pulumi:"appId"`
}

// AppInsights credentials.
type AppInsightsCredentialsResponseOutput struct{ *pulumi.OutputState }

func (AppInsightsCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppInsightsCredentialsResponse)(nil)).Elem()
}

func (o AppInsightsCredentialsResponseOutput) ToAppInsightsCredentialsResponseOutput() AppInsightsCredentialsResponseOutput {
	return o
}

func (o AppInsightsCredentialsResponseOutput) ToAppInsightsCredentialsResponseOutputWithContext(ctx context.Context) AppInsightsCredentialsResponseOutput {
	return o
}

// The AppInsights API key. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
func (o AppInsightsCredentialsResponseOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppInsightsCredentialsResponse) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// The AppInsights application ID.
func (o AppInsightsCredentialsResponseOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppInsightsCredentialsResponse) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

type AppInsightsCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (AppInsightsCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppInsightsCredentialsResponse)(nil)).Elem()
}

func (o AppInsightsCredentialsResponsePtrOutput) ToAppInsightsCredentialsResponsePtrOutput() AppInsightsCredentialsResponsePtrOutput {
	return o
}

func (o AppInsightsCredentialsResponsePtrOutput) ToAppInsightsCredentialsResponsePtrOutputWithContext(ctx context.Context) AppInsightsCredentialsResponsePtrOutput {
	return o
}

func (o AppInsightsCredentialsResponsePtrOutput) Elem() AppInsightsCredentialsResponseOutput {
	return o.ApplyT(func(v *AppInsightsCredentialsResponse) AppInsightsCredentialsResponse {
		if v != nil {
			return *v
		}
		var ret AppInsightsCredentialsResponse
		return ret
	}).(AppInsightsCredentialsResponseOutput)
}

// The AppInsights API key. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
func (o AppInsightsCredentialsResponsePtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppInsightsCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// The AppInsights application ID.
func (o AppInsightsCredentialsResponsePtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppInsightsCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppId
	}).(pulumi.StringPtrOutput)
}

// AutoScale configuration properties.
type AutoScaleConfiguration struct {
	// The maximum number of replicas for each service.
	MaxReplicas *int `pulumi:"maxReplicas"`
	// The minimum number of replicas for each service.
	MinReplicas *int `pulumi:"minReplicas"`
	// Refresh period in seconds.
	RefreshPeriodInSeconds *int `pulumi:"refreshPeriodInSeconds"`
	// If auto-scale is enabled for all services. Each service can turn it off individually.
	Status *string `pulumi:"status"`
	// The target utilization.
	TargetUtilization *float64 `pulumi:"targetUtilization"`
}

// Defaults sets the appropriate defaults for AutoScaleConfiguration
func (val *AutoScaleConfiguration) Defaults() *AutoScaleConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.MaxReplicas) {
		maxReplicas_ := 100
		tmp.MaxReplicas = &maxReplicas_
	}
	if isZero(tmp.MinReplicas) {
		minReplicas_ := 1
		tmp.MinReplicas = &minReplicas_
	}
	if isZero(tmp.Status) {
		status_ := "Disabled"
		tmp.Status = &status_
	}
	return &tmp
}

// AutoScaleConfigurationInput is an input type that accepts AutoScaleConfigurationArgs and AutoScaleConfigurationOutput values.
// You can construct a concrete instance of `AutoScaleConfigurationInput` via:
//
//	AutoScaleConfigurationArgs{...}
type AutoScaleConfigurationInput interface {
	pulumi.Input

	ToAutoScaleConfigurationOutput() AutoScaleConfigurationOutput
	ToAutoScaleConfigurationOutputWithContext(context.Context) AutoScaleConfigurationOutput
}

// AutoScale configuration properties.
type AutoScaleConfigurationArgs struct {
	// The maximum number of replicas for each service.
	MaxReplicas pulumi.IntPtrInput `pulumi:"maxReplicas"`
	// The minimum number of replicas for each service.
	MinReplicas pulumi.IntPtrInput `pulumi:"minReplicas"`
	// Refresh period in seconds.
	RefreshPeriodInSeconds pulumi.IntPtrInput `pulumi:"refreshPeriodInSeconds"`
	// If auto-scale is enabled for all services. Each service can turn it off individually.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The target utilization.
	TargetUtilization pulumi.Float64PtrInput `pulumi:"targetUtilization"`
}

// Defaults sets the appropriate defaults for AutoScaleConfigurationArgs
func (val *AutoScaleConfigurationArgs) Defaults() *AutoScaleConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.MaxReplicas) {
		tmp.MaxReplicas = pulumi.IntPtr(100)
	}
	if isZero(tmp.MinReplicas) {
		tmp.MinReplicas = pulumi.IntPtr(1)
	}
	if isZero(tmp.Status) {
		tmp.Status = pulumi.StringPtr("Disabled")
	}
	return &tmp
}
func (AutoScaleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleConfiguration)(nil)).Elem()
}

func (i AutoScaleConfigurationArgs) ToAutoScaleConfigurationOutput() AutoScaleConfigurationOutput {
	return i.ToAutoScaleConfigurationOutputWithContext(context.Background())
}

func (i AutoScaleConfigurationArgs) ToAutoScaleConfigurationOutputWithContext(ctx context.Context) AutoScaleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScaleConfigurationOutput)
}

func (i AutoScaleConfigurationArgs) ToAutoScaleConfigurationPtrOutput() AutoScaleConfigurationPtrOutput {
	return i.ToAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (i AutoScaleConfigurationArgs) ToAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) AutoScaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScaleConfigurationOutput).ToAutoScaleConfigurationPtrOutputWithContext(ctx)
}

// AutoScaleConfigurationPtrInput is an input type that accepts AutoScaleConfigurationArgs, AutoScaleConfigurationPtr and AutoScaleConfigurationPtrOutput values.
// You can construct a concrete instance of `AutoScaleConfigurationPtrInput` via:
//
//	        AutoScaleConfigurationArgs{...}
//
//	or:
//
//	        nil
type AutoScaleConfigurationPtrInput interface {
	pulumi.Input

	ToAutoScaleConfigurationPtrOutput() AutoScaleConfigurationPtrOutput
	ToAutoScaleConfigurationPtrOutputWithContext(context.Context) AutoScaleConfigurationPtrOutput
}

type autoScaleConfigurationPtrType AutoScaleConfigurationArgs

func AutoScaleConfigurationPtr(v *AutoScaleConfigurationArgs) AutoScaleConfigurationPtrInput {
	return (*autoScaleConfigurationPtrType)(v)
}

func (*autoScaleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScaleConfiguration)(nil)).Elem()
}

func (i *autoScaleConfigurationPtrType) ToAutoScaleConfigurationPtrOutput() AutoScaleConfigurationPtrOutput {
	return i.ToAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (i *autoScaleConfigurationPtrType) ToAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) AutoScaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScaleConfigurationPtrOutput)
}

// AutoScale configuration properties.
type AutoScaleConfigurationOutput struct{ *pulumi.OutputState }

func (AutoScaleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleConfiguration)(nil)).Elem()
}

func (o AutoScaleConfigurationOutput) ToAutoScaleConfigurationOutput() AutoScaleConfigurationOutput {
	return o
}

func (o AutoScaleConfigurationOutput) ToAutoScaleConfigurationOutputWithContext(ctx context.Context) AutoScaleConfigurationOutput {
	return o
}

func (o AutoScaleConfigurationOutput) ToAutoScaleConfigurationPtrOutput() AutoScaleConfigurationPtrOutput {
	return o.ToAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (o AutoScaleConfigurationOutput) ToAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) AutoScaleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoScaleConfiguration) *AutoScaleConfiguration {
		return &v
	}).(AutoScaleConfigurationPtrOutput)
}

// The maximum number of replicas for each service.
func (o AutoScaleConfigurationOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleConfiguration) *int { return v.MaxReplicas }).(pulumi.IntPtrOutput)
}

// The minimum number of replicas for each service.
func (o AutoScaleConfigurationOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleConfiguration) *int { return v.MinReplicas }).(pulumi.IntPtrOutput)
}

// Refresh period in seconds.
func (o AutoScaleConfigurationOutput) RefreshPeriodInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleConfiguration) *int { return v.RefreshPeriodInSeconds }).(pulumi.IntPtrOutput)
}

// If auto-scale is enabled for all services. Each service can turn it off individually.
func (o AutoScaleConfigurationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoScaleConfiguration) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The target utilization.
func (o AutoScaleConfigurationOutput) TargetUtilization() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoScaleConfiguration) *float64 { return v.TargetUtilization }).(pulumi.Float64PtrOutput)
}

type AutoScaleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AutoScaleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScaleConfiguration)(nil)).Elem()
}

func (o AutoScaleConfigurationPtrOutput) ToAutoScaleConfigurationPtrOutput() AutoScaleConfigurationPtrOutput {
	return o
}

func (o AutoScaleConfigurationPtrOutput) ToAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) AutoScaleConfigurationPtrOutput {
	return o
}

func (o AutoScaleConfigurationPtrOutput) Elem() AutoScaleConfigurationOutput {
	return o.ApplyT(func(v *AutoScaleConfiguration) AutoScaleConfiguration {
		if v != nil {
			return *v
		}
		var ret AutoScaleConfiguration
		return ret
	}).(AutoScaleConfigurationOutput)
}

// The maximum number of replicas for each service.
func (o AutoScaleConfigurationPtrOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxReplicas
	}).(pulumi.IntPtrOutput)
}

// The minimum number of replicas for each service.
func (o AutoScaleConfigurationPtrOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MinReplicas
	}).(pulumi.IntPtrOutput)
}

// Refresh period in seconds.
func (o AutoScaleConfigurationPtrOutput) RefreshPeriodInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.RefreshPeriodInSeconds
	}).(pulumi.IntPtrOutput)
}

// If auto-scale is enabled for all services. Each service can turn it off individually.
func (o AutoScaleConfigurationPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoScaleConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The target utilization.
func (o AutoScaleConfigurationPtrOutput) TargetUtilization() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutoScaleConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.TargetUtilization
	}).(pulumi.Float64PtrOutput)
}

// AutoScale configuration properties.
type AutoScaleConfigurationResponse struct {
	// The maximum number of replicas for each service.
	MaxReplicas *int `pulumi:"maxReplicas"`
	// The minimum number of replicas for each service.
	MinReplicas *int `pulumi:"minReplicas"`
	// Refresh period in seconds.
	RefreshPeriodInSeconds *int `pulumi:"refreshPeriodInSeconds"`
	// If auto-scale is enabled for all services. Each service can turn it off individually.
	Status *string `pulumi:"status"`
	// The target utilization.
	TargetUtilization *float64 `pulumi:"targetUtilization"`
}

// Defaults sets the appropriate defaults for AutoScaleConfigurationResponse
func (val *AutoScaleConfigurationResponse) Defaults() *AutoScaleConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.MaxReplicas) {
		maxReplicas_ := 100
		tmp.MaxReplicas = &maxReplicas_
	}
	if isZero(tmp.MinReplicas) {
		minReplicas_ := 1
		tmp.MinReplicas = &minReplicas_
	}
	if isZero(tmp.Status) {
		status_ := "Disabled"
		tmp.Status = &status_
	}
	return &tmp
}

// AutoScale configuration properties.
type AutoScaleConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AutoScaleConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleConfigurationResponse)(nil)).Elem()
}

func (o AutoScaleConfigurationResponseOutput) ToAutoScaleConfigurationResponseOutput() AutoScaleConfigurationResponseOutput {
	return o
}

func (o AutoScaleConfigurationResponseOutput) ToAutoScaleConfigurationResponseOutputWithContext(ctx context.Context) AutoScaleConfigurationResponseOutput {
	return o
}

// The maximum number of replicas for each service.
func (o AutoScaleConfigurationResponseOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleConfigurationResponse) *int { return v.MaxReplicas }).(pulumi.IntPtrOutput)
}

// The minimum number of replicas for each service.
func (o AutoScaleConfigurationResponseOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleConfigurationResponse) *int { return v.MinReplicas }).(pulumi.IntPtrOutput)
}

// Refresh period in seconds.
func (o AutoScaleConfigurationResponseOutput) RefreshPeriodInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleConfigurationResponse) *int { return v.RefreshPeriodInSeconds }).(pulumi.IntPtrOutput)
}

// If auto-scale is enabled for all services. Each service can turn it off individually.
func (o AutoScaleConfigurationResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoScaleConfigurationResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The target utilization.
func (o AutoScaleConfigurationResponseOutput) TargetUtilization() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoScaleConfigurationResponse) *float64 { return v.TargetUtilization }).(pulumi.Float64PtrOutput)
}

type AutoScaleConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoScaleConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScaleConfigurationResponse)(nil)).Elem()
}

func (o AutoScaleConfigurationResponsePtrOutput) ToAutoScaleConfigurationResponsePtrOutput() AutoScaleConfigurationResponsePtrOutput {
	return o
}

func (o AutoScaleConfigurationResponsePtrOutput) ToAutoScaleConfigurationResponsePtrOutputWithContext(ctx context.Context) AutoScaleConfigurationResponsePtrOutput {
	return o
}

func (o AutoScaleConfigurationResponsePtrOutput) Elem() AutoScaleConfigurationResponseOutput {
	return o.ApplyT(func(v *AutoScaleConfigurationResponse) AutoScaleConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret AutoScaleConfigurationResponse
		return ret
	}).(AutoScaleConfigurationResponseOutput)
}

// The maximum number of replicas for each service.
func (o AutoScaleConfigurationResponsePtrOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxReplicas
	}).(pulumi.IntPtrOutput)
}

// The minimum number of replicas for each service.
func (o AutoScaleConfigurationResponsePtrOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinReplicas
	}).(pulumi.IntPtrOutput)
}

// Refresh period in seconds.
func (o AutoScaleConfigurationResponsePtrOutput) RefreshPeriodInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.RefreshPeriodInSeconds
	}).(pulumi.IntPtrOutput)
}

// If auto-scale is enabled for all services. Each service can turn it off individually.
func (o AutoScaleConfigurationResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoScaleConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The target utilization.
func (o AutoScaleConfigurationResponsePtrOutput) TargetUtilization() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutoScaleConfigurationResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.TargetUtilization
	}).(pulumi.Float64PtrOutput)
}

// Information about the Azure Container Registry which contains the images deployed to the cluster.
type ContainerRegistryCredentialsResponse struct {
	// The ACR login server name. User name is the first part of the FQDN.
	LoginServer string `pulumi:"loginServer"`
	// The ACR primary password.
	Password string `pulumi:"password"`
	// The ACR secondary password.
	Password2 string `pulumi:"password2"`
}

// Information about the Azure Container Registry which contains the images deployed to the cluster.
type ContainerRegistryCredentialsResponseOutput struct{ *pulumi.OutputState }

func (ContainerRegistryCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRegistryCredentialsResponse)(nil)).Elem()
}

func (o ContainerRegistryCredentialsResponseOutput) ToContainerRegistryCredentialsResponseOutput() ContainerRegistryCredentialsResponseOutput {
	return o
}

func (o ContainerRegistryCredentialsResponseOutput) ToContainerRegistryCredentialsResponseOutputWithContext(ctx context.Context) ContainerRegistryCredentialsResponseOutput {
	return o
}

// The ACR login server name. User name is the first part of the FQDN.
func (o ContainerRegistryCredentialsResponseOutput) LoginServer() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerRegistryCredentialsResponse) string { return v.LoginServer }).(pulumi.StringOutput)
}

// The ACR primary password.
func (o ContainerRegistryCredentialsResponseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerRegistryCredentialsResponse) string { return v.Password }).(pulumi.StringOutput)
}

// The ACR secondary password.
func (o ContainerRegistryCredentialsResponseOutput) Password2() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerRegistryCredentialsResponse) string { return v.Password2 }).(pulumi.StringOutput)
}

type ContainerRegistryCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerRegistryCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRegistryCredentialsResponse)(nil)).Elem()
}

func (o ContainerRegistryCredentialsResponsePtrOutput) ToContainerRegistryCredentialsResponsePtrOutput() ContainerRegistryCredentialsResponsePtrOutput {
	return o
}

func (o ContainerRegistryCredentialsResponsePtrOutput) ToContainerRegistryCredentialsResponsePtrOutputWithContext(ctx context.Context) ContainerRegistryCredentialsResponsePtrOutput {
	return o
}

func (o ContainerRegistryCredentialsResponsePtrOutput) Elem() ContainerRegistryCredentialsResponseOutput {
	return o.ApplyT(func(v *ContainerRegistryCredentialsResponse) ContainerRegistryCredentialsResponse {
		if v != nil {
			return *v
		}
		var ret ContainerRegistryCredentialsResponse
		return ret
	}).(ContainerRegistryCredentialsResponseOutput)
}

// The ACR login server name. User name is the first part of the FQDN.
func (o ContainerRegistryCredentialsResponsePtrOutput) LoginServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRegistryCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LoginServer
	}).(pulumi.StringPtrOutput)
}

// The ACR primary password.
func (o ContainerRegistryCredentialsResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRegistryCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The ACR secondary password.
func (o ContainerRegistryCredentialsResponsePtrOutput) Password2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRegistryCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Password2
	}).(pulumi.StringPtrOutput)
}

// Properties of Azure Container Registry.
type ContainerRegistryProperties struct {
	// ARM resource ID of the Azure Container Registry used to store Docker images for web services in the cluster. If not provided one will be created. This cannot be changed once the cluster is created.
	ResourceId *string `pulumi:"resourceId"`
}

// ContainerRegistryPropertiesInput is an input type that accepts ContainerRegistryPropertiesArgs and ContainerRegistryPropertiesOutput values.
// You can construct a concrete instance of `ContainerRegistryPropertiesInput` via:
//
//	ContainerRegistryPropertiesArgs{...}
type ContainerRegistryPropertiesInput interface {
	pulumi.Input

	ToContainerRegistryPropertiesOutput() ContainerRegistryPropertiesOutput
	ToContainerRegistryPropertiesOutputWithContext(context.Context) ContainerRegistryPropertiesOutput
}

// Properties of Azure Container Registry.
type ContainerRegistryPropertiesArgs struct {
	// ARM resource ID of the Azure Container Registry used to store Docker images for web services in the cluster. If not provided one will be created. This cannot be changed once the cluster is created.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ContainerRegistryPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRegistryProperties)(nil)).Elem()
}

func (i ContainerRegistryPropertiesArgs) ToContainerRegistryPropertiesOutput() ContainerRegistryPropertiesOutput {
	return i.ToContainerRegistryPropertiesOutputWithContext(context.Background())
}

func (i ContainerRegistryPropertiesArgs) ToContainerRegistryPropertiesOutputWithContext(ctx context.Context) ContainerRegistryPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryPropertiesOutput)
}

func (i ContainerRegistryPropertiesArgs) ToContainerRegistryPropertiesPtrOutput() ContainerRegistryPropertiesPtrOutput {
	return i.ToContainerRegistryPropertiesPtrOutputWithContext(context.Background())
}

func (i ContainerRegistryPropertiesArgs) ToContainerRegistryPropertiesPtrOutputWithContext(ctx context.Context) ContainerRegistryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryPropertiesOutput).ToContainerRegistryPropertiesPtrOutputWithContext(ctx)
}

// ContainerRegistryPropertiesPtrInput is an input type that accepts ContainerRegistryPropertiesArgs, ContainerRegistryPropertiesPtr and ContainerRegistryPropertiesPtrOutput values.
// You can construct a concrete instance of `ContainerRegistryPropertiesPtrInput` via:
//
//	        ContainerRegistryPropertiesArgs{...}
//
//	or:
//
//	        nil
type ContainerRegistryPropertiesPtrInput interface {
	pulumi.Input

	ToContainerRegistryPropertiesPtrOutput() ContainerRegistryPropertiesPtrOutput
	ToContainerRegistryPropertiesPtrOutputWithContext(context.Context) ContainerRegistryPropertiesPtrOutput
}

type containerRegistryPropertiesPtrType ContainerRegistryPropertiesArgs

func ContainerRegistryPropertiesPtr(v *ContainerRegistryPropertiesArgs) ContainerRegistryPropertiesPtrInput {
	return (*containerRegistryPropertiesPtrType)(v)
}

func (*containerRegistryPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRegistryProperties)(nil)).Elem()
}

func (i *containerRegistryPropertiesPtrType) ToContainerRegistryPropertiesPtrOutput() ContainerRegistryPropertiesPtrOutput {
	return i.ToContainerRegistryPropertiesPtrOutputWithContext(context.Background())
}

func (i *containerRegistryPropertiesPtrType) ToContainerRegistryPropertiesPtrOutputWithContext(ctx context.Context) ContainerRegistryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryPropertiesPtrOutput)
}

// Properties of Azure Container Registry.
type ContainerRegistryPropertiesOutput struct{ *pulumi.OutputState }

func (ContainerRegistryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRegistryProperties)(nil)).Elem()
}

func (o ContainerRegistryPropertiesOutput) ToContainerRegistryPropertiesOutput() ContainerRegistryPropertiesOutput {
	return o
}

func (o ContainerRegistryPropertiesOutput) ToContainerRegistryPropertiesOutputWithContext(ctx context.Context) ContainerRegistryPropertiesOutput {
	return o
}

func (o ContainerRegistryPropertiesOutput) ToContainerRegistryPropertiesPtrOutput() ContainerRegistryPropertiesPtrOutput {
	return o.ToContainerRegistryPropertiesPtrOutputWithContext(context.Background())
}

func (o ContainerRegistryPropertiesOutput) ToContainerRegistryPropertiesPtrOutputWithContext(ctx context.Context) ContainerRegistryPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerRegistryProperties) *ContainerRegistryProperties {
		return &v
	}).(ContainerRegistryPropertiesPtrOutput)
}

// ARM resource ID of the Azure Container Registry used to store Docker images for web services in the cluster. If not provided one will be created. This cannot be changed once the cluster is created.
func (o ContainerRegistryPropertiesOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerRegistryProperties) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ContainerRegistryPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ContainerRegistryPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRegistryProperties)(nil)).Elem()
}

func (o ContainerRegistryPropertiesPtrOutput) ToContainerRegistryPropertiesPtrOutput() ContainerRegistryPropertiesPtrOutput {
	return o
}

func (o ContainerRegistryPropertiesPtrOutput) ToContainerRegistryPropertiesPtrOutputWithContext(ctx context.Context) ContainerRegistryPropertiesPtrOutput {
	return o
}

func (o ContainerRegistryPropertiesPtrOutput) Elem() ContainerRegistryPropertiesOutput {
	return o.ApplyT(func(v *ContainerRegistryProperties) ContainerRegistryProperties {
		if v != nil {
			return *v
		}
		var ret ContainerRegistryProperties
		return ret
	}).(ContainerRegistryPropertiesOutput)
}

// ARM resource ID of the Azure Container Registry used to store Docker images for web services in the cluster. If not provided one will be created. This cannot be changed once the cluster is created.
func (o ContainerRegistryPropertiesPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRegistryProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Properties of Azure Container Registry.
type ContainerRegistryPropertiesResponse struct {
	// ARM resource ID of the Azure Container Registry used to store Docker images for web services in the cluster. If not provided one will be created. This cannot be changed once the cluster is created.
	ResourceId *string `pulumi:"resourceId"`
}

// Properties of Azure Container Registry.
type ContainerRegistryPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ContainerRegistryPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRegistryPropertiesResponse)(nil)).Elem()
}

func (o ContainerRegistryPropertiesResponseOutput) ToContainerRegistryPropertiesResponseOutput() ContainerRegistryPropertiesResponseOutput {
	return o
}

func (o ContainerRegistryPropertiesResponseOutput) ToContainerRegistryPropertiesResponseOutputWithContext(ctx context.Context) ContainerRegistryPropertiesResponseOutput {
	return o
}

// ARM resource ID of the Azure Container Registry used to store Docker images for web services in the cluster. If not provided one will be created. This cannot be changed once the cluster is created.
func (o ContainerRegistryPropertiesResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerRegistryPropertiesResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ContainerRegistryPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerRegistryPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRegistryPropertiesResponse)(nil)).Elem()
}

func (o ContainerRegistryPropertiesResponsePtrOutput) ToContainerRegistryPropertiesResponsePtrOutput() ContainerRegistryPropertiesResponsePtrOutput {
	return o
}

func (o ContainerRegistryPropertiesResponsePtrOutput) ToContainerRegistryPropertiesResponsePtrOutputWithContext(ctx context.Context) ContainerRegistryPropertiesResponsePtrOutput {
	return o
}

func (o ContainerRegistryPropertiesResponsePtrOutput) Elem() ContainerRegistryPropertiesResponseOutput {
	return o.ApplyT(func(v *ContainerRegistryPropertiesResponse) ContainerRegistryPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ContainerRegistryPropertiesResponse
		return ret
	}).(ContainerRegistryPropertiesResponseOutput)
}

// ARM resource ID of the Azure Container Registry used to store Docker images for web services in the cluster. If not provided one will be created. This cannot be changed once the cluster is created.
func (o ContainerRegistryPropertiesResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRegistryPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Information about the Azure Container Registry which contains the images deployed to the cluster.
type ContainerServiceCredentialsResponse struct {
	// The ACS kube config file.
	AcsKubeConfig string `pulumi:"acsKubeConfig"`
	// The ACR image pull secret name which was created in Kubernetes.
	ImagePullSecretName string `pulumi:"imagePullSecretName"`
	// Client secret for the Service Principal used by Kubernetes.
	ServicePrincipalConfiguration ServicePrincipalPropertiesResponse `pulumi:"servicePrincipalConfiguration"`
}

// Information about the Azure Container Registry which contains the images deployed to the cluster.
type ContainerServiceCredentialsResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceCredentialsResponse)(nil)).Elem()
}

func (o ContainerServiceCredentialsResponseOutput) ToContainerServiceCredentialsResponseOutput() ContainerServiceCredentialsResponseOutput {
	return o
}

func (o ContainerServiceCredentialsResponseOutput) ToContainerServiceCredentialsResponseOutputWithContext(ctx context.Context) ContainerServiceCredentialsResponseOutput {
	return o
}

// The ACS kube config file.
func (o ContainerServiceCredentialsResponseOutput) AcsKubeConfig() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceCredentialsResponse) string { return v.AcsKubeConfig }).(pulumi.StringOutput)
}

// The ACR image pull secret name which was created in Kubernetes.
func (o ContainerServiceCredentialsResponseOutput) ImagePullSecretName() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceCredentialsResponse) string { return v.ImagePullSecretName }).(pulumi.StringOutput)
}

// Client secret for the Service Principal used by Kubernetes.
func (o ContainerServiceCredentialsResponseOutput) ServicePrincipalConfiguration() ServicePrincipalPropertiesResponseOutput {
	return o.ApplyT(func(v ContainerServiceCredentialsResponse) ServicePrincipalPropertiesResponse {
		return v.ServicePrincipalConfiguration
	}).(ServicePrincipalPropertiesResponseOutput)
}

type ContainerServiceCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceCredentialsResponse)(nil)).Elem()
}

func (o ContainerServiceCredentialsResponsePtrOutput) ToContainerServiceCredentialsResponsePtrOutput() ContainerServiceCredentialsResponsePtrOutput {
	return o
}

func (o ContainerServiceCredentialsResponsePtrOutput) ToContainerServiceCredentialsResponsePtrOutputWithContext(ctx context.Context) ContainerServiceCredentialsResponsePtrOutput {
	return o
}

func (o ContainerServiceCredentialsResponsePtrOutput) Elem() ContainerServiceCredentialsResponseOutput {
	return o.ApplyT(func(v *ContainerServiceCredentialsResponse) ContainerServiceCredentialsResponse {
		if v != nil {
			return *v
		}
		var ret ContainerServiceCredentialsResponse
		return ret
	}).(ContainerServiceCredentialsResponseOutput)
}

// The ACS kube config file.
func (o ContainerServiceCredentialsResponsePtrOutput) AcsKubeConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AcsKubeConfig
	}).(pulumi.StringPtrOutput)
}

// The ACR image pull secret name which was created in Kubernetes.
func (o ContainerServiceCredentialsResponsePtrOutput) ImagePullSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ImagePullSecretName
	}).(pulumi.StringPtrOutput)
}

// Client secret for the Service Principal used by Kubernetes.
func (o ContainerServiceCredentialsResponsePtrOutput) ServicePrincipalConfiguration() ServicePrincipalPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServiceCredentialsResponse) *ServicePrincipalPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.ServicePrincipalConfiguration
	}).(ServicePrincipalPropertiesResponsePtrOutput)
}

// Global configuration for services in the cluster.
type GlobalServiceConfiguration struct {
	// The auto-scale configuration
	AutoScale *AutoScaleConfiguration `pulumi:"autoScale"`
	// The configuration ETag for updates.
	Etag *string `pulumi:"etag"`
	// Optional global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys.
	ServiceAuth *ServiceAuthConfiguration `pulumi:"serviceAuth"`
	// The SSL configuration properties
	Ssl *SslConfiguration `pulumi:"ssl"`
}

// Defaults sets the appropriate defaults for GlobalServiceConfiguration
func (val *GlobalServiceConfiguration) Defaults() *GlobalServiceConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoScale = tmp.AutoScale.Defaults()

	tmp.Ssl = tmp.Ssl.Defaults()

	return &tmp
}

// GlobalServiceConfigurationInput is an input type that accepts GlobalServiceConfigurationArgs and GlobalServiceConfigurationOutput values.
// You can construct a concrete instance of `GlobalServiceConfigurationInput` via:
//
//	GlobalServiceConfigurationArgs{...}
type GlobalServiceConfigurationInput interface {
	pulumi.Input

	ToGlobalServiceConfigurationOutput() GlobalServiceConfigurationOutput
	ToGlobalServiceConfigurationOutputWithContext(context.Context) GlobalServiceConfigurationOutput
}

// Global configuration for services in the cluster.
type GlobalServiceConfigurationArgs struct {
	// The auto-scale configuration
	AutoScale AutoScaleConfigurationPtrInput `pulumi:"autoScale"`
	// The configuration ETag for updates.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Optional global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys.
	ServiceAuth ServiceAuthConfigurationPtrInput `pulumi:"serviceAuth"`
	// The SSL configuration properties
	Ssl SslConfigurationPtrInput `pulumi:"ssl"`
}

// Defaults sets the appropriate defaults for GlobalServiceConfigurationArgs
func (val *GlobalServiceConfigurationArgs) Defaults() *GlobalServiceConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (GlobalServiceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalServiceConfiguration)(nil)).Elem()
}

func (i GlobalServiceConfigurationArgs) ToGlobalServiceConfigurationOutput() GlobalServiceConfigurationOutput {
	return i.ToGlobalServiceConfigurationOutputWithContext(context.Background())
}

func (i GlobalServiceConfigurationArgs) ToGlobalServiceConfigurationOutputWithContext(ctx context.Context) GlobalServiceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalServiceConfigurationOutput)
}

func (i GlobalServiceConfigurationArgs) ToGlobalServiceConfigurationPtrOutput() GlobalServiceConfigurationPtrOutput {
	return i.ToGlobalServiceConfigurationPtrOutputWithContext(context.Background())
}

func (i GlobalServiceConfigurationArgs) ToGlobalServiceConfigurationPtrOutputWithContext(ctx context.Context) GlobalServiceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalServiceConfigurationOutput).ToGlobalServiceConfigurationPtrOutputWithContext(ctx)
}

// GlobalServiceConfigurationPtrInput is an input type that accepts GlobalServiceConfigurationArgs, GlobalServiceConfigurationPtr and GlobalServiceConfigurationPtrOutput values.
// You can construct a concrete instance of `GlobalServiceConfigurationPtrInput` via:
//
//	        GlobalServiceConfigurationArgs{...}
//
//	or:
//
//	        nil
type GlobalServiceConfigurationPtrInput interface {
	pulumi.Input

	ToGlobalServiceConfigurationPtrOutput() GlobalServiceConfigurationPtrOutput
	ToGlobalServiceConfigurationPtrOutputWithContext(context.Context) GlobalServiceConfigurationPtrOutput
}

type globalServiceConfigurationPtrType GlobalServiceConfigurationArgs

func GlobalServiceConfigurationPtr(v *GlobalServiceConfigurationArgs) GlobalServiceConfigurationPtrInput {
	return (*globalServiceConfigurationPtrType)(v)
}

func (*globalServiceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalServiceConfiguration)(nil)).Elem()
}

func (i *globalServiceConfigurationPtrType) ToGlobalServiceConfigurationPtrOutput() GlobalServiceConfigurationPtrOutput {
	return i.ToGlobalServiceConfigurationPtrOutputWithContext(context.Background())
}

func (i *globalServiceConfigurationPtrType) ToGlobalServiceConfigurationPtrOutputWithContext(ctx context.Context) GlobalServiceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalServiceConfigurationPtrOutput)
}

// Global configuration for services in the cluster.
type GlobalServiceConfigurationOutput struct{ *pulumi.OutputState }

func (GlobalServiceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalServiceConfiguration)(nil)).Elem()
}

func (o GlobalServiceConfigurationOutput) ToGlobalServiceConfigurationOutput() GlobalServiceConfigurationOutput {
	return o
}

func (o GlobalServiceConfigurationOutput) ToGlobalServiceConfigurationOutputWithContext(ctx context.Context) GlobalServiceConfigurationOutput {
	return o
}

func (o GlobalServiceConfigurationOutput) ToGlobalServiceConfigurationPtrOutput() GlobalServiceConfigurationPtrOutput {
	return o.ToGlobalServiceConfigurationPtrOutputWithContext(context.Background())
}

func (o GlobalServiceConfigurationOutput) ToGlobalServiceConfigurationPtrOutputWithContext(ctx context.Context) GlobalServiceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalServiceConfiguration) *GlobalServiceConfiguration {
		return &v
	}).(GlobalServiceConfigurationPtrOutput)
}

// The auto-scale configuration
func (o GlobalServiceConfigurationOutput) AutoScale() AutoScaleConfigurationPtrOutput {
	return o.ApplyT(func(v GlobalServiceConfiguration) *AutoScaleConfiguration { return v.AutoScale }).(AutoScaleConfigurationPtrOutput)
}

// The configuration ETag for updates.
func (o GlobalServiceConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalServiceConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Optional global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys.
func (o GlobalServiceConfigurationOutput) ServiceAuth() ServiceAuthConfigurationPtrOutput {
	return o.ApplyT(func(v GlobalServiceConfiguration) *ServiceAuthConfiguration { return v.ServiceAuth }).(ServiceAuthConfigurationPtrOutput)
}

// The SSL configuration properties
func (o GlobalServiceConfigurationOutput) Ssl() SslConfigurationPtrOutput {
	return o.ApplyT(func(v GlobalServiceConfiguration) *SslConfiguration { return v.Ssl }).(SslConfigurationPtrOutput)
}

type GlobalServiceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (GlobalServiceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalServiceConfiguration)(nil)).Elem()
}

func (o GlobalServiceConfigurationPtrOutput) ToGlobalServiceConfigurationPtrOutput() GlobalServiceConfigurationPtrOutput {
	return o
}

func (o GlobalServiceConfigurationPtrOutput) ToGlobalServiceConfigurationPtrOutputWithContext(ctx context.Context) GlobalServiceConfigurationPtrOutput {
	return o
}

func (o GlobalServiceConfigurationPtrOutput) Elem() GlobalServiceConfigurationOutput {
	return o.ApplyT(func(v *GlobalServiceConfiguration) GlobalServiceConfiguration {
		if v != nil {
			return *v
		}
		var ret GlobalServiceConfiguration
		return ret
	}).(GlobalServiceConfigurationOutput)
}

// The auto-scale configuration
func (o GlobalServiceConfigurationPtrOutput) AutoScale() AutoScaleConfigurationPtrOutput {
	return o.ApplyT(func(v *GlobalServiceConfiguration) *AutoScaleConfiguration {
		if v == nil {
			return nil
		}
		return v.AutoScale
	}).(AutoScaleConfigurationPtrOutput)
}

// The configuration ETag for updates.
func (o GlobalServiceConfigurationPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalServiceConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Optional global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys.
func (o GlobalServiceConfigurationPtrOutput) ServiceAuth() ServiceAuthConfigurationPtrOutput {
	return o.ApplyT(func(v *GlobalServiceConfiguration) *ServiceAuthConfiguration {
		if v == nil {
			return nil
		}
		return v.ServiceAuth
	}).(ServiceAuthConfigurationPtrOutput)
}

// The SSL configuration properties
func (o GlobalServiceConfigurationPtrOutput) Ssl() SslConfigurationPtrOutput {
	return o.ApplyT(func(v *GlobalServiceConfiguration) *SslConfiguration {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(SslConfigurationPtrOutput)
}

// Global configuration for services in the cluster.
type GlobalServiceConfigurationResponse struct {
	// The auto-scale configuration
	AutoScale *AutoScaleConfigurationResponse `pulumi:"autoScale"`
	// The configuration ETag for updates.
	Etag *string `pulumi:"etag"`
	// Optional global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys.
	ServiceAuth *ServiceAuthConfigurationResponse `pulumi:"serviceAuth"`
	// The SSL configuration properties
	Ssl *SslConfigurationResponse `pulumi:"ssl"`
}

// Defaults sets the appropriate defaults for GlobalServiceConfigurationResponse
func (val *GlobalServiceConfigurationResponse) Defaults() *GlobalServiceConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoScale = tmp.AutoScale.Defaults()

	tmp.Ssl = tmp.Ssl.Defaults()

	return &tmp
}

// Global configuration for services in the cluster.
type GlobalServiceConfigurationResponseOutput struct{ *pulumi.OutputState }

func (GlobalServiceConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalServiceConfigurationResponse)(nil)).Elem()
}

func (o GlobalServiceConfigurationResponseOutput) ToGlobalServiceConfigurationResponseOutput() GlobalServiceConfigurationResponseOutput {
	return o
}

func (o GlobalServiceConfigurationResponseOutput) ToGlobalServiceConfigurationResponseOutputWithContext(ctx context.Context) GlobalServiceConfigurationResponseOutput {
	return o
}

// The auto-scale configuration
func (o GlobalServiceConfigurationResponseOutput) AutoScale() AutoScaleConfigurationResponsePtrOutput {
	return o.ApplyT(func(v GlobalServiceConfigurationResponse) *AutoScaleConfigurationResponse { return v.AutoScale }).(AutoScaleConfigurationResponsePtrOutput)
}

// The configuration ETag for updates.
func (o GlobalServiceConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalServiceConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Optional global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys.
func (o GlobalServiceConfigurationResponseOutput) ServiceAuth() ServiceAuthConfigurationResponsePtrOutput {
	return o.ApplyT(func(v GlobalServiceConfigurationResponse) *ServiceAuthConfigurationResponse { return v.ServiceAuth }).(ServiceAuthConfigurationResponsePtrOutput)
}

// The SSL configuration properties
func (o GlobalServiceConfigurationResponseOutput) Ssl() SslConfigurationResponsePtrOutput {
	return o.ApplyT(func(v GlobalServiceConfigurationResponse) *SslConfigurationResponse { return v.Ssl }).(SslConfigurationResponsePtrOutput)
}

type GlobalServiceConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (GlobalServiceConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalServiceConfigurationResponse)(nil)).Elem()
}

func (o GlobalServiceConfigurationResponsePtrOutput) ToGlobalServiceConfigurationResponsePtrOutput() GlobalServiceConfigurationResponsePtrOutput {
	return o
}

func (o GlobalServiceConfigurationResponsePtrOutput) ToGlobalServiceConfigurationResponsePtrOutputWithContext(ctx context.Context) GlobalServiceConfigurationResponsePtrOutput {
	return o
}

func (o GlobalServiceConfigurationResponsePtrOutput) Elem() GlobalServiceConfigurationResponseOutput {
	return o.ApplyT(func(v *GlobalServiceConfigurationResponse) GlobalServiceConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret GlobalServiceConfigurationResponse
		return ret
	}).(GlobalServiceConfigurationResponseOutput)
}

// The auto-scale configuration
func (o GlobalServiceConfigurationResponsePtrOutput) AutoScale() AutoScaleConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *GlobalServiceConfigurationResponse) *AutoScaleConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.AutoScale
	}).(AutoScaleConfigurationResponsePtrOutput)
}

// The configuration ETag for updates.
func (o GlobalServiceConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalServiceConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Optional global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys.
func (o GlobalServiceConfigurationResponsePtrOutput) ServiceAuth() ServiceAuthConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *GlobalServiceConfigurationResponse) *ServiceAuthConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.ServiceAuth
	}).(ServiceAuthConfigurationResponsePtrOutput)
}

// The SSL configuration properties
func (o GlobalServiceConfigurationResponsePtrOutput) Ssl() SslConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *GlobalServiceConfigurationResponse) *SslConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(SslConfigurationResponsePtrOutput)
}

// Kubernetes cluster specific properties
type KubernetesClusterProperties struct {
	// The Azure Service Principal used by Kubernetes
	ServicePrincipal ServicePrincipalProperties `pulumi:"servicePrincipal"`
}

// KubernetesClusterPropertiesInput is an input type that accepts KubernetesClusterPropertiesArgs and KubernetesClusterPropertiesOutput values.
// You can construct a concrete instance of `KubernetesClusterPropertiesInput` via:
//
//	KubernetesClusterPropertiesArgs{...}
type KubernetesClusterPropertiesInput interface {
	pulumi.Input

	ToKubernetesClusterPropertiesOutput() KubernetesClusterPropertiesOutput
	ToKubernetesClusterPropertiesOutputWithContext(context.Context) KubernetesClusterPropertiesOutput
}

// Kubernetes cluster specific properties
type KubernetesClusterPropertiesArgs struct {
	// The Azure Service Principal used by Kubernetes
	ServicePrincipal ServicePrincipalPropertiesInput `pulumi:"servicePrincipal"`
}

func (KubernetesClusterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterProperties)(nil)).Elem()
}

func (i KubernetesClusterPropertiesArgs) ToKubernetesClusterPropertiesOutput() KubernetesClusterPropertiesOutput {
	return i.ToKubernetesClusterPropertiesOutputWithContext(context.Background())
}

func (i KubernetesClusterPropertiesArgs) ToKubernetesClusterPropertiesOutputWithContext(ctx context.Context) KubernetesClusterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterPropertiesOutput)
}

// Kubernetes cluster specific properties
type KubernetesClusterPropertiesOutput struct{ *pulumi.OutputState }

func (KubernetesClusterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterProperties)(nil)).Elem()
}

func (o KubernetesClusterPropertiesOutput) ToKubernetesClusterPropertiesOutput() KubernetesClusterPropertiesOutput {
	return o
}

func (o KubernetesClusterPropertiesOutput) ToKubernetesClusterPropertiesOutputWithContext(ctx context.Context) KubernetesClusterPropertiesOutput {
	return o
}

// The Azure Service Principal used by Kubernetes
func (o KubernetesClusterPropertiesOutput) ServicePrincipal() ServicePrincipalPropertiesOutput {
	return o.ApplyT(func(v KubernetesClusterProperties) ServicePrincipalProperties { return v.ServicePrincipal }).(ServicePrincipalPropertiesOutput)
}

// Kubernetes cluster specific properties
type KubernetesClusterPropertiesResponse struct {
	// The Azure Service Principal used by Kubernetes
	ServicePrincipal ServicePrincipalPropertiesResponse `pulumi:"servicePrincipal"`
}

// Kubernetes cluster specific properties
type KubernetesClusterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (KubernetesClusterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterPropertiesResponse)(nil)).Elem()
}

func (o KubernetesClusterPropertiesResponseOutput) ToKubernetesClusterPropertiesResponseOutput() KubernetesClusterPropertiesResponseOutput {
	return o
}

func (o KubernetesClusterPropertiesResponseOutput) ToKubernetesClusterPropertiesResponseOutputWithContext(ctx context.Context) KubernetesClusterPropertiesResponseOutput {
	return o
}

// The Azure Service Principal used by Kubernetes
func (o KubernetesClusterPropertiesResponseOutput) ServicePrincipal() ServicePrincipalPropertiesResponseOutput {
	return o.ApplyT(func(v KubernetesClusterPropertiesResponse) ServicePrincipalPropertiesResponse {
		return v.ServicePrincipal
	}).(ServicePrincipalPropertiesResponseOutput)
}

// Global service auth configuration properties. These are the data-plane authorization keys and are used if a service doesn't define it's own.
type ServiceAuthConfiguration struct {
	// The primary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
	PrimaryAuthKeyHash string `pulumi:"primaryAuthKeyHash"`
	// The secondary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
	SecondaryAuthKeyHash string `pulumi:"secondaryAuthKeyHash"`
}

// ServiceAuthConfigurationInput is an input type that accepts ServiceAuthConfigurationArgs and ServiceAuthConfigurationOutput values.
// You can construct a concrete instance of `ServiceAuthConfigurationInput` via:
//
//	ServiceAuthConfigurationArgs{...}
type ServiceAuthConfigurationInput interface {
	pulumi.Input

	ToServiceAuthConfigurationOutput() ServiceAuthConfigurationOutput
	ToServiceAuthConfigurationOutputWithContext(context.Context) ServiceAuthConfigurationOutput
}

// Global service auth configuration properties. These are the data-plane authorization keys and are used if a service doesn't define it's own.
type ServiceAuthConfigurationArgs struct {
	// The primary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
	PrimaryAuthKeyHash pulumi.StringInput `pulumi:"primaryAuthKeyHash"`
	// The secondary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
	SecondaryAuthKeyHash pulumi.StringInput `pulumi:"secondaryAuthKeyHash"`
}

func (ServiceAuthConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAuthConfiguration)(nil)).Elem()
}

func (i ServiceAuthConfigurationArgs) ToServiceAuthConfigurationOutput() ServiceAuthConfigurationOutput {
	return i.ToServiceAuthConfigurationOutputWithContext(context.Background())
}

func (i ServiceAuthConfigurationArgs) ToServiceAuthConfigurationOutputWithContext(ctx context.Context) ServiceAuthConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAuthConfigurationOutput)
}

func (i ServiceAuthConfigurationArgs) ToServiceAuthConfigurationPtrOutput() ServiceAuthConfigurationPtrOutput {
	return i.ToServiceAuthConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceAuthConfigurationArgs) ToServiceAuthConfigurationPtrOutputWithContext(ctx context.Context) ServiceAuthConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAuthConfigurationOutput).ToServiceAuthConfigurationPtrOutputWithContext(ctx)
}

// ServiceAuthConfigurationPtrInput is an input type that accepts ServiceAuthConfigurationArgs, ServiceAuthConfigurationPtr and ServiceAuthConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceAuthConfigurationPtrInput` via:
//
//	        ServiceAuthConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceAuthConfigurationPtrInput interface {
	pulumi.Input

	ToServiceAuthConfigurationPtrOutput() ServiceAuthConfigurationPtrOutput
	ToServiceAuthConfigurationPtrOutputWithContext(context.Context) ServiceAuthConfigurationPtrOutput
}

type serviceAuthConfigurationPtrType ServiceAuthConfigurationArgs

func ServiceAuthConfigurationPtr(v *ServiceAuthConfigurationArgs) ServiceAuthConfigurationPtrInput {
	return (*serviceAuthConfigurationPtrType)(v)
}

func (*serviceAuthConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAuthConfiguration)(nil)).Elem()
}

func (i *serviceAuthConfigurationPtrType) ToServiceAuthConfigurationPtrOutput() ServiceAuthConfigurationPtrOutput {
	return i.ToServiceAuthConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceAuthConfigurationPtrType) ToServiceAuthConfigurationPtrOutputWithContext(ctx context.Context) ServiceAuthConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAuthConfigurationPtrOutput)
}

// Global service auth configuration properties. These are the data-plane authorization keys and are used if a service doesn't define it's own.
type ServiceAuthConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceAuthConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAuthConfiguration)(nil)).Elem()
}

func (o ServiceAuthConfigurationOutput) ToServiceAuthConfigurationOutput() ServiceAuthConfigurationOutput {
	return o
}

func (o ServiceAuthConfigurationOutput) ToServiceAuthConfigurationOutputWithContext(ctx context.Context) ServiceAuthConfigurationOutput {
	return o
}

func (o ServiceAuthConfigurationOutput) ToServiceAuthConfigurationPtrOutput() ServiceAuthConfigurationPtrOutput {
	return o.ToServiceAuthConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceAuthConfigurationOutput) ToServiceAuthConfigurationPtrOutputWithContext(ctx context.Context) ServiceAuthConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAuthConfiguration) *ServiceAuthConfiguration {
		return &v
	}).(ServiceAuthConfigurationPtrOutput)
}

// The primary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
func (o ServiceAuthConfigurationOutput) PrimaryAuthKeyHash() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAuthConfiguration) string { return v.PrimaryAuthKeyHash }).(pulumi.StringOutput)
}

// The secondary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
func (o ServiceAuthConfigurationOutput) SecondaryAuthKeyHash() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAuthConfiguration) string { return v.SecondaryAuthKeyHash }).(pulumi.StringOutput)
}

type ServiceAuthConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceAuthConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAuthConfiguration)(nil)).Elem()
}

func (o ServiceAuthConfigurationPtrOutput) ToServiceAuthConfigurationPtrOutput() ServiceAuthConfigurationPtrOutput {
	return o
}

func (o ServiceAuthConfigurationPtrOutput) ToServiceAuthConfigurationPtrOutputWithContext(ctx context.Context) ServiceAuthConfigurationPtrOutput {
	return o
}

func (o ServiceAuthConfigurationPtrOutput) Elem() ServiceAuthConfigurationOutput {
	return o.ApplyT(func(v *ServiceAuthConfiguration) ServiceAuthConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceAuthConfiguration
		return ret
	}).(ServiceAuthConfigurationOutput)
}

// The primary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
func (o ServiceAuthConfigurationPtrOutput) PrimaryAuthKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAuthConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.PrimaryAuthKeyHash
	}).(pulumi.StringPtrOutput)
}

// The secondary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
func (o ServiceAuthConfigurationPtrOutput) SecondaryAuthKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAuthConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SecondaryAuthKeyHash
	}).(pulumi.StringPtrOutput)
}

// Global service auth configuration properties. These are the data-plane authorization keys and are used if a service doesn't define it's own.
type ServiceAuthConfigurationResponse struct {
	// The primary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
	PrimaryAuthKeyHash string `pulumi:"primaryAuthKeyHash"`
	// The secondary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
	SecondaryAuthKeyHash string `pulumi:"secondaryAuthKeyHash"`
}

// Global service auth configuration properties. These are the data-plane authorization keys and are used if a service doesn't define it's own.
type ServiceAuthConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ServiceAuthConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAuthConfigurationResponse)(nil)).Elem()
}

func (o ServiceAuthConfigurationResponseOutput) ToServiceAuthConfigurationResponseOutput() ServiceAuthConfigurationResponseOutput {
	return o
}

func (o ServiceAuthConfigurationResponseOutput) ToServiceAuthConfigurationResponseOutputWithContext(ctx context.Context) ServiceAuthConfigurationResponseOutput {
	return o
}

// The primary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
func (o ServiceAuthConfigurationResponseOutput) PrimaryAuthKeyHash() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAuthConfigurationResponse) string { return v.PrimaryAuthKeyHash }).(pulumi.StringOutput)
}

// The secondary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
func (o ServiceAuthConfigurationResponseOutput) SecondaryAuthKeyHash() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAuthConfigurationResponse) string { return v.SecondaryAuthKeyHash }).(pulumi.StringOutput)
}

type ServiceAuthConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceAuthConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAuthConfigurationResponse)(nil)).Elem()
}

func (o ServiceAuthConfigurationResponsePtrOutput) ToServiceAuthConfigurationResponsePtrOutput() ServiceAuthConfigurationResponsePtrOutput {
	return o
}

func (o ServiceAuthConfigurationResponsePtrOutput) ToServiceAuthConfigurationResponsePtrOutputWithContext(ctx context.Context) ServiceAuthConfigurationResponsePtrOutput {
	return o
}

func (o ServiceAuthConfigurationResponsePtrOutput) Elem() ServiceAuthConfigurationResponseOutput {
	return o.ApplyT(func(v *ServiceAuthConfigurationResponse) ServiceAuthConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ServiceAuthConfigurationResponse
		return ret
	}).(ServiceAuthConfigurationResponseOutput)
}

// The primary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
func (o ServiceAuthConfigurationResponsePtrOutput) PrimaryAuthKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAuthConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrimaryAuthKeyHash
	}).(pulumi.StringPtrOutput)
}

// The secondary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
func (o ServiceAuthConfigurationResponsePtrOutput) SecondaryAuthKeyHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAuthConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecondaryAuthKeyHash
	}).(pulumi.StringPtrOutput)
}

// The Azure service principal used by Kubernetes for configuring load balancers
type ServicePrincipalProperties struct {
	// The service principal client ID
	ClientId string `pulumi:"clientId"`
	// The service principal secret. This is not returned in response of GET/PUT on the resource. To see this please call listKeys.
	Secret string `pulumi:"secret"`
}

// ServicePrincipalPropertiesInput is an input type that accepts ServicePrincipalPropertiesArgs and ServicePrincipalPropertiesOutput values.
// You can construct a concrete instance of `ServicePrincipalPropertiesInput` via:
//
//	ServicePrincipalPropertiesArgs{...}
type ServicePrincipalPropertiesInput interface {
	pulumi.Input

	ToServicePrincipalPropertiesOutput() ServicePrincipalPropertiesOutput
	ToServicePrincipalPropertiesOutputWithContext(context.Context) ServicePrincipalPropertiesOutput
}

// The Azure service principal used by Kubernetes for configuring load balancers
type ServicePrincipalPropertiesArgs struct {
	// The service principal client ID
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The service principal secret. This is not returned in response of GET/PUT on the resource. To see this please call listKeys.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (ServicePrincipalPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalProperties)(nil)).Elem()
}

func (i ServicePrincipalPropertiesArgs) ToServicePrincipalPropertiesOutput() ServicePrincipalPropertiesOutput {
	return i.ToServicePrincipalPropertiesOutputWithContext(context.Background())
}

func (i ServicePrincipalPropertiesArgs) ToServicePrincipalPropertiesOutputWithContext(ctx context.Context) ServicePrincipalPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalPropertiesOutput)
}

// The Azure service principal used by Kubernetes for configuring load balancers
type ServicePrincipalPropertiesOutput struct{ *pulumi.OutputState }

func (ServicePrincipalPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalProperties)(nil)).Elem()
}

func (o ServicePrincipalPropertiesOutput) ToServicePrincipalPropertiesOutput() ServicePrincipalPropertiesOutput {
	return o
}

func (o ServicePrincipalPropertiesOutput) ToServicePrincipalPropertiesOutputWithContext(ctx context.Context) ServicePrincipalPropertiesOutput {
	return o
}

// The service principal client ID
func (o ServicePrincipalPropertiesOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalProperties) string { return v.ClientId }).(pulumi.StringOutput)
}

// The service principal secret. This is not returned in response of GET/PUT on the resource. To see this please call listKeys.
func (o ServicePrincipalPropertiesOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalProperties) string { return v.Secret }).(pulumi.StringOutput)
}

// The Azure service principal used by Kubernetes for configuring load balancers
type ServicePrincipalPropertiesResponse struct {
	// The service principal client ID
	ClientId string `pulumi:"clientId"`
	// The service principal secret. This is not returned in response of GET/PUT on the resource. To see this please call listKeys.
	Secret string `pulumi:"secret"`
}

// The Azure service principal used by Kubernetes for configuring load balancers
type ServicePrincipalPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ServicePrincipalPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalPropertiesResponse)(nil)).Elem()
}

func (o ServicePrincipalPropertiesResponseOutput) ToServicePrincipalPropertiesResponseOutput() ServicePrincipalPropertiesResponseOutput {
	return o
}

func (o ServicePrincipalPropertiesResponseOutput) ToServicePrincipalPropertiesResponseOutputWithContext(ctx context.Context) ServicePrincipalPropertiesResponseOutput {
	return o
}

// The service principal client ID
func (o ServicePrincipalPropertiesResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalPropertiesResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The service principal secret. This is not returned in response of GET/PUT on the resource. To see this please call listKeys.
func (o ServicePrincipalPropertiesResponseOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalPropertiesResponse) string { return v.Secret }).(pulumi.StringOutput)
}

type ServicePrincipalPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ServicePrincipalPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalPropertiesResponse)(nil)).Elem()
}

func (o ServicePrincipalPropertiesResponsePtrOutput) ToServicePrincipalPropertiesResponsePtrOutput() ServicePrincipalPropertiesResponsePtrOutput {
	return o
}

func (o ServicePrincipalPropertiesResponsePtrOutput) ToServicePrincipalPropertiesResponsePtrOutputWithContext(ctx context.Context) ServicePrincipalPropertiesResponsePtrOutput {
	return o
}

func (o ServicePrincipalPropertiesResponsePtrOutput) Elem() ServicePrincipalPropertiesResponseOutput {
	return o.ApplyT(func(v *ServicePrincipalPropertiesResponse) ServicePrincipalPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ServicePrincipalPropertiesResponse
		return ret
	}).(ServicePrincipalPropertiesResponseOutput)
}

// The service principal client ID
func (o ServicePrincipalPropertiesResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The service principal secret. This is not returned in response of GET/PUT on the resource. To see this please call listKeys.
func (o ServicePrincipalPropertiesResponsePtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

// SSL configuration. If configured data-plane calls to user services will be exposed over SSL only.
type SslConfiguration struct {
	// The SSL cert data in PEM format encoded as base64 string
	Cert *string `pulumi:"cert"`
	// The SSL key data in PEM format encoded as base64 string. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
	Key *string `pulumi:"key"`
	// SSL status. Allowed values are Enabled and Disabled.
	Status *string `pulumi:"status"`
}

// Defaults sets the appropriate defaults for SslConfiguration
func (val *SslConfiguration) Defaults() *SslConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Status) {
		status_ := "Enabled"
		tmp.Status = &status_
	}
	return &tmp
}

// SslConfigurationInput is an input type that accepts SslConfigurationArgs and SslConfigurationOutput values.
// You can construct a concrete instance of `SslConfigurationInput` via:
//
//	SslConfigurationArgs{...}
type SslConfigurationInput interface {
	pulumi.Input

	ToSslConfigurationOutput() SslConfigurationOutput
	ToSslConfigurationOutputWithContext(context.Context) SslConfigurationOutput
}

// SSL configuration. If configured data-plane calls to user services will be exposed over SSL only.
type SslConfigurationArgs struct {
	// The SSL cert data in PEM format encoded as base64 string
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// The SSL key data in PEM format encoded as base64 string. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// SSL status. Allowed values are Enabled and Disabled.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

// Defaults sets the appropriate defaults for SslConfigurationArgs
func (val *SslConfigurationArgs) Defaults() *SslConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Status) {
		tmp.Status = pulumi.StringPtr("Enabled")
	}
	return &tmp
}
func (SslConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfiguration)(nil)).Elem()
}

func (i SslConfigurationArgs) ToSslConfigurationOutput() SslConfigurationOutput {
	return i.ToSslConfigurationOutputWithContext(context.Background())
}

func (i SslConfigurationArgs) ToSslConfigurationOutputWithContext(ctx context.Context) SslConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationOutput)
}

func (i SslConfigurationArgs) ToSslConfigurationPtrOutput() SslConfigurationPtrOutput {
	return i.ToSslConfigurationPtrOutputWithContext(context.Background())
}

func (i SslConfigurationArgs) ToSslConfigurationPtrOutputWithContext(ctx context.Context) SslConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationOutput).ToSslConfigurationPtrOutputWithContext(ctx)
}

// SslConfigurationPtrInput is an input type that accepts SslConfigurationArgs, SslConfigurationPtr and SslConfigurationPtrOutput values.
// You can construct a concrete instance of `SslConfigurationPtrInput` via:
//
//	        SslConfigurationArgs{...}
//
//	or:
//
//	        nil
type SslConfigurationPtrInput interface {
	pulumi.Input

	ToSslConfigurationPtrOutput() SslConfigurationPtrOutput
	ToSslConfigurationPtrOutputWithContext(context.Context) SslConfigurationPtrOutput
}

type sslConfigurationPtrType SslConfigurationArgs

func SslConfigurationPtr(v *SslConfigurationArgs) SslConfigurationPtrInput {
	return (*sslConfigurationPtrType)(v)
}

func (*sslConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfiguration)(nil)).Elem()
}

func (i *sslConfigurationPtrType) ToSslConfigurationPtrOutput() SslConfigurationPtrOutput {
	return i.ToSslConfigurationPtrOutputWithContext(context.Background())
}

func (i *sslConfigurationPtrType) ToSslConfigurationPtrOutputWithContext(ctx context.Context) SslConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationPtrOutput)
}

// SSL configuration. If configured data-plane calls to user services will be exposed over SSL only.
type SslConfigurationOutput struct{ *pulumi.OutputState }

func (SslConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfiguration)(nil)).Elem()
}

func (o SslConfigurationOutput) ToSslConfigurationOutput() SslConfigurationOutput {
	return o
}

func (o SslConfigurationOutput) ToSslConfigurationOutputWithContext(ctx context.Context) SslConfigurationOutput {
	return o
}

func (o SslConfigurationOutput) ToSslConfigurationPtrOutput() SslConfigurationPtrOutput {
	return o.ToSslConfigurationPtrOutputWithContext(context.Background())
}

func (o SslConfigurationOutput) ToSslConfigurationPtrOutputWithContext(ctx context.Context) SslConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslConfiguration) *SslConfiguration {
		return &v
	}).(SslConfigurationPtrOutput)
}

// The SSL cert data in PEM format encoded as base64 string
func (o SslConfigurationOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// The SSL key data in PEM format encoded as base64 string. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
func (o SslConfigurationOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// SSL status. Allowed values are Enabled and Disabled.
func (o SslConfigurationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SslConfigurationPtrOutput struct{ *pulumi.OutputState }

func (SslConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfiguration)(nil)).Elem()
}

func (o SslConfigurationPtrOutput) ToSslConfigurationPtrOutput() SslConfigurationPtrOutput {
	return o
}

func (o SslConfigurationPtrOutput) ToSslConfigurationPtrOutputWithContext(ctx context.Context) SslConfigurationPtrOutput {
	return o
}

func (o SslConfigurationPtrOutput) Elem() SslConfigurationOutput {
	return o.ApplyT(func(v *SslConfiguration) SslConfiguration {
		if v != nil {
			return *v
		}
		var ret SslConfiguration
		return ret
	}).(SslConfigurationOutput)
}

// The SSL cert data in PEM format encoded as base64 string
func (o SslConfigurationPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// The SSL key data in PEM format encoded as base64 string. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
func (o SslConfigurationPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// SSL status. Allowed values are Enabled and Disabled.
func (o SslConfigurationPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// SSL configuration. If configured data-plane calls to user services will be exposed over SSL only.
type SslConfigurationResponse struct {
	// The SSL cert data in PEM format encoded as base64 string
	Cert *string `pulumi:"cert"`
	// The SSL key data in PEM format encoded as base64 string. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
	Key *string `pulumi:"key"`
	// SSL status. Allowed values are Enabled and Disabled.
	Status *string `pulumi:"status"`
}

// Defaults sets the appropriate defaults for SslConfigurationResponse
func (val *SslConfigurationResponse) Defaults() *SslConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Status) {
		status_ := "Enabled"
		tmp.Status = &status_
	}
	return &tmp
}

// SSL configuration. If configured data-plane calls to user services will be exposed over SSL only.
type SslConfigurationResponseOutput struct{ *pulumi.OutputState }

func (SslConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigurationResponse)(nil)).Elem()
}

func (o SslConfigurationResponseOutput) ToSslConfigurationResponseOutput() SslConfigurationResponseOutput {
	return o
}

func (o SslConfigurationResponseOutput) ToSslConfigurationResponseOutputWithContext(ctx context.Context) SslConfigurationResponseOutput {
	return o
}

// The SSL cert data in PEM format encoded as base64 string
func (o SslConfigurationResponseOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// The SSL key data in PEM format encoded as base64 string. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
func (o SslConfigurationResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// SSL status. Allowed values are Enabled and Disabled.
func (o SslConfigurationResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SslConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (SslConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfigurationResponse)(nil)).Elem()
}

func (o SslConfigurationResponsePtrOutput) ToSslConfigurationResponsePtrOutput() SslConfigurationResponsePtrOutput {
	return o
}

func (o SslConfigurationResponsePtrOutput) ToSslConfigurationResponsePtrOutputWithContext(ctx context.Context) SslConfigurationResponsePtrOutput {
	return o
}

func (o SslConfigurationResponsePtrOutput) Elem() SslConfigurationResponseOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) SslConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret SslConfigurationResponse
		return ret
	}).(SslConfigurationResponseOutput)
}

// The SSL cert data in PEM format encoded as base64 string
func (o SslConfigurationResponsePtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// The SSL key data in PEM format encoded as base64 string. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
func (o SslConfigurationResponsePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// SSL status. Allowed values are Enabled and Disabled.
func (o SslConfigurationResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Access information for the storage account.
type StorageAccountCredentialsResponse struct {
	// The primary key of the storage account.
	PrimaryKey string `pulumi:"primaryKey"`
	// The ARM resource ID of the storage account.
	ResourceId string `pulumi:"resourceId"`
	// The secondary key of the storage account.
	SecondaryKey string `pulumi:"secondaryKey"`
}

// Access information for the storage account.
type StorageAccountCredentialsResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountCredentialsResponse)(nil)).Elem()
}

func (o StorageAccountCredentialsResponseOutput) ToStorageAccountCredentialsResponseOutput() StorageAccountCredentialsResponseOutput {
	return o
}

func (o StorageAccountCredentialsResponseOutput) ToStorageAccountCredentialsResponseOutputWithContext(ctx context.Context) StorageAccountCredentialsResponseOutput {
	return o
}

// The primary key of the storage account.
func (o StorageAccountCredentialsResponseOutput) PrimaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountCredentialsResponse) string { return v.PrimaryKey }).(pulumi.StringOutput)
}

// The ARM resource ID of the storage account.
func (o StorageAccountCredentialsResponseOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountCredentialsResponse) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The secondary key of the storage account.
func (o StorageAccountCredentialsResponseOutput) SecondaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountCredentialsResponse) string { return v.SecondaryKey }).(pulumi.StringOutput)
}

type StorageAccountCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageAccountCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountCredentialsResponse)(nil)).Elem()
}

func (o StorageAccountCredentialsResponsePtrOutput) ToStorageAccountCredentialsResponsePtrOutput() StorageAccountCredentialsResponsePtrOutput {
	return o
}

func (o StorageAccountCredentialsResponsePtrOutput) ToStorageAccountCredentialsResponsePtrOutputWithContext(ctx context.Context) StorageAccountCredentialsResponsePtrOutput {
	return o
}

func (o StorageAccountCredentialsResponsePtrOutput) Elem() StorageAccountCredentialsResponseOutput {
	return o.ApplyT(func(v *StorageAccountCredentialsResponse) StorageAccountCredentialsResponse {
		if v != nil {
			return *v
		}
		var ret StorageAccountCredentialsResponse
		return ret
	}).(StorageAccountCredentialsResponseOutput)
}

// The primary key of the storage account.
func (o StorageAccountCredentialsResponsePtrOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrimaryKey
	}).(pulumi.StringPtrOutput)
}

// The ARM resource ID of the storage account.
func (o StorageAccountCredentialsResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// The secondary key of the storage account.
func (o StorageAccountCredentialsResponsePtrOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecondaryKey
	}).(pulumi.StringPtrOutput)
}

// Properties of Storage Account.
type StorageAccountProperties struct {
	// ARM resource ID of the Azure Storage Account to store CLI specific files. If not provided one will be created. This cannot be changed once the cluster is created.
	ResourceId *string `pulumi:"resourceId"`
}

// StorageAccountPropertiesInput is an input type that accepts StorageAccountPropertiesArgs and StorageAccountPropertiesOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesInput` via:
//
//	StorageAccountPropertiesArgs{...}
type StorageAccountPropertiesInput interface {
	pulumi.Input

	ToStorageAccountPropertiesOutput() StorageAccountPropertiesOutput
	ToStorageAccountPropertiesOutputWithContext(context.Context) StorageAccountPropertiesOutput
}

// Properties of Storage Account.
type StorageAccountPropertiesArgs struct {
	// ARM resource ID of the Azure Storage Account to store CLI specific files. If not provided one will be created. This cannot be changed once the cluster is created.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (StorageAccountPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountProperties)(nil)).Elem()
}

func (i StorageAccountPropertiesArgs) ToStorageAccountPropertiesOutput() StorageAccountPropertiesOutput {
	return i.ToStorageAccountPropertiesOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesArgs) ToStorageAccountPropertiesOutputWithContext(ctx context.Context) StorageAccountPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesOutput)
}

func (i StorageAccountPropertiesArgs) ToStorageAccountPropertiesPtrOutput() StorageAccountPropertiesPtrOutput {
	return i.ToStorageAccountPropertiesPtrOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesArgs) ToStorageAccountPropertiesPtrOutputWithContext(ctx context.Context) StorageAccountPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesOutput).ToStorageAccountPropertiesPtrOutputWithContext(ctx)
}

// StorageAccountPropertiesPtrInput is an input type that accepts StorageAccountPropertiesArgs, StorageAccountPropertiesPtr and StorageAccountPropertiesPtrOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesPtrInput` via:
//
//	        StorageAccountPropertiesArgs{...}
//
//	or:
//
//	        nil
type StorageAccountPropertiesPtrInput interface {
	pulumi.Input

	ToStorageAccountPropertiesPtrOutput() StorageAccountPropertiesPtrOutput
	ToStorageAccountPropertiesPtrOutputWithContext(context.Context) StorageAccountPropertiesPtrOutput
}

type storageAccountPropertiesPtrType StorageAccountPropertiesArgs

func StorageAccountPropertiesPtr(v *StorageAccountPropertiesArgs) StorageAccountPropertiesPtrInput {
	return (*storageAccountPropertiesPtrType)(v)
}

func (*storageAccountPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountProperties)(nil)).Elem()
}

func (i *storageAccountPropertiesPtrType) ToStorageAccountPropertiesPtrOutput() StorageAccountPropertiesPtrOutput {
	return i.ToStorageAccountPropertiesPtrOutputWithContext(context.Background())
}

func (i *storageAccountPropertiesPtrType) ToStorageAccountPropertiesPtrOutputWithContext(ctx context.Context) StorageAccountPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesPtrOutput)
}

// Properties of Storage Account.
type StorageAccountPropertiesOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountProperties)(nil)).Elem()
}

func (o StorageAccountPropertiesOutput) ToStorageAccountPropertiesOutput() StorageAccountPropertiesOutput {
	return o
}

func (o StorageAccountPropertiesOutput) ToStorageAccountPropertiesOutputWithContext(ctx context.Context) StorageAccountPropertiesOutput {
	return o
}

func (o StorageAccountPropertiesOutput) ToStorageAccountPropertiesPtrOutput() StorageAccountPropertiesPtrOutput {
	return o.ToStorageAccountPropertiesPtrOutputWithContext(context.Background())
}

func (o StorageAccountPropertiesOutput) ToStorageAccountPropertiesPtrOutputWithContext(ctx context.Context) StorageAccountPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageAccountProperties) *StorageAccountProperties {
		return &v
	}).(StorageAccountPropertiesPtrOutput)
}

// ARM resource ID of the Azure Storage Account to store CLI specific files. If not provided one will be created. This cannot be changed once the cluster is created.
func (o StorageAccountPropertiesOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountProperties) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type StorageAccountPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountProperties)(nil)).Elem()
}

func (o StorageAccountPropertiesPtrOutput) ToStorageAccountPropertiesPtrOutput() StorageAccountPropertiesPtrOutput {
	return o
}

func (o StorageAccountPropertiesPtrOutput) ToStorageAccountPropertiesPtrOutputWithContext(ctx context.Context) StorageAccountPropertiesPtrOutput {
	return o
}

func (o StorageAccountPropertiesPtrOutput) Elem() StorageAccountPropertiesOutput {
	return o.ApplyT(func(v *StorageAccountProperties) StorageAccountProperties {
		if v != nil {
			return *v
		}
		var ret StorageAccountProperties
		return ret
	}).(StorageAccountPropertiesOutput)
}

// ARM resource ID of the Azure Storage Account to store CLI specific files. If not provided one will be created. This cannot be changed once the cluster is created.
func (o StorageAccountPropertiesPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Properties of Storage Account.
type StorageAccountPropertiesResponse struct {
	// ARM resource ID of the Azure Storage Account to store CLI specific files. If not provided one will be created. This cannot be changed once the cluster is created.
	ResourceId *string `pulumi:"resourceId"`
}

// Properties of Storage Account.
type StorageAccountPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponseOutput() StorageAccountPropertiesResponseOutput {
	return o
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponseOutputWithContext(ctx context.Context) StorageAccountPropertiesResponseOutput {
	return o
}

// ARM resource ID of the Azure Storage Account to store CLI specific files. If not provided one will be created. This cannot be changed once the cluster is created.
func (o StorageAccountPropertiesResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type StorageAccountPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountPropertiesResponsePtrOutput) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountPropertiesResponsePtrOutput) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountPropertiesResponsePtrOutput) Elem() StorageAccountPropertiesResponseOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) StorageAccountPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret StorageAccountPropertiesResponse
		return ret
	}).(StorageAccountPropertiesResponseOutput)
}

// ARM resource ID of the Azure Storage Account to store CLI specific files. If not provided one will be created. This cannot be changed once the cluster is created.
func (o StorageAccountPropertiesResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AcsClusterPropertiesOutput{})
	pulumi.RegisterOutputType(AcsClusterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AppInsightsCredentialsOutput{})
	pulumi.RegisterOutputType(AppInsightsCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AppInsightsCredentialsResponseOutput{})
	pulumi.RegisterOutputType(AppInsightsCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoScaleConfigurationOutput{})
	pulumi.RegisterOutputType(AutoScaleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AutoScaleConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AutoScaleConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerRegistryCredentialsResponseOutput{})
	pulumi.RegisterOutputType(ContainerRegistryCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerRegistryPropertiesOutput{})
	pulumi.RegisterOutputType(ContainerRegistryPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ContainerRegistryPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ContainerRegistryPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceCredentialsResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(GlobalServiceConfigurationOutput{})
	pulumi.RegisterOutputType(GlobalServiceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GlobalServiceConfigurationResponseOutput{})
	pulumi.RegisterOutputType(GlobalServiceConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterPropertiesOutput{})
	pulumi.RegisterOutputType(KubernetesClusterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ServiceAuthConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceAuthConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceAuthConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ServiceAuthConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ServicePrincipalPropertiesOutput{})
	pulumi.RegisterOutputType(ServicePrincipalPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ServicePrincipalPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SslConfigurationOutput{})
	pulumi.RegisterOutputType(SslConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SslConfigurationResponseOutput{})
	pulumi.RegisterOutputType(SslConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountCredentialsResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesPtrOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesResponsePtrOutput{})
}
