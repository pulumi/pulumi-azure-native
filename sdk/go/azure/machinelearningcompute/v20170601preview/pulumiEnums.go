// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170601preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is created.
type AgentVMSizeTypes string

const (
	AgentVMSizeTypes_Standard_A0     = AgentVMSizeTypes("Standard_A0")
	AgentVMSizeTypes_Standard_A1     = AgentVMSizeTypes("Standard_A1")
	AgentVMSizeTypes_Standard_A2     = AgentVMSizeTypes("Standard_A2")
	AgentVMSizeTypes_Standard_A3     = AgentVMSizeTypes("Standard_A3")
	AgentVMSizeTypes_Standard_A4     = AgentVMSizeTypes("Standard_A4")
	AgentVMSizeTypes_Standard_A5     = AgentVMSizeTypes("Standard_A5")
	AgentVMSizeTypes_Standard_A6     = AgentVMSizeTypes("Standard_A6")
	AgentVMSizeTypes_Standard_A7     = AgentVMSizeTypes("Standard_A7")
	AgentVMSizeTypes_Standard_A8     = AgentVMSizeTypes("Standard_A8")
	AgentVMSizeTypes_Standard_A9     = AgentVMSizeTypes("Standard_A9")
	AgentVMSizeTypes_Standard_A10    = AgentVMSizeTypes("Standard_A10")
	AgentVMSizeTypes_Standard_A11    = AgentVMSizeTypes("Standard_A11")
	AgentVMSizeTypes_Standard_D1     = AgentVMSizeTypes("Standard_D1")
	AgentVMSizeTypes_Standard_D2     = AgentVMSizeTypes("Standard_D2")
	AgentVMSizeTypes_Standard_D3     = AgentVMSizeTypes("Standard_D3")
	AgentVMSizeTypes_Standard_D4     = AgentVMSizeTypes("Standard_D4")
	AgentVMSizeTypes_Standard_D11    = AgentVMSizeTypes("Standard_D11")
	AgentVMSizeTypes_Standard_D12    = AgentVMSizeTypes("Standard_D12")
	AgentVMSizeTypes_Standard_D13    = AgentVMSizeTypes("Standard_D13")
	AgentVMSizeTypes_Standard_D14    = AgentVMSizeTypes("Standard_D14")
	AgentVMSizeTypes_Standard_D1_v2  = AgentVMSizeTypes("Standard_D1_v2")
	AgentVMSizeTypes_Standard_D2_v2  = AgentVMSizeTypes("Standard_D2_v2")
	AgentVMSizeTypes_Standard_D3_v2  = AgentVMSizeTypes("Standard_D3_v2")
	AgentVMSizeTypes_Standard_D4_v2  = AgentVMSizeTypes("Standard_D4_v2")
	AgentVMSizeTypes_Standard_D5_v2  = AgentVMSizeTypes("Standard_D5_v2")
	AgentVMSizeTypes_Standard_D11_v2 = AgentVMSizeTypes("Standard_D11_v2")
	AgentVMSizeTypes_Standard_D12_v2 = AgentVMSizeTypes("Standard_D12_v2")
	AgentVMSizeTypes_Standard_D13_v2 = AgentVMSizeTypes("Standard_D13_v2")
	AgentVMSizeTypes_Standard_D14_v2 = AgentVMSizeTypes("Standard_D14_v2")
	AgentVMSizeTypes_Standard_G1     = AgentVMSizeTypes("Standard_G1")
	AgentVMSizeTypes_Standard_G2     = AgentVMSizeTypes("Standard_G2")
	AgentVMSizeTypes_Standard_G3     = AgentVMSizeTypes("Standard_G3")
	AgentVMSizeTypes_Standard_G4     = AgentVMSizeTypes("Standard_G4")
	AgentVMSizeTypes_Standard_G5     = AgentVMSizeTypes("Standard_G5")
	AgentVMSizeTypes_Standard_DS1    = AgentVMSizeTypes("Standard_DS1")
	AgentVMSizeTypes_Standard_DS2    = AgentVMSizeTypes("Standard_DS2")
	AgentVMSizeTypes_Standard_DS3    = AgentVMSizeTypes("Standard_DS3")
	AgentVMSizeTypes_Standard_DS4    = AgentVMSizeTypes("Standard_DS4")
	AgentVMSizeTypes_Standard_DS11   = AgentVMSizeTypes("Standard_DS11")
	AgentVMSizeTypes_Standard_DS12   = AgentVMSizeTypes("Standard_DS12")
	AgentVMSizeTypes_Standard_DS13   = AgentVMSizeTypes("Standard_DS13")
	AgentVMSizeTypes_Standard_DS14   = AgentVMSizeTypes("Standard_DS14")
	AgentVMSizeTypes_Standard_GS1    = AgentVMSizeTypes("Standard_GS1")
	AgentVMSizeTypes_Standard_GS2    = AgentVMSizeTypes("Standard_GS2")
	AgentVMSizeTypes_Standard_GS3    = AgentVMSizeTypes("Standard_GS3")
	AgentVMSizeTypes_Standard_GS4    = AgentVMSizeTypes("Standard_GS4")
	AgentVMSizeTypes_Standard_GS5    = AgentVMSizeTypes("Standard_GS5")
)

func (AgentVMSizeTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentVMSizeTypes)(nil)).Elem()
}

func (e AgentVMSizeTypes) ToAgentVMSizeTypesOutput() AgentVMSizeTypesOutput {
	return pulumi.ToOutput(e).(AgentVMSizeTypesOutput)
}

func (e AgentVMSizeTypes) ToAgentVMSizeTypesOutputWithContext(ctx context.Context) AgentVMSizeTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AgentVMSizeTypesOutput)
}

func (e AgentVMSizeTypes) ToAgentVMSizeTypesPtrOutput() AgentVMSizeTypesPtrOutput {
	return e.ToAgentVMSizeTypesPtrOutputWithContext(context.Background())
}

func (e AgentVMSizeTypes) ToAgentVMSizeTypesPtrOutputWithContext(ctx context.Context) AgentVMSizeTypesPtrOutput {
	return AgentVMSizeTypes(e).ToAgentVMSizeTypesOutputWithContext(ctx).ToAgentVMSizeTypesPtrOutputWithContext(ctx)
}

func (e AgentVMSizeTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AgentVMSizeTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AgentVMSizeTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AgentVMSizeTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AgentVMSizeTypesOutput struct{ *pulumi.OutputState }

func (AgentVMSizeTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentVMSizeTypes)(nil)).Elem()
}

func (o AgentVMSizeTypesOutput) ToAgentVMSizeTypesOutput() AgentVMSizeTypesOutput {
	return o
}

func (o AgentVMSizeTypesOutput) ToAgentVMSizeTypesOutputWithContext(ctx context.Context) AgentVMSizeTypesOutput {
	return o
}

func (o AgentVMSizeTypesOutput) ToAgentVMSizeTypesPtrOutput() AgentVMSizeTypesPtrOutput {
	return o.ToAgentVMSizeTypesPtrOutputWithContext(context.Background())
}

func (o AgentVMSizeTypesOutput) ToAgentVMSizeTypesPtrOutputWithContext(ctx context.Context) AgentVMSizeTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentVMSizeTypes) *AgentVMSizeTypes {
		return &v
	}).(AgentVMSizeTypesPtrOutput)
}

func (o AgentVMSizeTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AgentVMSizeTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AgentVMSizeTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AgentVMSizeTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AgentVMSizeTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AgentVMSizeTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AgentVMSizeTypesPtrOutput struct{ *pulumi.OutputState }

func (AgentVMSizeTypesPtrOutput) ElementType() reflect.Type {
	return agentVMSizeTypesPtrType
}

func (o AgentVMSizeTypesPtrOutput) ToAgentVMSizeTypesPtrOutput() AgentVMSizeTypesPtrOutput {
	return o
}

func (o AgentVMSizeTypesPtrOutput) ToAgentVMSizeTypesPtrOutputWithContext(ctx context.Context) AgentVMSizeTypesPtrOutput {
	return o
}

func (o AgentVMSizeTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AgentVMSizeTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AgentVMSizeTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o AgentVMSizeTypesPtrOutput) Elem() AgentVMSizeTypesOutput {
	return o.ApplyT(func(v *AgentVMSizeTypes) AgentVMSizeTypes {
		var ret AgentVMSizeTypes
		if v != nil {
			ret = *v
		}
		return ret
	}).(AgentVMSizeTypesOutput)
}

// AgentVMSizeTypesInput is an input type that accepts AgentVMSizeTypesArgs and AgentVMSizeTypesOutput values.
// You can construct a concrete instance of `AgentVMSizeTypesInput` via:
//
//          AgentVMSizeTypesArgs{...}
type AgentVMSizeTypesInput interface {
	pulumi.Input

	ToAgentVMSizeTypesOutput() AgentVMSizeTypesOutput
	ToAgentVMSizeTypesOutputWithContext(context.Context) AgentVMSizeTypesOutput
}

var agentVMSizeTypesPtrType = reflect.TypeOf((**AgentVMSizeTypes)(nil)).Elem()

type AgentVMSizeTypesPtrInput interface {
	pulumi.Input

	ToAgentVMSizeTypesPtrOutput() AgentVMSizeTypesPtrOutput
	ToAgentVMSizeTypesPtrOutputWithContext(context.Context) AgentVMSizeTypesPtrOutput
}

type agentVMSizeTypesPtr string

func AgentVMSizeTypesPtr(v string) AgentVMSizeTypesPtrInput {
	return (*agentVMSizeTypesPtr)(&v)
}

func (*agentVMSizeTypesPtr) ElementType() reflect.Type {
	return agentVMSizeTypesPtrType
}

func (in *agentVMSizeTypesPtr) ToAgentVMSizeTypesPtrOutput() AgentVMSizeTypesPtrOutput {
	return pulumi.ToOutput(in).(AgentVMSizeTypesPtrOutput)
}

func (in *agentVMSizeTypesPtr) ToAgentVMSizeTypesPtrOutputWithContext(ctx context.Context) AgentVMSizeTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AgentVMSizeTypesPtrOutput)
}

// The cluster type.
type ClusterType string

const (
	ClusterTypeACS = ClusterType("ACS")
)

func (ClusterType) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterType)(nil)).Elem()
}

func (e ClusterType) ToClusterTypeOutput() ClusterTypeOutput {
	return pulumi.ToOutput(e).(ClusterTypeOutput)
}

func (e ClusterType) ToClusterTypeOutputWithContext(ctx context.Context) ClusterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClusterTypeOutput)
}

func (e ClusterType) ToClusterTypePtrOutput() ClusterTypePtrOutput {
	return e.ToClusterTypePtrOutputWithContext(context.Background())
}

func (e ClusterType) ToClusterTypePtrOutputWithContext(ctx context.Context) ClusterTypePtrOutput {
	return ClusterType(e).ToClusterTypeOutputWithContext(ctx).ToClusterTypePtrOutputWithContext(ctx)
}

func (e ClusterType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClusterType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClusterTypeOutput struct{ *pulumi.OutputState }

func (ClusterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterType)(nil)).Elem()
}

func (o ClusterTypeOutput) ToClusterTypeOutput() ClusterTypeOutput {
	return o
}

func (o ClusterTypeOutput) ToClusterTypeOutputWithContext(ctx context.Context) ClusterTypeOutput {
	return o
}

func (o ClusterTypeOutput) ToClusterTypePtrOutput() ClusterTypePtrOutput {
	return o.ToClusterTypePtrOutputWithContext(context.Background())
}

func (o ClusterTypeOutput) ToClusterTypePtrOutputWithContext(ctx context.Context) ClusterTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterType) *ClusterType {
		return &v
	}).(ClusterTypePtrOutput)
}

func (o ClusterTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterTypePtrOutput struct{ *pulumi.OutputState }

func (ClusterTypePtrOutput) ElementType() reflect.Type {
	return clusterTypePtrType
}

func (o ClusterTypePtrOutput) ToClusterTypePtrOutput() ClusterTypePtrOutput {
	return o
}

func (o ClusterTypePtrOutput) ToClusterTypePtrOutputWithContext(ctx context.Context) ClusterTypePtrOutput {
	return o
}

func (o ClusterTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o ClusterTypePtrOutput) Elem() ClusterTypeOutput {
	return o.ApplyT(func(v *ClusterType) ClusterType {
		var ret ClusterType
		if v != nil {
			ret = *v
		}
		return ret
	}).(ClusterTypeOutput)
}

// ClusterTypeInput is an input type that accepts ClusterTypeArgs and ClusterTypeOutput values.
// You can construct a concrete instance of `ClusterTypeInput` via:
//
//          ClusterTypeArgs{...}
type ClusterTypeInput interface {
	pulumi.Input

	ToClusterTypeOutput() ClusterTypeOutput
	ToClusterTypeOutputWithContext(context.Context) ClusterTypeOutput
}

var clusterTypePtrType = reflect.TypeOf((**ClusterType)(nil)).Elem()

type ClusterTypePtrInput interface {
	pulumi.Input

	ToClusterTypePtrOutput() ClusterTypePtrOutput
	ToClusterTypePtrOutputWithContext(context.Context) ClusterTypePtrOutput
}

type clusterTypePtr string

func ClusterTypePtr(v string) ClusterTypePtrInput {
	return (*clusterTypePtr)(&v)
}

func (*clusterTypePtr) ElementType() reflect.Type {
	return clusterTypePtrType
}

func (in *clusterTypePtr) ToClusterTypePtrOutput() ClusterTypePtrOutput {
	return pulumi.ToOutput(in).(ClusterTypePtrOutput)
}

func (in *clusterTypePtr) ToClusterTypePtrOutputWithContext(ctx context.Context) ClusterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClusterTypePtrOutput)
}

// Type of orchestrator. It cannot be changed once the cluster is created.
type Orchestrator string

const (
	OrchestratorKubernetes = Orchestrator("Kubernetes")
)

func (Orchestrator) ElementType() reflect.Type {
	return reflect.TypeOf((*Orchestrator)(nil)).Elem()
}

func (e Orchestrator) ToOrchestratorOutput() OrchestratorOutput {
	return pulumi.ToOutput(e).(OrchestratorOutput)
}

func (e Orchestrator) ToOrchestratorOutputWithContext(ctx context.Context) OrchestratorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OrchestratorOutput)
}

func (e Orchestrator) ToOrchestratorPtrOutput() OrchestratorPtrOutput {
	return e.ToOrchestratorPtrOutputWithContext(context.Background())
}

func (e Orchestrator) ToOrchestratorPtrOutputWithContext(ctx context.Context) OrchestratorPtrOutput {
	return Orchestrator(e).ToOrchestratorOutputWithContext(ctx).ToOrchestratorPtrOutputWithContext(ctx)
}

func (e Orchestrator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Orchestrator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Orchestrator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Orchestrator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OrchestratorOutput struct{ *pulumi.OutputState }

func (OrchestratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Orchestrator)(nil)).Elem()
}

func (o OrchestratorOutput) ToOrchestratorOutput() OrchestratorOutput {
	return o
}

func (o OrchestratorOutput) ToOrchestratorOutputWithContext(ctx context.Context) OrchestratorOutput {
	return o
}

func (o OrchestratorOutput) ToOrchestratorPtrOutput() OrchestratorPtrOutput {
	return o.ToOrchestratorPtrOutputWithContext(context.Background())
}

func (o OrchestratorOutput) ToOrchestratorPtrOutputWithContext(ctx context.Context) OrchestratorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Orchestrator) *Orchestrator {
		return &v
	}).(OrchestratorPtrOutput)
}

func (o OrchestratorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OrchestratorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Orchestrator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OrchestratorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OrchestratorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Orchestrator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OrchestratorPtrOutput struct{ *pulumi.OutputState }

func (OrchestratorPtrOutput) ElementType() reflect.Type {
	return orchestratorPtrType
}

func (o OrchestratorPtrOutput) ToOrchestratorPtrOutput() OrchestratorPtrOutput {
	return o
}

func (o OrchestratorPtrOutput) ToOrchestratorPtrOutputWithContext(ctx context.Context) OrchestratorPtrOutput {
	return o
}

func (o OrchestratorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OrchestratorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Orchestrator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o OrchestratorPtrOutput) Elem() OrchestratorOutput {
	return o.ApplyT(func(v *Orchestrator) Orchestrator {
		var ret Orchestrator
		if v != nil {
			ret = *v
		}
		return ret
	}).(OrchestratorOutput)
}

// OrchestratorInput is an input type that accepts OrchestratorArgs and OrchestratorOutput values.
// You can construct a concrete instance of `OrchestratorInput` via:
//
//          OrchestratorArgs{...}
type OrchestratorInput interface {
	pulumi.Input

	ToOrchestratorOutput() OrchestratorOutput
	ToOrchestratorOutputWithContext(context.Context) OrchestratorOutput
}

var orchestratorPtrType = reflect.TypeOf((**Orchestrator)(nil)).Elem()

type OrchestratorPtrInput interface {
	pulumi.Input

	ToOrchestratorPtrOutput() OrchestratorPtrOutput
	ToOrchestratorPtrOutputWithContext(context.Context) OrchestratorPtrOutput
}

type orchestratorPtr string

func OrchestratorPtr(v string) OrchestratorPtrInput {
	return (*orchestratorPtr)(&v)
}

func (*orchestratorPtr) ElementType() reflect.Type {
	return orchestratorPtrType
}

func (in *orchestratorPtr) ToOrchestratorPtrOutput() OrchestratorPtrOutput {
	return pulumi.ToOutput(in).(OrchestratorPtrOutput)
}

func (in *orchestratorPtr) ToOrchestratorPtrOutputWithContext(ctx context.Context) OrchestratorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OrchestratorPtrOutput)
}

// SSL status. Allowed values are Enabled and Disabled.
type Status string

const (
	StatusEnabled  = Status("Enabled")
	StatusDisabled = Status("Disabled")
)

func (Status) ElementType() reflect.Type {
	return reflect.TypeOf((*Status)(nil)).Elem()
}

func (e Status) ToStatusOutput() StatusOutput {
	return pulumi.ToOutput(e).(StatusOutput)
}

func (e Status) ToStatusOutputWithContext(ctx context.Context) StatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StatusOutput)
}

func (e Status) ToStatusPtrOutput() StatusPtrOutput {
	return e.ToStatusPtrOutputWithContext(context.Background())
}

func (e Status) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return Status(e).ToStatusOutputWithContext(ctx).ToStatusPtrOutputWithContext(ctx)
}

func (e Status) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Status) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Status) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Status) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StatusOutput struct{ *pulumi.OutputState }

func (StatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Status)(nil)).Elem()
}

func (o StatusOutput) ToStatusOutput() StatusOutput {
	return o
}

func (o StatusOutput) ToStatusOutputWithContext(ctx context.Context) StatusOutput {
	return o
}

func (o StatusOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o.ToStatusPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Status) *Status {
		return &v
	}).(StatusPtrOutput)
}

func (o StatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StatusPtrOutput struct{ *pulumi.OutputState }

func (StatusPtrOutput) ElementType() reflect.Type {
	return statusPtrType
}

func (o StatusPtrOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Status) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o StatusPtrOutput) Elem() StatusOutput {
	return o.ApplyT(func(v *Status) Status {
		var ret Status
		if v != nil {
			ret = *v
		}
		return ret
	}).(StatusOutput)
}

// StatusInput is an input type that accepts StatusArgs and StatusOutput values.
// You can construct a concrete instance of `StatusInput` via:
//
//          StatusArgs{...}
type StatusInput interface {
	pulumi.Input

	ToStatusOutput() StatusOutput
	ToStatusOutputWithContext(context.Context) StatusOutput
}

var statusPtrType = reflect.TypeOf((**Status)(nil)).Elem()

type StatusPtrInput interface {
	pulumi.Input

	ToStatusPtrOutput() StatusPtrOutput
	ToStatusPtrOutputWithContext(context.Context) StatusPtrOutput
}

type statusPtr string

func StatusPtr(v string) StatusPtrInput {
	return (*statusPtr)(&v)
}

func (*statusPtr) ElementType() reflect.Type {
	return statusPtrType
}

func (in *statusPtr) ToStatusPtrOutput() StatusPtrOutput {
	return pulumi.ToOutput(in).(StatusPtrOutput)
}

func (in *statusPtr) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StatusPtrOutput)
}

// The choices of system services.
type SystemServices string

const (
	SystemServicesScoring = SystemServices("Scoring")
	SystemServicesBatch   = SystemServices("Batch")
)

func (SystemServices) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemServices)(nil)).Elem()
}

func (e SystemServices) ToSystemServicesOutput() SystemServicesOutput {
	return pulumi.ToOutput(e).(SystemServicesOutput)
}

func (e SystemServices) ToSystemServicesOutputWithContext(ctx context.Context) SystemServicesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SystemServicesOutput)
}

func (e SystemServices) ToSystemServicesPtrOutput() SystemServicesPtrOutput {
	return e.ToSystemServicesPtrOutputWithContext(context.Background())
}

func (e SystemServices) ToSystemServicesPtrOutputWithContext(ctx context.Context) SystemServicesPtrOutput {
	return SystemServices(e).ToSystemServicesOutputWithContext(ctx).ToSystemServicesPtrOutputWithContext(ctx)
}

func (e SystemServices) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SystemServices) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SystemServices) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SystemServices) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SystemServicesOutput struct{ *pulumi.OutputState }

func (SystemServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemServices)(nil)).Elem()
}

func (o SystemServicesOutput) ToSystemServicesOutput() SystemServicesOutput {
	return o
}

func (o SystemServicesOutput) ToSystemServicesOutputWithContext(ctx context.Context) SystemServicesOutput {
	return o
}

func (o SystemServicesOutput) ToSystemServicesPtrOutput() SystemServicesPtrOutput {
	return o.ToSystemServicesPtrOutputWithContext(context.Background())
}

func (o SystemServicesOutput) ToSystemServicesPtrOutputWithContext(ctx context.Context) SystemServicesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemServices) *SystemServices {
		return &v
	}).(SystemServicesPtrOutput)
}

func (o SystemServicesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SystemServicesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SystemServices) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SystemServicesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SystemServicesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SystemServices) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SystemServicesPtrOutput struct{ *pulumi.OutputState }

func (SystemServicesPtrOutput) ElementType() reflect.Type {
	return systemServicesPtrType
}

func (o SystemServicesPtrOutput) ToSystemServicesPtrOutput() SystemServicesPtrOutput {
	return o
}

func (o SystemServicesPtrOutput) ToSystemServicesPtrOutputWithContext(ctx context.Context) SystemServicesPtrOutput {
	return o
}

func (o SystemServicesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SystemServicesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SystemServices) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o SystemServicesPtrOutput) Elem() SystemServicesOutput {
	return o.ApplyT(func(v *SystemServices) SystemServices {
		var ret SystemServices
		if v != nil {
			ret = *v
		}
		return ret
	}).(SystemServicesOutput)
}

// SystemServicesInput is an input type that accepts SystemServicesArgs and SystemServicesOutput values.
// You can construct a concrete instance of `SystemServicesInput` via:
//
//          SystemServicesArgs{...}
type SystemServicesInput interface {
	pulumi.Input

	ToSystemServicesOutput() SystemServicesOutput
	ToSystemServicesOutputWithContext(context.Context) SystemServicesOutput
}

var systemServicesPtrType = reflect.TypeOf((**SystemServices)(nil)).Elem()

type SystemServicesPtrInput interface {
	pulumi.Input

	ToSystemServicesPtrOutput() SystemServicesPtrOutput
	ToSystemServicesPtrOutputWithContext(context.Context) SystemServicesPtrOutput
}

type systemServicesPtr string

func SystemServicesPtr(v string) SystemServicesPtrInput {
	return (*systemServicesPtr)(&v)
}

func (*systemServicesPtr) ElementType() reflect.Type {
	return systemServicesPtrType
}

func (in *systemServicesPtr) ToSystemServicesPtrOutput() SystemServicesPtrOutput {
	return pulumi.ToOutput(in).(SystemServicesPtrOutput)
}

func (in *systemServicesPtr) ToSystemServicesPtrOutputWithContext(ctx context.Context) SystemServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SystemServicesPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AgentVMSizeTypesOutput{})
	pulumi.RegisterOutputType(AgentVMSizeTypesPtrOutput{})
	pulumi.RegisterOutputType(ClusterTypeOutput{})
	pulumi.RegisterOutputType(ClusterTypePtrOutput{})
	pulumi.RegisterOutputType(OrchestratorOutput{})
	pulumi.RegisterOutputType(OrchestratorPtrOutput{})
	pulumi.RegisterOutputType(StatusOutput{})
	pulumi.RegisterOutputType(StatusPtrOutput{})
	pulumi.RegisterOutputType(SystemServicesOutput{})
	pulumi.RegisterOutputType(SystemServicesPtrOutput{})
}
