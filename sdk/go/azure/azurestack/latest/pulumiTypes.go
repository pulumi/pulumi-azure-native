// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Product compatibility
type CompatibilityInvokeResponse struct {
	// Full error message if any compatibility issues are found
	Description *string `pulumi:"description"`
	// Tells if product is compatible with current device
	IsCompatible *bool `pulumi:"isCompatible"`
	// List of all issues found
	Issues []string `pulumi:"issues"`
	// Short error message if any compatibility issues are found
	Message *string `pulumi:"message"`
}

// CompatibilityInvokeResponseInput is an input type that accepts CompatibilityInvokeResponseArgs and CompatibilityInvokeResponseOutput values.
// You can construct a concrete instance of `CompatibilityInvokeResponseInput` via:
//
//          CompatibilityInvokeResponseArgs{...}
type CompatibilityInvokeResponseInput interface {
	pulumi.Input

	ToCompatibilityInvokeResponseOutput() CompatibilityInvokeResponseOutput
	ToCompatibilityInvokeResponseOutputWithContext(context.Context) CompatibilityInvokeResponseOutput
}

// Product compatibility
type CompatibilityInvokeResponseArgs struct {
	// Full error message if any compatibility issues are found
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Tells if product is compatible with current device
	IsCompatible pulumi.BoolPtrInput `pulumi:"isCompatible"`
	// List of all issues found
	Issues pulumi.StringArrayInput `pulumi:"issues"`
	// Short error message if any compatibility issues are found
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (CompatibilityInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CompatibilityInvokeResponse)(nil)).Elem()
}

func (i CompatibilityInvokeResponseArgs) ToCompatibilityInvokeResponseOutput() CompatibilityInvokeResponseOutput {
	return i.ToCompatibilityInvokeResponseOutputWithContext(context.Background())
}

func (i CompatibilityInvokeResponseArgs) ToCompatibilityInvokeResponseOutputWithContext(ctx context.Context) CompatibilityInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompatibilityInvokeResponseOutput)
}

func (i CompatibilityInvokeResponseArgs) ToCompatibilityInvokeResponsePtrOutput() CompatibilityInvokeResponsePtrOutput {
	return i.ToCompatibilityInvokeResponsePtrOutputWithContext(context.Background())
}

func (i CompatibilityInvokeResponseArgs) ToCompatibilityInvokeResponsePtrOutputWithContext(ctx context.Context) CompatibilityInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompatibilityInvokeResponseOutput).ToCompatibilityInvokeResponsePtrOutputWithContext(ctx)
}

// CompatibilityInvokeResponsePtrInput is an input type that accepts CompatibilityInvokeResponseArgs, CompatibilityInvokeResponsePtr and CompatibilityInvokeResponsePtrOutput values.
// You can construct a concrete instance of `CompatibilityInvokeResponsePtrInput` via:
//
//          CompatibilityInvokeResponseArgs{...}
//
//  or:
//
//          nil
type CompatibilityInvokeResponsePtrInput interface {
	pulumi.Input

	ToCompatibilityInvokeResponsePtrOutput() CompatibilityInvokeResponsePtrOutput
	ToCompatibilityInvokeResponsePtrOutputWithContext(context.Context) CompatibilityInvokeResponsePtrOutput
}

type compatibilityInvokeResponsePtrType CompatibilityInvokeResponseArgs

func CompatibilityInvokeResponsePtr(v *CompatibilityInvokeResponseArgs) CompatibilityInvokeResponsePtrInput {
	return (*compatibilityInvokeResponsePtrType)(v)
}

func (*compatibilityInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CompatibilityInvokeResponse)(nil)).Elem()
}

func (i *compatibilityInvokeResponsePtrType) ToCompatibilityInvokeResponsePtrOutput() CompatibilityInvokeResponsePtrOutput {
	return i.ToCompatibilityInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *compatibilityInvokeResponsePtrType) ToCompatibilityInvokeResponsePtrOutputWithContext(ctx context.Context) CompatibilityInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompatibilityInvokeResponsePtrOutput)
}

// Product compatibility
type CompatibilityInvokeResponseOutput struct{ *pulumi.OutputState }

func (CompatibilityInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompatibilityInvokeResponse)(nil)).Elem()
}

func (o CompatibilityInvokeResponseOutput) ToCompatibilityInvokeResponseOutput() CompatibilityInvokeResponseOutput {
	return o
}

func (o CompatibilityInvokeResponseOutput) ToCompatibilityInvokeResponseOutputWithContext(ctx context.Context) CompatibilityInvokeResponseOutput {
	return o
}

func (o CompatibilityInvokeResponseOutput) ToCompatibilityInvokeResponsePtrOutput() CompatibilityInvokeResponsePtrOutput {
	return o.ToCompatibilityInvokeResponsePtrOutputWithContext(context.Background())
}

func (o CompatibilityInvokeResponseOutput) ToCompatibilityInvokeResponsePtrOutputWithContext(ctx context.Context) CompatibilityInvokeResponsePtrOutput {
	return o.ApplyT(func(v CompatibilityInvokeResponse) *CompatibilityInvokeResponse {
		return &v
	}).(CompatibilityInvokeResponsePtrOutput)
}

// Full error message if any compatibility issues are found
func (o CompatibilityInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompatibilityInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Tells if product is compatible with current device
func (o CompatibilityInvokeResponseOutput) IsCompatible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CompatibilityInvokeResponse) *bool { return v.IsCompatible }).(pulumi.BoolPtrOutput)
}

// List of all issues found
func (o CompatibilityInvokeResponseOutput) Issues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CompatibilityInvokeResponse) []string { return v.Issues }).(pulumi.StringArrayOutput)
}

// Short error message if any compatibility issues are found
func (o CompatibilityInvokeResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompatibilityInvokeResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type CompatibilityInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (CompatibilityInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CompatibilityInvokeResponse)(nil)).Elem()
}

func (o CompatibilityInvokeResponsePtrOutput) ToCompatibilityInvokeResponsePtrOutput() CompatibilityInvokeResponsePtrOutput {
	return o
}

func (o CompatibilityInvokeResponsePtrOutput) ToCompatibilityInvokeResponsePtrOutputWithContext(ctx context.Context) CompatibilityInvokeResponsePtrOutput {
	return o
}

func (o CompatibilityInvokeResponsePtrOutput) Elem() CompatibilityInvokeResponseOutput {
	return o.ApplyT(func(v *CompatibilityInvokeResponse) CompatibilityInvokeResponse { return *v }).(CompatibilityInvokeResponseOutput)
}

// Full error message if any compatibility issues are found
func (o CompatibilityInvokeResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CompatibilityInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Tells if product is compatible with current device
func (o CompatibilityInvokeResponsePtrOutput) IsCompatible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CompatibilityInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsCompatible
	}).(pulumi.BoolPtrOutput)
}

// List of all issues found
func (o CompatibilityInvokeResponsePtrOutput) Issues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CompatibilityInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.Issues
	}).(pulumi.StringArrayOutput)
}

// Short error message if any compatibility issues are found
func (o CompatibilityInvokeResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CompatibilityInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Data disk image.
type DataDiskImageInvokeResponse struct {
	// The LUN.
	Lun int `pulumi:"lun"`
	// SAS key for source blob.
	SourceBlobSasUri string `pulumi:"sourceBlobSasUri"`
}

// DataDiskImageInvokeResponseInput is an input type that accepts DataDiskImageInvokeResponseArgs and DataDiskImageInvokeResponseOutput values.
// You can construct a concrete instance of `DataDiskImageInvokeResponseInput` via:
//
//          DataDiskImageInvokeResponseArgs{...}
type DataDiskImageInvokeResponseInput interface {
	pulumi.Input

	ToDataDiskImageInvokeResponseOutput() DataDiskImageInvokeResponseOutput
	ToDataDiskImageInvokeResponseOutputWithContext(context.Context) DataDiskImageInvokeResponseOutput
}

// Data disk image.
type DataDiskImageInvokeResponseArgs struct {
	// The LUN.
	Lun pulumi.IntInput `pulumi:"lun"`
	// SAS key for source blob.
	SourceBlobSasUri pulumi.StringInput `pulumi:"sourceBlobSasUri"`
}

func (DataDiskImageInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskImageInvokeResponse)(nil)).Elem()
}

func (i DataDiskImageInvokeResponseArgs) ToDataDiskImageInvokeResponseOutput() DataDiskImageInvokeResponseOutput {
	return i.ToDataDiskImageInvokeResponseOutputWithContext(context.Background())
}

func (i DataDiskImageInvokeResponseArgs) ToDataDiskImageInvokeResponseOutputWithContext(ctx context.Context) DataDiskImageInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskImageInvokeResponseOutput)
}

// DataDiskImageInvokeResponseArrayInput is an input type that accepts DataDiskImageInvokeResponseArray and DataDiskImageInvokeResponseArrayOutput values.
// You can construct a concrete instance of `DataDiskImageInvokeResponseArrayInput` via:
//
//          DataDiskImageInvokeResponseArray{ DataDiskImageInvokeResponseArgs{...} }
type DataDiskImageInvokeResponseArrayInput interface {
	pulumi.Input

	ToDataDiskImageInvokeResponseArrayOutput() DataDiskImageInvokeResponseArrayOutput
	ToDataDiskImageInvokeResponseArrayOutputWithContext(context.Context) DataDiskImageInvokeResponseArrayOutput
}

type DataDiskImageInvokeResponseArray []DataDiskImageInvokeResponseInput

func (DataDiskImageInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskImageInvokeResponse)(nil)).Elem()
}

func (i DataDiskImageInvokeResponseArray) ToDataDiskImageInvokeResponseArrayOutput() DataDiskImageInvokeResponseArrayOutput {
	return i.ToDataDiskImageInvokeResponseArrayOutputWithContext(context.Background())
}

func (i DataDiskImageInvokeResponseArray) ToDataDiskImageInvokeResponseArrayOutputWithContext(ctx context.Context) DataDiskImageInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskImageInvokeResponseArrayOutput)
}

// Data disk image.
type DataDiskImageInvokeResponseOutput struct{ *pulumi.OutputState }

func (DataDiskImageInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskImageInvokeResponse)(nil)).Elem()
}

func (o DataDiskImageInvokeResponseOutput) ToDataDiskImageInvokeResponseOutput() DataDiskImageInvokeResponseOutput {
	return o
}

func (o DataDiskImageInvokeResponseOutput) ToDataDiskImageInvokeResponseOutputWithContext(ctx context.Context) DataDiskImageInvokeResponseOutput {
	return o
}

// The LUN.
func (o DataDiskImageInvokeResponseOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v DataDiskImageInvokeResponse) int { return v.Lun }).(pulumi.IntOutput)
}

// SAS key for source blob.
func (o DataDiskImageInvokeResponseOutput) SourceBlobSasUri() pulumi.StringOutput {
	return o.ApplyT(func(v DataDiskImageInvokeResponse) string { return v.SourceBlobSasUri }).(pulumi.StringOutput)
}

type DataDiskImageInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (DataDiskImageInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskImageInvokeResponse)(nil)).Elem()
}

func (o DataDiskImageInvokeResponseArrayOutput) ToDataDiskImageInvokeResponseArrayOutput() DataDiskImageInvokeResponseArrayOutput {
	return o
}

func (o DataDiskImageInvokeResponseArrayOutput) ToDataDiskImageInvokeResponseArrayOutputWithContext(ctx context.Context) DataDiskImageInvokeResponseArrayOutput {
	return o
}

func (o DataDiskImageInvokeResponseArrayOutput) Index(i pulumi.IntInput) DataDiskImageInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDiskImageInvokeResponse {
		return vs[0].([]DataDiskImageInvokeResponse)[vs[1].(int)]
	}).(DataDiskImageInvokeResponseOutput)
}

// Links to product icons.
type IconUrisInvokeResponse struct {
	// URI to hero icon.
	Hero *string `pulumi:"hero"`
	// URI to large icon.
	Large *string `pulumi:"large"`
	// URI to medium icon.
	Medium *string `pulumi:"medium"`
	// URI to small icon.
	Small *string `pulumi:"small"`
	// URI to wide icon.
	Wide *string `pulumi:"wide"`
}

// IconUrisInvokeResponseInput is an input type that accepts IconUrisInvokeResponseArgs and IconUrisInvokeResponseOutput values.
// You can construct a concrete instance of `IconUrisInvokeResponseInput` via:
//
//          IconUrisInvokeResponseArgs{...}
type IconUrisInvokeResponseInput interface {
	pulumi.Input

	ToIconUrisInvokeResponseOutput() IconUrisInvokeResponseOutput
	ToIconUrisInvokeResponseOutputWithContext(context.Context) IconUrisInvokeResponseOutput
}

// Links to product icons.
type IconUrisInvokeResponseArgs struct {
	// URI to hero icon.
	Hero pulumi.StringPtrInput `pulumi:"hero"`
	// URI to large icon.
	Large pulumi.StringPtrInput `pulumi:"large"`
	// URI to medium icon.
	Medium pulumi.StringPtrInput `pulumi:"medium"`
	// URI to small icon.
	Small pulumi.StringPtrInput `pulumi:"small"`
	// URI to wide icon.
	Wide pulumi.StringPtrInput `pulumi:"wide"`
}

func (IconUrisInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IconUrisInvokeResponse)(nil)).Elem()
}

func (i IconUrisInvokeResponseArgs) ToIconUrisInvokeResponseOutput() IconUrisInvokeResponseOutput {
	return i.ToIconUrisInvokeResponseOutputWithContext(context.Background())
}

func (i IconUrisInvokeResponseArgs) ToIconUrisInvokeResponseOutputWithContext(ctx context.Context) IconUrisInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IconUrisInvokeResponseOutput)
}

func (i IconUrisInvokeResponseArgs) ToIconUrisInvokeResponsePtrOutput() IconUrisInvokeResponsePtrOutput {
	return i.ToIconUrisInvokeResponsePtrOutputWithContext(context.Background())
}

func (i IconUrisInvokeResponseArgs) ToIconUrisInvokeResponsePtrOutputWithContext(ctx context.Context) IconUrisInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IconUrisInvokeResponseOutput).ToIconUrisInvokeResponsePtrOutputWithContext(ctx)
}

// IconUrisInvokeResponsePtrInput is an input type that accepts IconUrisInvokeResponseArgs, IconUrisInvokeResponsePtr and IconUrisInvokeResponsePtrOutput values.
// You can construct a concrete instance of `IconUrisInvokeResponsePtrInput` via:
//
//          IconUrisInvokeResponseArgs{...}
//
//  or:
//
//          nil
type IconUrisInvokeResponsePtrInput interface {
	pulumi.Input

	ToIconUrisInvokeResponsePtrOutput() IconUrisInvokeResponsePtrOutput
	ToIconUrisInvokeResponsePtrOutputWithContext(context.Context) IconUrisInvokeResponsePtrOutput
}

type iconUrisInvokeResponsePtrType IconUrisInvokeResponseArgs

func IconUrisInvokeResponsePtr(v *IconUrisInvokeResponseArgs) IconUrisInvokeResponsePtrInput {
	return (*iconUrisInvokeResponsePtrType)(v)
}

func (*iconUrisInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IconUrisInvokeResponse)(nil)).Elem()
}

func (i *iconUrisInvokeResponsePtrType) ToIconUrisInvokeResponsePtrOutput() IconUrisInvokeResponsePtrOutput {
	return i.ToIconUrisInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *iconUrisInvokeResponsePtrType) ToIconUrisInvokeResponsePtrOutputWithContext(ctx context.Context) IconUrisInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IconUrisInvokeResponsePtrOutput)
}

// Links to product icons.
type IconUrisInvokeResponseOutput struct{ *pulumi.OutputState }

func (IconUrisInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IconUrisInvokeResponse)(nil)).Elem()
}

func (o IconUrisInvokeResponseOutput) ToIconUrisInvokeResponseOutput() IconUrisInvokeResponseOutput {
	return o
}

func (o IconUrisInvokeResponseOutput) ToIconUrisInvokeResponseOutputWithContext(ctx context.Context) IconUrisInvokeResponseOutput {
	return o
}

func (o IconUrisInvokeResponseOutput) ToIconUrisInvokeResponsePtrOutput() IconUrisInvokeResponsePtrOutput {
	return o.ToIconUrisInvokeResponsePtrOutputWithContext(context.Background())
}

func (o IconUrisInvokeResponseOutput) ToIconUrisInvokeResponsePtrOutputWithContext(ctx context.Context) IconUrisInvokeResponsePtrOutput {
	return o.ApplyT(func(v IconUrisInvokeResponse) *IconUrisInvokeResponse {
		return &v
	}).(IconUrisInvokeResponsePtrOutput)
}

// URI to hero icon.
func (o IconUrisInvokeResponseOutput) Hero() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IconUrisInvokeResponse) *string { return v.Hero }).(pulumi.StringPtrOutput)
}

// URI to large icon.
func (o IconUrisInvokeResponseOutput) Large() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IconUrisInvokeResponse) *string { return v.Large }).(pulumi.StringPtrOutput)
}

// URI to medium icon.
func (o IconUrisInvokeResponseOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IconUrisInvokeResponse) *string { return v.Medium }).(pulumi.StringPtrOutput)
}

// URI to small icon.
func (o IconUrisInvokeResponseOutput) Small() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IconUrisInvokeResponse) *string { return v.Small }).(pulumi.StringPtrOutput)
}

// URI to wide icon.
func (o IconUrisInvokeResponseOutput) Wide() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IconUrisInvokeResponse) *string { return v.Wide }).(pulumi.StringPtrOutput)
}

type IconUrisInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (IconUrisInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IconUrisInvokeResponse)(nil)).Elem()
}

func (o IconUrisInvokeResponsePtrOutput) ToIconUrisInvokeResponsePtrOutput() IconUrisInvokeResponsePtrOutput {
	return o
}

func (o IconUrisInvokeResponsePtrOutput) ToIconUrisInvokeResponsePtrOutputWithContext(ctx context.Context) IconUrisInvokeResponsePtrOutput {
	return o
}

func (o IconUrisInvokeResponsePtrOutput) Elem() IconUrisInvokeResponseOutput {
	return o.ApplyT(func(v *IconUrisInvokeResponse) IconUrisInvokeResponse { return *v }).(IconUrisInvokeResponseOutput)
}

// URI to hero icon.
func (o IconUrisInvokeResponsePtrOutput) Hero() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IconUrisInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Hero
	}).(pulumi.StringPtrOutput)
}

// URI to large icon.
func (o IconUrisInvokeResponsePtrOutput) Large() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IconUrisInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Large
	}).(pulumi.StringPtrOutput)
}

// URI to medium icon.
func (o IconUrisInvokeResponsePtrOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IconUrisInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Medium
	}).(pulumi.StringPtrOutput)
}

// URI to small icon.
func (o IconUrisInvokeResponsePtrOutput) Small() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IconUrisInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Small
	}).(pulumi.StringPtrOutput)
}

// URI to wide icon.
func (o IconUrisInvokeResponsePtrOutput) Wide() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IconUrisInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Wide
	}).(pulumi.StringPtrOutput)
}

// OS disk image.
type OsDiskImageInvokeResponse struct {
	// OS operating system type.
	OperatingSystem string `pulumi:"operatingSystem"`
	// SAS key for source blob.
	SourceBlobSasUri string `pulumi:"sourceBlobSasUri"`
}

// OsDiskImageInvokeResponseInput is an input type that accepts OsDiskImageInvokeResponseArgs and OsDiskImageInvokeResponseOutput values.
// You can construct a concrete instance of `OsDiskImageInvokeResponseInput` via:
//
//          OsDiskImageInvokeResponseArgs{...}
type OsDiskImageInvokeResponseInput interface {
	pulumi.Input

	ToOsDiskImageInvokeResponseOutput() OsDiskImageInvokeResponseOutput
	ToOsDiskImageInvokeResponseOutputWithContext(context.Context) OsDiskImageInvokeResponseOutput
}

// OS disk image.
type OsDiskImageInvokeResponseArgs struct {
	// OS operating system type.
	OperatingSystem pulumi.StringInput `pulumi:"operatingSystem"`
	// SAS key for source blob.
	SourceBlobSasUri pulumi.StringInput `pulumi:"sourceBlobSasUri"`
}

func (OsDiskImageInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsDiskImageInvokeResponse)(nil)).Elem()
}

func (i OsDiskImageInvokeResponseArgs) ToOsDiskImageInvokeResponseOutput() OsDiskImageInvokeResponseOutput {
	return i.ToOsDiskImageInvokeResponseOutputWithContext(context.Background())
}

func (i OsDiskImageInvokeResponseArgs) ToOsDiskImageInvokeResponseOutputWithContext(ctx context.Context) OsDiskImageInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsDiskImageInvokeResponseOutput)
}

// OS disk image.
type OsDiskImageInvokeResponseOutput struct{ *pulumi.OutputState }

func (OsDiskImageInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsDiskImageInvokeResponse)(nil)).Elem()
}

func (o OsDiskImageInvokeResponseOutput) ToOsDiskImageInvokeResponseOutput() OsDiskImageInvokeResponseOutput {
	return o
}

func (o OsDiskImageInvokeResponseOutput) ToOsDiskImageInvokeResponseOutputWithContext(ctx context.Context) OsDiskImageInvokeResponseOutput {
	return o
}

// OS operating system type.
func (o OsDiskImageInvokeResponseOutput) OperatingSystem() pulumi.StringOutput {
	return o.ApplyT(func(v OsDiskImageInvokeResponse) string { return v.OperatingSystem }).(pulumi.StringOutput)
}

// SAS key for source blob.
func (o OsDiskImageInvokeResponseOutput) SourceBlobSasUri() pulumi.StringOutput {
	return o.ApplyT(func(v OsDiskImageInvokeResponse) string { return v.SourceBlobSasUri }).(pulumi.StringOutput)
}

// Product information.
type ProductInvokeResponse struct {
	// The part number used for billing purposes.
	BillingPartNumber *string `pulumi:"billingPartNumber"`
	// Product compatibility with current device.
	Compatibility *CompatibilityInvokeResponse `pulumi:"compatibility"`
	// The description of the product.
	Description *string `pulumi:"description"`
	// The display name of the product.
	DisplayName *string `pulumi:"displayName"`
	// The entity tag used for optimistic concurrency when modifying the resource.
	Etag *string `pulumi:"etag"`
	// The identifier of the gallery item corresponding to the product.
	GalleryItemIdentity *string `pulumi:"galleryItemIdentity"`
	// Additional links available for this product.
	IconUris *IconUrisInvokeResponse `pulumi:"iconUris"`
	// ID of the resource.
	Id string `pulumi:"id"`
	// The legal terms.
	LegalTerms *string `pulumi:"legalTerms"`
	// Additional links available for this product.
	Links []ProductLinkInvokeResponse `pulumi:"links"`
	// Name of the resource.
	Name string `pulumi:"name"`
	// The offer representing the product.
	Offer *string `pulumi:"offer"`
	// The version of the product offer.
	OfferVersion *string `pulumi:"offerVersion"`
	// The length of product content.
	PayloadLength *float64 `pulumi:"payloadLength"`
	// The privacy policy.
	PrivacyPolicy *string `pulumi:"privacyPolicy"`
	// The kind of the product (virtualMachine or virtualMachineExtension)
	ProductKind *string `pulumi:"productKind"`
	// Additional properties for the product.
	ProductProperties *ProductPropertiesInvokeResponse `pulumi:"productProperties"`
	// The user-friendly name of the product publisher.
	PublisherDisplayName *string `pulumi:"publisherDisplayName"`
	// Publisher identifier.
	PublisherIdentifier *string `pulumi:"publisherIdentifier"`
	// The product SKU.
	Sku *string `pulumi:"sku"`
	// Type of Resource.
	Type string `pulumi:"type"`
	// The type of the Virtual Machine Extension.
	VmExtensionType *string `pulumi:"vmExtensionType"`
}

// ProductInvokeResponseInput is an input type that accepts ProductInvokeResponseArgs and ProductInvokeResponseOutput values.
// You can construct a concrete instance of `ProductInvokeResponseInput` via:
//
//          ProductInvokeResponseArgs{...}
type ProductInvokeResponseInput interface {
	pulumi.Input

	ToProductInvokeResponseOutput() ProductInvokeResponseOutput
	ToProductInvokeResponseOutputWithContext(context.Context) ProductInvokeResponseOutput
}

// Product information.
type ProductInvokeResponseArgs struct {
	// The part number used for billing purposes.
	BillingPartNumber pulumi.StringPtrInput `pulumi:"billingPartNumber"`
	// Product compatibility with current device.
	Compatibility CompatibilityInvokeResponsePtrInput `pulumi:"compatibility"`
	// The description of the product.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The display name of the product.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The entity tag used for optimistic concurrency when modifying the resource.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The identifier of the gallery item corresponding to the product.
	GalleryItemIdentity pulumi.StringPtrInput `pulumi:"galleryItemIdentity"`
	// Additional links available for this product.
	IconUris IconUrisInvokeResponsePtrInput `pulumi:"iconUris"`
	// ID of the resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The legal terms.
	LegalTerms pulumi.StringPtrInput `pulumi:"legalTerms"`
	// Additional links available for this product.
	Links ProductLinkInvokeResponseArrayInput `pulumi:"links"`
	// Name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The offer representing the product.
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// The version of the product offer.
	OfferVersion pulumi.StringPtrInput `pulumi:"offerVersion"`
	// The length of product content.
	PayloadLength pulumi.Float64PtrInput `pulumi:"payloadLength"`
	// The privacy policy.
	PrivacyPolicy pulumi.StringPtrInput `pulumi:"privacyPolicy"`
	// The kind of the product (virtualMachine or virtualMachineExtension)
	ProductKind pulumi.StringPtrInput `pulumi:"productKind"`
	// Additional properties for the product.
	ProductProperties ProductPropertiesInvokeResponsePtrInput `pulumi:"productProperties"`
	// The user-friendly name of the product publisher.
	PublisherDisplayName pulumi.StringPtrInput `pulumi:"publisherDisplayName"`
	// Publisher identifier.
	PublisherIdentifier pulumi.StringPtrInput `pulumi:"publisherIdentifier"`
	// The product SKU.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// Type of Resource.
	Type pulumi.StringInput `pulumi:"type"`
	// The type of the Virtual Machine Extension.
	VmExtensionType pulumi.StringPtrInput `pulumi:"vmExtensionType"`
}

func (ProductInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductInvokeResponse)(nil)).Elem()
}

func (i ProductInvokeResponseArgs) ToProductInvokeResponseOutput() ProductInvokeResponseOutput {
	return i.ToProductInvokeResponseOutputWithContext(context.Background())
}

func (i ProductInvokeResponseArgs) ToProductInvokeResponseOutputWithContext(ctx context.Context) ProductInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductInvokeResponseOutput)
}

// ProductInvokeResponseArrayInput is an input type that accepts ProductInvokeResponseArray and ProductInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ProductInvokeResponseArrayInput` via:
//
//          ProductInvokeResponseArray{ ProductInvokeResponseArgs{...} }
type ProductInvokeResponseArrayInput interface {
	pulumi.Input

	ToProductInvokeResponseArrayOutput() ProductInvokeResponseArrayOutput
	ToProductInvokeResponseArrayOutputWithContext(context.Context) ProductInvokeResponseArrayOutput
}

type ProductInvokeResponseArray []ProductInvokeResponseInput

func (ProductInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductInvokeResponse)(nil)).Elem()
}

func (i ProductInvokeResponseArray) ToProductInvokeResponseArrayOutput() ProductInvokeResponseArrayOutput {
	return i.ToProductInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ProductInvokeResponseArray) ToProductInvokeResponseArrayOutputWithContext(ctx context.Context) ProductInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductInvokeResponseArrayOutput)
}

// Product information.
type ProductInvokeResponseOutput struct{ *pulumi.OutputState }

func (ProductInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductInvokeResponse)(nil)).Elem()
}

func (o ProductInvokeResponseOutput) ToProductInvokeResponseOutput() ProductInvokeResponseOutput {
	return o
}

func (o ProductInvokeResponseOutput) ToProductInvokeResponseOutputWithContext(ctx context.Context) ProductInvokeResponseOutput {
	return o
}

// The part number used for billing purposes.
func (o ProductInvokeResponseOutput) BillingPartNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *string { return v.BillingPartNumber }).(pulumi.StringPtrOutput)
}

// Product compatibility with current device.
func (o ProductInvokeResponseOutput) Compatibility() CompatibilityInvokeResponsePtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *CompatibilityInvokeResponse { return v.Compatibility }).(CompatibilityInvokeResponsePtrOutput)
}

// The description of the product.
func (o ProductInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the product.
func (o ProductInvokeResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The entity tag used for optimistic concurrency when modifying the resource.
func (o ProductInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The identifier of the gallery item corresponding to the product.
func (o ProductInvokeResponseOutput) GalleryItemIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *string { return v.GalleryItemIdentity }).(pulumi.StringPtrOutput)
}

// Additional links available for this product.
func (o ProductInvokeResponseOutput) IconUris() IconUrisInvokeResponsePtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *IconUrisInvokeResponse { return v.IconUris }).(IconUrisInvokeResponsePtrOutput)
}

// ID of the resource.
func (o ProductInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ProductInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The legal terms.
func (o ProductInvokeResponseOutput) LegalTerms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *string { return v.LegalTerms }).(pulumi.StringPtrOutput)
}

// Additional links available for this product.
func (o ProductInvokeResponseOutput) Links() ProductLinkInvokeResponseArrayOutput {
	return o.ApplyT(func(v ProductInvokeResponse) []ProductLinkInvokeResponse { return v.Links }).(ProductLinkInvokeResponseArrayOutput)
}

// Name of the resource.
func (o ProductInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProductInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The offer representing the product.
func (o ProductInvokeResponseOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// The version of the product offer.
func (o ProductInvokeResponseOutput) OfferVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *string { return v.OfferVersion }).(pulumi.StringPtrOutput)
}

// The length of product content.
func (o ProductInvokeResponseOutput) PayloadLength() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *float64 { return v.PayloadLength }).(pulumi.Float64PtrOutput)
}

// The privacy policy.
func (o ProductInvokeResponseOutput) PrivacyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *string { return v.PrivacyPolicy }).(pulumi.StringPtrOutput)
}

// The kind of the product (virtualMachine or virtualMachineExtension)
func (o ProductInvokeResponseOutput) ProductKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *string { return v.ProductKind }).(pulumi.StringPtrOutput)
}

// Additional properties for the product.
func (o ProductInvokeResponseOutput) ProductProperties() ProductPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *ProductPropertiesInvokeResponse { return v.ProductProperties }).(ProductPropertiesInvokeResponsePtrOutput)
}

// The user-friendly name of the product publisher.
func (o ProductInvokeResponseOutput) PublisherDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *string { return v.PublisherDisplayName }).(pulumi.StringPtrOutput)
}

// Publisher identifier.
func (o ProductInvokeResponseOutput) PublisherIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *string { return v.PublisherIdentifier }).(pulumi.StringPtrOutput)
}

// The product SKU.
func (o ProductInvokeResponseOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Type of Resource.
func (o ProductInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProductInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The type of the Virtual Machine Extension.
func (o ProductInvokeResponseOutput) VmExtensionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductInvokeResponse) *string { return v.VmExtensionType }).(pulumi.StringPtrOutput)
}

type ProductInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ProductInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductInvokeResponse)(nil)).Elem()
}

func (o ProductInvokeResponseArrayOutput) ToProductInvokeResponseArrayOutput() ProductInvokeResponseArrayOutput {
	return o
}

func (o ProductInvokeResponseArrayOutput) ToProductInvokeResponseArrayOutputWithContext(ctx context.Context) ProductInvokeResponseArrayOutput {
	return o
}

func (o ProductInvokeResponseArrayOutput) Index(i pulumi.IntInput) ProductInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductInvokeResponse {
		return vs[0].([]ProductInvokeResponse)[vs[1].(int)]
	}).(ProductInvokeResponseOutput)
}

// Link with additional information about a product.
type ProductLinkInvokeResponse struct {
	// The description of the link.
	DisplayName *string `pulumi:"displayName"`
	// The URI corresponding to the link.
	Uri *string `pulumi:"uri"`
}

// ProductLinkInvokeResponseInput is an input type that accepts ProductLinkInvokeResponseArgs and ProductLinkInvokeResponseOutput values.
// You can construct a concrete instance of `ProductLinkInvokeResponseInput` via:
//
//          ProductLinkInvokeResponseArgs{...}
type ProductLinkInvokeResponseInput interface {
	pulumi.Input

	ToProductLinkInvokeResponseOutput() ProductLinkInvokeResponseOutput
	ToProductLinkInvokeResponseOutputWithContext(context.Context) ProductLinkInvokeResponseOutput
}

// Link with additional information about a product.
type ProductLinkInvokeResponseArgs struct {
	// The description of the link.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The URI corresponding to the link.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (ProductLinkInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductLinkInvokeResponse)(nil)).Elem()
}

func (i ProductLinkInvokeResponseArgs) ToProductLinkInvokeResponseOutput() ProductLinkInvokeResponseOutput {
	return i.ToProductLinkInvokeResponseOutputWithContext(context.Background())
}

func (i ProductLinkInvokeResponseArgs) ToProductLinkInvokeResponseOutputWithContext(ctx context.Context) ProductLinkInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductLinkInvokeResponseOutput)
}

// ProductLinkInvokeResponseArrayInput is an input type that accepts ProductLinkInvokeResponseArray and ProductLinkInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ProductLinkInvokeResponseArrayInput` via:
//
//          ProductLinkInvokeResponseArray{ ProductLinkInvokeResponseArgs{...} }
type ProductLinkInvokeResponseArrayInput interface {
	pulumi.Input

	ToProductLinkInvokeResponseArrayOutput() ProductLinkInvokeResponseArrayOutput
	ToProductLinkInvokeResponseArrayOutputWithContext(context.Context) ProductLinkInvokeResponseArrayOutput
}

type ProductLinkInvokeResponseArray []ProductLinkInvokeResponseInput

func (ProductLinkInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductLinkInvokeResponse)(nil)).Elem()
}

func (i ProductLinkInvokeResponseArray) ToProductLinkInvokeResponseArrayOutput() ProductLinkInvokeResponseArrayOutput {
	return i.ToProductLinkInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ProductLinkInvokeResponseArray) ToProductLinkInvokeResponseArrayOutputWithContext(ctx context.Context) ProductLinkInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductLinkInvokeResponseArrayOutput)
}

// Link with additional information about a product.
type ProductLinkInvokeResponseOutput struct{ *pulumi.OutputState }

func (ProductLinkInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductLinkInvokeResponse)(nil)).Elem()
}

func (o ProductLinkInvokeResponseOutput) ToProductLinkInvokeResponseOutput() ProductLinkInvokeResponseOutput {
	return o
}

func (o ProductLinkInvokeResponseOutput) ToProductLinkInvokeResponseOutputWithContext(ctx context.Context) ProductLinkInvokeResponseOutput {
	return o
}

// The description of the link.
func (o ProductLinkInvokeResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductLinkInvokeResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The URI corresponding to the link.
func (o ProductLinkInvokeResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductLinkInvokeResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type ProductLinkInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ProductLinkInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductLinkInvokeResponse)(nil)).Elem()
}

func (o ProductLinkInvokeResponseArrayOutput) ToProductLinkInvokeResponseArrayOutput() ProductLinkInvokeResponseArrayOutput {
	return o
}

func (o ProductLinkInvokeResponseArrayOutput) ToProductLinkInvokeResponseArrayOutputWithContext(ctx context.Context) ProductLinkInvokeResponseArrayOutput {
	return o
}

func (o ProductLinkInvokeResponseArrayOutput) Index(i pulumi.IntInput) ProductLinkInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductLinkInvokeResponse {
		return vs[0].([]ProductLinkInvokeResponse)[vs[1].(int)]
	}).(ProductLinkInvokeResponseOutput)
}

// Additional properties of the product
type ProductPropertiesInvokeResponse struct {
	// The version.
	Version *string `pulumi:"version"`
}

// ProductPropertiesInvokeResponseInput is an input type that accepts ProductPropertiesInvokeResponseArgs and ProductPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ProductPropertiesInvokeResponseInput` via:
//
//          ProductPropertiesInvokeResponseArgs{...}
type ProductPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToProductPropertiesInvokeResponseOutput() ProductPropertiesInvokeResponseOutput
	ToProductPropertiesInvokeResponseOutputWithContext(context.Context) ProductPropertiesInvokeResponseOutput
}

// Additional properties of the product
type ProductPropertiesInvokeResponseArgs struct {
	// The version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ProductPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductPropertiesInvokeResponse)(nil)).Elem()
}

func (i ProductPropertiesInvokeResponseArgs) ToProductPropertiesInvokeResponseOutput() ProductPropertiesInvokeResponseOutput {
	return i.ToProductPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ProductPropertiesInvokeResponseArgs) ToProductPropertiesInvokeResponseOutputWithContext(ctx context.Context) ProductPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductPropertiesInvokeResponseOutput)
}

func (i ProductPropertiesInvokeResponseArgs) ToProductPropertiesInvokeResponsePtrOutput() ProductPropertiesInvokeResponsePtrOutput {
	return i.ToProductPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ProductPropertiesInvokeResponseArgs) ToProductPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) ProductPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductPropertiesInvokeResponseOutput).ToProductPropertiesInvokeResponsePtrOutputWithContext(ctx)
}

// ProductPropertiesInvokeResponsePtrInput is an input type that accepts ProductPropertiesInvokeResponseArgs, ProductPropertiesInvokeResponsePtr and ProductPropertiesInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ProductPropertiesInvokeResponsePtrInput` via:
//
//          ProductPropertiesInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ProductPropertiesInvokeResponsePtrInput interface {
	pulumi.Input

	ToProductPropertiesInvokeResponsePtrOutput() ProductPropertiesInvokeResponsePtrOutput
	ToProductPropertiesInvokeResponsePtrOutputWithContext(context.Context) ProductPropertiesInvokeResponsePtrOutput
}

type productPropertiesInvokeResponsePtrType ProductPropertiesInvokeResponseArgs

func ProductPropertiesInvokeResponsePtr(v *ProductPropertiesInvokeResponseArgs) ProductPropertiesInvokeResponsePtrInput {
	return (*productPropertiesInvokeResponsePtrType)(v)
}

func (*productPropertiesInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductPropertiesInvokeResponse)(nil)).Elem()
}

func (i *productPropertiesInvokeResponsePtrType) ToProductPropertiesInvokeResponsePtrOutput() ProductPropertiesInvokeResponsePtrOutput {
	return i.ToProductPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *productPropertiesInvokeResponsePtrType) ToProductPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) ProductPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductPropertiesInvokeResponsePtrOutput)
}

// Additional properties of the product
type ProductPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ProductPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductPropertiesInvokeResponse)(nil)).Elem()
}

func (o ProductPropertiesInvokeResponseOutput) ToProductPropertiesInvokeResponseOutput() ProductPropertiesInvokeResponseOutput {
	return o
}

func (o ProductPropertiesInvokeResponseOutput) ToProductPropertiesInvokeResponseOutputWithContext(ctx context.Context) ProductPropertiesInvokeResponseOutput {
	return o
}

func (o ProductPropertiesInvokeResponseOutput) ToProductPropertiesInvokeResponsePtrOutput() ProductPropertiesInvokeResponsePtrOutput {
	return o.ToProductPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ProductPropertiesInvokeResponseOutput) ToProductPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) ProductPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v ProductPropertiesInvokeResponse) *ProductPropertiesInvokeResponse {
		return &v
	}).(ProductPropertiesInvokeResponsePtrOutput)
}

// The version.
func (o ProductPropertiesInvokeResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductPropertiesInvokeResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ProductPropertiesInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ProductPropertiesInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductPropertiesInvokeResponse)(nil)).Elem()
}

func (o ProductPropertiesInvokeResponsePtrOutput) ToProductPropertiesInvokeResponsePtrOutput() ProductPropertiesInvokeResponsePtrOutput {
	return o
}

func (o ProductPropertiesInvokeResponsePtrOutput) ToProductPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) ProductPropertiesInvokeResponsePtrOutput {
	return o
}

func (o ProductPropertiesInvokeResponsePtrOutput) Elem() ProductPropertiesInvokeResponseOutput {
	return o.ApplyT(func(v *ProductPropertiesInvokeResponse) ProductPropertiesInvokeResponse { return *v }).(ProductPropertiesInvokeResponseOutput)
}

// The version.
func (o ProductPropertiesInvokeResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductPropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CompatibilityInvokeResponseOutput{})
	pulumi.RegisterOutputType(CompatibilityInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(DataDiskImageInvokeResponseOutput{})
	pulumi.RegisterOutputType(DataDiskImageInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(IconUrisInvokeResponseOutput{})
	pulumi.RegisterOutputType(IconUrisInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(OsDiskImageInvokeResponseOutput{})
	pulumi.RegisterOutputType(ProductInvokeResponseOutput{})
	pulumi.RegisterOutputType(ProductInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ProductLinkInvokeResponseOutput{})
	pulumi.RegisterOutputType(ProductLinkInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ProductPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ProductPropertiesInvokeResponsePtrOutput{})
}
