// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170601

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CompatibilityResponse struct {
	Description  *string  `pulumi:"description"`
	IsCompatible *bool    `pulumi:"isCompatible"`
	Issues       []string `pulumi:"issues"`
	Message      *string  `pulumi:"message"`
}

// CompatibilityResponseInput is an input type that accepts CompatibilityResponseArgs and CompatibilityResponseOutput values.
// You can construct a concrete instance of `CompatibilityResponseInput` via:
//
//          CompatibilityResponseArgs{...}
type CompatibilityResponseInput interface {
	pulumi.Input

	ToCompatibilityResponseOutput() CompatibilityResponseOutput
	ToCompatibilityResponseOutputWithContext(context.Context) CompatibilityResponseOutput
}

type CompatibilityResponseArgs struct {
	Description  pulumi.StringPtrInput   `pulumi:"description"`
	IsCompatible pulumi.BoolPtrInput     `pulumi:"isCompatible"`
	Issues       pulumi.StringArrayInput `pulumi:"issues"`
	Message      pulumi.StringPtrInput   `pulumi:"message"`
}

func (CompatibilityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CompatibilityResponse)(nil)).Elem()
}

func (i CompatibilityResponseArgs) ToCompatibilityResponseOutput() CompatibilityResponseOutput {
	return i.ToCompatibilityResponseOutputWithContext(context.Background())
}

func (i CompatibilityResponseArgs) ToCompatibilityResponseOutputWithContext(ctx context.Context) CompatibilityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompatibilityResponseOutput)
}

func (i CompatibilityResponseArgs) ToCompatibilityResponsePtrOutput() CompatibilityResponsePtrOutput {
	return i.ToCompatibilityResponsePtrOutputWithContext(context.Background())
}

func (i CompatibilityResponseArgs) ToCompatibilityResponsePtrOutputWithContext(ctx context.Context) CompatibilityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompatibilityResponseOutput).ToCompatibilityResponsePtrOutputWithContext(ctx)
}

// CompatibilityResponsePtrInput is an input type that accepts CompatibilityResponseArgs, CompatibilityResponsePtr and CompatibilityResponsePtrOutput values.
// You can construct a concrete instance of `CompatibilityResponsePtrInput` via:
//
//          CompatibilityResponseArgs{...}
//
//  or:
//
//          nil
type CompatibilityResponsePtrInput interface {
	pulumi.Input

	ToCompatibilityResponsePtrOutput() CompatibilityResponsePtrOutput
	ToCompatibilityResponsePtrOutputWithContext(context.Context) CompatibilityResponsePtrOutput
}

type compatibilityResponsePtrType CompatibilityResponseArgs

func CompatibilityResponsePtr(v *CompatibilityResponseArgs) CompatibilityResponsePtrInput {
	return (*compatibilityResponsePtrType)(v)
}

func (*compatibilityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CompatibilityResponse)(nil)).Elem()
}

func (i *compatibilityResponsePtrType) ToCompatibilityResponsePtrOutput() CompatibilityResponsePtrOutput {
	return i.ToCompatibilityResponsePtrOutputWithContext(context.Background())
}

func (i *compatibilityResponsePtrType) ToCompatibilityResponsePtrOutputWithContext(ctx context.Context) CompatibilityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompatibilityResponsePtrOutput)
}

type CompatibilityResponseOutput struct{ *pulumi.OutputState }

func (CompatibilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompatibilityResponse)(nil)).Elem()
}

func (o CompatibilityResponseOutput) ToCompatibilityResponseOutput() CompatibilityResponseOutput {
	return o
}

func (o CompatibilityResponseOutput) ToCompatibilityResponseOutputWithContext(ctx context.Context) CompatibilityResponseOutput {
	return o
}

func (o CompatibilityResponseOutput) ToCompatibilityResponsePtrOutput() CompatibilityResponsePtrOutput {
	return o.ToCompatibilityResponsePtrOutputWithContext(context.Background())
}

func (o CompatibilityResponseOutput) ToCompatibilityResponsePtrOutputWithContext(ctx context.Context) CompatibilityResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CompatibilityResponse) *CompatibilityResponse {
		return &v
	}).(CompatibilityResponsePtrOutput)
}

func (o CompatibilityResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompatibilityResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o CompatibilityResponseOutput) IsCompatible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CompatibilityResponse) *bool { return v.IsCompatible }).(pulumi.BoolPtrOutput)
}

func (o CompatibilityResponseOutput) Issues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CompatibilityResponse) []string { return v.Issues }).(pulumi.StringArrayOutput)
}

func (o CompatibilityResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompatibilityResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type CompatibilityResponsePtrOutput struct{ *pulumi.OutputState }

func (CompatibilityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CompatibilityResponse)(nil)).Elem()
}

func (o CompatibilityResponsePtrOutput) ToCompatibilityResponsePtrOutput() CompatibilityResponsePtrOutput {
	return o
}

func (o CompatibilityResponsePtrOutput) ToCompatibilityResponsePtrOutputWithContext(ctx context.Context) CompatibilityResponsePtrOutput {
	return o
}

func (o CompatibilityResponsePtrOutput) Elem() CompatibilityResponseOutput {
	return o.ApplyT(func(v *CompatibilityResponse) CompatibilityResponse {
		if v != nil {
			return *v
		}
		var ret CompatibilityResponse
		return ret
	}).(CompatibilityResponseOutput)
}

func (o CompatibilityResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CompatibilityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o CompatibilityResponsePtrOutput) IsCompatible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CompatibilityResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsCompatible
	}).(pulumi.BoolPtrOutput)
}

func (o CompatibilityResponsePtrOutput) Issues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CompatibilityResponse) []string {
		if v == nil {
			return nil
		}
		return v.Issues
	}).(pulumi.StringArrayOutput)
}

func (o CompatibilityResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CompatibilityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

type DataDiskImageResponse struct {
	Lun              int    `pulumi:"lun"`
	SourceBlobSasUri string `pulumi:"sourceBlobSasUri"`
}

// DataDiskImageResponseInput is an input type that accepts DataDiskImageResponseArgs and DataDiskImageResponseOutput values.
// You can construct a concrete instance of `DataDiskImageResponseInput` via:
//
//          DataDiskImageResponseArgs{...}
type DataDiskImageResponseInput interface {
	pulumi.Input

	ToDataDiskImageResponseOutput() DataDiskImageResponseOutput
	ToDataDiskImageResponseOutputWithContext(context.Context) DataDiskImageResponseOutput
}

type DataDiskImageResponseArgs struct {
	Lun              pulumi.IntInput    `pulumi:"lun"`
	SourceBlobSasUri pulumi.StringInput `pulumi:"sourceBlobSasUri"`
}

func (DataDiskImageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskImageResponse)(nil)).Elem()
}

func (i DataDiskImageResponseArgs) ToDataDiskImageResponseOutput() DataDiskImageResponseOutput {
	return i.ToDataDiskImageResponseOutputWithContext(context.Background())
}

func (i DataDiskImageResponseArgs) ToDataDiskImageResponseOutputWithContext(ctx context.Context) DataDiskImageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskImageResponseOutput)
}

// DataDiskImageResponseArrayInput is an input type that accepts DataDiskImageResponseArray and DataDiskImageResponseArrayOutput values.
// You can construct a concrete instance of `DataDiskImageResponseArrayInput` via:
//
//          DataDiskImageResponseArray{ DataDiskImageResponseArgs{...} }
type DataDiskImageResponseArrayInput interface {
	pulumi.Input

	ToDataDiskImageResponseArrayOutput() DataDiskImageResponseArrayOutput
	ToDataDiskImageResponseArrayOutputWithContext(context.Context) DataDiskImageResponseArrayOutput
}

type DataDiskImageResponseArray []DataDiskImageResponseInput

func (DataDiskImageResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskImageResponse)(nil)).Elem()
}

func (i DataDiskImageResponseArray) ToDataDiskImageResponseArrayOutput() DataDiskImageResponseArrayOutput {
	return i.ToDataDiskImageResponseArrayOutputWithContext(context.Background())
}

func (i DataDiskImageResponseArray) ToDataDiskImageResponseArrayOutputWithContext(ctx context.Context) DataDiskImageResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskImageResponseArrayOutput)
}

type DataDiskImageResponseOutput struct{ *pulumi.OutputState }

func (DataDiskImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskImageResponse)(nil)).Elem()
}

func (o DataDiskImageResponseOutput) ToDataDiskImageResponseOutput() DataDiskImageResponseOutput {
	return o
}

func (o DataDiskImageResponseOutput) ToDataDiskImageResponseOutputWithContext(ctx context.Context) DataDiskImageResponseOutput {
	return o
}

func (o DataDiskImageResponseOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v DataDiskImageResponse) int { return v.Lun }).(pulumi.IntOutput)
}

func (o DataDiskImageResponseOutput) SourceBlobSasUri() pulumi.StringOutput {
	return o.ApplyT(func(v DataDiskImageResponse) string { return v.SourceBlobSasUri }).(pulumi.StringOutput)
}

type DataDiskImageResponseArrayOutput struct{ *pulumi.OutputState }

func (DataDiskImageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskImageResponse)(nil)).Elem()
}

func (o DataDiskImageResponseArrayOutput) ToDataDiskImageResponseArrayOutput() DataDiskImageResponseArrayOutput {
	return o
}

func (o DataDiskImageResponseArrayOutput) ToDataDiskImageResponseArrayOutputWithContext(ctx context.Context) DataDiskImageResponseArrayOutput {
	return o
}

func (o DataDiskImageResponseArrayOutput) Index(i pulumi.IntInput) DataDiskImageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDiskImageResponse {
		return vs[0].([]DataDiskImageResponse)[vs[1].(int)]
	}).(DataDiskImageResponseOutput)
}

type IconUrisResponse struct {
	Hero   *string `pulumi:"hero"`
	Large  *string `pulumi:"large"`
	Medium *string `pulumi:"medium"`
	Small  *string `pulumi:"small"`
	Wide   *string `pulumi:"wide"`
}

// IconUrisResponseInput is an input type that accepts IconUrisResponseArgs and IconUrisResponseOutput values.
// You can construct a concrete instance of `IconUrisResponseInput` via:
//
//          IconUrisResponseArgs{...}
type IconUrisResponseInput interface {
	pulumi.Input

	ToIconUrisResponseOutput() IconUrisResponseOutput
	ToIconUrisResponseOutputWithContext(context.Context) IconUrisResponseOutput
}

type IconUrisResponseArgs struct {
	Hero   pulumi.StringPtrInput `pulumi:"hero"`
	Large  pulumi.StringPtrInput `pulumi:"large"`
	Medium pulumi.StringPtrInput `pulumi:"medium"`
	Small  pulumi.StringPtrInput `pulumi:"small"`
	Wide   pulumi.StringPtrInput `pulumi:"wide"`
}

func (IconUrisResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IconUrisResponse)(nil)).Elem()
}

func (i IconUrisResponseArgs) ToIconUrisResponseOutput() IconUrisResponseOutput {
	return i.ToIconUrisResponseOutputWithContext(context.Background())
}

func (i IconUrisResponseArgs) ToIconUrisResponseOutputWithContext(ctx context.Context) IconUrisResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IconUrisResponseOutput)
}

func (i IconUrisResponseArgs) ToIconUrisResponsePtrOutput() IconUrisResponsePtrOutput {
	return i.ToIconUrisResponsePtrOutputWithContext(context.Background())
}

func (i IconUrisResponseArgs) ToIconUrisResponsePtrOutputWithContext(ctx context.Context) IconUrisResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IconUrisResponseOutput).ToIconUrisResponsePtrOutputWithContext(ctx)
}

// IconUrisResponsePtrInput is an input type that accepts IconUrisResponseArgs, IconUrisResponsePtr and IconUrisResponsePtrOutput values.
// You can construct a concrete instance of `IconUrisResponsePtrInput` via:
//
//          IconUrisResponseArgs{...}
//
//  or:
//
//          nil
type IconUrisResponsePtrInput interface {
	pulumi.Input

	ToIconUrisResponsePtrOutput() IconUrisResponsePtrOutput
	ToIconUrisResponsePtrOutputWithContext(context.Context) IconUrisResponsePtrOutput
}

type iconUrisResponsePtrType IconUrisResponseArgs

func IconUrisResponsePtr(v *IconUrisResponseArgs) IconUrisResponsePtrInput {
	return (*iconUrisResponsePtrType)(v)
}

func (*iconUrisResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IconUrisResponse)(nil)).Elem()
}

func (i *iconUrisResponsePtrType) ToIconUrisResponsePtrOutput() IconUrisResponsePtrOutput {
	return i.ToIconUrisResponsePtrOutputWithContext(context.Background())
}

func (i *iconUrisResponsePtrType) ToIconUrisResponsePtrOutputWithContext(ctx context.Context) IconUrisResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IconUrisResponsePtrOutput)
}

type IconUrisResponseOutput struct{ *pulumi.OutputState }

func (IconUrisResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IconUrisResponse)(nil)).Elem()
}

func (o IconUrisResponseOutput) ToIconUrisResponseOutput() IconUrisResponseOutput {
	return o
}

func (o IconUrisResponseOutput) ToIconUrisResponseOutputWithContext(ctx context.Context) IconUrisResponseOutput {
	return o
}

func (o IconUrisResponseOutput) ToIconUrisResponsePtrOutput() IconUrisResponsePtrOutput {
	return o.ToIconUrisResponsePtrOutputWithContext(context.Background())
}

func (o IconUrisResponseOutput) ToIconUrisResponsePtrOutputWithContext(ctx context.Context) IconUrisResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IconUrisResponse) *IconUrisResponse {
		return &v
	}).(IconUrisResponsePtrOutput)
}

func (o IconUrisResponseOutput) Hero() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IconUrisResponse) *string { return v.Hero }).(pulumi.StringPtrOutput)
}

func (o IconUrisResponseOutput) Large() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IconUrisResponse) *string { return v.Large }).(pulumi.StringPtrOutput)
}

func (o IconUrisResponseOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IconUrisResponse) *string { return v.Medium }).(pulumi.StringPtrOutput)
}

func (o IconUrisResponseOutput) Small() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IconUrisResponse) *string { return v.Small }).(pulumi.StringPtrOutput)
}

func (o IconUrisResponseOutput) Wide() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IconUrisResponse) *string { return v.Wide }).(pulumi.StringPtrOutput)
}

type IconUrisResponsePtrOutput struct{ *pulumi.OutputState }

func (IconUrisResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IconUrisResponse)(nil)).Elem()
}

func (o IconUrisResponsePtrOutput) ToIconUrisResponsePtrOutput() IconUrisResponsePtrOutput {
	return o
}

func (o IconUrisResponsePtrOutput) ToIconUrisResponsePtrOutputWithContext(ctx context.Context) IconUrisResponsePtrOutput {
	return o
}

func (o IconUrisResponsePtrOutput) Elem() IconUrisResponseOutput {
	return o.ApplyT(func(v *IconUrisResponse) IconUrisResponse {
		if v != nil {
			return *v
		}
		var ret IconUrisResponse
		return ret
	}).(IconUrisResponseOutput)
}

func (o IconUrisResponsePtrOutput) Hero() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IconUrisResponse) *string {
		if v == nil {
			return nil
		}
		return v.Hero
	}).(pulumi.StringPtrOutput)
}

func (o IconUrisResponsePtrOutput) Large() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IconUrisResponse) *string {
		if v == nil {
			return nil
		}
		return v.Large
	}).(pulumi.StringPtrOutput)
}

func (o IconUrisResponsePtrOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IconUrisResponse) *string {
		if v == nil {
			return nil
		}
		return v.Medium
	}).(pulumi.StringPtrOutput)
}

func (o IconUrisResponsePtrOutput) Small() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IconUrisResponse) *string {
		if v == nil {
			return nil
		}
		return v.Small
	}).(pulumi.StringPtrOutput)
}

func (o IconUrisResponsePtrOutput) Wide() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IconUrisResponse) *string {
		if v == nil {
			return nil
		}
		return v.Wide
	}).(pulumi.StringPtrOutput)
}

type OsDiskImageResponse struct {
	OperatingSystem  string `pulumi:"operatingSystem"`
	SourceBlobSasUri string `pulumi:"sourceBlobSasUri"`
}

// OsDiskImageResponseInput is an input type that accepts OsDiskImageResponseArgs and OsDiskImageResponseOutput values.
// You can construct a concrete instance of `OsDiskImageResponseInput` via:
//
//          OsDiskImageResponseArgs{...}
type OsDiskImageResponseInput interface {
	pulumi.Input

	ToOsDiskImageResponseOutput() OsDiskImageResponseOutput
	ToOsDiskImageResponseOutputWithContext(context.Context) OsDiskImageResponseOutput
}

type OsDiskImageResponseArgs struct {
	OperatingSystem  pulumi.StringInput `pulumi:"operatingSystem"`
	SourceBlobSasUri pulumi.StringInput `pulumi:"sourceBlobSasUri"`
}

func (OsDiskImageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsDiskImageResponse)(nil)).Elem()
}

func (i OsDiskImageResponseArgs) ToOsDiskImageResponseOutput() OsDiskImageResponseOutput {
	return i.ToOsDiskImageResponseOutputWithContext(context.Background())
}

func (i OsDiskImageResponseArgs) ToOsDiskImageResponseOutputWithContext(ctx context.Context) OsDiskImageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsDiskImageResponseOutput)
}

type OsDiskImageResponseOutput struct{ *pulumi.OutputState }

func (OsDiskImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsDiskImageResponse)(nil)).Elem()
}

func (o OsDiskImageResponseOutput) ToOsDiskImageResponseOutput() OsDiskImageResponseOutput {
	return o
}

func (o OsDiskImageResponseOutput) ToOsDiskImageResponseOutputWithContext(ctx context.Context) OsDiskImageResponseOutput {
	return o
}

func (o OsDiskImageResponseOutput) OperatingSystem() pulumi.StringOutput {
	return o.ApplyT(func(v OsDiskImageResponse) string { return v.OperatingSystem }).(pulumi.StringOutput)
}

func (o OsDiskImageResponseOutput) SourceBlobSasUri() pulumi.StringOutput {
	return o.ApplyT(func(v OsDiskImageResponse) string { return v.SourceBlobSasUri }).(pulumi.StringOutput)
}

type ProductLinkResponse struct {
	DisplayName *string `pulumi:"displayName"`
	Uri         *string `pulumi:"uri"`
}

// ProductLinkResponseInput is an input type that accepts ProductLinkResponseArgs and ProductLinkResponseOutput values.
// You can construct a concrete instance of `ProductLinkResponseInput` via:
//
//          ProductLinkResponseArgs{...}
type ProductLinkResponseInput interface {
	pulumi.Input

	ToProductLinkResponseOutput() ProductLinkResponseOutput
	ToProductLinkResponseOutputWithContext(context.Context) ProductLinkResponseOutput
}

type ProductLinkResponseArgs struct {
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	Uri         pulumi.StringPtrInput `pulumi:"uri"`
}

func (ProductLinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductLinkResponse)(nil)).Elem()
}

func (i ProductLinkResponseArgs) ToProductLinkResponseOutput() ProductLinkResponseOutput {
	return i.ToProductLinkResponseOutputWithContext(context.Background())
}

func (i ProductLinkResponseArgs) ToProductLinkResponseOutputWithContext(ctx context.Context) ProductLinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductLinkResponseOutput)
}

// ProductLinkResponseArrayInput is an input type that accepts ProductLinkResponseArray and ProductLinkResponseArrayOutput values.
// You can construct a concrete instance of `ProductLinkResponseArrayInput` via:
//
//          ProductLinkResponseArray{ ProductLinkResponseArgs{...} }
type ProductLinkResponseArrayInput interface {
	pulumi.Input

	ToProductLinkResponseArrayOutput() ProductLinkResponseArrayOutput
	ToProductLinkResponseArrayOutputWithContext(context.Context) ProductLinkResponseArrayOutput
}

type ProductLinkResponseArray []ProductLinkResponseInput

func (ProductLinkResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductLinkResponse)(nil)).Elem()
}

func (i ProductLinkResponseArray) ToProductLinkResponseArrayOutput() ProductLinkResponseArrayOutput {
	return i.ToProductLinkResponseArrayOutputWithContext(context.Background())
}

func (i ProductLinkResponseArray) ToProductLinkResponseArrayOutputWithContext(ctx context.Context) ProductLinkResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductLinkResponseArrayOutput)
}

type ProductLinkResponseOutput struct{ *pulumi.OutputState }

func (ProductLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductLinkResponse)(nil)).Elem()
}

func (o ProductLinkResponseOutput) ToProductLinkResponseOutput() ProductLinkResponseOutput {
	return o
}

func (o ProductLinkResponseOutput) ToProductLinkResponseOutputWithContext(ctx context.Context) ProductLinkResponseOutput {
	return o
}

func (o ProductLinkResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductLinkResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o ProductLinkResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductLinkResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type ProductLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ProductLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductLinkResponse)(nil)).Elem()
}

func (o ProductLinkResponseArrayOutput) ToProductLinkResponseArrayOutput() ProductLinkResponseArrayOutput {
	return o
}

func (o ProductLinkResponseArrayOutput) ToProductLinkResponseArrayOutputWithContext(ctx context.Context) ProductLinkResponseArrayOutput {
	return o
}

func (o ProductLinkResponseArrayOutput) Index(i pulumi.IntInput) ProductLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductLinkResponse {
		return vs[0].([]ProductLinkResponse)[vs[1].(int)]
	}).(ProductLinkResponseOutput)
}

type ProductPropertiesResponse struct {
	Version *string `pulumi:"version"`
}

// ProductPropertiesResponseInput is an input type that accepts ProductPropertiesResponseArgs and ProductPropertiesResponseOutput values.
// You can construct a concrete instance of `ProductPropertiesResponseInput` via:
//
//          ProductPropertiesResponseArgs{...}
type ProductPropertiesResponseInput interface {
	pulumi.Input

	ToProductPropertiesResponseOutput() ProductPropertiesResponseOutput
	ToProductPropertiesResponseOutputWithContext(context.Context) ProductPropertiesResponseOutput
}

type ProductPropertiesResponseArgs struct {
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ProductPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductPropertiesResponse)(nil)).Elem()
}

func (i ProductPropertiesResponseArgs) ToProductPropertiesResponseOutput() ProductPropertiesResponseOutput {
	return i.ToProductPropertiesResponseOutputWithContext(context.Background())
}

func (i ProductPropertiesResponseArgs) ToProductPropertiesResponseOutputWithContext(ctx context.Context) ProductPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductPropertiesResponseOutput)
}

func (i ProductPropertiesResponseArgs) ToProductPropertiesResponsePtrOutput() ProductPropertiesResponsePtrOutput {
	return i.ToProductPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ProductPropertiesResponseArgs) ToProductPropertiesResponsePtrOutputWithContext(ctx context.Context) ProductPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductPropertiesResponseOutput).ToProductPropertiesResponsePtrOutputWithContext(ctx)
}

// ProductPropertiesResponsePtrInput is an input type that accepts ProductPropertiesResponseArgs, ProductPropertiesResponsePtr and ProductPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ProductPropertiesResponsePtrInput` via:
//
//          ProductPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ProductPropertiesResponsePtrInput interface {
	pulumi.Input

	ToProductPropertiesResponsePtrOutput() ProductPropertiesResponsePtrOutput
	ToProductPropertiesResponsePtrOutputWithContext(context.Context) ProductPropertiesResponsePtrOutput
}

type productPropertiesResponsePtrType ProductPropertiesResponseArgs

func ProductPropertiesResponsePtr(v *ProductPropertiesResponseArgs) ProductPropertiesResponsePtrInput {
	return (*productPropertiesResponsePtrType)(v)
}

func (*productPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductPropertiesResponse)(nil)).Elem()
}

func (i *productPropertiesResponsePtrType) ToProductPropertiesResponsePtrOutput() ProductPropertiesResponsePtrOutput {
	return i.ToProductPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *productPropertiesResponsePtrType) ToProductPropertiesResponsePtrOutputWithContext(ctx context.Context) ProductPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductPropertiesResponsePtrOutput)
}

type ProductPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ProductPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductPropertiesResponse)(nil)).Elem()
}

func (o ProductPropertiesResponseOutput) ToProductPropertiesResponseOutput() ProductPropertiesResponseOutput {
	return o
}

func (o ProductPropertiesResponseOutput) ToProductPropertiesResponseOutputWithContext(ctx context.Context) ProductPropertiesResponseOutput {
	return o
}

func (o ProductPropertiesResponseOutput) ToProductPropertiesResponsePtrOutput() ProductPropertiesResponsePtrOutput {
	return o.ToProductPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ProductPropertiesResponseOutput) ToProductPropertiesResponsePtrOutputWithContext(ctx context.Context) ProductPropertiesResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProductPropertiesResponse) *ProductPropertiesResponse {
		return &v
	}).(ProductPropertiesResponsePtrOutput)
}

func (o ProductPropertiesResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductPropertiesResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ProductPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ProductPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductPropertiesResponse)(nil)).Elem()
}

func (o ProductPropertiesResponsePtrOutput) ToProductPropertiesResponsePtrOutput() ProductPropertiesResponsePtrOutput {
	return o
}

func (o ProductPropertiesResponsePtrOutput) ToProductPropertiesResponsePtrOutputWithContext(ctx context.Context) ProductPropertiesResponsePtrOutput {
	return o
}

func (o ProductPropertiesResponsePtrOutput) Elem() ProductPropertiesResponseOutput {
	return o.ApplyT(func(v *ProductPropertiesResponse) ProductPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ProductPropertiesResponse
		return ret
	}).(ProductPropertiesResponseOutput)
}

func (o ProductPropertiesResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type ProductResponse struct {
	BillingPartNumber    *string                    `pulumi:"billingPartNumber"`
	Compatibility        *CompatibilityResponse     `pulumi:"compatibility"`
	Description          *string                    `pulumi:"description"`
	DisplayName          *string                    `pulumi:"displayName"`
	Etag                 *string                    `pulumi:"etag"`
	GalleryItemIdentity  *string                    `pulumi:"galleryItemIdentity"`
	IconUris             *IconUrisResponse          `pulumi:"iconUris"`
	Id                   string                     `pulumi:"id"`
	LegalTerms           *string                    `pulumi:"legalTerms"`
	Links                []ProductLinkResponse      `pulumi:"links"`
	Name                 string                     `pulumi:"name"`
	Offer                *string                    `pulumi:"offer"`
	OfferVersion         *string                    `pulumi:"offerVersion"`
	PayloadLength        *float64                   `pulumi:"payloadLength"`
	PrivacyPolicy        *string                    `pulumi:"privacyPolicy"`
	ProductKind          *string                    `pulumi:"productKind"`
	ProductProperties    *ProductPropertiesResponse `pulumi:"productProperties"`
	PublisherDisplayName *string                    `pulumi:"publisherDisplayName"`
	PublisherIdentifier  *string                    `pulumi:"publisherIdentifier"`
	Sku                  *string                    `pulumi:"sku"`
	Type                 string                     `pulumi:"type"`
	VmExtensionType      *string                    `pulumi:"vmExtensionType"`
}

// ProductResponseInput is an input type that accepts ProductResponseArgs and ProductResponseOutput values.
// You can construct a concrete instance of `ProductResponseInput` via:
//
//          ProductResponseArgs{...}
type ProductResponseInput interface {
	pulumi.Input

	ToProductResponseOutput() ProductResponseOutput
	ToProductResponseOutputWithContext(context.Context) ProductResponseOutput
}

type ProductResponseArgs struct {
	BillingPartNumber    pulumi.StringPtrInput             `pulumi:"billingPartNumber"`
	Compatibility        CompatibilityResponsePtrInput     `pulumi:"compatibility"`
	Description          pulumi.StringPtrInput             `pulumi:"description"`
	DisplayName          pulumi.StringPtrInput             `pulumi:"displayName"`
	Etag                 pulumi.StringPtrInput             `pulumi:"etag"`
	GalleryItemIdentity  pulumi.StringPtrInput             `pulumi:"galleryItemIdentity"`
	IconUris             IconUrisResponsePtrInput          `pulumi:"iconUris"`
	Id                   pulumi.StringInput                `pulumi:"id"`
	LegalTerms           pulumi.StringPtrInput             `pulumi:"legalTerms"`
	Links                ProductLinkResponseArrayInput     `pulumi:"links"`
	Name                 pulumi.StringInput                `pulumi:"name"`
	Offer                pulumi.StringPtrInput             `pulumi:"offer"`
	OfferVersion         pulumi.StringPtrInput             `pulumi:"offerVersion"`
	PayloadLength        pulumi.Float64PtrInput            `pulumi:"payloadLength"`
	PrivacyPolicy        pulumi.StringPtrInput             `pulumi:"privacyPolicy"`
	ProductKind          pulumi.StringPtrInput             `pulumi:"productKind"`
	ProductProperties    ProductPropertiesResponsePtrInput `pulumi:"productProperties"`
	PublisherDisplayName pulumi.StringPtrInput             `pulumi:"publisherDisplayName"`
	PublisherIdentifier  pulumi.StringPtrInput             `pulumi:"publisherIdentifier"`
	Sku                  pulumi.StringPtrInput             `pulumi:"sku"`
	Type                 pulumi.StringInput                `pulumi:"type"`
	VmExtensionType      pulumi.StringPtrInput             `pulumi:"vmExtensionType"`
}

func (ProductResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductResponse)(nil)).Elem()
}

func (i ProductResponseArgs) ToProductResponseOutput() ProductResponseOutput {
	return i.ToProductResponseOutputWithContext(context.Background())
}

func (i ProductResponseArgs) ToProductResponseOutputWithContext(ctx context.Context) ProductResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductResponseOutput)
}

// ProductResponseArrayInput is an input type that accepts ProductResponseArray and ProductResponseArrayOutput values.
// You can construct a concrete instance of `ProductResponseArrayInput` via:
//
//          ProductResponseArray{ ProductResponseArgs{...} }
type ProductResponseArrayInput interface {
	pulumi.Input

	ToProductResponseArrayOutput() ProductResponseArrayOutput
	ToProductResponseArrayOutputWithContext(context.Context) ProductResponseArrayOutput
}

type ProductResponseArray []ProductResponseInput

func (ProductResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductResponse)(nil)).Elem()
}

func (i ProductResponseArray) ToProductResponseArrayOutput() ProductResponseArrayOutput {
	return i.ToProductResponseArrayOutputWithContext(context.Background())
}

func (i ProductResponseArray) ToProductResponseArrayOutputWithContext(ctx context.Context) ProductResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductResponseArrayOutput)
}

type ProductResponseOutput struct{ *pulumi.OutputState }

func (ProductResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductResponse)(nil)).Elem()
}

func (o ProductResponseOutput) ToProductResponseOutput() ProductResponseOutput {
	return o
}

func (o ProductResponseOutput) ToProductResponseOutputWithContext(ctx context.Context) ProductResponseOutput {
	return o
}

func (o ProductResponseOutput) BillingPartNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductResponse) *string { return v.BillingPartNumber }).(pulumi.StringPtrOutput)
}

func (o ProductResponseOutput) Compatibility() CompatibilityResponsePtrOutput {
	return o.ApplyT(func(v ProductResponse) *CompatibilityResponse { return v.Compatibility }).(CompatibilityResponsePtrOutput)
}

func (o ProductResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ProductResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o ProductResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

func (o ProductResponseOutput) GalleryItemIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductResponse) *string { return v.GalleryItemIdentity }).(pulumi.StringPtrOutput)
}

func (o ProductResponseOutput) IconUris() IconUrisResponsePtrOutput {
	return o.ApplyT(func(v ProductResponse) *IconUrisResponse { return v.IconUris }).(IconUrisResponsePtrOutput)
}

func (o ProductResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ProductResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o ProductResponseOutput) LegalTerms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductResponse) *string { return v.LegalTerms }).(pulumi.StringPtrOutput)
}

func (o ProductResponseOutput) Links() ProductLinkResponseArrayOutput {
	return o.ApplyT(func(v ProductResponse) []ProductLinkResponse { return v.Links }).(ProductLinkResponseArrayOutput)
}

func (o ProductResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProductResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o ProductResponseOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductResponse) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

func (o ProductResponseOutput) OfferVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductResponse) *string { return v.OfferVersion }).(pulumi.StringPtrOutput)
}

func (o ProductResponseOutput) PayloadLength() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProductResponse) *float64 { return v.PayloadLength }).(pulumi.Float64PtrOutput)
}

func (o ProductResponseOutput) PrivacyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductResponse) *string { return v.PrivacyPolicy }).(pulumi.StringPtrOutput)
}

func (o ProductResponseOutput) ProductKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductResponse) *string { return v.ProductKind }).(pulumi.StringPtrOutput)
}

func (o ProductResponseOutput) ProductProperties() ProductPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ProductResponse) *ProductPropertiesResponse { return v.ProductProperties }).(ProductPropertiesResponsePtrOutput)
}

func (o ProductResponseOutput) PublisherDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductResponse) *string { return v.PublisherDisplayName }).(pulumi.StringPtrOutput)
}

func (o ProductResponseOutput) PublisherIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductResponse) *string { return v.PublisherIdentifier }).(pulumi.StringPtrOutput)
}

func (o ProductResponseOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductResponse) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

func (o ProductResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProductResponse) string { return v.Type }).(pulumi.StringOutput)
}

func (o ProductResponseOutput) VmExtensionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductResponse) *string { return v.VmExtensionType }).(pulumi.StringPtrOutput)
}

type ProductResponseArrayOutput struct{ *pulumi.OutputState }

func (ProductResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductResponse)(nil)).Elem()
}

func (o ProductResponseArrayOutput) ToProductResponseArrayOutput() ProductResponseArrayOutput {
	return o
}

func (o ProductResponseArrayOutput) ToProductResponseArrayOutputWithContext(ctx context.Context) ProductResponseArrayOutput {
	return o
}

func (o ProductResponseArrayOutput) Index(i pulumi.IntInput) ProductResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductResponse {
		return vs[0].([]ProductResponse)[vs[1].(int)]
	}).(ProductResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(CompatibilityResponseOutput{})
	pulumi.RegisterOutputType(CompatibilityResponsePtrOutput{})
	pulumi.RegisterOutputType(DataDiskImageResponseOutput{})
	pulumi.RegisterOutputType(DataDiskImageResponseArrayOutput{})
	pulumi.RegisterOutputType(IconUrisResponseOutput{})
	pulumi.RegisterOutputType(IconUrisResponsePtrOutput{})
	pulumi.RegisterOutputType(OsDiskImageResponseOutput{})
	pulumi.RegisterOutputType(ProductLinkResponseOutput{})
	pulumi.RegisterOutputType(ProductLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(ProductPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ProductPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ProductResponseOutput{})
	pulumi.RegisterOutputType(ProductResponseArrayOutput{})
}
