// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170601

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Data disk image.
type DataDiskImageResponse struct {
	// The LUN.
	Lun int `pulumi:"lun"`
	// SAS key for source blob.
	SourceBlobSasUri string `pulumi:"sourceBlobSasUri"`
}

// DataDiskImageResponseInput is an input type that accepts DataDiskImageResponseArgs and DataDiskImageResponseOutput values.
// You can construct a concrete instance of `DataDiskImageResponseInput` via:
//
//          DataDiskImageResponseArgs{...}
type DataDiskImageResponseInput interface {
	pulumi.Input

	ToDataDiskImageResponseOutput() DataDiskImageResponseOutput
	ToDataDiskImageResponseOutputWithContext(context.Context) DataDiskImageResponseOutput
}

// Data disk image.
type DataDiskImageResponseArgs struct {
	// The LUN.
	Lun pulumi.IntInput `pulumi:"lun"`
	// SAS key for source blob.
	SourceBlobSasUri pulumi.StringInput `pulumi:"sourceBlobSasUri"`
}

func (DataDiskImageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskImageResponse)(nil)).Elem()
}

func (i DataDiskImageResponseArgs) ToDataDiskImageResponseOutput() DataDiskImageResponseOutput {
	return i.ToDataDiskImageResponseOutputWithContext(context.Background())
}

func (i DataDiskImageResponseArgs) ToDataDiskImageResponseOutputWithContext(ctx context.Context) DataDiskImageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskImageResponseOutput)
}

// DataDiskImageResponseArrayInput is an input type that accepts DataDiskImageResponseArray and DataDiskImageResponseArrayOutput values.
// You can construct a concrete instance of `DataDiskImageResponseArrayInput` via:
//
//          DataDiskImageResponseArray{ DataDiskImageResponseArgs{...} }
type DataDiskImageResponseArrayInput interface {
	pulumi.Input

	ToDataDiskImageResponseArrayOutput() DataDiskImageResponseArrayOutput
	ToDataDiskImageResponseArrayOutputWithContext(context.Context) DataDiskImageResponseArrayOutput
}

type DataDiskImageResponseArray []DataDiskImageResponseInput

func (DataDiskImageResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskImageResponse)(nil)).Elem()
}

func (i DataDiskImageResponseArray) ToDataDiskImageResponseArrayOutput() DataDiskImageResponseArrayOutput {
	return i.ToDataDiskImageResponseArrayOutputWithContext(context.Background())
}

func (i DataDiskImageResponseArray) ToDataDiskImageResponseArrayOutputWithContext(ctx context.Context) DataDiskImageResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskImageResponseArrayOutput)
}

// Data disk image.
type DataDiskImageResponseOutput struct{ *pulumi.OutputState }

func (DataDiskImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskImageResponse)(nil)).Elem()
}

func (o DataDiskImageResponseOutput) ToDataDiskImageResponseOutput() DataDiskImageResponseOutput {
	return o
}

func (o DataDiskImageResponseOutput) ToDataDiskImageResponseOutputWithContext(ctx context.Context) DataDiskImageResponseOutput {
	return o
}

// The LUN.
func (o DataDiskImageResponseOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v DataDiskImageResponse) int { return v.Lun }).(pulumi.IntOutput)
}

// SAS key for source blob.
func (o DataDiskImageResponseOutput) SourceBlobSasUri() pulumi.StringOutput {
	return o.ApplyT(func(v DataDiskImageResponse) string { return v.SourceBlobSasUri }).(pulumi.StringOutput)
}

type DataDiskImageResponseArrayOutput struct{ *pulumi.OutputState }

func (DataDiskImageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskImageResponse)(nil)).Elem()
}

func (o DataDiskImageResponseArrayOutput) ToDataDiskImageResponseArrayOutput() DataDiskImageResponseArrayOutput {
	return o
}

func (o DataDiskImageResponseArrayOutput) ToDataDiskImageResponseArrayOutputWithContext(ctx context.Context) DataDiskImageResponseArrayOutput {
	return o
}

func (o DataDiskImageResponseArrayOutput) Index(i pulumi.IntInput) DataDiskImageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDiskImageResponse {
		return vs[0].([]DataDiskImageResponse)[vs[1].(int)]
	}).(DataDiskImageResponseOutput)
}

// OS disk image.
type OsDiskImageResponse struct {
	// OS operating system type.
	OperatingSystem string `pulumi:"operatingSystem"`
	// SAS key for source blob.
	SourceBlobSasUri string `pulumi:"sourceBlobSasUri"`
}

// OsDiskImageResponseInput is an input type that accepts OsDiskImageResponseArgs and OsDiskImageResponseOutput values.
// You can construct a concrete instance of `OsDiskImageResponseInput` via:
//
//          OsDiskImageResponseArgs{...}
type OsDiskImageResponseInput interface {
	pulumi.Input

	ToOsDiskImageResponseOutput() OsDiskImageResponseOutput
	ToOsDiskImageResponseOutputWithContext(context.Context) OsDiskImageResponseOutput
}

// OS disk image.
type OsDiskImageResponseArgs struct {
	// OS operating system type.
	OperatingSystem pulumi.StringInput `pulumi:"operatingSystem"`
	// SAS key for source blob.
	SourceBlobSasUri pulumi.StringInput `pulumi:"sourceBlobSasUri"`
}

func (OsDiskImageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsDiskImageResponse)(nil)).Elem()
}

func (i OsDiskImageResponseArgs) ToOsDiskImageResponseOutput() OsDiskImageResponseOutput {
	return i.ToOsDiskImageResponseOutputWithContext(context.Background())
}

func (i OsDiskImageResponseArgs) ToOsDiskImageResponseOutputWithContext(ctx context.Context) OsDiskImageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsDiskImageResponseOutput)
}

// OS disk image.
type OsDiskImageResponseOutput struct{ *pulumi.OutputState }

func (OsDiskImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsDiskImageResponse)(nil)).Elem()
}

func (o OsDiskImageResponseOutput) ToOsDiskImageResponseOutput() OsDiskImageResponseOutput {
	return o
}

func (o OsDiskImageResponseOutput) ToOsDiskImageResponseOutputWithContext(ctx context.Context) OsDiskImageResponseOutput {
	return o
}

// OS operating system type.
func (o OsDiskImageResponseOutput) OperatingSystem() pulumi.StringOutput {
	return o.ApplyT(func(v OsDiskImageResponse) string { return v.OperatingSystem }).(pulumi.StringOutput)
}

// SAS key for source blob.
func (o OsDiskImageResponseOutput) SourceBlobSasUri() pulumi.StringOutput {
	return o.ApplyT(func(v OsDiskImageResponse) string { return v.SourceBlobSasUri }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DataDiskImageResponseOutput{})
	pulumi.RegisterOutputType(DataDiskImageResponseArrayOutput{})
	pulumi.RegisterOutputType(OsDiskImageResponseOutput{})
}
