// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package azurestack

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Linked Subscription information.
// API Version: 2020-06-01-preview.
type LinkedSubscription struct {
	pulumi.CustomResourceState

	// The status of the remote management connection of the Azure Stack device.
	DeviceConnectionStatus pulumi.StringOutput `pulumi:"deviceConnectionStatus"`
	// The identifier of the Azure Stack device for remote management.
	DeviceId pulumi.StringOutput `pulumi:"deviceId"`
	// The connection state of the Azure Stack device.
	DeviceLinkState pulumi.StringOutput `pulumi:"deviceLinkState"`
	// The object identifier associated with the Azure Stack device connecting to Azure.
	DeviceObjectId pulumi.StringOutput `pulumi:"deviceObjectId"`
	// The entity tag used for optimistic concurrency when modifying the resource.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// The kind of the resource.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// The last remote management connection time for the Azure Stack device connected to the linked subscription resource.
	LastConnectedTime pulumi.StringOutput `pulumi:"lastConnectedTime"`
	// The identifier associated with the device subscription.
	LinkedSubscriptionId pulumi.StringPtrOutput `pulumi:"linkedSubscriptionId"`
	// Location of the resource.
	Location pulumi.StringOutput `pulumi:"location"`
	// Name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The identifier associated with the device registration.
	RegistrationResourceId pulumi.StringPtrOutput `pulumi:"registrationResourceId"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Custom tags for the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Type of Resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewLinkedSubscription registers a new resource with the given unique name, arguments, and options.
func NewLinkedSubscription(ctx *pulumi.Context,
	name string, args *LinkedSubscriptionArgs, opts ...pulumi.ResourceOption) (*LinkedSubscription, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LinkedSubscriptionId == nil {
		return nil, errors.New("invalid value for required argument 'LinkedSubscriptionId'")
	}
	if args.LinkedSubscriptionName == nil {
		return nil, errors.New("invalid value for required argument 'LinkedSubscriptionName'")
	}
	if args.RegistrationResourceId == nil {
		return nil, errors.New("invalid value for required argument 'RegistrationResourceId'")
	}
	if args.ResourceGroup == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroup'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:azurestack/v20200601preview:LinkedSubscription"),
		},
	})
	opts = append(opts, aliases)
	var resource LinkedSubscription
	err := ctx.RegisterResource("azure-nextgen:azurestack:LinkedSubscription", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLinkedSubscription gets an existing LinkedSubscription resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLinkedSubscription(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LinkedSubscriptionState, opts ...pulumi.ResourceOption) (*LinkedSubscription, error) {
	var resource LinkedSubscription
	err := ctx.ReadResource("azure-nextgen:azurestack:LinkedSubscription", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LinkedSubscription resources.
type linkedSubscriptionState struct {
	// The status of the remote management connection of the Azure Stack device.
	DeviceConnectionStatus *string `pulumi:"deviceConnectionStatus"`
	// The identifier of the Azure Stack device for remote management.
	DeviceId *string `pulumi:"deviceId"`
	// The connection state of the Azure Stack device.
	DeviceLinkState *string `pulumi:"deviceLinkState"`
	// The object identifier associated with the Azure Stack device connecting to Azure.
	DeviceObjectId *string `pulumi:"deviceObjectId"`
	// The entity tag used for optimistic concurrency when modifying the resource.
	Etag *string `pulumi:"etag"`
	// The kind of the resource.
	Kind *string `pulumi:"kind"`
	// The last remote management connection time for the Azure Stack device connected to the linked subscription resource.
	LastConnectedTime *string `pulumi:"lastConnectedTime"`
	// The identifier associated with the device subscription.
	LinkedSubscriptionId *string `pulumi:"linkedSubscriptionId"`
	// Location of the resource.
	Location *string `pulumi:"location"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// The identifier associated with the device registration.
	RegistrationResourceId *string `pulumi:"registrationResourceId"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemDataResponse `pulumi:"systemData"`
	// Custom tags for the resource.
	Tags map[string]string `pulumi:"tags"`
	// Type of Resource.
	Type *string `pulumi:"type"`
}

type LinkedSubscriptionState struct {
	// The status of the remote management connection of the Azure Stack device.
	DeviceConnectionStatus pulumi.StringPtrInput
	// The identifier of the Azure Stack device for remote management.
	DeviceId pulumi.StringPtrInput
	// The connection state of the Azure Stack device.
	DeviceLinkState pulumi.StringPtrInput
	// The object identifier associated with the Azure Stack device connecting to Azure.
	DeviceObjectId pulumi.StringPtrInput
	// The entity tag used for optimistic concurrency when modifying the resource.
	Etag pulumi.StringPtrInput
	// The kind of the resource.
	Kind pulumi.StringPtrInput
	// The last remote management connection time for the Azure Stack device connected to the linked subscription resource.
	LastConnectedTime pulumi.StringPtrInput
	// The identifier associated with the device subscription.
	LinkedSubscriptionId pulumi.StringPtrInput
	// Location of the resource.
	Location pulumi.StringPtrInput
	// Name of the resource.
	Name pulumi.StringPtrInput
	// The identifier associated with the device registration.
	RegistrationResourceId pulumi.StringPtrInput
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponsePtrInput
	// Custom tags for the resource.
	Tags pulumi.StringMapInput
	// Type of Resource.
	Type pulumi.StringPtrInput
}

func (LinkedSubscriptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*linkedSubscriptionState)(nil)).Elem()
}

type linkedSubscriptionArgs struct {
	// The identifier associated with the device subscription.
	LinkedSubscriptionId string `pulumi:"linkedSubscriptionId"`
	// Name of the Linked Subscription resource.
	LinkedSubscriptionName string `pulumi:"linkedSubscriptionName"`
	// Location of the resource.
	Location *string `pulumi:"location"`
	// The identifier associated with the device registration.
	RegistrationResourceId string `pulumi:"registrationResourceId"`
	// Name of the resource group.
	ResourceGroup string `pulumi:"resourceGroup"`
}

// The set of arguments for constructing a LinkedSubscription resource.
type LinkedSubscriptionArgs struct {
	// The identifier associated with the device subscription.
	LinkedSubscriptionId pulumi.StringInput
	// Name of the Linked Subscription resource.
	LinkedSubscriptionName pulumi.StringInput
	// Location of the resource.
	Location pulumi.StringPtrInput
	// The identifier associated with the device registration.
	RegistrationResourceId pulumi.StringInput
	// Name of the resource group.
	ResourceGroup pulumi.StringInput
}

func (LinkedSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*linkedSubscriptionArgs)(nil)).Elem()
}

type LinkedSubscriptionInput interface {
	pulumi.Input

	ToLinkedSubscriptionOutput() LinkedSubscriptionOutput
	ToLinkedSubscriptionOutputWithContext(ctx context.Context) LinkedSubscriptionOutput
}

func (*LinkedSubscription) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedSubscription)(nil))
}

func (i *LinkedSubscription) ToLinkedSubscriptionOutput() LinkedSubscriptionOutput {
	return i.ToLinkedSubscriptionOutputWithContext(context.Background())
}

func (i *LinkedSubscription) ToLinkedSubscriptionOutputWithContext(ctx context.Context) LinkedSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedSubscriptionOutput)
}

type LinkedSubscriptionOutput struct {
	*pulumi.OutputState
}

func (LinkedSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedSubscription)(nil))
}

func (o LinkedSubscriptionOutput) ToLinkedSubscriptionOutput() LinkedSubscriptionOutput {
	return o
}

func (o LinkedSubscriptionOutput) ToLinkedSubscriptionOutputWithContext(ctx context.Context) LinkedSubscriptionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(LinkedSubscriptionOutput{})
}
