// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azurestack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Customer subscription.
// API Version: 2017-06-01.
func LookupCustomerSubscription(ctx *pulumi.Context, args *LookupCustomerSubscriptionArgs, opts ...pulumi.InvokeOption) (*LookupCustomerSubscriptionResult, error) {
	var rv LookupCustomerSubscriptionResult
	err := ctx.Invoke("azure-native:azurestack:getCustomerSubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCustomerSubscriptionArgs struct {
	// Name of the product.
	CustomerSubscriptionName string `pulumi:"customerSubscriptionName"`
	// Name of the Azure Stack registration.
	RegistrationName string `pulumi:"registrationName"`
	// Name of the resource group.
	ResourceGroup string `pulumi:"resourceGroup"`
}

// Customer subscription.
type LookupCustomerSubscriptionResult struct {
	// The entity tag used for optimistic concurrency when modifying the resource.
	Etag *string `pulumi:"etag"`
	// ID of the resource.
	Id string `pulumi:"id"`
	// Name of the resource.
	Name string `pulumi:"name"`
	// Tenant Id.
	TenantId *string `pulumi:"tenantId"`
	// Type of Resource.
	Type string `pulumi:"type"`
}

func LookupCustomerSubscriptionOutput(ctx *pulumi.Context, args LookupCustomerSubscriptionOutputArgs, opts ...pulumi.InvokeOption) LookupCustomerSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCustomerSubscriptionResult, error) {
			args := v.(LookupCustomerSubscriptionArgs)
			r, err := LookupCustomerSubscription(ctx, &args, opts...)
			var s LookupCustomerSubscriptionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCustomerSubscriptionResultOutput)
}

type LookupCustomerSubscriptionOutputArgs struct {
	// Name of the product.
	CustomerSubscriptionName pulumi.StringInput `pulumi:"customerSubscriptionName"`
	// Name of the Azure Stack registration.
	RegistrationName pulumi.StringInput `pulumi:"registrationName"`
	// Name of the resource group.
	ResourceGroup pulumi.StringInput `pulumi:"resourceGroup"`
}

func (LookupCustomerSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomerSubscriptionArgs)(nil)).Elem()
}

// Customer subscription.
type LookupCustomerSubscriptionResultOutput struct{ *pulumi.OutputState }

func (LookupCustomerSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomerSubscriptionResult)(nil)).Elem()
}

func (o LookupCustomerSubscriptionResultOutput) ToLookupCustomerSubscriptionResultOutput() LookupCustomerSubscriptionResultOutput {
	return o
}

func (o LookupCustomerSubscriptionResultOutput) ToLookupCustomerSubscriptionResultOutputWithContext(ctx context.Context) LookupCustomerSubscriptionResultOutput {
	return o
}

// The entity tag used for optimistic concurrency when modifying the resource.
func (o LookupCustomerSubscriptionResultOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCustomerSubscriptionResult) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// ID of the resource.
func (o LookupCustomerSubscriptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomerSubscriptionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the resource.
func (o LookupCustomerSubscriptionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomerSubscriptionResult) string { return v.Name }).(pulumi.StringOutput)
}

// Tenant Id.
func (o LookupCustomerSubscriptionResultOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCustomerSubscriptionResult) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Type of Resource.
func (o LookupCustomerSubscriptionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomerSubscriptionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCustomerSubscriptionResultOutput{})
}
