// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20151101

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Policy definition.
type PolicyDefinition struct {
	pulumi.CustomResourceState

	// Gets or sets the policy definition name.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Gets or sets the policy definition properties.
	Properties PolicyDefinitionPropertiesResponseOutput `pulumi:"properties"`
}

// NewPolicyDefinition registers a new resource with the given unique name, arguments, and options.
func NewPolicyDefinition(ctx *pulumi.Context,
	name string, args *PolicyDefinitionArgs, opts ...pulumi.ResourceOption) (*PolicyDefinition, error) {
	if args == nil || args.PolicyDefinitionName == nil {
		return nil, errors.New("missing required argument 'PolicyDefinitionName'")
	}
	if args == nil {
		args = &PolicyDefinitionArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:authorization/latest:PolicyDefinition"),
		},
		{
			Type: pulumi.String("azure-nextgen:authorization/v20151001preview:PolicyDefinition"),
		},
		{
			Type: pulumi.String("azure-nextgen:authorization/v20160401:PolicyDefinition"),
		},
		{
			Type: pulumi.String("azure-nextgen:authorization/v20161201:PolicyDefinition"),
		},
		{
			Type: pulumi.String("azure-nextgen:authorization/v20180301:PolicyDefinition"),
		},
		{
			Type: pulumi.String("azure-nextgen:authorization/v20180501:PolicyDefinition"),
		},
		{
			Type: pulumi.String("azure-nextgen:authorization/v20190101:PolicyDefinition"),
		},
		{
			Type: pulumi.String("azure-nextgen:authorization/v20190601:PolicyDefinition"),
		},
		{
			Type: pulumi.String("azure-nextgen:authorization/v20190901:PolicyDefinition"),
		},
		{
			Type: pulumi.String("azure-nextgen:authorization/v20200301:PolicyDefinition"),
		},
	})
	opts = append(opts, aliases)
	var resource PolicyDefinition
	err := ctx.RegisterResource("azure-nextgen:authorization/v20151101:PolicyDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyDefinition gets an existing PolicyDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyDefinitionState, opts ...pulumi.ResourceOption) (*PolicyDefinition, error) {
	var resource PolicyDefinition
	err := ctx.ReadResource("azure-nextgen:authorization/v20151101:PolicyDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyDefinition resources.
type policyDefinitionState struct {
	// Gets or sets the policy definition name.
	Name *string `pulumi:"name"`
	// Gets or sets the policy definition properties.
	Properties *PolicyDefinitionPropertiesResponse `pulumi:"properties"`
}

type PolicyDefinitionState struct {
	// Gets or sets the policy definition name.
	Name pulumi.StringPtrInput
	// Gets or sets the policy definition properties.
	Properties PolicyDefinitionPropertiesResponsePtrInput
}

func (PolicyDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyDefinitionState)(nil)).Elem()
}

type policyDefinitionArgs struct {
	// Gets or sets the policy definition name.
	Name *string `pulumi:"name"`
	// The policy definition name.
	PolicyDefinitionName string `pulumi:"policyDefinitionName"`
	// Gets or sets the policy definition properties.
	Properties *PolicyDefinitionProperties `pulumi:"properties"`
}

// The set of arguments for constructing a PolicyDefinition resource.
type PolicyDefinitionArgs struct {
	// Gets or sets the policy definition name.
	Name pulumi.StringPtrInput
	// The policy definition name.
	PolicyDefinitionName pulumi.StringInput
	// Gets or sets the policy definition properties.
	Properties PolicyDefinitionPropertiesPtrInput
}

func (PolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyDefinitionArgs)(nil)).Elem()
}
