// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package authorization

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccessReviewInstance struct {
	EndDateTime   *string `pulumi:"endDateTime"`
	StartDateTime *string `pulumi:"startDateTime"`
}

// AccessReviewInstanceInput is an input type that accepts AccessReviewInstanceArgs and AccessReviewInstanceOutput values.
// You can construct a concrete instance of `AccessReviewInstanceInput` via:
//
//          AccessReviewInstanceArgs{...}
type AccessReviewInstanceInput interface {
	pulumi.Input

	ToAccessReviewInstanceOutput() AccessReviewInstanceOutput
	ToAccessReviewInstanceOutputWithContext(context.Context) AccessReviewInstanceOutput
}

type AccessReviewInstanceArgs struct {
	EndDateTime   pulumi.StringPtrInput `pulumi:"endDateTime"`
	StartDateTime pulumi.StringPtrInput `pulumi:"startDateTime"`
}

func (AccessReviewInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessReviewInstance)(nil)).Elem()
}

func (i AccessReviewInstanceArgs) ToAccessReviewInstanceOutput() AccessReviewInstanceOutput {
	return i.ToAccessReviewInstanceOutputWithContext(context.Background())
}

func (i AccessReviewInstanceArgs) ToAccessReviewInstanceOutputWithContext(ctx context.Context) AccessReviewInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessReviewInstanceOutput)
}

// AccessReviewInstanceArrayInput is an input type that accepts AccessReviewInstanceArray and AccessReviewInstanceArrayOutput values.
// You can construct a concrete instance of `AccessReviewInstanceArrayInput` via:
//
//          AccessReviewInstanceArray{ AccessReviewInstanceArgs{...} }
type AccessReviewInstanceArrayInput interface {
	pulumi.Input

	ToAccessReviewInstanceArrayOutput() AccessReviewInstanceArrayOutput
	ToAccessReviewInstanceArrayOutputWithContext(context.Context) AccessReviewInstanceArrayOutput
}

type AccessReviewInstanceArray []AccessReviewInstanceInput

func (AccessReviewInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessReviewInstance)(nil)).Elem()
}

func (i AccessReviewInstanceArray) ToAccessReviewInstanceArrayOutput() AccessReviewInstanceArrayOutput {
	return i.ToAccessReviewInstanceArrayOutputWithContext(context.Background())
}

func (i AccessReviewInstanceArray) ToAccessReviewInstanceArrayOutputWithContext(ctx context.Context) AccessReviewInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessReviewInstanceArrayOutput)
}

type AccessReviewInstanceOutput struct{ *pulumi.OutputState }

func (AccessReviewInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessReviewInstance)(nil)).Elem()
}

func (o AccessReviewInstanceOutput) ToAccessReviewInstanceOutput() AccessReviewInstanceOutput {
	return o
}

func (o AccessReviewInstanceOutput) ToAccessReviewInstanceOutputWithContext(ctx context.Context) AccessReviewInstanceOutput {
	return o
}

func (o AccessReviewInstanceOutput) EndDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessReviewInstance) *string { return v.EndDateTime }).(pulumi.StringPtrOutput)
}

func (o AccessReviewInstanceOutput) StartDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessReviewInstance) *string { return v.StartDateTime }).(pulumi.StringPtrOutput)
}

type AccessReviewInstanceArrayOutput struct{ *pulumi.OutputState }

func (AccessReviewInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessReviewInstance)(nil)).Elem()
}

func (o AccessReviewInstanceArrayOutput) ToAccessReviewInstanceArrayOutput() AccessReviewInstanceArrayOutput {
	return o
}

func (o AccessReviewInstanceArrayOutput) ToAccessReviewInstanceArrayOutputWithContext(ctx context.Context) AccessReviewInstanceArrayOutput {
	return o
}

func (o AccessReviewInstanceArrayOutput) Index(i pulumi.IntInput) AccessReviewInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessReviewInstance {
		return vs[0].([]AccessReviewInstance)[vs[1].(int)]
	}).(AccessReviewInstanceOutput)
}

type AccessReviewInstanceResponse struct {
	EndDateTime   *string `pulumi:"endDateTime"`
	Id            string  `pulumi:"id"`
	Name          string  `pulumi:"name"`
	StartDateTime *string `pulumi:"startDateTime"`
	Status        string  `pulumi:"status"`
	Type          string  `pulumi:"type"`
}

// AccessReviewInstanceResponseInput is an input type that accepts AccessReviewInstanceResponseArgs and AccessReviewInstanceResponseOutput values.
// You can construct a concrete instance of `AccessReviewInstanceResponseInput` via:
//
//          AccessReviewInstanceResponseArgs{...}
type AccessReviewInstanceResponseInput interface {
	pulumi.Input

	ToAccessReviewInstanceResponseOutput() AccessReviewInstanceResponseOutput
	ToAccessReviewInstanceResponseOutputWithContext(context.Context) AccessReviewInstanceResponseOutput
}

type AccessReviewInstanceResponseArgs struct {
	EndDateTime   pulumi.StringPtrInput `pulumi:"endDateTime"`
	Id            pulumi.StringInput    `pulumi:"id"`
	Name          pulumi.StringInput    `pulumi:"name"`
	StartDateTime pulumi.StringPtrInput `pulumi:"startDateTime"`
	Status        pulumi.StringInput    `pulumi:"status"`
	Type          pulumi.StringInput    `pulumi:"type"`
}

func (AccessReviewInstanceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessReviewInstanceResponse)(nil)).Elem()
}

func (i AccessReviewInstanceResponseArgs) ToAccessReviewInstanceResponseOutput() AccessReviewInstanceResponseOutput {
	return i.ToAccessReviewInstanceResponseOutputWithContext(context.Background())
}

func (i AccessReviewInstanceResponseArgs) ToAccessReviewInstanceResponseOutputWithContext(ctx context.Context) AccessReviewInstanceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessReviewInstanceResponseOutput)
}

// AccessReviewInstanceResponseArrayInput is an input type that accepts AccessReviewInstanceResponseArray and AccessReviewInstanceResponseArrayOutput values.
// You can construct a concrete instance of `AccessReviewInstanceResponseArrayInput` via:
//
//          AccessReviewInstanceResponseArray{ AccessReviewInstanceResponseArgs{...} }
type AccessReviewInstanceResponseArrayInput interface {
	pulumi.Input

	ToAccessReviewInstanceResponseArrayOutput() AccessReviewInstanceResponseArrayOutput
	ToAccessReviewInstanceResponseArrayOutputWithContext(context.Context) AccessReviewInstanceResponseArrayOutput
}

type AccessReviewInstanceResponseArray []AccessReviewInstanceResponseInput

func (AccessReviewInstanceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessReviewInstanceResponse)(nil)).Elem()
}

func (i AccessReviewInstanceResponseArray) ToAccessReviewInstanceResponseArrayOutput() AccessReviewInstanceResponseArrayOutput {
	return i.ToAccessReviewInstanceResponseArrayOutputWithContext(context.Background())
}

func (i AccessReviewInstanceResponseArray) ToAccessReviewInstanceResponseArrayOutputWithContext(ctx context.Context) AccessReviewInstanceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessReviewInstanceResponseArrayOutput)
}

type AccessReviewInstanceResponseOutput struct{ *pulumi.OutputState }

func (AccessReviewInstanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessReviewInstanceResponse)(nil)).Elem()
}

func (o AccessReviewInstanceResponseOutput) ToAccessReviewInstanceResponseOutput() AccessReviewInstanceResponseOutput {
	return o
}

func (o AccessReviewInstanceResponseOutput) ToAccessReviewInstanceResponseOutputWithContext(ctx context.Context) AccessReviewInstanceResponseOutput {
	return o
}

func (o AccessReviewInstanceResponseOutput) EndDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessReviewInstanceResponse) *string { return v.EndDateTime }).(pulumi.StringPtrOutput)
}

func (o AccessReviewInstanceResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AccessReviewInstanceResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o AccessReviewInstanceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccessReviewInstanceResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o AccessReviewInstanceResponseOutput) StartDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessReviewInstanceResponse) *string { return v.StartDateTime }).(pulumi.StringPtrOutput)
}

func (o AccessReviewInstanceResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v AccessReviewInstanceResponse) string { return v.Status }).(pulumi.StringOutput)
}

func (o AccessReviewInstanceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccessReviewInstanceResponse) string { return v.Type }).(pulumi.StringOutput)
}

type AccessReviewInstanceResponseArrayOutput struct{ *pulumi.OutputState }

func (AccessReviewInstanceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessReviewInstanceResponse)(nil)).Elem()
}

func (o AccessReviewInstanceResponseArrayOutput) ToAccessReviewInstanceResponseArrayOutput() AccessReviewInstanceResponseArrayOutput {
	return o
}

func (o AccessReviewInstanceResponseArrayOutput) ToAccessReviewInstanceResponseArrayOutputWithContext(ctx context.Context) AccessReviewInstanceResponseArrayOutput {
	return o
}

func (o AccessReviewInstanceResponseArrayOutput) Index(i pulumi.IntInput) AccessReviewInstanceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessReviewInstanceResponse {
		return vs[0].([]AccessReviewInstanceResponse)[vs[1].(int)]
	}).(AccessReviewInstanceResponseOutput)
}

type AccessReviewReviewer struct {
	PrincipalId *string `pulumi:"principalId"`
}

// AccessReviewReviewerInput is an input type that accepts AccessReviewReviewerArgs and AccessReviewReviewerOutput values.
// You can construct a concrete instance of `AccessReviewReviewerInput` via:
//
//          AccessReviewReviewerArgs{...}
type AccessReviewReviewerInput interface {
	pulumi.Input

	ToAccessReviewReviewerOutput() AccessReviewReviewerOutput
	ToAccessReviewReviewerOutputWithContext(context.Context) AccessReviewReviewerOutput
}

type AccessReviewReviewerArgs struct {
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
}

func (AccessReviewReviewerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessReviewReviewer)(nil)).Elem()
}

func (i AccessReviewReviewerArgs) ToAccessReviewReviewerOutput() AccessReviewReviewerOutput {
	return i.ToAccessReviewReviewerOutputWithContext(context.Background())
}

func (i AccessReviewReviewerArgs) ToAccessReviewReviewerOutputWithContext(ctx context.Context) AccessReviewReviewerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessReviewReviewerOutput)
}

// AccessReviewReviewerArrayInput is an input type that accepts AccessReviewReviewerArray and AccessReviewReviewerArrayOutput values.
// You can construct a concrete instance of `AccessReviewReviewerArrayInput` via:
//
//          AccessReviewReviewerArray{ AccessReviewReviewerArgs{...} }
type AccessReviewReviewerArrayInput interface {
	pulumi.Input

	ToAccessReviewReviewerArrayOutput() AccessReviewReviewerArrayOutput
	ToAccessReviewReviewerArrayOutputWithContext(context.Context) AccessReviewReviewerArrayOutput
}

type AccessReviewReviewerArray []AccessReviewReviewerInput

func (AccessReviewReviewerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessReviewReviewer)(nil)).Elem()
}

func (i AccessReviewReviewerArray) ToAccessReviewReviewerArrayOutput() AccessReviewReviewerArrayOutput {
	return i.ToAccessReviewReviewerArrayOutputWithContext(context.Background())
}

func (i AccessReviewReviewerArray) ToAccessReviewReviewerArrayOutputWithContext(ctx context.Context) AccessReviewReviewerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessReviewReviewerArrayOutput)
}

type AccessReviewReviewerOutput struct{ *pulumi.OutputState }

func (AccessReviewReviewerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessReviewReviewer)(nil)).Elem()
}

func (o AccessReviewReviewerOutput) ToAccessReviewReviewerOutput() AccessReviewReviewerOutput {
	return o
}

func (o AccessReviewReviewerOutput) ToAccessReviewReviewerOutputWithContext(ctx context.Context) AccessReviewReviewerOutput {
	return o
}

func (o AccessReviewReviewerOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessReviewReviewer) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type AccessReviewReviewerArrayOutput struct{ *pulumi.OutputState }

func (AccessReviewReviewerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessReviewReviewer)(nil)).Elem()
}

func (o AccessReviewReviewerArrayOutput) ToAccessReviewReviewerArrayOutput() AccessReviewReviewerArrayOutput {
	return o
}

func (o AccessReviewReviewerArrayOutput) ToAccessReviewReviewerArrayOutputWithContext(ctx context.Context) AccessReviewReviewerArrayOutput {
	return o
}

func (o AccessReviewReviewerArrayOutput) Index(i pulumi.IntInput) AccessReviewReviewerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessReviewReviewer {
		return vs[0].([]AccessReviewReviewer)[vs[1].(int)]
	}).(AccessReviewReviewerOutput)
}

type AccessReviewReviewerResponse struct {
	PrincipalId   *string `pulumi:"principalId"`
	PrincipalType string  `pulumi:"principalType"`
}

// AccessReviewReviewerResponseInput is an input type that accepts AccessReviewReviewerResponseArgs and AccessReviewReviewerResponseOutput values.
// You can construct a concrete instance of `AccessReviewReviewerResponseInput` via:
//
//          AccessReviewReviewerResponseArgs{...}
type AccessReviewReviewerResponseInput interface {
	pulumi.Input

	ToAccessReviewReviewerResponseOutput() AccessReviewReviewerResponseOutput
	ToAccessReviewReviewerResponseOutputWithContext(context.Context) AccessReviewReviewerResponseOutput
}

type AccessReviewReviewerResponseArgs struct {
	PrincipalId   pulumi.StringPtrInput `pulumi:"principalId"`
	PrincipalType pulumi.StringInput    `pulumi:"principalType"`
}

func (AccessReviewReviewerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessReviewReviewerResponse)(nil)).Elem()
}

func (i AccessReviewReviewerResponseArgs) ToAccessReviewReviewerResponseOutput() AccessReviewReviewerResponseOutput {
	return i.ToAccessReviewReviewerResponseOutputWithContext(context.Background())
}

func (i AccessReviewReviewerResponseArgs) ToAccessReviewReviewerResponseOutputWithContext(ctx context.Context) AccessReviewReviewerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessReviewReviewerResponseOutput)
}

// AccessReviewReviewerResponseArrayInput is an input type that accepts AccessReviewReviewerResponseArray and AccessReviewReviewerResponseArrayOutput values.
// You can construct a concrete instance of `AccessReviewReviewerResponseArrayInput` via:
//
//          AccessReviewReviewerResponseArray{ AccessReviewReviewerResponseArgs{...} }
type AccessReviewReviewerResponseArrayInput interface {
	pulumi.Input

	ToAccessReviewReviewerResponseArrayOutput() AccessReviewReviewerResponseArrayOutput
	ToAccessReviewReviewerResponseArrayOutputWithContext(context.Context) AccessReviewReviewerResponseArrayOutput
}

type AccessReviewReviewerResponseArray []AccessReviewReviewerResponseInput

func (AccessReviewReviewerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessReviewReviewerResponse)(nil)).Elem()
}

func (i AccessReviewReviewerResponseArray) ToAccessReviewReviewerResponseArrayOutput() AccessReviewReviewerResponseArrayOutput {
	return i.ToAccessReviewReviewerResponseArrayOutputWithContext(context.Background())
}

func (i AccessReviewReviewerResponseArray) ToAccessReviewReviewerResponseArrayOutputWithContext(ctx context.Context) AccessReviewReviewerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessReviewReviewerResponseArrayOutput)
}

type AccessReviewReviewerResponseOutput struct{ *pulumi.OutputState }

func (AccessReviewReviewerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessReviewReviewerResponse)(nil)).Elem()
}

func (o AccessReviewReviewerResponseOutput) ToAccessReviewReviewerResponseOutput() AccessReviewReviewerResponseOutput {
	return o
}

func (o AccessReviewReviewerResponseOutput) ToAccessReviewReviewerResponseOutputWithContext(ctx context.Context) AccessReviewReviewerResponseOutput {
	return o
}

func (o AccessReviewReviewerResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessReviewReviewerResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

func (o AccessReviewReviewerResponseOutput) PrincipalType() pulumi.StringOutput {
	return o.ApplyT(func(v AccessReviewReviewerResponse) string { return v.PrincipalType }).(pulumi.StringOutput)
}

type AccessReviewReviewerResponseArrayOutput struct{ *pulumi.OutputState }

func (AccessReviewReviewerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessReviewReviewerResponse)(nil)).Elem()
}

func (o AccessReviewReviewerResponseArrayOutput) ToAccessReviewReviewerResponseArrayOutput() AccessReviewReviewerResponseArrayOutput {
	return o
}

func (o AccessReviewReviewerResponseArrayOutput) ToAccessReviewReviewerResponseArrayOutputWithContext(ctx context.Context) AccessReviewReviewerResponseArrayOutput {
	return o
}

func (o AccessReviewReviewerResponseArrayOutput) Index(i pulumi.IntInput) AccessReviewReviewerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessReviewReviewerResponse {
		return vs[0].([]AccessReviewReviewerResponse)[vs[1].(int)]
	}).(AccessReviewReviewerResponseOutput)
}

type Identity struct {
	Type *ResourceIdentityType `pulumi:"type"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//          IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

type IdentityArgs struct {
	Type ResourceIdentityTypePtrInput `pulumi:"type"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//          IdentityArgs{...}
//
//  or:
//
//          nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

func (o IdentityOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v Identity) *ResourceIdentityType { return v.Type }).(ResourceIdentityTypePtrOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity {
		if v != nil {
			return *v
		}
		var ret Identity
		return ret
	}).(IdentityOutput)
}

func (o IdentityPtrOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v *Identity) *ResourceIdentityType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(ResourceIdentityTypePtrOutput)
}

type IdentityResponse struct {
	PrincipalId string  `pulumi:"principalId"`
	TenantId    string  `pulumi:"tenantId"`
	Type        *string `pulumi:"type"`
}

// IdentityResponseInput is an input type that accepts IdentityResponseArgs and IdentityResponseOutput values.
// You can construct a concrete instance of `IdentityResponseInput` via:
//
//          IdentityResponseArgs{...}
type IdentityResponseInput interface {
	pulumi.Input

	ToIdentityResponseOutput() IdentityResponseOutput
	ToIdentityResponseOutputWithContext(context.Context) IdentityResponseOutput
}

type IdentityResponseArgs struct {
	PrincipalId pulumi.StringInput    `pulumi:"principalId"`
	TenantId    pulumi.StringInput    `pulumi:"tenantId"`
	Type        pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (i IdentityResponseArgs) ToIdentityResponseOutput() IdentityResponseOutput {
	return i.ToIdentityResponseOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput)
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput).ToIdentityResponsePtrOutputWithContext(ctx)
}

// IdentityResponsePtrInput is an input type that accepts IdentityResponseArgs, IdentityResponsePtr and IdentityResponsePtrOutput values.
// You can construct a concrete instance of `IdentityResponsePtrInput` via:
//
//          IdentityResponseArgs{...}
//
//  or:
//
//          nil
type IdentityResponsePtrInput interface {
	pulumi.Input

	ToIdentityResponsePtrOutput() IdentityResponsePtrOutput
	ToIdentityResponsePtrOutputWithContext(context.Context) IdentityResponsePtrOutput
}

type identityResponsePtrType IdentityResponseArgs

func IdentityResponsePtr(v *IdentityResponseArgs) IdentityResponsePtrInput {
	return (*identityResponsePtrType)(v)
}

func (*identityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponsePtrOutput)
}

type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityResponse) *IdentityResponse {
		return &v
	}).(IdentityResponsePtrOutput)
}

func (o IdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

func (o IdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

func (o IdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse {
		if v != nil {
			return *v
		}
		var ret IdentityResponse
		return ret
	}).(IdentityResponseOutput)
}

func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ManagementLockOwner struct {
	ApplicationId *string `pulumi:"applicationId"`
}

// ManagementLockOwnerInput is an input type that accepts ManagementLockOwnerArgs and ManagementLockOwnerOutput values.
// You can construct a concrete instance of `ManagementLockOwnerInput` via:
//
//          ManagementLockOwnerArgs{...}
type ManagementLockOwnerInput interface {
	pulumi.Input

	ToManagementLockOwnerOutput() ManagementLockOwnerOutput
	ToManagementLockOwnerOutputWithContext(context.Context) ManagementLockOwnerOutput
}

type ManagementLockOwnerArgs struct {
	ApplicationId pulumi.StringPtrInput `pulumi:"applicationId"`
}

func (ManagementLockOwnerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementLockOwner)(nil)).Elem()
}

func (i ManagementLockOwnerArgs) ToManagementLockOwnerOutput() ManagementLockOwnerOutput {
	return i.ToManagementLockOwnerOutputWithContext(context.Background())
}

func (i ManagementLockOwnerArgs) ToManagementLockOwnerOutputWithContext(ctx context.Context) ManagementLockOwnerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementLockOwnerOutput)
}

// ManagementLockOwnerArrayInput is an input type that accepts ManagementLockOwnerArray and ManagementLockOwnerArrayOutput values.
// You can construct a concrete instance of `ManagementLockOwnerArrayInput` via:
//
//          ManagementLockOwnerArray{ ManagementLockOwnerArgs{...} }
type ManagementLockOwnerArrayInput interface {
	pulumi.Input

	ToManagementLockOwnerArrayOutput() ManagementLockOwnerArrayOutput
	ToManagementLockOwnerArrayOutputWithContext(context.Context) ManagementLockOwnerArrayOutput
}

type ManagementLockOwnerArray []ManagementLockOwnerInput

func (ManagementLockOwnerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementLockOwner)(nil)).Elem()
}

func (i ManagementLockOwnerArray) ToManagementLockOwnerArrayOutput() ManagementLockOwnerArrayOutput {
	return i.ToManagementLockOwnerArrayOutputWithContext(context.Background())
}

func (i ManagementLockOwnerArray) ToManagementLockOwnerArrayOutputWithContext(ctx context.Context) ManagementLockOwnerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementLockOwnerArrayOutput)
}

type ManagementLockOwnerOutput struct{ *pulumi.OutputState }

func (ManagementLockOwnerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementLockOwner)(nil)).Elem()
}

func (o ManagementLockOwnerOutput) ToManagementLockOwnerOutput() ManagementLockOwnerOutput {
	return o
}

func (o ManagementLockOwnerOutput) ToManagementLockOwnerOutputWithContext(ctx context.Context) ManagementLockOwnerOutput {
	return o
}

func (o ManagementLockOwnerOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementLockOwner) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

type ManagementLockOwnerArrayOutput struct{ *pulumi.OutputState }

func (ManagementLockOwnerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementLockOwner)(nil)).Elem()
}

func (o ManagementLockOwnerArrayOutput) ToManagementLockOwnerArrayOutput() ManagementLockOwnerArrayOutput {
	return o
}

func (o ManagementLockOwnerArrayOutput) ToManagementLockOwnerArrayOutputWithContext(ctx context.Context) ManagementLockOwnerArrayOutput {
	return o
}

func (o ManagementLockOwnerArrayOutput) Index(i pulumi.IntInput) ManagementLockOwnerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementLockOwner {
		return vs[0].([]ManagementLockOwner)[vs[1].(int)]
	}).(ManagementLockOwnerOutput)
}

type ManagementLockOwnerResponse struct {
	ApplicationId *string `pulumi:"applicationId"`
}

// ManagementLockOwnerResponseInput is an input type that accepts ManagementLockOwnerResponseArgs and ManagementLockOwnerResponseOutput values.
// You can construct a concrete instance of `ManagementLockOwnerResponseInput` via:
//
//          ManagementLockOwnerResponseArgs{...}
type ManagementLockOwnerResponseInput interface {
	pulumi.Input

	ToManagementLockOwnerResponseOutput() ManagementLockOwnerResponseOutput
	ToManagementLockOwnerResponseOutputWithContext(context.Context) ManagementLockOwnerResponseOutput
}

type ManagementLockOwnerResponseArgs struct {
	ApplicationId pulumi.StringPtrInput `pulumi:"applicationId"`
}

func (ManagementLockOwnerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementLockOwnerResponse)(nil)).Elem()
}

func (i ManagementLockOwnerResponseArgs) ToManagementLockOwnerResponseOutput() ManagementLockOwnerResponseOutput {
	return i.ToManagementLockOwnerResponseOutputWithContext(context.Background())
}

func (i ManagementLockOwnerResponseArgs) ToManagementLockOwnerResponseOutputWithContext(ctx context.Context) ManagementLockOwnerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementLockOwnerResponseOutput)
}

// ManagementLockOwnerResponseArrayInput is an input type that accepts ManagementLockOwnerResponseArray and ManagementLockOwnerResponseArrayOutput values.
// You can construct a concrete instance of `ManagementLockOwnerResponseArrayInput` via:
//
//          ManagementLockOwnerResponseArray{ ManagementLockOwnerResponseArgs{...} }
type ManagementLockOwnerResponseArrayInput interface {
	pulumi.Input

	ToManagementLockOwnerResponseArrayOutput() ManagementLockOwnerResponseArrayOutput
	ToManagementLockOwnerResponseArrayOutputWithContext(context.Context) ManagementLockOwnerResponseArrayOutput
}

type ManagementLockOwnerResponseArray []ManagementLockOwnerResponseInput

func (ManagementLockOwnerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementLockOwnerResponse)(nil)).Elem()
}

func (i ManagementLockOwnerResponseArray) ToManagementLockOwnerResponseArrayOutput() ManagementLockOwnerResponseArrayOutput {
	return i.ToManagementLockOwnerResponseArrayOutputWithContext(context.Background())
}

func (i ManagementLockOwnerResponseArray) ToManagementLockOwnerResponseArrayOutputWithContext(ctx context.Context) ManagementLockOwnerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementLockOwnerResponseArrayOutput)
}

type ManagementLockOwnerResponseOutput struct{ *pulumi.OutputState }

func (ManagementLockOwnerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementLockOwnerResponse)(nil)).Elem()
}

func (o ManagementLockOwnerResponseOutput) ToManagementLockOwnerResponseOutput() ManagementLockOwnerResponseOutput {
	return o
}

func (o ManagementLockOwnerResponseOutput) ToManagementLockOwnerResponseOutputWithContext(ctx context.Context) ManagementLockOwnerResponseOutput {
	return o
}

func (o ManagementLockOwnerResponseOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementLockOwnerResponse) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

type ManagementLockOwnerResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagementLockOwnerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementLockOwnerResponse)(nil)).Elem()
}

func (o ManagementLockOwnerResponseArrayOutput) ToManagementLockOwnerResponseArrayOutput() ManagementLockOwnerResponseArrayOutput {
	return o
}

func (o ManagementLockOwnerResponseArrayOutput) ToManagementLockOwnerResponseArrayOutputWithContext(ctx context.Context) ManagementLockOwnerResponseArrayOutput {
	return o
}

func (o ManagementLockOwnerResponseArrayOutput) Index(i pulumi.IntInput) ManagementLockOwnerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementLockOwnerResponse {
		return vs[0].([]ManagementLockOwnerResponse)[vs[1].(int)]
	}).(ManagementLockOwnerResponseOutput)
}

type NonComplianceMessage struct {
	Message                     string  `pulumi:"message"`
	PolicyDefinitionReferenceId *string `pulumi:"policyDefinitionReferenceId"`
}

// NonComplianceMessageInput is an input type that accepts NonComplianceMessageArgs and NonComplianceMessageOutput values.
// You can construct a concrete instance of `NonComplianceMessageInput` via:
//
//          NonComplianceMessageArgs{...}
type NonComplianceMessageInput interface {
	pulumi.Input

	ToNonComplianceMessageOutput() NonComplianceMessageOutput
	ToNonComplianceMessageOutputWithContext(context.Context) NonComplianceMessageOutput
}

type NonComplianceMessageArgs struct {
	Message                     pulumi.StringInput    `pulumi:"message"`
	PolicyDefinitionReferenceId pulumi.StringPtrInput `pulumi:"policyDefinitionReferenceId"`
}

func (NonComplianceMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NonComplianceMessage)(nil)).Elem()
}

func (i NonComplianceMessageArgs) ToNonComplianceMessageOutput() NonComplianceMessageOutput {
	return i.ToNonComplianceMessageOutputWithContext(context.Background())
}

func (i NonComplianceMessageArgs) ToNonComplianceMessageOutputWithContext(ctx context.Context) NonComplianceMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NonComplianceMessageOutput)
}

// NonComplianceMessageArrayInput is an input type that accepts NonComplianceMessageArray and NonComplianceMessageArrayOutput values.
// You can construct a concrete instance of `NonComplianceMessageArrayInput` via:
//
//          NonComplianceMessageArray{ NonComplianceMessageArgs{...} }
type NonComplianceMessageArrayInput interface {
	pulumi.Input

	ToNonComplianceMessageArrayOutput() NonComplianceMessageArrayOutput
	ToNonComplianceMessageArrayOutputWithContext(context.Context) NonComplianceMessageArrayOutput
}

type NonComplianceMessageArray []NonComplianceMessageInput

func (NonComplianceMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NonComplianceMessage)(nil)).Elem()
}

func (i NonComplianceMessageArray) ToNonComplianceMessageArrayOutput() NonComplianceMessageArrayOutput {
	return i.ToNonComplianceMessageArrayOutputWithContext(context.Background())
}

func (i NonComplianceMessageArray) ToNonComplianceMessageArrayOutputWithContext(ctx context.Context) NonComplianceMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NonComplianceMessageArrayOutput)
}

type NonComplianceMessageOutput struct{ *pulumi.OutputState }

func (NonComplianceMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NonComplianceMessage)(nil)).Elem()
}

func (o NonComplianceMessageOutput) ToNonComplianceMessageOutput() NonComplianceMessageOutput {
	return o
}

func (o NonComplianceMessageOutput) ToNonComplianceMessageOutputWithContext(ctx context.Context) NonComplianceMessageOutput {
	return o
}

func (o NonComplianceMessageOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v NonComplianceMessage) string { return v.Message }).(pulumi.StringOutput)
}

func (o NonComplianceMessageOutput) PolicyDefinitionReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NonComplianceMessage) *string { return v.PolicyDefinitionReferenceId }).(pulumi.StringPtrOutput)
}

type NonComplianceMessageArrayOutput struct{ *pulumi.OutputState }

func (NonComplianceMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NonComplianceMessage)(nil)).Elem()
}

func (o NonComplianceMessageArrayOutput) ToNonComplianceMessageArrayOutput() NonComplianceMessageArrayOutput {
	return o
}

func (o NonComplianceMessageArrayOutput) ToNonComplianceMessageArrayOutputWithContext(ctx context.Context) NonComplianceMessageArrayOutput {
	return o
}

func (o NonComplianceMessageArrayOutput) Index(i pulumi.IntInput) NonComplianceMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NonComplianceMessage {
		return vs[0].([]NonComplianceMessage)[vs[1].(int)]
	}).(NonComplianceMessageOutput)
}

type NonComplianceMessageResponse struct {
	Message                     string  `pulumi:"message"`
	PolicyDefinitionReferenceId *string `pulumi:"policyDefinitionReferenceId"`
}

// NonComplianceMessageResponseInput is an input type that accepts NonComplianceMessageResponseArgs and NonComplianceMessageResponseOutput values.
// You can construct a concrete instance of `NonComplianceMessageResponseInput` via:
//
//          NonComplianceMessageResponseArgs{...}
type NonComplianceMessageResponseInput interface {
	pulumi.Input

	ToNonComplianceMessageResponseOutput() NonComplianceMessageResponseOutput
	ToNonComplianceMessageResponseOutputWithContext(context.Context) NonComplianceMessageResponseOutput
}

type NonComplianceMessageResponseArgs struct {
	Message                     pulumi.StringInput    `pulumi:"message"`
	PolicyDefinitionReferenceId pulumi.StringPtrInput `pulumi:"policyDefinitionReferenceId"`
}

func (NonComplianceMessageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NonComplianceMessageResponse)(nil)).Elem()
}

func (i NonComplianceMessageResponseArgs) ToNonComplianceMessageResponseOutput() NonComplianceMessageResponseOutput {
	return i.ToNonComplianceMessageResponseOutputWithContext(context.Background())
}

func (i NonComplianceMessageResponseArgs) ToNonComplianceMessageResponseOutputWithContext(ctx context.Context) NonComplianceMessageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NonComplianceMessageResponseOutput)
}

// NonComplianceMessageResponseArrayInput is an input type that accepts NonComplianceMessageResponseArray and NonComplianceMessageResponseArrayOutput values.
// You can construct a concrete instance of `NonComplianceMessageResponseArrayInput` via:
//
//          NonComplianceMessageResponseArray{ NonComplianceMessageResponseArgs{...} }
type NonComplianceMessageResponseArrayInput interface {
	pulumi.Input

	ToNonComplianceMessageResponseArrayOutput() NonComplianceMessageResponseArrayOutput
	ToNonComplianceMessageResponseArrayOutputWithContext(context.Context) NonComplianceMessageResponseArrayOutput
}

type NonComplianceMessageResponseArray []NonComplianceMessageResponseInput

func (NonComplianceMessageResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NonComplianceMessageResponse)(nil)).Elem()
}

func (i NonComplianceMessageResponseArray) ToNonComplianceMessageResponseArrayOutput() NonComplianceMessageResponseArrayOutput {
	return i.ToNonComplianceMessageResponseArrayOutputWithContext(context.Background())
}

func (i NonComplianceMessageResponseArray) ToNonComplianceMessageResponseArrayOutputWithContext(ctx context.Context) NonComplianceMessageResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NonComplianceMessageResponseArrayOutput)
}

type NonComplianceMessageResponseOutput struct{ *pulumi.OutputState }

func (NonComplianceMessageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NonComplianceMessageResponse)(nil)).Elem()
}

func (o NonComplianceMessageResponseOutput) ToNonComplianceMessageResponseOutput() NonComplianceMessageResponseOutput {
	return o
}

func (o NonComplianceMessageResponseOutput) ToNonComplianceMessageResponseOutputWithContext(ctx context.Context) NonComplianceMessageResponseOutput {
	return o
}

func (o NonComplianceMessageResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v NonComplianceMessageResponse) string { return v.Message }).(pulumi.StringOutput)
}

func (o NonComplianceMessageResponseOutput) PolicyDefinitionReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NonComplianceMessageResponse) *string { return v.PolicyDefinitionReferenceId }).(pulumi.StringPtrOutput)
}

type NonComplianceMessageResponseArrayOutput struct{ *pulumi.OutputState }

func (NonComplianceMessageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NonComplianceMessageResponse)(nil)).Elem()
}

func (o NonComplianceMessageResponseArrayOutput) ToNonComplianceMessageResponseArrayOutput() NonComplianceMessageResponseArrayOutput {
	return o
}

func (o NonComplianceMessageResponseArrayOutput) ToNonComplianceMessageResponseArrayOutputWithContext(ctx context.Context) NonComplianceMessageResponseArrayOutput {
	return o
}

func (o NonComplianceMessageResponseArrayOutput) Index(i pulumi.IntInput) NonComplianceMessageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NonComplianceMessageResponse {
		return vs[0].([]NonComplianceMessageResponse)[vs[1].(int)]
	}).(NonComplianceMessageResponseOutput)
}

type ParameterDefinitionsValue struct {
	AllowedValues []interface{}                      `pulumi:"allowedValues"`
	DefaultValue  interface{}                        `pulumi:"defaultValue"`
	Metadata      *ParameterDefinitionsValueMetadata `pulumi:"metadata"`
	Type          *string                            `pulumi:"type"`
}

// ParameterDefinitionsValueInput is an input type that accepts ParameterDefinitionsValueArgs and ParameterDefinitionsValueOutput values.
// You can construct a concrete instance of `ParameterDefinitionsValueInput` via:
//
//          ParameterDefinitionsValueArgs{...}
type ParameterDefinitionsValueInput interface {
	pulumi.Input

	ToParameterDefinitionsValueOutput() ParameterDefinitionsValueOutput
	ToParameterDefinitionsValueOutputWithContext(context.Context) ParameterDefinitionsValueOutput
}

type ParameterDefinitionsValueArgs struct {
	AllowedValues pulumi.ArrayInput                         `pulumi:"allowedValues"`
	DefaultValue  pulumi.Input                              `pulumi:"defaultValue"`
	Metadata      ParameterDefinitionsValueMetadataPtrInput `pulumi:"metadata"`
	Type          pulumi.StringPtrInput                     `pulumi:"type"`
}

func (ParameterDefinitionsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterDefinitionsValue)(nil)).Elem()
}

func (i ParameterDefinitionsValueArgs) ToParameterDefinitionsValueOutput() ParameterDefinitionsValueOutput {
	return i.ToParameterDefinitionsValueOutputWithContext(context.Background())
}

func (i ParameterDefinitionsValueArgs) ToParameterDefinitionsValueOutputWithContext(ctx context.Context) ParameterDefinitionsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueOutput)
}

// ParameterDefinitionsValueMapInput is an input type that accepts ParameterDefinitionsValueMap and ParameterDefinitionsValueMapOutput values.
// You can construct a concrete instance of `ParameterDefinitionsValueMapInput` via:
//
//          ParameterDefinitionsValueMap{ "key": ParameterDefinitionsValueArgs{...} }
type ParameterDefinitionsValueMapInput interface {
	pulumi.Input

	ToParameterDefinitionsValueMapOutput() ParameterDefinitionsValueMapOutput
	ToParameterDefinitionsValueMapOutputWithContext(context.Context) ParameterDefinitionsValueMapOutput
}

type ParameterDefinitionsValueMap map[string]ParameterDefinitionsValueInput

func (ParameterDefinitionsValueMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterDefinitionsValue)(nil)).Elem()
}

func (i ParameterDefinitionsValueMap) ToParameterDefinitionsValueMapOutput() ParameterDefinitionsValueMapOutput {
	return i.ToParameterDefinitionsValueMapOutputWithContext(context.Background())
}

func (i ParameterDefinitionsValueMap) ToParameterDefinitionsValueMapOutputWithContext(ctx context.Context) ParameterDefinitionsValueMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueMapOutput)
}

type ParameterDefinitionsValueOutput struct{ *pulumi.OutputState }

func (ParameterDefinitionsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterDefinitionsValue)(nil)).Elem()
}

func (o ParameterDefinitionsValueOutput) ToParameterDefinitionsValueOutput() ParameterDefinitionsValueOutput {
	return o
}

func (o ParameterDefinitionsValueOutput) ToParameterDefinitionsValueOutputWithContext(ctx context.Context) ParameterDefinitionsValueOutput {
	return o
}

func (o ParameterDefinitionsValueOutput) AllowedValues() pulumi.ArrayOutput {
	return o.ApplyT(func(v ParameterDefinitionsValue) []interface{} { return v.AllowedValues }).(pulumi.ArrayOutput)
}

func (o ParameterDefinitionsValueOutput) DefaultValue() pulumi.AnyOutput {
	return o.ApplyT(func(v ParameterDefinitionsValue) interface{} { return v.DefaultValue }).(pulumi.AnyOutput)
}

func (o ParameterDefinitionsValueOutput) Metadata() ParameterDefinitionsValueMetadataPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValue) *ParameterDefinitionsValueMetadata { return v.Metadata }).(ParameterDefinitionsValueMetadataPtrOutput)
}

func (o ParameterDefinitionsValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ParameterDefinitionsValueMapOutput struct{ *pulumi.OutputState }

func (ParameterDefinitionsValueMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterDefinitionsValue)(nil)).Elem()
}

func (o ParameterDefinitionsValueMapOutput) ToParameterDefinitionsValueMapOutput() ParameterDefinitionsValueMapOutput {
	return o
}

func (o ParameterDefinitionsValueMapOutput) ToParameterDefinitionsValueMapOutputWithContext(ctx context.Context) ParameterDefinitionsValueMapOutput {
	return o
}

func (o ParameterDefinitionsValueMapOutput) MapIndex(k pulumi.StringInput) ParameterDefinitionsValueOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ParameterDefinitionsValue {
		return vs[0].(map[string]ParameterDefinitionsValue)[vs[1].(string)]
	}).(ParameterDefinitionsValueOutput)
}

type ParameterDefinitionsValueMetadata struct {
	AssignPermissions *bool   `pulumi:"assignPermissions"`
	Description       *string `pulumi:"description"`
	DisplayName       *string `pulumi:"displayName"`
	StrongType        *string `pulumi:"strongType"`
}

// ParameterDefinitionsValueMetadataInput is an input type that accepts ParameterDefinitionsValueMetadataArgs and ParameterDefinitionsValueMetadataOutput values.
// You can construct a concrete instance of `ParameterDefinitionsValueMetadataInput` via:
//
//          ParameterDefinitionsValueMetadataArgs{...}
type ParameterDefinitionsValueMetadataInput interface {
	pulumi.Input

	ToParameterDefinitionsValueMetadataOutput() ParameterDefinitionsValueMetadataOutput
	ToParameterDefinitionsValueMetadataOutputWithContext(context.Context) ParameterDefinitionsValueMetadataOutput
}

type ParameterDefinitionsValueMetadataArgs struct {
	AssignPermissions pulumi.BoolPtrInput   `pulumi:"assignPermissions"`
	Description       pulumi.StringPtrInput `pulumi:"description"`
	DisplayName       pulumi.StringPtrInput `pulumi:"displayName"`
	StrongType        pulumi.StringPtrInput `pulumi:"strongType"`
}

func (ParameterDefinitionsValueMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterDefinitionsValueMetadata)(nil)).Elem()
}

func (i ParameterDefinitionsValueMetadataArgs) ToParameterDefinitionsValueMetadataOutput() ParameterDefinitionsValueMetadataOutput {
	return i.ToParameterDefinitionsValueMetadataOutputWithContext(context.Background())
}

func (i ParameterDefinitionsValueMetadataArgs) ToParameterDefinitionsValueMetadataOutputWithContext(ctx context.Context) ParameterDefinitionsValueMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueMetadataOutput)
}

func (i ParameterDefinitionsValueMetadataArgs) ToParameterDefinitionsValueMetadataPtrOutput() ParameterDefinitionsValueMetadataPtrOutput {
	return i.ToParameterDefinitionsValueMetadataPtrOutputWithContext(context.Background())
}

func (i ParameterDefinitionsValueMetadataArgs) ToParameterDefinitionsValueMetadataPtrOutputWithContext(ctx context.Context) ParameterDefinitionsValueMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueMetadataOutput).ToParameterDefinitionsValueMetadataPtrOutputWithContext(ctx)
}

// ParameterDefinitionsValueMetadataPtrInput is an input type that accepts ParameterDefinitionsValueMetadataArgs, ParameterDefinitionsValueMetadataPtr and ParameterDefinitionsValueMetadataPtrOutput values.
// You can construct a concrete instance of `ParameterDefinitionsValueMetadataPtrInput` via:
//
//          ParameterDefinitionsValueMetadataArgs{...}
//
//  or:
//
//          nil
type ParameterDefinitionsValueMetadataPtrInput interface {
	pulumi.Input

	ToParameterDefinitionsValueMetadataPtrOutput() ParameterDefinitionsValueMetadataPtrOutput
	ToParameterDefinitionsValueMetadataPtrOutputWithContext(context.Context) ParameterDefinitionsValueMetadataPtrOutput
}

type parameterDefinitionsValueMetadataPtrType ParameterDefinitionsValueMetadataArgs

func ParameterDefinitionsValueMetadataPtr(v *ParameterDefinitionsValueMetadataArgs) ParameterDefinitionsValueMetadataPtrInput {
	return (*parameterDefinitionsValueMetadataPtrType)(v)
}

func (*parameterDefinitionsValueMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterDefinitionsValueMetadata)(nil)).Elem()
}

func (i *parameterDefinitionsValueMetadataPtrType) ToParameterDefinitionsValueMetadataPtrOutput() ParameterDefinitionsValueMetadataPtrOutput {
	return i.ToParameterDefinitionsValueMetadataPtrOutputWithContext(context.Background())
}

func (i *parameterDefinitionsValueMetadataPtrType) ToParameterDefinitionsValueMetadataPtrOutputWithContext(ctx context.Context) ParameterDefinitionsValueMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueMetadataPtrOutput)
}

type ParameterDefinitionsValueMetadataOutput struct{ *pulumi.OutputState }

func (ParameterDefinitionsValueMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterDefinitionsValueMetadata)(nil)).Elem()
}

func (o ParameterDefinitionsValueMetadataOutput) ToParameterDefinitionsValueMetadataOutput() ParameterDefinitionsValueMetadataOutput {
	return o
}

func (o ParameterDefinitionsValueMetadataOutput) ToParameterDefinitionsValueMetadataOutputWithContext(ctx context.Context) ParameterDefinitionsValueMetadataOutput {
	return o
}

func (o ParameterDefinitionsValueMetadataOutput) ToParameterDefinitionsValueMetadataPtrOutput() ParameterDefinitionsValueMetadataPtrOutput {
	return o.ToParameterDefinitionsValueMetadataPtrOutputWithContext(context.Background())
}

func (o ParameterDefinitionsValueMetadataOutput) ToParameterDefinitionsValueMetadataPtrOutputWithContext(ctx context.Context) ParameterDefinitionsValueMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ParameterDefinitionsValueMetadata) *ParameterDefinitionsValueMetadata {
		return &v
	}).(ParameterDefinitionsValueMetadataPtrOutput)
}

func (o ParameterDefinitionsValueMetadataOutput) AssignPermissions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueMetadata) *bool { return v.AssignPermissions }).(pulumi.BoolPtrOutput)
}

func (o ParameterDefinitionsValueMetadataOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueMetadata) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ParameterDefinitionsValueMetadataOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueMetadata) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o ParameterDefinitionsValueMetadataOutput) StrongType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueMetadata) *string { return v.StrongType }).(pulumi.StringPtrOutput)
}

type ParameterDefinitionsValueMetadataPtrOutput struct{ *pulumi.OutputState }

func (ParameterDefinitionsValueMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterDefinitionsValueMetadata)(nil)).Elem()
}

func (o ParameterDefinitionsValueMetadataPtrOutput) ToParameterDefinitionsValueMetadataPtrOutput() ParameterDefinitionsValueMetadataPtrOutput {
	return o
}

func (o ParameterDefinitionsValueMetadataPtrOutput) ToParameterDefinitionsValueMetadataPtrOutputWithContext(ctx context.Context) ParameterDefinitionsValueMetadataPtrOutput {
	return o
}

func (o ParameterDefinitionsValueMetadataPtrOutput) Elem() ParameterDefinitionsValueMetadataOutput {
	return o.ApplyT(func(v *ParameterDefinitionsValueMetadata) ParameterDefinitionsValueMetadata {
		if v != nil {
			return *v
		}
		var ret ParameterDefinitionsValueMetadata
		return ret
	}).(ParameterDefinitionsValueMetadataOutput)
}

func (o ParameterDefinitionsValueMetadataPtrOutput) AssignPermissions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ParameterDefinitionsValueMetadata) *bool {
		if v == nil {
			return nil
		}
		return v.AssignPermissions
	}).(pulumi.BoolPtrOutput)
}

func (o ParameterDefinitionsValueMetadataPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParameterDefinitionsValueMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ParameterDefinitionsValueMetadataPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParameterDefinitionsValueMetadata) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

func (o ParameterDefinitionsValueMetadataPtrOutput) StrongType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParameterDefinitionsValueMetadata) *string {
		if v == nil {
			return nil
		}
		return v.StrongType
	}).(pulumi.StringPtrOutput)
}

type ParameterDefinitionsValueResponse struct {
	AllowedValues []interface{}                              `pulumi:"allowedValues"`
	DefaultValue  interface{}                                `pulumi:"defaultValue"`
	Metadata      *ParameterDefinitionsValueResponseMetadata `pulumi:"metadata"`
	Type          *string                                    `pulumi:"type"`
}

// ParameterDefinitionsValueResponseInput is an input type that accepts ParameterDefinitionsValueResponseArgs and ParameterDefinitionsValueResponseOutput values.
// You can construct a concrete instance of `ParameterDefinitionsValueResponseInput` via:
//
//          ParameterDefinitionsValueResponseArgs{...}
type ParameterDefinitionsValueResponseInput interface {
	pulumi.Input

	ToParameterDefinitionsValueResponseOutput() ParameterDefinitionsValueResponseOutput
	ToParameterDefinitionsValueResponseOutputWithContext(context.Context) ParameterDefinitionsValueResponseOutput
}

type ParameterDefinitionsValueResponseArgs struct {
	AllowedValues pulumi.ArrayInput                                 `pulumi:"allowedValues"`
	DefaultValue  pulumi.Input                                      `pulumi:"defaultValue"`
	Metadata      ParameterDefinitionsValueResponseMetadataPtrInput `pulumi:"metadata"`
	Type          pulumi.StringPtrInput                             `pulumi:"type"`
}

func (ParameterDefinitionsValueResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterDefinitionsValueResponse)(nil)).Elem()
}

func (i ParameterDefinitionsValueResponseArgs) ToParameterDefinitionsValueResponseOutput() ParameterDefinitionsValueResponseOutput {
	return i.ToParameterDefinitionsValueResponseOutputWithContext(context.Background())
}

func (i ParameterDefinitionsValueResponseArgs) ToParameterDefinitionsValueResponseOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueResponseOutput)
}

// ParameterDefinitionsValueResponseMapInput is an input type that accepts ParameterDefinitionsValueResponseMap and ParameterDefinitionsValueResponseMapOutput values.
// You can construct a concrete instance of `ParameterDefinitionsValueResponseMapInput` via:
//
//          ParameterDefinitionsValueResponseMap{ "key": ParameterDefinitionsValueResponseArgs{...} }
type ParameterDefinitionsValueResponseMapInput interface {
	pulumi.Input

	ToParameterDefinitionsValueResponseMapOutput() ParameterDefinitionsValueResponseMapOutput
	ToParameterDefinitionsValueResponseMapOutputWithContext(context.Context) ParameterDefinitionsValueResponseMapOutput
}

type ParameterDefinitionsValueResponseMap map[string]ParameterDefinitionsValueResponseInput

func (ParameterDefinitionsValueResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterDefinitionsValueResponse)(nil)).Elem()
}

func (i ParameterDefinitionsValueResponseMap) ToParameterDefinitionsValueResponseMapOutput() ParameterDefinitionsValueResponseMapOutput {
	return i.ToParameterDefinitionsValueResponseMapOutputWithContext(context.Background())
}

func (i ParameterDefinitionsValueResponseMap) ToParameterDefinitionsValueResponseMapOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueResponseMapOutput)
}

type ParameterDefinitionsValueResponseOutput struct{ *pulumi.OutputState }

func (ParameterDefinitionsValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterDefinitionsValueResponse)(nil)).Elem()
}

func (o ParameterDefinitionsValueResponseOutput) ToParameterDefinitionsValueResponseOutput() ParameterDefinitionsValueResponseOutput {
	return o
}

func (o ParameterDefinitionsValueResponseOutput) ToParameterDefinitionsValueResponseOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseOutput {
	return o
}

func (o ParameterDefinitionsValueResponseOutput) AllowedValues() pulumi.ArrayOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueResponse) []interface{} { return v.AllowedValues }).(pulumi.ArrayOutput)
}

func (o ParameterDefinitionsValueResponseOutput) DefaultValue() pulumi.AnyOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueResponse) interface{} { return v.DefaultValue }).(pulumi.AnyOutput)
}

func (o ParameterDefinitionsValueResponseOutput) Metadata() ParameterDefinitionsValueResponseMetadataPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueResponse) *ParameterDefinitionsValueResponseMetadata {
		return v.Metadata
	}).(ParameterDefinitionsValueResponseMetadataPtrOutput)
}

func (o ParameterDefinitionsValueResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ParameterDefinitionsValueResponseMapOutput struct{ *pulumi.OutputState }

func (ParameterDefinitionsValueResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterDefinitionsValueResponse)(nil)).Elem()
}

func (o ParameterDefinitionsValueResponseMapOutput) ToParameterDefinitionsValueResponseMapOutput() ParameterDefinitionsValueResponseMapOutput {
	return o
}

func (o ParameterDefinitionsValueResponseMapOutput) ToParameterDefinitionsValueResponseMapOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseMapOutput {
	return o
}

func (o ParameterDefinitionsValueResponseMapOutput) MapIndex(k pulumi.StringInput) ParameterDefinitionsValueResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ParameterDefinitionsValueResponse {
		return vs[0].(map[string]ParameterDefinitionsValueResponse)[vs[1].(string)]
	}).(ParameterDefinitionsValueResponseOutput)
}

type ParameterDefinitionsValueResponseMetadata struct {
	AssignPermissions *bool   `pulumi:"assignPermissions"`
	Description       *string `pulumi:"description"`
	DisplayName       *string `pulumi:"displayName"`
	StrongType        *string `pulumi:"strongType"`
}

// ParameterDefinitionsValueResponseMetadataInput is an input type that accepts ParameterDefinitionsValueResponseMetadataArgs and ParameterDefinitionsValueResponseMetadataOutput values.
// You can construct a concrete instance of `ParameterDefinitionsValueResponseMetadataInput` via:
//
//          ParameterDefinitionsValueResponseMetadataArgs{...}
type ParameterDefinitionsValueResponseMetadataInput interface {
	pulumi.Input

	ToParameterDefinitionsValueResponseMetadataOutput() ParameterDefinitionsValueResponseMetadataOutput
	ToParameterDefinitionsValueResponseMetadataOutputWithContext(context.Context) ParameterDefinitionsValueResponseMetadataOutput
}

type ParameterDefinitionsValueResponseMetadataArgs struct {
	AssignPermissions pulumi.BoolPtrInput   `pulumi:"assignPermissions"`
	Description       pulumi.StringPtrInput `pulumi:"description"`
	DisplayName       pulumi.StringPtrInput `pulumi:"displayName"`
	StrongType        pulumi.StringPtrInput `pulumi:"strongType"`
}

func (ParameterDefinitionsValueResponseMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterDefinitionsValueResponseMetadata)(nil)).Elem()
}

func (i ParameterDefinitionsValueResponseMetadataArgs) ToParameterDefinitionsValueResponseMetadataOutput() ParameterDefinitionsValueResponseMetadataOutput {
	return i.ToParameterDefinitionsValueResponseMetadataOutputWithContext(context.Background())
}

func (i ParameterDefinitionsValueResponseMetadataArgs) ToParameterDefinitionsValueResponseMetadataOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueResponseMetadataOutput)
}

func (i ParameterDefinitionsValueResponseMetadataArgs) ToParameterDefinitionsValueResponseMetadataPtrOutput() ParameterDefinitionsValueResponseMetadataPtrOutput {
	return i.ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(context.Background())
}

func (i ParameterDefinitionsValueResponseMetadataArgs) ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueResponseMetadataOutput).ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(ctx)
}

// ParameterDefinitionsValueResponseMetadataPtrInput is an input type that accepts ParameterDefinitionsValueResponseMetadataArgs, ParameterDefinitionsValueResponseMetadataPtr and ParameterDefinitionsValueResponseMetadataPtrOutput values.
// You can construct a concrete instance of `ParameterDefinitionsValueResponseMetadataPtrInput` via:
//
//          ParameterDefinitionsValueResponseMetadataArgs{...}
//
//  or:
//
//          nil
type ParameterDefinitionsValueResponseMetadataPtrInput interface {
	pulumi.Input

	ToParameterDefinitionsValueResponseMetadataPtrOutput() ParameterDefinitionsValueResponseMetadataPtrOutput
	ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(context.Context) ParameterDefinitionsValueResponseMetadataPtrOutput
}

type parameterDefinitionsValueResponseMetadataPtrType ParameterDefinitionsValueResponseMetadataArgs

func ParameterDefinitionsValueResponseMetadataPtr(v *ParameterDefinitionsValueResponseMetadataArgs) ParameterDefinitionsValueResponseMetadataPtrInput {
	return (*parameterDefinitionsValueResponseMetadataPtrType)(v)
}

func (*parameterDefinitionsValueResponseMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterDefinitionsValueResponseMetadata)(nil)).Elem()
}

func (i *parameterDefinitionsValueResponseMetadataPtrType) ToParameterDefinitionsValueResponseMetadataPtrOutput() ParameterDefinitionsValueResponseMetadataPtrOutput {
	return i.ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(context.Background())
}

func (i *parameterDefinitionsValueResponseMetadataPtrType) ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueResponseMetadataPtrOutput)
}

type ParameterDefinitionsValueResponseMetadataOutput struct{ *pulumi.OutputState }

func (ParameterDefinitionsValueResponseMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterDefinitionsValueResponseMetadata)(nil)).Elem()
}

func (o ParameterDefinitionsValueResponseMetadataOutput) ToParameterDefinitionsValueResponseMetadataOutput() ParameterDefinitionsValueResponseMetadataOutput {
	return o
}

func (o ParameterDefinitionsValueResponseMetadataOutput) ToParameterDefinitionsValueResponseMetadataOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseMetadataOutput {
	return o
}

func (o ParameterDefinitionsValueResponseMetadataOutput) ToParameterDefinitionsValueResponseMetadataPtrOutput() ParameterDefinitionsValueResponseMetadataPtrOutput {
	return o.ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(context.Background())
}

func (o ParameterDefinitionsValueResponseMetadataOutput) ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ParameterDefinitionsValueResponseMetadata) *ParameterDefinitionsValueResponseMetadata {
		return &v
	}).(ParameterDefinitionsValueResponseMetadataPtrOutput)
}

func (o ParameterDefinitionsValueResponseMetadataOutput) AssignPermissions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueResponseMetadata) *bool { return v.AssignPermissions }).(pulumi.BoolPtrOutput)
}

func (o ParameterDefinitionsValueResponseMetadataOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueResponseMetadata) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ParameterDefinitionsValueResponseMetadataOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueResponseMetadata) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o ParameterDefinitionsValueResponseMetadataOutput) StrongType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueResponseMetadata) *string { return v.StrongType }).(pulumi.StringPtrOutput)
}

type ParameterDefinitionsValueResponseMetadataPtrOutput struct{ *pulumi.OutputState }

func (ParameterDefinitionsValueResponseMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterDefinitionsValueResponseMetadata)(nil)).Elem()
}

func (o ParameterDefinitionsValueResponseMetadataPtrOutput) ToParameterDefinitionsValueResponseMetadataPtrOutput() ParameterDefinitionsValueResponseMetadataPtrOutput {
	return o
}

func (o ParameterDefinitionsValueResponseMetadataPtrOutput) ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseMetadataPtrOutput {
	return o
}

func (o ParameterDefinitionsValueResponseMetadataPtrOutput) Elem() ParameterDefinitionsValueResponseMetadataOutput {
	return o.ApplyT(func(v *ParameterDefinitionsValueResponseMetadata) ParameterDefinitionsValueResponseMetadata {
		if v != nil {
			return *v
		}
		var ret ParameterDefinitionsValueResponseMetadata
		return ret
	}).(ParameterDefinitionsValueResponseMetadataOutput)
}

func (o ParameterDefinitionsValueResponseMetadataPtrOutput) AssignPermissions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ParameterDefinitionsValueResponseMetadata) *bool {
		if v == nil {
			return nil
		}
		return v.AssignPermissions
	}).(pulumi.BoolPtrOutput)
}

func (o ParameterDefinitionsValueResponseMetadataPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParameterDefinitionsValueResponseMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ParameterDefinitionsValueResponseMetadataPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParameterDefinitionsValueResponseMetadata) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

func (o ParameterDefinitionsValueResponseMetadataPtrOutput) StrongType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParameterDefinitionsValueResponseMetadata) *string {
		if v == nil {
			return nil
		}
		return v.StrongType
	}).(pulumi.StringPtrOutput)
}

type ParameterValuesValue struct {
	Value interface{} `pulumi:"value"`
}

// ParameterValuesValueInput is an input type that accepts ParameterValuesValueArgs and ParameterValuesValueOutput values.
// You can construct a concrete instance of `ParameterValuesValueInput` via:
//
//          ParameterValuesValueArgs{...}
type ParameterValuesValueInput interface {
	pulumi.Input

	ToParameterValuesValueOutput() ParameterValuesValueOutput
	ToParameterValuesValueOutputWithContext(context.Context) ParameterValuesValueOutput
}

type ParameterValuesValueArgs struct {
	Value pulumi.Input `pulumi:"value"`
}

func (ParameterValuesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterValuesValue)(nil)).Elem()
}

func (i ParameterValuesValueArgs) ToParameterValuesValueOutput() ParameterValuesValueOutput {
	return i.ToParameterValuesValueOutputWithContext(context.Background())
}

func (i ParameterValuesValueArgs) ToParameterValuesValueOutputWithContext(ctx context.Context) ParameterValuesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterValuesValueOutput)
}

// ParameterValuesValueMapInput is an input type that accepts ParameterValuesValueMap and ParameterValuesValueMapOutput values.
// You can construct a concrete instance of `ParameterValuesValueMapInput` via:
//
//          ParameterValuesValueMap{ "key": ParameterValuesValueArgs{...} }
type ParameterValuesValueMapInput interface {
	pulumi.Input

	ToParameterValuesValueMapOutput() ParameterValuesValueMapOutput
	ToParameterValuesValueMapOutputWithContext(context.Context) ParameterValuesValueMapOutput
}

type ParameterValuesValueMap map[string]ParameterValuesValueInput

func (ParameterValuesValueMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterValuesValue)(nil)).Elem()
}

func (i ParameterValuesValueMap) ToParameterValuesValueMapOutput() ParameterValuesValueMapOutput {
	return i.ToParameterValuesValueMapOutputWithContext(context.Background())
}

func (i ParameterValuesValueMap) ToParameterValuesValueMapOutputWithContext(ctx context.Context) ParameterValuesValueMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterValuesValueMapOutput)
}

type ParameterValuesValueOutput struct{ *pulumi.OutputState }

func (ParameterValuesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterValuesValue)(nil)).Elem()
}

func (o ParameterValuesValueOutput) ToParameterValuesValueOutput() ParameterValuesValueOutput {
	return o
}

func (o ParameterValuesValueOutput) ToParameterValuesValueOutputWithContext(ctx context.Context) ParameterValuesValueOutput {
	return o
}

func (o ParameterValuesValueOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v ParameterValuesValue) interface{} { return v.Value }).(pulumi.AnyOutput)
}

type ParameterValuesValueMapOutput struct{ *pulumi.OutputState }

func (ParameterValuesValueMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterValuesValue)(nil)).Elem()
}

func (o ParameterValuesValueMapOutput) ToParameterValuesValueMapOutput() ParameterValuesValueMapOutput {
	return o
}

func (o ParameterValuesValueMapOutput) ToParameterValuesValueMapOutputWithContext(ctx context.Context) ParameterValuesValueMapOutput {
	return o
}

func (o ParameterValuesValueMapOutput) MapIndex(k pulumi.StringInput) ParameterValuesValueOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ParameterValuesValue {
		return vs[0].(map[string]ParameterValuesValue)[vs[1].(string)]
	}).(ParameterValuesValueOutput)
}

type ParameterValuesValueResponse struct {
	Value interface{} `pulumi:"value"`
}

// ParameterValuesValueResponseInput is an input type that accepts ParameterValuesValueResponseArgs and ParameterValuesValueResponseOutput values.
// You can construct a concrete instance of `ParameterValuesValueResponseInput` via:
//
//          ParameterValuesValueResponseArgs{...}
type ParameterValuesValueResponseInput interface {
	pulumi.Input

	ToParameterValuesValueResponseOutput() ParameterValuesValueResponseOutput
	ToParameterValuesValueResponseOutputWithContext(context.Context) ParameterValuesValueResponseOutput
}

type ParameterValuesValueResponseArgs struct {
	Value pulumi.Input `pulumi:"value"`
}

func (ParameterValuesValueResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterValuesValueResponse)(nil)).Elem()
}

func (i ParameterValuesValueResponseArgs) ToParameterValuesValueResponseOutput() ParameterValuesValueResponseOutput {
	return i.ToParameterValuesValueResponseOutputWithContext(context.Background())
}

func (i ParameterValuesValueResponseArgs) ToParameterValuesValueResponseOutputWithContext(ctx context.Context) ParameterValuesValueResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterValuesValueResponseOutput)
}

// ParameterValuesValueResponseMapInput is an input type that accepts ParameterValuesValueResponseMap and ParameterValuesValueResponseMapOutput values.
// You can construct a concrete instance of `ParameterValuesValueResponseMapInput` via:
//
//          ParameterValuesValueResponseMap{ "key": ParameterValuesValueResponseArgs{...} }
type ParameterValuesValueResponseMapInput interface {
	pulumi.Input

	ToParameterValuesValueResponseMapOutput() ParameterValuesValueResponseMapOutput
	ToParameterValuesValueResponseMapOutputWithContext(context.Context) ParameterValuesValueResponseMapOutput
}

type ParameterValuesValueResponseMap map[string]ParameterValuesValueResponseInput

func (ParameterValuesValueResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterValuesValueResponse)(nil)).Elem()
}

func (i ParameterValuesValueResponseMap) ToParameterValuesValueResponseMapOutput() ParameterValuesValueResponseMapOutput {
	return i.ToParameterValuesValueResponseMapOutputWithContext(context.Background())
}

func (i ParameterValuesValueResponseMap) ToParameterValuesValueResponseMapOutputWithContext(ctx context.Context) ParameterValuesValueResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterValuesValueResponseMapOutput)
}

type ParameterValuesValueResponseOutput struct{ *pulumi.OutputState }

func (ParameterValuesValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterValuesValueResponse)(nil)).Elem()
}

func (o ParameterValuesValueResponseOutput) ToParameterValuesValueResponseOutput() ParameterValuesValueResponseOutput {
	return o
}

func (o ParameterValuesValueResponseOutput) ToParameterValuesValueResponseOutputWithContext(ctx context.Context) ParameterValuesValueResponseOutput {
	return o
}

func (o ParameterValuesValueResponseOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v ParameterValuesValueResponse) interface{} { return v.Value }).(pulumi.AnyOutput)
}

type ParameterValuesValueResponseMapOutput struct{ *pulumi.OutputState }

func (ParameterValuesValueResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterValuesValueResponse)(nil)).Elem()
}

func (o ParameterValuesValueResponseMapOutput) ToParameterValuesValueResponseMapOutput() ParameterValuesValueResponseMapOutput {
	return o
}

func (o ParameterValuesValueResponseMapOutput) ToParameterValuesValueResponseMapOutputWithContext(ctx context.Context) ParameterValuesValueResponseMapOutput {
	return o
}

func (o ParameterValuesValueResponseMapOutput) MapIndex(k pulumi.StringInput) ParameterValuesValueResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ParameterValuesValueResponse {
		return vs[0].(map[string]ParameterValuesValueResponse)[vs[1].(string)]
	}).(ParameterValuesValueResponseOutput)
}

type Permission struct {
	Actions        []string `pulumi:"actions"`
	DataActions    []string `pulumi:"dataActions"`
	NotActions     []string `pulumi:"notActions"`
	NotDataActions []string `pulumi:"notDataActions"`
}

// PermissionInput is an input type that accepts PermissionArgs and PermissionOutput values.
// You can construct a concrete instance of `PermissionInput` via:
//
//          PermissionArgs{...}
type PermissionInput interface {
	pulumi.Input

	ToPermissionOutput() PermissionOutput
	ToPermissionOutputWithContext(context.Context) PermissionOutput
}

type PermissionArgs struct {
	Actions        pulumi.StringArrayInput `pulumi:"actions"`
	DataActions    pulumi.StringArrayInput `pulumi:"dataActions"`
	NotActions     pulumi.StringArrayInput `pulumi:"notActions"`
	NotDataActions pulumi.StringArrayInput `pulumi:"notDataActions"`
}

func (PermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Permission)(nil)).Elem()
}

func (i PermissionArgs) ToPermissionOutput() PermissionOutput {
	return i.ToPermissionOutputWithContext(context.Background())
}

func (i PermissionArgs) ToPermissionOutputWithContext(ctx context.Context) PermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionOutput)
}

// PermissionArrayInput is an input type that accepts PermissionArray and PermissionArrayOutput values.
// You can construct a concrete instance of `PermissionArrayInput` via:
//
//          PermissionArray{ PermissionArgs{...} }
type PermissionArrayInput interface {
	pulumi.Input

	ToPermissionArrayOutput() PermissionArrayOutput
	ToPermissionArrayOutputWithContext(context.Context) PermissionArrayOutput
}

type PermissionArray []PermissionInput

func (PermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Permission)(nil)).Elem()
}

func (i PermissionArray) ToPermissionArrayOutput() PermissionArrayOutput {
	return i.ToPermissionArrayOutputWithContext(context.Background())
}

func (i PermissionArray) ToPermissionArrayOutputWithContext(ctx context.Context) PermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionArrayOutput)
}

type PermissionOutput struct{ *pulumi.OutputState }

func (PermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Permission)(nil)).Elem()
}

func (o PermissionOutput) ToPermissionOutput() PermissionOutput {
	return o
}

func (o PermissionOutput) ToPermissionOutputWithContext(ctx context.Context) PermissionOutput {
	return o
}

func (o PermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Permission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o PermissionOutput) DataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Permission) []string { return v.DataActions }).(pulumi.StringArrayOutput)
}

func (o PermissionOutput) NotActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Permission) []string { return v.NotActions }).(pulumi.StringArrayOutput)
}

func (o PermissionOutput) NotDataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Permission) []string { return v.NotDataActions }).(pulumi.StringArrayOutput)
}

type PermissionArrayOutput struct{ *pulumi.OutputState }

func (PermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Permission)(nil)).Elem()
}

func (o PermissionArrayOutput) ToPermissionArrayOutput() PermissionArrayOutput {
	return o
}

func (o PermissionArrayOutput) ToPermissionArrayOutputWithContext(ctx context.Context) PermissionArrayOutput {
	return o
}

func (o PermissionArrayOutput) Index(i pulumi.IntInput) PermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Permission {
		return vs[0].([]Permission)[vs[1].(int)]
	}).(PermissionOutput)
}

type PermissionResponse struct {
	Actions        []string `pulumi:"actions"`
	DataActions    []string `pulumi:"dataActions"`
	NotActions     []string `pulumi:"notActions"`
	NotDataActions []string `pulumi:"notDataActions"`
}

// PermissionResponseInput is an input type that accepts PermissionResponseArgs and PermissionResponseOutput values.
// You can construct a concrete instance of `PermissionResponseInput` via:
//
//          PermissionResponseArgs{...}
type PermissionResponseInput interface {
	pulumi.Input

	ToPermissionResponseOutput() PermissionResponseOutput
	ToPermissionResponseOutputWithContext(context.Context) PermissionResponseOutput
}

type PermissionResponseArgs struct {
	Actions        pulumi.StringArrayInput `pulumi:"actions"`
	DataActions    pulumi.StringArrayInput `pulumi:"dataActions"`
	NotActions     pulumi.StringArrayInput `pulumi:"notActions"`
	NotDataActions pulumi.StringArrayInput `pulumi:"notDataActions"`
}

func (PermissionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionResponse)(nil)).Elem()
}

func (i PermissionResponseArgs) ToPermissionResponseOutput() PermissionResponseOutput {
	return i.ToPermissionResponseOutputWithContext(context.Background())
}

func (i PermissionResponseArgs) ToPermissionResponseOutputWithContext(ctx context.Context) PermissionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionResponseOutput)
}

// PermissionResponseArrayInput is an input type that accepts PermissionResponseArray and PermissionResponseArrayOutput values.
// You can construct a concrete instance of `PermissionResponseArrayInput` via:
//
//          PermissionResponseArray{ PermissionResponseArgs{...} }
type PermissionResponseArrayInput interface {
	pulumi.Input

	ToPermissionResponseArrayOutput() PermissionResponseArrayOutput
	ToPermissionResponseArrayOutputWithContext(context.Context) PermissionResponseArrayOutput
}

type PermissionResponseArray []PermissionResponseInput

func (PermissionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PermissionResponse)(nil)).Elem()
}

func (i PermissionResponseArray) ToPermissionResponseArrayOutput() PermissionResponseArrayOutput {
	return i.ToPermissionResponseArrayOutputWithContext(context.Background())
}

func (i PermissionResponseArray) ToPermissionResponseArrayOutputWithContext(ctx context.Context) PermissionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionResponseArrayOutput)
}

type PermissionResponseOutput struct{ *pulumi.OutputState }

func (PermissionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionResponse)(nil)).Elem()
}

func (o PermissionResponseOutput) ToPermissionResponseOutput() PermissionResponseOutput {
	return o
}

func (o PermissionResponseOutput) ToPermissionResponseOutputWithContext(ctx context.Context) PermissionResponseOutput {
	return o
}

func (o PermissionResponseOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PermissionResponse) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o PermissionResponseOutput) DataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PermissionResponse) []string { return v.DataActions }).(pulumi.StringArrayOutput)
}

func (o PermissionResponseOutput) NotActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PermissionResponse) []string { return v.NotActions }).(pulumi.StringArrayOutput)
}

func (o PermissionResponseOutput) NotDataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PermissionResponse) []string { return v.NotDataActions }).(pulumi.StringArrayOutput)
}

type PermissionResponseArrayOutput struct{ *pulumi.OutputState }

func (PermissionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PermissionResponse)(nil)).Elem()
}

func (o PermissionResponseArrayOutput) ToPermissionResponseArrayOutput() PermissionResponseArrayOutput {
	return o
}

func (o PermissionResponseArrayOutput) ToPermissionResponseArrayOutputWithContext(ctx context.Context) PermissionResponseArrayOutput {
	return o
}

func (o PermissionResponseArrayOutput) Index(i pulumi.IntInput) PermissionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PermissionResponse {
		return vs[0].([]PermissionResponse)[vs[1].(int)]
	}).(PermissionResponseOutput)
}

type PolicyAssignmentPropertiesResponse struct {
	Policy         *PolicyAssignmentPropertiesResponsePolicy         `pulumi:"policy"`
	RoleDefinition *PolicyAssignmentPropertiesResponseRoleDefinition `pulumi:"roleDefinition"`
	Scope          *PolicyAssignmentPropertiesResponseScope          `pulumi:"scope"`
}

// PolicyAssignmentPropertiesResponseInput is an input type that accepts PolicyAssignmentPropertiesResponseArgs and PolicyAssignmentPropertiesResponseOutput values.
// You can construct a concrete instance of `PolicyAssignmentPropertiesResponseInput` via:
//
//          PolicyAssignmentPropertiesResponseArgs{...}
type PolicyAssignmentPropertiesResponseInput interface {
	pulumi.Input

	ToPolicyAssignmentPropertiesResponseOutput() PolicyAssignmentPropertiesResponseOutput
	ToPolicyAssignmentPropertiesResponseOutputWithContext(context.Context) PolicyAssignmentPropertiesResponseOutput
}

type PolicyAssignmentPropertiesResponseArgs struct {
	Policy         PolicyAssignmentPropertiesResponsePolicyPtrInput         `pulumi:"policy"`
	RoleDefinition PolicyAssignmentPropertiesResponseRoleDefinitionPtrInput `pulumi:"roleDefinition"`
	Scope          PolicyAssignmentPropertiesResponseScopePtrInput          `pulumi:"scope"`
}

func (PolicyAssignmentPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentPropertiesResponse)(nil)).Elem()
}

func (i PolicyAssignmentPropertiesResponseArgs) ToPolicyAssignmentPropertiesResponseOutput() PolicyAssignmentPropertiesResponseOutput {
	return i.ToPolicyAssignmentPropertiesResponseOutputWithContext(context.Background())
}

func (i PolicyAssignmentPropertiesResponseArgs) ToPolicyAssignmentPropertiesResponseOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesResponseOutput)
}

func (i PolicyAssignmentPropertiesResponseArgs) ToPolicyAssignmentPropertiesResponsePtrOutput() PolicyAssignmentPropertiesResponsePtrOutput {
	return i.ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i PolicyAssignmentPropertiesResponseArgs) ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesResponseOutput).ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(ctx)
}

// PolicyAssignmentPropertiesResponsePtrInput is an input type that accepts PolicyAssignmentPropertiesResponseArgs, PolicyAssignmentPropertiesResponsePtr and PolicyAssignmentPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `PolicyAssignmentPropertiesResponsePtrInput` via:
//
//          PolicyAssignmentPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type PolicyAssignmentPropertiesResponsePtrInput interface {
	pulumi.Input

	ToPolicyAssignmentPropertiesResponsePtrOutput() PolicyAssignmentPropertiesResponsePtrOutput
	ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(context.Context) PolicyAssignmentPropertiesResponsePtrOutput
}

type policyAssignmentPropertiesResponsePtrType PolicyAssignmentPropertiesResponseArgs

func PolicyAssignmentPropertiesResponsePtr(v *PolicyAssignmentPropertiesResponseArgs) PolicyAssignmentPropertiesResponsePtrInput {
	return (*policyAssignmentPropertiesResponsePtrType)(v)
}

func (*policyAssignmentPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAssignmentPropertiesResponse)(nil)).Elem()
}

func (i *policyAssignmentPropertiesResponsePtrType) ToPolicyAssignmentPropertiesResponsePtrOutput() PolicyAssignmentPropertiesResponsePtrOutput {
	return i.ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *policyAssignmentPropertiesResponsePtrType) ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesResponsePtrOutput)
}

type PolicyAssignmentPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentPropertiesResponse)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesResponseOutput) ToPolicyAssignmentPropertiesResponseOutput() PolicyAssignmentPropertiesResponseOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseOutput) ToPolicyAssignmentPropertiesResponseOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseOutput) ToPolicyAssignmentPropertiesResponsePtrOutput() PolicyAssignmentPropertiesResponsePtrOutput {
	return o.ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PolicyAssignmentPropertiesResponseOutput) ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyAssignmentPropertiesResponse) *PolicyAssignmentPropertiesResponse {
		return &v
	}).(PolicyAssignmentPropertiesResponsePtrOutput)
}

func (o PolicyAssignmentPropertiesResponseOutput) Policy() PolicyAssignmentPropertiesResponsePolicyPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponse) *PolicyAssignmentPropertiesResponsePolicy { return v.Policy }).(PolicyAssignmentPropertiesResponsePolicyPtrOutput)
}

func (o PolicyAssignmentPropertiesResponseOutput) RoleDefinition() PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponse) *PolicyAssignmentPropertiesResponseRoleDefinition {
		return v.RoleDefinition
	}).(PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput)
}

func (o PolicyAssignmentPropertiesResponseOutput) Scope() PolicyAssignmentPropertiesResponseScopePtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponse) *PolicyAssignmentPropertiesResponseScope { return v.Scope }).(PolicyAssignmentPropertiesResponseScopePtrOutput)
}

type PolicyAssignmentPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAssignmentPropertiesResponse)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesResponsePtrOutput) ToPolicyAssignmentPropertiesResponsePtrOutput() PolicyAssignmentPropertiesResponsePtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponsePtrOutput) ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponsePtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponsePtrOutput) Elem() PolicyAssignmentPropertiesResponseOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponse) PolicyAssignmentPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret PolicyAssignmentPropertiesResponse
		return ret
	}).(PolicyAssignmentPropertiesResponseOutput)
}

func (o PolicyAssignmentPropertiesResponsePtrOutput) Policy() PolicyAssignmentPropertiesResponsePolicyPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponse) *PolicyAssignmentPropertiesResponsePolicy {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(PolicyAssignmentPropertiesResponsePolicyPtrOutput)
}

func (o PolicyAssignmentPropertiesResponsePtrOutput) RoleDefinition() PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponse) *PolicyAssignmentPropertiesResponseRoleDefinition {
		if v == nil {
			return nil
		}
		return v.RoleDefinition
	}).(PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput)
}

func (o PolicyAssignmentPropertiesResponsePtrOutput) Scope() PolicyAssignmentPropertiesResponseScopePtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponse) *PolicyAssignmentPropertiesResponseScope {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(PolicyAssignmentPropertiesResponseScopePtrOutput)
}

type PolicyAssignmentPropertiesResponsePolicy struct {
	Id                   *string           `pulumi:"id"`
	LastModifiedBy       PrincipalResponse `pulumi:"lastModifiedBy"`
	LastModifiedDateTime *string           `pulumi:"lastModifiedDateTime"`
}

// PolicyAssignmentPropertiesResponsePolicyInput is an input type that accepts PolicyAssignmentPropertiesResponsePolicyArgs and PolicyAssignmentPropertiesResponsePolicyOutput values.
// You can construct a concrete instance of `PolicyAssignmentPropertiesResponsePolicyInput` via:
//
//          PolicyAssignmentPropertiesResponsePolicyArgs{...}
type PolicyAssignmentPropertiesResponsePolicyInput interface {
	pulumi.Input

	ToPolicyAssignmentPropertiesResponsePolicyOutput() PolicyAssignmentPropertiesResponsePolicyOutput
	ToPolicyAssignmentPropertiesResponsePolicyOutputWithContext(context.Context) PolicyAssignmentPropertiesResponsePolicyOutput
}

type PolicyAssignmentPropertiesResponsePolicyArgs struct {
	Id                   pulumi.StringPtrInput  `pulumi:"id"`
	LastModifiedBy       PrincipalResponseInput `pulumi:"lastModifiedBy"`
	LastModifiedDateTime pulumi.StringPtrInput  `pulumi:"lastModifiedDateTime"`
}

func (PolicyAssignmentPropertiesResponsePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentPropertiesResponsePolicy)(nil)).Elem()
}

func (i PolicyAssignmentPropertiesResponsePolicyArgs) ToPolicyAssignmentPropertiesResponsePolicyOutput() PolicyAssignmentPropertiesResponsePolicyOutput {
	return i.ToPolicyAssignmentPropertiesResponsePolicyOutputWithContext(context.Background())
}

func (i PolicyAssignmentPropertiesResponsePolicyArgs) ToPolicyAssignmentPropertiesResponsePolicyOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponsePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesResponsePolicyOutput)
}

func (i PolicyAssignmentPropertiesResponsePolicyArgs) ToPolicyAssignmentPropertiesResponsePolicyPtrOutput() PolicyAssignmentPropertiesResponsePolicyPtrOutput {
	return i.ToPolicyAssignmentPropertiesResponsePolicyPtrOutputWithContext(context.Background())
}

func (i PolicyAssignmentPropertiesResponsePolicyArgs) ToPolicyAssignmentPropertiesResponsePolicyPtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponsePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesResponsePolicyOutput).ToPolicyAssignmentPropertiesResponsePolicyPtrOutputWithContext(ctx)
}

// PolicyAssignmentPropertiesResponsePolicyPtrInput is an input type that accepts PolicyAssignmentPropertiesResponsePolicyArgs, PolicyAssignmentPropertiesResponsePolicyPtr and PolicyAssignmentPropertiesResponsePolicyPtrOutput values.
// You can construct a concrete instance of `PolicyAssignmentPropertiesResponsePolicyPtrInput` via:
//
//          PolicyAssignmentPropertiesResponsePolicyArgs{...}
//
//  or:
//
//          nil
type PolicyAssignmentPropertiesResponsePolicyPtrInput interface {
	pulumi.Input

	ToPolicyAssignmentPropertiesResponsePolicyPtrOutput() PolicyAssignmentPropertiesResponsePolicyPtrOutput
	ToPolicyAssignmentPropertiesResponsePolicyPtrOutputWithContext(context.Context) PolicyAssignmentPropertiesResponsePolicyPtrOutput
}

type policyAssignmentPropertiesResponsePolicyPtrType PolicyAssignmentPropertiesResponsePolicyArgs

func PolicyAssignmentPropertiesResponsePolicyPtr(v *PolicyAssignmentPropertiesResponsePolicyArgs) PolicyAssignmentPropertiesResponsePolicyPtrInput {
	return (*policyAssignmentPropertiesResponsePolicyPtrType)(v)
}

func (*policyAssignmentPropertiesResponsePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAssignmentPropertiesResponsePolicy)(nil)).Elem()
}

func (i *policyAssignmentPropertiesResponsePolicyPtrType) ToPolicyAssignmentPropertiesResponsePolicyPtrOutput() PolicyAssignmentPropertiesResponsePolicyPtrOutput {
	return i.ToPolicyAssignmentPropertiesResponsePolicyPtrOutputWithContext(context.Background())
}

func (i *policyAssignmentPropertiesResponsePolicyPtrType) ToPolicyAssignmentPropertiesResponsePolicyPtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponsePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesResponsePolicyPtrOutput)
}

type PolicyAssignmentPropertiesResponsePolicyOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesResponsePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentPropertiesResponsePolicy)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesResponsePolicyOutput) ToPolicyAssignmentPropertiesResponsePolicyOutput() PolicyAssignmentPropertiesResponsePolicyOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponsePolicyOutput) ToPolicyAssignmentPropertiesResponsePolicyOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponsePolicyOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponsePolicyOutput) ToPolicyAssignmentPropertiesResponsePolicyPtrOutput() PolicyAssignmentPropertiesResponsePolicyPtrOutput {
	return o.ToPolicyAssignmentPropertiesResponsePolicyPtrOutputWithContext(context.Background())
}

func (o PolicyAssignmentPropertiesResponsePolicyOutput) ToPolicyAssignmentPropertiesResponsePolicyPtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponsePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyAssignmentPropertiesResponsePolicy) *PolicyAssignmentPropertiesResponsePolicy {
		return &v
	}).(PolicyAssignmentPropertiesResponsePolicyPtrOutput)
}

func (o PolicyAssignmentPropertiesResponsePolicyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponsePolicy) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o PolicyAssignmentPropertiesResponsePolicyOutput) LastModifiedBy() PrincipalResponseOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponsePolicy) PrincipalResponse { return v.LastModifiedBy }).(PrincipalResponseOutput)
}

func (o PolicyAssignmentPropertiesResponsePolicyOutput) LastModifiedDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponsePolicy) *string { return v.LastModifiedDateTime }).(pulumi.StringPtrOutput)
}

type PolicyAssignmentPropertiesResponsePolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesResponsePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAssignmentPropertiesResponsePolicy)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesResponsePolicyPtrOutput) ToPolicyAssignmentPropertiesResponsePolicyPtrOutput() PolicyAssignmentPropertiesResponsePolicyPtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponsePolicyPtrOutput) ToPolicyAssignmentPropertiesResponsePolicyPtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponsePolicyPtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponsePolicyPtrOutput) Elem() PolicyAssignmentPropertiesResponsePolicyOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponsePolicy) PolicyAssignmentPropertiesResponsePolicy {
		if v != nil {
			return *v
		}
		var ret PolicyAssignmentPropertiesResponsePolicy
		return ret
	}).(PolicyAssignmentPropertiesResponsePolicyOutput)
}

func (o PolicyAssignmentPropertiesResponsePolicyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponsePolicy) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o PolicyAssignmentPropertiesResponsePolicyPtrOutput) LastModifiedBy() PrincipalResponsePtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponsePolicy) *PrincipalResponse {
		if v == nil {
			return nil
		}
		return &v.LastModifiedBy
	}).(PrincipalResponsePtrOutput)
}

func (o PolicyAssignmentPropertiesResponsePolicyPtrOutput) LastModifiedDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponsePolicy) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedDateTime
	}).(pulumi.StringPtrOutput)
}

type PolicyAssignmentPropertiesResponseRoleDefinition struct {
	DisplayName *string `pulumi:"displayName"`
	Id          *string `pulumi:"id"`
	Type        *string `pulumi:"type"`
}

// PolicyAssignmentPropertiesResponseRoleDefinitionInput is an input type that accepts PolicyAssignmentPropertiesResponseRoleDefinitionArgs and PolicyAssignmentPropertiesResponseRoleDefinitionOutput values.
// You can construct a concrete instance of `PolicyAssignmentPropertiesResponseRoleDefinitionInput` via:
//
//          PolicyAssignmentPropertiesResponseRoleDefinitionArgs{...}
type PolicyAssignmentPropertiesResponseRoleDefinitionInput interface {
	pulumi.Input

	ToPolicyAssignmentPropertiesResponseRoleDefinitionOutput() PolicyAssignmentPropertiesResponseRoleDefinitionOutput
	ToPolicyAssignmentPropertiesResponseRoleDefinitionOutputWithContext(context.Context) PolicyAssignmentPropertiesResponseRoleDefinitionOutput
}

type PolicyAssignmentPropertiesResponseRoleDefinitionArgs struct {
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	Type        pulumi.StringPtrInput `pulumi:"type"`
}

func (PolicyAssignmentPropertiesResponseRoleDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentPropertiesResponseRoleDefinition)(nil)).Elem()
}

func (i PolicyAssignmentPropertiesResponseRoleDefinitionArgs) ToPolicyAssignmentPropertiesResponseRoleDefinitionOutput() PolicyAssignmentPropertiesResponseRoleDefinitionOutput {
	return i.ToPolicyAssignmentPropertiesResponseRoleDefinitionOutputWithContext(context.Background())
}

func (i PolicyAssignmentPropertiesResponseRoleDefinitionArgs) ToPolicyAssignmentPropertiesResponseRoleDefinitionOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseRoleDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesResponseRoleDefinitionOutput)
}

func (i PolicyAssignmentPropertiesResponseRoleDefinitionArgs) ToPolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput() PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput {
	return i.ToPolicyAssignmentPropertiesResponseRoleDefinitionPtrOutputWithContext(context.Background())
}

func (i PolicyAssignmentPropertiesResponseRoleDefinitionArgs) ToPolicyAssignmentPropertiesResponseRoleDefinitionPtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesResponseRoleDefinitionOutput).ToPolicyAssignmentPropertiesResponseRoleDefinitionPtrOutputWithContext(ctx)
}

// PolicyAssignmentPropertiesResponseRoleDefinitionPtrInput is an input type that accepts PolicyAssignmentPropertiesResponseRoleDefinitionArgs, PolicyAssignmentPropertiesResponseRoleDefinitionPtr and PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput values.
// You can construct a concrete instance of `PolicyAssignmentPropertiesResponseRoleDefinitionPtrInput` via:
//
//          PolicyAssignmentPropertiesResponseRoleDefinitionArgs{...}
//
//  or:
//
//          nil
type PolicyAssignmentPropertiesResponseRoleDefinitionPtrInput interface {
	pulumi.Input

	ToPolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput() PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput
	ToPolicyAssignmentPropertiesResponseRoleDefinitionPtrOutputWithContext(context.Context) PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput
}

type policyAssignmentPropertiesResponseRoleDefinitionPtrType PolicyAssignmentPropertiesResponseRoleDefinitionArgs

func PolicyAssignmentPropertiesResponseRoleDefinitionPtr(v *PolicyAssignmentPropertiesResponseRoleDefinitionArgs) PolicyAssignmentPropertiesResponseRoleDefinitionPtrInput {
	return (*policyAssignmentPropertiesResponseRoleDefinitionPtrType)(v)
}

func (*policyAssignmentPropertiesResponseRoleDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAssignmentPropertiesResponseRoleDefinition)(nil)).Elem()
}

func (i *policyAssignmentPropertiesResponseRoleDefinitionPtrType) ToPolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput() PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput {
	return i.ToPolicyAssignmentPropertiesResponseRoleDefinitionPtrOutputWithContext(context.Background())
}

func (i *policyAssignmentPropertiesResponseRoleDefinitionPtrType) ToPolicyAssignmentPropertiesResponseRoleDefinitionPtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput)
}

type PolicyAssignmentPropertiesResponseRoleDefinitionOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesResponseRoleDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentPropertiesResponseRoleDefinition)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionOutput) ToPolicyAssignmentPropertiesResponseRoleDefinitionOutput() PolicyAssignmentPropertiesResponseRoleDefinitionOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionOutput) ToPolicyAssignmentPropertiesResponseRoleDefinitionOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseRoleDefinitionOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionOutput) ToPolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput() PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput {
	return o.ToPolicyAssignmentPropertiesResponseRoleDefinitionPtrOutputWithContext(context.Background())
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionOutput) ToPolicyAssignmentPropertiesResponseRoleDefinitionPtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyAssignmentPropertiesResponseRoleDefinition) *PolicyAssignmentPropertiesResponseRoleDefinition {
		return &v
	}).(PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput)
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponseRoleDefinition) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponseRoleDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponseRoleDefinition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAssignmentPropertiesResponseRoleDefinition)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput) ToPolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput() PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput) ToPolicyAssignmentPropertiesResponseRoleDefinitionPtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput) Elem() PolicyAssignmentPropertiesResponseRoleDefinitionOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponseRoleDefinition) PolicyAssignmentPropertiesResponseRoleDefinition {
		if v != nil {
			return *v
		}
		var ret PolicyAssignmentPropertiesResponseRoleDefinition
		return ret
	}).(PolicyAssignmentPropertiesResponseRoleDefinitionOutput)
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponseRoleDefinition) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponseRoleDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponseRoleDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type PolicyAssignmentPropertiesResponseScope struct {
	DisplayName *string `pulumi:"displayName"`
	Id          *string `pulumi:"id"`
	Type        *string `pulumi:"type"`
}

// PolicyAssignmentPropertiesResponseScopeInput is an input type that accepts PolicyAssignmentPropertiesResponseScopeArgs and PolicyAssignmentPropertiesResponseScopeOutput values.
// You can construct a concrete instance of `PolicyAssignmentPropertiesResponseScopeInput` via:
//
//          PolicyAssignmentPropertiesResponseScopeArgs{...}
type PolicyAssignmentPropertiesResponseScopeInput interface {
	pulumi.Input

	ToPolicyAssignmentPropertiesResponseScopeOutput() PolicyAssignmentPropertiesResponseScopeOutput
	ToPolicyAssignmentPropertiesResponseScopeOutputWithContext(context.Context) PolicyAssignmentPropertiesResponseScopeOutput
}

type PolicyAssignmentPropertiesResponseScopeArgs struct {
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	Type        pulumi.StringPtrInput `pulumi:"type"`
}

func (PolicyAssignmentPropertiesResponseScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentPropertiesResponseScope)(nil)).Elem()
}

func (i PolicyAssignmentPropertiesResponseScopeArgs) ToPolicyAssignmentPropertiesResponseScopeOutput() PolicyAssignmentPropertiesResponseScopeOutput {
	return i.ToPolicyAssignmentPropertiesResponseScopeOutputWithContext(context.Background())
}

func (i PolicyAssignmentPropertiesResponseScopeArgs) ToPolicyAssignmentPropertiesResponseScopeOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesResponseScopeOutput)
}

func (i PolicyAssignmentPropertiesResponseScopeArgs) ToPolicyAssignmentPropertiesResponseScopePtrOutput() PolicyAssignmentPropertiesResponseScopePtrOutput {
	return i.ToPolicyAssignmentPropertiesResponseScopePtrOutputWithContext(context.Background())
}

func (i PolicyAssignmentPropertiesResponseScopeArgs) ToPolicyAssignmentPropertiesResponseScopePtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesResponseScopeOutput).ToPolicyAssignmentPropertiesResponseScopePtrOutputWithContext(ctx)
}

// PolicyAssignmentPropertiesResponseScopePtrInput is an input type that accepts PolicyAssignmentPropertiesResponseScopeArgs, PolicyAssignmentPropertiesResponseScopePtr and PolicyAssignmentPropertiesResponseScopePtrOutput values.
// You can construct a concrete instance of `PolicyAssignmentPropertiesResponseScopePtrInput` via:
//
//          PolicyAssignmentPropertiesResponseScopeArgs{...}
//
//  or:
//
//          nil
type PolicyAssignmentPropertiesResponseScopePtrInput interface {
	pulumi.Input

	ToPolicyAssignmentPropertiesResponseScopePtrOutput() PolicyAssignmentPropertiesResponseScopePtrOutput
	ToPolicyAssignmentPropertiesResponseScopePtrOutputWithContext(context.Context) PolicyAssignmentPropertiesResponseScopePtrOutput
}

type policyAssignmentPropertiesResponseScopePtrType PolicyAssignmentPropertiesResponseScopeArgs

func PolicyAssignmentPropertiesResponseScopePtr(v *PolicyAssignmentPropertiesResponseScopeArgs) PolicyAssignmentPropertiesResponseScopePtrInput {
	return (*policyAssignmentPropertiesResponseScopePtrType)(v)
}

func (*policyAssignmentPropertiesResponseScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAssignmentPropertiesResponseScope)(nil)).Elem()
}

func (i *policyAssignmentPropertiesResponseScopePtrType) ToPolicyAssignmentPropertiesResponseScopePtrOutput() PolicyAssignmentPropertiesResponseScopePtrOutput {
	return i.ToPolicyAssignmentPropertiesResponseScopePtrOutputWithContext(context.Background())
}

func (i *policyAssignmentPropertiesResponseScopePtrType) ToPolicyAssignmentPropertiesResponseScopePtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesResponseScopePtrOutput)
}

type PolicyAssignmentPropertiesResponseScopeOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesResponseScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentPropertiesResponseScope)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesResponseScopeOutput) ToPolicyAssignmentPropertiesResponseScopeOutput() PolicyAssignmentPropertiesResponseScopeOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseScopeOutput) ToPolicyAssignmentPropertiesResponseScopeOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseScopeOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseScopeOutput) ToPolicyAssignmentPropertiesResponseScopePtrOutput() PolicyAssignmentPropertiesResponseScopePtrOutput {
	return o.ToPolicyAssignmentPropertiesResponseScopePtrOutputWithContext(context.Background())
}

func (o PolicyAssignmentPropertiesResponseScopeOutput) ToPolicyAssignmentPropertiesResponseScopePtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyAssignmentPropertiesResponseScope) *PolicyAssignmentPropertiesResponseScope {
		return &v
	}).(PolicyAssignmentPropertiesResponseScopePtrOutput)
}

func (o PolicyAssignmentPropertiesResponseScopeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponseScope) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o PolicyAssignmentPropertiesResponseScopeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponseScope) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o PolicyAssignmentPropertiesResponseScopeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponseScope) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PolicyAssignmentPropertiesResponseScopePtrOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesResponseScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAssignmentPropertiesResponseScope)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesResponseScopePtrOutput) ToPolicyAssignmentPropertiesResponseScopePtrOutput() PolicyAssignmentPropertiesResponseScopePtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseScopePtrOutput) ToPolicyAssignmentPropertiesResponseScopePtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseScopePtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseScopePtrOutput) Elem() PolicyAssignmentPropertiesResponseScopeOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponseScope) PolicyAssignmentPropertiesResponseScope {
		if v != nil {
			return *v
		}
		var ret PolicyAssignmentPropertiesResponseScope
		return ret
	}).(PolicyAssignmentPropertiesResponseScopeOutput)
}

func (o PolicyAssignmentPropertiesResponseScopePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponseScope) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

func (o PolicyAssignmentPropertiesResponseScopePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponseScope) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o PolicyAssignmentPropertiesResponseScopePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponseScope) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type PolicyDefinitionGroup struct {
	AdditionalMetadataId *string `pulumi:"additionalMetadataId"`
	Category             *string `pulumi:"category"`
	Description          *string `pulumi:"description"`
	DisplayName          *string `pulumi:"displayName"`
	Name                 string  `pulumi:"name"`
}

// PolicyDefinitionGroupInput is an input type that accepts PolicyDefinitionGroupArgs and PolicyDefinitionGroupOutput values.
// You can construct a concrete instance of `PolicyDefinitionGroupInput` via:
//
//          PolicyDefinitionGroupArgs{...}
type PolicyDefinitionGroupInput interface {
	pulumi.Input

	ToPolicyDefinitionGroupOutput() PolicyDefinitionGroupOutput
	ToPolicyDefinitionGroupOutputWithContext(context.Context) PolicyDefinitionGroupOutput
}

type PolicyDefinitionGroupArgs struct {
	AdditionalMetadataId pulumi.StringPtrInput `pulumi:"additionalMetadataId"`
	Category             pulumi.StringPtrInput `pulumi:"category"`
	Description          pulumi.StringPtrInput `pulumi:"description"`
	DisplayName          pulumi.StringPtrInput `pulumi:"displayName"`
	Name                 pulumi.StringInput    `pulumi:"name"`
}

func (PolicyDefinitionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionGroup)(nil)).Elem()
}

func (i PolicyDefinitionGroupArgs) ToPolicyDefinitionGroupOutput() PolicyDefinitionGroupOutput {
	return i.ToPolicyDefinitionGroupOutputWithContext(context.Background())
}

func (i PolicyDefinitionGroupArgs) ToPolicyDefinitionGroupOutputWithContext(ctx context.Context) PolicyDefinitionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionGroupOutput)
}

// PolicyDefinitionGroupArrayInput is an input type that accepts PolicyDefinitionGroupArray and PolicyDefinitionGroupArrayOutput values.
// You can construct a concrete instance of `PolicyDefinitionGroupArrayInput` via:
//
//          PolicyDefinitionGroupArray{ PolicyDefinitionGroupArgs{...} }
type PolicyDefinitionGroupArrayInput interface {
	pulumi.Input

	ToPolicyDefinitionGroupArrayOutput() PolicyDefinitionGroupArrayOutput
	ToPolicyDefinitionGroupArrayOutputWithContext(context.Context) PolicyDefinitionGroupArrayOutput
}

type PolicyDefinitionGroupArray []PolicyDefinitionGroupInput

func (PolicyDefinitionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionGroup)(nil)).Elem()
}

func (i PolicyDefinitionGroupArray) ToPolicyDefinitionGroupArrayOutput() PolicyDefinitionGroupArrayOutput {
	return i.ToPolicyDefinitionGroupArrayOutputWithContext(context.Background())
}

func (i PolicyDefinitionGroupArray) ToPolicyDefinitionGroupArrayOutputWithContext(ctx context.Context) PolicyDefinitionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionGroupArrayOutput)
}

type PolicyDefinitionGroupOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionGroup)(nil)).Elem()
}

func (o PolicyDefinitionGroupOutput) ToPolicyDefinitionGroupOutput() PolicyDefinitionGroupOutput {
	return o
}

func (o PolicyDefinitionGroupOutput) ToPolicyDefinitionGroupOutputWithContext(ctx context.Context) PolicyDefinitionGroupOutput {
	return o
}

func (o PolicyDefinitionGroupOutput) AdditionalMetadataId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionGroup) *string { return v.AdditionalMetadataId }).(pulumi.StringPtrOutput)
}

func (o PolicyDefinitionGroupOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionGroup) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o PolicyDefinitionGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionGroup) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyDefinitionGroupOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionGroup) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o PolicyDefinitionGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyDefinitionGroup) string { return v.Name }).(pulumi.StringOutput)
}

type PolicyDefinitionGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionGroup)(nil)).Elem()
}

func (o PolicyDefinitionGroupArrayOutput) ToPolicyDefinitionGroupArrayOutput() PolicyDefinitionGroupArrayOutput {
	return o
}

func (o PolicyDefinitionGroupArrayOutput) ToPolicyDefinitionGroupArrayOutputWithContext(ctx context.Context) PolicyDefinitionGroupArrayOutput {
	return o
}

func (o PolicyDefinitionGroupArrayOutput) Index(i pulumi.IntInput) PolicyDefinitionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDefinitionGroup {
		return vs[0].([]PolicyDefinitionGroup)[vs[1].(int)]
	}).(PolicyDefinitionGroupOutput)
}

type PolicyDefinitionGroupResponse struct {
	AdditionalMetadataId *string `pulumi:"additionalMetadataId"`
	Category             *string `pulumi:"category"`
	Description          *string `pulumi:"description"`
	DisplayName          *string `pulumi:"displayName"`
	Name                 string  `pulumi:"name"`
}

// PolicyDefinitionGroupResponseInput is an input type that accepts PolicyDefinitionGroupResponseArgs and PolicyDefinitionGroupResponseOutput values.
// You can construct a concrete instance of `PolicyDefinitionGroupResponseInput` via:
//
//          PolicyDefinitionGroupResponseArgs{...}
type PolicyDefinitionGroupResponseInput interface {
	pulumi.Input

	ToPolicyDefinitionGroupResponseOutput() PolicyDefinitionGroupResponseOutput
	ToPolicyDefinitionGroupResponseOutputWithContext(context.Context) PolicyDefinitionGroupResponseOutput
}

type PolicyDefinitionGroupResponseArgs struct {
	AdditionalMetadataId pulumi.StringPtrInput `pulumi:"additionalMetadataId"`
	Category             pulumi.StringPtrInput `pulumi:"category"`
	Description          pulumi.StringPtrInput `pulumi:"description"`
	DisplayName          pulumi.StringPtrInput `pulumi:"displayName"`
	Name                 pulumi.StringInput    `pulumi:"name"`
}

func (PolicyDefinitionGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionGroupResponse)(nil)).Elem()
}

func (i PolicyDefinitionGroupResponseArgs) ToPolicyDefinitionGroupResponseOutput() PolicyDefinitionGroupResponseOutput {
	return i.ToPolicyDefinitionGroupResponseOutputWithContext(context.Background())
}

func (i PolicyDefinitionGroupResponseArgs) ToPolicyDefinitionGroupResponseOutputWithContext(ctx context.Context) PolicyDefinitionGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionGroupResponseOutput)
}

// PolicyDefinitionGroupResponseArrayInput is an input type that accepts PolicyDefinitionGroupResponseArray and PolicyDefinitionGroupResponseArrayOutput values.
// You can construct a concrete instance of `PolicyDefinitionGroupResponseArrayInput` via:
//
//          PolicyDefinitionGroupResponseArray{ PolicyDefinitionGroupResponseArgs{...} }
type PolicyDefinitionGroupResponseArrayInput interface {
	pulumi.Input

	ToPolicyDefinitionGroupResponseArrayOutput() PolicyDefinitionGroupResponseArrayOutput
	ToPolicyDefinitionGroupResponseArrayOutputWithContext(context.Context) PolicyDefinitionGroupResponseArrayOutput
}

type PolicyDefinitionGroupResponseArray []PolicyDefinitionGroupResponseInput

func (PolicyDefinitionGroupResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionGroupResponse)(nil)).Elem()
}

func (i PolicyDefinitionGroupResponseArray) ToPolicyDefinitionGroupResponseArrayOutput() PolicyDefinitionGroupResponseArrayOutput {
	return i.ToPolicyDefinitionGroupResponseArrayOutputWithContext(context.Background())
}

func (i PolicyDefinitionGroupResponseArray) ToPolicyDefinitionGroupResponseArrayOutputWithContext(ctx context.Context) PolicyDefinitionGroupResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionGroupResponseArrayOutput)
}

type PolicyDefinitionGroupResponseOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionGroupResponse)(nil)).Elem()
}

func (o PolicyDefinitionGroupResponseOutput) ToPolicyDefinitionGroupResponseOutput() PolicyDefinitionGroupResponseOutput {
	return o
}

func (o PolicyDefinitionGroupResponseOutput) ToPolicyDefinitionGroupResponseOutputWithContext(ctx context.Context) PolicyDefinitionGroupResponseOutput {
	return o
}

func (o PolicyDefinitionGroupResponseOutput) AdditionalMetadataId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionGroupResponse) *string { return v.AdditionalMetadataId }).(pulumi.StringPtrOutput)
}

func (o PolicyDefinitionGroupResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionGroupResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o PolicyDefinitionGroupResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionGroupResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyDefinitionGroupResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionGroupResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o PolicyDefinitionGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyDefinitionGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

type PolicyDefinitionGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionGroupResponse)(nil)).Elem()
}

func (o PolicyDefinitionGroupResponseArrayOutput) ToPolicyDefinitionGroupResponseArrayOutput() PolicyDefinitionGroupResponseArrayOutput {
	return o
}

func (o PolicyDefinitionGroupResponseArrayOutput) ToPolicyDefinitionGroupResponseArrayOutputWithContext(ctx context.Context) PolicyDefinitionGroupResponseArrayOutput {
	return o
}

func (o PolicyDefinitionGroupResponseArrayOutput) Index(i pulumi.IntInput) PolicyDefinitionGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDefinitionGroupResponse {
		return vs[0].([]PolicyDefinitionGroupResponse)[vs[1].(int)]
	}).(PolicyDefinitionGroupResponseOutput)
}

type PolicyDefinitionReference struct {
	GroupNames                  []string                        `pulumi:"groupNames"`
	Parameters                  map[string]ParameterValuesValue `pulumi:"parameters"`
	PolicyDefinitionId          string                          `pulumi:"policyDefinitionId"`
	PolicyDefinitionReferenceId *string                         `pulumi:"policyDefinitionReferenceId"`
}

// PolicyDefinitionReferenceInput is an input type that accepts PolicyDefinitionReferenceArgs and PolicyDefinitionReferenceOutput values.
// You can construct a concrete instance of `PolicyDefinitionReferenceInput` via:
//
//          PolicyDefinitionReferenceArgs{...}
type PolicyDefinitionReferenceInput interface {
	pulumi.Input

	ToPolicyDefinitionReferenceOutput() PolicyDefinitionReferenceOutput
	ToPolicyDefinitionReferenceOutputWithContext(context.Context) PolicyDefinitionReferenceOutput
}

type PolicyDefinitionReferenceArgs struct {
	GroupNames                  pulumi.StringArrayInput      `pulumi:"groupNames"`
	Parameters                  ParameterValuesValueMapInput `pulumi:"parameters"`
	PolicyDefinitionId          pulumi.StringInput           `pulumi:"policyDefinitionId"`
	PolicyDefinitionReferenceId pulumi.StringPtrInput        `pulumi:"policyDefinitionReferenceId"`
}

func (PolicyDefinitionReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionReference)(nil)).Elem()
}

func (i PolicyDefinitionReferenceArgs) ToPolicyDefinitionReferenceOutput() PolicyDefinitionReferenceOutput {
	return i.ToPolicyDefinitionReferenceOutputWithContext(context.Background())
}

func (i PolicyDefinitionReferenceArgs) ToPolicyDefinitionReferenceOutputWithContext(ctx context.Context) PolicyDefinitionReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionReferenceOutput)
}

// PolicyDefinitionReferenceArrayInput is an input type that accepts PolicyDefinitionReferenceArray and PolicyDefinitionReferenceArrayOutput values.
// You can construct a concrete instance of `PolicyDefinitionReferenceArrayInput` via:
//
//          PolicyDefinitionReferenceArray{ PolicyDefinitionReferenceArgs{...} }
type PolicyDefinitionReferenceArrayInput interface {
	pulumi.Input

	ToPolicyDefinitionReferenceArrayOutput() PolicyDefinitionReferenceArrayOutput
	ToPolicyDefinitionReferenceArrayOutputWithContext(context.Context) PolicyDefinitionReferenceArrayOutput
}

type PolicyDefinitionReferenceArray []PolicyDefinitionReferenceInput

func (PolicyDefinitionReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionReference)(nil)).Elem()
}

func (i PolicyDefinitionReferenceArray) ToPolicyDefinitionReferenceArrayOutput() PolicyDefinitionReferenceArrayOutput {
	return i.ToPolicyDefinitionReferenceArrayOutputWithContext(context.Background())
}

func (i PolicyDefinitionReferenceArray) ToPolicyDefinitionReferenceArrayOutputWithContext(ctx context.Context) PolicyDefinitionReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionReferenceArrayOutput)
}

type PolicyDefinitionReferenceOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionReference)(nil)).Elem()
}

func (o PolicyDefinitionReferenceOutput) ToPolicyDefinitionReferenceOutput() PolicyDefinitionReferenceOutput {
	return o
}

func (o PolicyDefinitionReferenceOutput) ToPolicyDefinitionReferenceOutputWithContext(ctx context.Context) PolicyDefinitionReferenceOutput {
	return o
}

func (o PolicyDefinitionReferenceOutput) GroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyDefinitionReference) []string { return v.GroupNames }).(pulumi.StringArrayOutput)
}

func (o PolicyDefinitionReferenceOutput) Parameters() ParameterValuesValueMapOutput {
	return o.ApplyT(func(v PolicyDefinitionReference) map[string]ParameterValuesValue { return v.Parameters }).(ParameterValuesValueMapOutput)
}

func (o PolicyDefinitionReferenceOutput) PolicyDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyDefinitionReference) string { return v.PolicyDefinitionId }).(pulumi.StringOutput)
}

func (o PolicyDefinitionReferenceOutput) PolicyDefinitionReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionReference) *string { return v.PolicyDefinitionReferenceId }).(pulumi.StringPtrOutput)
}

type PolicyDefinitionReferenceArrayOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionReference)(nil)).Elem()
}

func (o PolicyDefinitionReferenceArrayOutput) ToPolicyDefinitionReferenceArrayOutput() PolicyDefinitionReferenceArrayOutput {
	return o
}

func (o PolicyDefinitionReferenceArrayOutput) ToPolicyDefinitionReferenceArrayOutputWithContext(ctx context.Context) PolicyDefinitionReferenceArrayOutput {
	return o
}

func (o PolicyDefinitionReferenceArrayOutput) Index(i pulumi.IntInput) PolicyDefinitionReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDefinitionReference {
		return vs[0].([]PolicyDefinitionReference)[vs[1].(int)]
	}).(PolicyDefinitionReferenceOutput)
}

type PolicyDefinitionReferenceResponse struct {
	GroupNames                  []string                                `pulumi:"groupNames"`
	Parameters                  map[string]ParameterValuesValueResponse `pulumi:"parameters"`
	PolicyDefinitionId          string                                  `pulumi:"policyDefinitionId"`
	PolicyDefinitionReferenceId *string                                 `pulumi:"policyDefinitionReferenceId"`
}

// PolicyDefinitionReferenceResponseInput is an input type that accepts PolicyDefinitionReferenceResponseArgs and PolicyDefinitionReferenceResponseOutput values.
// You can construct a concrete instance of `PolicyDefinitionReferenceResponseInput` via:
//
//          PolicyDefinitionReferenceResponseArgs{...}
type PolicyDefinitionReferenceResponseInput interface {
	pulumi.Input

	ToPolicyDefinitionReferenceResponseOutput() PolicyDefinitionReferenceResponseOutput
	ToPolicyDefinitionReferenceResponseOutputWithContext(context.Context) PolicyDefinitionReferenceResponseOutput
}

type PolicyDefinitionReferenceResponseArgs struct {
	GroupNames                  pulumi.StringArrayInput              `pulumi:"groupNames"`
	Parameters                  ParameterValuesValueResponseMapInput `pulumi:"parameters"`
	PolicyDefinitionId          pulumi.StringInput                   `pulumi:"policyDefinitionId"`
	PolicyDefinitionReferenceId pulumi.StringPtrInput                `pulumi:"policyDefinitionReferenceId"`
}

func (PolicyDefinitionReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionReferenceResponse)(nil)).Elem()
}

func (i PolicyDefinitionReferenceResponseArgs) ToPolicyDefinitionReferenceResponseOutput() PolicyDefinitionReferenceResponseOutput {
	return i.ToPolicyDefinitionReferenceResponseOutputWithContext(context.Background())
}

func (i PolicyDefinitionReferenceResponseArgs) ToPolicyDefinitionReferenceResponseOutputWithContext(ctx context.Context) PolicyDefinitionReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionReferenceResponseOutput)
}

// PolicyDefinitionReferenceResponseArrayInput is an input type that accepts PolicyDefinitionReferenceResponseArray and PolicyDefinitionReferenceResponseArrayOutput values.
// You can construct a concrete instance of `PolicyDefinitionReferenceResponseArrayInput` via:
//
//          PolicyDefinitionReferenceResponseArray{ PolicyDefinitionReferenceResponseArgs{...} }
type PolicyDefinitionReferenceResponseArrayInput interface {
	pulumi.Input

	ToPolicyDefinitionReferenceResponseArrayOutput() PolicyDefinitionReferenceResponseArrayOutput
	ToPolicyDefinitionReferenceResponseArrayOutputWithContext(context.Context) PolicyDefinitionReferenceResponseArrayOutput
}

type PolicyDefinitionReferenceResponseArray []PolicyDefinitionReferenceResponseInput

func (PolicyDefinitionReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionReferenceResponse)(nil)).Elem()
}

func (i PolicyDefinitionReferenceResponseArray) ToPolicyDefinitionReferenceResponseArrayOutput() PolicyDefinitionReferenceResponseArrayOutput {
	return i.ToPolicyDefinitionReferenceResponseArrayOutputWithContext(context.Background())
}

func (i PolicyDefinitionReferenceResponseArray) ToPolicyDefinitionReferenceResponseArrayOutputWithContext(ctx context.Context) PolicyDefinitionReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionReferenceResponseArrayOutput)
}

type PolicyDefinitionReferenceResponseOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionReferenceResponse)(nil)).Elem()
}

func (o PolicyDefinitionReferenceResponseOutput) ToPolicyDefinitionReferenceResponseOutput() PolicyDefinitionReferenceResponseOutput {
	return o
}

func (o PolicyDefinitionReferenceResponseOutput) ToPolicyDefinitionReferenceResponseOutputWithContext(ctx context.Context) PolicyDefinitionReferenceResponseOutput {
	return o
}

func (o PolicyDefinitionReferenceResponseOutput) GroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyDefinitionReferenceResponse) []string { return v.GroupNames }).(pulumi.StringArrayOutput)
}

func (o PolicyDefinitionReferenceResponseOutput) Parameters() ParameterValuesValueResponseMapOutput {
	return o.ApplyT(func(v PolicyDefinitionReferenceResponse) map[string]ParameterValuesValueResponse { return v.Parameters }).(ParameterValuesValueResponseMapOutput)
}

func (o PolicyDefinitionReferenceResponseOutput) PolicyDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyDefinitionReferenceResponse) string { return v.PolicyDefinitionId }).(pulumi.StringOutput)
}

func (o PolicyDefinitionReferenceResponseOutput) PolicyDefinitionReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionReferenceResponse) *string { return v.PolicyDefinitionReferenceId }).(pulumi.StringPtrOutput)
}

type PolicyDefinitionReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionReferenceResponse)(nil)).Elem()
}

func (o PolicyDefinitionReferenceResponseArrayOutput) ToPolicyDefinitionReferenceResponseArrayOutput() PolicyDefinitionReferenceResponseArrayOutput {
	return o
}

func (o PolicyDefinitionReferenceResponseArrayOutput) ToPolicyDefinitionReferenceResponseArrayOutputWithContext(ctx context.Context) PolicyDefinitionReferenceResponseArrayOutput {
	return o
}

func (o PolicyDefinitionReferenceResponseArrayOutput) Index(i pulumi.IntInput) PolicyDefinitionReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDefinitionReferenceResponse {
		return vs[0].([]PolicyDefinitionReferenceResponse)[vs[1].(int)]
	}).(PolicyDefinitionReferenceResponseOutput)
}

type PrincipalResponse struct {
	DisplayName *string `pulumi:"displayName"`
	Email       *string `pulumi:"email"`
	Id          *string `pulumi:"id"`
	Type        *string `pulumi:"type"`
}

// PrincipalResponseInput is an input type that accepts PrincipalResponseArgs and PrincipalResponseOutput values.
// You can construct a concrete instance of `PrincipalResponseInput` via:
//
//          PrincipalResponseArgs{...}
type PrincipalResponseInput interface {
	pulumi.Input

	ToPrincipalResponseOutput() PrincipalResponseOutput
	ToPrincipalResponseOutputWithContext(context.Context) PrincipalResponseOutput
}

type PrincipalResponseArgs struct {
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	Email       pulumi.StringPtrInput `pulumi:"email"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	Type        pulumi.StringPtrInput `pulumi:"type"`
}

func (PrincipalResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalResponse)(nil)).Elem()
}

func (i PrincipalResponseArgs) ToPrincipalResponseOutput() PrincipalResponseOutput {
	return i.ToPrincipalResponseOutputWithContext(context.Background())
}

func (i PrincipalResponseArgs) ToPrincipalResponseOutputWithContext(ctx context.Context) PrincipalResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrincipalResponseOutput)
}

func (i PrincipalResponseArgs) ToPrincipalResponsePtrOutput() PrincipalResponsePtrOutput {
	return i.ToPrincipalResponsePtrOutputWithContext(context.Background())
}

func (i PrincipalResponseArgs) ToPrincipalResponsePtrOutputWithContext(ctx context.Context) PrincipalResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrincipalResponseOutput).ToPrincipalResponsePtrOutputWithContext(ctx)
}

// PrincipalResponsePtrInput is an input type that accepts PrincipalResponseArgs, PrincipalResponsePtr and PrincipalResponsePtrOutput values.
// You can construct a concrete instance of `PrincipalResponsePtrInput` via:
//
//          PrincipalResponseArgs{...}
//
//  or:
//
//          nil
type PrincipalResponsePtrInput interface {
	pulumi.Input

	ToPrincipalResponsePtrOutput() PrincipalResponsePtrOutput
	ToPrincipalResponsePtrOutputWithContext(context.Context) PrincipalResponsePtrOutput
}

type principalResponsePtrType PrincipalResponseArgs

func PrincipalResponsePtr(v *PrincipalResponseArgs) PrincipalResponsePtrInput {
	return (*principalResponsePtrType)(v)
}

func (*principalResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrincipalResponse)(nil)).Elem()
}

func (i *principalResponsePtrType) ToPrincipalResponsePtrOutput() PrincipalResponsePtrOutput {
	return i.ToPrincipalResponsePtrOutputWithContext(context.Background())
}

func (i *principalResponsePtrType) ToPrincipalResponsePtrOutputWithContext(ctx context.Context) PrincipalResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrincipalResponsePtrOutput)
}

type PrincipalResponseOutput struct{ *pulumi.OutputState }

func (PrincipalResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalResponse)(nil)).Elem()
}

func (o PrincipalResponseOutput) ToPrincipalResponseOutput() PrincipalResponseOutput {
	return o
}

func (o PrincipalResponseOutput) ToPrincipalResponseOutputWithContext(ctx context.Context) PrincipalResponseOutput {
	return o
}

func (o PrincipalResponseOutput) ToPrincipalResponsePtrOutput() PrincipalResponsePtrOutput {
	return o.ToPrincipalResponsePtrOutputWithContext(context.Background())
}

func (o PrincipalResponseOutput) ToPrincipalResponsePtrOutputWithContext(ctx context.Context) PrincipalResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrincipalResponse) *PrincipalResponse {
		return &v
	}).(PrincipalResponsePtrOutput)
}

func (o PrincipalResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrincipalResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o PrincipalResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrincipalResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

func (o PrincipalResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrincipalResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o PrincipalResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrincipalResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PrincipalResponsePtrOutput struct{ *pulumi.OutputState }

func (PrincipalResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrincipalResponse)(nil)).Elem()
}

func (o PrincipalResponsePtrOutput) ToPrincipalResponsePtrOutput() PrincipalResponsePtrOutput {
	return o
}

func (o PrincipalResponsePtrOutput) ToPrincipalResponsePtrOutputWithContext(ctx context.Context) PrincipalResponsePtrOutput {
	return o
}

func (o PrincipalResponsePtrOutput) Elem() PrincipalResponseOutput {
	return o.ApplyT(func(v *PrincipalResponse) PrincipalResponse {
		if v != nil {
			return *v
		}
		var ret PrincipalResponse
		return ret
	}).(PrincipalResponseOutput)
}

func (o PrincipalResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

func (o PrincipalResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

func (o PrincipalResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o PrincipalResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ResourceManagementPrivateLinkEndpointConnectionsResponse struct {
	PrivateEndpointConnections []string `pulumi:"privateEndpointConnections"`
}

// ResourceManagementPrivateLinkEndpointConnectionsResponseInput is an input type that accepts ResourceManagementPrivateLinkEndpointConnectionsResponseArgs and ResourceManagementPrivateLinkEndpointConnectionsResponseOutput values.
// You can construct a concrete instance of `ResourceManagementPrivateLinkEndpointConnectionsResponseInput` via:
//
//          ResourceManagementPrivateLinkEndpointConnectionsResponseArgs{...}
type ResourceManagementPrivateLinkEndpointConnectionsResponseInput interface {
	pulumi.Input

	ToResourceManagementPrivateLinkEndpointConnectionsResponseOutput() ResourceManagementPrivateLinkEndpointConnectionsResponseOutput
	ToResourceManagementPrivateLinkEndpointConnectionsResponseOutputWithContext(context.Context) ResourceManagementPrivateLinkEndpointConnectionsResponseOutput
}

type ResourceManagementPrivateLinkEndpointConnectionsResponseArgs struct {
	PrivateEndpointConnections pulumi.StringArrayInput `pulumi:"privateEndpointConnections"`
}

func (ResourceManagementPrivateLinkEndpointConnectionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceManagementPrivateLinkEndpointConnectionsResponse)(nil)).Elem()
}

func (i ResourceManagementPrivateLinkEndpointConnectionsResponseArgs) ToResourceManagementPrivateLinkEndpointConnectionsResponseOutput() ResourceManagementPrivateLinkEndpointConnectionsResponseOutput {
	return i.ToResourceManagementPrivateLinkEndpointConnectionsResponseOutputWithContext(context.Background())
}

func (i ResourceManagementPrivateLinkEndpointConnectionsResponseArgs) ToResourceManagementPrivateLinkEndpointConnectionsResponseOutputWithContext(ctx context.Context) ResourceManagementPrivateLinkEndpointConnectionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceManagementPrivateLinkEndpointConnectionsResponseOutput)
}

func (i ResourceManagementPrivateLinkEndpointConnectionsResponseArgs) ToResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput() ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput {
	return i.ToResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutputWithContext(context.Background())
}

func (i ResourceManagementPrivateLinkEndpointConnectionsResponseArgs) ToResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutputWithContext(ctx context.Context) ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceManagementPrivateLinkEndpointConnectionsResponseOutput).ToResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutputWithContext(ctx)
}

// ResourceManagementPrivateLinkEndpointConnectionsResponsePtrInput is an input type that accepts ResourceManagementPrivateLinkEndpointConnectionsResponseArgs, ResourceManagementPrivateLinkEndpointConnectionsResponsePtr and ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput values.
// You can construct a concrete instance of `ResourceManagementPrivateLinkEndpointConnectionsResponsePtrInput` via:
//
//          ResourceManagementPrivateLinkEndpointConnectionsResponseArgs{...}
//
//  or:
//
//          nil
type ResourceManagementPrivateLinkEndpointConnectionsResponsePtrInput interface {
	pulumi.Input

	ToResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput() ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput
	ToResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutputWithContext(context.Context) ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput
}

type resourceManagementPrivateLinkEndpointConnectionsResponsePtrType ResourceManagementPrivateLinkEndpointConnectionsResponseArgs

func ResourceManagementPrivateLinkEndpointConnectionsResponsePtr(v *ResourceManagementPrivateLinkEndpointConnectionsResponseArgs) ResourceManagementPrivateLinkEndpointConnectionsResponsePtrInput {
	return (*resourceManagementPrivateLinkEndpointConnectionsResponsePtrType)(v)
}

func (*resourceManagementPrivateLinkEndpointConnectionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceManagementPrivateLinkEndpointConnectionsResponse)(nil)).Elem()
}

func (i *resourceManagementPrivateLinkEndpointConnectionsResponsePtrType) ToResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput() ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput {
	return i.ToResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutputWithContext(context.Background())
}

func (i *resourceManagementPrivateLinkEndpointConnectionsResponsePtrType) ToResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutputWithContext(ctx context.Context) ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput)
}

type ResourceManagementPrivateLinkEndpointConnectionsResponseOutput struct{ *pulumi.OutputState }

func (ResourceManagementPrivateLinkEndpointConnectionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceManagementPrivateLinkEndpointConnectionsResponse)(nil)).Elem()
}

func (o ResourceManagementPrivateLinkEndpointConnectionsResponseOutput) ToResourceManagementPrivateLinkEndpointConnectionsResponseOutput() ResourceManagementPrivateLinkEndpointConnectionsResponseOutput {
	return o
}

func (o ResourceManagementPrivateLinkEndpointConnectionsResponseOutput) ToResourceManagementPrivateLinkEndpointConnectionsResponseOutputWithContext(ctx context.Context) ResourceManagementPrivateLinkEndpointConnectionsResponseOutput {
	return o
}

func (o ResourceManagementPrivateLinkEndpointConnectionsResponseOutput) ToResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput() ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput {
	return o.ToResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutputWithContext(context.Background())
}

func (o ResourceManagementPrivateLinkEndpointConnectionsResponseOutput) ToResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutputWithContext(ctx context.Context) ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceManagementPrivateLinkEndpointConnectionsResponse) *ResourceManagementPrivateLinkEndpointConnectionsResponse {
		return &v
	}).(ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput)
}

func (o ResourceManagementPrivateLinkEndpointConnectionsResponseOutput) PrivateEndpointConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceManagementPrivateLinkEndpointConnectionsResponse) []string {
		return v.PrivateEndpointConnections
	}).(pulumi.StringArrayOutput)
}

type ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceManagementPrivateLinkEndpointConnectionsResponse)(nil)).Elem()
}

func (o ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput) ToResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput() ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput {
	return o
}

func (o ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput) ToResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutputWithContext(ctx context.Context) ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput {
	return o
}

func (o ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput) Elem() ResourceManagementPrivateLinkEndpointConnectionsResponseOutput {
	return o.ApplyT(func(v *ResourceManagementPrivateLinkEndpointConnectionsResponse) ResourceManagementPrivateLinkEndpointConnectionsResponse {
		if v != nil {
			return *v
		}
		var ret ResourceManagementPrivateLinkEndpointConnectionsResponse
		return ret
	}).(ResourceManagementPrivateLinkEndpointConnectionsResponseOutput)
}

func (o ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput) PrivateEndpointConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceManagementPrivateLinkEndpointConnectionsResponse) []string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointConnections
	}).(pulumi.StringArrayOutput)
}

type SystemDataResponse struct {
	CreatedAt          *string `pulumi:"createdAt"`
	CreatedBy          *string `pulumi:"createdBy"`
	CreatedByType      *string `pulumi:"createdByType"`
	LastModifiedAt     *string `pulumi:"lastModifiedAt"`
	LastModifiedBy     *string `pulumi:"lastModifiedBy"`
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// SystemDataResponseInput is an input type that accepts SystemDataResponseArgs and SystemDataResponseOutput values.
// You can construct a concrete instance of `SystemDataResponseInput` via:
//
//          SystemDataResponseArgs{...}
type SystemDataResponseInput interface {
	pulumi.Input

	ToSystemDataResponseOutput() SystemDataResponseOutput
	ToSystemDataResponseOutputWithContext(context.Context) SystemDataResponseOutput
}

type SystemDataResponseArgs struct {
	CreatedAt          pulumi.StringPtrInput `pulumi:"createdAt"`
	CreatedBy          pulumi.StringPtrInput `pulumi:"createdBy"`
	CreatedByType      pulumi.StringPtrInput `pulumi:"createdByType"`
	LastModifiedAt     pulumi.StringPtrInput `pulumi:"lastModifiedAt"`
	LastModifiedBy     pulumi.StringPtrInput `pulumi:"lastModifiedBy"`
	LastModifiedByType pulumi.StringPtrInput `pulumi:"lastModifiedByType"`
}

func (SystemDataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return i.ToSystemDataResponseOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput)
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput).ToSystemDataResponsePtrOutputWithContext(ctx)
}

// SystemDataResponsePtrInput is an input type that accepts SystemDataResponseArgs, SystemDataResponsePtr and SystemDataResponsePtrOutput values.
// You can construct a concrete instance of `SystemDataResponsePtrInput` via:
//
//          SystemDataResponseArgs{...}
//
//  or:
//
//          nil
type SystemDataResponsePtrInput interface {
	pulumi.Input

	ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput
	ToSystemDataResponsePtrOutputWithContext(context.Context) SystemDataResponsePtrOutput
}

type systemDataResponsePtrType SystemDataResponseArgs

func SystemDataResponsePtr(v *SystemDataResponseArgs) SystemDataResponsePtrInput {
	return (*systemDataResponsePtrType)(v)
}

func (*systemDataResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponsePtrOutput)
}

type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemDataResponse) *SystemDataResponse {
		return &v
	}).(SystemDataResponsePtrOutput)
}

func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

type SystemDataResponsePtrOutput struct{ *pulumi.OutputState }

func (SystemDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) Elem() SystemDataResponseOutput {
	return o.ApplyT(func(v *SystemDataResponse) SystemDataResponse {
		if v != nil {
			return *v
		}
		var ret SystemDataResponse
		return ret
	}).(SystemDataResponseOutput)
}

func (o SystemDataResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o SystemDataResponsePtrOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedBy
	}).(pulumi.StringPtrOutput)
}

func (o SystemDataResponsePtrOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByType
	}).(pulumi.StringPtrOutput)
}

func (o SystemDataResponsePtrOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedAt
	}).(pulumi.StringPtrOutput)
}

func (o SystemDataResponsePtrOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedBy
	}).(pulumi.StringPtrOutput)
}

func (o SystemDataResponsePtrOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedByType
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessReviewInstanceOutput{})
	pulumi.RegisterOutputType(AccessReviewInstanceArrayOutput{})
	pulumi.RegisterOutputType(AccessReviewInstanceResponseOutput{})
	pulumi.RegisterOutputType(AccessReviewInstanceResponseArrayOutput{})
	pulumi.RegisterOutputType(AccessReviewReviewerOutput{})
	pulumi.RegisterOutputType(AccessReviewReviewerArrayOutput{})
	pulumi.RegisterOutputType(AccessReviewReviewerResponseOutput{})
	pulumi.RegisterOutputType(AccessReviewReviewerResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagementLockOwnerOutput{})
	pulumi.RegisterOutputType(ManagementLockOwnerArrayOutput{})
	pulumi.RegisterOutputType(ManagementLockOwnerResponseOutput{})
	pulumi.RegisterOutputType(ManagementLockOwnerResponseArrayOutput{})
	pulumi.RegisterOutputType(NonComplianceMessageOutput{})
	pulumi.RegisterOutputType(NonComplianceMessageArrayOutput{})
	pulumi.RegisterOutputType(NonComplianceMessageResponseOutput{})
	pulumi.RegisterOutputType(NonComplianceMessageResponseArrayOutput{})
	pulumi.RegisterOutputType(ParameterDefinitionsValueOutput{})
	pulumi.RegisterOutputType(ParameterDefinitionsValueMapOutput{})
	pulumi.RegisterOutputType(ParameterDefinitionsValueMetadataOutput{})
	pulumi.RegisterOutputType(ParameterDefinitionsValueMetadataPtrOutput{})
	pulumi.RegisterOutputType(ParameterDefinitionsValueResponseOutput{})
	pulumi.RegisterOutputType(ParameterDefinitionsValueResponseMapOutput{})
	pulumi.RegisterOutputType(ParameterDefinitionsValueResponseMetadataOutput{})
	pulumi.RegisterOutputType(ParameterDefinitionsValueResponseMetadataPtrOutput{})
	pulumi.RegisterOutputType(ParameterValuesValueOutput{})
	pulumi.RegisterOutputType(ParameterValuesValueMapOutput{})
	pulumi.RegisterOutputType(ParameterValuesValueResponseOutput{})
	pulumi.RegisterOutputType(ParameterValuesValueResponseMapOutput{})
	pulumi.RegisterOutputType(PermissionOutput{})
	pulumi.RegisterOutputType(PermissionArrayOutput{})
	pulumi.RegisterOutputType(PermissionResponseOutput{})
	pulumi.RegisterOutputType(PermissionResponseArrayOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesResponsePolicyOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesResponsePolicyPtrOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesResponseRoleDefinitionOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesResponseScopeOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesResponseScopePtrOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionGroupOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionGroupResponseOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionReferenceOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionReferenceArrayOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionReferenceResponseOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(PrincipalResponseOutput{})
	pulumi.RegisterOutputType(PrincipalResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceManagementPrivateLinkEndpointConnectionsResponseOutput{})
	pulumi.RegisterOutputType(ResourceManagementPrivateLinkEndpointConnectionsResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponsePtrOutput{})
}
