// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20150101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Management lock information.
//
// Deprecated: Version 2015-01-01 will be removed in v2 of the provider.
func LookupManagementLockAtResourceGroupLevel(ctx *pulumi.Context, args *LookupManagementLockAtResourceGroupLevelArgs, opts ...pulumi.InvokeOption) (*LookupManagementLockAtResourceGroupLevelResult, error) {
	var rv LookupManagementLockAtResourceGroupLevelResult
	err := ctx.Invoke("azure-native:authorization/v20150101:getManagementLockAtResourceGroupLevel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupManagementLockAtResourceGroupLevelArgs struct {
	// The lock name.
	LockName string `pulumi:"lockName"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Management lock information.
type LookupManagementLockAtResourceGroupLevelResult struct {
	// The Id of the lock.
	Id string `pulumi:"id"`
	// The lock level of the management lock.
	Level *string `pulumi:"level"`
	// The name of the lock.
	Name *string `pulumi:"name"`
	// The notes of the management lock.
	Notes *string `pulumi:"notes"`
	// The type of the lock.
	Type string `pulumi:"type"`
}

func LookupManagementLockAtResourceGroupLevelOutput(ctx *pulumi.Context, args LookupManagementLockAtResourceGroupLevelOutputArgs, opts ...pulumi.InvokeOption) LookupManagementLockAtResourceGroupLevelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupManagementLockAtResourceGroupLevelResult, error) {
			args := v.(LookupManagementLockAtResourceGroupLevelArgs)
			r, err := LookupManagementLockAtResourceGroupLevel(ctx, &args, opts...)
			var s LookupManagementLockAtResourceGroupLevelResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupManagementLockAtResourceGroupLevelResultOutput)
}

type LookupManagementLockAtResourceGroupLevelOutputArgs struct {
	// The lock name.
	LockName pulumi.StringInput `pulumi:"lockName"`
	// The resource group name.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupManagementLockAtResourceGroupLevelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagementLockAtResourceGroupLevelArgs)(nil)).Elem()
}

// Management lock information.
type LookupManagementLockAtResourceGroupLevelResultOutput struct{ *pulumi.OutputState }

func (LookupManagementLockAtResourceGroupLevelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagementLockAtResourceGroupLevelResult)(nil)).Elem()
}

func (o LookupManagementLockAtResourceGroupLevelResultOutput) ToLookupManagementLockAtResourceGroupLevelResultOutput() LookupManagementLockAtResourceGroupLevelResultOutput {
	return o
}

func (o LookupManagementLockAtResourceGroupLevelResultOutput) ToLookupManagementLockAtResourceGroupLevelResultOutputWithContext(ctx context.Context) LookupManagementLockAtResourceGroupLevelResultOutput {
	return o
}

// The Id of the lock.
func (o LookupManagementLockAtResourceGroupLevelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagementLockAtResourceGroupLevelResult) string { return v.Id }).(pulumi.StringOutput)
}

// The lock level of the management lock.
func (o LookupManagementLockAtResourceGroupLevelResultOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagementLockAtResourceGroupLevelResult) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// The name of the lock.
func (o LookupManagementLockAtResourceGroupLevelResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagementLockAtResourceGroupLevelResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The notes of the management lock.
func (o LookupManagementLockAtResourceGroupLevelResultOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagementLockAtResourceGroupLevelResult) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

// The type of the lock.
func (o LookupManagementLockAtResourceGroupLevelResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagementLockAtResourceGroupLevelResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagementLockAtResourceGroupLevelResultOutput{})
}
