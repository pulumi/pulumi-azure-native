// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200301preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Deny Assignment
type DenyAssignment struct {
	pulumi.CustomResourceState

	// The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'
	Condition pulumi.StringPtrOutput `pulumi:"condition"`
	// Version of the condition. Currently accepted value is '2.0'
	ConditionVersion pulumi.StringPtrOutput `pulumi:"conditionVersion"`
	// Id of the user who created the assignment
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// Time it was created
	CreatedOn pulumi.StringOutput `pulumi:"createdOn"`
	// The display name of the deny assignment.
	DenyAssignmentName pulumi.StringPtrOutput `pulumi:"denyAssignmentName"`
	// The description of the deny assignment.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Determines if the deny assignment applies to child scopes. Default value is false.
	DoNotApplyToChildScopes pulumi.BoolPtrOutput `pulumi:"doNotApplyToChildScopes"`
	// Array of principals to which the deny assignment does not apply.
	ExcludePrincipals PrincipalResponseArrayOutput `pulumi:"excludePrincipals"`
	// Specifies whether this deny assignment was created by Azure and cannot be edited or deleted.
	IsSystemProtected pulumi.BoolPtrOutput `pulumi:"isSystemProtected"`
	// The deny assignment name.
	Name pulumi.StringOutput `pulumi:"name"`
	// An array of permissions that are denied by the deny assignment.
	Permissions PermissionResponseArrayOutput `pulumi:"permissions"`
	// Array of principals to which the deny assignment applies.
	Principals PrincipalResponseArrayOutput `pulumi:"principals"`
	// The deny assignment scope.
	Scope pulumi.StringPtrOutput `pulumi:"scope"`
	// The deny assignment type.
	Type pulumi.StringOutput `pulumi:"type"`
	// Id of the user who updated the assignment
	UpdatedBy pulumi.StringOutput `pulumi:"updatedBy"`
	// Time it was updated
	UpdatedOn pulumi.StringOutput `pulumi:"updatedOn"`
}

// NewDenyAssignment registers a new resource with the given unique name, arguments, and options.
func NewDenyAssignment(ctx *pulumi.Context,
	name string, args *DenyAssignmentArgs, opts ...pulumi.ResourceOption) (*DenyAssignment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Permissions == nil {
		return nil, errors.New("invalid value for required argument 'Permissions'")
	}
	if args.Principals == nil {
		return nil, errors.New("invalid value for required argument 'Principals'")
	}
	if args.Scope == nil {
		return nil, errors.New("invalid value for required argument 'Scope'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:authorization:DenyAssignment"),
		},
	})
	opts = append(opts, aliases)
	var resource DenyAssignment
	err := ctx.RegisterResource("azure-nextgen:authorization/v20200301preview:DenyAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDenyAssignment gets an existing DenyAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDenyAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DenyAssignmentState, opts ...pulumi.ResourceOption) (*DenyAssignment, error) {
	var resource DenyAssignment
	err := ctx.ReadResource("azure-nextgen:authorization/v20200301preview:DenyAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DenyAssignment resources.
type denyAssignmentState struct {
	// The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'
	Condition *string `pulumi:"condition"`
	// Version of the condition. Currently accepted value is '2.0'
	ConditionVersion *string `pulumi:"conditionVersion"`
	// Id of the user who created the assignment
	CreatedBy *string `pulumi:"createdBy"`
	// Time it was created
	CreatedOn *string `pulumi:"createdOn"`
	// The display name of the deny assignment.
	DenyAssignmentName *string `pulumi:"denyAssignmentName"`
	// The description of the deny assignment.
	Description *string `pulumi:"description"`
	// Determines if the deny assignment applies to child scopes. Default value is false.
	DoNotApplyToChildScopes *bool `pulumi:"doNotApplyToChildScopes"`
	// Array of principals to which the deny assignment does not apply.
	ExcludePrincipals []PrincipalResponse `pulumi:"excludePrincipals"`
	// Specifies whether this deny assignment was created by Azure and cannot be edited or deleted.
	IsSystemProtected *bool `pulumi:"isSystemProtected"`
	// The deny assignment name.
	Name *string `pulumi:"name"`
	// An array of permissions that are denied by the deny assignment.
	Permissions []PermissionResponse `pulumi:"permissions"`
	// Array of principals to which the deny assignment applies.
	Principals []PrincipalResponse `pulumi:"principals"`
	// The deny assignment scope.
	Scope *string `pulumi:"scope"`
	// The deny assignment type.
	Type *string `pulumi:"type"`
	// Id of the user who updated the assignment
	UpdatedBy *string `pulumi:"updatedBy"`
	// Time it was updated
	UpdatedOn *string `pulumi:"updatedOn"`
}

type DenyAssignmentState struct {
	// The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'
	Condition pulumi.StringPtrInput
	// Version of the condition. Currently accepted value is '2.0'
	ConditionVersion pulumi.StringPtrInput
	// Id of the user who created the assignment
	CreatedBy pulumi.StringPtrInput
	// Time it was created
	CreatedOn pulumi.StringPtrInput
	// The display name of the deny assignment.
	DenyAssignmentName pulumi.StringPtrInput
	// The description of the deny assignment.
	Description pulumi.StringPtrInput
	// Determines if the deny assignment applies to child scopes. Default value is false.
	DoNotApplyToChildScopes pulumi.BoolPtrInput
	// Array of principals to which the deny assignment does not apply.
	ExcludePrincipals PrincipalResponseArrayInput
	// Specifies whether this deny assignment was created by Azure and cannot be edited or deleted.
	IsSystemProtected pulumi.BoolPtrInput
	// The deny assignment name.
	Name pulumi.StringPtrInput
	// An array of permissions that are denied by the deny assignment.
	Permissions PermissionResponseArrayInput
	// Array of principals to which the deny assignment applies.
	Principals PrincipalResponseArrayInput
	// The deny assignment scope.
	Scope pulumi.StringPtrInput
	// The deny assignment type.
	Type pulumi.StringPtrInput
	// Id of the user who updated the assignment
	UpdatedBy pulumi.StringPtrInput
	// Time it was updated
	UpdatedOn pulumi.StringPtrInput
}

func (DenyAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*denyAssignmentState)(nil)).Elem()
}

type denyAssignmentArgs struct {
	// The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'
	Condition *string `pulumi:"condition"`
	// Version of the condition. Currently accepted value is '2.0'
	ConditionVersion *string `pulumi:"conditionVersion"`
	// The display name of the deny assignment.
	DenyAssignmentName *string `pulumi:"denyAssignmentName"`
	// The description of the deny assignment.
	Description *string `pulumi:"description"`
	// Determines if the deny assignment applies to child scopes. Default value is false.
	DoNotApplyToChildScopes *bool `pulumi:"doNotApplyToChildScopes"`
	// Array of principals to which the deny assignment does not apply.
	ExcludePrincipals []Principal `pulumi:"excludePrincipals"`
	// Specifies whether this deny assignment was created by Azure and cannot be edited or deleted.
	IsSystemProtected *bool `pulumi:"isSystemProtected"`
	// An array of permissions that are denied by the deny assignment.
	Permissions []Permission `pulumi:"permissions"`
	// Array of principals to which the deny assignment applies.
	Principals []Principal `pulumi:"principals"`
	// The deny assignment scope.
	Scope string `pulumi:"scope"`
}

// The set of arguments for constructing a DenyAssignment resource.
type DenyAssignmentArgs struct {
	// The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'
	Condition pulumi.StringPtrInput
	// Version of the condition. Currently accepted value is '2.0'
	ConditionVersion pulumi.StringPtrInput
	// The display name of the deny assignment.
	DenyAssignmentName pulumi.StringPtrInput
	// The description of the deny assignment.
	Description pulumi.StringPtrInput
	// Determines if the deny assignment applies to child scopes. Default value is false.
	DoNotApplyToChildScopes pulumi.BoolPtrInput
	// Array of principals to which the deny assignment does not apply.
	ExcludePrincipals PrincipalArrayInput
	// Specifies whether this deny assignment was created by Azure and cannot be edited or deleted.
	IsSystemProtected pulumi.BoolPtrInput
	// An array of permissions that are denied by the deny assignment.
	Permissions PermissionArrayInput
	// Array of principals to which the deny assignment applies.
	Principals PrincipalArrayInput
	// The deny assignment scope.
	Scope pulumi.StringInput
}

func (DenyAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*denyAssignmentArgs)(nil)).Elem()
}

type DenyAssignmentInput interface {
	pulumi.Input

	ToDenyAssignmentOutput() DenyAssignmentOutput
	ToDenyAssignmentOutputWithContext(ctx context.Context) DenyAssignmentOutput
}

func (*DenyAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((*DenyAssignment)(nil))
}

func (i *DenyAssignment) ToDenyAssignmentOutput() DenyAssignmentOutput {
	return i.ToDenyAssignmentOutputWithContext(context.Background())
}

func (i *DenyAssignment) ToDenyAssignmentOutputWithContext(ctx context.Context) DenyAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DenyAssignmentOutput)
}

type DenyAssignmentOutput struct {
	*pulumi.OutputState
}

func (DenyAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DenyAssignment)(nil))
}

func (o DenyAssignmentOutput) ToDenyAssignmentOutput() DenyAssignmentOutput {
	return o
}

func (o DenyAssignmentOutput) ToDenyAssignmentOutputWithContext(ctx context.Context) DenyAssignmentOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DenyAssignmentOutput{})
}
