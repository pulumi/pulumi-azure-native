// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20191001preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Subscription Information with the alias.
//
// Deprecated: Version 2019-10-01-preview will be removed in v2 of the provider.
func LookupSubscriptionAlias(ctx *pulumi.Context, args *LookupSubscriptionAliasArgs, opts ...pulumi.InvokeOption) (*LookupSubscriptionAliasResult, error) {
	var rv LookupSubscriptionAliasResult
	err := ctx.Invoke("azure-native:subscription/v20191001preview:getSubscriptionAlias", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSubscriptionAliasArgs struct {
	// Name for this subscription creation request also known as alias. Note that this is not the same as subscription name and this doesn’t have any other lifecycle need beyond the request for subscription creation.
	AliasName string `pulumi:"aliasName"`
}

// Subscription Information with the alias.
type LookupSubscriptionAliasResult struct {
	// Fully qualified ID for the alias resource.
	Id string `pulumi:"id"`
	// Alias ID.
	Name string `pulumi:"name"`
	// Put Alias response properties.
	Properties PutAliasResponsePropertiesResponse `pulumi:"properties"`
	// Resource type, Microsoft.Subscription/aliases.
	Type string `pulumi:"type"`
}

func LookupSubscriptionAliasOutput(ctx *pulumi.Context, args LookupSubscriptionAliasOutputArgs, opts ...pulumi.InvokeOption) LookupSubscriptionAliasResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSubscriptionAliasResult, error) {
			args := v.(LookupSubscriptionAliasArgs)
			r, err := LookupSubscriptionAlias(ctx, &args, opts...)
			var s LookupSubscriptionAliasResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSubscriptionAliasResultOutput)
}

type LookupSubscriptionAliasOutputArgs struct {
	// Name for this subscription creation request also known as alias. Note that this is not the same as subscription name and this doesn’t have any other lifecycle need beyond the request for subscription creation.
	AliasName pulumi.StringInput `pulumi:"aliasName"`
}

func (LookupSubscriptionAliasOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubscriptionAliasArgs)(nil)).Elem()
}

// Subscription Information with the alias.
type LookupSubscriptionAliasResultOutput struct{ *pulumi.OutputState }

func (LookupSubscriptionAliasResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubscriptionAliasResult)(nil)).Elem()
}

func (o LookupSubscriptionAliasResultOutput) ToLookupSubscriptionAliasResultOutput() LookupSubscriptionAliasResultOutput {
	return o
}

func (o LookupSubscriptionAliasResultOutput) ToLookupSubscriptionAliasResultOutputWithContext(ctx context.Context) LookupSubscriptionAliasResultOutput {
	return o
}

// Fully qualified ID for the alias resource.
func (o LookupSubscriptionAliasResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionAliasResult) string { return v.Id }).(pulumi.StringOutput)
}

// Alias ID.
func (o LookupSubscriptionAliasResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionAliasResult) string { return v.Name }).(pulumi.StringOutput)
}

// Put Alias response properties.
func (o LookupSubscriptionAliasResultOutput) Properties() PutAliasResponsePropertiesResponseOutput {
	return o.ApplyT(func(v LookupSubscriptionAliasResult) PutAliasResponsePropertiesResponse { return v.Properties }).(PutAliasResponsePropertiesResponseOutput)
}

// Resource type, Microsoft.Subscription/aliases.
func (o LookupSubscriptionAliasResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionAliasResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSubscriptionAliasResultOutput{})
}
