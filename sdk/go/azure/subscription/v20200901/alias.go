// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200901

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Subscription Information with the alias.
type Alias struct {
	pulumi.CustomResourceState

	// Alias ID.
	Name pulumi.StringOutput `pulumi:"name"`
	// Put Alias response properties.
	Properties PutAliasResponsePropertiesResponseOutput `pulumi:"properties"`
	// Resource type, Microsoft.Subscription/aliases.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAlias registers a new resource with the given unique name, arguments, and options.
func NewAlias(ctx *pulumi.Context,
	name string, args *AliasArgs, opts ...pulumi.ResourceOption) (*Alias, error) {
	if args == nil || args.AliasName == nil {
		return nil, errors.New("missing required argument 'AliasName'")
	}
	if args == nil || args.Properties == nil {
		return nil, errors.New("missing required argument 'Properties'")
	}
	if args == nil {
		args = &AliasArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:subscription/latest:Alias"),
		},
		{
			Type: pulumi.String("azure-nextgen:subscription/v20191001preview:Alias"),
		},
	})
	opts = append(opts, aliases)
	var resource Alias
	err := ctx.RegisterResource("azure-nextgen:subscription/v20200901:Alias", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlias gets an existing Alias resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlias(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AliasState, opts ...pulumi.ResourceOption) (*Alias, error) {
	var resource Alias
	err := ctx.ReadResource("azure-nextgen:subscription/v20200901:Alias", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Alias resources.
type aliasState struct {
	// Alias ID.
	Name *string `pulumi:"name"`
	// Put Alias response properties.
	Properties *PutAliasResponsePropertiesResponse `pulumi:"properties"`
	// Resource type, Microsoft.Subscription/aliases.
	Type *string `pulumi:"type"`
}

type AliasState struct {
	// Alias ID.
	Name pulumi.StringPtrInput
	// Put Alias response properties.
	Properties PutAliasResponsePropertiesResponsePtrInput
	// Resource type, Microsoft.Subscription/aliases.
	Type pulumi.StringPtrInput
}

func (AliasState) ElementType() reflect.Type {
	return reflect.TypeOf((*aliasState)(nil)).Elem()
}

type aliasArgs struct {
	// Alias Name
	AliasName string `pulumi:"aliasName"`
	// Put alias request properties.
	Properties PutAliasRequestProperties `pulumi:"properties"`
}

// The set of arguments for constructing a Alias resource.
type AliasArgs struct {
	// Alias Name
	AliasName pulumi.StringInput
	// Put alias request properties.
	Properties PutAliasRequestPropertiesInput
}

func (AliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aliasArgs)(nil)).Elem()
}
