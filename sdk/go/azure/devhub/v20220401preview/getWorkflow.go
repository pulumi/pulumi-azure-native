// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220401preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource representation of a workflow
func LookupWorkflow(ctx *pulumi.Context, args *LookupWorkflowArgs, opts ...pulumi.InvokeOption) (*LookupWorkflowResult, error) {
	var rv LookupWorkflowResult
	err := ctx.Invoke("azure-native:devhub/v20220401preview:getWorkflow", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWorkflowArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the workflow resource.
	WorkflowName string `pulumi:"workflowName"`
}

// Resource representation of a workflow
type LookupWorkflowResult struct {
	// Information on the azure container registry
	Acr *ACRResponse `pulumi:"acr"`
	// The Azure Kubernetes Cluster Resource the application will be deployed to.
	AksResourceId *string `pulumi:"aksResourceId"`
	// Determines the authorization status of requests.
	AuthStatus string `pulumi:"authStatus"`
	// Repository Branch Name
	BranchName           *string                       `pulumi:"branchName"`
	DeploymentProperties *DeploymentPropertiesResponse `pulumi:"deploymentProperties"`
	// Path to Dockerfile Build Context within the repository.
	DockerBuildContext *string `pulumi:"dockerBuildContext"`
	// Path to the Dockerfile within the repository.
	Dockerfile *string `pulumi:"dockerfile"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id              string               `pulumi:"id"`
	LastWorkflowRun *WorkflowRunResponse `pulumi:"lastWorkflowRun"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Kubernetes namespace the application is deployed to.
	Namespace *string `pulumi:"namespace"`
	// The fields needed for OIDC with GitHub.
	OidcCredentials *GitHubWorkflowProfileResponseOidcCredentials `pulumi:"oidcCredentials"`
	// The status of the Pull Request submitted against the users repository.
	PrStatus string `pulumi:"prStatus"`
	// The URL to the Pull Request submitted against the users repository.
	PrURL string `pulumi:"prURL"`
	// The number associated with the submitted pull request.
	PullNumber int `pulumi:"pullNumber"`
	// Repository Name
	RepositoryName *string `pulumi:"repositoryName"`
	// Repository Owner
	RepositoryOwner *string `pulumi:"repositoryOwner"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupWorkflowOutput(ctx *pulumi.Context, args LookupWorkflowOutputArgs, opts ...pulumi.InvokeOption) LookupWorkflowResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkflowResult, error) {
			args := v.(LookupWorkflowArgs)
			r, err := LookupWorkflow(ctx, &args, opts...)
			var s LookupWorkflowResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkflowResultOutput)
}

type LookupWorkflowOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the workflow resource.
	WorkflowName pulumi.StringInput `pulumi:"workflowName"`
}

func (LookupWorkflowOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkflowArgs)(nil)).Elem()
}

// Resource representation of a workflow
type LookupWorkflowResultOutput struct{ *pulumi.OutputState }

func (LookupWorkflowResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkflowResult)(nil)).Elem()
}

func (o LookupWorkflowResultOutput) ToLookupWorkflowResultOutput() LookupWorkflowResultOutput {
	return o
}

func (o LookupWorkflowResultOutput) ToLookupWorkflowResultOutputWithContext(ctx context.Context) LookupWorkflowResultOutput {
	return o
}

// Information on the azure container registry
func (o LookupWorkflowResultOutput) Acr() ACRResponsePtrOutput {
	return o.ApplyT(func(v LookupWorkflowResult) *ACRResponse { return v.Acr }).(ACRResponsePtrOutput)
}

// The Azure Kubernetes Cluster Resource the application will be deployed to.
func (o LookupWorkflowResultOutput) AksResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkflowResult) *string { return v.AksResourceId }).(pulumi.StringPtrOutput)
}

// Determines the authorization status of requests.
func (o LookupWorkflowResultOutput) AuthStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowResult) string { return v.AuthStatus }).(pulumi.StringOutput)
}

// Repository Branch Name
func (o LookupWorkflowResultOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkflowResult) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

func (o LookupWorkflowResultOutput) DeploymentProperties() DeploymentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupWorkflowResult) *DeploymentPropertiesResponse { return v.DeploymentProperties }).(DeploymentPropertiesResponsePtrOutput)
}

// Path to Dockerfile Build Context within the repository.
func (o LookupWorkflowResultOutput) DockerBuildContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkflowResult) *string { return v.DockerBuildContext }).(pulumi.StringPtrOutput)
}

// Path to the Dockerfile within the repository.
func (o LookupWorkflowResultOutput) Dockerfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkflowResult) *string { return v.Dockerfile }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupWorkflowResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupWorkflowResultOutput) LastWorkflowRun() WorkflowRunResponsePtrOutput {
	return o.ApplyT(func(v LookupWorkflowResult) *WorkflowRunResponse { return v.LastWorkflowRun }).(WorkflowRunResponsePtrOutput)
}

// The geo-location where the resource lives
func (o LookupWorkflowResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupWorkflowResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowResult) string { return v.Name }).(pulumi.StringOutput)
}

// Kubernetes namespace the application is deployed to.
func (o LookupWorkflowResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkflowResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The fields needed for OIDC with GitHub.
func (o LookupWorkflowResultOutput) OidcCredentials() GitHubWorkflowProfileResponseOidcCredentialsPtrOutput {
	return o.ApplyT(func(v LookupWorkflowResult) *GitHubWorkflowProfileResponseOidcCredentials { return v.OidcCredentials }).(GitHubWorkflowProfileResponseOidcCredentialsPtrOutput)
}

// The status of the Pull Request submitted against the users repository.
func (o LookupWorkflowResultOutput) PrStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowResult) string { return v.PrStatus }).(pulumi.StringOutput)
}

// The URL to the Pull Request submitted against the users repository.
func (o LookupWorkflowResultOutput) PrURL() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowResult) string { return v.PrURL }).(pulumi.StringOutput)
}

// The number associated with the submitted pull request.
func (o LookupWorkflowResultOutput) PullNumber() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWorkflowResult) int { return v.PullNumber }).(pulumi.IntOutput)
}

// Repository Name
func (o LookupWorkflowResultOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkflowResult) *string { return v.RepositoryName }).(pulumi.StringPtrOutput)
}

// Repository Owner
func (o LookupWorkflowResultOutput) RepositoryOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkflowResult) *string { return v.RepositoryOwner }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupWorkflowResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupWorkflowResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupWorkflowResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupWorkflowResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupWorkflowResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkflowResultOutput{})
}
