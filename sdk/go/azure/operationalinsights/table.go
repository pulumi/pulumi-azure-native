// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package operationalinsights

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Workspace data table definition.
// API Version: 2021-12-01-preview.
type Table struct {
	pulumi.CustomResourceState

	// The table data archive retention in days. Calculated as (totalRetentionInDays-retentionInDays)
	ArchiveRetentionInDays pulumi.IntOutput `pulumi:"archiveRetentionInDays"`
	// The timestamp that table plan was last modified (UTC).
	LastPlanModifiedDate pulumi.StringOutput `pulumi:"lastPlanModifiedDate"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Instruct the system how to handle and charge the logs ingested to this table.
	Plan pulumi.StringPtrOutput `pulumi:"plan"`
	// Table's current provisioning state. If set to 'updating', indicates a resource lock due to ongoing operation, forbidding any update to the table until the ongoing operation is concluded.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Parameters of the restore operation that initiated this table.
	RestoredLogs RestoredLogsResponsePtrOutput `pulumi:"restoredLogs"`
	// Search job execution statistics.
	ResultStatistics ResultStatisticsResponsePtrOutput `pulumi:"resultStatistics"`
	// The table retention in days, between 4 and 730. Setting this property to -1 will default to the workspace retention.
	RetentionInDays pulumi.IntPtrOutput `pulumi:"retentionInDays"`
	// Table schema.
	Schema SchemaResponsePtrOutput `pulumi:"schema"`
	// Parameters of the search job that initiated this table.
	SearchResults SearchResultsResponsePtrOutput `pulumi:"searchResults"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The table total retention in days, between 4 and 2555. Setting this property to -1 will default to table retention.
	TotalRetentionInDays pulumi.IntPtrOutput `pulumi:"totalRetentionInDays"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewTable registers a new resource with the given unique name, arguments, and options.
func NewTable(ctx *pulumi.Context,
	name string, args *TableArgs, opts ...pulumi.ResourceOption) (*Table, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:operationalinsights/v20211201preview:Table"),
		},
	})
	opts = append(opts, aliases)
	var resource Table
	err := ctx.RegisterResource("azure-native:operationalinsights:Table", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTable gets an existing Table resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TableState, opts ...pulumi.ResourceOption) (*Table, error) {
	var resource Table
	err := ctx.ReadResource("azure-native:operationalinsights:Table", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Table resources.
type tableState struct {
}

type TableState struct {
}

func (TableState) ElementType() reflect.Type {
	return reflect.TypeOf((*tableState)(nil)).Elem()
}

type tableArgs struct {
	// Instruct the system how to handle and charge the logs ingested to this table.
	Plan *string `pulumi:"plan"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Parameters of the restore operation that initiated this table.
	RestoredLogs *RestoredLogs `pulumi:"restoredLogs"`
	// The table retention in days, between 4 and 730. Setting this property to -1 will default to the workspace retention.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// Table schema.
	Schema *Schema `pulumi:"schema"`
	// Parameters of the search job that initiated this table.
	SearchResults *SearchResults `pulumi:"searchResults"`
	// The name of the table.
	TableName *string `pulumi:"tableName"`
	// The table total retention in days, between 4 and 2555. Setting this property to -1 will default to table retention.
	TotalRetentionInDays *int `pulumi:"totalRetentionInDays"`
	// The name of the workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a Table resource.
type TableArgs struct {
	// Instruct the system how to handle and charge the logs ingested to this table.
	Plan pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Parameters of the restore operation that initiated this table.
	RestoredLogs RestoredLogsPtrInput
	// The table retention in days, between 4 and 730. Setting this property to -1 will default to the workspace retention.
	RetentionInDays pulumi.IntPtrInput
	// Table schema.
	Schema SchemaPtrInput
	// Parameters of the search job that initiated this table.
	SearchResults SearchResultsPtrInput
	// The name of the table.
	TableName pulumi.StringPtrInput
	// The table total retention in days, between 4 and 2555. Setting this property to -1 will default to table retention.
	TotalRetentionInDays pulumi.IntPtrInput
	// The name of the workspace.
	WorkspaceName pulumi.StringInput
}

func (TableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tableArgs)(nil)).Elem()
}

type TableInput interface {
	pulumi.Input

	ToTableOutput() TableOutput
	ToTableOutputWithContext(ctx context.Context) TableOutput
}

func (*Table) ElementType() reflect.Type {
	return reflect.TypeOf((**Table)(nil)).Elem()
}

func (i *Table) ToTableOutput() TableOutput {
	return i.ToTableOutputWithContext(context.Background())
}

func (i *Table) ToTableOutputWithContext(ctx context.Context) TableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableOutput)
}

type TableOutput struct{ *pulumi.OutputState }

func (TableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Table)(nil)).Elem()
}

func (o TableOutput) ToTableOutput() TableOutput {
	return o
}

func (o TableOutput) ToTableOutputWithContext(ctx context.Context) TableOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(TableOutput{})
}
