// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package operationalinsights

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A user-defined logical grouping of machines.
// API Version: 2015-11-01-preview.
func LookupMachineGroup(ctx *pulumi.Context, args *LookupMachineGroupArgs, opts ...pulumi.InvokeOption) (*LookupMachineGroupResult, error) {
	var rv LookupMachineGroupResult
	err := ctx.Invoke("azure-native:operationalinsights:getMachineGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMachineGroupArgs struct {
	// UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow
	EndTime *string `pulumi:"endTime"`
	// Machine Group resource name.
	MachineGroupName string `pulumi:"machineGroupName"`
	// Resource group name within the specified subscriptionId.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m
	StartTime *string `pulumi:"startTime"`
	// OMS workspace containing the resources of interest.
	WorkspaceName string `pulumi:"workspaceName"`
}

// A user-defined logical grouping of machines.
type LookupMachineGroupResult struct {
	// Count of machines in this group. The value of count may be bigger than the number of machines in case of the group has been truncated due to exceeding the max number of machines a group can handle.
	Count *int `pulumi:"count"`
	// User defined name for the group
	DisplayName string `pulumi:"displayName"`
	// Resource ETAG.
	Etag *string `pulumi:"etag"`
	// Type of the machine group
	GroupType *string `pulumi:"groupType"`
	// Resource identifier.
	Id string `pulumi:"id"`
	// Additional resource type qualifier.
	// Expected value is 'machineGroup'.
	Kind string `pulumi:"kind"`
	// References of the machines in this group. The hints within each reference do not represent the current value of the corresponding fields. They are a snapshot created during the last time the machine group was updated.
	Machines []MachineReferenceWithHintsResponse `pulumi:"machines"`
	// Resource name.
	Name string `pulumi:"name"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupMachineGroupOutput(ctx *pulumi.Context, args LookupMachineGroupOutputArgs, opts ...pulumi.InvokeOption) LookupMachineGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMachineGroupResult, error) {
			args := v.(LookupMachineGroupArgs)
			r, err := LookupMachineGroup(ctx, &args, opts...)
			var s LookupMachineGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMachineGroupResultOutput)
}

type LookupMachineGroupOutputArgs struct {
	// UTC date and time specifying the end time of an interval. When not specified the service uses DateTime.UtcNow
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Machine Group resource name.
	MachineGroupName pulumi.StringInput `pulumi:"machineGroupName"`
	// Resource group name within the specified subscriptionId.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// UTC date and time specifying the start time of an interval. When not specified the service uses DateTime.UtcNow - 10m
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// OMS workspace containing the resources of interest.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

func (LookupMachineGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMachineGroupArgs)(nil)).Elem()
}

// A user-defined logical grouping of machines.
type LookupMachineGroupResultOutput struct{ *pulumi.OutputState }

func (LookupMachineGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMachineGroupResult)(nil)).Elem()
}

func (o LookupMachineGroupResultOutput) ToLookupMachineGroupResultOutput() LookupMachineGroupResultOutput {
	return o
}

func (o LookupMachineGroupResultOutput) ToLookupMachineGroupResultOutputWithContext(ctx context.Context) LookupMachineGroupResultOutput {
	return o
}

// Count of machines in this group. The value of count may be bigger than the number of machines in case of the group has been truncated due to exceeding the max number of machines a group can handle.
func (o LookupMachineGroupResultOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupMachineGroupResult) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// User defined name for the group
func (o LookupMachineGroupResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMachineGroupResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Resource ETAG.
func (o LookupMachineGroupResultOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMachineGroupResult) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Type of the machine group
func (o LookupMachineGroupResultOutput) GroupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMachineGroupResult) *string { return v.GroupType }).(pulumi.StringPtrOutput)
}

// Resource identifier.
func (o LookupMachineGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMachineGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// Additional resource type qualifier.
// Expected value is 'machineGroup'.
func (o LookupMachineGroupResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMachineGroupResult) string { return v.Kind }).(pulumi.StringOutput)
}

// References of the machines in this group. The hints within each reference do not represent the current value of the corresponding fields. They are a snapshot created during the last time the machine group was updated.
func (o LookupMachineGroupResultOutput) Machines() MachineReferenceWithHintsResponseArrayOutput {
	return o.ApplyT(func(v LookupMachineGroupResult) []MachineReferenceWithHintsResponse { return v.Machines }).(MachineReferenceWithHintsResponseArrayOutput)
}

// Resource name.
func (o LookupMachineGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMachineGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type.
func (o LookupMachineGroupResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMachineGroupResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMachineGroupResultOutput{})
}
