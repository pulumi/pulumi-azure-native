// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190801preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Linked storage accounts top level resource container.
func LookupLinkedStorageAccount(ctx *pulumi.Context, args *LookupLinkedStorageAccountArgs, opts ...pulumi.InvokeOption) (*LookupLinkedStorageAccountResult, error) {
	var rv LookupLinkedStorageAccountResult
	err := ctx.Invoke("azure-native:operationalinsights/v20190801preview:getLinkedStorageAccount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLinkedStorageAccountArgs struct {
	// Linked storage accounts type.
	DataSourceType string `pulumi:"dataSourceType"`
	// The name of the resource group to get. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the Log Analytics Workspace that will contain the resource.
	WorkspaceName string `pulumi:"workspaceName"`
}

// Linked storage accounts top level resource container.
type LookupLinkedStorageAccountResult struct {
	// Linked storage accounts type.
	DataSourceType string `pulumi:"dataSourceType"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// Linked storage accounts resources ids.
	StorageAccountIds []string `pulumi:"storageAccountIds"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupLinkedStorageAccountOutput(ctx *pulumi.Context, args LookupLinkedStorageAccountOutputArgs, opts ...pulumi.InvokeOption) LookupLinkedStorageAccountResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLinkedStorageAccountResult, error) {
			args := v.(LookupLinkedStorageAccountArgs)
			r, err := LookupLinkedStorageAccount(ctx, &args, opts...)
			var s LookupLinkedStorageAccountResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLinkedStorageAccountResultOutput)
}

type LookupLinkedStorageAccountOutputArgs struct {
	// Linked storage accounts type.
	DataSourceType pulumi.StringInput `pulumi:"dataSourceType"`
	// The name of the resource group to get. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of the Log Analytics Workspace that will contain the resource.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

func (LookupLinkedStorageAccountOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLinkedStorageAccountArgs)(nil)).Elem()
}

// Linked storage accounts top level resource container.
type LookupLinkedStorageAccountResultOutput struct{ *pulumi.OutputState }

func (LookupLinkedStorageAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLinkedStorageAccountResult)(nil)).Elem()
}

func (o LookupLinkedStorageAccountResultOutput) ToLookupLinkedStorageAccountResultOutput() LookupLinkedStorageAccountResultOutput {
	return o
}

func (o LookupLinkedStorageAccountResultOutput) ToLookupLinkedStorageAccountResultOutputWithContext(ctx context.Context) LookupLinkedStorageAccountResultOutput {
	return o
}

// Linked storage accounts type.
func (o LookupLinkedStorageAccountResultOutput) DataSourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLinkedStorageAccountResult) string { return v.DataSourceType }).(pulumi.StringOutput)
}

// Resource ID.
func (o LookupLinkedStorageAccountResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLinkedStorageAccountResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupLinkedStorageAccountResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLinkedStorageAccountResult) string { return v.Name }).(pulumi.StringOutput)
}

// Linked storage accounts resources ids.
func (o LookupLinkedStorageAccountResultOutput) StorageAccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLinkedStorageAccountResult) []string { return v.StorageAccountIds }).(pulumi.StringArrayOutput)
}

// Resource type.
func (o LookupLinkedStorageAccountResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLinkedStorageAccountResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLinkedStorageAccountResultOutput{})
}
