// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200501preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Machine Learning datastore object wrapped into ARM resource envelope.
type MachineLearningDatastore struct {
	pulumi.CustomResourceState

	// The identity of the resource.
	Identity IdentityResponsePtrOutput `pulumi:"identity"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Specifies the name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Datastore properties
	Properties DatastoreResponseOutput `pulumi:"properties"`
	// The sku of the workspace.
	Sku SkuResponsePtrOutput `pulumi:"sku"`
	// Contains resource tags defined as key/value pairs.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMachineLearningDatastore registers a new resource with the given unique name, arguments, and options.
func NewMachineLearningDatastore(ctx *pulumi.Context,
	name string, args *MachineLearningDatastoreArgs, opts ...pulumi.ResourceOption) (*MachineLearningDatastore, error) {
	if args == nil || args.DataStoreType == nil {
		return nil, errors.New("missing required argument 'DataStoreType'")
	}
	if args == nil || args.DatastoreName == nil {
		return nil, errors.New("missing required argument 'DatastoreName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.WorkspaceName == nil {
		return nil, errors.New("missing required argument 'WorkspaceName'")
	}
	if args == nil {
		args = &MachineLearningDatastoreArgs{}
	}
	var resource MachineLearningDatastore
	err := ctx.RegisterResource("azure-nextgen:machinelearningservices/v20200501preview:MachineLearningDatastore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMachineLearningDatastore gets an existing MachineLearningDatastore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMachineLearningDatastore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MachineLearningDatastoreState, opts ...pulumi.ResourceOption) (*MachineLearningDatastore, error) {
	var resource MachineLearningDatastore
	err := ctx.ReadResource("azure-nextgen:machinelearningservices/v20200501preview:MachineLearningDatastore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MachineLearningDatastore resources.
type machineLearningDatastoreState struct {
	// The identity of the resource.
	Identity *IdentityResponse `pulumi:"identity"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// Specifies the name of the resource.
	Name *string `pulumi:"name"`
	// Datastore properties
	Properties *DatastoreResponse `pulumi:"properties"`
	// The sku of the workspace.
	Sku *SkuResponse `pulumi:"sku"`
	// Contains resource tags defined as key/value pairs.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the type of the resource.
	Type *string `pulumi:"type"`
}

type MachineLearningDatastoreState struct {
	// The identity of the resource.
	Identity IdentityResponsePtrInput
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput
	// Specifies the name of the resource.
	Name pulumi.StringPtrInput
	// Datastore properties
	Properties DatastoreResponsePtrInput
	// The sku of the workspace.
	Sku SkuResponsePtrInput
	// Contains resource tags defined as key/value pairs.
	Tags pulumi.StringMapInput
	// Specifies the type of the resource.
	Type pulumi.StringPtrInput
}

func (MachineLearningDatastoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*machineLearningDatastoreState)(nil)).Elem()
}

type machineLearningDatastoreArgs struct {
	// Account Key of storage account.
	AccountKey *string `pulumi:"accountKey"`
	// The name of the storage account.
	AccountName *string `pulumi:"accountName"`
	// The resource group the ADLS store belongs to. Defaults to selected resource group.
	AdlsResourceGroup *string `pulumi:"adlsResourceGroup"`
	// The ID of the subscription the ADLS store belongs to. Defaults to selected subscription.
	AdlsSubscriptionId *string `pulumi:"adlsSubscriptionId"`
	// Authority url used to authenticate the user.
	AuthorityUrl *string `pulumi:"authorityUrl"`
	// The service principal's client/application ID.
	ClientId *string `pulumi:"clientId"`
	// The service principal's secret.
	ClientSecret *string `pulumi:"clientSecret"`
	// The name of the azure blob container.
	ContainerName *string `pulumi:"containerName"`
	// Specifies datastore type.
	DataStoreType string `pulumi:"dataStoreType"`
	// The database name.
	DatabaseName *string `pulumi:"databaseName"`
	// The Datastore name.
	DatastoreName string `pulumi:"datastoreName"`
	// The description of the datastore.
	Description *string `pulumi:"description"`
	// The endpoint of the server.
	Endpoint *string `pulumi:"endpoint"`
	// This sets the ssl value of the server. Defaults to true if not set.
	EnforceSSL *bool `pulumi:"enforceSSL"`
	// The file system name of the ADLS Gen2.
	FileSystem *string `pulumi:"fileSystem"`
	// Include datastore secret in response.
	IncludeSecret *bool `pulumi:"includeSecret"`
	// The name of the datastore.
	Name *string `pulumi:"name"`
	// The password.
	Password *string `pulumi:"password"`
	// The port number.
	Port *string `pulumi:"port"`
	// The protocol to be used
	Protocol *string `pulumi:"protocol"`
	// Name of the resource group in which workspace is located.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Determines what operations will be performed.
	ResourceUrl *string `pulumi:"resourceUrl"`
	// Sas Token of storage account.
	SasToken *string `pulumi:"sasToken"`
	// The SQL/MySQL/PostgreSQL server name
	ServerName *string `pulumi:"serverName"`
	// The name of the file share.
	ShareName *string `pulumi:"shareName"`
	// Skip validation that ensures data can be loaded from the dataset before registration.
	SkipValidation *bool `pulumi:"skipValidation"`
	// The resource group of the storage account. Defaults to selected resource group
	StorageAccountResourceGroup *string `pulumi:"storageAccountResourceGroup"`
	// The subscription ID of the storage account. Defaults to selected subscription
	StorageAccountSubscriptionId *string `pulumi:"storageAccountSubscriptionId"`
	// The ADLS store name.
	StoreName *string `pulumi:"storeName"`
	// The service principal Tenant ID.
	TenantId *string `pulumi:"tenantId"`
	// The user ID.
	UserId *string `pulumi:"userId"`
	// The username of the database user.
	UserName *string `pulumi:"userName"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName string `pulumi:"workspaceName"`
	// If set to true, datastore support data access authenticated with Workspace MSI.
	WorkspaceSystemAssignedIdentity *bool `pulumi:"workspaceSystemAssignedIdentity"`
}

// The set of arguments for constructing a MachineLearningDatastore resource.
type MachineLearningDatastoreArgs struct {
	// Account Key of storage account.
	AccountKey pulumi.StringPtrInput
	// The name of the storage account.
	AccountName pulumi.StringPtrInput
	// The resource group the ADLS store belongs to. Defaults to selected resource group.
	AdlsResourceGroup pulumi.StringPtrInput
	// The ID of the subscription the ADLS store belongs to. Defaults to selected subscription.
	AdlsSubscriptionId pulumi.StringPtrInput
	// Authority url used to authenticate the user.
	AuthorityUrl pulumi.StringPtrInput
	// The service principal's client/application ID.
	ClientId pulumi.StringPtrInput
	// The service principal's secret.
	ClientSecret pulumi.StringPtrInput
	// The name of the azure blob container.
	ContainerName pulumi.StringPtrInput
	// Specifies datastore type.
	DataStoreType pulumi.StringInput
	// The database name.
	DatabaseName pulumi.StringPtrInput
	// The Datastore name.
	DatastoreName pulumi.StringInput
	// The description of the datastore.
	Description pulumi.StringPtrInput
	// The endpoint of the server.
	Endpoint pulumi.StringPtrInput
	// This sets the ssl value of the server. Defaults to true if not set.
	EnforceSSL pulumi.BoolPtrInput
	// The file system name of the ADLS Gen2.
	FileSystem pulumi.StringPtrInput
	// Include datastore secret in response.
	IncludeSecret pulumi.BoolPtrInput
	// The name of the datastore.
	Name pulumi.StringPtrInput
	// The password.
	Password pulumi.StringPtrInput
	// The port number.
	Port pulumi.StringPtrInput
	// The protocol to be used
	Protocol pulumi.StringPtrInput
	// Name of the resource group in which workspace is located.
	ResourceGroupName pulumi.StringInput
	// Determines what operations will be performed.
	ResourceUrl pulumi.StringPtrInput
	// Sas Token of storage account.
	SasToken pulumi.StringPtrInput
	// The SQL/MySQL/PostgreSQL server name
	ServerName pulumi.StringPtrInput
	// The name of the file share.
	ShareName pulumi.StringPtrInput
	// Skip validation that ensures data can be loaded from the dataset before registration.
	SkipValidation pulumi.BoolPtrInput
	// The resource group of the storage account. Defaults to selected resource group
	StorageAccountResourceGroup pulumi.StringPtrInput
	// The subscription ID of the storage account. Defaults to selected subscription
	StorageAccountSubscriptionId pulumi.StringPtrInput
	// The ADLS store name.
	StoreName pulumi.StringPtrInput
	// The service principal Tenant ID.
	TenantId pulumi.StringPtrInput
	// The user ID.
	UserId pulumi.StringPtrInput
	// The username of the database user.
	UserName pulumi.StringPtrInput
	// Name of Azure Machine Learning workspace.
	WorkspaceName pulumi.StringInput
	// If set to true, datastore support data access authenticated with Workspace MSI.
	WorkspaceSystemAssignedIdentity pulumi.BoolPtrInput
}

func (MachineLearningDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*machineLearningDatastoreArgs)(nil)).Elem()
}
