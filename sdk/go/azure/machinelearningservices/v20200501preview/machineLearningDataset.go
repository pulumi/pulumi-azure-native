// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200501preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Machine Learning dataset object wrapped into ARM resource envelope.
type MachineLearningDataset struct {
	pulumi.CustomResourceState

	// The identity of the resource.
	Identity IdentityResponsePtrOutput `pulumi:"identity"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Specifies the name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Dataset properties
	Properties DatasetResponseOutput `pulumi:"properties"`
	// The sku of the workspace.
	Sku SkuResponsePtrOutput `pulumi:"sku"`
	// Contains resource tags defined as key/value pairs.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMachineLearningDataset registers a new resource with the given unique name, arguments, and options.
func NewMachineLearningDataset(ctx *pulumi.Context,
	name string, args *MachineLearningDatasetArgs, opts ...pulumi.ResourceOption) (*MachineLearningDataset, error) {
	if args == nil || args.DatasetName == nil {
		return nil, errors.New("missing required argument 'DatasetName'")
	}
	if args == nil || args.DatasetType == nil {
		return nil, errors.New("missing required argument 'DatasetType'")
	}
	if args == nil || args.Parameters == nil {
		return nil, errors.New("missing required argument 'Parameters'")
	}
	if args == nil || args.Registration == nil {
		return nil, errors.New("missing required argument 'Registration'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.WorkspaceName == nil {
		return nil, errors.New("missing required argument 'WorkspaceName'")
	}
	if args == nil {
		args = &MachineLearningDatasetArgs{}
	}
	var resource MachineLearningDataset
	err := ctx.RegisterResource("azure-nextgen:machinelearningservices/v20200501preview:MachineLearningDataset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMachineLearningDataset gets an existing MachineLearningDataset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMachineLearningDataset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MachineLearningDatasetState, opts ...pulumi.ResourceOption) (*MachineLearningDataset, error) {
	var resource MachineLearningDataset
	err := ctx.ReadResource("azure-nextgen:machinelearningservices/v20200501preview:MachineLearningDataset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MachineLearningDataset resources.
type machineLearningDatasetState struct {
	// The identity of the resource.
	Identity *IdentityResponse `pulumi:"identity"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// Specifies the name of the resource.
	Name *string `pulumi:"name"`
	// Dataset properties
	Properties *DatasetResponse `pulumi:"properties"`
	// The sku of the workspace.
	Sku *SkuResponse `pulumi:"sku"`
	// Contains resource tags defined as key/value pairs.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the type of the resource.
	Type *string `pulumi:"type"`
}

type MachineLearningDatasetState struct {
	// The identity of the resource.
	Identity IdentityResponsePtrInput
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput
	// Specifies the name of the resource.
	Name pulumi.StringPtrInput
	// Dataset properties
	Properties DatasetResponsePtrInput
	// The sku of the workspace.
	Sku SkuResponsePtrInput
	// Contains resource tags defined as key/value pairs.
	Tags pulumi.StringMapInput
	// Specifies the type of the resource.
	Type pulumi.StringPtrInput
}

func (MachineLearningDatasetState) ElementType() reflect.Type {
	return reflect.TypeOf((*machineLearningDatasetState)(nil)).Elem()
}

type machineLearningDatasetArgs struct {
	// The Dataset name.
	DatasetName string `pulumi:"datasetName"`
	// Specifies dataset type.
	DatasetType  string                           `pulumi:"datasetType"`
	Parameters   DatasetCreateRequestParameters   `pulumi:"parameters"`
	Registration DatasetCreateRequestRegistration `pulumi:"registration"`
	// Name of the resource group in which workspace is located.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Skip validation that ensures data can be loaded from the dataset before registration.
	SkipValidation *bool                           `pulumi:"skipValidation"`
	TimeSeries     *DatasetCreateRequestTimeSeries `pulumi:"timeSeries"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a MachineLearningDataset resource.
type MachineLearningDatasetArgs struct {
	// The Dataset name.
	DatasetName pulumi.StringInput
	// Specifies dataset type.
	DatasetType  pulumi.StringInput
	Parameters   DatasetCreateRequestParametersInput
	Registration DatasetCreateRequestRegistrationInput
	// Name of the resource group in which workspace is located.
	ResourceGroupName pulumi.StringInput
	// Skip validation that ensures data can be loaded from the dataset before registration.
	SkipValidation pulumi.BoolPtrInput
	TimeSeries     DatasetCreateRequestTimeSeriesPtrInput
	// Name of Azure Machine Learning workspace.
	WorkspaceName pulumi.StringInput
}

func (MachineLearningDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*machineLearningDatasetArgs)(nil)).Elem()
}
