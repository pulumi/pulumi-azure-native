// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package machinelearningservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ACIServiceCreateRequestDataCollection struct {
	// Option for enabling/disabling Event Hub.
	EventHubEnabled *bool `pulumi:"eventHubEnabled"`
	// Option for enabling/disabling storage.
	StorageEnabled *bool `pulumi:"storageEnabled"`
}

// ACIServiceCreateRequestDataCollectionInput is an input type that accepts ACIServiceCreateRequestDataCollectionArgs and ACIServiceCreateRequestDataCollectionOutput values.
// You can construct a concrete instance of `ACIServiceCreateRequestDataCollectionInput` via:
//
//          ACIServiceCreateRequestDataCollectionArgs{...}
type ACIServiceCreateRequestDataCollectionInput interface {
	pulumi.Input

	ToACIServiceCreateRequestDataCollectionOutput() ACIServiceCreateRequestDataCollectionOutput
	ToACIServiceCreateRequestDataCollectionOutputWithContext(context.Context) ACIServiceCreateRequestDataCollectionOutput
}

type ACIServiceCreateRequestDataCollectionArgs struct {
	// Option for enabling/disabling Event Hub.
	EventHubEnabled pulumi.BoolPtrInput `pulumi:"eventHubEnabled"`
	// Option for enabling/disabling storage.
	StorageEnabled pulumi.BoolPtrInput `pulumi:"storageEnabled"`
}

func (ACIServiceCreateRequestDataCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceCreateRequestDataCollection)(nil)).Elem()
}

func (i ACIServiceCreateRequestDataCollectionArgs) ToACIServiceCreateRequestDataCollectionOutput() ACIServiceCreateRequestDataCollectionOutput {
	return i.ToACIServiceCreateRequestDataCollectionOutputWithContext(context.Background())
}

func (i ACIServiceCreateRequestDataCollectionArgs) ToACIServiceCreateRequestDataCollectionOutputWithContext(ctx context.Context) ACIServiceCreateRequestDataCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceCreateRequestDataCollectionOutput)
}

func (i ACIServiceCreateRequestDataCollectionArgs) ToACIServiceCreateRequestDataCollectionPtrOutput() ACIServiceCreateRequestDataCollectionPtrOutput {
	return i.ToACIServiceCreateRequestDataCollectionPtrOutputWithContext(context.Background())
}

func (i ACIServiceCreateRequestDataCollectionArgs) ToACIServiceCreateRequestDataCollectionPtrOutputWithContext(ctx context.Context) ACIServiceCreateRequestDataCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceCreateRequestDataCollectionOutput).ToACIServiceCreateRequestDataCollectionPtrOutputWithContext(ctx)
}

// ACIServiceCreateRequestDataCollectionPtrInput is an input type that accepts ACIServiceCreateRequestDataCollectionArgs, ACIServiceCreateRequestDataCollectionPtr and ACIServiceCreateRequestDataCollectionPtrOutput values.
// You can construct a concrete instance of `ACIServiceCreateRequestDataCollectionPtrInput` via:
//
//          ACIServiceCreateRequestDataCollectionArgs{...}
//
//  or:
//
//          nil
type ACIServiceCreateRequestDataCollectionPtrInput interface {
	pulumi.Input

	ToACIServiceCreateRequestDataCollectionPtrOutput() ACIServiceCreateRequestDataCollectionPtrOutput
	ToACIServiceCreateRequestDataCollectionPtrOutputWithContext(context.Context) ACIServiceCreateRequestDataCollectionPtrOutput
}

type aciserviceCreateRequestDataCollectionPtrType ACIServiceCreateRequestDataCollectionArgs

func ACIServiceCreateRequestDataCollectionPtr(v *ACIServiceCreateRequestDataCollectionArgs) ACIServiceCreateRequestDataCollectionPtrInput {
	return (*aciserviceCreateRequestDataCollectionPtrType)(v)
}

func (*aciserviceCreateRequestDataCollectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceCreateRequestDataCollection)(nil)).Elem()
}

func (i *aciserviceCreateRequestDataCollectionPtrType) ToACIServiceCreateRequestDataCollectionPtrOutput() ACIServiceCreateRequestDataCollectionPtrOutput {
	return i.ToACIServiceCreateRequestDataCollectionPtrOutputWithContext(context.Background())
}

func (i *aciserviceCreateRequestDataCollectionPtrType) ToACIServiceCreateRequestDataCollectionPtrOutputWithContext(ctx context.Context) ACIServiceCreateRequestDataCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceCreateRequestDataCollectionPtrOutput)
}

type ACIServiceCreateRequestDataCollectionOutput struct{ *pulumi.OutputState }

func (ACIServiceCreateRequestDataCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceCreateRequestDataCollection)(nil)).Elem()
}

func (o ACIServiceCreateRequestDataCollectionOutput) ToACIServiceCreateRequestDataCollectionOutput() ACIServiceCreateRequestDataCollectionOutput {
	return o
}

func (o ACIServiceCreateRequestDataCollectionOutput) ToACIServiceCreateRequestDataCollectionOutputWithContext(ctx context.Context) ACIServiceCreateRequestDataCollectionOutput {
	return o
}

func (o ACIServiceCreateRequestDataCollectionOutput) ToACIServiceCreateRequestDataCollectionPtrOutput() ACIServiceCreateRequestDataCollectionPtrOutput {
	return o.ToACIServiceCreateRequestDataCollectionPtrOutputWithContext(context.Background())
}

func (o ACIServiceCreateRequestDataCollectionOutput) ToACIServiceCreateRequestDataCollectionPtrOutputWithContext(ctx context.Context) ACIServiceCreateRequestDataCollectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ACIServiceCreateRequestDataCollection) *ACIServiceCreateRequestDataCollection {
		return &v
	}).(ACIServiceCreateRequestDataCollectionPtrOutput)
}

// Option for enabling/disabling Event Hub.
func (o ACIServiceCreateRequestDataCollectionOutput) EventHubEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ACIServiceCreateRequestDataCollection) *bool { return v.EventHubEnabled }).(pulumi.BoolPtrOutput)
}

// Option for enabling/disabling storage.
func (o ACIServiceCreateRequestDataCollectionOutput) StorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ACIServiceCreateRequestDataCollection) *bool { return v.StorageEnabled }).(pulumi.BoolPtrOutput)
}

type ACIServiceCreateRequestDataCollectionPtrOutput struct{ *pulumi.OutputState }

func (ACIServiceCreateRequestDataCollectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceCreateRequestDataCollection)(nil)).Elem()
}

func (o ACIServiceCreateRequestDataCollectionPtrOutput) ToACIServiceCreateRequestDataCollectionPtrOutput() ACIServiceCreateRequestDataCollectionPtrOutput {
	return o
}

func (o ACIServiceCreateRequestDataCollectionPtrOutput) ToACIServiceCreateRequestDataCollectionPtrOutputWithContext(ctx context.Context) ACIServiceCreateRequestDataCollectionPtrOutput {
	return o
}

func (o ACIServiceCreateRequestDataCollectionPtrOutput) Elem() ACIServiceCreateRequestDataCollectionOutput {
	return o.ApplyT(func(v *ACIServiceCreateRequestDataCollection) ACIServiceCreateRequestDataCollection {
		if v != nil {
			return *v
		}
		var ret ACIServiceCreateRequestDataCollection
		return ret
	}).(ACIServiceCreateRequestDataCollectionOutput)
}

// Option for enabling/disabling Event Hub.
func (o ACIServiceCreateRequestDataCollectionPtrOutput) EventHubEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ACIServiceCreateRequestDataCollection) *bool {
		if v == nil {
			return nil
		}
		return v.EventHubEnabled
	}).(pulumi.BoolPtrOutput)
}

// Option for enabling/disabling storage.
func (o ACIServiceCreateRequestDataCollectionPtrOutput) StorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ACIServiceCreateRequestDataCollection) *bool {
		if v == nil {
			return nil
		}
		return v.StorageEnabled
	}).(pulumi.BoolPtrOutput)
}

type ACIServiceCreateRequestEncryptionProperties struct {
	// Encryption Key name
	KeyName string `pulumi:"keyName"`
	// Encryption Key Version
	KeyVersion string `pulumi:"keyVersion"`
	// vault base Url
	VaultBaseUrl string `pulumi:"vaultBaseUrl"`
}

// ACIServiceCreateRequestEncryptionPropertiesInput is an input type that accepts ACIServiceCreateRequestEncryptionPropertiesArgs and ACIServiceCreateRequestEncryptionPropertiesOutput values.
// You can construct a concrete instance of `ACIServiceCreateRequestEncryptionPropertiesInput` via:
//
//          ACIServiceCreateRequestEncryptionPropertiesArgs{...}
type ACIServiceCreateRequestEncryptionPropertiesInput interface {
	pulumi.Input

	ToACIServiceCreateRequestEncryptionPropertiesOutput() ACIServiceCreateRequestEncryptionPropertiesOutput
	ToACIServiceCreateRequestEncryptionPropertiesOutputWithContext(context.Context) ACIServiceCreateRequestEncryptionPropertiesOutput
}

type ACIServiceCreateRequestEncryptionPropertiesArgs struct {
	// Encryption Key name
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// Encryption Key Version
	KeyVersion pulumi.StringInput `pulumi:"keyVersion"`
	// vault base Url
	VaultBaseUrl pulumi.StringInput `pulumi:"vaultBaseUrl"`
}

func (ACIServiceCreateRequestEncryptionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceCreateRequestEncryptionProperties)(nil)).Elem()
}

func (i ACIServiceCreateRequestEncryptionPropertiesArgs) ToACIServiceCreateRequestEncryptionPropertiesOutput() ACIServiceCreateRequestEncryptionPropertiesOutput {
	return i.ToACIServiceCreateRequestEncryptionPropertiesOutputWithContext(context.Background())
}

func (i ACIServiceCreateRequestEncryptionPropertiesArgs) ToACIServiceCreateRequestEncryptionPropertiesOutputWithContext(ctx context.Context) ACIServiceCreateRequestEncryptionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceCreateRequestEncryptionPropertiesOutput)
}

func (i ACIServiceCreateRequestEncryptionPropertiesArgs) ToACIServiceCreateRequestEncryptionPropertiesPtrOutput() ACIServiceCreateRequestEncryptionPropertiesPtrOutput {
	return i.ToACIServiceCreateRequestEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (i ACIServiceCreateRequestEncryptionPropertiesArgs) ToACIServiceCreateRequestEncryptionPropertiesPtrOutputWithContext(ctx context.Context) ACIServiceCreateRequestEncryptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceCreateRequestEncryptionPropertiesOutput).ToACIServiceCreateRequestEncryptionPropertiesPtrOutputWithContext(ctx)
}

// ACIServiceCreateRequestEncryptionPropertiesPtrInput is an input type that accepts ACIServiceCreateRequestEncryptionPropertiesArgs, ACIServiceCreateRequestEncryptionPropertiesPtr and ACIServiceCreateRequestEncryptionPropertiesPtrOutput values.
// You can construct a concrete instance of `ACIServiceCreateRequestEncryptionPropertiesPtrInput` via:
//
//          ACIServiceCreateRequestEncryptionPropertiesArgs{...}
//
//  or:
//
//          nil
type ACIServiceCreateRequestEncryptionPropertiesPtrInput interface {
	pulumi.Input

	ToACIServiceCreateRequestEncryptionPropertiesPtrOutput() ACIServiceCreateRequestEncryptionPropertiesPtrOutput
	ToACIServiceCreateRequestEncryptionPropertiesPtrOutputWithContext(context.Context) ACIServiceCreateRequestEncryptionPropertiesPtrOutput
}

type aciserviceCreateRequestEncryptionPropertiesPtrType ACIServiceCreateRequestEncryptionPropertiesArgs

func ACIServiceCreateRequestEncryptionPropertiesPtr(v *ACIServiceCreateRequestEncryptionPropertiesArgs) ACIServiceCreateRequestEncryptionPropertiesPtrInput {
	return (*aciserviceCreateRequestEncryptionPropertiesPtrType)(v)
}

func (*aciserviceCreateRequestEncryptionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceCreateRequestEncryptionProperties)(nil)).Elem()
}

func (i *aciserviceCreateRequestEncryptionPropertiesPtrType) ToACIServiceCreateRequestEncryptionPropertiesPtrOutput() ACIServiceCreateRequestEncryptionPropertiesPtrOutput {
	return i.ToACIServiceCreateRequestEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (i *aciserviceCreateRequestEncryptionPropertiesPtrType) ToACIServiceCreateRequestEncryptionPropertiesPtrOutputWithContext(ctx context.Context) ACIServiceCreateRequestEncryptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceCreateRequestEncryptionPropertiesPtrOutput)
}

type ACIServiceCreateRequestEncryptionPropertiesOutput struct{ *pulumi.OutputState }

func (ACIServiceCreateRequestEncryptionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceCreateRequestEncryptionProperties)(nil)).Elem()
}

func (o ACIServiceCreateRequestEncryptionPropertiesOutput) ToACIServiceCreateRequestEncryptionPropertiesOutput() ACIServiceCreateRequestEncryptionPropertiesOutput {
	return o
}

func (o ACIServiceCreateRequestEncryptionPropertiesOutput) ToACIServiceCreateRequestEncryptionPropertiesOutputWithContext(ctx context.Context) ACIServiceCreateRequestEncryptionPropertiesOutput {
	return o
}

func (o ACIServiceCreateRequestEncryptionPropertiesOutput) ToACIServiceCreateRequestEncryptionPropertiesPtrOutput() ACIServiceCreateRequestEncryptionPropertiesPtrOutput {
	return o.ToACIServiceCreateRequestEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (o ACIServiceCreateRequestEncryptionPropertiesOutput) ToACIServiceCreateRequestEncryptionPropertiesPtrOutputWithContext(ctx context.Context) ACIServiceCreateRequestEncryptionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ACIServiceCreateRequestEncryptionProperties) *ACIServiceCreateRequestEncryptionProperties {
		return &v
	}).(ACIServiceCreateRequestEncryptionPropertiesPtrOutput)
}

// Encryption Key name
func (o ACIServiceCreateRequestEncryptionPropertiesOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceCreateRequestEncryptionProperties) string { return v.KeyName }).(pulumi.StringOutput)
}

// Encryption Key Version
func (o ACIServiceCreateRequestEncryptionPropertiesOutput) KeyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceCreateRequestEncryptionProperties) string { return v.KeyVersion }).(pulumi.StringOutput)
}

// vault base Url
func (o ACIServiceCreateRequestEncryptionPropertiesOutput) VaultBaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceCreateRequestEncryptionProperties) string { return v.VaultBaseUrl }).(pulumi.StringOutput)
}

type ACIServiceCreateRequestEncryptionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ACIServiceCreateRequestEncryptionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceCreateRequestEncryptionProperties)(nil)).Elem()
}

func (o ACIServiceCreateRequestEncryptionPropertiesPtrOutput) ToACIServiceCreateRequestEncryptionPropertiesPtrOutput() ACIServiceCreateRequestEncryptionPropertiesPtrOutput {
	return o
}

func (o ACIServiceCreateRequestEncryptionPropertiesPtrOutput) ToACIServiceCreateRequestEncryptionPropertiesPtrOutputWithContext(ctx context.Context) ACIServiceCreateRequestEncryptionPropertiesPtrOutput {
	return o
}

func (o ACIServiceCreateRequestEncryptionPropertiesPtrOutput) Elem() ACIServiceCreateRequestEncryptionPropertiesOutput {
	return o.ApplyT(func(v *ACIServiceCreateRequestEncryptionProperties) ACIServiceCreateRequestEncryptionProperties {
		if v != nil {
			return *v
		}
		var ret ACIServiceCreateRequestEncryptionProperties
		return ret
	}).(ACIServiceCreateRequestEncryptionPropertiesOutput)
}

// Encryption Key name
func (o ACIServiceCreateRequestEncryptionPropertiesPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceCreateRequestEncryptionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyName
	}).(pulumi.StringPtrOutput)
}

// Encryption Key Version
func (o ACIServiceCreateRequestEncryptionPropertiesPtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceCreateRequestEncryptionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

// vault base Url
func (o ACIServiceCreateRequestEncryptionPropertiesPtrOutput) VaultBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceCreateRequestEncryptionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.VaultBaseUrl
	}).(pulumi.StringPtrOutput)
}

type ACIServiceCreateRequestVnetConfiguration struct {
	// The name of the virtual network subnet.
	SubnetName *string `pulumi:"subnetName"`
	// The name of the virtual network.
	VnetName *string `pulumi:"vnetName"`
}

// ACIServiceCreateRequestVnetConfigurationInput is an input type that accepts ACIServiceCreateRequestVnetConfigurationArgs and ACIServiceCreateRequestVnetConfigurationOutput values.
// You can construct a concrete instance of `ACIServiceCreateRequestVnetConfigurationInput` via:
//
//          ACIServiceCreateRequestVnetConfigurationArgs{...}
type ACIServiceCreateRequestVnetConfigurationInput interface {
	pulumi.Input

	ToACIServiceCreateRequestVnetConfigurationOutput() ACIServiceCreateRequestVnetConfigurationOutput
	ToACIServiceCreateRequestVnetConfigurationOutputWithContext(context.Context) ACIServiceCreateRequestVnetConfigurationOutput
}

type ACIServiceCreateRequestVnetConfigurationArgs struct {
	// The name of the virtual network subnet.
	SubnetName pulumi.StringPtrInput `pulumi:"subnetName"`
	// The name of the virtual network.
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
}

func (ACIServiceCreateRequestVnetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceCreateRequestVnetConfiguration)(nil)).Elem()
}

func (i ACIServiceCreateRequestVnetConfigurationArgs) ToACIServiceCreateRequestVnetConfigurationOutput() ACIServiceCreateRequestVnetConfigurationOutput {
	return i.ToACIServiceCreateRequestVnetConfigurationOutputWithContext(context.Background())
}

func (i ACIServiceCreateRequestVnetConfigurationArgs) ToACIServiceCreateRequestVnetConfigurationOutputWithContext(ctx context.Context) ACIServiceCreateRequestVnetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceCreateRequestVnetConfigurationOutput)
}

func (i ACIServiceCreateRequestVnetConfigurationArgs) ToACIServiceCreateRequestVnetConfigurationPtrOutput() ACIServiceCreateRequestVnetConfigurationPtrOutput {
	return i.ToACIServiceCreateRequestVnetConfigurationPtrOutputWithContext(context.Background())
}

func (i ACIServiceCreateRequestVnetConfigurationArgs) ToACIServiceCreateRequestVnetConfigurationPtrOutputWithContext(ctx context.Context) ACIServiceCreateRequestVnetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceCreateRequestVnetConfigurationOutput).ToACIServiceCreateRequestVnetConfigurationPtrOutputWithContext(ctx)
}

// ACIServiceCreateRequestVnetConfigurationPtrInput is an input type that accepts ACIServiceCreateRequestVnetConfigurationArgs, ACIServiceCreateRequestVnetConfigurationPtr and ACIServiceCreateRequestVnetConfigurationPtrOutput values.
// You can construct a concrete instance of `ACIServiceCreateRequestVnetConfigurationPtrInput` via:
//
//          ACIServiceCreateRequestVnetConfigurationArgs{...}
//
//  or:
//
//          nil
type ACIServiceCreateRequestVnetConfigurationPtrInput interface {
	pulumi.Input

	ToACIServiceCreateRequestVnetConfigurationPtrOutput() ACIServiceCreateRequestVnetConfigurationPtrOutput
	ToACIServiceCreateRequestVnetConfigurationPtrOutputWithContext(context.Context) ACIServiceCreateRequestVnetConfigurationPtrOutput
}

type aciserviceCreateRequestVnetConfigurationPtrType ACIServiceCreateRequestVnetConfigurationArgs

func ACIServiceCreateRequestVnetConfigurationPtr(v *ACIServiceCreateRequestVnetConfigurationArgs) ACIServiceCreateRequestVnetConfigurationPtrInput {
	return (*aciserviceCreateRequestVnetConfigurationPtrType)(v)
}

func (*aciserviceCreateRequestVnetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceCreateRequestVnetConfiguration)(nil)).Elem()
}

func (i *aciserviceCreateRequestVnetConfigurationPtrType) ToACIServiceCreateRequestVnetConfigurationPtrOutput() ACIServiceCreateRequestVnetConfigurationPtrOutput {
	return i.ToACIServiceCreateRequestVnetConfigurationPtrOutputWithContext(context.Background())
}

func (i *aciserviceCreateRequestVnetConfigurationPtrType) ToACIServiceCreateRequestVnetConfigurationPtrOutputWithContext(ctx context.Context) ACIServiceCreateRequestVnetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceCreateRequestVnetConfigurationPtrOutput)
}

type ACIServiceCreateRequestVnetConfigurationOutput struct{ *pulumi.OutputState }

func (ACIServiceCreateRequestVnetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceCreateRequestVnetConfiguration)(nil)).Elem()
}

func (o ACIServiceCreateRequestVnetConfigurationOutput) ToACIServiceCreateRequestVnetConfigurationOutput() ACIServiceCreateRequestVnetConfigurationOutput {
	return o
}

func (o ACIServiceCreateRequestVnetConfigurationOutput) ToACIServiceCreateRequestVnetConfigurationOutputWithContext(ctx context.Context) ACIServiceCreateRequestVnetConfigurationOutput {
	return o
}

func (o ACIServiceCreateRequestVnetConfigurationOutput) ToACIServiceCreateRequestVnetConfigurationPtrOutput() ACIServiceCreateRequestVnetConfigurationPtrOutput {
	return o.ToACIServiceCreateRequestVnetConfigurationPtrOutputWithContext(context.Background())
}

func (o ACIServiceCreateRequestVnetConfigurationOutput) ToACIServiceCreateRequestVnetConfigurationPtrOutputWithContext(ctx context.Context) ACIServiceCreateRequestVnetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ACIServiceCreateRequestVnetConfiguration) *ACIServiceCreateRequestVnetConfiguration {
		return &v
	}).(ACIServiceCreateRequestVnetConfigurationPtrOutput)
}

// The name of the virtual network subnet.
func (o ACIServiceCreateRequestVnetConfigurationOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceCreateRequestVnetConfiguration) *string { return v.SubnetName }).(pulumi.StringPtrOutput)
}

// The name of the virtual network.
func (o ACIServiceCreateRequestVnetConfigurationOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceCreateRequestVnetConfiguration) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

type ACIServiceCreateRequestVnetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ACIServiceCreateRequestVnetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceCreateRequestVnetConfiguration)(nil)).Elem()
}

func (o ACIServiceCreateRequestVnetConfigurationPtrOutput) ToACIServiceCreateRequestVnetConfigurationPtrOutput() ACIServiceCreateRequestVnetConfigurationPtrOutput {
	return o
}

func (o ACIServiceCreateRequestVnetConfigurationPtrOutput) ToACIServiceCreateRequestVnetConfigurationPtrOutputWithContext(ctx context.Context) ACIServiceCreateRequestVnetConfigurationPtrOutput {
	return o
}

func (o ACIServiceCreateRequestVnetConfigurationPtrOutput) Elem() ACIServiceCreateRequestVnetConfigurationOutput {
	return o.ApplyT(func(v *ACIServiceCreateRequestVnetConfiguration) ACIServiceCreateRequestVnetConfiguration {
		if v != nil {
			return *v
		}
		var ret ACIServiceCreateRequestVnetConfiguration
		return ret
	}).(ACIServiceCreateRequestVnetConfigurationOutput)
}

// The name of the virtual network subnet.
func (o ACIServiceCreateRequestVnetConfigurationPtrOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceCreateRequestVnetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SubnetName
	}).(pulumi.StringPtrOutput)
}

// The name of the virtual network.
func (o ACIServiceCreateRequestVnetConfigurationPtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceCreateRequestVnetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

type ACIServiceResponseResponse struct {
	// Whether or not Application Insights is enabled.
	AppInsightsEnabled *bool `pulumi:"appInsightsEnabled"`
	// Whether or not authentication is enabled on the service.
	AuthEnabled *bool `pulumi:"authEnabled"`
	// The CName for the service.
	Cname *string `pulumi:"cname"`
	// The compute environment type for the service.
	// Expected value is 'ACI'.
	ComputeType string `pulumi:"computeType"`
	// The container resource requirements.
	ContainerResourceRequirements *ContainerResourceRequirementsResponse `pulumi:"containerResourceRequirements"`
	// Details of the data collection options specified.
	DataCollection *ACIServiceResponseResponseDataCollection `pulumi:"dataCollection"`
	// The deployment type for the service.
	DeploymentType *string `pulumi:"deploymentType"`
	// The service description.
	Description *string `pulumi:"description"`
	// The encryption properties.
	EncryptionProperties *ACIServiceResponseResponseEncryptionProperties `pulumi:"encryptionProperties"`
	// The Environment, models and assets used for inferencing.
	EnvironmentImageRequest *ACIServiceResponseResponseEnvironmentImageRequest `pulumi:"environmentImageRequest"`
	// The error details.
	Error ServiceResponseBaseResponseError `pulumi:"error"`
	// The service tag dictionary. Tags are mutable.
	KvTags map[string]string `pulumi:"kvTags"`
	// The name of the Azure location/region.
	Location *string `pulumi:"location"`
	// Details on the models and configurations.
	ModelConfigMap map[string]interface{} `pulumi:"modelConfigMap"`
	// The list of models.
	Models []ModelResponse `pulumi:"models"`
	// The service property dictionary. Properties are immutable.
	Properties map[string]string `pulumi:"properties"`
	// The public Fqdn for the service.
	PublicFqdn *string `pulumi:"publicFqdn"`
	// The public IP address for the service.
	PublicIp *string `pulumi:"publicIp"`
	// The Uri for sending scoring requests.
	ScoringUri string `pulumi:"scoringUri"`
	// The public SSL certificate in PEM format to use if SSL is enabled.
	SslCertificate *string `pulumi:"sslCertificate"`
	// Whether or not SSL is enabled.
	SslEnabled *bool `pulumi:"sslEnabled"`
	// The public SSL key in PEM format for the certificate.
	SslKey *string `pulumi:"sslKey"`
	// The current state of the service.
	State string `pulumi:"state"`
	// The Uri for sending swagger requests.
	SwaggerUri string `pulumi:"swaggerUri"`
	// The virtual network configuration.
	VnetConfiguration *ACIServiceResponseResponseVnetConfiguration `pulumi:"vnetConfiguration"`
}

// ACIServiceResponseResponseInput is an input type that accepts ACIServiceResponseResponseArgs and ACIServiceResponseResponseOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseInput` via:
//
//          ACIServiceResponseResponseArgs{...}
type ACIServiceResponseResponseInput interface {
	pulumi.Input

	ToACIServiceResponseResponseOutput() ACIServiceResponseResponseOutput
	ToACIServiceResponseResponseOutputWithContext(context.Context) ACIServiceResponseResponseOutput
}

type ACIServiceResponseResponseArgs struct {
	// Whether or not Application Insights is enabled.
	AppInsightsEnabled pulumi.BoolPtrInput `pulumi:"appInsightsEnabled"`
	// Whether or not authentication is enabled on the service.
	AuthEnabled pulumi.BoolPtrInput `pulumi:"authEnabled"`
	// The CName for the service.
	Cname pulumi.StringPtrInput `pulumi:"cname"`
	// The compute environment type for the service.
	// Expected value is 'ACI'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The container resource requirements.
	ContainerResourceRequirements ContainerResourceRequirementsResponsePtrInput `pulumi:"containerResourceRequirements"`
	// Details of the data collection options specified.
	DataCollection ACIServiceResponseResponseDataCollectionPtrInput `pulumi:"dataCollection"`
	// The deployment type for the service.
	DeploymentType pulumi.StringPtrInput `pulumi:"deploymentType"`
	// The service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encryption properties.
	EncryptionProperties ACIServiceResponseResponseEncryptionPropertiesPtrInput `pulumi:"encryptionProperties"`
	// The Environment, models and assets used for inferencing.
	EnvironmentImageRequest ACIServiceResponseResponseEnvironmentImageRequestPtrInput `pulumi:"environmentImageRequest"`
	// The error details.
	Error ServiceResponseBaseResponseErrorInput `pulumi:"error"`
	// The service tag dictionary. Tags are mutable.
	KvTags pulumi.StringMapInput `pulumi:"kvTags"`
	// The name of the Azure location/region.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Details on the models and configurations.
	ModelConfigMap pulumi.MapInput `pulumi:"modelConfigMap"`
	// The list of models.
	Models ModelResponseArrayInput `pulumi:"models"`
	// The service property dictionary. Properties are immutable.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The public Fqdn for the service.
	PublicFqdn pulumi.StringPtrInput `pulumi:"publicFqdn"`
	// The public IP address for the service.
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// The Uri for sending scoring requests.
	ScoringUri pulumi.StringInput `pulumi:"scoringUri"`
	// The public SSL certificate in PEM format to use if SSL is enabled.
	SslCertificate pulumi.StringPtrInput `pulumi:"sslCertificate"`
	// Whether or not SSL is enabled.
	SslEnabled pulumi.BoolPtrInput `pulumi:"sslEnabled"`
	// The public SSL key in PEM format for the certificate.
	SslKey pulumi.StringPtrInput `pulumi:"sslKey"`
	// The current state of the service.
	State pulumi.StringInput `pulumi:"state"`
	// The Uri for sending swagger requests.
	SwaggerUri pulumi.StringInput `pulumi:"swaggerUri"`
	// The virtual network configuration.
	VnetConfiguration ACIServiceResponseResponseVnetConfigurationPtrInput `pulumi:"vnetConfiguration"`
}

func (ACIServiceResponseResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponse)(nil)).Elem()
}

func (i ACIServiceResponseResponseArgs) ToACIServiceResponseResponseOutput() ACIServiceResponseResponseOutput {
	return i.ToACIServiceResponseResponseOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseArgs) ToACIServiceResponseResponseOutputWithContext(ctx context.Context) ACIServiceResponseResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseOutput)
}

type ACIServiceResponseResponseOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponse)(nil)).Elem()
}

func (o ACIServiceResponseResponseOutput) ToACIServiceResponseResponseOutput() ACIServiceResponseResponseOutput {
	return o
}

func (o ACIServiceResponseResponseOutput) ToACIServiceResponseResponseOutputWithContext(ctx context.Context) ACIServiceResponseResponseOutput {
	return o
}

// Whether or not Application Insights is enabled.
func (o ACIServiceResponseResponseOutput) AppInsightsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *bool { return v.AppInsightsEnabled }).(pulumi.BoolPtrOutput)
}

// Whether or not authentication is enabled on the service.
func (o ACIServiceResponseResponseOutput) AuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *bool { return v.AuthEnabled }).(pulumi.BoolPtrOutput)
}

// The CName for the service.
func (o ACIServiceResponseResponseOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

// The compute environment type for the service.
// Expected value is 'ACI'.
func (o ACIServiceResponseResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The container resource requirements.
func (o ACIServiceResponseResponseOutput) ContainerResourceRequirements() ContainerResourceRequirementsResponsePtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *ContainerResourceRequirementsResponse {
		return v.ContainerResourceRequirements
	}).(ContainerResourceRequirementsResponsePtrOutput)
}

// Details of the data collection options specified.
func (o ACIServiceResponseResponseOutput) DataCollection() ACIServiceResponseResponseDataCollectionPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *ACIServiceResponseResponseDataCollection { return v.DataCollection }).(ACIServiceResponseResponseDataCollectionPtrOutput)
}

// The deployment type for the service.
func (o ACIServiceResponseResponseOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *string { return v.DeploymentType }).(pulumi.StringPtrOutput)
}

// The service description.
func (o ACIServiceResponseResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encryption properties.
func (o ACIServiceResponseResponseOutput) EncryptionProperties() ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *ACIServiceResponseResponseEncryptionProperties {
		return v.EncryptionProperties
	}).(ACIServiceResponseResponseEncryptionPropertiesPtrOutput)
}

// The Environment, models and assets used for inferencing.
func (o ACIServiceResponseResponseOutput) EnvironmentImageRequest() ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *ACIServiceResponseResponseEnvironmentImageRequest {
		return v.EnvironmentImageRequest
	}).(ACIServiceResponseResponseEnvironmentImageRequestPtrOutput)
}

// The error details.
func (o ACIServiceResponseResponseOutput) Error() ServiceResponseBaseResponseErrorOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) ServiceResponseBaseResponseError { return v.Error }).(ServiceResponseBaseResponseErrorOutput)
}

// The service tag dictionary. Tags are mutable.
func (o ACIServiceResponseResponseOutput) KvTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) map[string]string { return v.KvTags }).(pulumi.StringMapOutput)
}

// The name of the Azure location/region.
func (o ACIServiceResponseResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Details on the models and configurations.
func (o ACIServiceResponseResponseOutput) ModelConfigMap() pulumi.MapOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) map[string]interface{} { return v.ModelConfigMap }).(pulumi.MapOutput)
}

// The list of models.
func (o ACIServiceResponseResponseOutput) Models() ModelResponseArrayOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) []ModelResponse { return v.Models }).(ModelResponseArrayOutput)
}

// The service property dictionary. Properties are immutable.
func (o ACIServiceResponseResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The public Fqdn for the service.
func (o ACIServiceResponseResponseOutput) PublicFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *string { return v.PublicFqdn }).(pulumi.StringPtrOutput)
}

// The public IP address for the service.
func (o ACIServiceResponseResponseOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// The Uri for sending scoring requests.
func (o ACIServiceResponseResponseOutput) ScoringUri() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) string { return v.ScoringUri }).(pulumi.StringOutput)
}

// The public SSL certificate in PEM format to use if SSL is enabled.
func (o ACIServiceResponseResponseOutput) SslCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *string { return v.SslCertificate }).(pulumi.StringPtrOutput)
}

// Whether or not SSL is enabled.
func (o ACIServiceResponseResponseOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *bool { return v.SslEnabled }).(pulumi.BoolPtrOutput)
}

// The public SSL key in PEM format for the certificate.
func (o ACIServiceResponseResponseOutput) SslKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *string { return v.SslKey }).(pulumi.StringPtrOutput)
}

// The current state of the service.
func (o ACIServiceResponseResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) string { return v.State }).(pulumi.StringOutput)
}

// The Uri for sending swagger requests.
func (o ACIServiceResponseResponseOutput) SwaggerUri() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) string { return v.SwaggerUri }).(pulumi.StringOutput)
}

// The virtual network configuration.
func (o ACIServiceResponseResponseOutput) VnetConfiguration() ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *ACIServiceResponseResponseVnetConfiguration {
		return v.VnetConfiguration
	}).(ACIServiceResponseResponseVnetConfigurationPtrOutput)
}

type ACIServiceResponseResponseDataCollection struct {
	// Option for enabling/disabling Event Hub.
	EventHubEnabled *bool `pulumi:"eventHubEnabled"`
	// Option for enabling/disabling storage.
	StorageEnabled *bool `pulumi:"storageEnabled"`
}

// ACIServiceResponseResponseDataCollectionInput is an input type that accepts ACIServiceResponseResponseDataCollectionArgs and ACIServiceResponseResponseDataCollectionOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseDataCollectionInput` via:
//
//          ACIServiceResponseResponseDataCollectionArgs{...}
type ACIServiceResponseResponseDataCollectionInput interface {
	pulumi.Input

	ToACIServiceResponseResponseDataCollectionOutput() ACIServiceResponseResponseDataCollectionOutput
	ToACIServiceResponseResponseDataCollectionOutputWithContext(context.Context) ACIServiceResponseResponseDataCollectionOutput
}

type ACIServiceResponseResponseDataCollectionArgs struct {
	// Option for enabling/disabling Event Hub.
	EventHubEnabled pulumi.BoolPtrInput `pulumi:"eventHubEnabled"`
	// Option for enabling/disabling storage.
	StorageEnabled pulumi.BoolPtrInput `pulumi:"storageEnabled"`
}

func (ACIServiceResponseResponseDataCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponseDataCollection)(nil)).Elem()
}

func (i ACIServiceResponseResponseDataCollectionArgs) ToACIServiceResponseResponseDataCollectionOutput() ACIServiceResponseResponseDataCollectionOutput {
	return i.ToACIServiceResponseResponseDataCollectionOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseDataCollectionArgs) ToACIServiceResponseResponseDataCollectionOutputWithContext(ctx context.Context) ACIServiceResponseResponseDataCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseDataCollectionOutput)
}

func (i ACIServiceResponseResponseDataCollectionArgs) ToACIServiceResponseResponseDataCollectionPtrOutput() ACIServiceResponseResponseDataCollectionPtrOutput {
	return i.ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseDataCollectionArgs) ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseDataCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseDataCollectionOutput).ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(ctx)
}

// ACIServiceResponseResponseDataCollectionPtrInput is an input type that accepts ACIServiceResponseResponseDataCollectionArgs, ACIServiceResponseResponseDataCollectionPtr and ACIServiceResponseResponseDataCollectionPtrOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseDataCollectionPtrInput` via:
//
//          ACIServiceResponseResponseDataCollectionArgs{...}
//
//  or:
//
//          nil
type ACIServiceResponseResponseDataCollectionPtrInput interface {
	pulumi.Input

	ToACIServiceResponseResponseDataCollectionPtrOutput() ACIServiceResponseResponseDataCollectionPtrOutput
	ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(context.Context) ACIServiceResponseResponseDataCollectionPtrOutput
}

type aciserviceResponseResponseDataCollectionPtrType ACIServiceResponseResponseDataCollectionArgs

func ACIServiceResponseResponseDataCollectionPtr(v *ACIServiceResponseResponseDataCollectionArgs) ACIServiceResponseResponseDataCollectionPtrInput {
	return (*aciserviceResponseResponseDataCollectionPtrType)(v)
}

func (*aciserviceResponseResponseDataCollectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseResponseDataCollection)(nil)).Elem()
}

func (i *aciserviceResponseResponseDataCollectionPtrType) ToACIServiceResponseResponseDataCollectionPtrOutput() ACIServiceResponseResponseDataCollectionPtrOutput {
	return i.ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (i *aciserviceResponseResponseDataCollectionPtrType) ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseDataCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseDataCollectionPtrOutput)
}

type ACIServiceResponseResponseDataCollectionOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseDataCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponseDataCollection)(nil)).Elem()
}

func (o ACIServiceResponseResponseDataCollectionOutput) ToACIServiceResponseResponseDataCollectionOutput() ACIServiceResponseResponseDataCollectionOutput {
	return o
}

func (o ACIServiceResponseResponseDataCollectionOutput) ToACIServiceResponseResponseDataCollectionOutputWithContext(ctx context.Context) ACIServiceResponseResponseDataCollectionOutput {
	return o
}

func (o ACIServiceResponseResponseDataCollectionOutput) ToACIServiceResponseResponseDataCollectionPtrOutput() ACIServiceResponseResponseDataCollectionPtrOutput {
	return o.ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (o ACIServiceResponseResponseDataCollectionOutput) ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseDataCollectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ACIServiceResponseResponseDataCollection) *ACIServiceResponseResponseDataCollection {
		return &v
	}).(ACIServiceResponseResponseDataCollectionPtrOutput)
}

// Option for enabling/disabling Event Hub.
func (o ACIServiceResponseResponseDataCollectionOutput) EventHubEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseDataCollection) *bool { return v.EventHubEnabled }).(pulumi.BoolPtrOutput)
}

// Option for enabling/disabling storage.
func (o ACIServiceResponseResponseDataCollectionOutput) StorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseDataCollection) *bool { return v.StorageEnabled }).(pulumi.BoolPtrOutput)
}

type ACIServiceResponseResponseDataCollectionPtrOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseDataCollectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseResponseDataCollection)(nil)).Elem()
}

func (o ACIServiceResponseResponseDataCollectionPtrOutput) ToACIServiceResponseResponseDataCollectionPtrOutput() ACIServiceResponseResponseDataCollectionPtrOutput {
	return o
}

func (o ACIServiceResponseResponseDataCollectionPtrOutput) ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseDataCollectionPtrOutput {
	return o
}

func (o ACIServiceResponseResponseDataCollectionPtrOutput) Elem() ACIServiceResponseResponseDataCollectionOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseDataCollection) ACIServiceResponseResponseDataCollection {
		if v != nil {
			return *v
		}
		var ret ACIServiceResponseResponseDataCollection
		return ret
	}).(ACIServiceResponseResponseDataCollectionOutput)
}

// Option for enabling/disabling Event Hub.
func (o ACIServiceResponseResponseDataCollectionPtrOutput) EventHubEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseDataCollection) *bool {
		if v == nil {
			return nil
		}
		return v.EventHubEnabled
	}).(pulumi.BoolPtrOutput)
}

// Option for enabling/disabling storage.
func (o ACIServiceResponseResponseDataCollectionPtrOutput) StorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseDataCollection) *bool {
		if v == nil {
			return nil
		}
		return v.StorageEnabled
	}).(pulumi.BoolPtrOutput)
}

type ACIServiceResponseResponseEncryptionProperties struct {
	// Encryption Key name
	KeyName string `pulumi:"keyName"`
	// Encryption Key Version
	KeyVersion string `pulumi:"keyVersion"`
	// vault base Url
	VaultBaseUrl string `pulumi:"vaultBaseUrl"`
}

// ACIServiceResponseResponseEncryptionPropertiesInput is an input type that accepts ACIServiceResponseResponseEncryptionPropertiesArgs and ACIServiceResponseResponseEncryptionPropertiesOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseEncryptionPropertiesInput` via:
//
//          ACIServiceResponseResponseEncryptionPropertiesArgs{...}
type ACIServiceResponseResponseEncryptionPropertiesInput interface {
	pulumi.Input

	ToACIServiceResponseResponseEncryptionPropertiesOutput() ACIServiceResponseResponseEncryptionPropertiesOutput
	ToACIServiceResponseResponseEncryptionPropertiesOutputWithContext(context.Context) ACIServiceResponseResponseEncryptionPropertiesOutput
}

type ACIServiceResponseResponseEncryptionPropertiesArgs struct {
	// Encryption Key name
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// Encryption Key Version
	KeyVersion pulumi.StringInput `pulumi:"keyVersion"`
	// vault base Url
	VaultBaseUrl pulumi.StringInput `pulumi:"vaultBaseUrl"`
}

func (ACIServiceResponseResponseEncryptionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponseEncryptionProperties)(nil)).Elem()
}

func (i ACIServiceResponseResponseEncryptionPropertiesArgs) ToACIServiceResponseResponseEncryptionPropertiesOutput() ACIServiceResponseResponseEncryptionPropertiesOutput {
	return i.ToACIServiceResponseResponseEncryptionPropertiesOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseEncryptionPropertiesArgs) ToACIServiceResponseResponseEncryptionPropertiesOutputWithContext(ctx context.Context) ACIServiceResponseResponseEncryptionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseEncryptionPropertiesOutput)
}

func (i ACIServiceResponseResponseEncryptionPropertiesArgs) ToACIServiceResponseResponseEncryptionPropertiesPtrOutput() ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return i.ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseEncryptionPropertiesArgs) ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseEncryptionPropertiesOutput).ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(ctx)
}

// ACIServiceResponseResponseEncryptionPropertiesPtrInput is an input type that accepts ACIServiceResponseResponseEncryptionPropertiesArgs, ACIServiceResponseResponseEncryptionPropertiesPtr and ACIServiceResponseResponseEncryptionPropertiesPtrOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseEncryptionPropertiesPtrInput` via:
//
//          ACIServiceResponseResponseEncryptionPropertiesArgs{...}
//
//  or:
//
//          nil
type ACIServiceResponseResponseEncryptionPropertiesPtrInput interface {
	pulumi.Input

	ToACIServiceResponseResponseEncryptionPropertiesPtrOutput() ACIServiceResponseResponseEncryptionPropertiesPtrOutput
	ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(context.Context) ACIServiceResponseResponseEncryptionPropertiesPtrOutput
}

type aciserviceResponseResponseEncryptionPropertiesPtrType ACIServiceResponseResponseEncryptionPropertiesArgs

func ACIServiceResponseResponseEncryptionPropertiesPtr(v *ACIServiceResponseResponseEncryptionPropertiesArgs) ACIServiceResponseResponseEncryptionPropertiesPtrInput {
	return (*aciserviceResponseResponseEncryptionPropertiesPtrType)(v)
}

func (*aciserviceResponseResponseEncryptionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseResponseEncryptionProperties)(nil)).Elem()
}

func (i *aciserviceResponseResponseEncryptionPropertiesPtrType) ToACIServiceResponseResponseEncryptionPropertiesPtrOutput() ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return i.ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (i *aciserviceResponseResponseEncryptionPropertiesPtrType) ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseEncryptionPropertiesPtrOutput)
}

type ACIServiceResponseResponseEncryptionPropertiesOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseEncryptionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponseEncryptionProperties)(nil)).Elem()
}

func (o ACIServiceResponseResponseEncryptionPropertiesOutput) ToACIServiceResponseResponseEncryptionPropertiesOutput() ACIServiceResponseResponseEncryptionPropertiesOutput {
	return o
}

func (o ACIServiceResponseResponseEncryptionPropertiesOutput) ToACIServiceResponseResponseEncryptionPropertiesOutputWithContext(ctx context.Context) ACIServiceResponseResponseEncryptionPropertiesOutput {
	return o
}

func (o ACIServiceResponseResponseEncryptionPropertiesOutput) ToACIServiceResponseResponseEncryptionPropertiesPtrOutput() ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return o.ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (o ACIServiceResponseResponseEncryptionPropertiesOutput) ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ACIServiceResponseResponseEncryptionProperties) *ACIServiceResponseResponseEncryptionProperties {
		return &v
	}).(ACIServiceResponseResponseEncryptionPropertiesPtrOutput)
}

// Encryption Key name
func (o ACIServiceResponseResponseEncryptionPropertiesOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEncryptionProperties) string { return v.KeyName }).(pulumi.StringOutput)
}

// Encryption Key Version
func (o ACIServiceResponseResponseEncryptionPropertiesOutput) KeyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEncryptionProperties) string { return v.KeyVersion }).(pulumi.StringOutput)
}

// vault base Url
func (o ACIServiceResponseResponseEncryptionPropertiesOutput) VaultBaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEncryptionProperties) string { return v.VaultBaseUrl }).(pulumi.StringOutput)
}

type ACIServiceResponseResponseEncryptionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseEncryptionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseResponseEncryptionProperties)(nil)).Elem()
}

func (o ACIServiceResponseResponseEncryptionPropertiesPtrOutput) ToACIServiceResponseResponseEncryptionPropertiesPtrOutput() ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return o
}

func (o ACIServiceResponseResponseEncryptionPropertiesPtrOutput) ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return o
}

func (o ACIServiceResponseResponseEncryptionPropertiesPtrOutput) Elem() ACIServiceResponseResponseEncryptionPropertiesOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEncryptionProperties) ACIServiceResponseResponseEncryptionProperties {
		if v != nil {
			return *v
		}
		var ret ACIServiceResponseResponseEncryptionProperties
		return ret
	}).(ACIServiceResponseResponseEncryptionPropertiesOutput)
}

// Encryption Key name
func (o ACIServiceResponseResponseEncryptionPropertiesPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEncryptionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyName
	}).(pulumi.StringPtrOutput)
}

// Encryption Key Version
func (o ACIServiceResponseResponseEncryptionPropertiesPtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEncryptionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

// vault base Url
func (o ACIServiceResponseResponseEncryptionPropertiesPtrOutput) VaultBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEncryptionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.VaultBaseUrl
	}).(pulumi.StringPtrOutput)
}

type ACIServiceResponseResponseEnvironmentImageRequest struct {
	// The list of assets.
	Assets []ImageAssetResponse `pulumi:"assets"`
	// The name of the driver file.
	DriverProgram *string `pulumi:"driverProgram"`
	// The details of the AZURE ML environment.
	Environment *EnvironmentImageResponseResponseEnvironment `pulumi:"environment"`
	// The unique identifying details of the AZURE ML environment.
	EnvironmentReference *EnvironmentImageResponseResponseEnvironmentReference `pulumi:"environmentReference"`
	// The list of model Ids.
	ModelIds []string `pulumi:"modelIds"`
	// The list of models.
	Models []ModelResponse `pulumi:"models"`
}

// ACIServiceResponseResponseEnvironmentImageRequestInput is an input type that accepts ACIServiceResponseResponseEnvironmentImageRequestArgs and ACIServiceResponseResponseEnvironmentImageRequestOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseEnvironmentImageRequestInput` via:
//
//          ACIServiceResponseResponseEnvironmentImageRequestArgs{...}
type ACIServiceResponseResponseEnvironmentImageRequestInput interface {
	pulumi.Input

	ToACIServiceResponseResponseEnvironmentImageRequestOutput() ACIServiceResponseResponseEnvironmentImageRequestOutput
	ToACIServiceResponseResponseEnvironmentImageRequestOutputWithContext(context.Context) ACIServiceResponseResponseEnvironmentImageRequestOutput
}

type ACIServiceResponseResponseEnvironmentImageRequestArgs struct {
	// The list of assets.
	Assets ImageAssetResponseArrayInput `pulumi:"assets"`
	// The name of the driver file.
	DriverProgram pulumi.StringPtrInput `pulumi:"driverProgram"`
	// The details of the AZURE ML environment.
	Environment EnvironmentImageResponseResponseEnvironmentPtrInput `pulumi:"environment"`
	// The unique identifying details of the AZURE ML environment.
	EnvironmentReference EnvironmentImageResponseResponseEnvironmentReferencePtrInput `pulumi:"environmentReference"`
	// The list of model Ids.
	ModelIds pulumi.StringArrayInput `pulumi:"modelIds"`
	// The list of models.
	Models ModelResponseArrayInput `pulumi:"models"`
}

func (ACIServiceResponseResponseEnvironmentImageRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponseEnvironmentImageRequest)(nil)).Elem()
}

func (i ACIServiceResponseResponseEnvironmentImageRequestArgs) ToACIServiceResponseResponseEnvironmentImageRequestOutput() ACIServiceResponseResponseEnvironmentImageRequestOutput {
	return i.ToACIServiceResponseResponseEnvironmentImageRequestOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseEnvironmentImageRequestArgs) ToACIServiceResponseResponseEnvironmentImageRequestOutputWithContext(ctx context.Context) ACIServiceResponseResponseEnvironmentImageRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseEnvironmentImageRequestOutput)
}

func (i ACIServiceResponseResponseEnvironmentImageRequestArgs) ToACIServiceResponseResponseEnvironmentImageRequestPtrOutput() ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return i.ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseEnvironmentImageRequestArgs) ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseEnvironmentImageRequestOutput).ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx)
}

// ACIServiceResponseResponseEnvironmentImageRequestPtrInput is an input type that accepts ACIServiceResponseResponseEnvironmentImageRequestArgs, ACIServiceResponseResponseEnvironmentImageRequestPtr and ACIServiceResponseResponseEnvironmentImageRequestPtrOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseEnvironmentImageRequestPtrInput` via:
//
//          ACIServiceResponseResponseEnvironmentImageRequestArgs{...}
//
//  or:
//
//          nil
type ACIServiceResponseResponseEnvironmentImageRequestPtrInput interface {
	pulumi.Input

	ToACIServiceResponseResponseEnvironmentImageRequestPtrOutput() ACIServiceResponseResponseEnvironmentImageRequestPtrOutput
	ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(context.Context) ACIServiceResponseResponseEnvironmentImageRequestPtrOutput
}

type aciserviceResponseResponseEnvironmentImageRequestPtrType ACIServiceResponseResponseEnvironmentImageRequestArgs

func ACIServiceResponseResponseEnvironmentImageRequestPtr(v *ACIServiceResponseResponseEnvironmentImageRequestArgs) ACIServiceResponseResponseEnvironmentImageRequestPtrInput {
	return (*aciserviceResponseResponseEnvironmentImageRequestPtrType)(v)
}

func (*aciserviceResponseResponseEnvironmentImageRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseResponseEnvironmentImageRequest)(nil)).Elem()
}

func (i *aciserviceResponseResponseEnvironmentImageRequestPtrType) ToACIServiceResponseResponseEnvironmentImageRequestPtrOutput() ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return i.ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (i *aciserviceResponseResponseEnvironmentImageRequestPtrType) ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseEnvironmentImageRequestPtrOutput)
}

type ACIServiceResponseResponseEnvironmentImageRequestOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseEnvironmentImageRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponseEnvironmentImageRequest)(nil)).Elem()
}

func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) ToACIServiceResponseResponseEnvironmentImageRequestOutput() ACIServiceResponseResponseEnvironmentImageRequestOutput {
	return o
}

func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) ToACIServiceResponseResponseEnvironmentImageRequestOutputWithContext(ctx context.Context) ACIServiceResponseResponseEnvironmentImageRequestOutput {
	return o
}

func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) ToACIServiceResponseResponseEnvironmentImageRequestPtrOutput() ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o.ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ACIServiceResponseResponseEnvironmentImageRequest) *ACIServiceResponseResponseEnvironmentImageRequest {
		return &v
	}).(ACIServiceResponseResponseEnvironmentImageRequestPtrOutput)
}

// The list of assets.
func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) Assets() ImageAssetResponseArrayOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEnvironmentImageRequest) []ImageAssetResponse { return v.Assets }).(ImageAssetResponseArrayOutput)
}

// The name of the driver file.
func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) DriverProgram() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEnvironmentImageRequest) *string { return v.DriverProgram }).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) Environment() EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEnvironmentImageRequest) *EnvironmentImageResponseResponseEnvironment {
		return v.Environment
	}).(EnvironmentImageResponseResponseEnvironmentPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) EnvironmentReference() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEnvironmentImageRequest) *EnvironmentImageResponseResponseEnvironmentReference {
		return v.EnvironmentReference
	}).(EnvironmentImageResponseResponseEnvironmentReferencePtrOutput)
}

// The list of model Ids.
func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) ModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEnvironmentImageRequest) []string { return v.ModelIds }).(pulumi.StringArrayOutput)
}

// The list of models.
func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) Models() ModelResponseArrayOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEnvironmentImageRequest) []ModelResponse { return v.Models }).(ModelResponseArrayOutput)
}

type ACIServiceResponseResponseEnvironmentImageRequestPtrOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseResponseEnvironmentImageRequest)(nil)).Elem()
}

func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) ToACIServiceResponseResponseEnvironmentImageRequestPtrOutput() ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o
}

func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o
}

func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) Elem() ACIServiceResponseResponseEnvironmentImageRequestOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEnvironmentImageRequest) ACIServiceResponseResponseEnvironmentImageRequest {
		if v != nil {
			return *v
		}
		var ret ACIServiceResponseResponseEnvironmentImageRequest
		return ret
	}).(ACIServiceResponseResponseEnvironmentImageRequestOutput)
}

// The list of assets.
func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) Assets() ImageAssetResponseArrayOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEnvironmentImageRequest) []ImageAssetResponse {
		if v == nil {
			return nil
		}
		return v.Assets
	}).(ImageAssetResponseArrayOutput)
}

// The name of the driver file.
func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) DriverProgram() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEnvironmentImageRequest) *string {
		if v == nil {
			return nil
		}
		return v.DriverProgram
	}).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) Environment() EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEnvironmentImageRequest) *EnvironmentImageResponseResponseEnvironment {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(EnvironmentImageResponseResponseEnvironmentPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) EnvironmentReference() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEnvironmentImageRequest) *EnvironmentImageResponseResponseEnvironmentReference {
		if v == nil {
			return nil
		}
		return v.EnvironmentReference
	}).(EnvironmentImageResponseResponseEnvironmentReferencePtrOutput)
}

// The list of model Ids.
func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) ModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEnvironmentImageRequest) []string {
		if v == nil {
			return nil
		}
		return v.ModelIds
	}).(pulumi.StringArrayOutput)
}

// The list of models.
func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) Models() ModelResponseArrayOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEnvironmentImageRequest) []ModelResponse {
		if v == nil {
			return nil
		}
		return v.Models
	}).(ModelResponseArrayOutput)
}

type ACIServiceResponseResponseVnetConfiguration struct {
	// The name of the virtual network subnet.
	SubnetName *string `pulumi:"subnetName"`
	// The name of the virtual network.
	VnetName *string `pulumi:"vnetName"`
}

// ACIServiceResponseResponseVnetConfigurationInput is an input type that accepts ACIServiceResponseResponseVnetConfigurationArgs and ACIServiceResponseResponseVnetConfigurationOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseVnetConfigurationInput` via:
//
//          ACIServiceResponseResponseVnetConfigurationArgs{...}
type ACIServiceResponseResponseVnetConfigurationInput interface {
	pulumi.Input

	ToACIServiceResponseResponseVnetConfigurationOutput() ACIServiceResponseResponseVnetConfigurationOutput
	ToACIServiceResponseResponseVnetConfigurationOutputWithContext(context.Context) ACIServiceResponseResponseVnetConfigurationOutput
}

type ACIServiceResponseResponseVnetConfigurationArgs struct {
	// The name of the virtual network subnet.
	SubnetName pulumi.StringPtrInput `pulumi:"subnetName"`
	// The name of the virtual network.
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
}

func (ACIServiceResponseResponseVnetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponseVnetConfiguration)(nil)).Elem()
}

func (i ACIServiceResponseResponseVnetConfigurationArgs) ToACIServiceResponseResponseVnetConfigurationOutput() ACIServiceResponseResponseVnetConfigurationOutput {
	return i.ToACIServiceResponseResponseVnetConfigurationOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseVnetConfigurationArgs) ToACIServiceResponseResponseVnetConfigurationOutputWithContext(ctx context.Context) ACIServiceResponseResponseVnetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseVnetConfigurationOutput)
}

func (i ACIServiceResponseResponseVnetConfigurationArgs) ToACIServiceResponseResponseVnetConfigurationPtrOutput() ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return i.ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseVnetConfigurationArgs) ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseVnetConfigurationOutput).ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(ctx)
}

// ACIServiceResponseResponseVnetConfigurationPtrInput is an input type that accepts ACIServiceResponseResponseVnetConfigurationArgs, ACIServiceResponseResponseVnetConfigurationPtr and ACIServiceResponseResponseVnetConfigurationPtrOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseVnetConfigurationPtrInput` via:
//
//          ACIServiceResponseResponseVnetConfigurationArgs{...}
//
//  or:
//
//          nil
type ACIServiceResponseResponseVnetConfigurationPtrInput interface {
	pulumi.Input

	ToACIServiceResponseResponseVnetConfigurationPtrOutput() ACIServiceResponseResponseVnetConfigurationPtrOutput
	ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(context.Context) ACIServiceResponseResponseVnetConfigurationPtrOutput
}

type aciserviceResponseResponseVnetConfigurationPtrType ACIServiceResponseResponseVnetConfigurationArgs

func ACIServiceResponseResponseVnetConfigurationPtr(v *ACIServiceResponseResponseVnetConfigurationArgs) ACIServiceResponseResponseVnetConfigurationPtrInput {
	return (*aciserviceResponseResponseVnetConfigurationPtrType)(v)
}

func (*aciserviceResponseResponseVnetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseResponseVnetConfiguration)(nil)).Elem()
}

func (i *aciserviceResponseResponseVnetConfigurationPtrType) ToACIServiceResponseResponseVnetConfigurationPtrOutput() ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return i.ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(context.Background())
}

func (i *aciserviceResponseResponseVnetConfigurationPtrType) ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseVnetConfigurationPtrOutput)
}

type ACIServiceResponseResponseVnetConfigurationOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseVnetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponseVnetConfiguration)(nil)).Elem()
}

func (o ACIServiceResponseResponseVnetConfigurationOutput) ToACIServiceResponseResponseVnetConfigurationOutput() ACIServiceResponseResponseVnetConfigurationOutput {
	return o
}

func (o ACIServiceResponseResponseVnetConfigurationOutput) ToACIServiceResponseResponseVnetConfigurationOutputWithContext(ctx context.Context) ACIServiceResponseResponseVnetConfigurationOutput {
	return o
}

func (o ACIServiceResponseResponseVnetConfigurationOutput) ToACIServiceResponseResponseVnetConfigurationPtrOutput() ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return o.ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(context.Background())
}

func (o ACIServiceResponseResponseVnetConfigurationOutput) ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ACIServiceResponseResponseVnetConfiguration) *ACIServiceResponseResponseVnetConfiguration {
		return &v
	}).(ACIServiceResponseResponseVnetConfigurationPtrOutput)
}

// The name of the virtual network subnet.
func (o ACIServiceResponseResponseVnetConfigurationOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseVnetConfiguration) *string { return v.SubnetName }).(pulumi.StringPtrOutput)
}

// The name of the virtual network.
func (o ACIServiceResponseResponseVnetConfigurationOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseVnetConfiguration) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

type ACIServiceResponseResponseVnetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseVnetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseResponseVnetConfiguration)(nil)).Elem()
}

func (o ACIServiceResponseResponseVnetConfigurationPtrOutput) ToACIServiceResponseResponseVnetConfigurationPtrOutput() ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return o
}

func (o ACIServiceResponseResponseVnetConfigurationPtrOutput) ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return o
}

func (o ACIServiceResponseResponseVnetConfigurationPtrOutput) Elem() ACIServiceResponseResponseVnetConfigurationOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseVnetConfiguration) ACIServiceResponseResponseVnetConfiguration {
		if v != nil {
			return *v
		}
		var ret ACIServiceResponseResponseVnetConfiguration
		return ret
	}).(ACIServiceResponseResponseVnetConfigurationOutput)
}

// The name of the virtual network subnet.
func (o ACIServiceResponseResponseVnetConfigurationPtrOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseVnetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SubnetName
	}).(pulumi.StringPtrOutput)
}

// The name of the virtual network.
func (o ACIServiceResponseResponseVnetConfigurationPtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseVnetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

type AKS struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AKS'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// AKS properties
	Properties *AKSProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// AKSInput is an input type that accepts AKSArgs and AKSOutput values.
// You can construct a concrete instance of `AKSInput` via:
//
//          AKSArgs{...}
type AKSInput interface {
	pulumi.Input

	ToAKSOutput() AKSOutput
	ToAKSOutputWithContext(context.Context) AKSOutput
}

type AKSArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AKS'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// AKS properties
	Properties AKSPropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (AKSArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKS)(nil)).Elem()
}

func (i AKSArgs) ToAKSOutput() AKSOutput {
	return i.ToAKSOutputWithContext(context.Background())
}

func (i AKSArgs) ToAKSOutputWithContext(ctx context.Context) AKSOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSOutput)
}

type AKSOutput struct{ *pulumi.OutputState }

func (AKSOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKS)(nil)).Elem()
}

func (o AKSOutput) ToAKSOutput() AKSOutput {
	return o
}

func (o AKSOutput) ToAKSOutputWithContext(ctx context.Context) AKSOutput {
	return o
}

// Location for the underlying compute
func (o AKSOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKS) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'AKS'.
func (o AKSOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AKS) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o AKSOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKS) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// AKS properties
func (o AKSOutput) Properties() AKSPropertiesPtrOutput {
	return o.ApplyT(func(v AKS) *AKSProperties { return v.Properties }).(AKSPropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o AKSOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKS) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type AKSProperties struct {
	// Number of agents
	AgentCount *int `pulumi:"agentCount"`
	// Agent virtual machine size
	AgentVmSize *string `pulumi:"agentVmSize"`
	// AKS networking configuration for vnet
	AksNetworkingConfiguration *AksNetworkingConfiguration `pulumi:"aksNetworkingConfiguration"`
	// Cluster full qualified domain name
	ClusterFqdn *string `pulumi:"clusterFqdn"`
	// Intended usage of the cluster
	ClusterPurpose *string `pulumi:"clusterPurpose"`
	// SSL configuration
	SslConfiguration *SslConfiguration `pulumi:"sslConfiguration"`
}

// AKSPropertiesInput is an input type that accepts AKSPropertiesArgs and AKSPropertiesOutput values.
// You can construct a concrete instance of `AKSPropertiesInput` via:
//
//          AKSPropertiesArgs{...}
type AKSPropertiesInput interface {
	pulumi.Input

	ToAKSPropertiesOutput() AKSPropertiesOutput
	ToAKSPropertiesOutputWithContext(context.Context) AKSPropertiesOutput
}

type AKSPropertiesArgs struct {
	// Number of agents
	AgentCount pulumi.IntPtrInput `pulumi:"agentCount"`
	// Agent virtual machine size
	AgentVmSize pulumi.StringPtrInput `pulumi:"agentVmSize"`
	// AKS networking configuration for vnet
	AksNetworkingConfiguration AksNetworkingConfigurationPtrInput `pulumi:"aksNetworkingConfiguration"`
	// Cluster full qualified domain name
	ClusterFqdn pulumi.StringPtrInput `pulumi:"clusterFqdn"`
	// Intended usage of the cluster
	ClusterPurpose pulumi.StringPtrInput `pulumi:"clusterPurpose"`
	// SSL configuration
	SslConfiguration SslConfigurationPtrInput `pulumi:"sslConfiguration"`
}

func (AKSPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSProperties)(nil)).Elem()
}

func (i AKSPropertiesArgs) ToAKSPropertiesOutput() AKSPropertiesOutput {
	return i.ToAKSPropertiesOutputWithContext(context.Background())
}

func (i AKSPropertiesArgs) ToAKSPropertiesOutputWithContext(ctx context.Context) AKSPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSPropertiesOutput)
}

func (i AKSPropertiesArgs) ToAKSPropertiesPtrOutput() AKSPropertiesPtrOutput {
	return i.ToAKSPropertiesPtrOutputWithContext(context.Background())
}

func (i AKSPropertiesArgs) ToAKSPropertiesPtrOutputWithContext(ctx context.Context) AKSPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSPropertiesOutput).ToAKSPropertiesPtrOutputWithContext(ctx)
}

// AKSPropertiesPtrInput is an input type that accepts AKSPropertiesArgs, AKSPropertiesPtr and AKSPropertiesPtrOutput values.
// You can construct a concrete instance of `AKSPropertiesPtrInput` via:
//
//          AKSPropertiesArgs{...}
//
//  or:
//
//          nil
type AKSPropertiesPtrInput interface {
	pulumi.Input

	ToAKSPropertiesPtrOutput() AKSPropertiesPtrOutput
	ToAKSPropertiesPtrOutputWithContext(context.Context) AKSPropertiesPtrOutput
}

type akspropertiesPtrType AKSPropertiesArgs

func AKSPropertiesPtr(v *AKSPropertiesArgs) AKSPropertiesPtrInput {
	return (*akspropertiesPtrType)(v)
}

func (*akspropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSProperties)(nil)).Elem()
}

func (i *akspropertiesPtrType) ToAKSPropertiesPtrOutput() AKSPropertiesPtrOutput {
	return i.ToAKSPropertiesPtrOutputWithContext(context.Background())
}

func (i *akspropertiesPtrType) ToAKSPropertiesPtrOutputWithContext(ctx context.Context) AKSPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSPropertiesPtrOutput)
}

type AKSPropertiesOutput struct{ *pulumi.OutputState }

func (AKSPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSProperties)(nil)).Elem()
}

func (o AKSPropertiesOutput) ToAKSPropertiesOutput() AKSPropertiesOutput {
	return o
}

func (o AKSPropertiesOutput) ToAKSPropertiesOutputWithContext(ctx context.Context) AKSPropertiesOutput {
	return o
}

func (o AKSPropertiesOutput) ToAKSPropertiesPtrOutput() AKSPropertiesPtrOutput {
	return o.ToAKSPropertiesPtrOutputWithContext(context.Background())
}

func (o AKSPropertiesOutput) ToAKSPropertiesPtrOutputWithContext(ctx context.Context) AKSPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AKSProperties) *AKSProperties {
		return &v
	}).(AKSPropertiesPtrOutput)
}

// Number of agents
func (o AKSPropertiesOutput) AgentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSProperties) *int { return v.AgentCount }).(pulumi.IntPtrOutput)
}

// Agent virtual machine size
func (o AKSPropertiesOutput) AgentVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSProperties) *string { return v.AgentVmSize }).(pulumi.StringPtrOutput)
}

// AKS networking configuration for vnet
func (o AKSPropertiesOutput) AksNetworkingConfiguration() AksNetworkingConfigurationPtrOutput {
	return o.ApplyT(func(v AKSProperties) *AksNetworkingConfiguration { return v.AksNetworkingConfiguration }).(AksNetworkingConfigurationPtrOutput)
}

// Cluster full qualified domain name
func (o AKSPropertiesOutput) ClusterFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSProperties) *string { return v.ClusterFqdn }).(pulumi.StringPtrOutput)
}

// Intended usage of the cluster
func (o AKSPropertiesOutput) ClusterPurpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSProperties) *string { return v.ClusterPurpose }).(pulumi.StringPtrOutput)
}

// SSL configuration
func (o AKSPropertiesOutput) SslConfiguration() SslConfigurationPtrOutput {
	return o.ApplyT(func(v AKSProperties) *SslConfiguration { return v.SslConfiguration }).(SslConfigurationPtrOutput)
}

type AKSPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AKSPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSProperties)(nil)).Elem()
}

func (o AKSPropertiesPtrOutput) ToAKSPropertiesPtrOutput() AKSPropertiesPtrOutput {
	return o
}

func (o AKSPropertiesPtrOutput) ToAKSPropertiesPtrOutputWithContext(ctx context.Context) AKSPropertiesPtrOutput {
	return o
}

func (o AKSPropertiesPtrOutput) Elem() AKSPropertiesOutput {
	return o.ApplyT(func(v *AKSProperties) AKSProperties {
		if v != nil {
			return *v
		}
		var ret AKSProperties
		return ret
	}).(AKSPropertiesOutput)
}

// Number of agents
func (o AKSPropertiesPtrOutput) AgentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *int {
		if v == nil {
			return nil
		}
		return v.AgentCount
	}).(pulumi.IntPtrOutput)
}

// Agent virtual machine size
func (o AKSPropertiesPtrOutput) AgentVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *string {
		if v == nil {
			return nil
		}
		return v.AgentVmSize
	}).(pulumi.StringPtrOutput)
}

// AKS networking configuration for vnet
func (o AKSPropertiesPtrOutput) AksNetworkingConfiguration() AksNetworkingConfigurationPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *AksNetworkingConfiguration {
		if v == nil {
			return nil
		}
		return v.AksNetworkingConfiguration
	}).(AksNetworkingConfigurationPtrOutput)
}

// Cluster full qualified domain name
func (o AKSPropertiesPtrOutput) ClusterFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClusterFqdn
	}).(pulumi.StringPtrOutput)
}

// Intended usage of the cluster
func (o AKSPropertiesPtrOutput) ClusterPurpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClusterPurpose
	}).(pulumi.StringPtrOutput)
}

// SSL configuration
func (o AKSPropertiesPtrOutput) SslConfiguration() SslConfigurationPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *SslConfiguration {
		if v == nil {
			return nil
		}
		return v.SslConfiguration
	}).(SslConfigurationPtrOutput)
}

type AKSReplicaStatusResponseError struct {
	// The error response.
	Error ErrorResponseResponse `pulumi:"error"`
}

// AKSReplicaStatusResponseErrorInput is an input type that accepts AKSReplicaStatusResponseErrorArgs and AKSReplicaStatusResponseErrorOutput values.
// You can construct a concrete instance of `AKSReplicaStatusResponseErrorInput` via:
//
//          AKSReplicaStatusResponseErrorArgs{...}
type AKSReplicaStatusResponseErrorInput interface {
	pulumi.Input

	ToAKSReplicaStatusResponseErrorOutput() AKSReplicaStatusResponseErrorOutput
	ToAKSReplicaStatusResponseErrorOutputWithContext(context.Context) AKSReplicaStatusResponseErrorOutput
}

type AKSReplicaStatusResponseErrorArgs struct {
	// The error response.
	Error ErrorResponseResponseInput `pulumi:"error"`
}

func (AKSReplicaStatusResponseErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSReplicaStatusResponseError)(nil)).Elem()
}

func (i AKSReplicaStatusResponseErrorArgs) ToAKSReplicaStatusResponseErrorOutput() AKSReplicaStatusResponseErrorOutput {
	return i.ToAKSReplicaStatusResponseErrorOutputWithContext(context.Background())
}

func (i AKSReplicaStatusResponseErrorArgs) ToAKSReplicaStatusResponseErrorOutputWithContext(ctx context.Context) AKSReplicaStatusResponseErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSReplicaStatusResponseErrorOutput)
}

func (i AKSReplicaStatusResponseErrorArgs) ToAKSReplicaStatusResponseErrorPtrOutput() AKSReplicaStatusResponseErrorPtrOutput {
	return i.ToAKSReplicaStatusResponseErrorPtrOutputWithContext(context.Background())
}

func (i AKSReplicaStatusResponseErrorArgs) ToAKSReplicaStatusResponseErrorPtrOutputWithContext(ctx context.Context) AKSReplicaStatusResponseErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSReplicaStatusResponseErrorOutput).ToAKSReplicaStatusResponseErrorPtrOutputWithContext(ctx)
}

// AKSReplicaStatusResponseErrorPtrInput is an input type that accepts AKSReplicaStatusResponseErrorArgs, AKSReplicaStatusResponseErrorPtr and AKSReplicaStatusResponseErrorPtrOutput values.
// You can construct a concrete instance of `AKSReplicaStatusResponseErrorPtrInput` via:
//
//          AKSReplicaStatusResponseErrorArgs{...}
//
//  or:
//
//          nil
type AKSReplicaStatusResponseErrorPtrInput interface {
	pulumi.Input

	ToAKSReplicaStatusResponseErrorPtrOutput() AKSReplicaStatusResponseErrorPtrOutput
	ToAKSReplicaStatusResponseErrorPtrOutputWithContext(context.Context) AKSReplicaStatusResponseErrorPtrOutput
}

type aksreplicaStatusResponseErrorPtrType AKSReplicaStatusResponseErrorArgs

func AKSReplicaStatusResponseErrorPtr(v *AKSReplicaStatusResponseErrorArgs) AKSReplicaStatusResponseErrorPtrInput {
	return (*aksreplicaStatusResponseErrorPtrType)(v)
}

func (*aksreplicaStatusResponseErrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSReplicaStatusResponseError)(nil)).Elem()
}

func (i *aksreplicaStatusResponseErrorPtrType) ToAKSReplicaStatusResponseErrorPtrOutput() AKSReplicaStatusResponseErrorPtrOutput {
	return i.ToAKSReplicaStatusResponseErrorPtrOutputWithContext(context.Background())
}

func (i *aksreplicaStatusResponseErrorPtrType) ToAKSReplicaStatusResponseErrorPtrOutputWithContext(ctx context.Context) AKSReplicaStatusResponseErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSReplicaStatusResponseErrorPtrOutput)
}

type AKSReplicaStatusResponseErrorOutput struct{ *pulumi.OutputState }

func (AKSReplicaStatusResponseErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSReplicaStatusResponseError)(nil)).Elem()
}

func (o AKSReplicaStatusResponseErrorOutput) ToAKSReplicaStatusResponseErrorOutput() AKSReplicaStatusResponseErrorOutput {
	return o
}

func (o AKSReplicaStatusResponseErrorOutput) ToAKSReplicaStatusResponseErrorOutputWithContext(ctx context.Context) AKSReplicaStatusResponseErrorOutput {
	return o
}

func (o AKSReplicaStatusResponseErrorOutput) ToAKSReplicaStatusResponseErrorPtrOutput() AKSReplicaStatusResponseErrorPtrOutput {
	return o.ToAKSReplicaStatusResponseErrorPtrOutputWithContext(context.Background())
}

func (o AKSReplicaStatusResponseErrorOutput) ToAKSReplicaStatusResponseErrorPtrOutputWithContext(ctx context.Context) AKSReplicaStatusResponseErrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AKSReplicaStatusResponseError) *AKSReplicaStatusResponseError {
		return &v
	}).(AKSReplicaStatusResponseErrorPtrOutput)
}

// The error response.
func (o AKSReplicaStatusResponseErrorOutput) Error() ErrorResponseResponseOutput {
	return o.ApplyT(func(v AKSReplicaStatusResponseError) ErrorResponseResponse { return v.Error }).(ErrorResponseResponseOutput)
}

type AKSReplicaStatusResponseErrorPtrOutput struct{ *pulumi.OutputState }

func (AKSReplicaStatusResponseErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSReplicaStatusResponseError)(nil)).Elem()
}

func (o AKSReplicaStatusResponseErrorPtrOutput) ToAKSReplicaStatusResponseErrorPtrOutput() AKSReplicaStatusResponseErrorPtrOutput {
	return o
}

func (o AKSReplicaStatusResponseErrorPtrOutput) ToAKSReplicaStatusResponseErrorPtrOutputWithContext(ctx context.Context) AKSReplicaStatusResponseErrorPtrOutput {
	return o
}

func (o AKSReplicaStatusResponseErrorPtrOutput) Elem() AKSReplicaStatusResponseErrorOutput {
	return o.ApplyT(func(v *AKSReplicaStatusResponseError) AKSReplicaStatusResponseError {
		if v != nil {
			return *v
		}
		var ret AKSReplicaStatusResponseError
		return ret
	}).(AKSReplicaStatusResponseErrorOutput)
}

// The error response.
func (o AKSReplicaStatusResponseErrorPtrOutput) Error() ErrorResponseResponsePtrOutput {
	return o.ApplyT(func(v *AKSReplicaStatusResponseError) *ErrorResponseResponse {
		if v == nil {
			return nil
		}
		return &v.Error
	}).(ErrorResponseResponsePtrOutput)
}

type AKSResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AKS'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// AKS properties
	Properties *AKSResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// AKSResponseInput is an input type that accepts AKSResponseArgs and AKSResponseOutput values.
// You can construct a concrete instance of `AKSResponseInput` via:
//
//          AKSResponseArgs{...}
type AKSResponseInput interface {
	pulumi.Input

	ToAKSResponseOutput() AKSResponseOutput
	ToAKSResponseOutputWithContext(context.Context) AKSResponseOutput
}

type AKSResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AKS'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// AKS properties
	Properties AKSResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (AKSResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSResponse)(nil)).Elem()
}

func (i AKSResponseArgs) ToAKSResponseOutput() AKSResponseOutput {
	return i.ToAKSResponseOutputWithContext(context.Background())
}

func (i AKSResponseArgs) ToAKSResponseOutputWithContext(ctx context.Context) AKSResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSResponseOutput)
}

type AKSResponseOutput struct{ *pulumi.OutputState }

func (AKSResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSResponse)(nil)).Elem()
}

func (o AKSResponseOutput) ToAKSResponseOutput() AKSResponseOutput {
	return o
}

func (o AKSResponseOutput) ToAKSResponseOutputWithContext(ctx context.Context) AKSResponseOutput {
	return o
}

// Location for the underlying compute
func (o AKSResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'AKS'.
func (o AKSResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AKSResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o AKSResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o AKSResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v AKSResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// AKS properties
func (o AKSResponseOutput) Properties() AKSResponsePropertiesPtrOutput {
	return o.ApplyT(func(v AKSResponse) *AKSResponseProperties { return v.Properties }).(AKSResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o AKSResponseOutput) ProvisioningErrors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v AKSResponse) []MachineLearningServiceErrorResponse { return v.ProvisioningErrors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o AKSResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AKSResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o AKSResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type AKSResponseProperties struct {
	// Number of agents
	AgentCount *int `pulumi:"agentCount"`
	// Agent virtual machine size
	AgentVmSize *string `pulumi:"agentVmSize"`
	// AKS networking configuration for vnet
	AksNetworkingConfiguration *AksNetworkingConfigurationResponse `pulumi:"aksNetworkingConfiguration"`
	// Cluster full qualified domain name
	ClusterFqdn *string `pulumi:"clusterFqdn"`
	// Intended usage of the cluster
	ClusterPurpose *string `pulumi:"clusterPurpose"`
	// SSL configuration
	SslConfiguration *SslConfigurationResponse `pulumi:"sslConfiguration"`
	// System services
	SystemServices []SystemServiceResponse `pulumi:"systemServices"`
}

// AKSResponsePropertiesInput is an input type that accepts AKSResponsePropertiesArgs and AKSResponsePropertiesOutput values.
// You can construct a concrete instance of `AKSResponsePropertiesInput` via:
//
//          AKSResponsePropertiesArgs{...}
type AKSResponsePropertiesInput interface {
	pulumi.Input

	ToAKSResponsePropertiesOutput() AKSResponsePropertiesOutput
	ToAKSResponsePropertiesOutputWithContext(context.Context) AKSResponsePropertiesOutput
}

type AKSResponsePropertiesArgs struct {
	// Number of agents
	AgentCount pulumi.IntPtrInput `pulumi:"agentCount"`
	// Agent virtual machine size
	AgentVmSize pulumi.StringPtrInput `pulumi:"agentVmSize"`
	// AKS networking configuration for vnet
	AksNetworkingConfiguration AksNetworkingConfigurationResponsePtrInput `pulumi:"aksNetworkingConfiguration"`
	// Cluster full qualified domain name
	ClusterFqdn pulumi.StringPtrInput `pulumi:"clusterFqdn"`
	// Intended usage of the cluster
	ClusterPurpose pulumi.StringPtrInput `pulumi:"clusterPurpose"`
	// SSL configuration
	SslConfiguration SslConfigurationResponsePtrInput `pulumi:"sslConfiguration"`
	// System services
	SystemServices SystemServiceResponseArrayInput `pulumi:"systemServices"`
}

func (AKSResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSResponseProperties)(nil)).Elem()
}

func (i AKSResponsePropertiesArgs) ToAKSResponsePropertiesOutput() AKSResponsePropertiesOutput {
	return i.ToAKSResponsePropertiesOutputWithContext(context.Background())
}

func (i AKSResponsePropertiesArgs) ToAKSResponsePropertiesOutputWithContext(ctx context.Context) AKSResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSResponsePropertiesOutput)
}

func (i AKSResponsePropertiesArgs) ToAKSResponsePropertiesPtrOutput() AKSResponsePropertiesPtrOutput {
	return i.ToAKSResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i AKSResponsePropertiesArgs) ToAKSResponsePropertiesPtrOutputWithContext(ctx context.Context) AKSResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSResponsePropertiesOutput).ToAKSResponsePropertiesPtrOutputWithContext(ctx)
}

// AKSResponsePropertiesPtrInput is an input type that accepts AKSResponsePropertiesArgs, AKSResponsePropertiesPtr and AKSResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `AKSResponsePropertiesPtrInput` via:
//
//          AKSResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type AKSResponsePropertiesPtrInput interface {
	pulumi.Input

	ToAKSResponsePropertiesPtrOutput() AKSResponsePropertiesPtrOutput
	ToAKSResponsePropertiesPtrOutputWithContext(context.Context) AKSResponsePropertiesPtrOutput
}

type aksresponsePropertiesPtrType AKSResponsePropertiesArgs

func AKSResponsePropertiesPtr(v *AKSResponsePropertiesArgs) AKSResponsePropertiesPtrInput {
	return (*aksresponsePropertiesPtrType)(v)
}

func (*aksresponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSResponseProperties)(nil)).Elem()
}

func (i *aksresponsePropertiesPtrType) ToAKSResponsePropertiesPtrOutput() AKSResponsePropertiesPtrOutput {
	return i.ToAKSResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *aksresponsePropertiesPtrType) ToAKSResponsePropertiesPtrOutputWithContext(ctx context.Context) AKSResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSResponsePropertiesPtrOutput)
}

type AKSResponsePropertiesOutput struct{ *pulumi.OutputState }

func (AKSResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSResponseProperties)(nil)).Elem()
}

func (o AKSResponsePropertiesOutput) ToAKSResponsePropertiesOutput() AKSResponsePropertiesOutput {
	return o
}

func (o AKSResponsePropertiesOutput) ToAKSResponsePropertiesOutputWithContext(ctx context.Context) AKSResponsePropertiesOutput {
	return o
}

func (o AKSResponsePropertiesOutput) ToAKSResponsePropertiesPtrOutput() AKSResponsePropertiesPtrOutput {
	return o.ToAKSResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o AKSResponsePropertiesOutput) ToAKSResponsePropertiesPtrOutputWithContext(ctx context.Context) AKSResponsePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AKSResponseProperties) *AKSResponseProperties {
		return &v
	}).(AKSResponsePropertiesPtrOutput)
}

// Number of agents
func (o AKSResponsePropertiesOutput) AgentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *int { return v.AgentCount }).(pulumi.IntPtrOutput)
}

// Agent virtual machine size
func (o AKSResponsePropertiesOutput) AgentVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *string { return v.AgentVmSize }).(pulumi.StringPtrOutput)
}

// AKS networking configuration for vnet
func (o AKSResponsePropertiesOutput) AksNetworkingConfiguration() AksNetworkingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *AksNetworkingConfigurationResponse { return v.AksNetworkingConfiguration }).(AksNetworkingConfigurationResponsePtrOutput)
}

// Cluster full qualified domain name
func (o AKSResponsePropertiesOutput) ClusterFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *string { return v.ClusterFqdn }).(pulumi.StringPtrOutput)
}

// Intended usage of the cluster
func (o AKSResponsePropertiesOutput) ClusterPurpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *string { return v.ClusterPurpose }).(pulumi.StringPtrOutput)
}

// SSL configuration
func (o AKSResponsePropertiesOutput) SslConfiguration() SslConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *SslConfigurationResponse { return v.SslConfiguration }).(SslConfigurationResponsePtrOutput)
}

// System services
func (o AKSResponsePropertiesOutput) SystemServices() SystemServiceResponseArrayOutput {
	return o.ApplyT(func(v AKSResponseProperties) []SystemServiceResponse { return v.SystemServices }).(SystemServiceResponseArrayOutput)
}

type AKSResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AKSResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSResponseProperties)(nil)).Elem()
}

func (o AKSResponsePropertiesPtrOutput) ToAKSResponsePropertiesPtrOutput() AKSResponsePropertiesPtrOutput {
	return o
}

func (o AKSResponsePropertiesPtrOutput) ToAKSResponsePropertiesPtrOutputWithContext(ctx context.Context) AKSResponsePropertiesPtrOutput {
	return o
}

func (o AKSResponsePropertiesPtrOutput) Elem() AKSResponsePropertiesOutput {
	return o.ApplyT(func(v *AKSResponseProperties) AKSResponseProperties {
		if v != nil {
			return *v
		}
		var ret AKSResponseProperties
		return ret
	}).(AKSResponsePropertiesOutput)
}

// Number of agents
func (o AKSResponsePropertiesPtrOutput) AgentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.AgentCount
	}).(pulumi.IntPtrOutput)
}

// Agent virtual machine size
func (o AKSResponsePropertiesPtrOutput) AgentVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.AgentVmSize
	}).(pulumi.StringPtrOutput)
}

// AKS networking configuration for vnet
func (o AKSResponsePropertiesPtrOutput) AksNetworkingConfiguration() AksNetworkingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *AksNetworkingConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.AksNetworkingConfiguration
	}).(AksNetworkingConfigurationResponsePtrOutput)
}

// Cluster full qualified domain name
func (o AKSResponsePropertiesPtrOutput) ClusterFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClusterFqdn
	}).(pulumi.StringPtrOutput)
}

// Intended usage of the cluster
func (o AKSResponsePropertiesPtrOutput) ClusterPurpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClusterPurpose
	}).(pulumi.StringPtrOutput)
}

// SSL configuration
func (o AKSResponsePropertiesPtrOutput) SslConfiguration() SslConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *SslConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.SslConfiguration
	}).(SslConfigurationResponsePtrOutput)
}

// System services
func (o AKSResponsePropertiesPtrOutput) SystemServices() SystemServiceResponseArrayOutput {
	return o.ApplyT(func(v *AKSResponseProperties) []SystemServiceResponse {
		if v == nil {
			return nil
		}
		return v.SystemServices
	}).(SystemServiceResponseArrayOutput)
}

type AKSServiceCreateRequestAutoScaler struct {
	// Option to enable/disable auto scaling.
	AutoscaleEnabled *bool `pulumi:"autoscaleEnabled"`
	// The maximum number of replicas in the cluster.
	MaxReplicas *int `pulumi:"maxReplicas"`
	// The minimum number of replicas to scale down to.
	MinReplicas *int `pulumi:"minReplicas"`
	// The amount of seconds to wait between auto scale updates.
	RefreshPeriodInSeconds *int `pulumi:"refreshPeriodInSeconds"`
	// The target utilization percentage to use for determining whether to scale the cluster.
	TargetUtilization *int `pulumi:"targetUtilization"`
}

// AKSServiceCreateRequestAutoScalerInput is an input type that accepts AKSServiceCreateRequestAutoScalerArgs and AKSServiceCreateRequestAutoScalerOutput values.
// You can construct a concrete instance of `AKSServiceCreateRequestAutoScalerInput` via:
//
//          AKSServiceCreateRequestAutoScalerArgs{...}
type AKSServiceCreateRequestAutoScalerInput interface {
	pulumi.Input

	ToAKSServiceCreateRequestAutoScalerOutput() AKSServiceCreateRequestAutoScalerOutput
	ToAKSServiceCreateRequestAutoScalerOutputWithContext(context.Context) AKSServiceCreateRequestAutoScalerOutput
}

type AKSServiceCreateRequestAutoScalerArgs struct {
	// Option to enable/disable auto scaling.
	AutoscaleEnabled pulumi.BoolPtrInput `pulumi:"autoscaleEnabled"`
	// The maximum number of replicas in the cluster.
	MaxReplicas pulumi.IntPtrInput `pulumi:"maxReplicas"`
	// The minimum number of replicas to scale down to.
	MinReplicas pulumi.IntPtrInput `pulumi:"minReplicas"`
	// The amount of seconds to wait between auto scale updates.
	RefreshPeriodInSeconds pulumi.IntPtrInput `pulumi:"refreshPeriodInSeconds"`
	// The target utilization percentage to use for determining whether to scale the cluster.
	TargetUtilization pulumi.IntPtrInput `pulumi:"targetUtilization"`
}

func (AKSServiceCreateRequestAutoScalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceCreateRequestAutoScaler)(nil)).Elem()
}

func (i AKSServiceCreateRequestAutoScalerArgs) ToAKSServiceCreateRequestAutoScalerOutput() AKSServiceCreateRequestAutoScalerOutput {
	return i.ToAKSServiceCreateRequestAutoScalerOutputWithContext(context.Background())
}

func (i AKSServiceCreateRequestAutoScalerArgs) ToAKSServiceCreateRequestAutoScalerOutputWithContext(ctx context.Context) AKSServiceCreateRequestAutoScalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceCreateRequestAutoScalerOutput)
}

func (i AKSServiceCreateRequestAutoScalerArgs) ToAKSServiceCreateRequestAutoScalerPtrOutput() AKSServiceCreateRequestAutoScalerPtrOutput {
	return i.ToAKSServiceCreateRequestAutoScalerPtrOutputWithContext(context.Background())
}

func (i AKSServiceCreateRequestAutoScalerArgs) ToAKSServiceCreateRequestAutoScalerPtrOutputWithContext(ctx context.Context) AKSServiceCreateRequestAutoScalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceCreateRequestAutoScalerOutput).ToAKSServiceCreateRequestAutoScalerPtrOutputWithContext(ctx)
}

// AKSServiceCreateRequestAutoScalerPtrInput is an input type that accepts AKSServiceCreateRequestAutoScalerArgs, AKSServiceCreateRequestAutoScalerPtr and AKSServiceCreateRequestAutoScalerPtrOutput values.
// You can construct a concrete instance of `AKSServiceCreateRequestAutoScalerPtrInput` via:
//
//          AKSServiceCreateRequestAutoScalerArgs{...}
//
//  or:
//
//          nil
type AKSServiceCreateRequestAutoScalerPtrInput interface {
	pulumi.Input

	ToAKSServiceCreateRequestAutoScalerPtrOutput() AKSServiceCreateRequestAutoScalerPtrOutput
	ToAKSServiceCreateRequestAutoScalerPtrOutputWithContext(context.Context) AKSServiceCreateRequestAutoScalerPtrOutput
}

type aksserviceCreateRequestAutoScalerPtrType AKSServiceCreateRequestAutoScalerArgs

func AKSServiceCreateRequestAutoScalerPtr(v *AKSServiceCreateRequestAutoScalerArgs) AKSServiceCreateRequestAutoScalerPtrInput {
	return (*aksserviceCreateRequestAutoScalerPtrType)(v)
}

func (*aksserviceCreateRequestAutoScalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceCreateRequestAutoScaler)(nil)).Elem()
}

func (i *aksserviceCreateRequestAutoScalerPtrType) ToAKSServiceCreateRequestAutoScalerPtrOutput() AKSServiceCreateRequestAutoScalerPtrOutput {
	return i.ToAKSServiceCreateRequestAutoScalerPtrOutputWithContext(context.Background())
}

func (i *aksserviceCreateRequestAutoScalerPtrType) ToAKSServiceCreateRequestAutoScalerPtrOutputWithContext(ctx context.Context) AKSServiceCreateRequestAutoScalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceCreateRequestAutoScalerPtrOutput)
}

type AKSServiceCreateRequestAutoScalerOutput struct{ *pulumi.OutputState }

func (AKSServiceCreateRequestAutoScalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceCreateRequestAutoScaler)(nil)).Elem()
}

func (o AKSServiceCreateRequestAutoScalerOutput) ToAKSServiceCreateRequestAutoScalerOutput() AKSServiceCreateRequestAutoScalerOutput {
	return o
}

func (o AKSServiceCreateRequestAutoScalerOutput) ToAKSServiceCreateRequestAutoScalerOutputWithContext(ctx context.Context) AKSServiceCreateRequestAutoScalerOutput {
	return o
}

func (o AKSServiceCreateRequestAutoScalerOutput) ToAKSServiceCreateRequestAutoScalerPtrOutput() AKSServiceCreateRequestAutoScalerPtrOutput {
	return o.ToAKSServiceCreateRequestAutoScalerPtrOutputWithContext(context.Background())
}

func (o AKSServiceCreateRequestAutoScalerOutput) ToAKSServiceCreateRequestAutoScalerPtrOutputWithContext(ctx context.Context) AKSServiceCreateRequestAutoScalerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AKSServiceCreateRequestAutoScaler) *AKSServiceCreateRequestAutoScaler {
		return &v
	}).(AKSServiceCreateRequestAutoScalerPtrOutput)
}

// Option to enable/disable auto scaling.
func (o AKSServiceCreateRequestAutoScalerOutput) AutoscaleEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceCreateRequestAutoScaler) *bool { return v.AutoscaleEnabled }).(pulumi.BoolPtrOutput)
}

// The maximum number of replicas in the cluster.
func (o AKSServiceCreateRequestAutoScalerOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceCreateRequestAutoScaler) *int { return v.MaxReplicas }).(pulumi.IntPtrOutput)
}

// The minimum number of replicas to scale down to.
func (o AKSServiceCreateRequestAutoScalerOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceCreateRequestAutoScaler) *int { return v.MinReplicas }).(pulumi.IntPtrOutput)
}

// The amount of seconds to wait between auto scale updates.
func (o AKSServiceCreateRequestAutoScalerOutput) RefreshPeriodInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceCreateRequestAutoScaler) *int { return v.RefreshPeriodInSeconds }).(pulumi.IntPtrOutput)
}

// The target utilization percentage to use for determining whether to scale the cluster.
func (o AKSServiceCreateRequestAutoScalerOutput) TargetUtilization() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceCreateRequestAutoScaler) *int { return v.TargetUtilization }).(pulumi.IntPtrOutput)
}

type AKSServiceCreateRequestAutoScalerPtrOutput struct{ *pulumi.OutputState }

func (AKSServiceCreateRequestAutoScalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceCreateRequestAutoScaler)(nil)).Elem()
}

func (o AKSServiceCreateRequestAutoScalerPtrOutput) ToAKSServiceCreateRequestAutoScalerPtrOutput() AKSServiceCreateRequestAutoScalerPtrOutput {
	return o
}

func (o AKSServiceCreateRequestAutoScalerPtrOutput) ToAKSServiceCreateRequestAutoScalerPtrOutputWithContext(ctx context.Context) AKSServiceCreateRequestAutoScalerPtrOutput {
	return o
}

func (o AKSServiceCreateRequestAutoScalerPtrOutput) Elem() AKSServiceCreateRequestAutoScalerOutput {
	return o.ApplyT(func(v *AKSServiceCreateRequestAutoScaler) AKSServiceCreateRequestAutoScaler {
		if v != nil {
			return *v
		}
		var ret AKSServiceCreateRequestAutoScaler
		return ret
	}).(AKSServiceCreateRequestAutoScalerOutput)
}

// Option to enable/disable auto scaling.
func (o AKSServiceCreateRequestAutoScalerPtrOutput) AutoscaleEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AKSServiceCreateRequestAutoScaler) *bool {
		if v == nil {
			return nil
		}
		return v.AutoscaleEnabled
	}).(pulumi.BoolPtrOutput)
}

// The maximum number of replicas in the cluster.
func (o AKSServiceCreateRequestAutoScalerPtrOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceCreateRequestAutoScaler) *int {
		if v == nil {
			return nil
		}
		return v.MaxReplicas
	}).(pulumi.IntPtrOutput)
}

// The minimum number of replicas to scale down to.
func (o AKSServiceCreateRequestAutoScalerPtrOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceCreateRequestAutoScaler) *int {
		if v == nil {
			return nil
		}
		return v.MinReplicas
	}).(pulumi.IntPtrOutput)
}

// The amount of seconds to wait between auto scale updates.
func (o AKSServiceCreateRequestAutoScalerPtrOutput) RefreshPeriodInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceCreateRequestAutoScaler) *int {
		if v == nil {
			return nil
		}
		return v.RefreshPeriodInSeconds
	}).(pulumi.IntPtrOutput)
}

// The target utilization percentage to use for determining whether to scale the cluster.
func (o AKSServiceCreateRequestAutoScalerPtrOutput) TargetUtilization() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceCreateRequestAutoScaler) *int {
		if v == nil {
			return nil
		}
		return v.TargetUtilization
	}).(pulumi.IntPtrOutput)
}

type AKSServiceCreateRequestDataCollection struct {
	// Option for enabling/disabling Event Hub.
	EventHubEnabled *bool `pulumi:"eventHubEnabled"`
	// Option for enabling/disabling storage.
	StorageEnabled *bool `pulumi:"storageEnabled"`
}

// AKSServiceCreateRequestDataCollectionInput is an input type that accepts AKSServiceCreateRequestDataCollectionArgs and AKSServiceCreateRequestDataCollectionOutput values.
// You can construct a concrete instance of `AKSServiceCreateRequestDataCollectionInput` via:
//
//          AKSServiceCreateRequestDataCollectionArgs{...}
type AKSServiceCreateRequestDataCollectionInput interface {
	pulumi.Input

	ToAKSServiceCreateRequestDataCollectionOutput() AKSServiceCreateRequestDataCollectionOutput
	ToAKSServiceCreateRequestDataCollectionOutputWithContext(context.Context) AKSServiceCreateRequestDataCollectionOutput
}

type AKSServiceCreateRequestDataCollectionArgs struct {
	// Option for enabling/disabling Event Hub.
	EventHubEnabled pulumi.BoolPtrInput `pulumi:"eventHubEnabled"`
	// Option for enabling/disabling storage.
	StorageEnabled pulumi.BoolPtrInput `pulumi:"storageEnabled"`
}

func (AKSServiceCreateRequestDataCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceCreateRequestDataCollection)(nil)).Elem()
}

func (i AKSServiceCreateRequestDataCollectionArgs) ToAKSServiceCreateRequestDataCollectionOutput() AKSServiceCreateRequestDataCollectionOutput {
	return i.ToAKSServiceCreateRequestDataCollectionOutputWithContext(context.Background())
}

func (i AKSServiceCreateRequestDataCollectionArgs) ToAKSServiceCreateRequestDataCollectionOutputWithContext(ctx context.Context) AKSServiceCreateRequestDataCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceCreateRequestDataCollectionOutput)
}

func (i AKSServiceCreateRequestDataCollectionArgs) ToAKSServiceCreateRequestDataCollectionPtrOutput() AKSServiceCreateRequestDataCollectionPtrOutput {
	return i.ToAKSServiceCreateRequestDataCollectionPtrOutputWithContext(context.Background())
}

func (i AKSServiceCreateRequestDataCollectionArgs) ToAKSServiceCreateRequestDataCollectionPtrOutputWithContext(ctx context.Context) AKSServiceCreateRequestDataCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceCreateRequestDataCollectionOutput).ToAKSServiceCreateRequestDataCollectionPtrOutputWithContext(ctx)
}

// AKSServiceCreateRequestDataCollectionPtrInput is an input type that accepts AKSServiceCreateRequestDataCollectionArgs, AKSServiceCreateRequestDataCollectionPtr and AKSServiceCreateRequestDataCollectionPtrOutput values.
// You can construct a concrete instance of `AKSServiceCreateRequestDataCollectionPtrInput` via:
//
//          AKSServiceCreateRequestDataCollectionArgs{...}
//
//  or:
//
//          nil
type AKSServiceCreateRequestDataCollectionPtrInput interface {
	pulumi.Input

	ToAKSServiceCreateRequestDataCollectionPtrOutput() AKSServiceCreateRequestDataCollectionPtrOutput
	ToAKSServiceCreateRequestDataCollectionPtrOutputWithContext(context.Context) AKSServiceCreateRequestDataCollectionPtrOutput
}

type aksserviceCreateRequestDataCollectionPtrType AKSServiceCreateRequestDataCollectionArgs

func AKSServiceCreateRequestDataCollectionPtr(v *AKSServiceCreateRequestDataCollectionArgs) AKSServiceCreateRequestDataCollectionPtrInput {
	return (*aksserviceCreateRequestDataCollectionPtrType)(v)
}

func (*aksserviceCreateRequestDataCollectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceCreateRequestDataCollection)(nil)).Elem()
}

func (i *aksserviceCreateRequestDataCollectionPtrType) ToAKSServiceCreateRequestDataCollectionPtrOutput() AKSServiceCreateRequestDataCollectionPtrOutput {
	return i.ToAKSServiceCreateRequestDataCollectionPtrOutputWithContext(context.Background())
}

func (i *aksserviceCreateRequestDataCollectionPtrType) ToAKSServiceCreateRequestDataCollectionPtrOutputWithContext(ctx context.Context) AKSServiceCreateRequestDataCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceCreateRequestDataCollectionPtrOutput)
}

type AKSServiceCreateRequestDataCollectionOutput struct{ *pulumi.OutputState }

func (AKSServiceCreateRequestDataCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceCreateRequestDataCollection)(nil)).Elem()
}

func (o AKSServiceCreateRequestDataCollectionOutput) ToAKSServiceCreateRequestDataCollectionOutput() AKSServiceCreateRequestDataCollectionOutput {
	return o
}

func (o AKSServiceCreateRequestDataCollectionOutput) ToAKSServiceCreateRequestDataCollectionOutputWithContext(ctx context.Context) AKSServiceCreateRequestDataCollectionOutput {
	return o
}

func (o AKSServiceCreateRequestDataCollectionOutput) ToAKSServiceCreateRequestDataCollectionPtrOutput() AKSServiceCreateRequestDataCollectionPtrOutput {
	return o.ToAKSServiceCreateRequestDataCollectionPtrOutputWithContext(context.Background())
}

func (o AKSServiceCreateRequestDataCollectionOutput) ToAKSServiceCreateRequestDataCollectionPtrOutputWithContext(ctx context.Context) AKSServiceCreateRequestDataCollectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AKSServiceCreateRequestDataCollection) *AKSServiceCreateRequestDataCollection {
		return &v
	}).(AKSServiceCreateRequestDataCollectionPtrOutput)
}

// Option for enabling/disabling Event Hub.
func (o AKSServiceCreateRequestDataCollectionOutput) EventHubEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceCreateRequestDataCollection) *bool { return v.EventHubEnabled }).(pulumi.BoolPtrOutput)
}

// Option for enabling/disabling storage.
func (o AKSServiceCreateRequestDataCollectionOutput) StorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceCreateRequestDataCollection) *bool { return v.StorageEnabled }).(pulumi.BoolPtrOutput)
}

type AKSServiceCreateRequestDataCollectionPtrOutput struct{ *pulumi.OutputState }

func (AKSServiceCreateRequestDataCollectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceCreateRequestDataCollection)(nil)).Elem()
}

func (o AKSServiceCreateRequestDataCollectionPtrOutput) ToAKSServiceCreateRequestDataCollectionPtrOutput() AKSServiceCreateRequestDataCollectionPtrOutput {
	return o
}

func (o AKSServiceCreateRequestDataCollectionPtrOutput) ToAKSServiceCreateRequestDataCollectionPtrOutputWithContext(ctx context.Context) AKSServiceCreateRequestDataCollectionPtrOutput {
	return o
}

func (o AKSServiceCreateRequestDataCollectionPtrOutput) Elem() AKSServiceCreateRequestDataCollectionOutput {
	return o.ApplyT(func(v *AKSServiceCreateRequestDataCollection) AKSServiceCreateRequestDataCollection {
		if v != nil {
			return *v
		}
		var ret AKSServiceCreateRequestDataCollection
		return ret
	}).(AKSServiceCreateRequestDataCollectionOutput)
}

// Option for enabling/disabling Event Hub.
func (o AKSServiceCreateRequestDataCollectionPtrOutput) EventHubEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AKSServiceCreateRequestDataCollection) *bool {
		if v == nil {
			return nil
		}
		return v.EventHubEnabled
	}).(pulumi.BoolPtrOutput)
}

// Option for enabling/disabling storage.
func (o AKSServiceCreateRequestDataCollectionPtrOutput) StorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AKSServiceCreateRequestDataCollection) *bool {
		if v == nil {
			return nil
		}
		return v.StorageEnabled
	}).(pulumi.BoolPtrOutput)
}

type AKSServiceCreateRequestLivenessProbeRequirements struct {
	// The number of failures to allow before returning an unhealthy status.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The delay before the first probe in seconds.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// The length of time between probes in seconds.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// The number of successful probes before returning a healthy status.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// The probe timeout in seconds.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// AKSServiceCreateRequestLivenessProbeRequirementsInput is an input type that accepts AKSServiceCreateRequestLivenessProbeRequirementsArgs and AKSServiceCreateRequestLivenessProbeRequirementsOutput values.
// You can construct a concrete instance of `AKSServiceCreateRequestLivenessProbeRequirementsInput` via:
//
//          AKSServiceCreateRequestLivenessProbeRequirementsArgs{...}
type AKSServiceCreateRequestLivenessProbeRequirementsInput interface {
	pulumi.Input

	ToAKSServiceCreateRequestLivenessProbeRequirementsOutput() AKSServiceCreateRequestLivenessProbeRequirementsOutput
	ToAKSServiceCreateRequestLivenessProbeRequirementsOutputWithContext(context.Context) AKSServiceCreateRequestLivenessProbeRequirementsOutput
}

type AKSServiceCreateRequestLivenessProbeRequirementsArgs struct {
	// The number of failures to allow before returning an unhealthy status.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The delay before the first probe in seconds.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// The length of time between probes in seconds.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// The number of successful probes before returning a healthy status.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// The probe timeout in seconds.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (AKSServiceCreateRequestLivenessProbeRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceCreateRequestLivenessProbeRequirements)(nil)).Elem()
}

func (i AKSServiceCreateRequestLivenessProbeRequirementsArgs) ToAKSServiceCreateRequestLivenessProbeRequirementsOutput() AKSServiceCreateRequestLivenessProbeRequirementsOutput {
	return i.ToAKSServiceCreateRequestLivenessProbeRequirementsOutputWithContext(context.Background())
}

func (i AKSServiceCreateRequestLivenessProbeRequirementsArgs) ToAKSServiceCreateRequestLivenessProbeRequirementsOutputWithContext(ctx context.Context) AKSServiceCreateRequestLivenessProbeRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceCreateRequestLivenessProbeRequirementsOutput)
}

func (i AKSServiceCreateRequestLivenessProbeRequirementsArgs) ToAKSServiceCreateRequestLivenessProbeRequirementsPtrOutput() AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput {
	return i.ToAKSServiceCreateRequestLivenessProbeRequirementsPtrOutputWithContext(context.Background())
}

func (i AKSServiceCreateRequestLivenessProbeRequirementsArgs) ToAKSServiceCreateRequestLivenessProbeRequirementsPtrOutputWithContext(ctx context.Context) AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceCreateRequestLivenessProbeRequirementsOutput).ToAKSServiceCreateRequestLivenessProbeRequirementsPtrOutputWithContext(ctx)
}

// AKSServiceCreateRequestLivenessProbeRequirementsPtrInput is an input type that accepts AKSServiceCreateRequestLivenessProbeRequirementsArgs, AKSServiceCreateRequestLivenessProbeRequirementsPtr and AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput values.
// You can construct a concrete instance of `AKSServiceCreateRequestLivenessProbeRequirementsPtrInput` via:
//
//          AKSServiceCreateRequestLivenessProbeRequirementsArgs{...}
//
//  or:
//
//          nil
type AKSServiceCreateRequestLivenessProbeRequirementsPtrInput interface {
	pulumi.Input

	ToAKSServiceCreateRequestLivenessProbeRequirementsPtrOutput() AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput
	ToAKSServiceCreateRequestLivenessProbeRequirementsPtrOutputWithContext(context.Context) AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput
}

type aksserviceCreateRequestLivenessProbeRequirementsPtrType AKSServiceCreateRequestLivenessProbeRequirementsArgs

func AKSServiceCreateRequestLivenessProbeRequirementsPtr(v *AKSServiceCreateRequestLivenessProbeRequirementsArgs) AKSServiceCreateRequestLivenessProbeRequirementsPtrInput {
	return (*aksserviceCreateRequestLivenessProbeRequirementsPtrType)(v)
}

func (*aksserviceCreateRequestLivenessProbeRequirementsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceCreateRequestLivenessProbeRequirements)(nil)).Elem()
}

func (i *aksserviceCreateRequestLivenessProbeRequirementsPtrType) ToAKSServiceCreateRequestLivenessProbeRequirementsPtrOutput() AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput {
	return i.ToAKSServiceCreateRequestLivenessProbeRequirementsPtrOutputWithContext(context.Background())
}

func (i *aksserviceCreateRequestLivenessProbeRequirementsPtrType) ToAKSServiceCreateRequestLivenessProbeRequirementsPtrOutputWithContext(ctx context.Context) AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput)
}

type AKSServiceCreateRequestLivenessProbeRequirementsOutput struct{ *pulumi.OutputState }

func (AKSServiceCreateRequestLivenessProbeRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceCreateRequestLivenessProbeRequirements)(nil)).Elem()
}

func (o AKSServiceCreateRequestLivenessProbeRequirementsOutput) ToAKSServiceCreateRequestLivenessProbeRequirementsOutput() AKSServiceCreateRequestLivenessProbeRequirementsOutput {
	return o
}

func (o AKSServiceCreateRequestLivenessProbeRequirementsOutput) ToAKSServiceCreateRequestLivenessProbeRequirementsOutputWithContext(ctx context.Context) AKSServiceCreateRequestLivenessProbeRequirementsOutput {
	return o
}

func (o AKSServiceCreateRequestLivenessProbeRequirementsOutput) ToAKSServiceCreateRequestLivenessProbeRequirementsPtrOutput() AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput {
	return o.ToAKSServiceCreateRequestLivenessProbeRequirementsPtrOutputWithContext(context.Background())
}

func (o AKSServiceCreateRequestLivenessProbeRequirementsOutput) ToAKSServiceCreateRequestLivenessProbeRequirementsPtrOutputWithContext(ctx context.Context) AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AKSServiceCreateRequestLivenessProbeRequirements) *AKSServiceCreateRequestLivenessProbeRequirements {
		return &v
	}).(AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput)
}

// The number of failures to allow before returning an unhealthy status.
func (o AKSServiceCreateRequestLivenessProbeRequirementsOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceCreateRequestLivenessProbeRequirements) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The delay before the first probe in seconds.
func (o AKSServiceCreateRequestLivenessProbeRequirementsOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceCreateRequestLivenessProbeRequirements) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// The length of time between probes in seconds.
func (o AKSServiceCreateRequestLivenessProbeRequirementsOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceCreateRequestLivenessProbeRequirements) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// The number of successful probes before returning a healthy status.
func (o AKSServiceCreateRequestLivenessProbeRequirementsOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceCreateRequestLivenessProbeRequirements) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// The probe timeout in seconds.
func (o AKSServiceCreateRequestLivenessProbeRequirementsOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceCreateRequestLivenessProbeRequirements) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput struct{ *pulumi.OutputState }

func (AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceCreateRequestLivenessProbeRequirements)(nil)).Elem()
}

func (o AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput) ToAKSServiceCreateRequestLivenessProbeRequirementsPtrOutput() AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput {
	return o
}

func (o AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput) ToAKSServiceCreateRequestLivenessProbeRequirementsPtrOutputWithContext(ctx context.Context) AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput {
	return o
}

func (o AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput) Elem() AKSServiceCreateRequestLivenessProbeRequirementsOutput {
	return o.ApplyT(func(v *AKSServiceCreateRequestLivenessProbeRequirements) AKSServiceCreateRequestLivenessProbeRequirements {
		if v != nil {
			return *v
		}
		var ret AKSServiceCreateRequestLivenessProbeRequirements
		return ret
	}).(AKSServiceCreateRequestLivenessProbeRequirementsOutput)
}

// The number of failures to allow before returning an unhealthy status.
func (o AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceCreateRequestLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The delay before the first probe in seconds.
func (o AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceCreateRequestLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// The length of time between probes in seconds.
func (o AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceCreateRequestLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// The number of successful probes before returning a healthy status.
func (o AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceCreateRequestLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// The probe timeout in seconds.
func (o AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceCreateRequestLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type AKSServiceResponseResponse struct {
	// Whether or not AAD authentication is enabled.
	AadAuthEnabled *bool `pulumi:"aadAuthEnabled"`
	// Whether or not Application Insights is enabled.
	AppInsightsEnabled *bool `pulumi:"appInsightsEnabled"`
	// Whether or not authentication is enabled.
	AuthEnabled *bool `pulumi:"authEnabled"`
	// The auto scaler properties.
	AutoScaler *AKSServiceResponseResponseAutoScaler `pulumi:"autoScaler"`
	// The name of the compute resource.
	ComputeName *string `pulumi:"computeName"`
	// The compute environment type for the service.
	// Expected value is 'AKS'.
	ComputeType string `pulumi:"computeType"`
	// The container resource requirements.
	ContainerResourceRequirements *ContainerResourceRequirementsResponse `pulumi:"containerResourceRequirements"`
	// Details of the data collection options specified.
	DataCollection *AKSServiceResponseResponseDataCollection `pulumi:"dataCollection"`
	// The deployment status.
	DeploymentStatus AKSServiceResponseResponseDeploymentStatus `pulumi:"deploymentStatus"`
	// The deployment type for the service.
	DeploymentType *string `pulumi:"deploymentType"`
	// The service description.
	Description *string `pulumi:"description"`
	// The Environment, models and assets used for inferencing.
	EnvironmentImageRequest *AKSServiceResponseResponseEnvironmentImageRequest `pulumi:"environmentImageRequest"`
	// The error details.
	Error ServiceResponseBaseResponseError `pulumi:"error"`
	// Is this the default variant.
	IsDefault *bool `pulumi:"isDefault"`
	// The service tag dictionary. Tags are mutable.
	KvTags map[string]string `pulumi:"kvTags"`
	// The liveness probe requirements.
	LivenessProbeRequirements *AKSServiceResponseResponseLivenessProbeRequirements `pulumi:"livenessProbeRequirements"`
	// The maximum number of concurrent requests per container.
	MaxConcurrentRequestsPerContainer *int `pulumi:"maxConcurrentRequestsPerContainer"`
	// Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
	MaxQueueWaitMs *int `pulumi:"maxQueueWaitMs"`
	// Details on the models and configurations.
	ModelConfigMap map[string]interface{} `pulumi:"modelConfigMap"`
	// The list of models.
	Models []ModelResponse `pulumi:"models"`
	// The Kubernetes namespace of the deployment.
	Namespace *string `pulumi:"namespace"`
	// The number of replicas on the cluster.
	NumReplicas *int `pulumi:"numReplicas"`
	// The service property dictionary. Properties are immutable.
	Properties map[string]string `pulumi:"properties"`
	// The scoring timeout in milliseconds.
	ScoringTimeoutMs *int `pulumi:"scoringTimeoutMs"`
	// The Uri for sending scoring requests.
	ScoringUri string `pulumi:"scoringUri"`
	// The current state of the service.
	State string `pulumi:"state"`
	// The Uri for sending swagger requests.
	SwaggerUri string `pulumi:"swaggerUri"`
	// The amount of traffic variant receives.
	TrafficPercentile *float64 `pulumi:"trafficPercentile"`
	// The type of the variant.
	Type *string `pulumi:"type"`
}

// AKSServiceResponseResponseInput is an input type that accepts AKSServiceResponseResponseArgs and AKSServiceResponseResponseOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseInput` via:
//
//          AKSServiceResponseResponseArgs{...}
type AKSServiceResponseResponseInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseOutput() AKSServiceResponseResponseOutput
	ToAKSServiceResponseResponseOutputWithContext(context.Context) AKSServiceResponseResponseOutput
}

type AKSServiceResponseResponseArgs struct {
	// Whether or not AAD authentication is enabled.
	AadAuthEnabled pulumi.BoolPtrInput `pulumi:"aadAuthEnabled"`
	// Whether or not Application Insights is enabled.
	AppInsightsEnabled pulumi.BoolPtrInput `pulumi:"appInsightsEnabled"`
	// Whether or not authentication is enabled.
	AuthEnabled pulumi.BoolPtrInput `pulumi:"authEnabled"`
	// The auto scaler properties.
	AutoScaler AKSServiceResponseResponseAutoScalerPtrInput `pulumi:"autoScaler"`
	// The name of the compute resource.
	ComputeName pulumi.StringPtrInput `pulumi:"computeName"`
	// The compute environment type for the service.
	// Expected value is 'AKS'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The container resource requirements.
	ContainerResourceRequirements ContainerResourceRequirementsResponsePtrInput `pulumi:"containerResourceRequirements"`
	// Details of the data collection options specified.
	DataCollection AKSServiceResponseResponseDataCollectionPtrInput `pulumi:"dataCollection"`
	// The deployment status.
	DeploymentStatus AKSServiceResponseResponseDeploymentStatusInput `pulumi:"deploymentStatus"`
	// The deployment type for the service.
	DeploymentType pulumi.StringPtrInput `pulumi:"deploymentType"`
	// The service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Environment, models and assets used for inferencing.
	EnvironmentImageRequest AKSServiceResponseResponseEnvironmentImageRequestPtrInput `pulumi:"environmentImageRequest"`
	// The error details.
	Error ServiceResponseBaseResponseErrorInput `pulumi:"error"`
	// Is this the default variant.
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// The service tag dictionary. Tags are mutable.
	KvTags pulumi.StringMapInput `pulumi:"kvTags"`
	// The liveness probe requirements.
	LivenessProbeRequirements AKSServiceResponseResponseLivenessProbeRequirementsPtrInput `pulumi:"livenessProbeRequirements"`
	// The maximum number of concurrent requests per container.
	MaxConcurrentRequestsPerContainer pulumi.IntPtrInput `pulumi:"maxConcurrentRequestsPerContainer"`
	// Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
	MaxQueueWaitMs pulumi.IntPtrInput `pulumi:"maxQueueWaitMs"`
	// Details on the models and configurations.
	ModelConfigMap pulumi.MapInput `pulumi:"modelConfigMap"`
	// The list of models.
	Models ModelResponseArrayInput `pulumi:"models"`
	// The Kubernetes namespace of the deployment.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The number of replicas on the cluster.
	NumReplicas pulumi.IntPtrInput `pulumi:"numReplicas"`
	// The service property dictionary. Properties are immutable.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The scoring timeout in milliseconds.
	ScoringTimeoutMs pulumi.IntPtrInput `pulumi:"scoringTimeoutMs"`
	// The Uri for sending scoring requests.
	ScoringUri pulumi.StringInput `pulumi:"scoringUri"`
	// The current state of the service.
	State pulumi.StringInput `pulumi:"state"`
	// The Uri for sending swagger requests.
	SwaggerUri pulumi.StringInput `pulumi:"swaggerUri"`
	// The amount of traffic variant receives.
	TrafficPercentile pulumi.Float64PtrInput `pulumi:"trafficPercentile"`
	// The type of the variant.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AKSServiceResponseResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponse)(nil)).Elem()
}

func (i AKSServiceResponseResponseArgs) ToAKSServiceResponseResponseOutput() AKSServiceResponseResponseOutput {
	return i.ToAKSServiceResponseResponseOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseArgs) ToAKSServiceResponseResponseOutputWithContext(ctx context.Context) AKSServiceResponseResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseOutput)
}

type AKSServiceResponseResponseOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponse)(nil)).Elem()
}

func (o AKSServiceResponseResponseOutput) ToAKSServiceResponseResponseOutput() AKSServiceResponseResponseOutput {
	return o
}

func (o AKSServiceResponseResponseOutput) ToAKSServiceResponseResponseOutputWithContext(ctx context.Context) AKSServiceResponseResponseOutput {
	return o
}

// Whether or not AAD authentication is enabled.
func (o AKSServiceResponseResponseOutput) AadAuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *bool { return v.AadAuthEnabled }).(pulumi.BoolPtrOutput)
}

// Whether or not Application Insights is enabled.
func (o AKSServiceResponseResponseOutput) AppInsightsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *bool { return v.AppInsightsEnabled }).(pulumi.BoolPtrOutput)
}

// Whether or not authentication is enabled.
func (o AKSServiceResponseResponseOutput) AuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *bool { return v.AuthEnabled }).(pulumi.BoolPtrOutput)
}

// The auto scaler properties.
func (o AKSServiceResponseResponseOutput) AutoScaler() AKSServiceResponseResponseAutoScalerPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *AKSServiceResponseResponseAutoScaler { return v.AutoScaler }).(AKSServiceResponseResponseAutoScalerPtrOutput)
}

// The name of the compute resource.
func (o AKSServiceResponseResponseOutput) ComputeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *string { return v.ComputeName }).(pulumi.StringPtrOutput)
}

// The compute environment type for the service.
// Expected value is 'AKS'.
func (o AKSServiceResponseResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The container resource requirements.
func (o AKSServiceResponseResponseOutput) ContainerResourceRequirements() ContainerResourceRequirementsResponsePtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *ContainerResourceRequirementsResponse {
		return v.ContainerResourceRequirements
	}).(ContainerResourceRequirementsResponsePtrOutput)
}

// Details of the data collection options specified.
func (o AKSServiceResponseResponseOutput) DataCollection() AKSServiceResponseResponseDataCollectionPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *AKSServiceResponseResponseDataCollection { return v.DataCollection }).(AKSServiceResponseResponseDataCollectionPtrOutput)
}

// The deployment status.
func (o AKSServiceResponseResponseOutput) DeploymentStatus() AKSServiceResponseResponseDeploymentStatusOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) AKSServiceResponseResponseDeploymentStatus {
		return v.DeploymentStatus
	}).(AKSServiceResponseResponseDeploymentStatusOutput)
}

// The deployment type for the service.
func (o AKSServiceResponseResponseOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *string { return v.DeploymentType }).(pulumi.StringPtrOutput)
}

// The service description.
func (o AKSServiceResponseResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Environment, models and assets used for inferencing.
func (o AKSServiceResponseResponseOutput) EnvironmentImageRequest() AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *AKSServiceResponseResponseEnvironmentImageRequest {
		return v.EnvironmentImageRequest
	}).(AKSServiceResponseResponseEnvironmentImageRequestPtrOutput)
}

// The error details.
func (o AKSServiceResponseResponseOutput) Error() ServiceResponseBaseResponseErrorOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) ServiceResponseBaseResponseError { return v.Error }).(ServiceResponseBaseResponseErrorOutput)
}

// Is this the default variant.
func (o AKSServiceResponseResponseOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The service tag dictionary. Tags are mutable.
func (o AKSServiceResponseResponseOutput) KvTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) map[string]string { return v.KvTags }).(pulumi.StringMapOutput)
}

// The liveness probe requirements.
func (o AKSServiceResponseResponseOutput) LivenessProbeRequirements() AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *AKSServiceResponseResponseLivenessProbeRequirements {
		return v.LivenessProbeRequirements
	}).(AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput)
}

// The maximum number of concurrent requests per container.
func (o AKSServiceResponseResponseOutput) MaxConcurrentRequestsPerContainer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *int { return v.MaxConcurrentRequestsPerContainer }).(pulumi.IntPtrOutput)
}

// Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
func (o AKSServiceResponseResponseOutput) MaxQueueWaitMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *int { return v.MaxQueueWaitMs }).(pulumi.IntPtrOutput)
}

// Details on the models and configurations.
func (o AKSServiceResponseResponseOutput) ModelConfigMap() pulumi.MapOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) map[string]interface{} { return v.ModelConfigMap }).(pulumi.MapOutput)
}

// The list of models.
func (o AKSServiceResponseResponseOutput) Models() ModelResponseArrayOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) []ModelResponse { return v.Models }).(ModelResponseArrayOutput)
}

// The Kubernetes namespace of the deployment.
func (o AKSServiceResponseResponseOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The number of replicas on the cluster.
func (o AKSServiceResponseResponseOutput) NumReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *int { return v.NumReplicas }).(pulumi.IntPtrOutput)
}

// The service property dictionary. Properties are immutable.
func (o AKSServiceResponseResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The scoring timeout in milliseconds.
func (o AKSServiceResponseResponseOutput) ScoringTimeoutMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *int { return v.ScoringTimeoutMs }).(pulumi.IntPtrOutput)
}

// The Uri for sending scoring requests.
func (o AKSServiceResponseResponseOutput) ScoringUri() pulumi.StringOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) string { return v.ScoringUri }).(pulumi.StringOutput)
}

// The current state of the service.
func (o AKSServiceResponseResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) string { return v.State }).(pulumi.StringOutput)
}

// The Uri for sending swagger requests.
func (o AKSServiceResponseResponseOutput) SwaggerUri() pulumi.StringOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) string { return v.SwaggerUri }).(pulumi.StringOutput)
}

// The amount of traffic variant receives.
func (o AKSServiceResponseResponseOutput) TrafficPercentile() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *float64 { return v.TrafficPercentile }).(pulumi.Float64PtrOutput)
}

// The type of the variant.
func (o AKSServiceResponseResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AKSServiceResponseResponseAutoScaler struct {
	// Option to enable/disable auto scaling.
	AutoscaleEnabled *bool `pulumi:"autoscaleEnabled"`
	// The maximum number of replicas in the cluster.
	MaxReplicas *int `pulumi:"maxReplicas"`
	// The minimum number of replicas to scale down to.
	MinReplicas *int `pulumi:"minReplicas"`
	// The amount of seconds to wait between auto scale updates.
	RefreshPeriodInSeconds *int `pulumi:"refreshPeriodInSeconds"`
	// The target utilization percentage to use for determining whether to scale the cluster.
	TargetUtilization *int `pulumi:"targetUtilization"`
}

// AKSServiceResponseResponseAutoScalerInput is an input type that accepts AKSServiceResponseResponseAutoScalerArgs and AKSServiceResponseResponseAutoScalerOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseAutoScalerInput` via:
//
//          AKSServiceResponseResponseAutoScalerArgs{...}
type AKSServiceResponseResponseAutoScalerInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseAutoScalerOutput() AKSServiceResponseResponseAutoScalerOutput
	ToAKSServiceResponseResponseAutoScalerOutputWithContext(context.Context) AKSServiceResponseResponseAutoScalerOutput
}

type AKSServiceResponseResponseAutoScalerArgs struct {
	// Option to enable/disable auto scaling.
	AutoscaleEnabled pulumi.BoolPtrInput `pulumi:"autoscaleEnabled"`
	// The maximum number of replicas in the cluster.
	MaxReplicas pulumi.IntPtrInput `pulumi:"maxReplicas"`
	// The minimum number of replicas to scale down to.
	MinReplicas pulumi.IntPtrInput `pulumi:"minReplicas"`
	// The amount of seconds to wait between auto scale updates.
	RefreshPeriodInSeconds pulumi.IntPtrInput `pulumi:"refreshPeriodInSeconds"`
	// The target utilization percentage to use for determining whether to scale the cluster.
	TargetUtilization pulumi.IntPtrInput `pulumi:"targetUtilization"`
}

func (AKSServiceResponseResponseAutoScalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseAutoScaler)(nil)).Elem()
}

func (i AKSServiceResponseResponseAutoScalerArgs) ToAKSServiceResponseResponseAutoScalerOutput() AKSServiceResponseResponseAutoScalerOutput {
	return i.ToAKSServiceResponseResponseAutoScalerOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseAutoScalerArgs) ToAKSServiceResponseResponseAutoScalerOutputWithContext(ctx context.Context) AKSServiceResponseResponseAutoScalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseAutoScalerOutput)
}

func (i AKSServiceResponseResponseAutoScalerArgs) ToAKSServiceResponseResponseAutoScalerPtrOutput() AKSServiceResponseResponseAutoScalerPtrOutput {
	return i.ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseAutoScalerArgs) ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseAutoScalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseAutoScalerOutput).ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(ctx)
}

// AKSServiceResponseResponseAutoScalerPtrInput is an input type that accepts AKSServiceResponseResponseAutoScalerArgs, AKSServiceResponseResponseAutoScalerPtr and AKSServiceResponseResponseAutoScalerPtrOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseAutoScalerPtrInput` via:
//
//          AKSServiceResponseResponseAutoScalerArgs{...}
//
//  or:
//
//          nil
type AKSServiceResponseResponseAutoScalerPtrInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseAutoScalerPtrOutput() AKSServiceResponseResponseAutoScalerPtrOutput
	ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(context.Context) AKSServiceResponseResponseAutoScalerPtrOutput
}

type aksserviceResponseResponseAutoScalerPtrType AKSServiceResponseResponseAutoScalerArgs

func AKSServiceResponseResponseAutoScalerPtr(v *AKSServiceResponseResponseAutoScalerArgs) AKSServiceResponseResponseAutoScalerPtrInput {
	return (*aksserviceResponseResponseAutoScalerPtrType)(v)
}

func (*aksserviceResponseResponseAutoScalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseResponseAutoScaler)(nil)).Elem()
}

func (i *aksserviceResponseResponseAutoScalerPtrType) ToAKSServiceResponseResponseAutoScalerPtrOutput() AKSServiceResponseResponseAutoScalerPtrOutput {
	return i.ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(context.Background())
}

func (i *aksserviceResponseResponseAutoScalerPtrType) ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseAutoScalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseAutoScalerPtrOutput)
}

type AKSServiceResponseResponseAutoScalerOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseAutoScalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseAutoScaler)(nil)).Elem()
}

func (o AKSServiceResponseResponseAutoScalerOutput) ToAKSServiceResponseResponseAutoScalerOutput() AKSServiceResponseResponseAutoScalerOutput {
	return o
}

func (o AKSServiceResponseResponseAutoScalerOutput) ToAKSServiceResponseResponseAutoScalerOutputWithContext(ctx context.Context) AKSServiceResponseResponseAutoScalerOutput {
	return o
}

func (o AKSServiceResponseResponseAutoScalerOutput) ToAKSServiceResponseResponseAutoScalerPtrOutput() AKSServiceResponseResponseAutoScalerPtrOutput {
	return o.ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(context.Background())
}

func (o AKSServiceResponseResponseAutoScalerOutput) ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseAutoScalerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AKSServiceResponseResponseAutoScaler) *AKSServiceResponseResponseAutoScaler {
		return &v
	}).(AKSServiceResponseResponseAutoScalerPtrOutput)
}

// Option to enable/disable auto scaling.
func (o AKSServiceResponseResponseAutoScalerOutput) AutoscaleEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseAutoScaler) *bool { return v.AutoscaleEnabled }).(pulumi.BoolPtrOutput)
}

// The maximum number of replicas in the cluster.
func (o AKSServiceResponseResponseAutoScalerOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseAutoScaler) *int { return v.MaxReplicas }).(pulumi.IntPtrOutput)
}

// The minimum number of replicas to scale down to.
func (o AKSServiceResponseResponseAutoScalerOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseAutoScaler) *int { return v.MinReplicas }).(pulumi.IntPtrOutput)
}

// The amount of seconds to wait between auto scale updates.
func (o AKSServiceResponseResponseAutoScalerOutput) RefreshPeriodInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseAutoScaler) *int { return v.RefreshPeriodInSeconds }).(pulumi.IntPtrOutput)
}

// The target utilization percentage to use for determining whether to scale the cluster.
func (o AKSServiceResponseResponseAutoScalerOutput) TargetUtilization() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseAutoScaler) *int { return v.TargetUtilization }).(pulumi.IntPtrOutput)
}

type AKSServiceResponseResponseAutoScalerPtrOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseAutoScalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseResponseAutoScaler)(nil)).Elem()
}

func (o AKSServiceResponseResponseAutoScalerPtrOutput) ToAKSServiceResponseResponseAutoScalerPtrOutput() AKSServiceResponseResponseAutoScalerPtrOutput {
	return o
}

func (o AKSServiceResponseResponseAutoScalerPtrOutput) ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseAutoScalerPtrOutput {
	return o
}

func (o AKSServiceResponseResponseAutoScalerPtrOutput) Elem() AKSServiceResponseResponseAutoScalerOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseAutoScaler) AKSServiceResponseResponseAutoScaler {
		if v != nil {
			return *v
		}
		var ret AKSServiceResponseResponseAutoScaler
		return ret
	}).(AKSServiceResponseResponseAutoScalerOutput)
}

// Option to enable/disable auto scaling.
func (o AKSServiceResponseResponseAutoScalerPtrOutput) AutoscaleEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseAutoScaler) *bool {
		if v == nil {
			return nil
		}
		return v.AutoscaleEnabled
	}).(pulumi.BoolPtrOutput)
}

// The maximum number of replicas in the cluster.
func (o AKSServiceResponseResponseAutoScalerPtrOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseAutoScaler) *int {
		if v == nil {
			return nil
		}
		return v.MaxReplicas
	}).(pulumi.IntPtrOutput)
}

// The minimum number of replicas to scale down to.
func (o AKSServiceResponseResponseAutoScalerPtrOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseAutoScaler) *int {
		if v == nil {
			return nil
		}
		return v.MinReplicas
	}).(pulumi.IntPtrOutput)
}

// The amount of seconds to wait between auto scale updates.
func (o AKSServiceResponseResponseAutoScalerPtrOutput) RefreshPeriodInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseAutoScaler) *int {
		if v == nil {
			return nil
		}
		return v.RefreshPeriodInSeconds
	}).(pulumi.IntPtrOutput)
}

// The target utilization percentage to use for determining whether to scale the cluster.
func (o AKSServiceResponseResponseAutoScalerPtrOutput) TargetUtilization() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseAutoScaler) *int {
		if v == nil {
			return nil
		}
		return v.TargetUtilization
	}).(pulumi.IntPtrOutput)
}

type AKSServiceResponseResponseDataCollection struct {
	// Option for enabling/disabling Event Hub.
	EventHubEnabled *bool `pulumi:"eventHubEnabled"`
	// Option for enabling/disabling storage.
	StorageEnabled *bool `pulumi:"storageEnabled"`
}

// AKSServiceResponseResponseDataCollectionInput is an input type that accepts AKSServiceResponseResponseDataCollectionArgs and AKSServiceResponseResponseDataCollectionOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseDataCollectionInput` via:
//
//          AKSServiceResponseResponseDataCollectionArgs{...}
type AKSServiceResponseResponseDataCollectionInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseDataCollectionOutput() AKSServiceResponseResponseDataCollectionOutput
	ToAKSServiceResponseResponseDataCollectionOutputWithContext(context.Context) AKSServiceResponseResponseDataCollectionOutput
}

type AKSServiceResponseResponseDataCollectionArgs struct {
	// Option for enabling/disabling Event Hub.
	EventHubEnabled pulumi.BoolPtrInput `pulumi:"eventHubEnabled"`
	// Option for enabling/disabling storage.
	StorageEnabled pulumi.BoolPtrInput `pulumi:"storageEnabled"`
}

func (AKSServiceResponseResponseDataCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseDataCollection)(nil)).Elem()
}

func (i AKSServiceResponseResponseDataCollectionArgs) ToAKSServiceResponseResponseDataCollectionOutput() AKSServiceResponseResponseDataCollectionOutput {
	return i.ToAKSServiceResponseResponseDataCollectionOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseDataCollectionArgs) ToAKSServiceResponseResponseDataCollectionOutputWithContext(ctx context.Context) AKSServiceResponseResponseDataCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseDataCollectionOutput)
}

func (i AKSServiceResponseResponseDataCollectionArgs) ToAKSServiceResponseResponseDataCollectionPtrOutput() AKSServiceResponseResponseDataCollectionPtrOutput {
	return i.ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseDataCollectionArgs) ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseDataCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseDataCollectionOutput).ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(ctx)
}

// AKSServiceResponseResponseDataCollectionPtrInput is an input type that accepts AKSServiceResponseResponseDataCollectionArgs, AKSServiceResponseResponseDataCollectionPtr and AKSServiceResponseResponseDataCollectionPtrOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseDataCollectionPtrInput` via:
//
//          AKSServiceResponseResponseDataCollectionArgs{...}
//
//  or:
//
//          nil
type AKSServiceResponseResponseDataCollectionPtrInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseDataCollectionPtrOutput() AKSServiceResponseResponseDataCollectionPtrOutput
	ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(context.Context) AKSServiceResponseResponseDataCollectionPtrOutput
}

type aksserviceResponseResponseDataCollectionPtrType AKSServiceResponseResponseDataCollectionArgs

func AKSServiceResponseResponseDataCollectionPtr(v *AKSServiceResponseResponseDataCollectionArgs) AKSServiceResponseResponseDataCollectionPtrInput {
	return (*aksserviceResponseResponseDataCollectionPtrType)(v)
}

func (*aksserviceResponseResponseDataCollectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseResponseDataCollection)(nil)).Elem()
}

func (i *aksserviceResponseResponseDataCollectionPtrType) ToAKSServiceResponseResponseDataCollectionPtrOutput() AKSServiceResponseResponseDataCollectionPtrOutput {
	return i.ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (i *aksserviceResponseResponseDataCollectionPtrType) ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseDataCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseDataCollectionPtrOutput)
}

type AKSServiceResponseResponseDataCollectionOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseDataCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseDataCollection)(nil)).Elem()
}

func (o AKSServiceResponseResponseDataCollectionOutput) ToAKSServiceResponseResponseDataCollectionOutput() AKSServiceResponseResponseDataCollectionOutput {
	return o
}

func (o AKSServiceResponseResponseDataCollectionOutput) ToAKSServiceResponseResponseDataCollectionOutputWithContext(ctx context.Context) AKSServiceResponseResponseDataCollectionOutput {
	return o
}

func (o AKSServiceResponseResponseDataCollectionOutput) ToAKSServiceResponseResponseDataCollectionPtrOutput() AKSServiceResponseResponseDataCollectionPtrOutput {
	return o.ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (o AKSServiceResponseResponseDataCollectionOutput) ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseDataCollectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AKSServiceResponseResponseDataCollection) *AKSServiceResponseResponseDataCollection {
		return &v
	}).(AKSServiceResponseResponseDataCollectionPtrOutput)
}

// Option for enabling/disabling Event Hub.
func (o AKSServiceResponseResponseDataCollectionOutput) EventHubEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseDataCollection) *bool { return v.EventHubEnabled }).(pulumi.BoolPtrOutput)
}

// Option for enabling/disabling storage.
func (o AKSServiceResponseResponseDataCollectionOutput) StorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseDataCollection) *bool { return v.StorageEnabled }).(pulumi.BoolPtrOutput)
}

type AKSServiceResponseResponseDataCollectionPtrOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseDataCollectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseResponseDataCollection)(nil)).Elem()
}

func (o AKSServiceResponseResponseDataCollectionPtrOutput) ToAKSServiceResponseResponseDataCollectionPtrOutput() AKSServiceResponseResponseDataCollectionPtrOutput {
	return o
}

func (o AKSServiceResponseResponseDataCollectionPtrOutput) ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseDataCollectionPtrOutput {
	return o
}

func (o AKSServiceResponseResponseDataCollectionPtrOutput) Elem() AKSServiceResponseResponseDataCollectionOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseDataCollection) AKSServiceResponseResponseDataCollection {
		if v != nil {
			return *v
		}
		var ret AKSServiceResponseResponseDataCollection
		return ret
	}).(AKSServiceResponseResponseDataCollectionOutput)
}

// Option for enabling/disabling Event Hub.
func (o AKSServiceResponseResponseDataCollectionPtrOutput) EventHubEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseDataCollection) *bool {
		if v == nil {
			return nil
		}
		return v.EventHubEnabled
	}).(pulumi.BoolPtrOutput)
}

// Option for enabling/disabling storage.
func (o AKSServiceResponseResponseDataCollectionPtrOutput) StorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseDataCollection) *bool {
		if v == nil {
			return nil
		}
		return v.StorageEnabled
	}).(pulumi.BoolPtrOutput)
}

type AKSServiceResponseResponseDeploymentStatus struct {
	// The number of available replicas.
	AvailableReplicas *int `pulumi:"availableReplicas"`
	// The desired number of replicas.
	DesiredReplicas *int `pulumi:"desiredReplicas"`
	// The error details.
	Error *AKSReplicaStatusResponseError `pulumi:"error"`
	// The number of updated replicas.
	UpdatedReplicas *int `pulumi:"updatedReplicas"`
}

// AKSServiceResponseResponseDeploymentStatusInput is an input type that accepts AKSServiceResponseResponseDeploymentStatusArgs and AKSServiceResponseResponseDeploymentStatusOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseDeploymentStatusInput` via:
//
//          AKSServiceResponseResponseDeploymentStatusArgs{...}
type AKSServiceResponseResponseDeploymentStatusInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseDeploymentStatusOutput() AKSServiceResponseResponseDeploymentStatusOutput
	ToAKSServiceResponseResponseDeploymentStatusOutputWithContext(context.Context) AKSServiceResponseResponseDeploymentStatusOutput
}

type AKSServiceResponseResponseDeploymentStatusArgs struct {
	// The number of available replicas.
	AvailableReplicas pulumi.IntPtrInput `pulumi:"availableReplicas"`
	// The desired number of replicas.
	DesiredReplicas pulumi.IntPtrInput `pulumi:"desiredReplicas"`
	// The error details.
	Error AKSReplicaStatusResponseErrorPtrInput `pulumi:"error"`
	// The number of updated replicas.
	UpdatedReplicas pulumi.IntPtrInput `pulumi:"updatedReplicas"`
}

func (AKSServiceResponseResponseDeploymentStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseDeploymentStatus)(nil)).Elem()
}

func (i AKSServiceResponseResponseDeploymentStatusArgs) ToAKSServiceResponseResponseDeploymentStatusOutput() AKSServiceResponseResponseDeploymentStatusOutput {
	return i.ToAKSServiceResponseResponseDeploymentStatusOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseDeploymentStatusArgs) ToAKSServiceResponseResponseDeploymentStatusOutputWithContext(ctx context.Context) AKSServiceResponseResponseDeploymentStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseDeploymentStatusOutput)
}

type AKSServiceResponseResponseDeploymentStatusOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseDeploymentStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseDeploymentStatus)(nil)).Elem()
}

func (o AKSServiceResponseResponseDeploymentStatusOutput) ToAKSServiceResponseResponseDeploymentStatusOutput() AKSServiceResponseResponseDeploymentStatusOutput {
	return o
}

func (o AKSServiceResponseResponseDeploymentStatusOutput) ToAKSServiceResponseResponseDeploymentStatusOutputWithContext(ctx context.Context) AKSServiceResponseResponseDeploymentStatusOutput {
	return o
}

// The number of available replicas.
func (o AKSServiceResponseResponseDeploymentStatusOutput) AvailableReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseDeploymentStatus) *int { return v.AvailableReplicas }).(pulumi.IntPtrOutput)
}

// The desired number of replicas.
func (o AKSServiceResponseResponseDeploymentStatusOutput) DesiredReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseDeploymentStatus) *int { return v.DesiredReplicas }).(pulumi.IntPtrOutput)
}

// The error details.
func (o AKSServiceResponseResponseDeploymentStatusOutput) Error() AKSReplicaStatusResponseErrorPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseDeploymentStatus) *AKSReplicaStatusResponseError { return v.Error }).(AKSReplicaStatusResponseErrorPtrOutput)
}

// The number of updated replicas.
func (o AKSServiceResponseResponseDeploymentStatusOutput) UpdatedReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseDeploymentStatus) *int { return v.UpdatedReplicas }).(pulumi.IntPtrOutput)
}

type AKSServiceResponseResponseEnvironmentImageRequest struct {
	// The list of assets.
	Assets []ImageAssetResponse `pulumi:"assets"`
	// The name of the driver file.
	DriverProgram *string `pulumi:"driverProgram"`
	// The details of the AZURE ML environment.
	Environment *EnvironmentImageResponseResponseEnvironment `pulumi:"environment"`
	// The unique identifying details of the AZURE ML environment.
	EnvironmentReference *EnvironmentImageResponseResponseEnvironmentReference `pulumi:"environmentReference"`
	// The list of model Ids.
	ModelIds []string `pulumi:"modelIds"`
	// The list of models.
	Models []ModelResponse `pulumi:"models"`
}

// AKSServiceResponseResponseEnvironmentImageRequestInput is an input type that accepts AKSServiceResponseResponseEnvironmentImageRequestArgs and AKSServiceResponseResponseEnvironmentImageRequestOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseEnvironmentImageRequestInput` via:
//
//          AKSServiceResponseResponseEnvironmentImageRequestArgs{...}
type AKSServiceResponseResponseEnvironmentImageRequestInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseEnvironmentImageRequestOutput() AKSServiceResponseResponseEnvironmentImageRequestOutput
	ToAKSServiceResponseResponseEnvironmentImageRequestOutputWithContext(context.Context) AKSServiceResponseResponseEnvironmentImageRequestOutput
}

type AKSServiceResponseResponseEnvironmentImageRequestArgs struct {
	// The list of assets.
	Assets ImageAssetResponseArrayInput `pulumi:"assets"`
	// The name of the driver file.
	DriverProgram pulumi.StringPtrInput `pulumi:"driverProgram"`
	// The details of the AZURE ML environment.
	Environment EnvironmentImageResponseResponseEnvironmentPtrInput `pulumi:"environment"`
	// The unique identifying details of the AZURE ML environment.
	EnvironmentReference EnvironmentImageResponseResponseEnvironmentReferencePtrInput `pulumi:"environmentReference"`
	// The list of model Ids.
	ModelIds pulumi.StringArrayInput `pulumi:"modelIds"`
	// The list of models.
	Models ModelResponseArrayInput `pulumi:"models"`
}

func (AKSServiceResponseResponseEnvironmentImageRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseEnvironmentImageRequest)(nil)).Elem()
}

func (i AKSServiceResponseResponseEnvironmentImageRequestArgs) ToAKSServiceResponseResponseEnvironmentImageRequestOutput() AKSServiceResponseResponseEnvironmentImageRequestOutput {
	return i.ToAKSServiceResponseResponseEnvironmentImageRequestOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseEnvironmentImageRequestArgs) ToAKSServiceResponseResponseEnvironmentImageRequestOutputWithContext(ctx context.Context) AKSServiceResponseResponseEnvironmentImageRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseEnvironmentImageRequestOutput)
}

func (i AKSServiceResponseResponseEnvironmentImageRequestArgs) ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutput() AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return i.ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseEnvironmentImageRequestArgs) ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseEnvironmentImageRequestOutput).ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx)
}

// AKSServiceResponseResponseEnvironmentImageRequestPtrInput is an input type that accepts AKSServiceResponseResponseEnvironmentImageRequestArgs, AKSServiceResponseResponseEnvironmentImageRequestPtr and AKSServiceResponseResponseEnvironmentImageRequestPtrOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseEnvironmentImageRequestPtrInput` via:
//
//          AKSServiceResponseResponseEnvironmentImageRequestArgs{...}
//
//  or:
//
//          nil
type AKSServiceResponseResponseEnvironmentImageRequestPtrInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutput() AKSServiceResponseResponseEnvironmentImageRequestPtrOutput
	ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(context.Context) AKSServiceResponseResponseEnvironmentImageRequestPtrOutput
}

type aksserviceResponseResponseEnvironmentImageRequestPtrType AKSServiceResponseResponseEnvironmentImageRequestArgs

func AKSServiceResponseResponseEnvironmentImageRequestPtr(v *AKSServiceResponseResponseEnvironmentImageRequestArgs) AKSServiceResponseResponseEnvironmentImageRequestPtrInput {
	return (*aksserviceResponseResponseEnvironmentImageRequestPtrType)(v)
}

func (*aksserviceResponseResponseEnvironmentImageRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseResponseEnvironmentImageRequest)(nil)).Elem()
}

func (i *aksserviceResponseResponseEnvironmentImageRequestPtrType) ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutput() AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return i.ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (i *aksserviceResponseResponseEnvironmentImageRequestPtrType) ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseEnvironmentImageRequestPtrOutput)
}

type AKSServiceResponseResponseEnvironmentImageRequestOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseEnvironmentImageRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseEnvironmentImageRequest)(nil)).Elem()
}

func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) ToAKSServiceResponseResponseEnvironmentImageRequestOutput() AKSServiceResponseResponseEnvironmentImageRequestOutput {
	return o
}

func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) ToAKSServiceResponseResponseEnvironmentImageRequestOutputWithContext(ctx context.Context) AKSServiceResponseResponseEnvironmentImageRequestOutput {
	return o
}

func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutput() AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o.ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AKSServiceResponseResponseEnvironmentImageRequest) *AKSServiceResponseResponseEnvironmentImageRequest {
		return &v
	}).(AKSServiceResponseResponseEnvironmentImageRequestPtrOutput)
}

// The list of assets.
func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) Assets() ImageAssetResponseArrayOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseEnvironmentImageRequest) []ImageAssetResponse { return v.Assets }).(ImageAssetResponseArrayOutput)
}

// The name of the driver file.
func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) DriverProgram() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseEnvironmentImageRequest) *string { return v.DriverProgram }).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) Environment() EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseEnvironmentImageRequest) *EnvironmentImageResponseResponseEnvironment {
		return v.Environment
	}).(EnvironmentImageResponseResponseEnvironmentPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) EnvironmentReference() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseEnvironmentImageRequest) *EnvironmentImageResponseResponseEnvironmentReference {
		return v.EnvironmentReference
	}).(EnvironmentImageResponseResponseEnvironmentReferencePtrOutput)
}

// The list of model Ids.
func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) ModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseEnvironmentImageRequest) []string { return v.ModelIds }).(pulumi.StringArrayOutput)
}

// The list of models.
func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) Models() ModelResponseArrayOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseEnvironmentImageRequest) []ModelResponse { return v.Models }).(ModelResponseArrayOutput)
}

type AKSServiceResponseResponseEnvironmentImageRequestPtrOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseResponseEnvironmentImageRequest)(nil)).Elem()
}

func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutput() AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o
}

func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o
}

func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) Elem() AKSServiceResponseResponseEnvironmentImageRequestOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseEnvironmentImageRequest) AKSServiceResponseResponseEnvironmentImageRequest {
		if v != nil {
			return *v
		}
		var ret AKSServiceResponseResponseEnvironmentImageRequest
		return ret
	}).(AKSServiceResponseResponseEnvironmentImageRequestOutput)
}

// The list of assets.
func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) Assets() ImageAssetResponseArrayOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseEnvironmentImageRequest) []ImageAssetResponse {
		if v == nil {
			return nil
		}
		return v.Assets
	}).(ImageAssetResponseArrayOutput)
}

// The name of the driver file.
func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) DriverProgram() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseEnvironmentImageRequest) *string {
		if v == nil {
			return nil
		}
		return v.DriverProgram
	}).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) Environment() EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseEnvironmentImageRequest) *EnvironmentImageResponseResponseEnvironment {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(EnvironmentImageResponseResponseEnvironmentPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) EnvironmentReference() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseEnvironmentImageRequest) *EnvironmentImageResponseResponseEnvironmentReference {
		if v == nil {
			return nil
		}
		return v.EnvironmentReference
	}).(EnvironmentImageResponseResponseEnvironmentReferencePtrOutput)
}

// The list of model Ids.
func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) ModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseEnvironmentImageRequest) []string {
		if v == nil {
			return nil
		}
		return v.ModelIds
	}).(pulumi.StringArrayOutput)
}

// The list of models.
func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) Models() ModelResponseArrayOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseEnvironmentImageRequest) []ModelResponse {
		if v == nil {
			return nil
		}
		return v.Models
	}).(ModelResponseArrayOutput)
}

type AKSServiceResponseResponseLivenessProbeRequirements struct {
	// The number of failures to allow before returning an unhealthy status.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The delay before the first probe in seconds.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// The length of time between probes in seconds.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// The number of successful probes before returning a healthy status.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// The probe timeout in seconds.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// AKSServiceResponseResponseLivenessProbeRequirementsInput is an input type that accepts AKSServiceResponseResponseLivenessProbeRequirementsArgs and AKSServiceResponseResponseLivenessProbeRequirementsOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseLivenessProbeRequirementsInput` via:
//
//          AKSServiceResponseResponseLivenessProbeRequirementsArgs{...}
type AKSServiceResponseResponseLivenessProbeRequirementsInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseLivenessProbeRequirementsOutput() AKSServiceResponseResponseLivenessProbeRequirementsOutput
	ToAKSServiceResponseResponseLivenessProbeRequirementsOutputWithContext(context.Context) AKSServiceResponseResponseLivenessProbeRequirementsOutput
}

type AKSServiceResponseResponseLivenessProbeRequirementsArgs struct {
	// The number of failures to allow before returning an unhealthy status.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The delay before the first probe in seconds.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// The length of time between probes in seconds.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// The number of successful probes before returning a healthy status.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// The probe timeout in seconds.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (AKSServiceResponseResponseLivenessProbeRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseLivenessProbeRequirements)(nil)).Elem()
}

func (i AKSServiceResponseResponseLivenessProbeRequirementsArgs) ToAKSServiceResponseResponseLivenessProbeRequirementsOutput() AKSServiceResponseResponseLivenessProbeRequirementsOutput {
	return i.ToAKSServiceResponseResponseLivenessProbeRequirementsOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseLivenessProbeRequirementsArgs) ToAKSServiceResponseResponseLivenessProbeRequirementsOutputWithContext(ctx context.Context) AKSServiceResponseResponseLivenessProbeRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseLivenessProbeRequirementsOutput)
}

func (i AKSServiceResponseResponseLivenessProbeRequirementsArgs) ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutput() AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return i.ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseLivenessProbeRequirementsArgs) ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseLivenessProbeRequirementsOutput).ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(ctx)
}

// AKSServiceResponseResponseLivenessProbeRequirementsPtrInput is an input type that accepts AKSServiceResponseResponseLivenessProbeRequirementsArgs, AKSServiceResponseResponseLivenessProbeRequirementsPtr and AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseLivenessProbeRequirementsPtrInput` via:
//
//          AKSServiceResponseResponseLivenessProbeRequirementsArgs{...}
//
//  or:
//
//          nil
type AKSServiceResponseResponseLivenessProbeRequirementsPtrInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutput() AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput
	ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(context.Context) AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput
}

type aksserviceResponseResponseLivenessProbeRequirementsPtrType AKSServiceResponseResponseLivenessProbeRequirementsArgs

func AKSServiceResponseResponseLivenessProbeRequirementsPtr(v *AKSServiceResponseResponseLivenessProbeRequirementsArgs) AKSServiceResponseResponseLivenessProbeRequirementsPtrInput {
	return (*aksserviceResponseResponseLivenessProbeRequirementsPtrType)(v)
}

func (*aksserviceResponseResponseLivenessProbeRequirementsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseResponseLivenessProbeRequirements)(nil)).Elem()
}

func (i *aksserviceResponseResponseLivenessProbeRequirementsPtrType) ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutput() AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return i.ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(context.Background())
}

func (i *aksserviceResponseResponseLivenessProbeRequirementsPtrType) ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput)
}

type AKSServiceResponseResponseLivenessProbeRequirementsOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseLivenessProbeRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseLivenessProbeRequirements)(nil)).Elem()
}

func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) ToAKSServiceResponseResponseLivenessProbeRequirementsOutput() AKSServiceResponseResponseLivenessProbeRequirementsOutput {
	return o
}

func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) ToAKSServiceResponseResponseLivenessProbeRequirementsOutputWithContext(ctx context.Context) AKSServiceResponseResponseLivenessProbeRequirementsOutput {
	return o
}

func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutput() AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return o.ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(context.Background())
}

func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AKSServiceResponseResponseLivenessProbeRequirements) *AKSServiceResponseResponseLivenessProbeRequirements {
		return &v
	}).(AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput)
}

// The number of failures to allow before returning an unhealthy status.
func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseLivenessProbeRequirements) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The delay before the first probe in seconds.
func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseLivenessProbeRequirements) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// The length of time between probes in seconds.
func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseLivenessProbeRequirements) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// The number of successful probes before returning a healthy status.
func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseLivenessProbeRequirements) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// The probe timeout in seconds.
func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseLivenessProbeRequirements) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseResponseLivenessProbeRequirements)(nil)).Elem()
}

func (o AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutput() AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return o
}

func (o AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return o
}

func (o AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) Elem() AKSServiceResponseResponseLivenessProbeRequirementsOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseLivenessProbeRequirements) AKSServiceResponseResponseLivenessProbeRequirements {
		if v != nil {
			return *v
		}
		var ret AKSServiceResponseResponseLivenessProbeRequirements
		return ret
	}).(AKSServiceResponseResponseLivenessProbeRequirementsOutput)
}

// The number of failures to allow before returning an unhealthy status.
func (o AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The delay before the first probe in seconds.
func (o AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// The length of time between probes in seconds.
func (o AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// The number of successful probes before returning a healthy status.
func (o AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// The probe timeout in seconds.
func (o AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type AKSVariantResponseResponse struct {
	// The compute environment type for the service.
	// Expected value is 'Custom'.
	ComputeType string `pulumi:"computeType"`
	// The deployment type for the service.
	DeploymentType *string `pulumi:"deploymentType"`
	// The service description.
	Description *string `pulumi:"description"`
	// The error details.
	Error ServiceResponseBaseResponseError `pulumi:"error"`
	// Is this the default variant.
	IsDefault *bool `pulumi:"isDefault"`
	// The service tag dictionary. Tags are mutable.
	KvTags map[string]string `pulumi:"kvTags"`
	// The service property dictionary. Properties are immutable.
	Properties map[string]string `pulumi:"properties"`
	// The current state of the service.
	State string `pulumi:"state"`
	// The amount of traffic variant receives.
	TrafficPercentile *float64 `pulumi:"trafficPercentile"`
	// The type of the variant.
	Type *string `pulumi:"type"`
}

// AKSVariantResponseResponseInput is an input type that accepts AKSVariantResponseResponseArgs and AKSVariantResponseResponseOutput values.
// You can construct a concrete instance of `AKSVariantResponseResponseInput` via:
//
//          AKSVariantResponseResponseArgs{...}
type AKSVariantResponseResponseInput interface {
	pulumi.Input

	ToAKSVariantResponseResponseOutput() AKSVariantResponseResponseOutput
	ToAKSVariantResponseResponseOutputWithContext(context.Context) AKSVariantResponseResponseOutput
}

type AKSVariantResponseResponseArgs struct {
	// The compute environment type for the service.
	// Expected value is 'Custom'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The deployment type for the service.
	DeploymentType pulumi.StringPtrInput `pulumi:"deploymentType"`
	// The service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The error details.
	Error ServiceResponseBaseResponseErrorInput `pulumi:"error"`
	// Is this the default variant.
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// The service tag dictionary. Tags are mutable.
	KvTags pulumi.StringMapInput `pulumi:"kvTags"`
	// The service property dictionary. Properties are immutable.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The current state of the service.
	State pulumi.StringInput `pulumi:"state"`
	// The amount of traffic variant receives.
	TrafficPercentile pulumi.Float64PtrInput `pulumi:"trafficPercentile"`
	// The type of the variant.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AKSVariantResponseResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSVariantResponseResponse)(nil)).Elem()
}

func (i AKSVariantResponseResponseArgs) ToAKSVariantResponseResponseOutput() AKSVariantResponseResponseOutput {
	return i.ToAKSVariantResponseResponseOutputWithContext(context.Background())
}

func (i AKSVariantResponseResponseArgs) ToAKSVariantResponseResponseOutputWithContext(ctx context.Context) AKSVariantResponseResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSVariantResponseResponseOutput)
}

type AKSVariantResponseResponseOutput struct{ *pulumi.OutputState }

func (AKSVariantResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSVariantResponseResponse)(nil)).Elem()
}

func (o AKSVariantResponseResponseOutput) ToAKSVariantResponseResponseOutput() AKSVariantResponseResponseOutput {
	return o
}

func (o AKSVariantResponseResponseOutput) ToAKSVariantResponseResponseOutputWithContext(ctx context.Context) AKSVariantResponseResponseOutput {
	return o
}

// The compute environment type for the service.
// Expected value is 'Custom'.
func (o AKSVariantResponseResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The deployment type for the service.
func (o AKSVariantResponseResponseOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) *string { return v.DeploymentType }).(pulumi.StringPtrOutput)
}

// The service description.
func (o AKSVariantResponseResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The error details.
func (o AKSVariantResponseResponseOutput) Error() ServiceResponseBaseResponseErrorOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) ServiceResponseBaseResponseError { return v.Error }).(ServiceResponseBaseResponseErrorOutput)
}

// Is this the default variant.
func (o AKSVariantResponseResponseOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The service tag dictionary. Tags are mutable.
func (o AKSVariantResponseResponseOutput) KvTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) map[string]string { return v.KvTags }).(pulumi.StringMapOutput)
}

// The service property dictionary. Properties are immutable.
func (o AKSVariantResponseResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The current state of the service.
func (o AKSVariantResponseResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) string { return v.State }).(pulumi.StringOutput)
}

// The amount of traffic variant receives.
func (o AKSVariantResponseResponseOutput) TrafficPercentile() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) *float64 { return v.TrafficPercentile }).(pulumi.Float64PtrOutput)
}

// The type of the variant.
func (o AKSVariantResponseResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AksNetworkingConfiguration struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP *string `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr *string `pulumi:"dockerBridgeCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr *string `pulumi:"serviceCidr"`
	// Virtual network subnet resource ID the compute nodes belong to
	SubnetId *string `pulumi:"subnetId"`
}

// AksNetworkingConfigurationInput is an input type that accepts AksNetworkingConfigurationArgs and AksNetworkingConfigurationOutput values.
// You can construct a concrete instance of `AksNetworkingConfigurationInput` via:
//
//          AksNetworkingConfigurationArgs{...}
type AksNetworkingConfigurationInput interface {
	pulumi.Input

	ToAksNetworkingConfigurationOutput() AksNetworkingConfigurationOutput
	ToAksNetworkingConfigurationOutputWithContext(context.Context) AksNetworkingConfigurationOutput
}

type AksNetworkingConfigurationArgs struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP pulumi.StringPtrInput `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr pulumi.StringPtrInput `pulumi:"dockerBridgeCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr pulumi.StringPtrInput `pulumi:"serviceCidr"`
	// Virtual network subnet resource ID the compute nodes belong to
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (AksNetworkingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AksNetworkingConfiguration)(nil)).Elem()
}

func (i AksNetworkingConfigurationArgs) ToAksNetworkingConfigurationOutput() AksNetworkingConfigurationOutput {
	return i.ToAksNetworkingConfigurationOutputWithContext(context.Background())
}

func (i AksNetworkingConfigurationArgs) ToAksNetworkingConfigurationOutputWithContext(ctx context.Context) AksNetworkingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationOutput)
}

func (i AksNetworkingConfigurationArgs) ToAksNetworkingConfigurationPtrOutput() AksNetworkingConfigurationPtrOutput {
	return i.ToAksNetworkingConfigurationPtrOutputWithContext(context.Background())
}

func (i AksNetworkingConfigurationArgs) ToAksNetworkingConfigurationPtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationOutput).ToAksNetworkingConfigurationPtrOutputWithContext(ctx)
}

// AksNetworkingConfigurationPtrInput is an input type that accepts AksNetworkingConfigurationArgs, AksNetworkingConfigurationPtr and AksNetworkingConfigurationPtrOutput values.
// You can construct a concrete instance of `AksNetworkingConfigurationPtrInput` via:
//
//          AksNetworkingConfigurationArgs{...}
//
//  or:
//
//          nil
type AksNetworkingConfigurationPtrInput interface {
	pulumi.Input

	ToAksNetworkingConfigurationPtrOutput() AksNetworkingConfigurationPtrOutput
	ToAksNetworkingConfigurationPtrOutputWithContext(context.Context) AksNetworkingConfigurationPtrOutput
}

type aksNetworkingConfigurationPtrType AksNetworkingConfigurationArgs

func AksNetworkingConfigurationPtr(v *AksNetworkingConfigurationArgs) AksNetworkingConfigurationPtrInput {
	return (*aksNetworkingConfigurationPtrType)(v)
}

func (*aksNetworkingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AksNetworkingConfiguration)(nil)).Elem()
}

func (i *aksNetworkingConfigurationPtrType) ToAksNetworkingConfigurationPtrOutput() AksNetworkingConfigurationPtrOutput {
	return i.ToAksNetworkingConfigurationPtrOutputWithContext(context.Background())
}

func (i *aksNetworkingConfigurationPtrType) ToAksNetworkingConfigurationPtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationPtrOutput)
}

type AksNetworkingConfigurationOutput struct{ *pulumi.OutputState }

func (AksNetworkingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AksNetworkingConfiguration)(nil)).Elem()
}

func (o AksNetworkingConfigurationOutput) ToAksNetworkingConfigurationOutput() AksNetworkingConfigurationOutput {
	return o
}

func (o AksNetworkingConfigurationOutput) ToAksNetworkingConfigurationOutputWithContext(ctx context.Context) AksNetworkingConfigurationOutput {
	return o
}

func (o AksNetworkingConfigurationOutput) ToAksNetworkingConfigurationPtrOutput() AksNetworkingConfigurationPtrOutput {
	return o.ToAksNetworkingConfigurationPtrOutputWithContext(context.Background())
}

func (o AksNetworkingConfigurationOutput) ToAksNetworkingConfigurationPtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AksNetworkingConfiguration) *AksNetworkingConfiguration {
		return &v
	}).(AksNetworkingConfigurationPtrOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o AksNetworkingConfigurationOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfiguration) *string { return v.DnsServiceIP }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o AksNetworkingConfigurationOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfiguration) *string { return v.DockerBridgeCidr }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o AksNetworkingConfigurationOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfiguration) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to
func (o AksNetworkingConfigurationOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfiguration) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type AksNetworkingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AksNetworkingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AksNetworkingConfiguration)(nil)).Elem()
}

func (o AksNetworkingConfigurationPtrOutput) ToAksNetworkingConfigurationPtrOutput() AksNetworkingConfigurationPtrOutput {
	return o
}

func (o AksNetworkingConfigurationPtrOutput) ToAksNetworkingConfigurationPtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationPtrOutput {
	return o
}

func (o AksNetworkingConfigurationPtrOutput) Elem() AksNetworkingConfigurationOutput {
	return o.ApplyT(func(v *AksNetworkingConfiguration) AksNetworkingConfiguration {
		if v != nil {
			return *v
		}
		var ret AksNetworkingConfiguration
		return ret
	}).(AksNetworkingConfigurationOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o AksNetworkingConfigurationPtrOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DnsServiceIP
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o AksNetworkingConfigurationPtrOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DockerBridgeCidr
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o AksNetworkingConfigurationPtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to
func (o AksNetworkingConfigurationPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

type AksNetworkingConfigurationResponse struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP *string `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr *string `pulumi:"dockerBridgeCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr *string `pulumi:"serviceCidr"`
	// Virtual network subnet resource ID the compute nodes belong to
	SubnetId *string `pulumi:"subnetId"`
}

// AksNetworkingConfigurationResponseInput is an input type that accepts AksNetworkingConfigurationResponseArgs and AksNetworkingConfigurationResponseOutput values.
// You can construct a concrete instance of `AksNetworkingConfigurationResponseInput` via:
//
//          AksNetworkingConfigurationResponseArgs{...}
type AksNetworkingConfigurationResponseInput interface {
	pulumi.Input

	ToAksNetworkingConfigurationResponseOutput() AksNetworkingConfigurationResponseOutput
	ToAksNetworkingConfigurationResponseOutputWithContext(context.Context) AksNetworkingConfigurationResponseOutput
}

type AksNetworkingConfigurationResponseArgs struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP pulumi.StringPtrInput `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr pulumi.StringPtrInput `pulumi:"dockerBridgeCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr pulumi.StringPtrInput `pulumi:"serviceCidr"`
	// Virtual network subnet resource ID the compute nodes belong to
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (AksNetworkingConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AksNetworkingConfigurationResponse)(nil)).Elem()
}

func (i AksNetworkingConfigurationResponseArgs) ToAksNetworkingConfigurationResponseOutput() AksNetworkingConfigurationResponseOutput {
	return i.ToAksNetworkingConfigurationResponseOutputWithContext(context.Background())
}

func (i AksNetworkingConfigurationResponseArgs) ToAksNetworkingConfigurationResponseOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationResponseOutput)
}

func (i AksNetworkingConfigurationResponseArgs) ToAksNetworkingConfigurationResponsePtrOutput() AksNetworkingConfigurationResponsePtrOutput {
	return i.ToAksNetworkingConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i AksNetworkingConfigurationResponseArgs) ToAksNetworkingConfigurationResponsePtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationResponseOutput).ToAksNetworkingConfigurationResponsePtrOutputWithContext(ctx)
}

// AksNetworkingConfigurationResponsePtrInput is an input type that accepts AksNetworkingConfigurationResponseArgs, AksNetworkingConfigurationResponsePtr and AksNetworkingConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `AksNetworkingConfigurationResponsePtrInput` via:
//
//          AksNetworkingConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type AksNetworkingConfigurationResponsePtrInput interface {
	pulumi.Input

	ToAksNetworkingConfigurationResponsePtrOutput() AksNetworkingConfigurationResponsePtrOutput
	ToAksNetworkingConfigurationResponsePtrOutputWithContext(context.Context) AksNetworkingConfigurationResponsePtrOutput
}

type aksNetworkingConfigurationResponsePtrType AksNetworkingConfigurationResponseArgs

func AksNetworkingConfigurationResponsePtr(v *AksNetworkingConfigurationResponseArgs) AksNetworkingConfigurationResponsePtrInput {
	return (*aksNetworkingConfigurationResponsePtrType)(v)
}

func (*aksNetworkingConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AksNetworkingConfigurationResponse)(nil)).Elem()
}

func (i *aksNetworkingConfigurationResponsePtrType) ToAksNetworkingConfigurationResponsePtrOutput() AksNetworkingConfigurationResponsePtrOutput {
	return i.ToAksNetworkingConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *aksNetworkingConfigurationResponsePtrType) ToAksNetworkingConfigurationResponsePtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationResponsePtrOutput)
}

type AksNetworkingConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AksNetworkingConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AksNetworkingConfigurationResponse)(nil)).Elem()
}

func (o AksNetworkingConfigurationResponseOutput) ToAksNetworkingConfigurationResponseOutput() AksNetworkingConfigurationResponseOutput {
	return o
}

func (o AksNetworkingConfigurationResponseOutput) ToAksNetworkingConfigurationResponseOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponseOutput {
	return o
}

func (o AksNetworkingConfigurationResponseOutput) ToAksNetworkingConfigurationResponsePtrOutput() AksNetworkingConfigurationResponsePtrOutput {
	return o.ToAksNetworkingConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o AksNetworkingConfigurationResponseOutput) ToAksNetworkingConfigurationResponsePtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AksNetworkingConfigurationResponse) *AksNetworkingConfigurationResponse {
		return &v
	}).(AksNetworkingConfigurationResponsePtrOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o AksNetworkingConfigurationResponseOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationResponse) *string { return v.DnsServiceIP }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o AksNetworkingConfigurationResponseOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationResponse) *string { return v.DockerBridgeCidr }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o AksNetworkingConfigurationResponseOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationResponse) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to
func (o AksNetworkingConfigurationResponseOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationResponse) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type AksNetworkingConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (AksNetworkingConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AksNetworkingConfigurationResponse)(nil)).Elem()
}

func (o AksNetworkingConfigurationResponsePtrOutput) ToAksNetworkingConfigurationResponsePtrOutput() AksNetworkingConfigurationResponsePtrOutput {
	return o
}

func (o AksNetworkingConfigurationResponsePtrOutput) ToAksNetworkingConfigurationResponsePtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponsePtrOutput {
	return o
}

func (o AksNetworkingConfigurationResponsePtrOutput) Elem() AksNetworkingConfigurationResponseOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationResponse) AksNetworkingConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret AksNetworkingConfigurationResponse
		return ret
	}).(AksNetworkingConfigurationResponseOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o AksNetworkingConfigurationResponsePtrOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.DnsServiceIP
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o AksNetworkingConfigurationResponsePtrOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.DockerBridgeCidr
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o AksNetworkingConfigurationResponsePtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to
func (o AksNetworkingConfigurationResponsePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

type AmlCompute struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AmlCompute'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// AML Compute properties
	Properties *AmlComputeProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// AmlComputeInput is an input type that accepts AmlComputeArgs and AmlComputeOutput values.
// You can construct a concrete instance of `AmlComputeInput` via:
//
//          AmlComputeArgs{...}
type AmlComputeInput interface {
	pulumi.Input

	ToAmlComputeOutput() AmlComputeOutput
	ToAmlComputeOutputWithContext(context.Context) AmlComputeOutput
}

type AmlComputeArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AmlCompute'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// AML Compute properties
	Properties AmlComputePropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (AmlComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlCompute)(nil)).Elem()
}

func (i AmlComputeArgs) ToAmlComputeOutput() AmlComputeOutput {
	return i.ToAmlComputeOutputWithContext(context.Background())
}

func (i AmlComputeArgs) ToAmlComputeOutputWithContext(ctx context.Context) AmlComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeOutput)
}

type AmlComputeOutput struct{ *pulumi.OutputState }

func (AmlComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlCompute)(nil)).Elem()
}

func (o AmlComputeOutput) ToAmlComputeOutput() AmlComputeOutput {
	return o
}

func (o AmlComputeOutput) ToAmlComputeOutputWithContext(ctx context.Context) AmlComputeOutput {
	return o
}

// Location for the underlying compute
func (o AmlComputeOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlCompute) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'AmlCompute'.
func (o AmlComputeOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AmlCompute) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o AmlComputeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlCompute) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// AML Compute properties
func (o AmlComputeOutput) Properties() AmlComputePropertiesPtrOutput {
	return o.ApplyT(func(v AmlCompute) *AmlComputeProperties { return v.Properties }).(AmlComputePropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o AmlComputeOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlCompute) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type AmlComputeNodeInformationResponse struct {
	// ID of the compute node.
	NodeId string `pulumi:"nodeId"`
	// State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted.
	NodeState string `pulumi:"nodeState"`
	// SSH port number of the node.
	Port float64 `pulumi:"port"`
	// Private IP address of the compute node.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// Public IP address of the compute node.
	PublicIpAddress string `pulumi:"publicIpAddress"`
	// ID of the Experiment running on the node, if any else null.
	RunId string `pulumi:"runId"`
}

// AmlComputeNodeInformationResponseInput is an input type that accepts AmlComputeNodeInformationResponseArgs and AmlComputeNodeInformationResponseOutput values.
// You can construct a concrete instance of `AmlComputeNodeInformationResponseInput` via:
//
//          AmlComputeNodeInformationResponseArgs{...}
type AmlComputeNodeInformationResponseInput interface {
	pulumi.Input

	ToAmlComputeNodeInformationResponseOutput() AmlComputeNodeInformationResponseOutput
	ToAmlComputeNodeInformationResponseOutputWithContext(context.Context) AmlComputeNodeInformationResponseOutput
}

type AmlComputeNodeInformationResponseArgs struct {
	// ID of the compute node.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted.
	NodeState pulumi.StringInput `pulumi:"nodeState"`
	// SSH port number of the node.
	Port pulumi.Float64Input `pulumi:"port"`
	// Private IP address of the compute node.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// Public IP address of the compute node.
	PublicIpAddress pulumi.StringInput `pulumi:"publicIpAddress"`
	// ID of the Experiment running on the node, if any else null.
	RunId pulumi.StringInput `pulumi:"runId"`
}

func (AmlComputeNodeInformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeNodeInformationResponse)(nil)).Elem()
}

func (i AmlComputeNodeInformationResponseArgs) ToAmlComputeNodeInformationResponseOutput() AmlComputeNodeInformationResponseOutput {
	return i.ToAmlComputeNodeInformationResponseOutputWithContext(context.Background())
}

func (i AmlComputeNodeInformationResponseArgs) ToAmlComputeNodeInformationResponseOutputWithContext(ctx context.Context) AmlComputeNodeInformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeNodeInformationResponseOutput)
}

// AmlComputeNodeInformationResponseArrayInput is an input type that accepts AmlComputeNodeInformationResponseArray and AmlComputeNodeInformationResponseArrayOutput values.
// You can construct a concrete instance of `AmlComputeNodeInformationResponseArrayInput` via:
//
//          AmlComputeNodeInformationResponseArray{ AmlComputeNodeInformationResponseArgs{...} }
type AmlComputeNodeInformationResponseArrayInput interface {
	pulumi.Input

	ToAmlComputeNodeInformationResponseArrayOutput() AmlComputeNodeInformationResponseArrayOutput
	ToAmlComputeNodeInformationResponseArrayOutputWithContext(context.Context) AmlComputeNodeInformationResponseArrayOutput
}

type AmlComputeNodeInformationResponseArray []AmlComputeNodeInformationResponseInput

func (AmlComputeNodeInformationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmlComputeNodeInformationResponse)(nil)).Elem()
}

func (i AmlComputeNodeInformationResponseArray) ToAmlComputeNodeInformationResponseArrayOutput() AmlComputeNodeInformationResponseArrayOutput {
	return i.ToAmlComputeNodeInformationResponseArrayOutputWithContext(context.Background())
}

func (i AmlComputeNodeInformationResponseArray) ToAmlComputeNodeInformationResponseArrayOutputWithContext(ctx context.Context) AmlComputeNodeInformationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeNodeInformationResponseArrayOutput)
}

type AmlComputeNodeInformationResponseOutput struct{ *pulumi.OutputState }

func (AmlComputeNodeInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeNodeInformationResponse)(nil)).Elem()
}

func (o AmlComputeNodeInformationResponseOutput) ToAmlComputeNodeInformationResponseOutput() AmlComputeNodeInformationResponseOutput {
	return o
}

func (o AmlComputeNodeInformationResponseOutput) ToAmlComputeNodeInformationResponseOutputWithContext(ctx context.Context) AmlComputeNodeInformationResponseOutput {
	return o
}

// ID of the compute node.
func (o AmlComputeNodeInformationResponseOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeNodeInformationResponse) string { return v.NodeId }).(pulumi.StringOutput)
}

// State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted.
func (o AmlComputeNodeInformationResponseOutput) NodeState() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeNodeInformationResponse) string { return v.NodeState }).(pulumi.StringOutput)
}

// SSH port number of the node.
func (o AmlComputeNodeInformationResponseOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v AmlComputeNodeInformationResponse) float64 { return v.Port }).(pulumi.Float64Output)
}

// Private IP address of the compute node.
func (o AmlComputeNodeInformationResponseOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeNodeInformationResponse) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// Public IP address of the compute node.
func (o AmlComputeNodeInformationResponseOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeNodeInformationResponse) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

// ID of the Experiment running on the node, if any else null.
func (o AmlComputeNodeInformationResponseOutput) RunId() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeNodeInformationResponse) string { return v.RunId }).(pulumi.StringOutput)
}

type AmlComputeNodeInformationResponseArrayOutput struct{ *pulumi.OutputState }

func (AmlComputeNodeInformationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmlComputeNodeInformationResponse)(nil)).Elem()
}

func (o AmlComputeNodeInformationResponseArrayOutput) ToAmlComputeNodeInformationResponseArrayOutput() AmlComputeNodeInformationResponseArrayOutput {
	return o
}

func (o AmlComputeNodeInformationResponseArrayOutput) ToAmlComputeNodeInformationResponseArrayOutputWithContext(ctx context.Context) AmlComputeNodeInformationResponseArrayOutput {
	return o
}

func (o AmlComputeNodeInformationResponseArrayOutput) Index(i pulumi.IntInput) AmlComputeNodeInformationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmlComputeNodeInformationResponse {
		return vs[0].([]AmlComputeNodeInformationResponse)[vs[1].(int)]
	}).(AmlComputeNodeInformationResponseOutput)
}

type AmlComputeProperties struct {
	// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
	EnableNodePublicIp *bool `pulumi:"enableNodePublicIp"`
	// Network is isolated or not
	IsolatedNetwork *bool `pulumi:"isolatedNetwork"`
	// Compute OS Type
	OsType *string `pulumi:"osType"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
	RemoteLoginPortPublicAccess *string `pulumi:"remoteLoginPortPublicAccess"`
	// Scale settings for AML Compute
	ScaleSettings *ScaleSettings `pulumi:"scaleSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet *ResourceId `pulumi:"subnet"`
	// Credentials for an administrator user account that will be created on each compute node.
	UserAccountCredentials *UserAccountCredentials `pulumi:"userAccountCredentials"`
	// Virtual Machine image for AML Compute - windows only
	VirtualMachineImage *VirtualMachineImage `pulumi:"virtualMachineImage"`
	// Virtual Machine priority
	VmPriority *string `pulumi:"vmPriority"`
	// Virtual Machine Size
	VmSize *string `pulumi:"vmSize"`
}

// AmlComputePropertiesInput is an input type that accepts AmlComputePropertiesArgs and AmlComputePropertiesOutput values.
// You can construct a concrete instance of `AmlComputePropertiesInput` via:
//
//          AmlComputePropertiesArgs{...}
type AmlComputePropertiesInput interface {
	pulumi.Input

	ToAmlComputePropertiesOutput() AmlComputePropertiesOutput
	ToAmlComputePropertiesOutputWithContext(context.Context) AmlComputePropertiesOutput
}

type AmlComputePropertiesArgs struct {
	// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
	EnableNodePublicIp pulumi.BoolPtrInput `pulumi:"enableNodePublicIp"`
	// Network is isolated or not
	IsolatedNetwork pulumi.BoolPtrInput `pulumi:"isolatedNetwork"`
	// Compute OS Type
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
	RemoteLoginPortPublicAccess pulumi.StringPtrInput `pulumi:"remoteLoginPortPublicAccess"`
	// Scale settings for AML Compute
	ScaleSettings ScaleSettingsPtrInput `pulumi:"scaleSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet ResourceIdPtrInput `pulumi:"subnet"`
	// Credentials for an administrator user account that will be created on each compute node.
	UserAccountCredentials UserAccountCredentialsPtrInput `pulumi:"userAccountCredentials"`
	// Virtual Machine image for AML Compute - windows only
	VirtualMachineImage VirtualMachineImagePtrInput `pulumi:"virtualMachineImage"`
	// Virtual Machine priority
	VmPriority pulumi.StringPtrInput `pulumi:"vmPriority"`
	// Virtual Machine Size
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (AmlComputePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeProperties)(nil)).Elem()
}

func (i AmlComputePropertiesArgs) ToAmlComputePropertiesOutput() AmlComputePropertiesOutput {
	return i.ToAmlComputePropertiesOutputWithContext(context.Background())
}

func (i AmlComputePropertiesArgs) ToAmlComputePropertiesOutputWithContext(ctx context.Context) AmlComputePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputePropertiesOutput)
}

func (i AmlComputePropertiesArgs) ToAmlComputePropertiesPtrOutput() AmlComputePropertiesPtrOutput {
	return i.ToAmlComputePropertiesPtrOutputWithContext(context.Background())
}

func (i AmlComputePropertiesArgs) ToAmlComputePropertiesPtrOutputWithContext(ctx context.Context) AmlComputePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputePropertiesOutput).ToAmlComputePropertiesPtrOutputWithContext(ctx)
}

// AmlComputePropertiesPtrInput is an input type that accepts AmlComputePropertiesArgs, AmlComputePropertiesPtr and AmlComputePropertiesPtrOutput values.
// You can construct a concrete instance of `AmlComputePropertiesPtrInput` via:
//
//          AmlComputePropertiesArgs{...}
//
//  or:
//
//          nil
type AmlComputePropertiesPtrInput interface {
	pulumi.Input

	ToAmlComputePropertiesPtrOutput() AmlComputePropertiesPtrOutput
	ToAmlComputePropertiesPtrOutputWithContext(context.Context) AmlComputePropertiesPtrOutput
}

type amlComputePropertiesPtrType AmlComputePropertiesArgs

func AmlComputePropertiesPtr(v *AmlComputePropertiesArgs) AmlComputePropertiesPtrInput {
	return (*amlComputePropertiesPtrType)(v)
}

func (*amlComputePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlComputeProperties)(nil)).Elem()
}

func (i *amlComputePropertiesPtrType) ToAmlComputePropertiesPtrOutput() AmlComputePropertiesPtrOutput {
	return i.ToAmlComputePropertiesPtrOutputWithContext(context.Background())
}

func (i *amlComputePropertiesPtrType) ToAmlComputePropertiesPtrOutputWithContext(ctx context.Context) AmlComputePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputePropertiesPtrOutput)
}

type AmlComputePropertiesOutput struct{ *pulumi.OutputState }

func (AmlComputePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeProperties)(nil)).Elem()
}

func (o AmlComputePropertiesOutput) ToAmlComputePropertiesOutput() AmlComputePropertiesOutput {
	return o
}

func (o AmlComputePropertiesOutput) ToAmlComputePropertiesOutputWithContext(ctx context.Context) AmlComputePropertiesOutput {
	return o
}

func (o AmlComputePropertiesOutput) ToAmlComputePropertiesPtrOutput() AmlComputePropertiesPtrOutput {
	return o.ToAmlComputePropertiesPtrOutputWithContext(context.Background())
}

func (o AmlComputePropertiesOutput) ToAmlComputePropertiesPtrOutputWithContext(ctx context.Context) AmlComputePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AmlComputeProperties) *AmlComputeProperties {
		return &v
	}).(AmlComputePropertiesPtrOutput)
}

// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
func (o AmlComputePropertiesOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *bool { return v.EnableNodePublicIp }).(pulumi.BoolPtrOutput)
}

// Network is isolated or not
func (o AmlComputePropertiesOutput) IsolatedNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *bool { return v.IsolatedNetwork }).(pulumi.BoolPtrOutput)
}

// Compute OS Type
func (o AmlComputePropertiesOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
func (o AmlComputePropertiesOutput) RemoteLoginPortPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *string { return v.RemoteLoginPortPublicAccess }).(pulumi.StringPtrOutput)
}

// Scale settings for AML Compute
func (o AmlComputePropertiesOutput) ScaleSettings() ScaleSettingsPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *ScaleSettings { return v.ScaleSettings }).(ScaleSettingsPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o AmlComputePropertiesOutput) Subnet() ResourceIdPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *ResourceId { return v.Subnet }).(ResourceIdPtrOutput)
}

// Credentials for an administrator user account that will be created on each compute node.
func (o AmlComputePropertiesOutput) UserAccountCredentials() UserAccountCredentialsPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *UserAccountCredentials { return v.UserAccountCredentials }).(UserAccountCredentialsPtrOutput)
}

// Virtual Machine image for AML Compute - windows only
func (o AmlComputePropertiesOutput) VirtualMachineImage() VirtualMachineImagePtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *VirtualMachineImage { return v.VirtualMachineImage }).(VirtualMachineImagePtrOutput)
}

// Virtual Machine priority
func (o AmlComputePropertiesOutput) VmPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *string { return v.VmPriority }).(pulumi.StringPtrOutput)
}

// Virtual Machine Size
func (o AmlComputePropertiesOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type AmlComputePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AmlComputePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlComputeProperties)(nil)).Elem()
}

func (o AmlComputePropertiesPtrOutput) ToAmlComputePropertiesPtrOutput() AmlComputePropertiesPtrOutput {
	return o
}

func (o AmlComputePropertiesPtrOutput) ToAmlComputePropertiesPtrOutputWithContext(ctx context.Context) AmlComputePropertiesPtrOutput {
	return o
}

func (o AmlComputePropertiesPtrOutput) Elem() AmlComputePropertiesOutput {
	return o.ApplyT(func(v *AmlComputeProperties) AmlComputeProperties {
		if v != nil {
			return *v
		}
		var ret AmlComputeProperties
		return ret
	}).(AmlComputePropertiesOutput)
}

// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
func (o AmlComputePropertiesPtrOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNodePublicIp
	}).(pulumi.BoolPtrOutput)
}

// Network is isolated or not
func (o AmlComputePropertiesPtrOutput) IsolatedNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsolatedNetwork
	}).(pulumi.BoolPtrOutput)
}

// Compute OS Type
func (o AmlComputePropertiesPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
func (o AmlComputePropertiesPtrOutput) RemoteLoginPortPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *string {
		if v == nil {
			return nil
		}
		return v.RemoteLoginPortPublicAccess
	}).(pulumi.StringPtrOutput)
}

// Scale settings for AML Compute
func (o AmlComputePropertiesPtrOutput) ScaleSettings() ScaleSettingsPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *ScaleSettings {
		if v == nil {
			return nil
		}
		return v.ScaleSettings
	}).(ScaleSettingsPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o AmlComputePropertiesPtrOutput) Subnet() ResourceIdPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *ResourceId {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(ResourceIdPtrOutput)
}

// Credentials for an administrator user account that will be created on each compute node.
func (o AmlComputePropertiesPtrOutput) UserAccountCredentials() UserAccountCredentialsPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *UserAccountCredentials {
		if v == nil {
			return nil
		}
		return v.UserAccountCredentials
	}).(UserAccountCredentialsPtrOutput)
}

// Virtual Machine image for AML Compute - windows only
func (o AmlComputePropertiesPtrOutput) VirtualMachineImage() VirtualMachineImagePtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *VirtualMachineImage {
		if v == nil {
			return nil
		}
		return v.VirtualMachineImage
	}).(VirtualMachineImagePtrOutput)
}

// Virtual Machine priority
func (o AmlComputePropertiesPtrOutput) VmPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *string {
		if v == nil {
			return nil
		}
		return v.VmPriority
	}).(pulumi.StringPtrOutput)
}

// Virtual Machine Size
func (o AmlComputePropertiesPtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

type AmlComputeResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AmlCompute'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// AML Compute properties
	Properties *AmlComputeResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// AmlComputeResponseInput is an input type that accepts AmlComputeResponseArgs and AmlComputeResponseOutput values.
// You can construct a concrete instance of `AmlComputeResponseInput` via:
//
//          AmlComputeResponseArgs{...}
type AmlComputeResponseInput interface {
	pulumi.Input

	ToAmlComputeResponseOutput() AmlComputeResponseOutput
	ToAmlComputeResponseOutputWithContext(context.Context) AmlComputeResponseOutput
}

type AmlComputeResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AmlCompute'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// AML Compute properties
	Properties AmlComputeResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (AmlComputeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeResponse)(nil)).Elem()
}

func (i AmlComputeResponseArgs) ToAmlComputeResponseOutput() AmlComputeResponseOutput {
	return i.ToAmlComputeResponseOutputWithContext(context.Background())
}

func (i AmlComputeResponseArgs) ToAmlComputeResponseOutputWithContext(ctx context.Context) AmlComputeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeResponseOutput)
}

type AmlComputeResponseOutput struct{ *pulumi.OutputState }

func (AmlComputeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeResponse)(nil)).Elem()
}

func (o AmlComputeResponseOutput) ToAmlComputeResponseOutput() AmlComputeResponseOutput {
	return o
}

func (o AmlComputeResponseOutput) ToAmlComputeResponseOutputWithContext(ctx context.Context) AmlComputeResponseOutput {
	return o
}

// Location for the underlying compute
func (o AmlComputeResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'AmlCompute'.
func (o AmlComputeResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o AmlComputeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o AmlComputeResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v AmlComputeResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// AML Compute properties
func (o AmlComputeResponseOutput) Properties() AmlComputeResponsePropertiesPtrOutput {
	return o.ApplyT(func(v AmlComputeResponse) *AmlComputeResponseProperties { return v.Properties }).(AmlComputeResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o AmlComputeResponseOutput) ProvisioningErrors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v AmlComputeResponse) []MachineLearningServiceErrorResponse { return v.ProvisioningErrors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o AmlComputeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o AmlComputeResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type AmlComputeResponseProperties struct {
	// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
	AllocationState string `pulumi:"allocationState"`
	// The time at which the compute entered its current allocation state.
	AllocationStateTransitionTime string `pulumi:"allocationStateTransitionTime"`
	// The number of compute nodes currently assigned to the compute.
	CurrentNodeCount int `pulumi:"currentNodeCount"`
	// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
	EnableNodePublicIp *bool `pulumi:"enableNodePublicIp"`
	// Collection of errors encountered by various compute nodes during node setup.
	Errors []MachineLearningServiceErrorResponse `pulumi:"errors"`
	// Network is isolated or not
	IsolatedNetwork *bool `pulumi:"isolatedNetwork"`
	// Counts of various node states on the compute.
	NodeStateCounts NodeStateCountsResponse `pulumi:"nodeStateCounts"`
	// Compute OS Type
	OsType *string `pulumi:"osType"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
	RemoteLoginPortPublicAccess *string `pulumi:"remoteLoginPortPublicAccess"`
	// Scale settings for AML Compute
	ScaleSettings *ScaleSettingsResponse `pulumi:"scaleSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet *ResourceIdResponse `pulumi:"subnet"`
	// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
	TargetNodeCount int `pulumi:"targetNodeCount"`
	// Credentials for an administrator user account that will be created on each compute node.
	UserAccountCredentials *UserAccountCredentialsResponse `pulumi:"userAccountCredentials"`
	// Virtual Machine image for AML Compute - windows only
	VirtualMachineImage *VirtualMachineImageResponse `pulumi:"virtualMachineImage"`
	// Virtual Machine priority
	VmPriority *string `pulumi:"vmPriority"`
	// Virtual Machine Size
	VmSize *string `pulumi:"vmSize"`
}

// AmlComputeResponsePropertiesInput is an input type that accepts AmlComputeResponsePropertiesArgs and AmlComputeResponsePropertiesOutput values.
// You can construct a concrete instance of `AmlComputeResponsePropertiesInput` via:
//
//          AmlComputeResponsePropertiesArgs{...}
type AmlComputeResponsePropertiesInput interface {
	pulumi.Input

	ToAmlComputeResponsePropertiesOutput() AmlComputeResponsePropertiesOutput
	ToAmlComputeResponsePropertiesOutputWithContext(context.Context) AmlComputeResponsePropertiesOutput
}

type AmlComputeResponsePropertiesArgs struct {
	// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
	AllocationState pulumi.StringInput `pulumi:"allocationState"`
	// The time at which the compute entered its current allocation state.
	AllocationStateTransitionTime pulumi.StringInput `pulumi:"allocationStateTransitionTime"`
	// The number of compute nodes currently assigned to the compute.
	CurrentNodeCount pulumi.IntInput `pulumi:"currentNodeCount"`
	// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
	EnableNodePublicIp pulumi.BoolPtrInput `pulumi:"enableNodePublicIp"`
	// Collection of errors encountered by various compute nodes during node setup.
	Errors MachineLearningServiceErrorResponseArrayInput `pulumi:"errors"`
	// Network is isolated or not
	IsolatedNetwork pulumi.BoolPtrInput `pulumi:"isolatedNetwork"`
	// Counts of various node states on the compute.
	NodeStateCounts NodeStateCountsResponseInput `pulumi:"nodeStateCounts"`
	// Compute OS Type
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
	RemoteLoginPortPublicAccess pulumi.StringPtrInput `pulumi:"remoteLoginPortPublicAccess"`
	// Scale settings for AML Compute
	ScaleSettings ScaleSettingsResponsePtrInput `pulumi:"scaleSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet ResourceIdResponsePtrInput `pulumi:"subnet"`
	// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
	TargetNodeCount pulumi.IntInput `pulumi:"targetNodeCount"`
	// Credentials for an administrator user account that will be created on each compute node.
	UserAccountCredentials UserAccountCredentialsResponsePtrInput `pulumi:"userAccountCredentials"`
	// Virtual Machine image for AML Compute - windows only
	VirtualMachineImage VirtualMachineImageResponsePtrInput `pulumi:"virtualMachineImage"`
	// Virtual Machine priority
	VmPriority pulumi.StringPtrInput `pulumi:"vmPriority"`
	// Virtual Machine Size
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (AmlComputeResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeResponseProperties)(nil)).Elem()
}

func (i AmlComputeResponsePropertiesArgs) ToAmlComputeResponsePropertiesOutput() AmlComputeResponsePropertiesOutput {
	return i.ToAmlComputeResponsePropertiesOutputWithContext(context.Background())
}

func (i AmlComputeResponsePropertiesArgs) ToAmlComputeResponsePropertiesOutputWithContext(ctx context.Context) AmlComputeResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeResponsePropertiesOutput)
}

func (i AmlComputeResponsePropertiesArgs) ToAmlComputeResponsePropertiesPtrOutput() AmlComputeResponsePropertiesPtrOutput {
	return i.ToAmlComputeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i AmlComputeResponsePropertiesArgs) ToAmlComputeResponsePropertiesPtrOutputWithContext(ctx context.Context) AmlComputeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeResponsePropertiesOutput).ToAmlComputeResponsePropertiesPtrOutputWithContext(ctx)
}

// AmlComputeResponsePropertiesPtrInput is an input type that accepts AmlComputeResponsePropertiesArgs, AmlComputeResponsePropertiesPtr and AmlComputeResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `AmlComputeResponsePropertiesPtrInput` via:
//
//          AmlComputeResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type AmlComputeResponsePropertiesPtrInput interface {
	pulumi.Input

	ToAmlComputeResponsePropertiesPtrOutput() AmlComputeResponsePropertiesPtrOutput
	ToAmlComputeResponsePropertiesPtrOutputWithContext(context.Context) AmlComputeResponsePropertiesPtrOutput
}

type amlComputeResponsePropertiesPtrType AmlComputeResponsePropertiesArgs

func AmlComputeResponsePropertiesPtr(v *AmlComputeResponsePropertiesArgs) AmlComputeResponsePropertiesPtrInput {
	return (*amlComputeResponsePropertiesPtrType)(v)
}

func (*amlComputeResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlComputeResponseProperties)(nil)).Elem()
}

func (i *amlComputeResponsePropertiesPtrType) ToAmlComputeResponsePropertiesPtrOutput() AmlComputeResponsePropertiesPtrOutput {
	return i.ToAmlComputeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *amlComputeResponsePropertiesPtrType) ToAmlComputeResponsePropertiesPtrOutputWithContext(ctx context.Context) AmlComputeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeResponsePropertiesPtrOutput)
}

type AmlComputeResponsePropertiesOutput struct{ *pulumi.OutputState }

func (AmlComputeResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeResponseProperties)(nil)).Elem()
}

func (o AmlComputeResponsePropertiesOutput) ToAmlComputeResponsePropertiesOutput() AmlComputeResponsePropertiesOutput {
	return o
}

func (o AmlComputeResponsePropertiesOutput) ToAmlComputeResponsePropertiesOutputWithContext(ctx context.Context) AmlComputeResponsePropertiesOutput {
	return o
}

func (o AmlComputeResponsePropertiesOutput) ToAmlComputeResponsePropertiesPtrOutput() AmlComputeResponsePropertiesPtrOutput {
	return o.ToAmlComputeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o AmlComputeResponsePropertiesOutput) ToAmlComputeResponsePropertiesPtrOutputWithContext(ctx context.Context) AmlComputeResponsePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AmlComputeResponseProperties) *AmlComputeResponseProperties {
		return &v
	}).(AmlComputeResponsePropertiesPtrOutput)
}

// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
func (o AmlComputeResponsePropertiesOutput) AllocationState() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) string { return v.AllocationState }).(pulumi.StringOutput)
}

// The time at which the compute entered its current allocation state.
func (o AmlComputeResponsePropertiesOutput) AllocationStateTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) string { return v.AllocationStateTransitionTime }).(pulumi.StringOutput)
}

// The number of compute nodes currently assigned to the compute.
func (o AmlComputeResponsePropertiesOutput) CurrentNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) int { return v.CurrentNodeCount }).(pulumi.IntOutput)
}

// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
func (o AmlComputeResponsePropertiesOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *bool { return v.EnableNodePublicIp }).(pulumi.BoolPtrOutput)
}

// Collection of errors encountered by various compute nodes during node setup.
func (o AmlComputeResponsePropertiesOutput) Errors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) []MachineLearningServiceErrorResponse { return v.Errors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// Network is isolated or not
func (o AmlComputeResponsePropertiesOutput) IsolatedNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *bool { return v.IsolatedNetwork }).(pulumi.BoolPtrOutput)
}

// Counts of various node states on the compute.
func (o AmlComputeResponsePropertiesOutput) NodeStateCounts() NodeStateCountsResponseOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) NodeStateCountsResponse { return v.NodeStateCounts }).(NodeStateCountsResponseOutput)
}

// Compute OS Type
func (o AmlComputeResponsePropertiesOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
func (o AmlComputeResponsePropertiesOutput) RemoteLoginPortPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *string { return v.RemoteLoginPortPublicAccess }).(pulumi.StringPtrOutput)
}

// Scale settings for AML Compute
func (o AmlComputeResponsePropertiesOutput) ScaleSettings() ScaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *ScaleSettingsResponse { return v.ScaleSettings }).(ScaleSettingsResponsePtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o AmlComputeResponsePropertiesOutput) Subnet() ResourceIdResponsePtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *ResourceIdResponse { return v.Subnet }).(ResourceIdResponsePtrOutput)
}

// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
func (o AmlComputeResponsePropertiesOutput) TargetNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) int { return v.TargetNodeCount }).(pulumi.IntOutput)
}

// Credentials for an administrator user account that will be created on each compute node.
func (o AmlComputeResponsePropertiesOutput) UserAccountCredentials() UserAccountCredentialsResponsePtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *UserAccountCredentialsResponse { return v.UserAccountCredentials }).(UserAccountCredentialsResponsePtrOutput)
}

// Virtual Machine image for AML Compute - windows only
func (o AmlComputeResponsePropertiesOutput) VirtualMachineImage() VirtualMachineImageResponsePtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *VirtualMachineImageResponse { return v.VirtualMachineImage }).(VirtualMachineImageResponsePtrOutput)
}

// Virtual Machine priority
func (o AmlComputeResponsePropertiesOutput) VmPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *string { return v.VmPriority }).(pulumi.StringPtrOutput)
}

// Virtual Machine Size
func (o AmlComputeResponsePropertiesOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type AmlComputeResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AmlComputeResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlComputeResponseProperties)(nil)).Elem()
}

func (o AmlComputeResponsePropertiesPtrOutput) ToAmlComputeResponsePropertiesPtrOutput() AmlComputeResponsePropertiesPtrOutput {
	return o
}

func (o AmlComputeResponsePropertiesPtrOutput) ToAmlComputeResponsePropertiesPtrOutputWithContext(ctx context.Context) AmlComputeResponsePropertiesPtrOutput {
	return o
}

func (o AmlComputeResponsePropertiesPtrOutput) Elem() AmlComputeResponsePropertiesOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) AmlComputeResponseProperties {
		if v != nil {
			return *v
		}
		var ret AmlComputeResponseProperties
		return ret
	}).(AmlComputeResponsePropertiesOutput)
}

// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
func (o AmlComputeResponsePropertiesPtrOutput) AllocationState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AllocationState
	}).(pulumi.StringPtrOutput)
}

// The time at which the compute entered its current allocation state.
func (o AmlComputeResponsePropertiesPtrOutput) AllocationStateTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AllocationStateTransitionTime
	}).(pulumi.StringPtrOutput)
}

// The number of compute nodes currently assigned to the compute.
func (o AmlComputeResponsePropertiesPtrOutput) CurrentNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *int {
		if v == nil {
			return nil
		}
		return &v.CurrentNodeCount
	}).(pulumi.IntPtrOutput)
}

// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
func (o AmlComputeResponsePropertiesPtrOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNodePublicIp
	}).(pulumi.BoolPtrOutput)
}

// Collection of errors encountered by various compute nodes during node setup.
func (o AmlComputeResponsePropertiesPtrOutput) Errors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) []MachineLearningServiceErrorResponse {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(MachineLearningServiceErrorResponseArrayOutput)
}

// Network is isolated or not
func (o AmlComputeResponsePropertiesPtrOutput) IsolatedNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsolatedNetwork
	}).(pulumi.BoolPtrOutput)
}

// Counts of various node states on the compute.
func (o AmlComputeResponsePropertiesPtrOutput) NodeStateCounts() NodeStateCountsResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *NodeStateCountsResponse {
		if v == nil {
			return nil
		}
		return &v.NodeStateCounts
	}).(NodeStateCountsResponsePtrOutput)
}

// Compute OS Type
func (o AmlComputeResponsePropertiesPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
func (o AmlComputeResponsePropertiesPtrOutput) RemoteLoginPortPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.RemoteLoginPortPublicAccess
	}).(pulumi.StringPtrOutput)
}

// Scale settings for AML Compute
func (o AmlComputeResponsePropertiesPtrOutput) ScaleSettings() ScaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *ScaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.ScaleSettings
	}).(ScaleSettingsResponsePtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o AmlComputeResponsePropertiesPtrOutput) Subnet() ResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *ResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(ResourceIdResponsePtrOutput)
}

// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
func (o AmlComputeResponsePropertiesPtrOutput) TargetNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *int {
		if v == nil {
			return nil
		}
		return &v.TargetNodeCount
	}).(pulumi.IntPtrOutput)
}

// Credentials for an administrator user account that will be created on each compute node.
func (o AmlComputeResponsePropertiesPtrOutput) UserAccountCredentials() UserAccountCredentialsResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *UserAccountCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.UserAccountCredentials
	}).(UserAccountCredentialsResponsePtrOutput)
}

// Virtual Machine image for AML Compute - windows only
func (o AmlComputeResponsePropertiesPtrOutput) VirtualMachineImage() VirtualMachineImageResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *VirtualMachineImageResponse {
		if v == nil {
			return nil
		}
		return v.VirtualMachineImage
	}).(VirtualMachineImageResponsePtrOutput)
}

// Virtual Machine priority
func (o AmlComputeResponsePropertiesPtrOutput) VmPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VmPriority
	}).(pulumi.StringPtrOutput)
}

// Virtual Machine Size
func (o AmlComputeResponsePropertiesPtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

type AmlToken struct {
	// Enum to determine identity framework.
	// Expected value is 'AMLToken'.
	IdentityType string `pulumi:"identityType"`
}

// AmlTokenInput is an input type that accepts AmlTokenArgs and AmlTokenOutput values.
// You can construct a concrete instance of `AmlTokenInput` via:
//
//          AmlTokenArgs{...}
type AmlTokenInput interface {
	pulumi.Input

	ToAmlTokenOutput() AmlTokenOutput
	ToAmlTokenOutputWithContext(context.Context) AmlTokenOutput
}

type AmlTokenArgs struct {
	// Enum to determine identity framework.
	// Expected value is 'AMLToken'.
	IdentityType pulumi.StringInput `pulumi:"identityType"`
}

func (AmlTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlToken)(nil)).Elem()
}

func (i AmlTokenArgs) ToAmlTokenOutput() AmlTokenOutput {
	return i.ToAmlTokenOutputWithContext(context.Background())
}

func (i AmlTokenArgs) ToAmlTokenOutputWithContext(ctx context.Context) AmlTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlTokenOutput)
}

type AmlTokenOutput struct{ *pulumi.OutputState }

func (AmlTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlToken)(nil)).Elem()
}

func (o AmlTokenOutput) ToAmlTokenOutput() AmlTokenOutput {
	return o
}

func (o AmlTokenOutput) ToAmlTokenOutputWithContext(ctx context.Context) AmlTokenOutput {
	return o
}

// Enum to determine identity framework.
// Expected value is 'AMLToken'.
func (o AmlTokenOutput) IdentityType() pulumi.StringOutput {
	return o.ApplyT(func(v AmlToken) string { return v.IdentityType }).(pulumi.StringOutput)
}

type AmlTokenResponse struct {
	// Enum to determine identity framework.
	// Expected value is 'AMLToken'.
	IdentityType string `pulumi:"identityType"`
}

// AmlTokenResponseInput is an input type that accepts AmlTokenResponseArgs and AmlTokenResponseOutput values.
// You can construct a concrete instance of `AmlTokenResponseInput` via:
//
//          AmlTokenResponseArgs{...}
type AmlTokenResponseInput interface {
	pulumi.Input

	ToAmlTokenResponseOutput() AmlTokenResponseOutput
	ToAmlTokenResponseOutputWithContext(context.Context) AmlTokenResponseOutput
}

type AmlTokenResponseArgs struct {
	// Enum to determine identity framework.
	// Expected value is 'AMLToken'.
	IdentityType pulumi.StringInput `pulumi:"identityType"`
}

func (AmlTokenResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlTokenResponse)(nil)).Elem()
}

func (i AmlTokenResponseArgs) ToAmlTokenResponseOutput() AmlTokenResponseOutput {
	return i.ToAmlTokenResponseOutputWithContext(context.Background())
}

func (i AmlTokenResponseArgs) ToAmlTokenResponseOutputWithContext(ctx context.Context) AmlTokenResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlTokenResponseOutput)
}

type AmlTokenResponseOutput struct{ *pulumi.OutputState }

func (AmlTokenResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlTokenResponse)(nil)).Elem()
}

func (o AmlTokenResponseOutput) ToAmlTokenResponseOutput() AmlTokenResponseOutput {
	return o
}

func (o AmlTokenResponseOutput) ToAmlTokenResponseOutputWithContext(ctx context.Context) AmlTokenResponseOutput {
	return o
}

// Enum to determine identity framework.
// Expected value is 'AMLToken'.
func (o AmlTokenResponseOutput) IdentityType() pulumi.StringOutput {
	return o.ApplyT(func(v AmlTokenResponse) string { return v.IdentityType }).(pulumi.StringOutput)
}

type AssignedUser struct {
	// User’s AAD Object Id.
	ObjectId string `pulumi:"objectId"`
	// User’s AAD Tenant Id.
	TenantId string `pulumi:"tenantId"`
}

// AssignedUserInput is an input type that accepts AssignedUserArgs and AssignedUserOutput values.
// You can construct a concrete instance of `AssignedUserInput` via:
//
//          AssignedUserArgs{...}
type AssignedUserInput interface {
	pulumi.Input

	ToAssignedUserOutput() AssignedUserOutput
	ToAssignedUserOutputWithContext(context.Context) AssignedUserOutput
}

type AssignedUserArgs struct {
	// User’s AAD Object Id.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// User’s AAD Tenant Id.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (AssignedUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AssignedUser)(nil)).Elem()
}

func (i AssignedUserArgs) ToAssignedUserOutput() AssignedUserOutput {
	return i.ToAssignedUserOutputWithContext(context.Background())
}

func (i AssignedUserArgs) ToAssignedUserOutputWithContext(ctx context.Context) AssignedUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignedUserOutput)
}

func (i AssignedUserArgs) ToAssignedUserPtrOutput() AssignedUserPtrOutput {
	return i.ToAssignedUserPtrOutputWithContext(context.Background())
}

func (i AssignedUserArgs) ToAssignedUserPtrOutputWithContext(ctx context.Context) AssignedUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignedUserOutput).ToAssignedUserPtrOutputWithContext(ctx)
}

// AssignedUserPtrInput is an input type that accepts AssignedUserArgs, AssignedUserPtr and AssignedUserPtrOutput values.
// You can construct a concrete instance of `AssignedUserPtrInput` via:
//
//          AssignedUserArgs{...}
//
//  or:
//
//          nil
type AssignedUserPtrInput interface {
	pulumi.Input

	ToAssignedUserPtrOutput() AssignedUserPtrOutput
	ToAssignedUserPtrOutputWithContext(context.Context) AssignedUserPtrOutput
}

type assignedUserPtrType AssignedUserArgs

func AssignedUserPtr(v *AssignedUserArgs) AssignedUserPtrInput {
	return (*assignedUserPtrType)(v)
}

func (*assignedUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AssignedUser)(nil)).Elem()
}

func (i *assignedUserPtrType) ToAssignedUserPtrOutput() AssignedUserPtrOutput {
	return i.ToAssignedUserPtrOutputWithContext(context.Background())
}

func (i *assignedUserPtrType) ToAssignedUserPtrOutputWithContext(ctx context.Context) AssignedUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignedUserPtrOutput)
}

type AssignedUserOutput struct{ *pulumi.OutputState }

func (AssignedUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssignedUser)(nil)).Elem()
}

func (o AssignedUserOutput) ToAssignedUserOutput() AssignedUserOutput {
	return o
}

func (o AssignedUserOutput) ToAssignedUserOutputWithContext(ctx context.Context) AssignedUserOutput {
	return o
}

func (o AssignedUserOutput) ToAssignedUserPtrOutput() AssignedUserPtrOutput {
	return o.ToAssignedUserPtrOutputWithContext(context.Background())
}

func (o AssignedUserOutput) ToAssignedUserPtrOutputWithContext(ctx context.Context) AssignedUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssignedUser) *AssignedUser {
		return &v
	}).(AssignedUserPtrOutput)
}

// User’s AAD Object Id.
func (o AssignedUserOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v AssignedUser) string { return v.ObjectId }).(pulumi.StringOutput)
}

// User’s AAD Tenant Id.
func (o AssignedUserOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v AssignedUser) string { return v.TenantId }).(pulumi.StringOutput)
}

type AssignedUserPtrOutput struct{ *pulumi.OutputState }

func (AssignedUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssignedUser)(nil)).Elem()
}

func (o AssignedUserPtrOutput) ToAssignedUserPtrOutput() AssignedUserPtrOutput {
	return o
}

func (o AssignedUserPtrOutput) ToAssignedUserPtrOutputWithContext(ctx context.Context) AssignedUserPtrOutput {
	return o
}

func (o AssignedUserPtrOutput) Elem() AssignedUserOutput {
	return o.ApplyT(func(v *AssignedUser) AssignedUser {
		if v != nil {
			return *v
		}
		var ret AssignedUser
		return ret
	}).(AssignedUserOutput)
}

// User’s AAD Object Id.
func (o AssignedUserPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssignedUser) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// User’s AAD Tenant Id.
func (o AssignedUserPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssignedUser) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

type AssignedUserResponse struct {
	// User’s AAD Object Id.
	ObjectId string `pulumi:"objectId"`
	// User’s AAD Tenant Id.
	TenantId string `pulumi:"tenantId"`
}

// AssignedUserResponseInput is an input type that accepts AssignedUserResponseArgs and AssignedUserResponseOutput values.
// You can construct a concrete instance of `AssignedUserResponseInput` via:
//
//          AssignedUserResponseArgs{...}
type AssignedUserResponseInput interface {
	pulumi.Input

	ToAssignedUserResponseOutput() AssignedUserResponseOutput
	ToAssignedUserResponseOutputWithContext(context.Context) AssignedUserResponseOutput
}

type AssignedUserResponseArgs struct {
	// User’s AAD Object Id.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// User’s AAD Tenant Id.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (AssignedUserResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AssignedUserResponse)(nil)).Elem()
}

func (i AssignedUserResponseArgs) ToAssignedUserResponseOutput() AssignedUserResponseOutput {
	return i.ToAssignedUserResponseOutputWithContext(context.Background())
}

func (i AssignedUserResponseArgs) ToAssignedUserResponseOutputWithContext(ctx context.Context) AssignedUserResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignedUserResponseOutput)
}

func (i AssignedUserResponseArgs) ToAssignedUserResponsePtrOutput() AssignedUserResponsePtrOutput {
	return i.ToAssignedUserResponsePtrOutputWithContext(context.Background())
}

func (i AssignedUserResponseArgs) ToAssignedUserResponsePtrOutputWithContext(ctx context.Context) AssignedUserResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignedUserResponseOutput).ToAssignedUserResponsePtrOutputWithContext(ctx)
}

// AssignedUserResponsePtrInput is an input type that accepts AssignedUserResponseArgs, AssignedUserResponsePtr and AssignedUserResponsePtrOutput values.
// You can construct a concrete instance of `AssignedUserResponsePtrInput` via:
//
//          AssignedUserResponseArgs{...}
//
//  or:
//
//          nil
type AssignedUserResponsePtrInput interface {
	pulumi.Input

	ToAssignedUserResponsePtrOutput() AssignedUserResponsePtrOutput
	ToAssignedUserResponsePtrOutputWithContext(context.Context) AssignedUserResponsePtrOutput
}

type assignedUserResponsePtrType AssignedUserResponseArgs

func AssignedUserResponsePtr(v *AssignedUserResponseArgs) AssignedUserResponsePtrInput {
	return (*assignedUserResponsePtrType)(v)
}

func (*assignedUserResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AssignedUserResponse)(nil)).Elem()
}

func (i *assignedUserResponsePtrType) ToAssignedUserResponsePtrOutput() AssignedUserResponsePtrOutput {
	return i.ToAssignedUserResponsePtrOutputWithContext(context.Background())
}

func (i *assignedUserResponsePtrType) ToAssignedUserResponsePtrOutputWithContext(ctx context.Context) AssignedUserResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignedUserResponsePtrOutput)
}

type AssignedUserResponseOutput struct{ *pulumi.OutputState }

func (AssignedUserResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssignedUserResponse)(nil)).Elem()
}

func (o AssignedUserResponseOutput) ToAssignedUserResponseOutput() AssignedUserResponseOutput {
	return o
}

func (o AssignedUserResponseOutput) ToAssignedUserResponseOutputWithContext(ctx context.Context) AssignedUserResponseOutput {
	return o
}

func (o AssignedUserResponseOutput) ToAssignedUserResponsePtrOutput() AssignedUserResponsePtrOutput {
	return o.ToAssignedUserResponsePtrOutputWithContext(context.Background())
}

func (o AssignedUserResponseOutput) ToAssignedUserResponsePtrOutputWithContext(ctx context.Context) AssignedUserResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssignedUserResponse) *AssignedUserResponse {
		return &v
	}).(AssignedUserResponsePtrOutput)
}

// User’s AAD Object Id.
func (o AssignedUserResponseOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v AssignedUserResponse) string { return v.ObjectId }).(pulumi.StringOutput)
}

// User’s AAD Tenant Id.
func (o AssignedUserResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v AssignedUserResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

type AssignedUserResponsePtrOutput struct{ *pulumi.OutputState }

func (AssignedUserResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssignedUserResponse)(nil)).Elem()
}

func (o AssignedUserResponsePtrOutput) ToAssignedUserResponsePtrOutput() AssignedUserResponsePtrOutput {
	return o
}

func (o AssignedUserResponsePtrOutput) ToAssignedUserResponsePtrOutputWithContext(ctx context.Context) AssignedUserResponsePtrOutput {
	return o
}

func (o AssignedUserResponsePtrOutput) Elem() AssignedUserResponseOutput {
	return o.ApplyT(func(v *AssignedUserResponse) AssignedUserResponse {
		if v != nil {
			return *v
		}
		var ret AssignedUserResponse
		return ret
	}).(AssignedUserResponseOutput)
}

// User’s AAD Object Id.
func (o AssignedUserResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssignedUserResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// User’s AAD Tenant Id.
func (o AssignedUserResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssignedUserResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

type AutoScaleSettings struct {
	// Maximum number of instances for this deployment.
	MaxInstances *int `pulumi:"maxInstances"`
	// Minimum number of instances for this deployment.
	MinInstances *int `pulumi:"minInstances"`
	// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
	PollingInterval *string `pulumi:"pollingInterval"`
	// Expected value is 'Auto'.
	ScaleType string `pulumi:"scaleType"`
	// Target CPU usage for the autoscaler.
	TargetUtilizationPercentage *int `pulumi:"targetUtilizationPercentage"`
}

// AutoScaleSettingsInput is an input type that accepts AutoScaleSettingsArgs and AutoScaleSettingsOutput values.
// You can construct a concrete instance of `AutoScaleSettingsInput` via:
//
//          AutoScaleSettingsArgs{...}
type AutoScaleSettingsInput interface {
	pulumi.Input

	ToAutoScaleSettingsOutput() AutoScaleSettingsOutput
	ToAutoScaleSettingsOutputWithContext(context.Context) AutoScaleSettingsOutput
}

type AutoScaleSettingsArgs struct {
	// Maximum number of instances for this deployment.
	MaxInstances pulumi.IntPtrInput `pulumi:"maxInstances"`
	// Minimum number of instances for this deployment.
	MinInstances pulumi.IntPtrInput `pulumi:"minInstances"`
	// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
	PollingInterval pulumi.StringPtrInput `pulumi:"pollingInterval"`
	// Expected value is 'Auto'.
	ScaleType pulumi.StringInput `pulumi:"scaleType"`
	// Target CPU usage for the autoscaler.
	TargetUtilizationPercentage pulumi.IntPtrInput `pulumi:"targetUtilizationPercentage"`
}

func (AutoScaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleSettings)(nil)).Elem()
}

func (i AutoScaleSettingsArgs) ToAutoScaleSettingsOutput() AutoScaleSettingsOutput {
	return i.ToAutoScaleSettingsOutputWithContext(context.Background())
}

func (i AutoScaleSettingsArgs) ToAutoScaleSettingsOutputWithContext(ctx context.Context) AutoScaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScaleSettingsOutput)
}

type AutoScaleSettingsOutput struct{ *pulumi.OutputState }

func (AutoScaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleSettings)(nil)).Elem()
}

func (o AutoScaleSettingsOutput) ToAutoScaleSettingsOutput() AutoScaleSettingsOutput {
	return o
}

func (o AutoScaleSettingsOutput) ToAutoScaleSettingsOutputWithContext(ctx context.Context) AutoScaleSettingsOutput {
	return o
}

// Maximum number of instances for this deployment.
func (o AutoScaleSettingsOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleSettings) *int { return v.MaxInstances }).(pulumi.IntPtrOutput)
}

// Minimum number of instances for this deployment.
func (o AutoScaleSettingsOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleSettings) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
func (o AutoScaleSettingsOutput) PollingInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoScaleSettings) *string { return v.PollingInterval }).(pulumi.StringPtrOutput)
}

// Expected value is 'Auto'.
func (o AutoScaleSettingsOutput) ScaleType() pulumi.StringOutput {
	return o.ApplyT(func(v AutoScaleSettings) string { return v.ScaleType }).(pulumi.StringOutput)
}

// Target CPU usage for the autoscaler.
func (o AutoScaleSettingsOutput) TargetUtilizationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleSettings) *int { return v.TargetUtilizationPercentage }).(pulumi.IntPtrOutput)
}

type AutoScaleSettingsResponse struct {
	// Maximum number of instances for this deployment.
	MaxInstances *int `pulumi:"maxInstances"`
	// Minimum number of instances for this deployment.
	MinInstances *int `pulumi:"minInstances"`
	// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
	PollingInterval *string `pulumi:"pollingInterval"`
	// Expected value is 'Auto'.
	ScaleType string `pulumi:"scaleType"`
	// Target CPU usage for the autoscaler.
	TargetUtilizationPercentage *int `pulumi:"targetUtilizationPercentage"`
}

// AutoScaleSettingsResponseInput is an input type that accepts AutoScaleSettingsResponseArgs and AutoScaleSettingsResponseOutput values.
// You can construct a concrete instance of `AutoScaleSettingsResponseInput` via:
//
//          AutoScaleSettingsResponseArgs{...}
type AutoScaleSettingsResponseInput interface {
	pulumi.Input

	ToAutoScaleSettingsResponseOutput() AutoScaleSettingsResponseOutput
	ToAutoScaleSettingsResponseOutputWithContext(context.Context) AutoScaleSettingsResponseOutput
}

type AutoScaleSettingsResponseArgs struct {
	// Maximum number of instances for this deployment.
	MaxInstances pulumi.IntPtrInput `pulumi:"maxInstances"`
	// Minimum number of instances for this deployment.
	MinInstances pulumi.IntPtrInput `pulumi:"minInstances"`
	// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
	PollingInterval pulumi.StringPtrInput `pulumi:"pollingInterval"`
	// Expected value is 'Auto'.
	ScaleType pulumi.StringInput `pulumi:"scaleType"`
	// Target CPU usage for the autoscaler.
	TargetUtilizationPercentage pulumi.IntPtrInput `pulumi:"targetUtilizationPercentage"`
}

func (AutoScaleSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleSettingsResponse)(nil)).Elem()
}

func (i AutoScaleSettingsResponseArgs) ToAutoScaleSettingsResponseOutput() AutoScaleSettingsResponseOutput {
	return i.ToAutoScaleSettingsResponseOutputWithContext(context.Background())
}

func (i AutoScaleSettingsResponseArgs) ToAutoScaleSettingsResponseOutputWithContext(ctx context.Context) AutoScaleSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScaleSettingsResponseOutput)
}

type AutoScaleSettingsResponseOutput struct{ *pulumi.OutputState }

func (AutoScaleSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleSettingsResponse)(nil)).Elem()
}

func (o AutoScaleSettingsResponseOutput) ToAutoScaleSettingsResponseOutput() AutoScaleSettingsResponseOutput {
	return o
}

func (o AutoScaleSettingsResponseOutput) ToAutoScaleSettingsResponseOutputWithContext(ctx context.Context) AutoScaleSettingsResponseOutput {
	return o
}

// Maximum number of instances for this deployment.
func (o AutoScaleSettingsResponseOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleSettingsResponse) *int { return v.MaxInstances }).(pulumi.IntPtrOutput)
}

// Minimum number of instances for this deployment.
func (o AutoScaleSettingsResponseOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleSettingsResponse) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
func (o AutoScaleSettingsResponseOutput) PollingInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoScaleSettingsResponse) *string { return v.PollingInterval }).(pulumi.StringPtrOutput)
}

// Expected value is 'Auto'.
func (o AutoScaleSettingsResponseOutput) ScaleType() pulumi.StringOutput {
	return o.ApplyT(func(v AutoScaleSettingsResponse) string { return v.ScaleType }).(pulumi.StringOutput)
}

// Target CPU usage for the autoscaler.
func (o AutoScaleSettingsResponseOutput) TargetUtilizationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleSettingsResponse) *int { return v.TargetUtilizationPercentage }).(pulumi.IntPtrOutput)
}

type AzureDataLakeSectionResponse struct {
	// The authority URL used for authentication.
	AuthorityUrl *string `pulumi:"authorityUrl"`
	// The content of the certificate used for authentication.
	Certificate *string `pulumi:"certificate"`
	// The Client ID/Application ID
	ClientId *string `pulumi:"clientId"`
	// The client secret.
	ClientSecret *string `pulumi:"clientSecret"`
	// The Azure Data Lake credential type.
	CredentialType *string `pulumi:"credentialType"`
	//  Is it using certificate to authenticate. If false then use client secret.
	IsCertAuth *bool `pulumi:"isCertAuth"`
	// Resource Group.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The resource the service principal/app has access to.
	ResourceUri *string `pulumi:"resourceUri"`
	// Indicates which identity to use to authenticate service data access to customer's storage.
	ServiceDataAccessAuthIdentity *string `pulumi:"serviceDataAccessAuthIdentity"`
	// The Azure Data Lake store name.
	StoreName *string `pulumi:"storeName"`
	// Subscription ID.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// The ID of the tenant the service principal/app belongs to.
	TenantId *string `pulumi:"tenantId"`
	// The thumbprint of the certificate above.
	Thumbprint *string `pulumi:"thumbprint"`
}

// AzureDataLakeSectionResponseInput is an input type that accepts AzureDataLakeSectionResponseArgs and AzureDataLakeSectionResponseOutput values.
// You can construct a concrete instance of `AzureDataLakeSectionResponseInput` via:
//
//          AzureDataLakeSectionResponseArgs{...}
type AzureDataLakeSectionResponseInput interface {
	pulumi.Input

	ToAzureDataLakeSectionResponseOutput() AzureDataLakeSectionResponseOutput
	ToAzureDataLakeSectionResponseOutputWithContext(context.Context) AzureDataLakeSectionResponseOutput
}

type AzureDataLakeSectionResponseArgs struct {
	// The authority URL used for authentication.
	AuthorityUrl pulumi.StringPtrInput `pulumi:"authorityUrl"`
	// The content of the certificate used for authentication.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The Client ID/Application ID
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The client secret.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// The Azure Data Lake credential type.
	CredentialType pulumi.StringPtrInput `pulumi:"credentialType"`
	//  Is it using certificate to authenticate. If false then use client secret.
	IsCertAuth pulumi.BoolPtrInput `pulumi:"isCertAuth"`
	// Resource Group.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The resource the service principal/app has access to.
	ResourceUri pulumi.StringPtrInput `pulumi:"resourceUri"`
	// Indicates which identity to use to authenticate service data access to customer's storage.
	ServiceDataAccessAuthIdentity pulumi.StringPtrInput `pulumi:"serviceDataAccessAuthIdentity"`
	// The Azure Data Lake store name.
	StoreName pulumi.StringPtrInput `pulumi:"storeName"`
	// Subscription ID.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// The ID of the tenant the service principal/app belongs to.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The thumbprint of the certificate above.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (AzureDataLakeSectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeSectionResponse)(nil)).Elem()
}

func (i AzureDataLakeSectionResponseArgs) ToAzureDataLakeSectionResponseOutput() AzureDataLakeSectionResponseOutput {
	return i.ToAzureDataLakeSectionResponseOutputWithContext(context.Background())
}

func (i AzureDataLakeSectionResponseArgs) ToAzureDataLakeSectionResponseOutputWithContext(ctx context.Context) AzureDataLakeSectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataLakeSectionResponseOutput)
}

func (i AzureDataLakeSectionResponseArgs) ToAzureDataLakeSectionResponsePtrOutput() AzureDataLakeSectionResponsePtrOutput {
	return i.ToAzureDataLakeSectionResponsePtrOutputWithContext(context.Background())
}

func (i AzureDataLakeSectionResponseArgs) ToAzureDataLakeSectionResponsePtrOutputWithContext(ctx context.Context) AzureDataLakeSectionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataLakeSectionResponseOutput).ToAzureDataLakeSectionResponsePtrOutputWithContext(ctx)
}

// AzureDataLakeSectionResponsePtrInput is an input type that accepts AzureDataLakeSectionResponseArgs, AzureDataLakeSectionResponsePtr and AzureDataLakeSectionResponsePtrOutput values.
// You can construct a concrete instance of `AzureDataLakeSectionResponsePtrInput` via:
//
//          AzureDataLakeSectionResponseArgs{...}
//
//  or:
//
//          nil
type AzureDataLakeSectionResponsePtrInput interface {
	pulumi.Input

	ToAzureDataLakeSectionResponsePtrOutput() AzureDataLakeSectionResponsePtrOutput
	ToAzureDataLakeSectionResponsePtrOutputWithContext(context.Context) AzureDataLakeSectionResponsePtrOutput
}

type azureDataLakeSectionResponsePtrType AzureDataLakeSectionResponseArgs

func AzureDataLakeSectionResponsePtr(v *AzureDataLakeSectionResponseArgs) AzureDataLakeSectionResponsePtrInput {
	return (*azureDataLakeSectionResponsePtrType)(v)
}

func (*azureDataLakeSectionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureDataLakeSectionResponse)(nil)).Elem()
}

func (i *azureDataLakeSectionResponsePtrType) ToAzureDataLakeSectionResponsePtrOutput() AzureDataLakeSectionResponsePtrOutput {
	return i.ToAzureDataLakeSectionResponsePtrOutputWithContext(context.Background())
}

func (i *azureDataLakeSectionResponsePtrType) ToAzureDataLakeSectionResponsePtrOutputWithContext(ctx context.Context) AzureDataLakeSectionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataLakeSectionResponsePtrOutput)
}

type AzureDataLakeSectionResponseOutput struct{ *pulumi.OutputState }

func (AzureDataLakeSectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeSectionResponse)(nil)).Elem()
}

func (o AzureDataLakeSectionResponseOutput) ToAzureDataLakeSectionResponseOutput() AzureDataLakeSectionResponseOutput {
	return o
}

func (o AzureDataLakeSectionResponseOutput) ToAzureDataLakeSectionResponseOutputWithContext(ctx context.Context) AzureDataLakeSectionResponseOutput {
	return o
}

func (o AzureDataLakeSectionResponseOutput) ToAzureDataLakeSectionResponsePtrOutput() AzureDataLakeSectionResponsePtrOutput {
	return o.ToAzureDataLakeSectionResponsePtrOutputWithContext(context.Background())
}

func (o AzureDataLakeSectionResponseOutput) ToAzureDataLakeSectionResponsePtrOutputWithContext(ctx context.Context) AzureDataLakeSectionResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureDataLakeSectionResponse) *AzureDataLakeSectionResponse {
		return &v
	}).(AzureDataLakeSectionResponsePtrOutput)
}

// The authority URL used for authentication.
func (o AzureDataLakeSectionResponseOutput) AuthorityUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeSectionResponse) *string { return v.AuthorityUrl }).(pulumi.StringPtrOutput)
}

// The content of the certificate used for authentication.
func (o AzureDataLakeSectionResponseOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeSectionResponse) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The Client ID/Application ID
func (o AzureDataLakeSectionResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeSectionResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The client secret.
func (o AzureDataLakeSectionResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeSectionResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// The Azure Data Lake credential type.
func (o AzureDataLakeSectionResponseOutput) CredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeSectionResponse) *string { return v.CredentialType }).(pulumi.StringPtrOutput)
}

//  Is it using certificate to authenticate. If false then use client secret.
func (o AzureDataLakeSectionResponseOutput) IsCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureDataLakeSectionResponse) *bool { return v.IsCertAuth }).(pulumi.BoolPtrOutput)
}

// Resource Group.
func (o AzureDataLakeSectionResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeSectionResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The resource the service principal/app has access to.
func (o AzureDataLakeSectionResponseOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeSectionResponse) *string { return v.ResourceUri }).(pulumi.StringPtrOutput)
}

// Indicates which identity to use to authenticate service data access to customer's storage.
func (o AzureDataLakeSectionResponseOutput) ServiceDataAccessAuthIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeSectionResponse) *string { return v.ServiceDataAccessAuthIdentity }).(pulumi.StringPtrOutput)
}

// The Azure Data Lake store name.
func (o AzureDataLakeSectionResponseOutput) StoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeSectionResponse) *string { return v.StoreName }).(pulumi.StringPtrOutput)
}

// Subscription ID.
func (o AzureDataLakeSectionResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeSectionResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// The ID of the tenant the service principal/app belongs to.
func (o AzureDataLakeSectionResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeSectionResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate above.
func (o AzureDataLakeSectionResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeSectionResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type AzureDataLakeSectionResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureDataLakeSectionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureDataLakeSectionResponse)(nil)).Elem()
}

func (o AzureDataLakeSectionResponsePtrOutput) ToAzureDataLakeSectionResponsePtrOutput() AzureDataLakeSectionResponsePtrOutput {
	return o
}

func (o AzureDataLakeSectionResponsePtrOutput) ToAzureDataLakeSectionResponsePtrOutputWithContext(ctx context.Context) AzureDataLakeSectionResponsePtrOutput {
	return o
}

func (o AzureDataLakeSectionResponsePtrOutput) Elem() AzureDataLakeSectionResponseOutput {
	return o.ApplyT(func(v *AzureDataLakeSectionResponse) AzureDataLakeSectionResponse {
		if v != nil {
			return *v
		}
		var ret AzureDataLakeSectionResponse
		return ret
	}).(AzureDataLakeSectionResponseOutput)
}

// The authority URL used for authentication.
func (o AzureDataLakeSectionResponsePtrOutput) AuthorityUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataLakeSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorityUrl
	}).(pulumi.StringPtrOutput)
}

// The content of the certificate used for authentication.
func (o AzureDataLakeSectionResponsePtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataLakeSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

// The Client ID/Application ID
func (o AzureDataLakeSectionResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataLakeSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret.
func (o AzureDataLakeSectionResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataLakeSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The Azure Data Lake credential type.
func (o AzureDataLakeSectionResponsePtrOutput) CredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataLakeSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.CredentialType
	}).(pulumi.StringPtrOutput)
}

//  Is it using certificate to authenticate. If false then use client secret.
func (o AzureDataLakeSectionResponsePtrOutput) IsCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureDataLakeSectionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsCertAuth
	}).(pulumi.BoolPtrOutput)
}

// Resource Group.
func (o AzureDataLakeSectionResponsePtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataLakeSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// The resource the service principal/app has access to.
func (o AzureDataLakeSectionResponsePtrOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataLakeSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceUri
	}).(pulumi.StringPtrOutput)
}

// Indicates which identity to use to authenticate service data access to customer's storage.
func (o AzureDataLakeSectionResponsePtrOutput) ServiceDataAccessAuthIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataLakeSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceDataAccessAuthIdentity
	}).(pulumi.StringPtrOutput)
}

// The Azure Data Lake store name.
func (o AzureDataLakeSectionResponsePtrOutput) StoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataLakeSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.StoreName
	}).(pulumi.StringPtrOutput)
}

// Subscription ID.
func (o AzureDataLakeSectionResponsePtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataLakeSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// The ID of the tenant the service principal/app belongs to.
func (o AzureDataLakeSectionResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataLakeSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate above.
func (o AzureDataLakeSectionResponsePtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataLakeSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

type AzureMySqlSectionResponse struct {
	// The authority URL used for authentication.
	AuthorityUrl *string `pulumi:"authorityUrl"`
	// The content of the certificate used for authentication.
	Certificate *string `pulumi:"certificate"`
	// The Client ID/Application ID
	ClientId *string `pulumi:"clientId"`
	// The client secret.
	ClientSecret *string `pulumi:"clientSecret"`
	// Sql Authentication type.
	CredentialType *string `pulumi:"credentialType"`
	// The Azure SQL database name.
	DatabaseName *string `pulumi:"databaseName"`
	// The server host endpoint.
	Endpoint *string `pulumi:"endpoint"`
	//  Is it using certificate to authenticate. If false then use client secret.
	IsCertAuth *bool `pulumi:"isCertAuth"`
	// / The Azure SQL port number.
	PortNumber *string `pulumi:"portNumber"`
	// Resource Group.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The resource the service principal/app has access to.
	ResourceUri *string `pulumi:"resourceUri"`
	// The Azure SQL server name.
	ServerName *string `pulumi:"serverName"`
	// Indicates which identity to use to authenticate service data access to customer's storage.
	ServiceDataAccessAuthIdentity *string `pulumi:"serviceDataAccessAuthIdentity"`
	// Subscription ID.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// The ID of the tenant the service principal/app belongs to.
	TenantId *string `pulumi:"tenantId"`
	// The thumbprint of the certificate above.
	Thumbprint *string `pulumi:"thumbprint"`
	// The Azure SQL user id.
	UserId *string `pulumi:"userId"`
	// The Azure SQL user password.
	UserPassword *string `pulumi:"userPassword"`
}

// AzureMySqlSectionResponseInput is an input type that accepts AzureMySqlSectionResponseArgs and AzureMySqlSectionResponseOutput values.
// You can construct a concrete instance of `AzureMySqlSectionResponseInput` via:
//
//          AzureMySqlSectionResponseArgs{...}
type AzureMySqlSectionResponseInput interface {
	pulumi.Input

	ToAzureMySqlSectionResponseOutput() AzureMySqlSectionResponseOutput
	ToAzureMySqlSectionResponseOutputWithContext(context.Context) AzureMySqlSectionResponseOutput
}

type AzureMySqlSectionResponseArgs struct {
	// The authority URL used for authentication.
	AuthorityUrl pulumi.StringPtrInput `pulumi:"authorityUrl"`
	// The content of the certificate used for authentication.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The Client ID/Application ID
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The client secret.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Sql Authentication type.
	CredentialType pulumi.StringPtrInput `pulumi:"credentialType"`
	// The Azure SQL database name.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// The server host endpoint.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	//  Is it using certificate to authenticate. If false then use client secret.
	IsCertAuth pulumi.BoolPtrInput `pulumi:"isCertAuth"`
	// / The Azure SQL port number.
	PortNumber pulumi.StringPtrInput `pulumi:"portNumber"`
	// Resource Group.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The resource the service principal/app has access to.
	ResourceUri pulumi.StringPtrInput `pulumi:"resourceUri"`
	// The Azure SQL server name.
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
	// Indicates which identity to use to authenticate service data access to customer's storage.
	ServiceDataAccessAuthIdentity pulumi.StringPtrInput `pulumi:"serviceDataAccessAuthIdentity"`
	// Subscription ID.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// The ID of the tenant the service principal/app belongs to.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The thumbprint of the certificate above.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// The Azure SQL user id.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
	// The Azure SQL user password.
	UserPassword pulumi.StringPtrInput `pulumi:"userPassword"`
}

func (AzureMySqlSectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMySqlSectionResponse)(nil)).Elem()
}

func (i AzureMySqlSectionResponseArgs) ToAzureMySqlSectionResponseOutput() AzureMySqlSectionResponseOutput {
	return i.ToAzureMySqlSectionResponseOutputWithContext(context.Background())
}

func (i AzureMySqlSectionResponseArgs) ToAzureMySqlSectionResponseOutputWithContext(ctx context.Context) AzureMySqlSectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMySqlSectionResponseOutput)
}

func (i AzureMySqlSectionResponseArgs) ToAzureMySqlSectionResponsePtrOutput() AzureMySqlSectionResponsePtrOutput {
	return i.ToAzureMySqlSectionResponsePtrOutputWithContext(context.Background())
}

func (i AzureMySqlSectionResponseArgs) ToAzureMySqlSectionResponsePtrOutputWithContext(ctx context.Context) AzureMySqlSectionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMySqlSectionResponseOutput).ToAzureMySqlSectionResponsePtrOutputWithContext(ctx)
}

// AzureMySqlSectionResponsePtrInput is an input type that accepts AzureMySqlSectionResponseArgs, AzureMySqlSectionResponsePtr and AzureMySqlSectionResponsePtrOutput values.
// You can construct a concrete instance of `AzureMySqlSectionResponsePtrInput` via:
//
//          AzureMySqlSectionResponseArgs{...}
//
//  or:
//
//          nil
type AzureMySqlSectionResponsePtrInput interface {
	pulumi.Input

	ToAzureMySqlSectionResponsePtrOutput() AzureMySqlSectionResponsePtrOutput
	ToAzureMySqlSectionResponsePtrOutputWithContext(context.Context) AzureMySqlSectionResponsePtrOutput
}

type azureMySqlSectionResponsePtrType AzureMySqlSectionResponseArgs

func AzureMySqlSectionResponsePtr(v *AzureMySqlSectionResponseArgs) AzureMySqlSectionResponsePtrInput {
	return (*azureMySqlSectionResponsePtrType)(v)
}

func (*azureMySqlSectionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMySqlSectionResponse)(nil)).Elem()
}

func (i *azureMySqlSectionResponsePtrType) ToAzureMySqlSectionResponsePtrOutput() AzureMySqlSectionResponsePtrOutput {
	return i.ToAzureMySqlSectionResponsePtrOutputWithContext(context.Background())
}

func (i *azureMySqlSectionResponsePtrType) ToAzureMySqlSectionResponsePtrOutputWithContext(ctx context.Context) AzureMySqlSectionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMySqlSectionResponsePtrOutput)
}

type AzureMySqlSectionResponseOutput struct{ *pulumi.OutputState }

func (AzureMySqlSectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMySqlSectionResponse)(nil)).Elem()
}

func (o AzureMySqlSectionResponseOutput) ToAzureMySqlSectionResponseOutput() AzureMySqlSectionResponseOutput {
	return o
}

func (o AzureMySqlSectionResponseOutput) ToAzureMySqlSectionResponseOutputWithContext(ctx context.Context) AzureMySqlSectionResponseOutput {
	return o
}

func (o AzureMySqlSectionResponseOutput) ToAzureMySqlSectionResponsePtrOutput() AzureMySqlSectionResponsePtrOutput {
	return o.ToAzureMySqlSectionResponsePtrOutputWithContext(context.Background())
}

func (o AzureMySqlSectionResponseOutput) ToAzureMySqlSectionResponsePtrOutputWithContext(ctx context.Context) AzureMySqlSectionResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureMySqlSectionResponse) *AzureMySqlSectionResponse {
		return &v
	}).(AzureMySqlSectionResponsePtrOutput)
}

// The authority URL used for authentication.
func (o AzureMySqlSectionResponseOutput) AuthorityUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *string { return v.AuthorityUrl }).(pulumi.StringPtrOutput)
}

// The content of the certificate used for authentication.
func (o AzureMySqlSectionResponseOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The Client ID/Application ID
func (o AzureMySqlSectionResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The client secret.
func (o AzureMySqlSectionResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Sql Authentication type.
func (o AzureMySqlSectionResponseOutput) CredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *string { return v.CredentialType }).(pulumi.StringPtrOutput)
}

// The Azure SQL database name.
func (o AzureMySqlSectionResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// The server host endpoint.
func (o AzureMySqlSectionResponseOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

//  Is it using certificate to authenticate. If false then use client secret.
func (o AzureMySqlSectionResponseOutput) IsCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *bool { return v.IsCertAuth }).(pulumi.BoolPtrOutput)
}

// / The Azure SQL port number.
func (o AzureMySqlSectionResponseOutput) PortNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *string { return v.PortNumber }).(pulumi.StringPtrOutput)
}

// Resource Group.
func (o AzureMySqlSectionResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The resource the service principal/app has access to.
func (o AzureMySqlSectionResponseOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *string { return v.ResourceUri }).(pulumi.StringPtrOutput)
}

// The Azure SQL server name.
func (o AzureMySqlSectionResponseOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Indicates which identity to use to authenticate service data access to customer's storage.
func (o AzureMySqlSectionResponseOutput) ServiceDataAccessAuthIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *string { return v.ServiceDataAccessAuthIdentity }).(pulumi.StringPtrOutput)
}

// Subscription ID.
func (o AzureMySqlSectionResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// The ID of the tenant the service principal/app belongs to.
func (o AzureMySqlSectionResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate above.
func (o AzureMySqlSectionResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// The Azure SQL user id.
func (o AzureMySqlSectionResponseOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

// The Azure SQL user password.
func (o AzureMySqlSectionResponseOutput) UserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMySqlSectionResponse) *string { return v.UserPassword }).(pulumi.StringPtrOutput)
}

type AzureMySqlSectionResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureMySqlSectionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMySqlSectionResponse)(nil)).Elem()
}

func (o AzureMySqlSectionResponsePtrOutput) ToAzureMySqlSectionResponsePtrOutput() AzureMySqlSectionResponsePtrOutput {
	return o
}

func (o AzureMySqlSectionResponsePtrOutput) ToAzureMySqlSectionResponsePtrOutputWithContext(ctx context.Context) AzureMySqlSectionResponsePtrOutput {
	return o
}

func (o AzureMySqlSectionResponsePtrOutput) Elem() AzureMySqlSectionResponseOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) AzureMySqlSectionResponse {
		if v != nil {
			return *v
		}
		var ret AzureMySqlSectionResponse
		return ret
	}).(AzureMySqlSectionResponseOutput)
}

// The authority URL used for authentication.
func (o AzureMySqlSectionResponsePtrOutput) AuthorityUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorityUrl
	}).(pulumi.StringPtrOutput)
}

// The content of the certificate used for authentication.
func (o AzureMySqlSectionResponsePtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

// The Client ID/Application ID
func (o AzureMySqlSectionResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret.
func (o AzureMySqlSectionResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Sql Authentication type.
func (o AzureMySqlSectionResponsePtrOutput) CredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.CredentialType
	}).(pulumi.StringPtrOutput)
}

// The Azure SQL database name.
func (o AzureMySqlSectionResponsePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// The server host endpoint.
func (o AzureMySqlSectionResponsePtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

//  Is it using certificate to authenticate. If false then use client secret.
func (o AzureMySqlSectionResponsePtrOutput) IsCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsCertAuth
	}).(pulumi.BoolPtrOutput)
}

// / The Azure SQL port number.
func (o AzureMySqlSectionResponsePtrOutput) PortNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.PortNumber
	}).(pulumi.StringPtrOutput)
}

// Resource Group.
func (o AzureMySqlSectionResponsePtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// The resource the service principal/app has access to.
func (o AzureMySqlSectionResponsePtrOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceUri
	}).(pulumi.StringPtrOutput)
}

// The Azure SQL server name.
func (o AzureMySqlSectionResponsePtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Indicates which identity to use to authenticate service data access to customer's storage.
func (o AzureMySqlSectionResponsePtrOutput) ServiceDataAccessAuthIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceDataAccessAuthIdentity
	}).(pulumi.StringPtrOutput)
}

// Subscription ID.
func (o AzureMySqlSectionResponsePtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// The ID of the tenant the service principal/app belongs to.
func (o AzureMySqlSectionResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate above.
func (o AzureMySqlSectionResponsePtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// The Azure SQL user id.
func (o AzureMySqlSectionResponsePtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserId
	}).(pulumi.StringPtrOutput)
}

// The Azure SQL user password.
func (o AzureMySqlSectionResponsePtrOutput) UserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMySqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserPassword
	}).(pulumi.StringPtrOutput)
}

type AzurePostgreSqlSectionResponse struct {
	// The authority URL used for authentication.
	AuthorityUrl *string `pulumi:"authorityUrl"`
	// The content of the certificate used for authentication.
	Certificate *string `pulumi:"certificate"`
	// The Client ID/Application ID
	ClientId *string `pulumi:"clientId"`
	// The client secret.
	ClientSecret *string `pulumi:"clientSecret"`
	// Sql Authentication type.
	CredentialType *string `pulumi:"credentialType"`
	// The Azure SQL database name.
	DatabaseName *string `pulumi:"databaseName"`
	// Indicates SSL requirement of Azure Postgresql server.
	EnableSsl *bool `pulumi:"enableSsl"`
	// The server host endpoint.
	Endpoint *string `pulumi:"endpoint"`
	//  Is it using certificate to authenticate. If false then use client secret.
	IsCertAuth *bool `pulumi:"isCertAuth"`
	// / The Azure SQL port number.
	PortNumber *string `pulumi:"portNumber"`
	// Resource Group.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The resource the service principal/app has access to.
	ResourceUri *string `pulumi:"resourceUri"`
	// The Azure SQL server name.
	ServerName *string `pulumi:"serverName"`
	// Indicates which identity to use to authenticate service data access to customer's storage.
	ServiceDataAccessAuthIdentity *string `pulumi:"serviceDataAccessAuthIdentity"`
	// Subscription ID.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// The ID of the tenant the service principal/app belongs to.
	TenantId *string `pulumi:"tenantId"`
	// The thumbprint of the certificate above.
	Thumbprint *string `pulumi:"thumbprint"`
	// The Azure SQL user id.
	UserId *string `pulumi:"userId"`
	// The Azure SQL user password.
	UserPassword *string `pulumi:"userPassword"`
}

// AzurePostgreSqlSectionResponseInput is an input type that accepts AzurePostgreSqlSectionResponseArgs and AzurePostgreSqlSectionResponseOutput values.
// You can construct a concrete instance of `AzurePostgreSqlSectionResponseInput` via:
//
//          AzurePostgreSqlSectionResponseArgs{...}
type AzurePostgreSqlSectionResponseInput interface {
	pulumi.Input

	ToAzurePostgreSqlSectionResponseOutput() AzurePostgreSqlSectionResponseOutput
	ToAzurePostgreSqlSectionResponseOutputWithContext(context.Context) AzurePostgreSqlSectionResponseOutput
}

type AzurePostgreSqlSectionResponseArgs struct {
	// The authority URL used for authentication.
	AuthorityUrl pulumi.StringPtrInput `pulumi:"authorityUrl"`
	// The content of the certificate used for authentication.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The Client ID/Application ID
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The client secret.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Sql Authentication type.
	CredentialType pulumi.StringPtrInput `pulumi:"credentialType"`
	// The Azure SQL database name.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Indicates SSL requirement of Azure Postgresql server.
	EnableSsl pulumi.BoolPtrInput `pulumi:"enableSsl"`
	// The server host endpoint.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	//  Is it using certificate to authenticate. If false then use client secret.
	IsCertAuth pulumi.BoolPtrInput `pulumi:"isCertAuth"`
	// / The Azure SQL port number.
	PortNumber pulumi.StringPtrInput `pulumi:"portNumber"`
	// Resource Group.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The resource the service principal/app has access to.
	ResourceUri pulumi.StringPtrInput `pulumi:"resourceUri"`
	// The Azure SQL server name.
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
	// Indicates which identity to use to authenticate service data access to customer's storage.
	ServiceDataAccessAuthIdentity pulumi.StringPtrInput `pulumi:"serviceDataAccessAuthIdentity"`
	// Subscription ID.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// The ID of the tenant the service principal/app belongs to.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The thumbprint of the certificate above.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// The Azure SQL user id.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
	// The Azure SQL user password.
	UserPassword pulumi.StringPtrInput `pulumi:"userPassword"`
}

func (AzurePostgreSqlSectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePostgreSqlSectionResponse)(nil)).Elem()
}

func (i AzurePostgreSqlSectionResponseArgs) ToAzurePostgreSqlSectionResponseOutput() AzurePostgreSqlSectionResponseOutput {
	return i.ToAzurePostgreSqlSectionResponseOutputWithContext(context.Background())
}

func (i AzurePostgreSqlSectionResponseArgs) ToAzurePostgreSqlSectionResponseOutputWithContext(ctx context.Context) AzurePostgreSqlSectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzurePostgreSqlSectionResponseOutput)
}

func (i AzurePostgreSqlSectionResponseArgs) ToAzurePostgreSqlSectionResponsePtrOutput() AzurePostgreSqlSectionResponsePtrOutput {
	return i.ToAzurePostgreSqlSectionResponsePtrOutputWithContext(context.Background())
}

func (i AzurePostgreSqlSectionResponseArgs) ToAzurePostgreSqlSectionResponsePtrOutputWithContext(ctx context.Context) AzurePostgreSqlSectionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzurePostgreSqlSectionResponseOutput).ToAzurePostgreSqlSectionResponsePtrOutputWithContext(ctx)
}

// AzurePostgreSqlSectionResponsePtrInput is an input type that accepts AzurePostgreSqlSectionResponseArgs, AzurePostgreSqlSectionResponsePtr and AzurePostgreSqlSectionResponsePtrOutput values.
// You can construct a concrete instance of `AzurePostgreSqlSectionResponsePtrInput` via:
//
//          AzurePostgreSqlSectionResponseArgs{...}
//
//  or:
//
//          nil
type AzurePostgreSqlSectionResponsePtrInput interface {
	pulumi.Input

	ToAzurePostgreSqlSectionResponsePtrOutput() AzurePostgreSqlSectionResponsePtrOutput
	ToAzurePostgreSqlSectionResponsePtrOutputWithContext(context.Context) AzurePostgreSqlSectionResponsePtrOutput
}

type azurePostgreSqlSectionResponsePtrType AzurePostgreSqlSectionResponseArgs

func AzurePostgreSqlSectionResponsePtr(v *AzurePostgreSqlSectionResponseArgs) AzurePostgreSqlSectionResponsePtrInput {
	return (*azurePostgreSqlSectionResponsePtrType)(v)
}

func (*azurePostgreSqlSectionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzurePostgreSqlSectionResponse)(nil)).Elem()
}

func (i *azurePostgreSqlSectionResponsePtrType) ToAzurePostgreSqlSectionResponsePtrOutput() AzurePostgreSqlSectionResponsePtrOutput {
	return i.ToAzurePostgreSqlSectionResponsePtrOutputWithContext(context.Background())
}

func (i *azurePostgreSqlSectionResponsePtrType) ToAzurePostgreSqlSectionResponsePtrOutputWithContext(ctx context.Context) AzurePostgreSqlSectionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzurePostgreSqlSectionResponsePtrOutput)
}

type AzurePostgreSqlSectionResponseOutput struct{ *pulumi.OutputState }

func (AzurePostgreSqlSectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePostgreSqlSectionResponse)(nil)).Elem()
}

func (o AzurePostgreSqlSectionResponseOutput) ToAzurePostgreSqlSectionResponseOutput() AzurePostgreSqlSectionResponseOutput {
	return o
}

func (o AzurePostgreSqlSectionResponseOutput) ToAzurePostgreSqlSectionResponseOutputWithContext(ctx context.Context) AzurePostgreSqlSectionResponseOutput {
	return o
}

func (o AzurePostgreSqlSectionResponseOutput) ToAzurePostgreSqlSectionResponsePtrOutput() AzurePostgreSqlSectionResponsePtrOutput {
	return o.ToAzurePostgreSqlSectionResponsePtrOutputWithContext(context.Background())
}

func (o AzurePostgreSqlSectionResponseOutput) ToAzurePostgreSqlSectionResponsePtrOutputWithContext(ctx context.Context) AzurePostgreSqlSectionResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzurePostgreSqlSectionResponse) *AzurePostgreSqlSectionResponse {
		return &v
	}).(AzurePostgreSqlSectionResponsePtrOutput)
}

// The authority URL used for authentication.
func (o AzurePostgreSqlSectionResponseOutput) AuthorityUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *string { return v.AuthorityUrl }).(pulumi.StringPtrOutput)
}

// The content of the certificate used for authentication.
func (o AzurePostgreSqlSectionResponseOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The Client ID/Application ID
func (o AzurePostgreSqlSectionResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The client secret.
func (o AzurePostgreSqlSectionResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Sql Authentication type.
func (o AzurePostgreSqlSectionResponseOutput) CredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *string { return v.CredentialType }).(pulumi.StringPtrOutput)
}

// The Azure SQL database name.
func (o AzurePostgreSqlSectionResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// Indicates SSL requirement of Azure Postgresql server.
func (o AzurePostgreSqlSectionResponseOutput) EnableSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *bool { return v.EnableSsl }).(pulumi.BoolPtrOutput)
}

// The server host endpoint.
func (o AzurePostgreSqlSectionResponseOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

//  Is it using certificate to authenticate. If false then use client secret.
func (o AzurePostgreSqlSectionResponseOutput) IsCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *bool { return v.IsCertAuth }).(pulumi.BoolPtrOutput)
}

// / The Azure SQL port number.
func (o AzurePostgreSqlSectionResponseOutput) PortNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *string { return v.PortNumber }).(pulumi.StringPtrOutput)
}

// Resource Group.
func (o AzurePostgreSqlSectionResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The resource the service principal/app has access to.
func (o AzurePostgreSqlSectionResponseOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *string { return v.ResourceUri }).(pulumi.StringPtrOutput)
}

// The Azure SQL server name.
func (o AzurePostgreSqlSectionResponseOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Indicates which identity to use to authenticate service data access to customer's storage.
func (o AzurePostgreSqlSectionResponseOutput) ServiceDataAccessAuthIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *string { return v.ServiceDataAccessAuthIdentity }).(pulumi.StringPtrOutput)
}

// Subscription ID.
func (o AzurePostgreSqlSectionResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// The ID of the tenant the service principal/app belongs to.
func (o AzurePostgreSqlSectionResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate above.
func (o AzurePostgreSqlSectionResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// The Azure SQL user id.
func (o AzurePostgreSqlSectionResponseOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

// The Azure SQL user password.
func (o AzurePostgreSqlSectionResponseOutput) UserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlSectionResponse) *string { return v.UserPassword }).(pulumi.StringPtrOutput)
}

type AzurePostgreSqlSectionResponsePtrOutput struct{ *pulumi.OutputState }

func (AzurePostgreSqlSectionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzurePostgreSqlSectionResponse)(nil)).Elem()
}

func (o AzurePostgreSqlSectionResponsePtrOutput) ToAzurePostgreSqlSectionResponsePtrOutput() AzurePostgreSqlSectionResponsePtrOutput {
	return o
}

func (o AzurePostgreSqlSectionResponsePtrOutput) ToAzurePostgreSqlSectionResponsePtrOutputWithContext(ctx context.Context) AzurePostgreSqlSectionResponsePtrOutput {
	return o
}

func (o AzurePostgreSqlSectionResponsePtrOutput) Elem() AzurePostgreSqlSectionResponseOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) AzurePostgreSqlSectionResponse {
		if v != nil {
			return *v
		}
		var ret AzurePostgreSqlSectionResponse
		return ret
	}).(AzurePostgreSqlSectionResponseOutput)
}

// The authority URL used for authentication.
func (o AzurePostgreSqlSectionResponsePtrOutput) AuthorityUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorityUrl
	}).(pulumi.StringPtrOutput)
}

// The content of the certificate used for authentication.
func (o AzurePostgreSqlSectionResponsePtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

// The Client ID/Application ID
func (o AzurePostgreSqlSectionResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret.
func (o AzurePostgreSqlSectionResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Sql Authentication type.
func (o AzurePostgreSqlSectionResponsePtrOutput) CredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.CredentialType
	}).(pulumi.StringPtrOutput)
}

// The Azure SQL database name.
func (o AzurePostgreSqlSectionResponsePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// Indicates SSL requirement of Azure Postgresql server.
func (o AzurePostgreSqlSectionResponsePtrOutput) EnableSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSsl
	}).(pulumi.BoolPtrOutput)
}

// The server host endpoint.
func (o AzurePostgreSqlSectionResponsePtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

//  Is it using certificate to authenticate. If false then use client secret.
func (o AzurePostgreSqlSectionResponsePtrOutput) IsCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsCertAuth
	}).(pulumi.BoolPtrOutput)
}

// / The Azure SQL port number.
func (o AzurePostgreSqlSectionResponsePtrOutput) PortNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.PortNumber
	}).(pulumi.StringPtrOutput)
}

// Resource Group.
func (o AzurePostgreSqlSectionResponsePtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// The resource the service principal/app has access to.
func (o AzurePostgreSqlSectionResponsePtrOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceUri
	}).(pulumi.StringPtrOutput)
}

// The Azure SQL server name.
func (o AzurePostgreSqlSectionResponsePtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Indicates which identity to use to authenticate service data access to customer's storage.
func (o AzurePostgreSqlSectionResponsePtrOutput) ServiceDataAccessAuthIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceDataAccessAuthIdentity
	}).(pulumi.StringPtrOutput)
}

// Subscription ID.
func (o AzurePostgreSqlSectionResponsePtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// The ID of the tenant the service principal/app belongs to.
func (o AzurePostgreSqlSectionResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate above.
func (o AzurePostgreSqlSectionResponsePtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// The Azure SQL user id.
func (o AzurePostgreSqlSectionResponsePtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserId
	}).(pulumi.StringPtrOutput)
}

// The Azure SQL user password.
func (o AzurePostgreSqlSectionResponsePtrOutput) UserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzurePostgreSqlSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserPassword
	}).(pulumi.StringPtrOutput)
}

type AzureSqlDatabaseSectionResponse struct {
	// The authority URL used for authentication.
	AuthorityUrl *string `pulumi:"authorityUrl"`
	// The content of the certificate used for authentication.
	Certificate *string `pulumi:"certificate"`
	// The Client ID/Application ID
	ClientId *string `pulumi:"clientId"`
	// The client secret.
	ClientSecret *string `pulumi:"clientSecret"`
	// Sql Authentication type.
	CredentialType *string `pulumi:"credentialType"`
	// The Azure SQL database name.
	DatabaseName *string `pulumi:"databaseName"`
	// The server host endpoint.
	Endpoint *string `pulumi:"endpoint"`
	//  Is it using certificate to authenticate. If false then use client secret.
	IsCertAuth *bool `pulumi:"isCertAuth"`
	// / The Azure SQL port number.
	PortNumber *string `pulumi:"portNumber"`
	// Resource Group.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The resource the service principal/app has access to.
	ResourceUri *string `pulumi:"resourceUri"`
	// The Azure SQL server name.
	ServerName *string `pulumi:"serverName"`
	// Indicates which identity to use to authenticate service data access to customer's storage.
	ServiceDataAccessAuthIdentity *string `pulumi:"serviceDataAccessAuthIdentity"`
	// Subscription ID.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// The ID of the tenant the service principal/app belongs to.
	TenantId *string `pulumi:"tenantId"`
	// The thumbprint of the certificate above.
	Thumbprint *string `pulumi:"thumbprint"`
	// The Azure SQL user id.
	UserId *string `pulumi:"userId"`
	// The Azure SQL user password.
	UserPassword *string `pulumi:"userPassword"`
}

// AzureSqlDatabaseSectionResponseInput is an input type that accepts AzureSqlDatabaseSectionResponseArgs and AzureSqlDatabaseSectionResponseOutput values.
// You can construct a concrete instance of `AzureSqlDatabaseSectionResponseInput` via:
//
//          AzureSqlDatabaseSectionResponseArgs{...}
type AzureSqlDatabaseSectionResponseInput interface {
	pulumi.Input

	ToAzureSqlDatabaseSectionResponseOutput() AzureSqlDatabaseSectionResponseOutput
	ToAzureSqlDatabaseSectionResponseOutputWithContext(context.Context) AzureSqlDatabaseSectionResponseOutput
}

type AzureSqlDatabaseSectionResponseArgs struct {
	// The authority URL used for authentication.
	AuthorityUrl pulumi.StringPtrInput `pulumi:"authorityUrl"`
	// The content of the certificate used for authentication.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The Client ID/Application ID
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The client secret.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Sql Authentication type.
	CredentialType pulumi.StringPtrInput `pulumi:"credentialType"`
	// The Azure SQL database name.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// The server host endpoint.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	//  Is it using certificate to authenticate. If false then use client secret.
	IsCertAuth pulumi.BoolPtrInput `pulumi:"isCertAuth"`
	// / The Azure SQL port number.
	PortNumber pulumi.StringPtrInput `pulumi:"portNumber"`
	// Resource Group.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The resource the service principal/app has access to.
	ResourceUri pulumi.StringPtrInput `pulumi:"resourceUri"`
	// The Azure SQL server name.
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
	// Indicates which identity to use to authenticate service data access to customer's storage.
	ServiceDataAccessAuthIdentity pulumi.StringPtrInput `pulumi:"serviceDataAccessAuthIdentity"`
	// Subscription ID.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// The ID of the tenant the service principal/app belongs to.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The thumbprint of the certificate above.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// The Azure SQL user id.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
	// The Azure SQL user password.
	UserPassword pulumi.StringPtrInput `pulumi:"userPassword"`
}

func (AzureSqlDatabaseSectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseSectionResponse)(nil)).Elem()
}

func (i AzureSqlDatabaseSectionResponseArgs) ToAzureSqlDatabaseSectionResponseOutput() AzureSqlDatabaseSectionResponseOutput {
	return i.ToAzureSqlDatabaseSectionResponseOutputWithContext(context.Background())
}

func (i AzureSqlDatabaseSectionResponseArgs) ToAzureSqlDatabaseSectionResponseOutputWithContext(ctx context.Context) AzureSqlDatabaseSectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseSectionResponseOutput)
}

func (i AzureSqlDatabaseSectionResponseArgs) ToAzureSqlDatabaseSectionResponsePtrOutput() AzureSqlDatabaseSectionResponsePtrOutput {
	return i.ToAzureSqlDatabaseSectionResponsePtrOutputWithContext(context.Background())
}

func (i AzureSqlDatabaseSectionResponseArgs) ToAzureSqlDatabaseSectionResponsePtrOutputWithContext(ctx context.Context) AzureSqlDatabaseSectionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseSectionResponseOutput).ToAzureSqlDatabaseSectionResponsePtrOutputWithContext(ctx)
}

// AzureSqlDatabaseSectionResponsePtrInput is an input type that accepts AzureSqlDatabaseSectionResponseArgs, AzureSqlDatabaseSectionResponsePtr and AzureSqlDatabaseSectionResponsePtrOutput values.
// You can construct a concrete instance of `AzureSqlDatabaseSectionResponsePtrInput` via:
//
//          AzureSqlDatabaseSectionResponseArgs{...}
//
//  or:
//
//          nil
type AzureSqlDatabaseSectionResponsePtrInput interface {
	pulumi.Input

	ToAzureSqlDatabaseSectionResponsePtrOutput() AzureSqlDatabaseSectionResponsePtrOutput
	ToAzureSqlDatabaseSectionResponsePtrOutputWithContext(context.Context) AzureSqlDatabaseSectionResponsePtrOutput
}

type azureSqlDatabaseSectionResponsePtrType AzureSqlDatabaseSectionResponseArgs

func AzureSqlDatabaseSectionResponsePtr(v *AzureSqlDatabaseSectionResponseArgs) AzureSqlDatabaseSectionResponsePtrInput {
	return (*azureSqlDatabaseSectionResponsePtrType)(v)
}

func (*azureSqlDatabaseSectionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlDatabaseSectionResponse)(nil)).Elem()
}

func (i *azureSqlDatabaseSectionResponsePtrType) ToAzureSqlDatabaseSectionResponsePtrOutput() AzureSqlDatabaseSectionResponsePtrOutput {
	return i.ToAzureSqlDatabaseSectionResponsePtrOutputWithContext(context.Background())
}

func (i *azureSqlDatabaseSectionResponsePtrType) ToAzureSqlDatabaseSectionResponsePtrOutputWithContext(ctx context.Context) AzureSqlDatabaseSectionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseSectionResponsePtrOutput)
}

type AzureSqlDatabaseSectionResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseSectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseSectionResponse)(nil)).Elem()
}

func (o AzureSqlDatabaseSectionResponseOutput) ToAzureSqlDatabaseSectionResponseOutput() AzureSqlDatabaseSectionResponseOutput {
	return o
}

func (o AzureSqlDatabaseSectionResponseOutput) ToAzureSqlDatabaseSectionResponseOutputWithContext(ctx context.Context) AzureSqlDatabaseSectionResponseOutput {
	return o
}

func (o AzureSqlDatabaseSectionResponseOutput) ToAzureSqlDatabaseSectionResponsePtrOutput() AzureSqlDatabaseSectionResponsePtrOutput {
	return o.ToAzureSqlDatabaseSectionResponsePtrOutputWithContext(context.Background())
}

func (o AzureSqlDatabaseSectionResponseOutput) ToAzureSqlDatabaseSectionResponsePtrOutputWithContext(ctx context.Context) AzureSqlDatabaseSectionResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSqlDatabaseSectionResponse) *AzureSqlDatabaseSectionResponse {
		return &v
	}).(AzureSqlDatabaseSectionResponsePtrOutput)
}

// The authority URL used for authentication.
func (o AzureSqlDatabaseSectionResponseOutput) AuthorityUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *string { return v.AuthorityUrl }).(pulumi.StringPtrOutput)
}

// The content of the certificate used for authentication.
func (o AzureSqlDatabaseSectionResponseOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The Client ID/Application ID
func (o AzureSqlDatabaseSectionResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The client secret.
func (o AzureSqlDatabaseSectionResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Sql Authentication type.
func (o AzureSqlDatabaseSectionResponseOutput) CredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *string { return v.CredentialType }).(pulumi.StringPtrOutput)
}

// The Azure SQL database name.
func (o AzureSqlDatabaseSectionResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// The server host endpoint.
func (o AzureSqlDatabaseSectionResponseOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

//  Is it using certificate to authenticate. If false then use client secret.
func (o AzureSqlDatabaseSectionResponseOutput) IsCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *bool { return v.IsCertAuth }).(pulumi.BoolPtrOutput)
}

// / The Azure SQL port number.
func (o AzureSqlDatabaseSectionResponseOutput) PortNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *string { return v.PortNumber }).(pulumi.StringPtrOutput)
}

// Resource Group.
func (o AzureSqlDatabaseSectionResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The resource the service principal/app has access to.
func (o AzureSqlDatabaseSectionResponseOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *string { return v.ResourceUri }).(pulumi.StringPtrOutput)
}

// The Azure SQL server name.
func (o AzureSqlDatabaseSectionResponseOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Indicates which identity to use to authenticate service data access to customer's storage.
func (o AzureSqlDatabaseSectionResponseOutput) ServiceDataAccessAuthIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *string { return v.ServiceDataAccessAuthIdentity }).(pulumi.StringPtrOutput)
}

// Subscription ID.
func (o AzureSqlDatabaseSectionResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// The ID of the tenant the service principal/app belongs to.
func (o AzureSqlDatabaseSectionResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate above.
func (o AzureSqlDatabaseSectionResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// The Azure SQL user id.
func (o AzureSqlDatabaseSectionResponseOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

// The Azure SQL user password.
func (o AzureSqlDatabaseSectionResponseOutput) UserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSectionResponse) *string { return v.UserPassword }).(pulumi.StringPtrOutput)
}

type AzureSqlDatabaseSectionResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseSectionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlDatabaseSectionResponse)(nil)).Elem()
}

func (o AzureSqlDatabaseSectionResponsePtrOutput) ToAzureSqlDatabaseSectionResponsePtrOutput() AzureSqlDatabaseSectionResponsePtrOutput {
	return o
}

func (o AzureSqlDatabaseSectionResponsePtrOutput) ToAzureSqlDatabaseSectionResponsePtrOutputWithContext(ctx context.Context) AzureSqlDatabaseSectionResponsePtrOutput {
	return o
}

func (o AzureSqlDatabaseSectionResponsePtrOutput) Elem() AzureSqlDatabaseSectionResponseOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) AzureSqlDatabaseSectionResponse {
		if v != nil {
			return *v
		}
		var ret AzureSqlDatabaseSectionResponse
		return ret
	}).(AzureSqlDatabaseSectionResponseOutput)
}

// The authority URL used for authentication.
func (o AzureSqlDatabaseSectionResponsePtrOutput) AuthorityUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorityUrl
	}).(pulumi.StringPtrOutput)
}

// The content of the certificate used for authentication.
func (o AzureSqlDatabaseSectionResponsePtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

// The Client ID/Application ID
func (o AzureSqlDatabaseSectionResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret.
func (o AzureSqlDatabaseSectionResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Sql Authentication type.
func (o AzureSqlDatabaseSectionResponsePtrOutput) CredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.CredentialType
	}).(pulumi.StringPtrOutput)
}

// The Azure SQL database name.
func (o AzureSqlDatabaseSectionResponsePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// The server host endpoint.
func (o AzureSqlDatabaseSectionResponsePtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

//  Is it using certificate to authenticate. If false then use client secret.
func (o AzureSqlDatabaseSectionResponsePtrOutput) IsCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsCertAuth
	}).(pulumi.BoolPtrOutput)
}

// / The Azure SQL port number.
func (o AzureSqlDatabaseSectionResponsePtrOutput) PortNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.PortNumber
	}).(pulumi.StringPtrOutput)
}

// Resource Group.
func (o AzureSqlDatabaseSectionResponsePtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// The resource the service principal/app has access to.
func (o AzureSqlDatabaseSectionResponsePtrOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceUri
	}).(pulumi.StringPtrOutput)
}

// The Azure SQL server name.
func (o AzureSqlDatabaseSectionResponsePtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Indicates which identity to use to authenticate service data access to customer's storage.
func (o AzureSqlDatabaseSectionResponsePtrOutput) ServiceDataAccessAuthIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceDataAccessAuthIdentity
	}).(pulumi.StringPtrOutput)
}

// Subscription ID.
func (o AzureSqlDatabaseSectionResponsePtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// The ID of the tenant the service principal/app belongs to.
func (o AzureSqlDatabaseSectionResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate above.
func (o AzureSqlDatabaseSectionResponsePtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// The Azure SQL user id.
func (o AzureSqlDatabaseSectionResponsePtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserId
	}).(pulumi.StringPtrOutput)
}

// The Azure SQL user password.
func (o AzureSqlDatabaseSectionResponsePtrOutput) UserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserPassword
	}).(pulumi.StringPtrOutput)
}

type AzureStorageSectionResponse struct {
	//  Storage Account Key (Deprecated).
	AccountKey *string `pulumi:"accountKey"`
	// Storage Account Name.
	AccountName *string `pulumi:"accountName"`
	// Indicate if we are using Workspace ManagedIdentities/MSI token (Deprecated).
	AreWorkspaceManagedIdentitiesAllowed *bool `pulumi:"areWorkspaceManagedIdentitiesAllowed"`
	//  If this is an "DataStoreType.AzureBlob", the length of time (in seconds) to cache files locally after they are accessed (downloaded).
	BlobCacheTimeout  *int                       `pulumi:"blobCacheTimeout"`
	ClientCredentials *ClientCredentialsResponse `pulumi:"clientCredentials"`
	// The storage container name.
	ContainerName *string `pulumi:"containerName"`
	// The credential.
	Credential *string `pulumi:"credential"`
	//  The credential type.
	CredentialType *string `pulumi:"credentialType"`
	// The host of the container.
	Endpoint *string `pulumi:"endpoint"`
	// Indicate if we are using SAS token or Account Key (Deprecated).
	IsSas *bool `pulumi:"isSas"`
	// The protocol to use. Defaults to https.
	Protocol *string `pulumi:"protocol"`
	// Resource Group.
	ResourceGroup *string `pulumi:"resourceGroup"`
	//  SAS Token for the container (Deprecated).
	SasToken *string `pulumi:"sasToken"`
	// Indicates which identity to use to authenticate service data access to customer's storage.
	ServiceDataAccessAuthIdentity *string `pulumi:"serviceDataAccessAuthIdentity"`
	// Subscription ID.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// AzureStorageSectionResponseInput is an input type that accepts AzureStorageSectionResponseArgs and AzureStorageSectionResponseOutput values.
// You can construct a concrete instance of `AzureStorageSectionResponseInput` via:
//
//          AzureStorageSectionResponseArgs{...}
type AzureStorageSectionResponseInput interface {
	pulumi.Input

	ToAzureStorageSectionResponseOutput() AzureStorageSectionResponseOutput
	ToAzureStorageSectionResponseOutputWithContext(context.Context) AzureStorageSectionResponseOutput
}

type AzureStorageSectionResponseArgs struct {
	//  Storage Account Key (Deprecated).
	AccountKey pulumi.StringPtrInput `pulumi:"accountKey"`
	// Storage Account Name.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// Indicate if we are using Workspace ManagedIdentities/MSI token (Deprecated).
	AreWorkspaceManagedIdentitiesAllowed pulumi.BoolPtrInput `pulumi:"areWorkspaceManagedIdentitiesAllowed"`
	//  If this is an "DataStoreType.AzureBlob", the length of time (in seconds) to cache files locally after they are accessed (downloaded).
	BlobCacheTimeout  pulumi.IntPtrInput                `pulumi:"blobCacheTimeout"`
	ClientCredentials ClientCredentialsResponsePtrInput `pulumi:"clientCredentials"`
	// The storage container name.
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// The credential.
	Credential pulumi.StringPtrInput `pulumi:"credential"`
	//  The credential type.
	CredentialType pulumi.StringPtrInput `pulumi:"credentialType"`
	// The host of the container.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// Indicate if we are using SAS token or Account Key (Deprecated).
	IsSas pulumi.BoolPtrInput `pulumi:"isSas"`
	// The protocol to use. Defaults to https.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Resource Group.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	//  SAS Token for the container (Deprecated).
	SasToken pulumi.StringPtrInput `pulumi:"sasToken"`
	// Indicates which identity to use to authenticate service data access to customer's storage.
	ServiceDataAccessAuthIdentity pulumi.StringPtrInput `pulumi:"serviceDataAccessAuthIdentity"`
	// Subscription ID.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (AzureStorageSectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageSectionResponse)(nil)).Elem()
}

func (i AzureStorageSectionResponseArgs) ToAzureStorageSectionResponseOutput() AzureStorageSectionResponseOutput {
	return i.ToAzureStorageSectionResponseOutputWithContext(context.Background())
}

func (i AzureStorageSectionResponseArgs) ToAzureStorageSectionResponseOutputWithContext(ctx context.Context) AzureStorageSectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageSectionResponseOutput)
}

func (i AzureStorageSectionResponseArgs) ToAzureStorageSectionResponsePtrOutput() AzureStorageSectionResponsePtrOutput {
	return i.ToAzureStorageSectionResponsePtrOutputWithContext(context.Background())
}

func (i AzureStorageSectionResponseArgs) ToAzureStorageSectionResponsePtrOutputWithContext(ctx context.Context) AzureStorageSectionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageSectionResponseOutput).ToAzureStorageSectionResponsePtrOutputWithContext(ctx)
}

// AzureStorageSectionResponsePtrInput is an input type that accepts AzureStorageSectionResponseArgs, AzureStorageSectionResponsePtr and AzureStorageSectionResponsePtrOutput values.
// You can construct a concrete instance of `AzureStorageSectionResponsePtrInput` via:
//
//          AzureStorageSectionResponseArgs{...}
//
//  or:
//
//          nil
type AzureStorageSectionResponsePtrInput interface {
	pulumi.Input

	ToAzureStorageSectionResponsePtrOutput() AzureStorageSectionResponsePtrOutput
	ToAzureStorageSectionResponsePtrOutputWithContext(context.Context) AzureStorageSectionResponsePtrOutput
}

type azureStorageSectionResponsePtrType AzureStorageSectionResponseArgs

func AzureStorageSectionResponsePtr(v *AzureStorageSectionResponseArgs) AzureStorageSectionResponsePtrInput {
	return (*azureStorageSectionResponsePtrType)(v)
}

func (*azureStorageSectionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStorageSectionResponse)(nil)).Elem()
}

func (i *azureStorageSectionResponsePtrType) ToAzureStorageSectionResponsePtrOutput() AzureStorageSectionResponsePtrOutput {
	return i.ToAzureStorageSectionResponsePtrOutputWithContext(context.Background())
}

func (i *azureStorageSectionResponsePtrType) ToAzureStorageSectionResponsePtrOutputWithContext(ctx context.Context) AzureStorageSectionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageSectionResponsePtrOutput)
}

type AzureStorageSectionResponseOutput struct{ *pulumi.OutputState }

func (AzureStorageSectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageSectionResponse)(nil)).Elem()
}

func (o AzureStorageSectionResponseOutput) ToAzureStorageSectionResponseOutput() AzureStorageSectionResponseOutput {
	return o
}

func (o AzureStorageSectionResponseOutput) ToAzureStorageSectionResponseOutputWithContext(ctx context.Context) AzureStorageSectionResponseOutput {
	return o
}

func (o AzureStorageSectionResponseOutput) ToAzureStorageSectionResponsePtrOutput() AzureStorageSectionResponsePtrOutput {
	return o.ToAzureStorageSectionResponsePtrOutputWithContext(context.Background())
}

func (o AzureStorageSectionResponseOutput) ToAzureStorageSectionResponsePtrOutputWithContext(ctx context.Context) AzureStorageSectionResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureStorageSectionResponse) *AzureStorageSectionResponse {
		return &v
	}).(AzureStorageSectionResponsePtrOutput)
}

//  Storage Account Key (Deprecated).
func (o AzureStorageSectionResponseOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageSectionResponse) *string { return v.AccountKey }).(pulumi.StringPtrOutput)
}

// Storage Account Name.
func (o AzureStorageSectionResponseOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageSectionResponse) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// Indicate if we are using Workspace ManagedIdentities/MSI token (Deprecated).
func (o AzureStorageSectionResponseOutput) AreWorkspaceManagedIdentitiesAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureStorageSectionResponse) *bool { return v.AreWorkspaceManagedIdentitiesAllowed }).(pulumi.BoolPtrOutput)
}

//  If this is an "DataStoreType.AzureBlob", the length of time (in seconds) to cache files locally after they are accessed (downloaded).
func (o AzureStorageSectionResponseOutput) BlobCacheTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureStorageSectionResponse) *int { return v.BlobCacheTimeout }).(pulumi.IntPtrOutput)
}

func (o AzureStorageSectionResponseOutput) ClientCredentials() ClientCredentialsResponsePtrOutput {
	return o.ApplyT(func(v AzureStorageSectionResponse) *ClientCredentialsResponse { return v.ClientCredentials }).(ClientCredentialsResponsePtrOutput)
}

// The storage container name.
func (o AzureStorageSectionResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageSectionResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// The credential.
func (o AzureStorageSectionResponseOutput) Credential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageSectionResponse) *string { return v.Credential }).(pulumi.StringPtrOutput)
}

//  The credential type.
func (o AzureStorageSectionResponseOutput) CredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageSectionResponse) *string { return v.CredentialType }).(pulumi.StringPtrOutput)
}

// The host of the container.
func (o AzureStorageSectionResponseOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageSectionResponse) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// Indicate if we are using SAS token or Account Key (Deprecated).
func (o AzureStorageSectionResponseOutput) IsSas() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureStorageSectionResponse) *bool { return v.IsSas }).(pulumi.BoolPtrOutput)
}

// The protocol to use. Defaults to https.
func (o AzureStorageSectionResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageSectionResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Resource Group.
func (o AzureStorageSectionResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageSectionResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

//  SAS Token for the container (Deprecated).
func (o AzureStorageSectionResponseOutput) SasToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageSectionResponse) *string { return v.SasToken }).(pulumi.StringPtrOutput)
}

// Indicates which identity to use to authenticate service data access to customer's storage.
func (o AzureStorageSectionResponseOutput) ServiceDataAccessAuthIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageSectionResponse) *string { return v.ServiceDataAccessAuthIdentity }).(pulumi.StringPtrOutput)
}

// Subscription ID.
func (o AzureStorageSectionResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageSectionResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type AzureStorageSectionResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureStorageSectionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStorageSectionResponse)(nil)).Elem()
}

func (o AzureStorageSectionResponsePtrOutput) ToAzureStorageSectionResponsePtrOutput() AzureStorageSectionResponsePtrOutput {
	return o
}

func (o AzureStorageSectionResponsePtrOutput) ToAzureStorageSectionResponsePtrOutputWithContext(ctx context.Context) AzureStorageSectionResponsePtrOutput {
	return o
}

func (o AzureStorageSectionResponsePtrOutput) Elem() AzureStorageSectionResponseOutput {
	return o.ApplyT(func(v *AzureStorageSectionResponse) AzureStorageSectionResponse {
		if v != nil {
			return *v
		}
		var ret AzureStorageSectionResponse
		return ret
	}).(AzureStorageSectionResponseOutput)
}

//  Storage Account Key (Deprecated).
func (o AzureStorageSectionResponsePtrOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.AccountKey
	}).(pulumi.StringPtrOutput)
}

// Storage Account Name.
func (o AzureStorageSectionResponsePtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

// Indicate if we are using Workspace ManagedIdentities/MSI token (Deprecated).
func (o AzureStorageSectionResponsePtrOutput) AreWorkspaceManagedIdentitiesAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureStorageSectionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AreWorkspaceManagedIdentitiesAllowed
	}).(pulumi.BoolPtrOutput)
}

//  If this is an "DataStoreType.AzureBlob", the length of time (in seconds) to cache files locally after they are accessed (downloaded).
func (o AzureStorageSectionResponsePtrOutput) BlobCacheTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureStorageSectionResponse) *int {
		if v == nil {
			return nil
		}
		return v.BlobCacheTimeout
	}).(pulumi.IntPtrOutput)
}

func (o AzureStorageSectionResponsePtrOutput) ClientCredentials() ClientCredentialsResponsePtrOutput {
	return o.ApplyT(func(v *AzureStorageSectionResponse) *ClientCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.ClientCredentials
	}).(ClientCredentialsResponsePtrOutput)
}

// The storage container name.
func (o AzureStorageSectionResponsePtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// The credential.
func (o AzureStorageSectionResponsePtrOutput) Credential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Credential
	}).(pulumi.StringPtrOutput)
}

//  The credential type.
func (o AzureStorageSectionResponsePtrOutput) CredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.CredentialType
	}).(pulumi.StringPtrOutput)
}

// The host of the container.
func (o AzureStorageSectionResponsePtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// Indicate if we are using SAS token or Account Key (Deprecated).
func (o AzureStorageSectionResponsePtrOutput) IsSas() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureStorageSectionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsSas
	}).(pulumi.BoolPtrOutput)
}

// The protocol to use. Defaults to https.
func (o AzureStorageSectionResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Resource Group.
func (o AzureStorageSectionResponsePtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

//  SAS Token for the container (Deprecated).
func (o AzureStorageSectionResponsePtrOutput) SasToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.SasToken
	}).(pulumi.StringPtrOutput)
}

// Indicates which identity to use to authenticate service data access to customer's storage.
func (o AzureStorageSectionResponsePtrOutput) ServiceDataAccessAuthIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceDataAccessAuthIdentity
	}).(pulumi.StringPtrOutput)
}

// Subscription ID.
func (o AzureStorageSectionResponsePtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageSectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

type BanditPolicy struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'Bandit'.
	PolicyType string `pulumi:"policyType"`
	// Absolute distance allowed from the best performing run.
	SlackAmount *float64 `pulumi:"slackAmount"`
	// Ratio of the allowed distance from the best performing run.
	SlackFactor *float64 `pulumi:"slackFactor"`
}

// BanditPolicyInput is an input type that accepts BanditPolicyArgs and BanditPolicyOutput values.
// You can construct a concrete instance of `BanditPolicyInput` via:
//
//          BanditPolicyArgs{...}
type BanditPolicyInput interface {
	pulumi.Input

	ToBanditPolicyOutput() BanditPolicyOutput
	ToBanditPolicyOutputWithContext(context.Context) BanditPolicyOutput
}

type BanditPolicyArgs struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation pulumi.IntPtrInput `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval pulumi.IntPtrInput `pulumi:"evaluationInterval"`
	// Expected value is 'Bandit'.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// Absolute distance allowed from the best performing run.
	SlackAmount pulumi.Float64PtrInput `pulumi:"slackAmount"`
	// Ratio of the allowed distance from the best performing run.
	SlackFactor pulumi.Float64PtrInput `pulumi:"slackFactor"`
}

func (BanditPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BanditPolicy)(nil)).Elem()
}

func (i BanditPolicyArgs) ToBanditPolicyOutput() BanditPolicyOutput {
	return i.ToBanditPolicyOutputWithContext(context.Background())
}

func (i BanditPolicyArgs) ToBanditPolicyOutputWithContext(ctx context.Context) BanditPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BanditPolicyOutput)
}

type BanditPolicyOutput struct{ *pulumi.OutputState }

func (BanditPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BanditPolicy)(nil)).Elem()
}

func (o BanditPolicyOutput) ToBanditPolicyOutput() BanditPolicyOutput {
	return o
}

func (o BanditPolicyOutput) ToBanditPolicyOutputWithContext(ctx context.Context) BanditPolicyOutput {
	return o
}

// Number of intervals by which to delay the first evaluation.
func (o BanditPolicyOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BanditPolicy) *int { return v.DelayEvaluation }).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o BanditPolicyOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BanditPolicy) *int { return v.EvaluationInterval }).(pulumi.IntPtrOutput)
}

// Expected value is 'Bandit'.
func (o BanditPolicyOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v BanditPolicy) string { return v.PolicyType }).(pulumi.StringOutput)
}

// Absolute distance allowed from the best performing run.
func (o BanditPolicyOutput) SlackAmount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BanditPolicy) *float64 { return v.SlackAmount }).(pulumi.Float64PtrOutput)
}

// Ratio of the allowed distance from the best performing run.
func (o BanditPolicyOutput) SlackFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BanditPolicy) *float64 { return v.SlackFactor }).(pulumi.Float64PtrOutput)
}

type BanditPolicyResponse struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'Bandit'.
	PolicyType string `pulumi:"policyType"`
	// Absolute distance allowed from the best performing run.
	SlackAmount *float64 `pulumi:"slackAmount"`
	// Ratio of the allowed distance from the best performing run.
	SlackFactor *float64 `pulumi:"slackFactor"`
}

// BanditPolicyResponseInput is an input type that accepts BanditPolicyResponseArgs and BanditPolicyResponseOutput values.
// You can construct a concrete instance of `BanditPolicyResponseInput` via:
//
//          BanditPolicyResponseArgs{...}
type BanditPolicyResponseInput interface {
	pulumi.Input

	ToBanditPolicyResponseOutput() BanditPolicyResponseOutput
	ToBanditPolicyResponseOutputWithContext(context.Context) BanditPolicyResponseOutput
}

type BanditPolicyResponseArgs struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation pulumi.IntPtrInput `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval pulumi.IntPtrInput `pulumi:"evaluationInterval"`
	// Expected value is 'Bandit'.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// Absolute distance allowed from the best performing run.
	SlackAmount pulumi.Float64PtrInput `pulumi:"slackAmount"`
	// Ratio of the allowed distance from the best performing run.
	SlackFactor pulumi.Float64PtrInput `pulumi:"slackFactor"`
}

func (BanditPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BanditPolicyResponse)(nil)).Elem()
}

func (i BanditPolicyResponseArgs) ToBanditPolicyResponseOutput() BanditPolicyResponseOutput {
	return i.ToBanditPolicyResponseOutputWithContext(context.Background())
}

func (i BanditPolicyResponseArgs) ToBanditPolicyResponseOutputWithContext(ctx context.Context) BanditPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BanditPolicyResponseOutput)
}

type BanditPolicyResponseOutput struct{ *pulumi.OutputState }

func (BanditPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BanditPolicyResponse)(nil)).Elem()
}

func (o BanditPolicyResponseOutput) ToBanditPolicyResponseOutput() BanditPolicyResponseOutput {
	return o
}

func (o BanditPolicyResponseOutput) ToBanditPolicyResponseOutputWithContext(ctx context.Context) BanditPolicyResponseOutput {
	return o
}

// Number of intervals by which to delay the first evaluation.
func (o BanditPolicyResponseOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BanditPolicyResponse) *int { return v.DelayEvaluation }).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o BanditPolicyResponseOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BanditPolicyResponse) *int { return v.EvaluationInterval }).(pulumi.IntPtrOutput)
}

// Expected value is 'Bandit'.
func (o BanditPolicyResponseOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v BanditPolicyResponse) string { return v.PolicyType }).(pulumi.StringOutput)
}

// Absolute distance allowed from the best performing run.
func (o BanditPolicyResponseOutput) SlackAmount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BanditPolicyResponse) *float64 { return v.SlackAmount }).(pulumi.Float64PtrOutput)
}

// Ratio of the allowed distance from the best performing run.
func (o BanditPolicyResponseOutput) SlackFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BanditPolicyResponse) *float64 { return v.SlackFactor }).(pulumi.Float64PtrOutput)
}

type BatchDeploymentType struct {
	// Code configuration for the endpoint deployment.
	CodeConfiguration *CodeConfiguration `pulumi:"codeConfiguration"`
	// Configuration for compute binding.
	Compute *ComputeConfiguration `pulumi:"compute"`
	// Description of the endpoint deployment.
	Description *string `pulumi:"description"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Error threshold, if the error count for the entire input goes above this value,
	// the batch inference will be aborted. Range is [-1, int.MaxValue].
	// For FileDataset, this value is the count of file failures.
	// For TabularDataset, this value is the count of record failures.
	// If set to -1 (the lower bound), all failures during batch inference will be ignored.
	ErrorThreshold *int `pulumi:"errorThreshold"`
	// Logging level for batch inference operation.
	LoggingLevel *string `pulumi:"loggingLevel"`
	// Size of the mini-batch passed to each batch invocation.
	// For FileDataset, this is the number of files per mini-batch.
	// For TabularDataset, this is the size of the records in bytes, per mini-batch.
	MiniBatchSize *float64 `pulumi:"miniBatchSize"`
	// Reference to the model asset for the endpoint deployment.
	Model interface{} `pulumi:"model"`
	// Output configuration for the batch inference operation.
	OutputConfiguration *BatchOutputConfiguration `pulumi:"outputConfiguration"`
	// Partition keys list used for Named partitioning.
	PartitionKeys []string `pulumi:"partitionKeys"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// Retry Settings for the batch inference operation.
	RetrySettings *BatchRetrySettings `pulumi:"retrySettings"`
}

// BatchDeploymentTypeInput is an input type that accepts BatchDeploymentTypeArgs and BatchDeploymentTypeOutput values.
// You can construct a concrete instance of `BatchDeploymentTypeInput` via:
//
//          BatchDeploymentTypeArgs{...}
type BatchDeploymentTypeInput interface {
	pulumi.Input

	ToBatchDeploymentTypeOutput() BatchDeploymentTypeOutput
	ToBatchDeploymentTypeOutputWithContext(context.Context) BatchDeploymentTypeOutput
}

type BatchDeploymentTypeArgs struct {
	// Code configuration for the endpoint deployment.
	CodeConfiguration CodeConfigurationPtrInput `pulumi:"codeConfiguration"`
	// Configuration for compute binding.
	Compute ComputeConfigurationPtrInput `pulumi:"compute"`
	// Description of the endpoint deployment.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// Error threshold, if the error count for the entire input goes above this value,
	// the batch inference will be aborted. Range is [-1, int.MaxValue].
	// For FileDataset, this value is the count of file failures.
	// For TabularDataset, this value is the count of record failures.
	// If set to -1 (the lower bound), all failures during batch inference will be ignored.
	ErrorThreshold pulumi.IntPtrInput `pulumi:"errorThreshold"`
	// Logging level for batch inference operation.
	LoggingLevel pulumi.StringPtrInput `pulumi:"loggingLevel"`
	// Size of the mini-batch passed to each batch invocation.
	// For FileDataset, this is the number of files per mini-batch.
	// For TabularDataset, this is the size of the records in bytes, per mini-batch.
	MiniBatchSize pulumi.Float64PtrInput `pulumi:"miniBatchSize"`
	// Reference to the model asset for the endpoint deployment.
	Model pulumi.Input `pulumi:"model"`
	// Output configuration for the batch inference operation.
	OutputConfiguration BatchOutputConfigurationPtrInput `pulumi:"outputConfiguration"`
	// Partition keys list used for Named partitioning.
	PartitionKeys pulumi.StringArrayInput `pulumi:"partitionKeys"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Retry Settings for the batch inference operation.
	RetrySettings BatchRetrySettingsPtrInput `pulumi:"retrySettings"`
}

func (BatchDeploymentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchDeploymentType)(nil)).Elem()
}

func (i BatchDeploymentTypeArgs) ToBatchDeploymentTypeOutput() BatchDeploymentTypeOutput {
	return i.ToBatchDeploymentTypeOutputWithContext(context.Background())
}

func (i BatchDeploymentTypeArgs) ToBatchDeploymentTypeOutputWithContext(ctx context.Context) BatchDeploymentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchDeploymentTypeOutput)
}

func (i BatchDeploymentTypeArgs) ToBatchDeploymentTypePtrOutput() BatchDeploymentTypePtrOutput {
	return i.ToBatchDeploymentTypePtrOutputWithContext(context.Background())
}

func (i BatchDeploymentTypeArgs) ToBatchDeploymentTypePtrOutputWithContext(ctx context.Context) BatchDeploymentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchDeploymentTypeOutput).ToBatchDeploymentTypePtrOutputWithContext(ctx)
}

// BatchDeploymentTypePtrInput is an input type that accepts BatchDeploymentTypeArgs, BatchDeploymentTypePtr and BatchDeploymentTypePtrOutput values.
// You can construct a concrete instance of `BatchDeploymentTypePtrInput` via:
//
//          BatchDeploymentTypeArgs{...}
//
//  or:
//
//          nil
type BatchDeploymentTypePtrInput interface {
	pulumi.Input

	ToBatchDeploymentTypePtrOutput() BatchDeploymentTypePtrOutput
	ToBatchDeploymentTypePtrOutputWithContext(context.Context) BatchDeploymentTypePtrOutput
}

type batchDeploymentTypePtrType BatchDeploymentTypeArgs

func BatchDeploymentTypePtr(v *BatchDeploymentTypeArgs) BatchDeploymentTypePtrInput {
	return (*batchDeploymentTypePtrType)(v)
}

func (*batchDeploymentTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchDeploymentType)(nil)).Elem()
}

func (i *batchDeploymentTypePtrType) ToBatchDeploymentTypePtrOutput() BatchDeploymentTypePtrOutput {
	return i.ToBatchDeploymentTypePtrOutputWithContext(context.Background())
}

func (i *batchDeploymentTypePtrType) ToBatchDeploymentTypePtrOutputWithContext(ctx context.Context) BatchDeploymentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchDeploymentTypePtrOutput)
}

type BatchDeploymentTypeOutput struct{ *pulumi.OutputState }

func (BatchDeploymentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchDeploymentType)(nil)).Elem()
}

func (o BatchDeploymentTypeOutput) ToBatchDeploymentTypeOutput() BatchDeploymentTypeOutput {
	return o
}

func (o BatchDeploymentTypeOutput) ToBatchDeploymentTypeOutputWithContext(ctx context.Context) BatchDeploymentTypeOutput {
	return o
}

func (o BatchDeploymentTypeOutput) ToBatchDeploymentTypePtrOutput() BatchDeploymentTypePtrOutput {
	return o.ToBatchDeploymentTypePtrOutputWithContext(context.Background())
}

func (o BatchDeploymentTypeOutput) ToBatchDeploymentTypePtrOutputWithContext(ctx context.Context) BatchDeploymentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BatchDeploymentType) *BatchDeploymentType {
		return &v
	}).(BatchDeploymentTypePtrOutput)
}

// Code configuration for the endpoint deployment.
func (o BatchDeploymentTypeOutput) CodeConfiguration() CodeConfigurationPtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *CodeConfiguration { return v.CodeConfiguration }).(CodeConfigurationPtrOutput)
}

// Configuration for compute binding.
func (o BatchDeploymentTypeOutput) Compute() ComputeConfigurationPtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *ComputeConfiguration { return v.Compute }).(ComputeConfigurationPtrOutput)
}

// Description of the endpoint deployment.
func (o BatchDeploymentTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// ARM resource ID of the environment specification for the endpoint deployment.
func (o BatchDeploymentTypeOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables configuration for the deployment.
func (o BatchDeploymentTypeOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v BatchDeploymentType) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Error threshold, if the error count for the entire input goes above this value,
// the batch inference will be aborted. Range is [-1, int.MaxValue].
// For FileDataset, this value is the count of file failures.
// For TabularDataset, this value is the count of record failures.
// If set to -1 (the lower bound), all failures during batch inference will be ignored.
func (o BatchDeploymentTypeOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *int { return v.ErrorThreshold }).(pulumi.IntPtrOutput)
}

// Logging level for batch inference operation.
func (o BatchDeploymentTypeOutput) LoggingLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *string { return v.LoggingLevel }).(pulumi.StringPtrOutput)
}

// Size of the mini-batch passed to each batch invocation.
// For FileDataset, this is the number of files per mini-batch.
// For TabularDataset, this is the size of the records in bytes, per mini-batch.
func (o BatchDeploymentTypeOutput) MiniBatchSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *float64 { return v.MiniBatchSize }).(pulumi.Float64PtrOutput)
}

// Reference to the model asset for the endpoint deployment.
func (o BatchDeploymentTypeOutput) Model() pulumi.AnyOutput {
	return o.ApplyT(func(v BatchDeploymentType) interface{} { return v.Model }).(pulumi.AnyOutput)
}

// Output configuration for the batch inference operation.
func (o BatchDeploymentTypeOutput) OutputConfiguration() BatchOutputConfigurationPtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *BatchOutputConfiguration { return v.OutputConfiguration }).(BatchOutputConfigurationPtrOutput)
}

// Partition keys list used for Named partitioning.
func (o BatchDeploymentTypeOutput) PartitionKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BatchDeploymentType) []string { return v.PartitionKeys }).(pulumi.StringArrayOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o BatchDeploymentTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v BatchDeploymentType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Retry Settings for the batch inference operation.
func (o BatchDeploymentTypeOutput) RetrySettings() BatchRetrySettingsPtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *BatchRetrySettings { return v.RetrySettings }).(BatchRetrySettingsPtrOutput)
}

type BatchDeploymentTypePtrOutput struct{ *pulumi.OutputState }

func (BatchDeploymentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchDeploymentType)(nil)).Elem()
}

func (o BatchDeploymentTypePtrOutput) ToBatchDeploymentTypePtrOutput() BatchDeploymentTypePtrOutput {
	return o
}

func (o BatchDeploymentTypePtrOutput) ToBatchDeploymentTypePtrOutputWithContext(ctx context.Context) BatchDeploymentTypePtrOutput {
	return o
}

func (o BatchDeploymentTypePtrOutput) Elem() BatchDeploymentTypeOutput {
	return o.ApplyT(func(v *BatchDeploymentType) BatchDeploymentType {
		if v != nil {
			return *v
		}
		var ret BatchDeploymentType
		return ret
	}).(BatchDeploymentTypeOutput)
}

// Code configuration for the endpoint deployment.
func (o BatchDeploymentTypePtrOutput) CodeConfiguration() CodeConfigurationPtrOutput {
	return o.ApplyT(func(v *BatchDeploymentType) *CodeConfiguration {
		if v == nil {
			return nil
		}
		return v.CodeConfiguration
	}).(CodeConfigurationPtrOutput)
}

// Configuration for compute binding.
func (o BatchDeploymentTypePtrOutput) Compute() ComputeConfigurationPtrOutput {
	return o.ApplyT(func(v *BatchDeploymentType) *ComputeConfiguration {
		if v == nil {
			return nil
		}
		return v.Compute
	}).(ComputeConfigurationPtrOutput)
}

// Description of the endpoint deployment.
func (o BatchDeploymentTypePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchDeploymentType) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// ARM resource ID of the environment specification for the endpoint deployment.
func (o BatchDeploymentTypePtrOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchDeploymentType) *string {
		if v == nil {
			return nil
		}
		return v.EnvironmentId
	}).(pulumi.StringPtrOutput)
}

// Environment variables configuration for the deployment.
func (o BatchDeploymentTypePtrOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BatchDeploymentType) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// Error threshold, if the error count for the entire input goes above this value,
// the batch inference will be aborted. Range is [-1, int.MaxValue].
// For FileDataset, this value is the count of file failures.
// For TabularDataset, this value is the count of record failures.
// If set to -1 (the lower bound), all failures during batch inference will be ignored.
func (o BatchDeploymentTypePtrOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchDeploymentType) *int {
		if v == nil {
			return nil
		}
		return v.ErrorThreshold
	}).(pulumi.IntPtrOutput)
}

// Logging level for batch inference operation.
func (o BatchDeploymentTypePtrOutput) LoggingLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchDeploymentType) *string {
		if v == nil {
			return nil
		}
		return v.LoggingLevel
	}).(pulumi.StringPtrOutput)
}

// Size of the mini-batch passed to each batch invocation.
// For FileDataset, this is the number of files per mini-batch.
// For TabularDataset, this is the size of the records in bytes, per mini-batch.
func (o BatchDeploymentTypePtrOutput) MiniBatchSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BatchDeploymentType) *float64 {
		if v == nil {
			return nil
		}
		return v.MiniBatchSize
	}).(pulumi.Float64PtrOutput)
}

// Reference to the model asset for the endpoint deployment.
func (o BatchDeploymentTypePtrOutput) Model() pulumi.AnyOutput {
	return o.ApplyT(func(v *BatchDeploymentType) interface{} {
		if v == nil {
			return nil
		}
		return v.Model
	}).(pulumi.AnyOutput)
}

// Output configuration for the batch inference operation.
func (o BatchDeploymentTypePtrOutput) OutputConfiguration() BatchOutputConfigurationPtrOutput {
	return o.ApplyT(func(v *BatchDeploymentType) *BatchOutputConfiguration {
		if v == nil {
			return nil
		}
		return v.OutputConfiguration
	}).(BatchOutputConfigurationPtrOutput)
}

// Partition keys list used for Named partitioning.
func (o BatchDeploymentTypePtrOutput) PartitionKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BatchDeploymentType) []string {
		if v == nil {
			return nil
		}
		return v.PartitionKeys
	}).(pulumi.StringArrayOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o BatchDeploymentTypePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BatchDeploymentType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Retry Settings for the batch inference operation.
func (o BatchDeploymentTypePtrOutput) RetrySettings() BatchRetrySettingsPtrOutput {
	return o.ApplyT(func(v *BatchDeploymentType) *BatchRetrySettings {
		if v == nil {
			return nil
		}
		return v.RetrySettings
	}).(BatchRetrySettingsPtrOutput)
}

type BatchDeploymentResponse struct {
	// Code configuration for the endpoint deployment.
	CodeConfiguration *CodeConfigurationResponse `pulumi:"codeConfiguration"`
	// Configuration for compute binding.
	Compute *ComputeConfigurationResponse `pulumi:"compute"`
	// Description of the endpoint deployment.
	Description *string `pulumi:"description"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Error threshold, if the error count for the entire input goes above this value,
	// the batch inference will be aborted. Range is [-1, int.MaxValue].
	// For FileDataset, this value is the count of file failures.
	// For TabularDataset, this value is the count of record failures.
	// If set to -1 (the lower bound), all failures during batch inference will be ignored.
	ErrorThreshold *int `pulumi:"errorThreshold"`
	// Logging level for batch inference operation.
	LoggingLevel *string `pulumi:"loggingLevel"`
	// Size of the mini-batch passed to each batch invocation.
	// For FileDataset, this is the number of files per mini-batch.
	// For TabularDataset, this is the size of the records in bytes, per mini-batch.
	MiniBatchSize *float64 `pulumi:"miniBatchSize"`
	// Reference to the model asset for the endpoint deployment.
	Model interface{} `pulumi:"model"`
	// Output configuration for the batch inference operation.
	OutputConfiguration *BatchOutputConfigurationResponse `pulumi:"outputConfiguration"`
	// Partition keys list used for Named partitioning.
	PartitionKeys []string `pulumi:"partitionKeys"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// Retry Settings for the batch inference operation.
	RetrySettings *BatchRetrySettingsResponse `pulumi:"retrySettings"`
}

// BatchDeploymentResponseInput is an input type that accepts BatchDeploymentResponseArgs and BatchDeploymentResponseOutput values.
// You can construct a concrete instance of `BatchDeploymentResponseInput` via:
//
//          BatchDeploymentResponseArgs{...}
type BatchDeploymentResponseInput interface {
	pulumi.Input

	ToBatchDeploymentResponseOutput() BatchDeploymentResponseOutput
	ToBatchDeploymentResponseOutputWithContext(context.Context) BatchDeploymentResponseOutput
}

type BatchDeploymentResponseArgs struct {
	// Code configuration for the endpoint deployment.
	CodeConfiguration CodeConfigurationResponsePtrInput `pulumi:"codeConfiguration"`
	// Configuration for compute binding.
	Compute ComputeConfigurationResponsePtrInput `pulumi:"compute"`
	// Description of the endpoint deployment.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// Error threshold, if the error count for the entire input goes above this value,
	// the batch inference will be aborted. Range is [-1, int.MaxValue].
	// For FileDataset, this value is the count of file failures.
	// For TabularDataset, this value is the count of record failures.
	// If set to -1 (the lower bound), all failures during batch inference will be ignored.
	ErrorThreshold pulumi.IntPtrInput `pulumi:"errorThreshold"`
	// Logging level for batch inference operation.
	LoggingLevel pulumi.StringPtrInput `pulumi:"loggingLevel"`
	// Size of the mini-batch passed to each batch invocation.
	// For FileDataset, this is the number of files per mini-batch.
	// For TabularDataset, this is the size of the records in bytes, per mini-batch.
	MiniBatchSize pulumi.Float64PtrInput `pulumi:"miniBatchSize"`
	// Reference to the model asset for the endpoint deployment.
	Model pulumi.Input `pulumi:"model"`
	// Output configuration for the batch inference operation.
	OutputConfiguration BatchOutputConfigurationResponsePtrInput `pulumi:"outputConfiguration"`
	// Partition keys list used for Named partitioning.
	PartitionKeys pulumi.StringArrayInput `pulumi:"partitionKeys"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Retry Settings for the batch inference operation.
	RetrySettings BatchRetrySettingsResponsePtrInput `pulumi:"retrySettings"`
}

func (BatchDeploymentResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchDeploymentResponse)(nil)).Elem()
}

func (i BatchDeploymentResponseArgs) ToBatchDeploymentResponseOutput() BatchDeploymentResponseOutput {
	return i.ToBatchDeploymentResponseOutputWithContext(context.Background())
}

func (i BatchDeploymentResponseArgs) ToBatchDeploymentResponseOutputWithContext(ctx context.Context) BatchDeploymentResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchDeploymentResponseOutput)
}

func (i BatchDeploymentResponseArgs) ToBatchDeploymentResponsePtrOutput() BatchDeploymentResponsePtrOutput {
	return i.ToBatchDeploymentResponsePtrOutputWithContext(context.Background())
}

func (i BatchDeploymentResponseArgs) ToBatchDeploymentResponsePtrOutputWithContext(ctx context.Context) BatchDeploymentResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchDeploymentResponseOutput).ToBatchDeploymentResponsePtrOutputWithContext(ctx)
}

// BatchDeploymentResponsePtrInput is an input type that accepts BatchDeploymentResponseArgs, BatchDeploymentResponsePtr and BatchDeploymentResponsePtrOutput values.
// You can construct a concrete instance of `BatchDeploymentResponsePtrInput` via:
//
//          BatchDeploymentResponseArgs{...}
//
//  or:
//
//          nil
type BatchDeploymentResponsePtrInput interface {
	pulumi.Input

	ToBatchDeploymentResponsePtrOutput() BatchDeploymentResponsePtrOutput
	ToBatchDeploymentResponsePtrOutputWithContext(context.Context) BatchDeploymentResponsePtrOutput
}

type batchDeploymentResponsePtrType BatchDeploymentResponseArgs

func BatchDeploymentResponsePtr(v *BatchDeploymentResponseArgs) BatchDeploymentResponsePtrInput {
	return (*batchDeploymentResponsePtrType)(v)
}

func (*batchDeploymentResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchDeploymentResponse)(nil)).Elem()
}

func (i *batchDeploymentResponsePtrType) ToBatchDeploymentResponsePtrOutput() BatchDeploymentResponsePtrOutput {
	return i.ToBatchDeploymentResponsePtrOutputWithContext(context.Background())
}

func (i *batchDeploymentResponsePtrType) ToBatchDeploymentResponsePtrOutputWithContext(ctx context.Context) BatchDeploymentResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchDeploymentResponsePtrOutput)
}

type BatchDeploymentResponseOutput struct{ *pulumi.OutputState }

func (BatchDeploymentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchDeploymentResponse)(nil)).Elem()
}

func (o BatchDeploymentResponseOutput) ToBatchDeploymentResponseOutput() BatchDeploymentResponseOutput {
	return o
}

func (o BatchDeploymentResponseOutput) ToBatchDeploymentResponseOutputWithContext(ctx context.Context) BatchDeploymentResponseOutput {
	return o
}

func (o BatchDeploymentResponseOutput) ToBatchDeploymentResponsePtrOutput() BatchDeploymentResponsePtrOutput {
	return o.ToBatchDeploymentResponsePtrOutputWithContext(context.Background())
}

func (o BatchDeploymentResponseOutput) ToBatchDeploymentResponsePtrOutputWithContext(ctx context.Context) BatchDeploymentResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BatchDeploymentResponse) *BatchDeploymentResponse {
		return &v
	}).(BatchDeploymentResponsePtrOutput)
}

// Code configuration for the endpoint deployment.
func (o BatchDeploymentResponseOutput) CodeConfiguration() CodeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *CodeConfigurationResponse { return v.CodeConfiguration }).(CodeConfigurationResponsePtrOutput)
}

// Configuration for compute binding.
func (o BatchDeploymentResponseOutput) Compute() ComputeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *ComputeConfigurationResponse { return v.Compute }).(ComputeConfigurationResponsePtrOutput)
}

// Description of the endpoint deployment.
func (o BatchDeploymentResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// ARM resource ID of the environment specification for the endpoint deployment.
func (o BatchDeploymentResponseOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables configuration for the deployment.
func (o BatchDeploymentResponseOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Error threshold, if the error count for the entire input goes above this value,
// the batch inference will be aborted. Range is [-1, int.MaxValue].
// For FileDataset, this value is the count of file failures.
// For TabularDataset, this value is the count of record failures.
// If set to -1 (the lower bound), all failures during batch inference will be ignored.
func (o BatchDeploymentResponseOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *int { return v.ErrorThreshold }).(pulumi.IntPtrOutput)
}

// Logging level for batch inference operation.
func (o BatchDeploymentResponseOutput) LoggingLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *string { return v.LoggingLevel }).(pulumi.StringPtrOutput)
}

// Size of the mini-batch passed to each batch invocation.
// For FileDataset, this is the number of files per mini-batch.
// For TabularDataset, this is the size of the records in bytes, per mini-batch.
func (o BatchDeploymentResponseOutput) MiniBatchSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *float64 { return v.MiniBatchSize }).(pulumi.Float64PtrOutput)
}

// Reference to the model asset for the endpoint deployment.
func (o BatchDeploymentResponseOutput) Model() pulumi.AnyOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) interface{} { return v.Model }).(pulumi.AnyOutput)
}

// Output configuration for the batch inference operation.
func (o BatchDeploymentResponseOutput) OutputConfiguration() BatchOutputConfigurationResponsePtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *BatchOutputConfigurationResponse { return v.OutputConfiguration }).(BatchOutputConfigurationResponsePtrOutput)
}

// Partition keys list used for Named partitioning.
func (o BatchDeploymentResponseOutput) PartitionKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) []string { return v.PartitionKeys }).(pulumi.StringArrayOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o BatchDeploymentResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Retry Settings for the batch inference operation.
func (o BatchDeploymentResponseOutput) RetrySettings() BatchRetrySettingsResponsePtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *BatchRetrySettingsResponse { return v.RetrySettings }).(BatchRetrySettingsResponsePtrOutput)
}

type BatchDeploymentResponsePtrOutput struct{ *pulumi.OutputState }

func (BatchDeploymentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchDeploymentResponse)(nil)).Elem()
}

func (o BatchDeploymentResponsePtrOutput) ToBatchDeploymentResponsePtrOutput() BatchDeploymentResponsePtrOutput {
	return o
}

func (o BatchDeploymentResponsePtrOutput) ToBatchDeploymentResponsePtrOutputWithContext(ctx context.Context) BatchDeploymentResponsePtrOutput {
	return o
}

func (o BatchDeploymentResponsePtrOutput) Elem() BatchDeploymentResponseOutput {
	return o.ApplyT(func(v *BatchDeploymentResponse) BatchDeploymentResponse {
		if v != nil {
			return *v
		}
		var ret BatchDeploymentResponse
		return ret
	}).(BatchDeploymentResponseOutput)
}

// Code configuration for the endpoint deployment.
func (o BatchDeploymentResponsePtrOutput) CodeConfiguration() CodeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *BatchDeploymentResponse) *CodeConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.CodeConfiguration
	}).(CodeConfigurationResponsePtrOutput)
}

// Configuration for compute binding.
func (o BatchDeploymentResponsePtrOutput) Compute() ComputeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *BatchDeploymentResponse) *ComputeConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Compute
	}).(ComputeConfigurationResponsePtrOutput)
}

// Description of the endpoint deployment.
func (o BatchDeploymentResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchDeploymentResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// ARM resource ID of the environment specification for the endpoint deployment.
func (o BatchDeploymentResponsePtrOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchDeploymentResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnvironmentId
	}).(pulumi.StringPtrOutput)
}

// Environment variables configuration for the deployment.
func (o BatchDeploymentResponsePtrOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BatchDeploymentResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// Error threshold, if the error count for the entire input goes above this value,
// the batch inference will be aborted. Range is [-1, int.MaxValue].
// For FileDataset, this value is the count of file failures.
// For TabularDataset, this value is the count of record failures.
// If set to -1 (the lower bound), all failures during batch inference will be ignored.
func (o BatchDeploymentResponsePtrOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchDeploymentResponse) *int {
		if v == nil {
			return nil
		}
		return v.ErrorThreshold
	}).(pulumi.IntPtrOutput)
}

// Logging level for batch inference operation.
func (o BatchDeploymentResponsePtrOutput) LoggingLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchDeploymentResponse) *string {
		if v == nil {
			return nil
		}
		return v.LoggingLevel
	}).(pulumi.StringPtrOutput)
}

// Size of the mini-batch passed to each batch invocation.
// For FileDataset, this is the number of files per mini-batch.
// For TabularDataset, this is the size of the records in bytes, per mini-batch.
func (o BatchDeploymentResponsePtrOutput) MiniBatchSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BatchDeploymentResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MiniBatchSize
	}).(pulumi.Float64PtrOutput)
}

// Reference to the model asset for the endpoint deployment.
func (o BatchDeploymentResponsePtrOutput) Model() pulumi.AnyOutput {
	return o.ApplyT(func(v *BatchDeploymentResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Model
	}).(pulumi.AnyOutput)
}

// Output configuration for the batch inference operation.
func (o BatchDeploymentResponsePtrOutput) OutputConfiguration() BatchOutputConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *BatchDeploymentResponse) *BatchOutputConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.OutputConfiguration
	}).(BatchOutputConfigurationResponsePtrOutput)
}

// Partition keys list used for Named partitioning.
func (o BatchDeploymentResponsePtrOutput) PartitionKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BatchDeploymentResponse) []string {
		if v == nil {
			return nil
		}
		return v.PartitionKeys
	}).(pulumi.StringArrayOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o BatchDeploymentResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BatchDeploymentResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Retry Settings for the batch inference operation.
func (o BatchDeploymentResponsePtrOutput) RetrySettings() BatchRetrySettingsResponsePtrOutput {
	return o.ApplyT(func(v *BatchDeploymentResponse) *BatchRetrySettingsResponse {
		if v == nil {
			return nil
		}
		return v.RetrySettings
	}).(BatchRetrySettingsResponsePtrOutput)
}

type BatchEndpointType struct {
	// Enum to determine endpoint authentication mode.
	AuthMode *string `pulumi:"authMode"`
	// Description of the inference endpoint.
	Description *string `pulumi:"description"`
	// EndpointAuthKeys to set initially on an Endpoint.
	// This property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.
	Keys *EndpointAuthKeys `pulumi:"keys"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// Traffic rules on how the traffic will be routed across deployments.
	Traffic map[string]int `pulumi:"traffic"`
}

// BatchEndpointTypeInput is an input type that accepts BatchEndpointTypeArgs and BatchEndpointTypeOutput values.
// You can construct a concrete instance of `BatchEndpointTypeInput` via:
//
//          BatchEndpointTypeArgs{...}
type BatchEndpointTypeInput interface {
	pulumi.Input

	ToBatchEndpointTypeOutput() BatchEndpointTypeOutput
	ToBatchEndpointTypeOutputWithContext(context.Context) BatchEndpointTypeOutput
}

type BatchEndpointTypeArgs struct {
	// Enum to determine endpoint authentication mode.
	AuthMode pulumi.StringPtrInput `pulumi:"authMode"`
	// Description of the inference endpoint.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// EndpointAuthKeys to set initially on an Endpoint.
	// This property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.
	Keys EndpointAuthKeysPtrInput `pulumi:"keys"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Traffic rules on how the traffic will be routed across deployments.
	Traffic pulumi.IntMapInput `pulumi:"traffic"`
}

func (BatchEndpointTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchEndpointType)(nil)).Elem()
}

func (i BatchEndpointTypeArgs) ToBatchEndpointTypeOutput() BatchEndpointTypeOutput {
	return i.ToBatchEndpointTypeOutputWithContext(context.Background())
}

func (i BatchEndpointTypeArgs) ToBatchEndpointTypeOutputWithContext(ctx context.Context) BatchEndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchEndpointTypeOutput)
}

func (i BatchEndpointTypeArgs) ToBatchEndpointTypePtrOutput() BatchEndpointTypePtrOutput {
	return i.ToBatchEndpointTypePtrOutputWithContext(context.Background())
}

func (i BatchEndpointTypeArgs) ToBatchEndpointTypePtrOutputWithContext(ctx context.Context) BatchEndpointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchEndpointTypeOutput).ToBatchEndpointTypePtrOutputWithContext(ctx)
}

// BatchEndpointTypePtrInput is an input type that accepts BatchEndpointTypeArgs, BatchEndpointTypePtr and BatchEndpointTypePtrOutput values.
// You can construct a concrete instance of `BatchEndpointTypePtrInput` via:
//
//          BatchEndpointTypeArgs{...}
//
//  or:
//
//          nil
type BatchEndpointTypePtrInput interface {
	pulumi.Input

	ToBatchEndpointTypePtrOutput() BatchEndpointTypePtrOutput
	ToBatchEndpointTypePtrOutputWithContext(context.Context) BatchEndpointTypePtrOutput
}

type batchEndpointTypePtrType BatchEndpointTypeArgs

func BatchEndpointTypePtr(v *BatchEndpointTypeArgs) BatchEndpointTypePtrInput {
	return (*batchEndpointTypePtrType)(v)
}

func (*batchEndpointTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchEndpointType)(nil)).Elem()
}

func (i *batchEndpointTypePtrType) ToBatchEndpointTypePtrOutput() BatchEndpointTypePtrOutput {
	return i.ToBatchEndpointTypePtrOutputWithContext(context.Background())
}

func (i *batchEndpointTypePtrType) ToBatchEndpointTypePtrOutputWithContext(ctx context.Context) BatchEndpointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchEndpointTypePtrOutput)
}

type BatchEndpointTypeOutput struct{ *pulumi.OutputState }

func (BatchEndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchEndpointType)(nil)).Elem()
}

func (o BatchEndpointTypeOutput) ToBatchEndpointTypeOutput() BatchEndpointTypeOutput {
	return o
}

func (o BatchEndpointTypeOutput) ToBatchEndpointTypeOutputWithContext(ctx context.Context) BatchEndpointTypeOutput {
	return o
}

func (o BatchEndpointTypeOutput) ToBatchEndpointTypePtrOutput() BatchEndpointTypePtrOutput {
	return o.ToBatchEndpointTypePtrOutputWithContext(context.Background())
}

func (o BatchEndpointTypeOutput) ToBatchEndpointTypePtrOutputWithContext(ctx context.Context) BatchEndpointTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BatchEndpointType) *BatchEndpointType {
		return &v
	}).(BatchEndpointTypePtrOutput)
}

// Enum to determine endpoint authentication mode.
func (o BatchEndpointTypeOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchEndpointType) *string { return v.AuthMode }).(pulumi.StringPtrOutput)
}

// Description of the inference endpoint.
func (o BatchEndpointTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchEndpointType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// EndpointAuthKeys to set initially on an Endpoint.
// This property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.
func (o BatchEndpointTypeOutput) Keys() EndpointAuthKeysPtrOutput {
	return o.ApplyT(func(v BatchEndpointType) *EndpointAuthKeys { return v.Keys }).(EndpointAuthKeysPtrOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o BatchEndpointTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v BatchEndpointType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Traffic rules on how the traffic will be routed across deployments.
func (o BatchEndpointTypeOutput) Traffic() pulumi.IntMapOutput {
	return o.ApplyT(func(v BatchEndpointType) map[string]int { return v.Traffic }).(pulumi.IntMapOutput)
}

type BatchEndpointTypePtrOutput struct{ *pulumi.OutputState }

func (BatchEndpointTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchEndpointType)(nil)).Elem()
}

func (o BatchEndpointTypePtrOutput) ToBatchEndpointTypePtrOutput() BatchEndpointTypePtrOutput {
	return o
}

func (o BatchEndpointTypePtrOutput) ToBatchEndpointTypePtrOutputWithContext(ctx context.Context) BatchEndpointTypePtrOutput {
	return o
}

func (o BatchEndpointTypePtrOutput) Elem() BatchEndpointTypeOutput {
	return o.ApplyT(func(v *BatchEndpointType) BatchEndpointType {
		if v != nil {
			return *v
		}
		var ret BatchEndpointType
		return ret
	}).(BatchEndpointTypeOutput)
}

// Enum to determine endpoint authentication mode.
func (o BatchEndpointTypePtrOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchEndpointType) *string {
		if v == nil {
			return nil
		}
		return v.AuthMode
	}).(pulumi.StringPtrOutput)
}

// Description of the inference endpoint.
func (o BatchEndpointTypePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchEndpointType) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// EndpointAuthKeys to set initially on an Endpoint.
// This property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.
func (o BatchEndpointTypePtrOutput) Keys() EndpointAuthKeysPtrOutput {
	return o.ApplyT(func(v *BatchEndpointType) *EndpointAuthKeys {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(EndpointAuthKeysPtrOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o BatchEndpointTypePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BatchEndpointType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Traffic rules on how the traffic will be routed across deployments.
func (o BatchEndpointTypePtrOutput) Traffic() pulumi.IntMapOutput {
	return o.ApplyT(func(v *BatchEndpointType) map[string]int {
		if v == nil {
			return nil
		}
		return v.Traffic
	}).(pulumi.IntMapOutput)
}

type BatchEndpointResponse struct {
	// Enum to determine endpoint authentication mode.
	AuthMode *string `pulumi:"authMode"`
	// Description of the inference endpoint.
	Description *string `pulumi:"description"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// Endpoint URI.
	ScoringUri string `pulumi:"scoringUri"`
	// Endpoint Swagger URI.
	SwaggerUri string `pulumi:"swaggerUri"`
	// Traffic rules on how the traffic will be routed across deployments.
	Traffic map[string]int `pulumi:"traffic"`
}

// BatchEndpointResponseInput is an input type that accepts BatchEndpointResponseArgs and BatchEndpointResponseOutput values.
// You can construct a concrete instance of `BatchEndpointResponseInput` via:
//
//          BatchEndpointResponseArgs{...}
type BatchEndpointResponseInput interface {
	pulumi.Input

	ToBatchEndpointResponseOutput() BatchEndpointResponseOutput
	ToBatchEndpointResponseOutputWithContext(context.Context) BatchEndpointResponseOutput
}

type BatchEndpointResponseArgs struct {
	// Enum to determine endpoint authentication mode.
	AuthMode pulumi.StringPtrInput `pulumi:"authMode"`
	// Description of the inference endpoint.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Endpoint URI.
	ScoringUri pulumi.StringInput `pulumi:"scoringUri"`
	// Endpoint Swagger URI.
	SwaggerUri pulumi.StringInput `pulumi:"swaggerUri"`
	// Traffic rules on how the traffic will be routed across deployments.
	Traffic pulumi.IntMapInput `pulumi:"traffic"`
}

func (BatchEndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchEndpointResponse)(nil)).Elem()
}

func (i BatchEndpointResponseArgs) ToBatchEndpointResponseOutput() BatchEndpointResponseOutput {
	return i.ToBatchEndpointResponseOutputWithContext(context.Background())
}

func (i BatchEndpointResponseArgs) ToBatchEndpointResponseOutputWithContext(ctx context.Context) BatchEndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchEndpointResponseOutput)
}

func (i BatchEndpointResponseArgs) ToBatchEndpointResponsePtrOutput() BatchEndpointResponsePtrOutput {
	return i.ToBatchEndpointResponsePtrOutputWithContext(context.Background())
}

func (i BatchEndpointResponseArgs) ToBatchEndpointResponsePtrOutputWithContext(ctx context.Context) BatchEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchEndpointResponseOutput).ToBatchEndpointResponsePtrOutputWithContext(ctx)
}

// BatchEndpointResponsePtrInput is an input type that accepts BatchEndpointResponseArgs, BatchEndpointResponsePtr and BatchEndpointResponsePtrOutput values.
// You can construct a concrete instance of `BatchEndpointResponsePtrInput` via:
//
//          BatchEndpointResponseArgs{...}
//
//  or:
//
//          nil
type BatchEndpointResponsePtrInput interface {
	pulumi.Input

	ToBatchEndpointResponsePtrOutput() BatchEndpointResponsePtrOutput
	ToBatchEndpointResponsePtrOutputWithContext(context.Context) BatchEndpointResponsePtrOutput
}

type batchEndpointResponsePtrType BatchEndpointResponseArgs

func BatchEndpointResponsePtr(v *BatchEndpointResponseArgs) BatchEndpointResponsePtrInput {
	return (*batchEndpointResponsePtrType)(v)
}

func (*batchEndpointResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchEndpointResponse)(nil)).Elem()
}

func (i *batchEndpointResponsePtrType) ToBatchEndpointResponsePtrOutput() BatchEndpointResponsePtrOutput {
	return i.ToBatchEndpointResponsePtrOutputWithContext(context.Background())
}

func (i *batchEndpointResponsePtrType) ToBatchEndpointResponsePtrOutputWithContext(ctx context.Context) BatchEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchEndpointResponsePtrOutput)
}

type BatchEndpointResponseOutput struct{ *pulumi.OutputState }

func (BatchEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchEndpointResponse)(nil)).Elem()
}

func (o BatchEndpointResponseOutput) ToBatchEndpointResponseOutput() BatchEndpointResponseOutput {
	return o
}

func (o BatchEndpointResponseOutput) ToBatchEndpointResponseOutputWithContext(ctx context.Context) BatchEndpointResponseOutput {
	return o
}

func (o BatchEndpointResponseOutput) ToBatchEndpointResponsePtrOutput() BatchEndpointResponsePtrOutput {
	return o.ToBatchEndpointResponsePtrOutputWithContext(context.Background())
}

func (o BatchEndpointResponseOutput) ToBatchEndpointResponsePtrOutputWithContext(ctx context.Context) BatchEndpointResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BatchEndpointResponse) *BatchEndpointResponse {
		return &v
	}).(BatchEndpointResponsePtrOutput)
}

// Enum to determine endpoint authentication mode.
func (o BatchEndpointResponseOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchEndpointResponse) *string { return v.AuthMode }).(pulumi.StringPtrOutput)
}

// Description of the inference endpoint.
func (o BatchEndpointResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchEndpointResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o BatchEndpointResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v BatchEndpointResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Endpoint URI.
func (o BatchEndpointResponseOutput) ScoringUri() pulumi.StringOutput {
	return o.ApplyT(func(v BatchEndpointResponse) string { return v.ScoringUri }).(pulumi.StringOutput)
}

// Endpoint Swagger URI.
func (o BatchEndpointResponseOutput) SwaggerUri() pulumi.StringOutput {
	return o.ApplyT(func(v BatchEndpointResponse) string { return v.SwaggerUri }).(pulumi.StringOutput)
}

// Traffic rules on how the traffic will be routed across deployments.
func (o BatchEndpointResponseOutput) Traffic() pulumi.IntMapOutput {
	return o.ApplyT(func(v BatchEndpointResponse) map[string]int { return v.Traffic }).(pulumi.IntMapOutput)
}

type BatchEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (BatchEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchEndpointResponse)(nil)).Elem()
}

func (o BatchEndpointResponsePtrOutput) ToBatchEndpointResponsePtrOutput() BatchEndpointResponsePtrOutput {
	return o
}

func (o BatchEndpointResponsePtrOutput) ToBatchEndpointResponsePtrOutputWithContext(ctx context.Context) BatchEndpointResponsePtrOutput {
	return o
}

func (o BatchEndpointResponsePtrOutput) Elem() BatchEndpointResponseOutput {
	return o.ApplyT(func(v *BatchEndpointResponse) BatchEndpointResponse {
		if v != nil {
			return *v
		}
		var ret BatchEndpointResponse
		return ret
	}).(BatchEndpointResponseOutput)
}

// Enum to determine endpoint authentication mode.
func (o BatchEndpointResponsePtrOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthMode
	}).(pulumi.StringPtrOutput)
}

// Description of the inference endpoint.
func (o BatchEndpointResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o BatchEndpointResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BatchEndpointResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Endpoint URI.
func (o BatchEndpointResponsePtrOutput) ScoringUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ScoringUri
	}).(pulumi.StringPtrOutput)
}

// Endpoint Swagger URI.
func (o BatchEndpointResponsePtrOutput) SwaggerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SwaggerUri
	}).(pulumi.StringPtrOutput)
}

// Traffic rules on how the traffic will be routed across deployments.
func (o BatchEndpointResponsePtrOutput) Traffic() pulumi.IntMapOutput {
	return o.ApplyT(func(v *BatchEndpointResponse) map[string]int {
		if v == nil {
			return nil
		}
		return v.Traffic
	}).(pulumi.IntMapOutput)
}

type BatchOutputConfiguration struct {
	// Customized output file name for append_row output action.
	AppendRowFileName *string `pulumi:"appendRowFileName"`
	// Indicates how the output will be organized.
	OutputAction *string `pulumi:"outputAction"`
}

// BatchOutputConfigurationInput is an input type that accepts BatchOutputConfigurationArgs and BatchOutputConfigurationOutput values.
// You can construct a concrete instance of `BatchOutputConfigurationInput` via:
//
//          BatchOutputConfigurationArgs{...}
type BatchOutputConfigurationInput interface {
	pulumi.Input

	ToBatchOutputConfigurationOutput() BatchOutputConfigurationOutput
	ToBatchOutputConfigurationOutputWithContext(context.Context) BatchOutputConfigurationOutput
}

type BatchOutputConfigurationArgs struct {
	// Customized output file name for append_row output action.
	AppendRowFileName pulumi.StringPtrInput `pulumi:"appendRowFileName"`
	// Indicates how the output will be organized.
	OutputAction pulumi.StringPtrInput `pulumi:"outputAction"`
}

func (BatchOutputConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchOutputConfiguration)(nil)).Elem()
}

func (i BatchOutputConfigurationArgs) ToBatchOutputConfigurationOutput() BatchOutputConfigurationOutput {
	return i.ToBatchOutputConfigurationOutputWithContext(context.Background())
}

func (i BatchOutputConfigurationArgs) ToBatchOutputConfigurationOutputWithContext(ctx context.Context) BatchOutputConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchOutputConfigurationOutput)
}

func (i BatchOutputConfigurationArgs) ToBatchOutputConfigurationPtrOutput() BatchOutputConfigurationPtrOutput {
	return i.ToBatchOutputConfigurationPtrOutputWithContext(context.Background())
}

func (i BatchOutputConfigurationArgs) ToBatchOutputConfigurationPtrOutputWithContext(ctx context.Context) BatchOutputConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchOutputConfigurationOutput).ToBatchOutputConfigurationPtrOutputWithContext(ctx)
}

// BatchOutputConfigurationPtrInput is an input type that accepts BatchOutputConfigurationArgs, BatchOutputConfigurationPtr and BatchOutputConfigurationPtrOutput values.
// You can construct a concrete instance of `BatchOutputConfigurationPtrInput` via:
//
//          BatchOutputConfigurationArgs{...}
//
//  or:
//
//          nil
type BatchOutputConfigurationPtrInput interface {
	pulumi.Input

	ToBatchOutputConfigurationPtrOutput() BatchOutputConfigurationPtrOutput
	ToBatchOutputConfigurationPtrOutputWithContext(context.Context) BatchOutputConfigurationPtrOutput
}

type batchOutputConfigurationPtrType BatchOutputConfigurationArgs

func BatchOutputConfigurationPtr(v *BatchOutputConfigurationArgs) BatchOutputConfigurationPtrInput {
	return (*batchOutputConfigurationPtrType)(v)
}

func (*batchOutputConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchOutputConfiguration)(nil)).Elem()
}

func (i *batchOutputConfigurationPtrType) ToBatchOutputConfigurationPtrOutput() BatchOutputConfigurationPtrOutput {
	return i.ToBatchOutputConfigurationPtrOutputWithContext(context.Background())
}

func (i *batchOutputConfigurationPtrType) ToBatchOutputConfigurationPtrOutputWithContext(ctx context.Context) BatchOutputConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchOutputConfigurationPtrOutput)
}

type BatchOutputConfigurationOutput struct{ *pulumi.OutputState }

func (BatchOutputConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchOutputConfiguration)(nil)).Elem()
}

func (o BatchOutputConfigurationOutput) ToBatchOutputConfigurationOutput() BatchOutputConfigurationOutput {
	return o
}

func (o BatchOutputConfigurationOutput) ToBatchOutputConfigurationOutputWithContext(ctx context.Context) BatchOutputConfigurationOutput {
	return o
}

func (o BatchOutputConfigurationOutput) ToBatchOutputConfigurationPtrOutput() BatchOutputConfigurationPtrOutput {
	return o.ToBatchOutputConfigurationPtrOutputWithContext(context.Background())
}

func (o BatchOutputConfigurationOutput) ToBatchOutputConfigurationPtrOutputWithContext(ctx context.Context) BatchOutputConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BatchOutputConfiguration) *BatchOutputConfiguration {
		return &v
	}).(BatchOutputConfigurationPtrOutput)
}

// Customized output file name for append_row output action.
func (o BatchOutputConfigurationOutput) AppendRowFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchOutputConfiguration) *string { return v.AppendRowFileName }).(pulumi.StringPtrOutput)
}

// Indicates how the output will be organized.
func (o BatchOutputConfigurationOutput) OutputAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchOutputConfiguration) *string { return v.OutputAction }).(pulumi.StringPtrOutput)
}

type BatchOutputConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BatchOutputConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchOutputConfiguration)(nil)).Elem()
}

func (o BatchOutputConfigurationPtrOutput) ToBatchOutputConfigurationPtrOutput() BatchOutputConfigurationPtrOutput {
	return o
}

func (o BatchOutputConfigurationPtrOutput) ToBatchOutputConfigurationPtrOutputWithContext(ctx context.Context) BatchOutputConfigurationPtrOutput {
	return o
}

func (o BatchOutputConfigurationPtrOutput) Elem() BatchOutputConfigurationOutput {
	return o.ApplyT(func(v *BatchOutputConfiguration) BatchOutputConfiguration {
		if v != nil {
			return *v
		}
		var ret BatchOutputConfiguration
		return ret
	}).(BatchOutputConfigurationOutput)
}

// Customized output file name for append_row output action.
func (o BatchOutputConfigurationPtrOutput) AppendRowFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchOutputConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AppendRowFileName
	}).(pulumi.StringPtrOutput)
}

// Indicates how the output will be organized.
func (o BatchOutputConfigurationPtrOutput) OutputAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchOutputConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.OutputAction
	}).(pulumi.StringPtrOutput)
}

type BatchOutputConfigurationResponse struct {
	// Customized output file name for append_row output action.
	AppendRowFileName *string `pulumi:"appendRowFileName"`
	// Indicates how the output will be organized.
	OutputAction *string `pulumi:"outputAction"`
}

// BatchOutputConfigurationResponseInput is an input type that accepts BatchOutputConfigurationResponseArgs and BatchOutputConfigurationResponseOutput values.
// You can construct a concrete instance of `BatchOutputConfigurationResponseInput` via:
//
//          BatchOutputConfigurationResponseArgs{...}
type BatchOutputConfigurationResponseInput interface {
	pulumi.Input

	ToBatchOutputConfigurationResponseOutput() BatchOutputConfigurationResponseOutput
	ToBatchOutputConfigurationResponseOutputWithContext(context.Context) BatchOutputConfigurationResponseOutput
}

type BatchOutputConfigurationResponseArgs struct {
	// Customized output file name for append_row output action.
	AppendRowFileName pulumi.StringPtrInput `pulumi:"appendRowFileName"`
	// Indicates how the output will be organized.
	OutputAction pulumi.StringPtrInput `pulumi:"outputAction"`
}

func (BatchOutputConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchOutputConfigurationResponse)(nil)).Elem()
}

func (i BatchOutputConfigurationResponseArgs) ToBatchOutputConfigurationResponseOutput() BatchOutputConfigurationResponseOutput {
	return i.ToBatchOutputConfigurationResponseOutputWithContext(context.Background())
}

func (i BatchOutputConfigurationResponseArgs) ToBatchOutputConfigurationResponseOutputWithContext(ctx context.Context) BatchOutputConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchOutputConfigurationResponseOutput)
}

func (i BatchOutputConfigurationResponseArgs) ToBatchOutputConfigurationResponsePtrOutput() BatchOutputConfigurationResponsePtrOutput {
	return i.ToBatchOutputConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i BatchOutputConfigurationResponseArgs) ToBatchOutputConfigurationResponsePtrOutputWithContext(ctx context.Context) BatchOutputConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchOutputConfigurationResponseOutput).ToBatchOutputConfigurationResponsePtrOutputWithContext(ctx)
}

// BatchOutputConfigurationResponsePtrInput is an input type that accepts BatchOutputConfigurationResponseArgs, BatchOutputConfigurationResponsePtr and BatchOutputConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `BatchOutputConfigurationResponsePtrInput` via:
//
//          BatchOutputConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type BatchOutputConfigurationResponsePtrInput interface {
	pulumi.Input

	ToBatchOutputConfigurationResponsePtrOutput() BatchOutputConfigurationResponsePtrOutput
	ToBatchOutputConfigurationResponsePtrOutputWithContext(context.Context) BatchOutputConfigurationResponsePtrOutput
}

type batchOutputConfigurationResponsePtrType BatchOutputConfigurationResponseArgs

func BatchOutputConfigurationResponsePtr(v *BatchOutputConfigurationResponseArgs) BatchOutputConfigurationResponsePtrInput {
	return (*batchOutputConfigurationResponsePtrType)(v)
}

func (*batchOutputConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchOutputConfigurationResponse)(nil)).Elem()
}

func (i *batchOutputConfigurationResponsePtrType) ToBatchOutputConfigurationResponsePtrOutput() BatchOutputConfigurationResponsePtrOutput {
	return i.ToBatchOutputConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *batchOutputConfigurationResponsePtrType) ToBatchOutputConfigurationResponsePtrOutputWithContext(ctx context.Context) BatchOutputConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchOutputConfigurationResponsePtrOutput)
}

type BatchOutputConfigurationResponseOutput struct{ *pulumi.OutputState }

func (BatchOutputConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchOutputConfigurationResponse)(nil)).Elem()
}

func (o BatchOutputConfigurationResponseOutput) ToBatchOutputConfigurationResponseOutput() BatchOutputConfigurationResponseOutput {
	return o
}

func (o BatchOutputConfigurationResponseOutput) ToBatchOutputConfigurationResponseOutputWithContext(ctx context.Context) BatchOutputConfigurationResponseOutput {
	return o
}

func (o BatchOutputConfigurationResponseOutput) ToBatchOutputConfigurationResponsePtrOutput() BatchOutputConfigurationResponsePtrOutput {
	return o.ToBatchOutputConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o BatchOutputConfigurationResponseOutput) ToBatchOutputConfigurationResponsePtrOutputWithContext(ctx context.Context) BatchOutputConfigurationResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BatchOutputConfigurationResponse) *BatchOutputConfigurationResponse {
		return &v
	}).(BatchOutputConfigurationResponsePtrOutput)
}

// Customized output file name for append_row output action.
func (o BatchOutputConfigurationResponseOutput) AppendRowFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchOutputConfigurationResponse) *string { return v.AppendRowFileName }).(pulumi.StringPtrOutput)
}

// Indicates how the output will be organized.
func (o BatchOutputConfigurationResponseOutput) OutputAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchOutputConfigurationResponse) *string { return v.OutputAction }).(pulumi.StringPtrOutput)
}

type BatchOutputConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (BatchOutputConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchOutputConfigurationResponse)(nil)).Elem()
}

func (o BatchOutputConfigurationResponsePtrOutput) ToBatchOutputConfigurationResponsePtrOutput() BatchOutputConfigurationResponsePtrOutput {
	return o
}

func (o BatchOutputConfigurationResponsePtrOutput) ToBatchOutputConfigurationResponsePtrOutputWithContext(ctx context.Context) BatchOutputConfigurationResponsePtrOutput {
	return o
}

func (o BatchOutputConfigurationResponsePtrOutput) Elem() BatchOutputConfigurationResponseOutput {
	return o.ApplyT(func(v *BatchOutputConfigurationResponse) BatchOutputConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret BatchOutputConfigurationResponse
		return ret
	}).(BatchOutputConfigurationResponseOutput)
}

// Customized output file name for append_row output action.
func (o BatchOutputConfigurationResponsePtrOutput) AppendRowFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchOutputConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppendRowFileName
	}).(pulumi.StringPtrOutput)
}

// Indicates how the output will be organized.
func (o BatchOutputConfigurationResponsePtrOutput) OutputAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchOutputConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.OutputAction
	}).(pulumi.StringPtrOutput)
}

type BatchRetrySettings struct {
	// Maximum retry count for a mini-batch
	MaxRetries *int `pulumi:"maxRetries"`
	// Invocation timeout for a mini-batch, in ISO 8601 format.
	Timeout *string `pulumi:"timeout"`
}

// BatchRetrySettingsInput is an input type that accepts BatchRetrySettingsArgs and BatchRetrySettingsOutput values.
// You can construct a concrete instance of `BatchRetrySettingsInput` via:
//
//          BatchRetrySettingsArgs{...}
type BatchRetrySettingsInput interface {
	pulumi.Input

	ToBatchRetrySettingsOutput() BatchRetrySettingsOutput
	ToBatchRetrySettingsOutputWithContext(context.Context) BatchRetrySettingsOutput
}

type BatchRetrySettingsArgs struct {
	// Maximum retry count for a mini-batch
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// Invocation timeout for a mini-batch, in ISO 8601 format.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (BatchRetrySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchRetrySettings)(nil)).Elem()
}

func (i BatchRetrySettingsArgs) ToBatchRetrySettingsOutput() BatchRetrySettingsOutput {
	return i.ToBatchRetrySettingsOutputWithContext(context.Background())
}

func (i BatchRetrySettingsArgs) ToBatchRetrySettingsOutputWithContext(ctx context.Context) BatchRetrySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchRetrySettingsOutput)
}

func (i BatchRetrySettingsArgs) ToBatchRetrySettingsPtrOutput() BatchRetrySettingsPtrOutput {
	return i.ToBatchRetrySettingsPtrOutputWithContext(context.Background())
}

func (i BatchRetrySettingsArgs) ToBatchRetrySettingsPtrOutputWithContext(ctx context.Context) BatchRetrySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchRetrySettingsOutput).ToBatchRetrySettingsPtrOutputWithContext(ctx)
}

// BatchRetrySettingsPtrInput is an input type that accepts BatchRetrySettingsArgs, BatchRetrySettingsPtr and BatchRetrySettingsPtrOutput values.
// You can construct a concrete instance of `BatchRetrySettingsPtrInput` via:
//
//          BatchRetrySettingsArgs{...}
//
//  or:
//
//          nil
type BatchRetrySettingsPtrInput interface {
	pulumi.Input

	ToBatchRetrySettingsPtrOutput() BatchRetrySettingsPtrOutput
	ToBatchRetrySettingsPtrOutputWithContext(context.Context) BatchRetrySettingsPtrOutput
}

type batchRetrySettingsPtrType BatchRetrySettingsArgs

func BatchRetrySettingsPtr(v *BatchRetrySettingsArgs) BatchRetrySettingsPtrInput {
	return (*batchRetrySettingsPtrType)(v)
}

func (*batchRetrySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchRetrySettings)(nil)).Elem()
}

func (i *batchRetrySettingsPtrType) ToBatchRetrySettingsPtrOutput() BatchRetrySettingsPtrOutput {
	return i.ToBatchRetrySettingsPtrOutputWithContext(context.Background())
}

func (i *batchRetrySettingsPtrType) ToBatchRetrySettingsPtrOutputWithContext(ctx context.Context) BatchRetrySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchRetrySettingsPtrOutput)
}

type BatchRetrySettingsOutput struct{ *pulumi.OutputState }

func (BatchRetrySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchRetrySettings)(nil)).Elem()
}

func (o BatchRetrySettingsOutput) ToBatchRetrySettingsOutput() BatchRetrySettingsOutput {
	return o
}

func (o BatchRetrySettingsOutput) ToBatchRetrySettingsOutputWithContext(ctx context.Context) BatchRetrySettingsOutput {
	return o
}

func (o BatchRetrySettingsOutput) ToBatchRetrySettingsPtrOutput() BatchRetrySettingsPtrOutput {
	return o.ToBatchRetrySettingsPtrOutputWithContext(context.Background())
}

func (o BatchRetrySettingsOutput) ToBatchRetrySettingsPtrOutputWithContext(ctx context.Context) BatchRetrySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BatchRetrySettings) *BatchRetrySettings {
		return &v
	}).(BatchRetrySettingsPtrOutput)
}

// Maximum retry count for a mini-batch
func (o BatchRetrySettingsOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BatchRetrySettings) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// Invocation timeout for a mini-batch, in ISO 8601 format.
func (o BatchRetrySettingsOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchRetrySettings) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type BatchRetrySettingsPtrOutput struct{ *pulumi.OutputState }

func (BatchRetrySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchRetrySettings)(nil)).Elem()
}

func (o BatchRetrySettingsPtrOutput) ToBatchRetrySettingsPtrOutput() BatchRetrySettingsPtrOutput {
	return o
}

func (o BatchRetrySettingsPtrOutput) ToBatchRetrySettingsPtrOutputWithContext(ctx context.Context) BatchRetrySettingsPtrOutput {
	return o
}

func (o BatchRetrySettingsPtrOutput) Elem() BatchRetrySettingsOutput {
	return o.ApplyT(func(v *BatchRetrySettings) BatchRetrySettings {
		if v != nil {
			return *v
		}
		var ret BatchRetrySettings
		return ret
	}).(BatchRetrySettingsOutput)
}

// Maximum retry count for a mini-batch
func (o BatchRetrySettingsPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchRetrySettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// Invocation timeout for a mini-batch, in ISO 8601 format.
func (o BatchRetrySettingsPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchRetrySettings) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

type BatchRetrySettingsResponse struct {
	// Maximum retry count for a mini-batch
	MaxRetries *int `pulumi:"maxRetries"`
	// Invocation timeout for a mini-batch, in ISO 8601 format.
	Timeout *string `pulumi:"timeout"`
}

// BatchRetrySettingsResponseInput is an input type that accepts BatchRetrySettingsResponseArgs and BatchRetrySettingsResponseOutput values.
// You can construct a concrete instance of `BatchRetrySettingsResponseInput` via:
//
//          BatchRetrySettingsResponseArgs{...}
type BatchRetrySettingsResponseInput interface {
	pulumi.Input

	ToBatchRetrySettingsResponseOutput() BatchRetrySettingsResponseOutput
	ToBatchRetrySettingsResponseOutputWithContext(context.Context) BatchRetrySettingsResponseOutput
}

type BatchRetrySettingsResponseArgs struct {
	// Maximum retry count for a mini-batch
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// Invocation timeout for a mini-batch, in ISO 8601 format.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (BatchRetrySettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchRetrySettingsResponse)(nil)).Elem()
}

func (i BatchRetrySettingsResponseArgs) ToBatchRetrySettingsResponseOutput() BatchRetrySettingsResponseOutput {
	return i.ToBatchRetrySettingsResponseOutputWithContext(context.Background())
}

func (i BatchRetrySettingsResponseArgs) ToBatchRetrySettingsResponseOutputWithContext(ctx context.Context) BatchRetrySettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchRetrySettingsResponseOutput)
}

func (i BatchRetrySettingsResponseArgs) ToBatchRetrySettingsResponsePtrOutput() BatchRetrySettingsResponsePtrOutput {
	return i.ToBatchRetrySettingsResponsePtrOutputWithContext(context.Background())
}

func (i BatchRetrySettingsResponseArgs) ToBatchRetrySettingsResponsePtrOutputWithContext(ctx context.Context) BatchRetrySettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchRetrySettingsResponseOutput).ToBatchRetrySettingsResponsePtrOutputWithContext(ctx)
}

// BatchRetrySettingsResponsePtrInput is an input type that accepts BatchRetrySettingsResponseArgs, BatchRetrySettingsResponsePtr and BatchRetrySettingsResponsePtrOutput values.
// You can construct a concrete instance of `BatchRetrySettingsResponsePtrInput` via:
//
//          BatchRetrySettingsResponseArgs{...}
//
//  or:
//
//          nil
type BatchRetrySettingsResponsePtrInput interface {
	pulumi.Input

	ToBatchRetrySettingsResponsePtrOutput() BatchRetrySettingsResponsePtrOutput
	ToBatchRetrySettingsResponsePtrOutputWithContext(context.Context) BatchRetrySettingsResponsePtrOutput
}

type batchRetrySettingsResponsePtrType BatchRetrySettingsResponseArgs

func BatchRetrySettingsResponsePtr(v *BatchRetrySettingsResponseArgs) BatchRetrySettingsResponsePtrInput {
	return (*batchRetrySettingsResponsePtrType)(v)
}

func (*batchRetrySettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchRetrySettingsResponse)(nil)).Elem()
}

func (i *batchRetrySettingsResponsePtrType) ToBatchRetrySettingsResponsePtrOutput() BatchRetrySettingsResponsePtrOutput {
	return i.ToBatchRetrySettingsResponsePtrOutputWithContext(context.Background())
}

func (i *batchRetrySettingsResponsePtrType) ToBatchRetrySettingsResponsePtrOutputWithContext(ctx context.Context) BatchRetrySettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchRetrySettingsResponsePtrOutput)
}

type BatchRetrySettingsResponseOutput struct{ *pulumi.OutputState }

func (BatchRetrySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchRetrySettingsResponse)(nil)).Elem()
}

func (o BatchRetrySettingsResponseOutput) ToBatchRetrySettingsResponseOutput() BatchRetrySettingsResponseOutput {
	return o
}

func (o BatchRetrySettingsResponseOutput) ToBatchRetrySettingsResponseOutputWithContext(ctx context.Context) BatchRetrySettingsResponseOutput {
	return o
}

func (o BatchRetrySettingsResponseOutput) ToBatchRetrySettingsResponsePtrOutput() BatchRetrySettingsResponsePtrOutput {
	return o.ToBatchRetrySettingsResponsePtrOutputWithContext(context.Background())
}

func (o BatchRetrySettingsResponseOutput) ToBatchRetrySettingsResponsePtrOutputWithContext(ctx context.Context) BatchRetrySettingsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BatchRetrySettingsResponse) *BatchRetrySettingsResponse {
		return &v
	}).(BatchRetrySettingsResponsePtrOutput)
}

// Maximum retry count for a mini-batch
func (o BatchRetrySettingsResponseOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BatchRetrySettingsResponse) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// Invocation timeout for a mini-batch, in ISO 8601 format.
func (o BatchRetrySettingsResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchRetrySettingsResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type BatchRetrySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (BatchRetrySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchRetrySettingsResponse)(nil)).Elem()
}

func (o BatchRetrySettingsResponsePtrOutput) ToBatchRetrySettingsResponsePtrOutput() BatchRetrySettingsResponsePtrOutput {
	return o
}

func (o BatchRetrySettingsResponsePtrOutput) ToBatchRetrySettingsResponsePtrOutputWithContext(ctx context.Context) BatchRetrySettingsResponsePtrOutput {
	return o
}

func (o BatchRetrySettingsResponsePtrOutput) Elem() BatchRetrySettingsResponseOutput {
	return o.ApplyT(func(v *BatchRetrySettingsResponse) BatchRetrySettingsResponse {
		if v != nil {
			return *v
		}
		var ret BatchRetrySettingsResponse
		return ret
	}).(BatchRetrySettingsResponseOutput)
}

// Maximum retry count for a mini-batch
func (o BatchRetrySettingsResponsePtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchRetrySettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// Invocation timeout for a mini-batch, in ISO 8601 format.
func (o BatchRetrySettingsResponsePtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchRetrySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

type ClientCredentialsResponse struct {
	// The authority URL used for authentication.
	AuthorityUrl *string `pulumi:"authorityUrl"`
	// The content of the certificate used for authentication.
	Certificate *string `pulumi:"certificate"`
	// The Client ID/Application ID
	ClientId *string `pulumi:"clientId"`
	// The client secret.
	ClientSecret *string `pulumi:"clientSecret"`
	//  Is it using certificate to authenticate. If false then use client secret.
	IsCertAuth *bool `pulumi:"isCertAuth"`
	// Resource Group.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The resource the service principal/app has access to.
	ResourceUri *string `pulumi:"resourceUri"`
	// Indicates which identity to use to authenticate service data access to customer's storage.
	ServiceDataAccessAuthIdentity *string `pulumi:"serviceDataAccessAuthIdentity"`
	// Subscription ID.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// The ID of the tenant the service principal/app belongs to.
	TenantId *string `pulumi:"tenantId"`
	// The thumbprint of the certificate above.
	Thumbprint *string `pulumi:"thumbprint"`
}

// ClientCredentialsResponseInput is an input type that accepts ClientCredentialsResponseArgs and ClientCredentialsResponseOutput values.
// You can construct a concrete instance of `ClientCredentialsResponseInput` via:
//
//          ClientCredentialsResponseArgs{...}
type ClientCredentialsResponseInput interface {
	pulumi.Input

	ToClientCredentialsResponseOutput() ClientCredentialsResponseOutput
	ToClientCredentialsResponseOutputWithContext(context.Context) ClientCredentialsResponseOutput
}

type ClientCredentialsResponseArgs struct {
	// The authority URL used for authentication.
	AuthorityUrl pulumi.StringPtrInput `pulumi:"authorityUrl"`
	// The content of the certificate used for authentication.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The Client ID/Application ID
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The client secret.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	//  Is it using certificate to authenticate. If false then use client secret.
	IsCertAuth pulumi.BoolPtrInput `pulumi:"isCertAuth"`
	// Resource Group.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The resource the service principal/app has access to.
	ResourceUri pulumi.StringPtrInput `pulumi:"resourceUri"`
	// Indicates which identity to use to authenticate service data access to customer's storage.
	ServiceDataAccessAuthIdentity pulumi.StringPtrInput `pulumi:"serviceDataAccessAuthIdentity"`
	// Subscription ID.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// The ID of the tenant the service principal/app belongs to.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The thumbprint of the certificate above.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (ClientCredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientCredentialsResponse)(nil)).Elem()
}

func (i ClientCredentialsResponseArgs) ToClientCredentialsResponseOutput() ClientCredentialsResponseOutput {
	return i.ToClientCredentialsResponseOutputWithContext(context.Background())
}

func (i ClientCredentialsResponseArgs) ToClientCredentialsResponseOutputWithContext(ctx context.Context) ClientCredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientCredentialsResponseOutput)
}

func (i ClientCredentialsResponseArgs) ToClientCredentialsResponsePtrOutput() ClientCredentialsResponsePtrOutput {
	return i.ToClientCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i ClientCredentialsResponseArgs) ToClientCredentialsResponsePtrOutputWithContext(ctx context.Context) ClientCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientCredentialsResponseOutput).ToClientCredentialsResponsePtrOutputWithContext(ctx)
}

// ClientCredentialsResponsePtrInput is an input type that accepts ClientCredentialsResponseArgs, ClientCredentialsResponsePtr and ClientCredentialsResponsePtrOutput values.
// You can construct a concrete instance of `ClientCredentialsResponsePtrInput` via:
//
//          ClientCredentialsResponseArgs{...}
//
//  or:
//
//          nil
type ClientCredentialsResponsePtrInput interface {
	pulumi.Input

	ToClientCredentialsResponsePtrOutput() ClientCredentialsResponsePtrOutput
	ToClientCredentialsResponsePtrOutputWithContext(context.Context) ClientCredentialsResponsePtrOutput
}

type clientCredentialsResponsePtrType ClientCredentialsResponseArgs

func ClientCredentialsResponsePtr(v *ClientCredentialsResponseArgs) ClientCredentialsResponsePtrInput {
	return (*clientCredentialsResponsePtrType)(v)
}

func (*clientCredentialsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientCredentialsResponse)(nil)).Elem()
}

func (i *clientCredentialsResponsePtrType) ToClientCredentialsResponsePtrOutput() ClientCredentialsResponsePtrOutput {
	return i.ToClientCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i *clientCredentialsResponsePtrType) ToClientCredentialsResponsePtrOutputWithContext(ctx context.Context) ClientCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientCredentialsResponsePtrOutput)
}

type ClientCredentialsResponseOutput struct{ *pulumi.OutputState }

func (ClientCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientCredentialsResponse)(nil)).Elem()
}

func (o ClientCredentialsResponseOutput) ToClientCredentialsResponseOutput() ClientCredentialsResponseOutput {
	return o
}

func (o ClientCredentialsResponseOutput) ToClientCredentialsResponseOutputWithContext(ctx context.Context) ClientCredentialsResponseOutput {
	return o
}

func (o ClientCredentialsResponseOutput) ToClientCredentialsResponsePtrOutput() ClientCredentialsResponsePtrOutput {
	return o.ToClientCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o ClientCredentialsResponseOutput) ToClientCredentialsResponsePtrOutputWithContext(ctx context.Context) ClientCredentialsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientCredentialsResponse) *ClientCredentialsResponse {
		return &v
	}).(ClientCredentialsResponsePtrOutput)
}

// The authority URL used for authentication.
func (o ClientCredentialsResponseOutput) AuthorityUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientCredentialsResponse) *string { return v.AuthorityUrl }).(pulumi.StringPtrOutput)
}

// The content of the certificate used for authentication.
func (o ClientCredentialsResponseOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientCredentialsResponse) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The Client ID/Application ID
func (o ClientCredentialsResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientCredentialsResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The client secret.
func (o ClientCredentialsResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientCredentialsResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

//  Is it using certificate to authenticate. If false then use client secret.
func (o ClientCredentialsResponseOutput) IsCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientCredentialsResponse) *bool { return v.IsCertAuth }).(pulumi.BoolPtrOutput)
}

// Resource Group.
func (o ClientCredentialsResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientCredentialsResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The resource the service principal/app has access to.
func (o ClientCredentialsResponseOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientCredentialsResponse) *string { return v.ResourceUri }).(pulumi.StringPtrOutput)
}

// Indicates which identity to use to authenticate service data access to customer's storage.
func (o ClientCredentialsResponseOutput) ServiceDataAccessAuthIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientCredentialsResponse) *string { return v.ServiceDataAccessAuthIdentity }).(pulumi.StringPtrOutput)
}

// Subscription ID.
func (o ClientCredentialsResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientCredentialsResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// The ID of the tenant the service principal/app belongs to.
func (o ClientCredentialsResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientCredentialsResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate above.
func (o ClientCredentialsResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientCredentialsResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type ClientCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (ClientCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientCredentialsResponse)(nil)).Elem()
}

func (o ClientCredentialsResponsePtrOutput) ToClientCredentialsResponsePtrOutput() ClientCredentialsResponsePtrOutput {
	return o
}

func (o ClientCredentialsResponsePtrOutput) ToClientCredentialsResponsePtrOutputWithContext(ctx context.Context) ClientCredentialsResponsePtrOutput {
	return o
}

func (o ClientCredentialsResponsePtrOutput) Elem() ClientCredentialsResponseOutput {
	return o.ApplyT(func(v *ClientCredentialsResponse) ClientCredentialsResponse {
		if v != nil {
			return *v
		}
		var ret ClientCredentialsResponse
		return ret
	}).(ClientCredentialsResponseOutput)
}

// The authority URL used for authentication.
func (o ClientCredentialsResponsePtrOutput) AuthorityUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorityUrl
	}).(pulumi.StringPtrOutput)
}

// The content of the certificate used for authentication.
func (o ClientCredentialsResponsePtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

// The Client ID/Application ID
func (o ClientCredentialsResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret.
func (o ClientCredentialsResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

//  Is it using certificate to authenticate. If false then use client secret.
func (o ClientCredentialsResponsePtrOutput) IsCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientCredentialsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsCertAuth
	}).(pulumi.BoolPtrOutput)
}

// Resource Group.
func (o ClientCredentialsResponsePtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// The resource the service principal/app has access to.
func (o ClientCredentialsResponsePtrOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceUri
	}).(pulumi.StringPtrOutput)
}

// Indicates which identity to use to authenticate service data access to customer's storage.
func (o ClientCredentialsResponsePtrOutput) ServiceDataAccessAuthIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceDataAccessAuthIdentity
	}).(pulumi.StringPtrOutput)
}

// Subscription ID.
func (o ClientCredentialsResponsePtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// The ID of the tenant the service principal/app belongs to.
func (o ClientCredentialsResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate above.
func (o ClientCredentialsResponsePtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

type CodeConfiguration struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// The script to execute on startup. eg. "score.py"
	ScoringScript string `pulumi:"scoringScript"`
}

// CodeConfigurationInput is an input type that accepts CodeConfigurationArgs and CodeConfigurationOutput values.
// You can construct a concrete instance of `CodeConfigurationInput` via:
//
//          CodeConfigurationArgs{...}
type CodeConfigurationInput interface {
	pulumi.Input

	ToCodeConfigurationOutput() CodeConfigurationOutput
	ToCodeConfigurationOutputWithContext(context.Context) CodeConfigurationOutput
}

type CodeConfigurationArgs struct {
	// ARM resource ID of the code asset.
	CodeId pulumi.StringPtrInput `pulumi:"codeId"`
	// The script to execute on startup. eg. "score.py"
	ScoringScript pulumi.StringInput `pulumi:"scoringScript"`
}

func (CodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeConfiguration)(nil)).Elem()
}

func (i CodeConfigurationArgs) ToCodeConfigurationOutput() CodeConfigurationOutput {
	return i.ToCodeConfigurationOutputWithContext(context.Background())
}

func (i CodeConfigurationArgs) ToCodeConfigurationOutputWithContext(ctx context.Context) CodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeConfigurationOutput)
}

func (i CodeConfigurationArgs) ToCodeConfigurationPtrOutput() CodeConfigurationPtrOutput {
	return i.ToCodeConfigurationPtrOutputWithContext(context.Background())
}

func (i CodeConfigurationArgs) ToCodeConfigurationPtrOutputWithContext(ctx context.Context) CodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeConfigurationOutput).ToCodeConfigurationPtrOutputWithContext(ctx)
}

// CodeConfigurationPtrInput is an input type that accepts CodeConfigurationArgs, CodeConfigurationPtr and CodeConfigurationPtrOutput values.
// You can construct a concrete instance of `CodeConfigurationPtrInput` via:
//
//          CodeConfigurationArgs{...}
//
//  or:
//
//          nil
type CodeConfigurationPtrInput interface {
	pulumi.Input

	ToCodeConfigurationPtrOutput() CodeConfigurationPtrOutput
	ToCodeConfigurationPtrOutputWithContext(context.Context) CodeConfigurationPtrOutput
}

type codeConfigurationPtrType CodeConfigurationArgs

func CodeConfigurationPtr(v *CodeConfigurationArgs) CodeConfigurationPtrInput {
	return (*codeConfigurationPtrType)(v)
}

func (*codeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeConfiguration)(nil)).Elem()
}

func (i *codeConfigurationPtrType) ToCodeConfigurationPtrOutput() CodeConfigurationPtrOutput {
	return i.ToCodeConfigurationPtrOutputWithContext(context.Background())
}

func (i *codeConfigurationPtrType) ToCodeConfigurationPtrOutputWithContext(ctx context.Context) CodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeConfigurationPtrOutput)
}

type CodeConfigurationOutput struct{ *pulumi.OutputState }

func (CodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeConfiguration)(nil)).Elem()
}

func (o CodeConfigurationOutput) ToCodeConfigurationOutput() CodeConfigurationOutput {
	return o
}

func (o CodeConfigurationOutput) ToCodeConfigurationOutputWithContext(ctx context.Context) CodeConfigurationOutput {
	return o
}

func (o CodeConfigurationOutput) ToCodeConfigurationPtrOutput() CodeConfigurationPtrOutput {
	return o.ToCodeConfigurationPtrOutputWithContext(context.Background())
}

func (o CodeConfigurationOutput) ToCodeConfigurationPtrOutputWithContext(ctx context.Context) CodeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CodeConfiguration) *CodeConfiguration {
		return &v
	}).(CodeConfigurationPtrOutput)
}

// ARM resource ID of the code asset.
func (o CodeConfigurationOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeConfiguration) *string { return v.CodeId }).(pulumi.StringPtrOutput)
}

// The script to execute on startup. eg. "score.py"
func (o CodeConfigurationOutput) ScoringScript() pulumi.StringOutput {
	return o.ApplyT(func(v CodeConfiguration) string { return v.ScoringScript }).(pulumi.StringOutput)
}

type CodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (CodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeConfiguration)(nil)).Elem()
}

func (o CodeConfigurationPtrOutput) ToCodeConfigurationPtrOutput() CodeConfigurationPtrOutput {
	return o
}

func (o CodeConfigurationPtrOutput) ToCodeConfigurationPtrOutputWithContext(ctx context.Context) CodeConfigurationPtrOutput {
	return o
}

func (o CodeConfigurationPtrOutput) Elem() CodeConfigurationOutput {
	return o.ApplyT(func(v *CodeConfiguration) CodeConfiguration {
		if v != nil {
			return *v
		}
		var ret CodeConfiguration
		return ret
	}).(CodeConfigurationOutput)
}

// ARM resource ID of the code asset.
func (o CodeConfigurationPtrOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CodeId
	}).(pulumi.StringPtrOutput)
}

// The script to execute on startup. eg. "score.py"
func (o CodeConfigurationPtrOutput) ScoringScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ScoringScript
	}).(pulumi.StringPtrOutput)
}

type CodeConfigurationResponse struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// The script to execute on startup. eg. "score.py"
	ScoringScript string `pulumi:"scoringScript"`
}

// CodeConfigurationResponseInput is an input type that accepts CodeConfigurationResponseArgs and CodeConfigurationResponseOutput values.
// You can construct a concrete instance of `CodeConfigurationResponseInput` via:
//
//          CodeConfigurationResponseArgs{...}
type CodeConfigurationResponseInput interface {
	pulumi.Input

	ToCodeConfigurationResponseOutput() CodeConfigurationResponseOutput
	ToCodeConfigurationResponseOutputWithContext(context.Context) CodeConfigurationResponseOutput
}

type CodeConfigurationResponseArgs struct {
	// ARM resource ID of the code asset.
	CodeId pulumi.StringPtrInput `pulumi:"codeId"`
	// The script to execute on startup. eg. "score.py"
	ScoringScript pulumi.StringInput `pulumi:"scoringScript"`
}

func (CodeConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeConfigurationResponse)(nil)).Elem()
}

func (i CodeConfigurationResponseArgs) ToCodeConfigurationResponseOutput() CodeConfigurationResponseOutput {
	return i.ToCodeConfigurationResponseOutputWithContext(context.Background())
}

func (i CodeConfigurationResponseArgs) ToCodeConfigurationResponseOutputWithContext(ctx context.Context) CodeConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeConfigurationResponseOutput)
}

func (i CodeConfigurationResponseArgs) ToCodeConfigurationResponsePtrOutput() CodeConfigurationResponsePtrOutput {
	return i.ToCodeConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i CodeConfigurationResponseArgs) ToCodeConfigurationResponsePtrOutputWithContext(ctx context.Context) CodeConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeConfigurationResponseOutput).ToCodeConfigurationResponsePtrOutputWithContext(ctx)
}

// CodeConfigurationResponsePtrInput is an input type that accepts CodeConfigurationResponseArgs, CodeConfigurationResponsePtr and CodeConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `CodeConfigurationResponsePtrInput` via:
//
//          CodeConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type CodeConfigurationResponsePtrInput interface {
	pulumi.Input

	ToCodeConfigurationResponsePtrOutput() CodeConfigurationResponsePtrOutput
	ToCodeConfigurationResponsePtrOutputWithContext(context.Context) CodeConfigurationResponsePtrOutput
}

type codeConfigurationResponsePtrType CodeConfigurationResponseArgs

func CodeConfigurationResponsePtr(v *CodeConfigurationResponseArgs) CodeConfigurationResponsePtrInput {
	return (*codeConfigurationResponsePtrType)(v)
}

func (*codeConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeConfigurationResponse)(nil)).Elem()
}

func (i *codeConfigurationResponsePtrType) ToCodeConfigurationResponsePtrOutput() CodeConfigurationResponsePtrOutput {
	return i.ToCodeConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *codeConfigurationResponsePtrType) ToCodeConfigurationResponsePtrOutputWithContext(ctx context.Context) CodeConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeConfigurationResponsePtrOutput)
}

type CodeConfigurationResponseOutput struct{ *pulumi.OutputState }

func (CodeConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeConfigurationResponse)(nil)).Elem()
}

func (o CodeConfigurationResponseOutput) ToCodeConfigurationResponseOutput() CodeConfigurationResponseOutput {
	return o
}

func (o CodeConfigurationResponseOutput) ToCodeConfigurationResponseOutputWithContext(ctx context.Context) CodeConfigurationResponseOutput {
	return o
}

func (o CodeConfigurationResponseOutput) ToCodeConfigurationResponsePtrOutput() CodeConfigurationResponsePtrOutput {
	return o.ToCodeConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o CodeConfigurationResponseOutput) ToCodeConfigurationResponsePtrOutputWithContext(ctx context.Context) CodeConfigurationResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CodeConfigurationResponse) *CodeConfigurationResponse {
		return &v
	}).(CodeConfigurationResponsePtrOutput)
}

// ARM resource ID of the code asset.
func (o CodeConfigurationResponseOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeConfigurationResponse) *string { return v.CodeId }).(pulumi.StringPtrOutput)
}

// The script to execute on startup. eg. "score.py"
func (o CodeConfigurationResponseOutput) ScoringScript() pulumi.StringOutput {
	return o.ApplyT(func(v CodeConfigurationResponse) string { return v.ScoringScript }).(pulumi.StringOutput)
}

type CodeConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (CodeConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeConfigurationResponse)(nil)).Elem()
}

func (o CodeConfigurationResponsePtrOutput) ToCodeConfigurationResponsePtrOutput() CodeConfigurationResponsePtrOutput {
	return o
}

func (o CodeConfigurationResponsePtrOutput) ToCodeConfigurationResponsePtrOutputWithContext(ctx context.Context) CodeConfigurationResponsePtrOutput {
	return o
}

func (o CodeConfigurationResponsePtrOutput) Elem() CodeConfigurationResponseOutput {
	return o.ApplyT(func(v *CodeConfigurationResponse) CodeConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret CodeConfigurationResponse
		return ret
	}).(CodeConfigurationResponseOutput)
}

// ARM resource ID of the code asset.
func (o CodeConfigurationResponsePtrOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.CodeId
	}).(pulumi.StringPtrOutput)
}

// The script to execute on startup. eg. "score.py"
func (o CodeConfigurationResponsePtrOutput) ScoringScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ScoringScript
	}).(pulumi.StringPtrOutput)
}

type CodeContainerType struct {
	// The asset description text.
	Description *string `pulumi:"description"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// CodeContainerTypeInput is an input type that accepts CodeContainerTypeArgs and CodeContainerTypeOutput values.
// You can construct a concrete instance of `CodeContainerTypeInput` via:
//
//          CodeContainerTypeArgs{...}
type CodeContainerTypeInput interface {
	pulumi.Input

	ToCodeContainerTypeOutput() CodeContainerTypeOutput
	ToCodeContainerTypeOutputWithContext(context.Context) CodeContainerTypeOutput
}

type CodeContainerTypeArgs struct {
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (CodeContainerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeContainerType)(nil)).Elem()
}

func (i CodeContainerTypeArgs) ToCodeContainerTypeOutput() CodeContainerTypeOutput {
	return i.ToCodeContainerTypeOutputWithContext(context.Background())
}

func (i CodeContainerTypeArgs) ToCodeContainerTypeOutputWithContext(ctx context.Context) CodeContainerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeContainerTypeOutput)
}

func (i CodeContainerTypeArgs) ToCodeContainerTypePtrOutput() CodeContainerTypePtrOutput {
	return i.ToCodeContainerTypePtrOutputWithContext(context.Background())
}

func (i CodeContainerTypeArgs) ToCodeContainerTypePtrOutputWithContext(ctx context.Context) CodeContainerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeContainerTypeOutput).ToCodeContainerTypePtrOutputWithContext(ctx)
}

// CodeContainerTypePtrInput is an input type that accepts CodeContainerTypeArgs, CodeContainerTypePtr and CodeContainerTypePtrOutput values.
// You can construct a concrete instance of `CodeContainerTypePtrInput` via:
//
//          CodeContainerTypeArgs{...}
//
//  or:
//
//          nil
type CodeContainerTypePtrInput interface {
	pulumi.Input

	ToCodeContainerTypePtrOutput() CodeContainerTypePtrOutput
	ToCodeContainerTypePtrOutputWithContext(context.Context) CodeContainerTypePtrOutput
}

type codeContainerTypePtrType CodeContainerTypeArgs

func CodeContainerTypePtr(v *CodeContainerTypeArgs) CodeContainerTypePtrInput {
	return (*codeContainerTypePtrType)(v)
}

func (*codeContainerTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeContainerType)(nil)).Elem()
}

func (i *codeContainerTypePtrType) ToCodeContainerTypePtrOutput() CodeContainerTypePtrOutput {
	return i.ToCodeContainerTypePtrOutputWithContext(context.Background())
}

func (i *codeContainerTypePtrType) ToCodeContainerTypePtrOutputWithContext(ctx context.Context) CodeContainerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeContainerTypePtrOutput)
}

type CodeContainerTypeOutput struct{ *pulumi.OutputState }

func (CodeContainerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeContainerType)(nil)).Elem()
}

func (o CodeContainerTypeOutput) ToCodeContainerTypeOutput() CodeContainerTypeOutput {
	return o
}

func (o CodeContainerTypeOutput) ToCodeContainerTypeOutputWithContext(ctx context.Context) CodeContainerTypeOutput {
	return o
}

func (o CodeContainerTypeOutput) ToCodeContainerTypePtrOutput() CodeContainerTypePtrOutput {
	return o.ToCodeContainerTypePtrOutputWithContext(context.Background())
}

func (o CodeContainerTypeOutput) ToCodeContainerTypePtrOutputWithContext(ctx context.Context) CodeContainerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CodeContainerType) *CodeContainerType {
		return &v
	}).(CodeContainerTypePtrOutput)
}

// The asset description text.
func (o CodeContainerTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeContainerType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o CodeContainerTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeContainerType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CodeContainerTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeContainerType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type CodeContainerTypePtrOutput struct{ *pulumi.OutputState }

func (CodeContainerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeContainerType)(nil)).Elem()
}

func (o CodeContainerTypePtrOutput) ToCodeContainerTypePtrOutput() CodeContainerTypePtrOutput {
	return o
}

func (o CodeContainerTypePtrOutput) ToCodeContainerTypePtrOutputWithContext(ctx context.Context) CodeContainerTypePtrOutput {
	return o
}

func (o CodeContainerTypePtrOutput) Elem() CodeContainerTypeOutput {
	return o.ApplyT(func(v *CodeContainerType) CodeContainerType {
		if v != nil {
			return *v
		}
		var ret CodeContainerType
		return ret
	}).(CodeContainerTypeOutput)
}

// The asset description text.
func (o CodeContainerTypePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeContainerType) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o CodeContainerTypePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CodeContainerType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CodeContainerTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CodeContainerType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type CodeContainerResponse struct {
	// The asset description text.
	Description *string `pulumi:"description"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// CodeContainerResponseInput is an input type that accepts CodeContainerResponseArgs and CodeContainerResponseOutput values.
// You can construct a concrete instance of `CodeContainerResponseInput` via:
//
//          CodeContainerResponseArgs{...}
type CodeContainerResponseInput interface {
	pulumi.Input

	ToCodeContainerResponseOutput() CodeContainerResponseOutput
	ToCodeContainerResponseOutputWithContext(context.Context) CodeContainerResponseOutput
}

type CodeContainerResponseArgs struct {
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (CodeContainerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeContainerResponse)(nil)).Elem()
}

func (i CodeContainerResponseArgs) ToCodeContainerResponseOutput() CodeContainerResponseOutput {
	return i.ToCodeContainerResponseOutputWithContext(context.Background())
}

func (i CodeContainerResponseArgs) ToCodeContainerResponseOutputWithContext(ctx context.Context) CodeContainerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeContainerResponseOutput)
}

func (i CodeContainerResponseArgs) ToCodeContainerResponsePtrOutput() CodeContainerResponsePtrOutput {
	return i.ToCodeContainerResponsePtrOutputWithContext(context.Background())
}

func (i CodeContainerResponseArgs) ToCodeContainerResponsePtrOutputWithContext(ctx context.Context) CodeContainerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeContainerResponseOutput).ToCodeContainerResponsePtrOutputWithContext(ctx)
}

// CodeContainerResponsePtrInput is an input type that accepts CodeContainerResponseArgs, CodeContainerResponsePtr and CodeContainerResponsePtrOutput values.
// You can construct a concrete instance of `CodeContainerResponsePtrInput` via:
//
//          CodeContainerResponseArgs{...}
//
//  or:
//
//          nil
type CodeContainerResponsePtrInput interface {
	pulumi.Input

	ToCodeContainerResponsePtrOutput() CodeContainerResponsePtrOutput
	ToCodeContainerResponsePtrOutputWithContext(context.Context) CodeContainerResponsePtrOutput
}

type codeContainerResponsePtrType CodeContainerResponseArgs

func CodeContainerResponsePtr(v *CodeContainerResponseArgs) CodeContainerResponsePtrInput {
	return (*codeContainerResponsePtrType)(v)
}

func (*codeContainerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeContainerResponse)(nil)).Elem()
}

func (i *codeContainerResponsePtrType) ToCodeContainerResponsePtrOutput() CodeContainerResponsePtrOutput {
	return i.ToCodeContainerResponsePtrOutputWithContext(context.Background())
}

func (i *codeContainerResponsePtrType) ToCodeContainerResponsePtrOutputWithContext(ctx context.Context) CodeContainerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeContainerResponsePtrOutput)
}

type CodeContainerResponseOutput struct{ *pulumi.OutputState }

func (CodeContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeContainerResponse)(nil)).Elem()
}

func (o CodeContainerResponseOutput) ToCodeContainerResponseOutput() CodeContainerResponseOutput {
	return o
}

func (o CodeContainerResponseOutput) ToCodeContainerResponseOutputWithContext(ctx context.Context) CodeContainerResponseOutput {
	return o
}

func (o CodeContainerResponseOutput) ToCodeContainerResponsePtrOutput() CodeContainerResponsePtrOutput {
	return o.ToCodeContainerResponsePtrOutputWithContext(context.Background())
}

func (o CodeContainerResponseOutput) ToCodeContainerResponsePtrOutputWithContext(ctx context.Context) CodeContainerResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CodeContainerResponse) *CodeContainerResponse {
		return &v
	}).(CodeContainerResponsePtrOutput)
}

// The asset description text.
func (o CodeContainerResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeContainerResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o CodeContainerResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeContainerResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CodeContainerResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeContainerResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type CodeContainerResponsePtrOutput struct{ *pulumi.OutputState }

func (CodeContainerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeContainerResponse)(nil)).Elem()
}

func (o CodeContainerResponsePtrOutput) ToCodeContainerResponsePtrOutput() CodeContainerResponsePtrOutput {
	return o
}

func (o CodeContainerResponsePtrOutput) ToCodeContainerResponsePtrOutputWithContext(ctx context.Context) CodeContainerResponsePtrOutput {
	return o
}

func (o CodeContainerResponsePtrOutput) Elem() CodeContainerResponseOutput {
	return o.ApplyT(func(v *CodeContainerResponse) CodeContainerResponse {
		if v != nil {
			return *v
		}
		var ret CodeContainerResponse
		return ret
	}).(CodeContainerResponseOutput)
}

// The asset description text.
func (o CodeContainerResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeContainerResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o CodeContainerResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CodeContainerResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CodeContainerResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CodeContainerResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type CodeVersionType struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId *string `pulumi:"datastoreId"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// The path of the file/directory in the datastore.
	Path string `pulumi:"path"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// CodeVersionTypeInput is an input type that accepts CodeVersionTypeArgs and CodeVersionTypeOutput values.
// You can construct a concrete instance of `CodeVersionTypeInput` via:
//
//          CodeVersionTypeArgs{...}
type CodeVersionTypeInput interface {
	pulumi.Input

	ToCodeVersionTypeOutput() CodeVersionTypeOutput
	ToCodeVersionTypeOutputWithContext(context.Context) CodeVersionTypeOutput
}

type CodeVersionTypeArgs struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous pulumi.BoolPtrInput `pulumi:"isAnonymous"`
	// The path of the file/directory in the datastore.
	Path pulumi.StringInput `pulumi:"path"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (CodeVersionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeVersionType)(nil)).Elem()
}

func (i CodeVersionTypeArgs) ToCodeVersionTypeOutput() CodeVersionTypeOutput {
	return i.ToCodeVersionTypeOutputWithContext(context.Background())
}

func (i CodeVersionTypeArgs) ToCodeVersionTypeOutputWithContext(ctx context.Context) CodeVersionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeVersionTypeOutput)
}

func (i CodeVersionTypeArgs) ToCodeVersionTypePtrOutput() CodeVersionTypePtrOutput {
	return i.ToCodeVersionTypePtrOutputWithContext(context.Background())
}

func (i CodeVersionTypeArgs) ToCodeVersionTypePtrOutputWithContext(ctx context.Context) CodeVersionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeVersionTypeOutput).ToCodeVersionTypePtrOutputWithContext(ctx)
}

// CodeVersionTypePtrInput is an input type that accepts CodeVersionTypeArgs, CodeVersionTypePtr and CodeVersionTypePtrOutput values.
// You can construct a concrete instance of `CodeVersionTypePtrInput` via:
//
//          CodeVersionTypeArgs{...}
//
//  or:
//
//          nil
type CodeVersionTypePtrInput interface {
	pulumi.Input

	ToCodeVersionTypePtrOutput() CodeVersionTypePtrOutput
	ToCodeVersionTypePtrOutputWithContext(context.Context) CodeVersionTypePtrOutput
}

type codeVersionTypePtrType CodeVersionTypeArgs

func CodeVersionTypePtr(v *CodeVersionTypeArgs) CodeVersionTypePtrInput {
	return (*codeVersionTypePtrType)(v)
}

func (*codeVersionTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeVersionType)(nil)).Elem()
}

func (i *codeVersionTypePtrType) ToCodeVersionTypePtrOutput() CodeVersionTypePtrOutput {
	return i.ToCodeVersionTypePtrOutputWithContext(context.Background())
}

func (i *codeVersionTypePtrType) ToCodeVersionTypePtrOutputWithContext(ctx context.Context) CodeVersionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeVersionTypePtrOutput)
}

type CodeVersionTypeOutput struct{ *pulumi.OutputState }

func (CodeVersionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeVersionType)(nil)).Elem()
}

func (o CodeVersionTypeOutput) ToCodeVersionTypeOutput() CodeVersionTypeOutput {
	return o
}

func (o CodeVersionTypeOutput) ToCodeVersionTypeOutputWithContext(ctx context.Context) CodeVersionTypeOutput {
	return o
}

func (o CodeVersionTypeOutput) ToCodeVersionTypePtrOutput() CodeVersionTypePtrOutput {
	return o.ToCodeVersionTypePtrOutputWithContext(context.Background())
}

func (o CodeVersionTypeOutput) ToCodeVersionTypePtrOutputWithContext(ctx context.Context) CodeVersionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CodeVersionType) *CodeVersionType {
		return &v
	}).(CodeVersionTypePtrOutput)
}

// ARM resource ID of the datastore where the asset is located.
func (o CodeVersionTypeOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeVersionType) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o CodeVersionTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeVersionType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o CodeVersionTypeOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CodeVersionType) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// The path of the file/directory in the datastore.
func (o CodeVersionTypeOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v CodeVersionType) string { return v.Path }).(pulumi.StringOutput)
}

// The asset property dictionary.
func (o CodeVersionTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeVersionType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CodeVersionTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeVersionType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type CodeVersionTypePtrOutput struct{ *pulumi.OutputState }

func (CodeVersionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeVersionType)(nil)).Elem()
}

func (o CodeVersionTypePtrOutput) ToCodeVersionTypePtrOutput() CodeVersionTypePtrOutput {
	return o
}

func (o CodeVersionTypePtrOutput) ToCodeVersionTypePtrOutputWithContext(ctx context.Context) CodeVersionTypePtrOutput {
	return o
}

func (o CodeVersionTypePtrOutput) Elem() CodeVersionTypeOutput {
	return o.ApplyT(func(v *CodeVersionType) CodeVersionType {
		if v != nil {
			return *v
		}
		var ret CodeVersionType
		return ret
	}).(CodeVersionTypeOutput)
}

// ARM resource ID of the datastore where the asset is located.
func (o CodeVersionTypePtrOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeVersionType) *string {
		if v == nil {
			return nil
		}
		return v.DatastoreId
	}).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o CodeVersionTypePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeVersionType) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o CodeVersionTypePtrOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CodeVersionType) *bool {
		if v == nil {
			return nil
		}
		return v.IsAnonymous
	}).(pulumi.BoolPtrOutput)
}

// The path of the file/directory in the datastore.
func (o CodeVersionTypePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeVersionType) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o CodeVersionTypePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CodeVersionType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CodeVersionTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CodeVersionType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type CodeVersionResponse struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId *string `pulumi:"datastoreId"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// The path of the file/directory in the datastore.
	Path string `pulumi:"path"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// CodeVersionResponseInput is an input type that accepts CodeVersionResponseArgs and CodeVersionResponseOutput values.
// You can construct a concrete instance of `CodeVersionResponseInput` via:
//
//          CodeVersionResponseArgs{...}
type CodeVersionResponseInput interface {
	pulumi.Input

	ToCodeVersionResponseOutput() CodeVersionResponseOutput
	ToCodeVersionResponseOutputWithContext(context.Context) CodeVersionResponseOutput
}

type CodeVersionResponseArgs struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous pulumi.BoolPtrInput `pulumi:"isAnonymous"`
	// The path of the file/directory in the datastore.
	Path pulumi.StringInput `pulumi:"path"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (CodeVersionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeVersionResponse)(nil)).Elem()
}

func (i CodeVersionResponseArgs) ToCodeVersionResponseOutput() CodeVersionResponseOutput {
	return i.ToCodeVersionResponseOutputWithContext(context.Background())
}

func (i CodeVersionResponseArgs) ToCodeVersionResponseOutputWithContext(ctx context.Context) CodeVersionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeVersionResponseOutput)
}

func (i CodeVersionResponseArgs) ToCodeVersionResponsePtrOutput() CodeVersionResponsePtrOutput {
	return i.ToCodeVersionResponsePtrOutputWithContext(context.Background())
}

func (i CodeVersionResponseArgs) ToCodeVersionResponsePtrOutputWithContext(ctx context.Context) CodeVersionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeVersionResponseOutput).ToCodeVersionResponsePtrOutputWithContext(ctx)
}

// CodeVersionResponsePtrInput is an input type that accepts CodeVersionResponseArgs, CodeVersionResponsePtr and CodeVersionResponsePtrOutput values.
// You can construct a concrete instance of `CodeVersionResponsePtrInput` via:
//
//          CodeVersionResponseArgs{...}
//
//  or:
//
//          nil
type CodeVersionResponsePtrInput interface {
	pulumi.Input

	ToCodeVersionResponsePtrOutput() CodeVersionResponsePtrOutput
	ToCodeVersionResponsePtrOutputWithContext(context.Context) CodeVersionResponsePtrOutput
}

type codeVersionResponsePtrType CodeVersionResponseArgs

func CodeVersionResponsePtr(v *CodeVersionResponseArgs) CodeVersionResponsePtrInput {
	return (*codeVersionResponsePtrType)(v)
}

func (*codeVersionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeVersionResponse)(nil)).Elem()
}

func (i *codeVersionResponsePtrType) ToCodeVersionResponsePtrOutput() CodeVersionResponsePtrOutput {
	return i.ToCodeVersionResponsePtrOutputWithContext(context.Background())
}

func (i *codeVersionResponsePtrType) ToCodeVersionResponsePtrOutputWithContext(ctx context.Context) CodeVersionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeVersionResponsePtrOutput)
}

type CodeVersionResponseOutput struct{ *pulumi.OutputState }

func (CodeVersionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeVersionResponse)(nil)).Elem()
}

func (o CodeVersionResponseOutput) ToCodeVersionResponseOutput() CodeVersionResponseOutput {
	return o
}

func (o CodeVersionResponseOutput) ToCodeVersionResponseOutputWithContext(ctx context.Context) CodeVersionResponseOutput {
	return o
}

func (o CodeVersionResponseOutput) ToCodeVersionResponsePtrOutput() CodeVersionResponsePtrOutput {
	return o.ToCodeVersionResponsePtrOutputWithContext(context.Background())
}

func (o CodeVersionResponseOutput) ToCodeVersionResponsePtrOutputWithContext(ctx context.Context) CodeVersionResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CodeVersionResponse) *CodeVersionResponse {
		return &v
	}).(CodeVersionResponsePtrOutput)
}

// ARM resource ID of the datastore where the asset is located.
func (o CodeVersionResponseOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeVersionResponse) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o CodeVersionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeVersionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o CodeVersionResponseOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CodeVersionResponse) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// The path of the file/directory in the datastore.
func (o CodeVersionResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v CodeVersionResponse) string { return v.Path }).(pulumi.StringOutput)
}

// The asset property dictionary.
func (o CodeVersionResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeVersionResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CodeVersionResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeVersionResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type CodeVersionResponsePtrOutput struct{ *pulumi.OutputState }

func (CodeVersionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeVersionResponse)(nil)).Elem()
}

func (o CodeVersionResponsePtrOutput) ToCodeVersionResponsePtrOutput() CodeVersionResponsePtrOutput {
	return o
}

func (o CodeVersionResponsePtrOutput) ToCodeVersionResponsePtrOutputWithContext(ctx context.Context) CodeVersionResponsePtrOutput {
	return o
}

func (o CodeVersionResponsePtrOutput) Elem() CodeVersionResponseOutput {
	return o.ApplyT(func(v *CodeVersionResponse) CodeVersionResponse {
		if v != nil {
			return *v
		}
		var ret CodeVersionResponse
		return ret
	}).(CodeVersionResponseOutput)
}

// ARM resource ID of the datastore where the asset is located.
func (o CodeVersionResponsePtrOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeVersionResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatastoreId
	}).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o CodeVersionResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeVersionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o CodeVersionResponsePtrOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CodeVersionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsAnonymous
	}).(pulumi.BoolPtrOutput)
}

// The path of the file/directory in the datastore.
func (o CodeVersionResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeVersionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o CodeVersionResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CodeVersionResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CodeVersionResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CodeVersionResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type CommandJob struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// The command to execute on startup of the job. eg. "python train.py"
	Command string `pulumi:"command"`
	// Compute binding for the job.
	Compute ComputeConfiguration `pulumi:"compute"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution interface{} `pulumi:"distribution"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName *string `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
	// Defaults to AmlToken if null.
	Identity interface{} `pulumi:"identity"`
	// Mapping of input data bindings used in the job.
	InputDataBindings map[string]InputDataBinding `pulumi:"inputDataBindings"`
	// Enum to determine the type of job.
	// Expected value is 'Command'.
	JobType string `pulumi:"jobType"`
	// Mapping of output data bindings used in the job.
	OutputDataBindings map[string]OutputDataBinding `pulumi:"outputDataBindings"`
	// Job priority for scheduling policy. Only applies to AMLCompute.
	// Private preview feature and only available to users on the allow list.
	Priority *int `pulumi:"priority"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
	// The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
	Timeout *string `pulumi:"timeout"`
}

// CommandJobInput is an input type that accepts CommandJobArgs and CommandJobOutput values.
// You can construct a concrete instance of `CommandJobInput` via:
//
//          CommandJobArgs{...}
type CommandJobInput interface {
	pulumi.Input

	ToCommandJobOutput() CommandJobOutput
	ToCommandJobOutputWithContext(context.Context) CommandJobOutput
}

type CommandJobArgs struct {
	// ARM resource ID of the code asset.
	CodeId pulumi.StringPtrInput `pulumi:"codeId"`
	// The command to execute on startup of the job. eg. "python train.py"
	Command pulumi.StringInput `pulumi:"command"`
	// Compute binding for the job.
	Compute ComputeConfigurationInput `pulumi:"compute"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution pulumi.Input `pulumi:"distribution"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName pulumi.StringPtrInput `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
	// Defaults to AmlToken if null.
	Identity pulumi.Input `pulumi:"identity"`
	// Mapping of input data bindings used in the job.
	InputDataBindings InputDataBindingMapInput `pulumi:"inputDataBindings"`
	// Enum to determine the type of job.
	// Expected value is 'Command'.
	JobType pulumi.StringInput `pulumi:"jobType"`
	// Mapping of output data bindings used in the job.
	OutputDataBindings OutputDataBindingMapInput `pulumi:"outputDataBindings"`
	// Job priority for scheduling policy. Only applies to AMLCompute.
	// Private preview feature and only available to users on the allow list.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (CommandJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommandJob)(nil)).Elem()
}

func (i CommandJobArgs) ToCommandJobOutput() CommandJobOutput {
	return i.ToCommandJobOutputWithContext(context.Background())
}

func (i CommandJobArgs) ToCommandJobOutputWithContext(ctx context.Context) CommandJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommandJobOutput)
}

type CommandJobOutput struct{ *pulumi.OutputState }

func (CommandJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommandJob)(nil)).Elem()
}

func (o CommandJobOutput) ToCommandJobOutput() CommandJobOutput {
	return o
}

func (o CommandJobOutput) ToCommandJobOutputWithContext(ctx context.Context) CommandJobOutput {
	return o
}

// ARM resource ID of the code asset.
func (o CommandJobOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJob) *string { return v.CodeId }).(pulumi.StringPtrOutput)
}

// The command to execute on startup of the job. eg. "python train.py"
func (o CommandJobOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v CommandJob) string { return v.Command }).(pulumi.StringOutput)
}

// Compute binding for the job.
func (o CommandJobOutput) Compute() ComputeConfigurationOutput {
	return o.ApplyT(func(v CommandJob) ComputeConfiguration { return v.Compute }).(ComputeConfigurationOutput)
}

// The asset description text.
func (o CommandJobOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJob) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
func (o CommandJobOutput) Distribution() pulumi.AnyOutput {
	return o.ApplyT(func(v CommandJob) interface{} { return v.Distribution }).(pulumi.AnyOutput)
}

// The ARM resource ID of the Environment specification for the job.
func (o CommandJobOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJob) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables included in the job.
func (o CommandJobOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v CommandJob) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
func (o CommandJobOutput) ExperimentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJob) *string { return v.ExperimentName }).(pulumi.StringPtrOutput)
}

// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
// Defaults to AmlToken if null.
func (o CommandJobOutput) Identity() pulumi.AnyOutput {
	return o.ApplyT(func(v CommandJob) interface{} { return v.Identity }).(pulumi.AnyOutput)
}

// Mapping of input data bindings used in the job.
func (o CommandJobOutput) InputDataBindings() InputDataBindingMapOutput {
	return o.ApplyT(func(v CommandJob) map[string]InputDataBinding { return v.InputDataBindings }).(InputDataBindingMapOutput)
}

// Enum to determine the type of job.
// Expected value is 'Command'.
func (o CommandJobOutput) JobType() pulumi.StringOutput {
	return o.ApplyT(func(v CommandJob) string { return v.JobType }).(pulumi.StringOutput)
}

// Mapping of output data bindings used in the job.
func (o CommandJobOutput) OutputDataBindings() OutputDataBindingMapOutput {
	return o.ApplyT(func(v CommandJob) map[string]OutputDataBinding { return v.OutputDataBindings }).(OutputDataBindingMapOutput)
}

// Job priority for scheduling policy. Only applies to AMLCompute.
// Private preview feature and only available to users on the allow list.
func (o CommandJobOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CommandJob) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The asset property dictionary.
func (o CommandJobOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v CommandJob) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CommandJobOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CommandJob) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
func (o CommandJobOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJob) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type CommandJobResponse struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// The command to execute on startup of the job. eg. "python train.py"
	Command string `pulumi:"command"`
	// Compute binding for the job.
	Compute ComputeConfigurationResponse `pulumi:"compute"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution interface{} `pulumi:"distribution"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName *string `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
	// Defaults to AmlToken if null.
	Identity interface{} `pulumi:"identity"`
	// Mapping of input data bindings used in the job.
	InputDataBindings map[string]InputDataBindingResponse `pulumi:"inputDataBindings"`
	// List of JobEndpoints.
	// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
	InteractionEndpoints map[string]JobEndpointResponse `pulumi:"interactionEndpoints"`
	// Enum to determine the type of job.
	// Expected value is 'Command'.
	JobType string `pulumi:"jobType"`
	// Location of the job output logs and artifacts.
	Output JobOutputResponse `pulumi:"output"`
	// Mapping of output data bindings used in the job.
	OutputDataBindings map[string]OutputDataBindingResponse `pulumi:"outputDataBindings"`
	// Input parameters.
	Parameters interface{} `pulumi:"parameters"`
	// Job priority for scheduling policy. Only applies to AMLCompute.
	// Private preview feature and only available to users on the allow list.
	Priority *int `pulumi:"priority"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Specifies the job provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// Status of the job.
	Status string `pulumi:"status"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
	// The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
	Timeout *string `pulumi:"timeout"`
}

// CommandJobResponseInput is an input type that accepts CommandJobResponseArgs and CommandJobResponseOutput values.
// You can construct a concrete instance of `CommandJobResponseInput` via:
//
//          CommandJobResponseArgs{...}
type CommandJobResponseInput interface {
	pulumi.Input

	ToCommandJobResponseOutput() CommandJobResponseOutput
	ToCommandJobResponseOutputWithContext(context.Context) CommandJobResponseOutput
}

type CommandJobResponseArgs struct {
	// ARM resource ID of the code asset.
	CodeId pulumi.StringPtrInput `pulumi:"codeId"`
	// The command to execute on startup of the job. eg. "python train.py"
	Command pulumi.StringInput `pulumi:"command"`
	// Compute binding for the job.
	Compute ComputeConfigurationResponseInput `pulumi:"compute"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution pulumi.Input `pulumi:"distribution"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName pulumi.StringPtrInput `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
	// Defaults to AmlToken if null.
	Identity pulumi.Input `pulumi:"identity"`
	// Mapping of input data bindings used in the job.
	InputDataBindings InputDataBindingResponseMapInput `pulumi:"inputDataBindings"`
	// List of JobEndpoints.
	// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
	InteractionEndpoints JobEndpointResponseMapInput `pulumi:"interactionEndpoints"`
	// Enum to determine the type of job.
	// Expected value is 'Command'.
	JobType pulumi.StringInput `pulumi:"jobType"`
	// Location of the job output logs and artifacts.
	Output JobOutputResponseInput `pulumi:"output"`
	// Mapping of output data bindings used in the job.
	OutputDataBindings OutputDataBindingResponseMapInput `pulumi:"outputDataBindings"`
	// Input parameters.
	Parameters pulumi.Input `pulumi:"parameters"`
	// Job priority for scheduling policy. Only applies to AMLCompute.
	// Private preview feature and only available to users on the allow list.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Specifies the job provisioning state.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Status of the job.
	Status pulumi.StringInput `pulumi:"status"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (CommandJobResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommandJobResponse)(nil)).Elem()
}

func (i CommandJobResponseArgs) ToCommandJobResponseOutput() CommandJobResponseOutput {
	return i.ToCommandJobResponseOutputWithContext(context.Background())
}

func (i CommandJobResponseArgs) ToCommandJobResponseOutputWithContext(ctx context.Context) CommandJobResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommandJobResponseOutput)
}

type CommandJobResponseOutput struct{ *pulumi.OutputState }

func (CommandJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommandJobResponse)(nil)).Elem()
}

func (o CommandJobResponseOutput) ToCommandJobResponseOutput() CommandJobResponseOutput {
	return o
}

func (o CommandJobResponseOutput) ToCommandJobResponseOutputWithContext(ctx context.Context) CommandJobResponseOutput {
	return o
}

// ARM resource ID of the code asset.
func (o CommandJobResponseOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJobResponse) *string { return v.CodeId }).(pulumi.StringPtrOutput)
}

// The command to execute on startup of the job. eg. "python train.py"
func (o CommandJobResponseOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v CommandJobResponse) string { return v.Command }).(pulumi.StringOutput)
}

// Compute binding for the job.
func (o CommandJobResponseOutput) Compute() ComputeConfigurationResponseOutput {
	return o.ApplyT(func(v CommandJobResponse) ComputeConfigurationResponse { return v.Compute }).(ComputeConfigurationResponseOutput)
}

// The asset description text.
func (o CommandJobResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJobResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
func (o CommandJobResponseOutput) Distribution() pulumi.AnyOutput {
	return o.ApplyT(func(v CommandJobResponse) interface{} { return v.Distribution }).(pulumi.AnyOutput)
}

// The ARM resource ID of the Environment specification for the job.
func (o CommandJobResponseOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJobResponse) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables included in the job.
func (o CommandJobResponseOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v CommandJobResponse) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
func (o CommandJobResponseOutput) ExperimentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJobResponse) *string { return v.ExperimentName }).(pulumi.StringPtrOutput)
}

// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
// Defaults to AmlToken if null.
func (o CommandJobResponseOutput) Identity() pulumi.AnyOutput {
	return o.ApplyT(func(v CommandJobResponse) interface{} { return v.Identity }).(pulumi.AnyOutput)
}

// Mapping of input data bindings used in the job.
func (o CommandJobResponseOutput) InputDataBindings() InputDataBindingResponseMapOutput {
	return o.ApplyT(func(v CommandJobResponse) map[string]InputDataBindingResponse { return v.InputDataBindings }).(InputDataBindingResponseMapOutput)
}

// List of JobEndpoints.
// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
func (o CommandJobResponseOutput) InteractionEndpoints() JobEndpointResponseMapOutput {
	return o.ApplyT(func(v CommandJobResponse) map[string]JobEndpointResponse { return v.InteractionEndpoints }).(JobEndpointResponseMapOutput)
}

// Enum to determine the type of job.
// Expected value is 'Command'.
func (o CommandJobResponseOutput) JobType() pulumi.StringOutput {
	return o.ApplyT(func(v CommandJobResponse) string { return v.JobType }).(pulumi.StringOutput)
}

// Location of the job output logs and artifacts.
func (o CommandJobResponseOutput) Output() JobOutputResponseOutput {
	return o.ApplyT(func(v CommandJobResponse) JobOutputResponse { return v.Output }).(JobOutputResponseOutput)
}

// Mapping of output data bindings used in the job.
func (o CommandJobResponseOutput) OutputDataBindings() OutputDataBindingResponseMapOutput {
	return o.ApplyT(func(v CommandJobResponse) map[string]OutputDataBindingResponse { return v.OutputDataBindings }).(OutputDataBindingResponseMapOutput)
}

// Input parameters.
func (o CommandJobResponseOutput) Parameters() pulumi.AnyOutput {
	return o.ApplyT(func(v CommandJobResponse) interface{} { return v.Parameters }).(pulumi.AnyOutput)
}

// Job priority for scheduling policy. Only applies to AMLCompute.
// Private preview feature and only available to users on the allow list.
func (o CommandJobResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CommandJobResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The asset property dictionary.
func (o CommandJobResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v CommandJobResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Specifies the job provisioning state.
func (o CommandJobResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v CommandJobResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Status of the job.
func (o CommandJobResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CommandJobResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CommandJobResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CommandJobResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
func (o CommandJobResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJobResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ComputeBinding struct {
	// ID of the compute resource.
	ComputeId *string `pulumi:"computeId"`
	// Number of nodes.
	NodeCount *int `pulumi:"nodeCount"`
}

// ComputeBindingInput is an input type that accepts ComputeBindingArgs and ComputeBindingOutput values.
// You can construct a concrete instance of `ComputeBindingInput` via:
//
//          ComputeBindingArgs{...}
type ComputeBindingInput interface {
	pulumi.Input

	ToComputeBindingOutput() ComputeBindingOutput
	ToComputeBindingOutputWithContext(context.Context) ComputeBindingOutput
}

type ComputeBindingArgs struct {
	// ID of the compute resource.
	ComputeId pulumi.StringPtrInput `pulumi:"computeId"`
	// Number of nodes.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (ComputeBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeBinding)(nil)).Elem()
}

func (i ComputeBindingArgs) ToComputeBindingOutput() ComputeBindingOutput {
	return i.ToComputeBindingOutputWithContext(context.Background())
}

func (i ComputeBindingArgs) ToComputeBindingOutputWithContext(ctx context.Context) ComputeBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeBindingOutput)
}

func (i ComputeBindingArgs) ToComputeBindingPtrOutput() ComputeBindingPtrOutput {
	return i.ToComputeBindingPtrOutputWithContext(context.Background())
}

func (i ComputeBindingArgs) ToComputeBindingPtrOutputWithContext(ctx context.Context) ComputeBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeBindingOutput).ToComputeBindingPtrOutputWithContext(ctx)
}

// ComputeBindingPtrInput is an input type that accepts ComputeBindingArgs, ComputeBindingPtr and ComputeBindingPtrOutput values.
// You can construct a concrete instance of `ComputeBindingPtrInput` via:
//
//          ComputeBindingArgs{...}
//
//  or:
//
//          nil
type ComputeBindingPtrInput interface {
	pulumi.Input

	ToComputeBindingPtrOutput() ComputeBindingPtrOutput
	ToComputeBindingPtrOutputWithContext(context.Context) ComputeBindingPtrOutput
}

type computeBindingPtrType ComputeBindingArgs

func ComputeBindingPtr(v *ComputeBindingArgs) ComputeBindingPtrInput {
	return (*computeBindingPtrType)(v)
}

func (*computeBindingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeBinding)(nil)).Elem()
}

func (i *computeBindingPtrType) ToComputeBindingPtrOutput() ComputeBindingPtrOutput {
	return i.ToComputeBindingPtrOutputWithContext(context.Background())
}

func (i *computeBindingPtrType) ToComputeBindingPtrOutputWithContext(ctx context.Context) ComputeBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeBindingPtrOutput)
}

type ComputeBindingOutput struct{ *pulumi.OutputState }

func (ComputeBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeBinding)(nil)).Elem()
}

func (o ComputeBindingOutput) ToComputeBindingOutput() ComputeBindingOutput {
	return o
}

func (o ComputeBindingOutput) ToComputeBindingOutputWithContext(ctx context.Context) ComputeBindingOutput {
	return o
}

func (o ComputeBindingOutput) ToComputeBindingPtrOutput() ComputeBindingPtrOutput {
	return o.ToComputeBindingPtrOutputWithContext(context.Background())
}

func (o ComputeBindingOutput) ToComputeBindingPtrOutputWithContext(ctx context.Context) ComputeBindingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeBinding) *ComputeBinding {
		return &v
	}).(ComputeBindingPtrOutput)
}

// ID of the compute resource.
func (o ComputeBindingOutput) ComputeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeBinding) *string { return v.ComputeId }).(pulumi.StringPtrOutput)
}

// Number of nodes.
func (o ComputeBindingOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeBinding) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type ComputeBindingPtrOutput struct{ *pulumi.OutputState }

func (ComputeBindingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeBinding)(nil)).Elem()
}

func (o ComputeBindingPtrOutput) ToComputeBindingPtrOutput() ComputeBindingPtrOutput {
	return o
}

func (o ComputeBindingPtrOutput) ToComputeBindingPtrOutputWithContext(ctx context.Context) ComputeBindingPtrOutput {
	return o
}

func (o ComputeBindingPtrOutput) Elem() ComputeBindingOutput {
	return o.ApplyT(func(v *ComputeBinding) ComputeBinding {
		if v != nil {
			return *v
		}
		var ret ComputeBinding
		return ret
	}).(ComputeBindingOutput)
}

// ID of the compute resource.
func (o ComputeBindingPtrOutput) ComputeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeBinding) *string {
		if v == nil {
			return nil
		}
		return v.ComputeId
	}).(pulumi.StringPtrOutput)
}

// Number of nodes.
func (o ComputeBindingPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeBinding) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type ComputeBindingResponse struct {
	// ID of the compute resource.
	ComputeId *string `pulumi:"computeId"`
	// Number of nodes.
	NodeCount *int `pulumi:"nodeCount"`
}

// ComputeBindingResponseInput is an input type that accepts ComputeBindingResponseArgs and ComputeBindingResponseOutput values.
// You can construct a concrete instance of `ComputeBindingResponseInput` via:
//
//          ComputeBindingResponseArgs{...}
type ComputeBindingResponseInput interface {
	pulumi.Input

	ToComputeBindingResponseOutput() ComputeBindingResponseOutput
	ToComputeBindingResponseOutputWithContext(context.Context) ComputeBindingResponseOutput
}

type ComputeBindingResponseArgs struct {
	// ID of the compute resource.
	ComputeId pulumi.StringPtrInput `pulumi:"computeId"`
	// Number of nodes.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (ComputeBindingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeBindingResponse)(nil)).Elem()
}

func (i ComputeBindingResponseArgs) ToComputeBindingResponseOutput() ComputeBindingResponseOutput {
	return i.ToComputeBindingResponseOutputWithContext(context.Background())
}

func (i ComputeBindingResponseArgs) ToComputeBindingResponseOutputWithContext(ctx context.Context) ComputeBindingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeBindingResponseOutput)
}

func (i ComputeBindingResponseArgs) ToComputeBindingResponsePtrOutput() ComputeBindingResponsePtrOutput {
	return i.ToComputeBindingResponsePtrOutputWithContext(context.Background())
}

func (i ComputeBindingResponseArgs) ToComputeBindingResponsePtrOutputWithContext(ctx context.Context) ComputeBindingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeBindingResponseOutput).ToComputeBindingResponsePtrOutputWithContext(ctx)
}

// ComputeBindingResponsePtrInput is an input type that accepts ComputeBindingResponseArgs, ComputeBindingResponsePtr and ComputeBindingResponsePtrOutput values.
// You can construct a concrete instance of `ComputeBindingResponsePtrInput` via:
//
//          ComputeBindingResponseArgs{...}
//
//  or:
//
//          nil
type ComputeBindingResponsePtrInput interface {
	pulumi.Input

	ToComputeBindingResponsePtrOutput() ComputeBindingResponsePtrOutput
	ToComputeBindingResponsePtrOutputWithContext(context.Context) ComputeBindingResponsePtrOutput
}

type computeBindingResponsePtrType ComputeBindingResponseArgs

func ComputeBindingResponsePtr(v *ComputeBindingResponseArgs) ComputeBindingResponsePtrInput {
	return (*computeBindingResponsePtrType)(v)
}

func (*computeBindingResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeBindingResponse)(nil)).Elem()
}

func (i *computeBindingResponsePtrType) ToComputeBindingResponsePtrOutput() ComputeBindingResponsePtrOutput {
	return i.ToComputeBindingResponsePtrOutputWithContext(context.Background())
}

func (i *computeBindingResponsePtrType) ToComputeBindingResponsePtrOutputWithContext(ctx context.Context) ComputeBindingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeBindingResponsePtrOutput)
}

type ComputeBindingResponseOutput struct{ *pulumi.OutputState }

func (ComputeBindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeBindingResponse)(nil)).Elem()
}

func (o ComputeBindingResponseOutput) ToComputeBindingResponseOutput() ComputeBindingResponseOutput {
	return o
}

func (o ComputeBindingResponseOutput) ToComputeBindingResponseOutputWithContext(ctx context.Context) ComputeBindingResponseOutput {
	return o
}

func (o ComputeBindingResponseOutput) ToComputeBindingResponsePtrOutput() ComputeBindingResponsePtrOutput {
	return o.ToComputeBindingResponsePtrOutputWithContext(context.Background())
}

func (o ComputeBindingResponseOutput) ToComputeBindingResponsePtrOutputWithContext(ctx context.Context) ComputeBindingResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeBindingResponse) *ComputeBindingResponse {
		return &v
	}).(ComputeBindingResponsePtrOutput)
}

// ID of the compute resource.
func (o ComputeBindingResponseOutput) ComputeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeBindingResponse) *string { return v.ComputeId }).(pulumi.StringPtrOutput)
}

// Number of nodes.
func (o ComputeBindingResponseOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeBindingResponse) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type ComputeBindingResponsePtrOutput struct{ *pulumi.OutputState }

func (ComputeBindingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeBindingResponse)(nil)).Elem()
}

func (o ComputeBindingResponsePtrOutput) ToComputeBindingResponsePtrOutput() ComputeBindingResponsePtrOutput {
	return o
}

func (o ComputeBindingResponsePtrOutput) ToComputeBindingResponsePtrOutputWithContext(ctx context.Context) ComputeBindingResponsePtrOutput {
	return o
}

func (o ComputeBindingResponsePtrOutput) Elem() ComputeBindingResponseOutput {
	return o.ApplyT(func(v *ComputeBindingResponse) ComputeBindingResponse {
		if v != nil {
			return *v
		}
		var ret ComputeBindingResponse
		return ret
	}).(ComputeBindingResponseOutput)
}

// ID of the compute resource.
func (o ComputeBindingResponsePtrOutput) ComputeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeBindingResponse) *string {
		if v == nil {
			return nil
		}
		return v.ComputeId
	}).(pulumi.StringPtrOutput)
}

// Number of nodes.
func (o ComputeBindingResponsePtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeBindingResponse) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type ComputeConfiguration struct {
	// Number of instances or nodes.
	InstanceCount *int `pulumi:"instanceCount"`
	// SKU type to run on.
	InstanceType *string `pulumi:"instanceType"`
	// Set to true for jobs running on local compute.
	IsLocal *bool `pulumi:"isLocal"`
	// Location for virtual cluster run.
	Location *string `pulumi:"location"`
	// Additional properties.
	Properties map[string]string `pulumi:"properties"`
	// ARM resource ID of the compute resource.
	Target *string `pulumi:"target"`
}

// ComputeConfigurationInput is an input type that accepts ComputeConfigurationArgs and ComputeConfigurationOutput values.
// You can construct a concrete instance of `ComputeConfigurationInput` via:
//
//          ComputeConfigurationArgs{...}
type ComputeConfigurationInput interface {
	pulumi.Input

	ToComputeConfigurationOutput() ComputeConfigurationOutput
	ToComputeConfigurationOutputWithContext(context.Context) ComputeConfigurationOutput
}

type ComputeConfigurationArgs struct {
	// Number of instances or nodes.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// SKU type to run on.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Set to true for jobs running on local compute.
	IsLocal pulumi.BoolPtrInput `pulumi:"isLocal"`
	// Location for virtual cluster run.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Additional properties.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// ARM resource ID of the compute resource.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (ComputeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeConfiguration)(nil)).Elem()
}

func (i ComputeConfigurationArgs) ToComputeConfigurationOutput() ComputeConfigurationOutput {
	return i.ToComputeConfigurationOutputWithContext(context.Background())
}

func (i ComputeConfigurationArgs) ToComputeConfigurationOutputWithContext(ctx context.Context) ComputeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeConfigurationOutput)
}

func (i ComputeConfigurationArgs) ToComputeConfigurationPtrOutput() ComputeConfigurationPtrOutput {
	return i.ToComputeConfigurationPtrOutputWithContext(context.Background())
}

func (i ComputeConfigurationArgs) ToComputeConfigurationPtrOutputWithContext(ctx context.Context) ComputeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeConfigurationOutput).ToComputeConfigurationPtrOutputWithContext(ctx)
}

// ComputeConfigurationPtrInput is an input type that accepts ComputeConfigurationArgs, ComputeConfigurationPtr and ComputeConfigurationPtrOutput values.
// You can construct a concrete instance of `ComputeConfigurationPtrInput` via:
//
//          ComputeConfigurationArgs{...}
//
//  or:
//
//          nil
type ComputeConfigurationPtrInput interface {
	pulumi.Input

	ToComputeConfigurationPtrOutput() ComputeConfigurationPtrOutput
	ToComputeConfigurationPtrOutputWithContext(context.Context) ComputeConfigurationPtrOutput
}

type computeConfigurationPtrType ComputeConfigurationArgs

func ComputeConfigurationPtr(v *ComputeConfigurationArgs) ComputeConfigurationPtrInput {
	return (*computeConfigurationPtrType)(v)
}

func (*computeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeConfiguration)(nil)).Elem()
}

func (i *computeConfigurationPtrType) ToComputeConfigurationPtrOutput() ComputeConfigurationPtrOutput {
	return i.ToComputeConfigurationPtrOutputWithContext(context.Background())
}

func (i *computeConfigurationPtrType) ToComputeConfigurationPtrOutputWithContext(ctx context.Context) ComputeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeConfigurationPtrOutput)
}

type ComputeConfigurationOutput struct{ *pulumi.OutputState }

func (ComputeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeConfiguration)(nil)).Elem()
}

func (o ComputeConfigurationOutput) ToComputeConfigurationOutput() ComputeConfigurationOutput {
	return o
}

func (o ComputeConfigurationOutput) ToComputeConfigurationOutputWithContext(ctx context.Context) ComputeConfigurationOutput {
	return o
}

func (o ComputeConfigurationOutput) ToComputeConfigurationPtrOutput() ComputeConfigurationPtrOutput {
	return o.ToComputeConfigurationPtrOutputWithContext(context.Background())
}

func (o ComputeConfigurationOutput) ToComputeConfigurationPtrOutputWithContext(ctx context.Context) ComputeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeConfiguration) *ComputeConfiguration {
		return &v
	}).(ComputeConfigurationPtrOutput)
}

// Number of instances or nodes.
func (o ComputeConfigurationOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeConfiguration) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// SKU type to run on.
func (o ComputeConfigurationOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeConfiguration) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Set to true for jobs running on local compute.
func (o ComputeConfigurationOutput) IsLocal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeConfiguration) *bool { return v.IsLocal }).(pulumi.BoolPtrOutput)
}

// Location for virtual cluster run.
func (o ComputeConfigurationOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeConfiguration) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Additional properties.
func (o ComputeConfigurationOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ComputeConfiguration) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// ARM resource ID of the compute resource.
func (o ComputeConfigurationOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeConfiguration) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type ComputeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ComputeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeConfiguration)(nil)).Elem()
}

func (o ComputeConfigurationPtrOutput) ToComputeConfigurationPtrOutput() ComputeConfigurationPtrOutput {
	return o
}

func (o ComputeConfigurationPtrOutput) ToComputeConfigurationPtrOutputWithContext(ctx context.Context) ComputeConfigurationPtrOutput {
	return o
}

func (o ComputeConfigurationPtrOutput) Elem() ComputeConfigurationOutput {
	return o.ApplyT(func(v *ComputeConfiguration) ComputeConfiguration {
		if v != nil {
			return *v
		}
		var ret ComputeConfiguration
		return ret
	}).(ComputeConfigurationOutput)
}

// Number of instances or nodes.
func (o ComputeConfigurationPtrOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.InstanceCount
	}).(pulumi.IntPtrOutput)
}

// SKU type to run on.
func (o ComputeConfigurationPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// Set to true for jobs running on local compute.
func (o ComputeConfigurationPtrOutput) IsLocal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IsLocal
	}).(pulumi.BoolPtrOutput)
}

// Location for virtual cluster run.
func (o ComputeConfigurationPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Additional properties.
func (o ComputeConfigurationPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// ARM resource ID of the compute resource.
func (o ComputeConfigurationPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

type ComputeConfigurationResponse struct {
	// Number of instances or nodes.
	InstanceCount *int `pulumi:"instanceCount"`
	// SKU type to run on.
	InstanceType *string `pulumi:"instanceType"`
	// Set to true for jobs running on local compute.
	IsLocal *bool `pulumi:"isLocal"`
	// Location for virtual cluster run.
	Location *string `pulumi:"location"`
	// Additional properties.
	Properties map[string]string `pulumi:"properties"`
	// ARM resource ID of the compute resource.
	Target *string `pulumi:"target"`
}

// ComputeConfigurationResponseInput is an input type that accepts ComputeConfigurationResponseArgs and ComputeConfigurationResponseOutput values.
// You can construct a concrete instance of `ComputeConfigurationResponseInput` via:
//
//          ComputeConfigurationResponseArgs{...}
type ComputeConfigurationResponseInput interface {
	pulumi.Input

	ToComputeConfigurationResponseOutput() ComputeConfigurationResponseOutput
	ToComputeConfigurationResponseOutputWithContext(context.Context) ComputeConfigurationResponseOutput
}

type ComputeConfigurationResponseArgs struct {
	// Number of instances or nodes.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// SKU type to run on.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Set to true for jobs running on local compute.
	IsLocal pulumi.BoolPtrInput `pulumi:"isLocal"`
	// Location for virtual cluster run.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Additional properties.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// ARM resource ID of the compute resource.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (ComputeConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeConfigurationResponse)(nil)).Elem()
}

func (i ComputeConfigurationResponseArgs) ToComputeConfigurationResponseOutput() ComputeConfigurationResponseOutput {
	return i.ToComputeConfigurationResponseOutputWithContext(context.Background())
}

func (i ComputeConfigurationResponseArgs) ToComputeConfigurationResponseOutputWithContext(ctx context.Context) ComputeConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeConfigurationResponseOutput)
}

func (i ComputeConfigurationResponseArgs) ToComputeConfigurationResponsePtrOutput() ComputeConfigurationResponsePtrOutput {
	return i.ToComputeConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i ComputeConfigurationResponseArgs) ToComputeConfigurationResponsePtrOutputWithContext(ctx context.Context) ComputeConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeConfigurationResponseOutput).ToComputeConfigurationResponsePtrOutputWithContext(ctx)
}

// ComputeConfigurationResponsePtrInput is an input type that accepts ComputeConfigurationResponseArgs, ComputeConfigurationResponsePtr and ComputeConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `ComputeConfigurationResponsePtrInput` via:
//
//          ComputeConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type ComputeConfigurationResponsePtrInput interface {
	pulumi.Input

	ToComputeConfigurationResponsePtrOutput() ComputeConfigurationResponsePtrOutput
	ToComputeConfigurationResponsePtrOutputWithContext(context.Context) ComputeConfigurationResponsePtrOutput
}

type computeConfigurationResponsePtrType ComputeConfigurationResponseArgs

func ComputeConfigurationResponsePtr(v *ComputeConfigurationResponseArgs) ComputeConfigurationResponsePtrInput {
	return (*computeConfigurationResponsePtrType)(v)
}

func (*computeConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeConfigurationResponse)(nil)).Elem()
}

func (i *computeConfigurationResponsePtrType) ToComputeConfigurationResponsePtrOutput() ComputeConfigurationResponsePtrOutput {
	return i.ToComputeConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *computeConfigurationResponsePtrType) ToComputeConfigurationResponsePtrOutputWithContext(ctx context.Context) ComputeConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeConfigurationResponsePtrOutput)
}

type ComputeConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ComputeConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeConfigurationResponse)(nil)).Elem()
}

func (o ComputeConfigurationResponseOutput) ToComputeConfigurationResponseOutput() ComputeConfigurationResponseOutput {
	return o
}

func (o ComputeConfigurationResponseOutput) ToComputeConfigurationResponseOutputWithContext(ctx context.Context) ComputeConfigurationResponseOutput {
	return o
}

func (o ComputeConfigurationResponseOutput) ToComputeConfigurationResponsePtrOutput() ComputeConfigurationResponsePtrOutput {
	return o.ToComputeConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o ComputeConfigurationResponseOutput) ToComputeConfigurationResponsePtrOutputWithContext(ctx context.Context) ComputeConfigurationResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeConfigurationResponse) *ComputeConfigurationResponse {
		return &v
	}).(ComputeConfigurationResponsePtrOutput)
}

// Number of instances or nodes.
func (o ComputeConfigurationResponseOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeConfigurationResponse) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// SKU type to run on.
func (o ComputeConfigurationResponseOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeConfigurationResponse) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Set to true for jobs running on local compute.
func (o ComputeConfigurationResponseOutput) IsLocal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeConfigurationResponse) *bool { return v.IsLocal }).(pulumi.BoolPtrOutput)
}

// Location for virtual cluster run.
func (o ComputeConfigurationResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeConfigurationResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Additional properties.
func (o ComputeConfigurationResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ComputeConfigurationResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// ARM resource ID of the compute resource.
func (o ComputeConfigurationResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeConfigurationResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type ComputeConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ComputeConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeConfigurationResponse)(nil)).Elem()
}

func (o ComputeConfigurationResponsePtrOutput) ToComputeConfigurationResponsePtrOutput() ComputeConfigurationResponsePtrOutput {
	return o
}

func (o ComputeConfigurationResponsePtrOutput) ToComputeConfigurationResponsePtrOutputWithContext(ctx context.Context) ComputeConfigurationResponsePtrOutput {
	return o
}

func (o ComputeConfigurationResponsePtrOutput) Elem() ComputeConfigurationResponseOutput {
	return o.ApplyT(func(v *ComputeConfigurationResponse) ComputeConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ComputeConfigurationResponse
		return ret
	}).(ComputeConfigurationResponseOutput)
}

// Number of instances or nodes.
func (o ComputeConfigurationResponsePtrOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.InstanceCount
	}).(pulumi.IntPtrOutput)
}

// SKU type to run on.
func (o ComputeConfigurationResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// Set to true for jobs running on local compute.
func (o ComputeConfigurationResponsePtrOutput) IsLocal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsLocal
	}).(pulumi.BoolPtrOutput)
}

// Location for virtual cluster run.
func (o ComputeConfigurationResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Additional properties.
func (o ComputeConfigurationResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeConfigurationResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// ARM resource ID of the compute resource.
func (o ComputeConfigurationResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

type ComputeInstance struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'ComputeInstance'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Compute Instance properties
	Properties *ComputeInstanceProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// ComputeInstanceInput is an input type that accepts ComputeInstanceArgs and ComputeInstanceOutput values.
// You can construct a concrete instance of `ComputeInstanceInput` via:
//
//          ComputeInstanceArgs{...}
type ComputeInstanceInput interface {
	pulumi.Input

	ToComputeInstanceOutput() ComputeInstanceOutput
	ToComputeInstanceOutputWithContext(context.Context) ComputeInstanceOutput
}

type ComputeInstanceArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'ComputeInstance'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Compute Instance properties
	Properties ComputeInstancePropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ComputeInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstance)(nil)).Elem()
}

func (i ComputeInstanceArgs) ToComputeInstanceOutput() ComputeInstanceOutput {
	return i.ToComputeInstanceOutputWithContext(context.Background())
}

func (i ComputeInstanceArgs) ToComputeInstanceOutputWithContext(ctx context.Context) ComputeInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceOutput)
}

type ComputeInstanceOutput struct{ *pulumi.OutputState }

func (ComputeInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstance)(nil)).Elem()
}

func (o ComputeInstanceOutput) ToComputeInstanceOutput() ComputeInstanceOutput {
	return o
}

func (o ComputeInstanceOutput) ToComputeInstanceOutputWithContext(ctx context.Context) ComputeInstanceOutput {
	return o
}

// Location for the underlying compute
func (o ComputeInstanceOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstance) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'ComputeInstance'.
func (o ComputeInstanceOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstance) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o ComputeInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstance) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Compute Instance properties
func (o ComputeInstanceOutput) Properties() ComputeInstancePropertiesPtrOutput {
	return o.ApplyT(func(v ComputeInstance) *ComputeInstanceProperties { return v.Properties }).(ComputeInstancePropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o ComputeInstanceOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstance) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ComputeInstanceApplicationResponse struct {
	// Name of the ComputeInstance application.
	DisplayName *string `pulumi:"displayName"`
	// Application' endpoint URI.
	EndpointUri *string `pulumi:"endpointUri"`
}

// ComputeInstanceApplicationResponseInput is an input type that accepts ComputeInstanceApplicationResponseArgs and ComputeInstanceApplicationResponseOutput values.
// You can construct a concrete instance of `ComputeInstanceApplicationResponseInput` via:
//
//          ComputeInstanceApplicationResponseArgs{...}
type ComputeInstanceApplicationResponseInput interface {
	pulumi.Input

	ToComputeInstanceApplicationResponseOutput() ComputeInstanceApplicationResponseOutput
	ToComputeInstanceApplicationResponseOutputWithContext(context.Context) ComputeInstanceApplicationResponseOutput
}

type ComputeInstanceApplicationResponseArgs struct {
	// Name of the ComputeInstance application.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Application' endpoint URI.
	EndpointUri pulumi.StringPtrInput `pulumi:"endpointUri"`
}

func (ComputeInstanceApplicationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceApplicationResponse)(nil)).Elem()
}

func (i ComputeInstanceApplicationResponseArgs) ToComputeInstanceApplicationResponseOutput() ComputeInstanceApplicationResponseOutput {
	return i.ToComputeInstanceApplicationResponseOutputWithContext(context.Background())
}

func (i ComputeInstanceApplicationResponseArgs) ToComputeInstanceApplicationResponseOutputWithContext(ctx context.Context) ComputeInstanceApplicationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceApplicationResponseOutput)
}

// ComputeInstanceApplicationResponseArrayInput is an input type that accepts ComputeInstanceApplicationResponseArray and ComputeInstanceApplicationResponseArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceApplicationResponseArrayInput` via:
//
//          ComputeInstanceApplicationResponseArray{ ComputeInstanceApplicationResponseArgs{...} }
type ComputeInstanceApplicationResponseArrayInput interface {
	pulumi.Input

	ToComputeInstanceApplicationResponseArrayOutput() ComputeInstanceApplicationResponseArrayOutput
	ToComputeInstanceApplicationResponseArrayOutputWithContext(context.Context) ComputeInstanceApplicationResponseArrayOutput
}

type ComputeInstanceApplicationResponseArray []ComputeInstanceApplicationResponseInput

func (ComputeInstanceApplicationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceApplicationResponse)(nil)).Elem()
}

func (i ComputeInstanceApplicationResponseArray) ToComputeInstanceApplicationResponseArrayOutput() ComputeInstanceApplicationResponseArrayOutput {
	return i.ToComputeInstanceApplicationResponseArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceApplicationResponseArray) ToComputeInstanceApplicationResponseArrayOutputWithContext(ctx context.Context) ComputeInstanceApplicationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceApplicationResponseArrayOutput)
}

type ComputeInstanceApplicationResponseOutput struct{ *pulumi.OutputState }

func (ComputeInstanceApplicationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceApplicationResponse)(nil)).Elem()
}

func (o ComputeInstanceApplicationResponseOutput) ToComputeInstanceApplicationResponseOutput() ComputeInstanceApplicationResponseOutput {
	return o
}

func (o ComputeInstanceApplicationResponseOutput) ToComputeInstanceApplicationResponseOutputWithContext(ctx context.Context) ComputeInstanceApplicationResponseOutput {
	return o
}

// Name of the ComputeInstance application.
func (o ComputeInstanceApplicationResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceApplicationResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Application' endpoint URI.
func (o ComputeInstanceApplicationResponseOutput) EndpointUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceApplicationResponse) *string { return v.EndpointUri }).(pulumi.StringPtrOutput)
}

type ComputeInstanceApplicationResponseArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceApplicationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceApplicationResponse)(nil)).Elem()
}

func (o ComputeInstanceApplicationResponseArrayOutput) ToComputeInstanceApplicationResponseArrayOutput() ComputeInstanceApplicationResponseArrayOutput {
	return o
}

func (o ComputeInstanceApplicationResponseArrayOutput) ToComputeInstanceApplicationResponseArrayOutputWithContext(ctx context.Context) ComputeInstanceApplicationResponseArrayOutput {
	return o
}

func (o ComputeInstanceApplicationResponseArrayOutput) Index(i pulumi.IntInput) ComputeInstanceApplicationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceApplicationResponse {
		return vs[0].([]ComputeInstanceApplicationResponse)[vs[1].(int)]
	}).(ComputeInstanceApplicationResponseOutput)
}

type ComputeInstanceConnectivityEndpointsResponse struct {
	// Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is deployed).
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// Public IP Address of this ComputeInstance.
	PublicIpAddress string `pulumi:"publicIpAddress"`
}

// ComputeInstanceConnectivityEndpointsResponseInput is an input type that accepts ComputeInstanceConnectivityEndpointsResponseArgs and ComputeInstanceConnectivityEndpointsResponseOutput values.
// You can construct a concrete instance of `ComputeInstanceConnectivityEndpointsResponseInput` via:
//
//          ComputeInstanceConnectivityEndpointsResponseArgs{...}
type ComputeInstanceConnectivityEndpointsResponseInput interface {
	pulumi.Input

	ToComputeInstanceConnectivityEndpointsResponseOutput() ComputeInstanceConnectivityEndpointsResponseOutput
	ToComputeInstanceConnectivityEndpointsResponseOutputWithContext(context.Context) ComputeInstanceConnectivityEndpointsResponseOutput
}

type ComputeInstanceConnectivityEndpointsResponseArgs struct {
	// Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is deployed).
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// Public IP Address of this ComputeInstance.
	PublicIpAddress pulumi.StringInput `pulumi:"publicIpAddress"`
}

func (ComputeInstanceConnectivityEndpointsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceConnectivityEndpointsResponse)(nil)).Elem()
}

func (i ComputeInstanceConnectivityEndpointsResponseArgs) ToComputeInstanceConnectivityEndpointsResponseOutput() ComputeInstanceConnectivityEndpointsResponseOutput {
	return i.ToComputeInstanceConnectivityEndpointsResponseOutputWithContext(context.Background())
}

func (i ComputeInstanceConnectivityEndpointsResponseArgs) ToComputeInstanceConnectivityEndpointsResponseOutputWithContext(ctx context.Context) ComputeInstanceConnectivityEndpointsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceConnectivityEndpointsResponseOutput)
}

func (i ComputeInstanceConnectivityEndpointsResponseArgs) ToComputeInstanceConnectivityEndpointsResponsePtrOutput() ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return i.ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(context.Background())
}

func (i ComputeInstanceConnectivityEndpointsResponseArgs) ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceConnectivityEndpointsResponseOutput).ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(ctx)
}

// ComputeInstanceConnectivityEndpointsResponsePtrInput is an input type that accepts ComputeInstanceConnectivityEndpointsResponseArgs, ComputeInstanceConnectivityEndpointsResponsePtr and ComputeInstanceConnectivityEndpointsResponsePtrOutput values.
// You can construct a concrete instance of `ComputeInstanceConnectivityEndpointsResponsePtrInput` via:
//
//          ComputeInstanceConnectivityEndpointsResponseArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceConnectivityEndpointsResponsePtrInput interface {
	pulumi.Input

	ToComputeInstanceConnectivityEndpointsResponsePtrOutput() ComputeInstanceConnectivityEndpointsResponsePtrOutput
	ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(context.Context) ComputeInstanceConnectivityEndpointsResponsePtrOutput
}

type computeInstanceConnectivityEndpointsResponsePtrType ComputeInstanceConnectivityEndpointsResponseArgs

func ComputeInstanceConnectivityEndpointsResponsePtr(v *ComputeInstanceConnectivityEndpointsResponseArgs) ComputeInstanceConnectivityEndpointsResponsePtrInput {
	return (*computeInstanceConnectivityEndpointsResponsePtrType)(v)
}

func (*computeInstanceConnectivityEndpointsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceConnectivityEndpointsResponse)(nil)).Elem()
}

func (i *computeInstanceConnectivityEndpointsResponsePtrType) ToComputeInstanceConnectivityEndpointsResponsePtrOutput() ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return i.ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(context.Background())
}

func (i *computeInstanceConnectivityEndpointsResponsePtrType) ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceConnectivityEndpointsResponsePtrOutput)
}

type ComputeInstanceConnectivityEndpointsResponseOutput struct{ *pulumi.OutputState }

func (ComputeInstanceConnectivityEndpointsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceConnectivityEndpointsResponse)(nil)).Elem()
}

func (o ComputeInstanceConnectivityEndpointsResponseOutput) ToComputeInstanceConnectivityEndpointsResponseOutput() ComputeInstanceConnectivityEndpointsResponseOutput {
	return o
}

func (o ComputeInstanceConnectivityEndpointsResponseOutput) ToComputeInstanceConnectivityEndpointsResponseOutputWithContext(ctx context.Context) ComputeInstanceConnectivityEndpointsResponseOutput {
	return o
}

func (o ComputeInstanceConnectivityEndpointsResponseOutput) ToComputeInstanceConnectivityEndpointsResponsePtrOutput() ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return o.ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(context.Background())
}

func (o ComputeInstanceConnectivityEndpointsResponseOutput) ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeInstanceConnectivityEndpointsResponse) *ComputeInstanceConnectivityEndpointsResponse {
		return &v
	}).(ComputeInstanceConnectivityEndpointsResponsePtrOutput)
}

// Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is deployed).
func (o ComputeInstanceConnectivityEndpointsResponseOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceConnectivityEndpointsResponse) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// Public IP Address of this ComputeInstance.
func (o ComputeInstanceConnectivityEndpointsResponseOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceConnectivityEndpointsResponse) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

type ComputeInstanceConnectivityEndpointsResponsePtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceConnectivityEndpointsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceConnectivityEndpointsResponse)(nil)).Elem()
}

func (o ComputeInstanceConnectivityEndpointsResponsePtrOutput) ToComputeInstanceConnectivityEndpointsResponsePtrOutput() ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return o
}

func (o ComputeInstanceConnectivityEndpointsResponsePtrOutput) ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return o
}

func (o ComputeInstanceConnectivityEndpointsResponsePtrOutput) Elem() ComputeInstanceConnectivityEndpointsResponseOutput {
	return o.ApplyT(func(v *ComputeInstanceConnectivityEndpointsResponse) ComputeInstanceConnectivityEndpointsResponse {
		if v != nil {
			return *v
		}
		var ret ComputeInstanceConnectivityEndpointsResponse
		return ret
	}).(ComputeInstanceConnectivityEndpointsResponseOutput)
}

// Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is deployed).
func (o ComputeInstanceConnectivityEndpointsResponsePtrOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceConnectivityEndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateIpAddress
	}).(pulumi.StringPtrOutput)
}

// Public IP Address of this ComputeInstance.
func (o ComputeInstanceConnectivityEndpointsResponsePtrOutput) PublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceConnectivityEndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PublicIpAddress
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceCreatedByResponse struct {
	// Uniquely identifies the user within his/her organization.
	UserId string `pulumi:"userId"`
	// Name of the user.
	UserName string `pulumi:"userName"`
	// Uniquely identifies user' Azure Active Directory organization.
	UserOrgId string `pulumi:"userOrgId"`
}

// ComputeInstanceCreatedByResponseInput is an input type that accepts ComputeInstanceCreatedByResponseArgs and ComputeInstanceCreatedByResponseOutput values.
// You can construct a concrete instance of `ComputeInstanceCreatedByResponseInput` via:
//
//          ComputeInstanceCreatedByResponseArgs{...}
type ComputeInstanceCreatedByResponseInput interface {
	pulumi.Input

	ToComputeInstanceCreatedByResponseOutput() ComputeInstanceCreatedByResponseOutput
	ToComputeInstanceCreatedByResponseOutputWithContext(context.Context) ComputeInstanceCreatedByResponseOutput
}

type ComputeInstanceCreatedByResponseArgs struct {
	// Uniquely identifies the user within his/her organization.
	UserId pulumi.StringInput `pulumi:"userId"`
	// Name of the user.
	UserName pulumi.StringInput `pulumi:"userName"`
	// Uniquely identifies user' Azure Active Directory organization.
	UserOrgId pulumi.StringInput `pulumi:"userOrgId"`
}

func (ComputeInstanceCreatedByResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceCreatedByResponse)(nil)).Elem()
}

func (i ComputeInstanceCreatedByResponseArgs) ToComputeInstanceCreatedByResponseOutput() ComputeInstanceCreatedByResponseOutput {
	return i.ToComputeInstanceCreatedByResponseOutputWithContext(context.Background())
}

func (i ComputeInstanceCreatedByResponseArgs) ToComputeInstanceCreatedByResponseOutputWithContext(ctx context.Context) ComputeInstanceCreatedByResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceCreatedByResponseOutput)
}

func (i ComputeInstanceCreatedByResponseArgs) ToComputeInstanceCreatedByResponsePtrOutput() ComputeInstanceCreatedByResponsePtrOutput {
	return i.ToComputeInstanceCreatedByResponsePtrOutputWithContext(context.Background())
}

func (i ComputeInstanceCreatedByResponseArgs) ToComputeInstanceCreatedByResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceCreatedByResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceCreatedByResponseOutput).ToComputeInstanceCreatedByResponsePtrOutputWithContext(ctx)
}

// ComputeInstanceCreatedByResponsePtrInput is an input type that accepts ComputeInstanceCreatedByResponseArgs, ComputeInstanceCreatedByResponsePtr and ComputeInstanceCreatedByResponsePtrOutput values.
// You can construct a concrete instance of `ComputeInstanceCreatedByResponsePtrInput` via:
//
//          ComputeInstanceCreatedByResponseArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceCreatedByResponsePtrInput interface {
	pulumi.Input

	ToComputeInstanceCreatedByResponsePtrOutput() ComputeInstanceCreatedByResponsePtrOutput
	ToComputeInstanceCreatedByResponsePtrOutputWithContext(context.Context) ComputeInstanceCreatedByResponsePtrOutput
}

type computeInstanceCreatedByResponsePtrType ComputeInstanceCreatedByResponseArgs

func ComputeInstanceCreatedByResponsePtr(v *ComputeInstanceCreatedByResponseArgs) ComputeInstanceCreatedByResponsePtrInput {
	return (*computeInstanceCreatedByResponsePtrType)(v)
}

func (*computeInstanceCreatedByResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceCreatedByResponse)(nil)).Elem()
}

func (i *computeInstanceCreatedByResponsePtrType) ToComputeInstanceCreatedByResponsePtrOutput() ComputeInstanceCreatedByResponsePtrOutput {
	return i.ToComputeInstanceCreatedByResponsePtrOutputWithContext(context.Background())
}

func (i *computeInstanceCreatedByResponsePtrType) ToComputeInstanceCreatedByResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceCreatedByResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceCreatedByResponsePtrOutput)
}

type ComputeInstanceCreatedByResponseOutput struct{ *pulumi.OutputState }

func (ComputeInstanceCreatedByResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceCreatedByResponse)(nil)).Elem()
}

func (o ComputeInstanceCreatedByResponseOutput) ToComputeInstanceCreatedByResponseOutput() ComputeInstanceCreatedByResponseOutput {
	return o
}

func (o ComputeInstanceCreatedByResponseOutput) ToComputeInstanceCreatedByResponseOutputWithContext(ctx context.Context) ComputeInstanceCreatedByResponseOutput {
	return o
}

func (o ComputeInstanceCreatedByResponseOutput) ToComputeInstanceCreatedByResponsePtrOutput() ComputeInstanceCreatedByResponsePtrOutput {
	return o.ToComputeInstanceCreatedByResponsePtrOutputWithContext(context.Background())
}

func (o ComputeInstanceCreatedByResponseOutput) ToComputeInstanceCreatedByResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceCreatedByResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeInstanceCreatedByResponse) *ComputeInstanceCreatedByResponse {
		return &v
	}).(ComputeInstanceCreatedByResponsePtrOutput)
}

// Uniquely identifies the user within his/her organization.
func (o ComputeInstanceCreatedByResponseOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceCreatedByResponse) string { return v.UserId }).(pulumi.StringOutput)
}

// Name of the user.
func (o ComputeInstanceCreatedByResponseOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceCreatedByResponse) string { return v.UserName }).(pulumi.StringOutput)
}

// Uniquely identifies user' Azure Active Directory organization.
func (o ComputeInstanceCreatedByResponseOutput) UserOrgId() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceCreatedByResponse) string { return v.UserOrgId }).(pulumi.StringOutput)
}

type ComputeInstanceCreatedByResponsePtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceCreatedByResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceCreatedByResponse)(nil)).Elem()
}

func (o ComputeInstanceCreatedByResponsePtrOutput) ToComputeInstanceCreatedByResponsePtrOutput() ComputeInstanceCreatedByResponsePtrOutput {
	return o
}

func (o ComputeInstanceCreatedByResponsePtrOutput) ToComputeInstanceCreatedByResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceCreatedByResponsePtrOutput {
	return o
}

func (o ComputeInstanceCreatedByResponsePtrOutput) Elem() ComputeInstanceCreatedByResponseOutput {
	return o.ApplyT(func(v *ComputeInstanceCreatedByResponse) ComputeInstanceCreatedByResponse {
		if v != nil {
			return *v
		}
		var ret ComputeInstanceCreatedByResponse
		return ret
	}).(ComputeInstanceCreatedByResponseOutput)
}

// Uniquely identifies the user within his/her organization.
func (o ComputeInstanceCreatedByResponsePtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceCreatedByResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserId
	}).(pulumi.StringPtrOutput)
}

// Name of the user.
func (o ComputeInstanceCreatedByResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceCreatedByResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

// Uniquely identifies user' Azure Active Directory organization.
func (o ComputeInstanceCreatedByResponsePtrOutput) UserOrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceCreatedByResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserOrgId
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceLastOperationResponse struct {
	// Name of the last operation.
	OperationName *string `pulumi:"operationName"`
	// Operation status.
	OperationStatus *string `pulumi:"operationStatus"`
	// Time of the last operation.
	OperationTime *string `pulumi:"operationTime"`
}

// ComputeInstanceLastOperationResponseInput is an input type that accepts ComputeInstanceLastOperationResponseArgs and ComputeInstanceLastOperationResponseOutput values.
// You can construct a concrete instance of `ComputeInstanceLastOperationResponseInput` via:
//
//          ComputeInstanceLastOperationResponseArgs{...}
type ComputeInstanceLastOperationResponseInput interface {
	pulumi.Input

	ToComputeInstanceLastOperationResponseOutput() ComputeInstanceLastOperationResponseOutput
	ToComputeInstanceLastOperationResponseOutputWithContext(context.Context) ComputeInstanceLastOperationResponseOutput
}

type ComputeInstanceLastOperationResponseArgs struct {
	// Name of the last operation.
	OperationName pulumi.StringPtrInput `pulumi:"operationName"`
	// Operation status.
	OperationStatus pulumi.StringPtrInput `pulumi:"operationStatus"`
	// Time of the last operation.
	OperationTime pulumi.StringPtrInput `pulumi:"operationTime"`
}

func (ComputeInstanceLastOperationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceLastOperationResponse)(nil)).Elem()
}

func (i ComputeInstanceLastOperationResponseArgs) ToComputeInstanceLastOperationResponseOutput() ComputeInstanceLastOperationResponseOutput {
	return i.ToComputeInstanceLastOperationResponseOutputWithContext(context.Background())
}

func (i ComputeInstanceLastOperationResponseArgs) ToComputeInstanceLastOperationResponseOutputWithContext(ctx context.Context) ComputeInstanceLastOperationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceLastOperationResponseOutput)
}

func (i ComputeInstanceLastOperationResponseArgs) ToComputeInstanceLastOperationResponsePtrOutput() ComputeInstanceLastOperationResponsePtrOutput {
	return i.ToComputeInstanceLastOperationResponsePtrOutputWithContext(context.Background())
}

func (i ComputeInstanceLastOperationResponseArgs) ToComputeInstanceLastOperationResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceLastOperationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceLastOperationResponseOutput).ToComputeInstanceLastOperationResponsePtrOutputWithContext(ctx)
}

// ComputeInstanceLastOperationResponsePtrInput is an input type that accepts ComputeInstanceLastOperationResponseArgs, ComputeInstanceLastOperationResponsePtr and ComputeInstanceLastOperationResponsePtrOutput values.
// You can construct a concrete instance of `ComputeInstanceLastOperationResponsePtrInput` via:
//
//          ComputeInstanceLastOperationResponseArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceLastOperationResponsePtrInput interface {
	pulumi.Input

	ToComputeInstanceLastOperationResponsePtrOutput() ComputeInstanceLastOperationResponsePtrOutput
	ToComputeInstanceLastOperationResponsePtrOutputWithContext(context.Context) ComputeInstanceLastOperationResponsePtrOutput
}

type computeInstanceLastOperationResponsePtrType ComputeInstanceLastOperationResponseArgs

func ComputeInstanceLastOperationResponsePtr(v *ComputeInstanceLastOperationResponseArgs) ComputeInstanceLastOperationResponsePtrInput {
	return (*computeInstanceLastOperationResponsePtrType)(v)
}

func (*computeInstanceLastOperationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceLastOperationResponse)(nil)).Elem()
}

func (i *computeInstanceLastOperationResponsePtrType) ToComputeInstanceLastOperationResponsePtrOutput() ComputeInstanceLastOperationResponsePtrOutput {
	return i.ToComputeInstanceLastOperationResponsePtrOutputWithContext(context.Background())
}

func (i *computeInstanceLastOperationResponsePtrType) ToComputeInstanceLastOperationResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceLastOperationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceLastOperationResponsePtrOutput)
}

type ComputeInstanceLastOperationResponseOutput struct{ *pulumi.OutputState }

func (ComputeInstanceLastOperationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceLastOperationResponse)(nil)).Elem()
}

func (o ComputeInstanceLastOperationResponseOutput) ToComputeInstanceLastOperationResponseOutput() ComputeInstanceLastOperationResponseOutput {
	return o
}

func (o ComputeInstanceLastOperationResponseOutput) ToComputeInstanceLastOperationResponseOutputWithContext(ctx context.Context) ComputeInstanceLastOperationResponseOutput {
	return o
}

func (o ComputeInstanceLastOperationResponseOutput) ToComputeInstanceLastOperationResponsePtrOutput() ComputeInstanceLastOperationResponsePtrOutput {
	return o.ToComputeInstanceLastOperationResponsePtrOutputWithContext(context.Background())
}

func (o ComputeInstanceLastOperationResponseOutput) ToComputeInstanceLastOperationResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceLastOperationResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeInstanceLastOperationResponse) *ComputeInstanceLastOperationResponse {
		return &v
	}).(ComputeInstanceLastOperationResponsePtrOutput)
}

// Name of the last operation.
func (o ComputeInstanceLastOperationResponseOutput) OperationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceLastOperationResponse) *string { return v.OperationName }).(pulumi.StringPtrOutput)
}

// Operation status.
func (o ComputeInstanceLastOperationResponseOutput) OperationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceLastOperationResponse) *string { return v.OperationStatus }).(pulumi.StringPtrOutput)
}

// Time of the last operation.
func (o ComputeInstanceLastOperationResponseOutput) OperationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceLastOperationResponse) *string { return v.OperationTime }).(pulumi.StringPtrOutput)
}

type ComputeInstanceLastOperationResponsePtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceLastOperationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceLastOperationResponse)(nil)).Elem()
}

func (o ComputeInstanceLastOperationResponsePtrOutput) ToComputeInstanceLastOperationResponsePtrOutput() ComputeInstanceLastOperationResponsePtrOutput {
	return o
}

func (o ComputeInstanceLastOperationResponsePtrOutput) ToComputeInstanceLastOperationResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceLastOperationResponsePtrOutput {
	return o
}

func (o ComputeInstanceLastOperationResponsePtrOutput) Elem() ComputeInstanceLastOperationResponseOutput {
	return o.ApplyT(func(v *ComputeInstanceLastOperationResponse) ComputeInstanceLastOperationResponse {
		if v != nil {
			return *v
		}
		var ret ComputeInstanceLastOperationResponse
		return ret
	}).(ComputeInstanceLastOperationResponseOutput)
}

// Name of the last operation.
func (o ComputeInstanceLastOperationResponsePtrOutput) OperationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceLastOperationResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperationName
	}).(pulumi.StringPtrOutput)
}

// Operation status.
func (o ComputeInstanceLastOperationResponsePtrOutput) OperationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceLastOperationResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperationStatus
	}).(pulumi.StringPtrOutput)
}

// Time of the last operation.
func (o ComputeInstanceLastOperationResponsePtrOutput) OperationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceLastOperationResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperationTime
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceProperties struct {
	// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
	ApplicationSharingPolicy *string `pulumi:"applicationSharingPolicy"`
	// The Compute Instance Authorization type. Available values are personal (default).
	ComputeInstanceAuthorizationType *string `pulumi:"computeInstanceAuthorizationType"`
	// Settings for a personal compute instance.
	PersonalComputeInstanceSettings *PersonalComputeInstanceSettings `pulumi:"personalComputeInstanceSettings"`
	// Details of customized scripts to execute for setting up the cluster.
	SetupScripts *SetupScripts `pulumi:"setupScripts"`
	// Specifies policy and settings for SSH access.
	SshSettings *ComputeInstanceSshSettings `pulumi:"sshSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet *ResourceId `pulumi:"subnet"`
	// Virtual Machine Size
	VmSize *string `pulumi:"vmSize"`
}

// ComputeInstancePropertiesInput is an input type that accepts ComputeInstancePropertiesArgs and ComputeInstancePropertiesOutput values.
// You can construct a concrete instance of `ComputeInstancePropertiesInput` via:
//
//          ComputeInstancePropertiesArgs{...}
type ComputeInstancePropertiesInput interface {
	pulumi.Input

	ToComputeInstancePropertiesOutput() ComputeInstancePropertiesOutput
	ToComputeInstancePropertiesOutputWithContext(context.Context) ComputeInstancePropertiesOutput
}

type ComputeInstancePropertiesArgs struct {
	// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
	ApplicationSharingPolicy pulumi.StringPtrInput `pulumi:"applicationSharingPolicy"`
	// The Compute Instance Authorization type. Available values are personal (default).
	ComputeInstanceAuthorizationType pulumi.StringPtrInput `pulumi:"computeInstanceAuthorizationType"`
	// Settings for a personal compute instance.
	PersonalComputeInstanceSettings PersonalComputeInstanceSettingsPtrInput `pulumi:"personalComputeInstanceSettings"`
	// Details of customized scripts to execute for setting up the cluster.
	SetupScripts SetupScriptsPtrInput `pulumi:"setupScripts"`
	// Specifies policy and settings for SSH access.
	SshSettings ComputeInstanceSshSettingsPtrInput `pulumi:"sshSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet ResourceIdPtrInput `pulumi:"subnet"`
	// Virtual Machine Size
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (ComputeInstancePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceProperties)(nil)).Elem()
}

func (i ComputeInstancePropertiesArgs) ToComputeInstancePropertiesOutput() ComputeInstancePropertiesOutput {
	return i.ToComputeInstancePropertiesOutputWithContext(context.Background())
}

func (i ComputeInstancePropertiesArgs) ToComputeInstancePropertiesOutputWithContext(ctx context.Context) ComputeInstancePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstancePropertiesOutput)
}

func (i ComputeInstancePropertiesArgs) ToComputeInstancePropertiesPtrOutput() ComputeInstancePropertiesPtrOutput {
	return i.ToComputeInstancePropertiesPtrOutputWithContext(context.Background())
}

func (i ComputeInstancePropertiesArgs) ToComputeInstancePropertiesPtrOutputWithContext(ctx context.Context) ComputeInstancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstancePropertiesOutput).ToComputeInstancePropertiesPtrOutputWithContext(ctx)
}

// ComputeInstancePropertiesPtrInput is an input type that accepts ComputeInstancePropertiesArgs, ComputeInstancePropertiesPtr and ComputeInstancePropertiesPtrOutput values.
// You can construct a concrete instance of `ComputeInstancePropertiesPtrInput` via:
//
//          ComputeInstancePropertiesArgs{...}
//
//  or:
//
//          nil
type ComputeInstancePropertiesPtrInput interface {
	pulumi.Input

	ToComputeInstancePropertiesPtrOutput() ComputeInstancePropertiesPtrOutput
	ToComputeInstancePropertiesPtrOutputWithContext(context.Context) ComputeInstancePropertiesPtrOutput
}

type computeInstancePropertiesPtrType ComputeInstancePropertiesArgs

func ComputeInstancePropertiesPtr(v *ComputeInstancePropertiesArgs) ComputeInstancePropertiesPtrInput {
	return (*computeInstancePropertiesPtrType)(v)
}

func (*computeInstancePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceProperties)(nil)).Elem()
}

func (i *computeInstancePropertiesPtrType) ToComputeInstancePropertiesPtrOutput() ComputeInstancePropertiesPtrOutput {
	return i.ToComputeInstancePropertiesPtrOutputWithContext(context.Background())
}

func (i *computeInstancePropertiesPtrType) ToComputeInstancePropertiesPtrOutputWithContext(ctx context.Context) ComputeInstancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstancePropertiesPtrOutput)
}

type ComputeInstancePropertiesOutput struct{ *pulumi.OutputState }

func (ComputeInstancePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceProperties)(nil)).Elem()
}

func (o ComputeInstancePropertiesOutput) ToComputeInstancePropertiesOutput() ComputeInstancePropertiesOutput {
	return o
}

func (o ComputeInstancePropertiesOutput) ToComputeInstancePropertiesOutputWithContext(ctx context.Context) ComputeInstancePropertiesOutput {
	return o
}

func (o ComputeInstancePropertiesOutput) ToComputeInstancePropertiesPtrOutput() ComputeInstancePropertiesPtrOutput {
	return o.ToComputeInstancePropertiesPtrOutputWithContext(context.Background())
}

func (o ComputeInstancePropertiesOutput) ToComputeInstancePropertiesPtrOutputWithContext(ctx context.Context) ComputeInstancePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeInstanceProperties) *ComputeInstanceProperties {
		return &v
	}).(ComputeInstancePropertiesPtrOutput)
}

// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
func (o ComputeInstancePropertiesOutput) ApplicationSharingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceProperties) *string { return v.ApplicationSharingPolicy }).(pulumi.StringPtrOutput)
}

// The Compute Instance Authorization type. Available values are personal (default).
func (o ComputeInstancePropertiesOutput) ComputeInstanceAuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceProperties) *string { return v.ComputeInstanceAuthorizationType }).(pulumi.StringPtrOutput)
}

// Settings for a personal compute instance.
func (o ComputeInstancePropertiesOutput) PersonalComputeInstanceSettings() PersonalComputeInstanceSettingsPtrOutput {
	return o.ApplyT(func(v ComputeInstanceProperties) *PersonalComputeInstanceSettings {
		return v.PersonalComputeInstanceSettings
	}).(PersonalComputeInstanceSettingsPtrOutput)
}

// Details of customized scripts to execute for setting up the cluster.
func (o ComputeInstancePropertiesOutput) SetupScripts() SetupScriptsPtrOutput {
	return o.ApplyT(func(v ComputeInstanceProperties) *SetupScripts { return v.SetupScripts }).(SetupScriptsPtrOutput)
}

// Specifies policy and settings for SSH access.
func (o ComputeInstancePropertiesOutput) SshSettings() ComputeInstanceSshSettingsPtrOutput {
	return o.ApplyT(func(v ComputeInstanceProperties) *ComputeInstanceSshSettings { return v.SshSettings }).(ComputeInstanceSshSettingsPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o ComputeInstancePropertiesOutput) Subnet() ResourceIdPtrOutput {
	return o.ApplyT(func(v ComputeInstanceProperties) *ResourceId { return v.Subnet }).(ResourceIdPtrOutput)
}

// Virtual Machine Size
func (o ComputeInstancePropertiesOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceProperties) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type ComputeInstancePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstancePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceProperties)(nil)).Elem()
}

func (o ComputeInstancePropertiesPtrOutput) ToComputeInstancePropertiesPtrOutput() ComputeInstancePropertiesPtrOutput {
	return o
}

func (o ComputeInstancePropertiesPtrOutput) ToComputeInstancePropertiesPtrOutputWithContext(ctx context.Context) ComputeInstancePropertiesPtrOutput {
	return o
}

func (o ComputeInstancePropertiesPtrOutput) Elem() ComputeInstancePropertiesOutput {
	return o.ApplyT(func(v *ComputeInstanceProperties) ComputeInstanceProperties {
		if v != nil {
			return *v
		}
		var ret ComputeInstanceProperties
		return ret
	}).(ComputeInstancePropertiesOutput)
}

// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
func (o ComputeInstancePropertiesPtrOutput) ApplicationSharingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationSharingPolicy
	}).(pulumi.StringPtrOutput)
}

// The Compute Instance Authorization type. Available values are personal (default).
func (o ComputeInstancePropertiesPtrOutput) ComputeInstanceAuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ComputeInstanceAuthorizationType
	}).(pulumi.StringPtrOutput)
}

// Settings for a personal compute instance.
func (o ComputeInstancePropertiesPtrOutput) PersonalComputeInstanceSettings() PersonalComputeInstanceSettingsPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceProperties) *PersonalComputeInstanceSettings {
		if v == nil {
			return nil
		}
		return v.PersonalComputeInstanceSettings
	}).(PersonalComputeInstanceSettingsPtrOutput)
}

// Details of customized scripts to execute for setting up the cluster.
func (o ComputeInstancePropertiesPtrOutput) SetupScripts() SetupScriptsPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceProperties) *SetupScripts {
		if v == nil {
			return nil
		}
		return v.SetupScripts
	}).(SetupScriptsPtrOutput)
}

// Specifies policy and settings for SSH access.
func (o ComputeInstancePropertiesPtrOutput) SshSettings() ComputeInstanceSshSettingsPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceProperties) *ComputeInstanceSshSettings {
		if v == nil {
			return nil
		}
		return v.SshSettings
	}).(ComputeInstanceSshSettingsPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o ComputeInstancePropertiesPtrOutput) Subnet() ResourceIdPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceProperties) *ResourceId {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(ResourceIdPtrOutput)
}

// Virtual Machine Size
func (o ComputeInstancePropertiesPtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'ComputeInstance'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// Compute Instance properties
	Properties *ComputeInstanceResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// ComputeInstanceResponseInput is an input type that accepts ComputeInstanceResponseArgs and ComputeInstanceResponseOutput values.
// You can construct a concrete instance of `ComputeInstanceResponseInput` via:
//
//          ComputeInstanceResponseArgs{...}
type ComputeInstanceResponseInput interface {
	pulumi.Input

	ToComputeInstanceResponseOutput() ComputeInstanceResponseOutput
	ToComputeInstanceResponseOutputWithContext(context.Context) ComputeInstanceResponseOutput
}

type ComputeInstanceResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'ComputeInstance'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// Compute Instance properties
	Properties ComputeInstanceResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ComputeInstanceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceResponse)(nil)).Elem()
}

func (i ComputeInstanceResponseArgs) ToComputeInstanceResponseOutput() ComputeInstanceResponseOutput {
	return i.ToComputeInstanceResponseOutputWithContext(context.Background())
}

func (i ComputeInstanceResponseArgs) ToComputeInstanceResponseOutputWithContext(ctx context.Context) ComputeInstanceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceResponseOutput)
}

type ComputeInstanceResponseOutput struct{ *pulumi.OutputState }

func (ComputeInstanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceResponse)(nil)).Elem()
}

func (o ComputeInstanceResponseOutput) ToComputeInstanceResponseOutput() ComputeInstanceResponseOutput {
	return o
}

func (o ComputeInstanceResponseOutput) ToComputeInstanceResponseOutputWithContext(ctx context.Context) ComputeInstanceResponseOutput {
	return o
}

// Location for the underlying compute
func (o ComputeInstanceResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'ComputeInstance'.
func (o ComputeInstanceResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o ComputeInstanceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o ComputeInstanceResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// Compute Instance properties
func (o ComputeInstanceResponseOutput) Properties() ComputeInstanceResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) *ComputeInstanceResponseProperties { return v.Properties }).(ComputeInstanceResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o ComputeInstanceResponseOutput) ProvisioningErrors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) []MachineLearningServiceErrorResponse { return v.ProvisioningErrors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o ComputeInstanceResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o ComputeInstanceResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ComputeInstanceResponseProperties struct {
	// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
	ApplicationSharingPolicy *string `pulumi:"applicationSharingPolicy"`
	// Describes available applications and their endpoints on this ComputeInstance.
	Applications []ComputeInstanceApplicationResponse `pulumi:"applications"`
	// The Compute Instance Authorization type. Available values are personal (default).
	ComputeInstanceAuthorizationType *string `pulumi:"computeInstanceAuthorizationType"`
	// Describes all connectivity endpoints available for this ComputeInstance.
	ConnectivityEndpoints ComputeInstanceConnectivityEndpointsResponse `pulumi:"connectivityEndpoints"`
	// Describes information on user who created this ComputeInstance.
	CreatedBy ComputeInstanceCreatedByResponse `pulumi:"createdBy"`
	// Collection of errors encountered on this ComputeInstance.
	Errors []MachineLearningServiceErrorResponse `pulumi:"errors"`
	// The last operation on ComputeInstance.
	LastOperation ComputeInstanceLastOperationResponse `pulumi:"lastOperation"`
	// Settings for a personal compute instance.
	PersonalComputeInstanceSettings *PersonalComputeInstanceSettingsResponse `pulumi:"personalComputeInstanceSettings"`
	// Details of customized scripts to execute for setting up the cluster.
	SetupScripts *SetupScriptsResponse `pulumi:"setupScripts"`
	// Specifies policy and settings for SSH access.
	SshSettings *ComputeInstanceSshSettingsResponse `pulumi:"sshSettings"`
	// The current state of this ComputeInstance.
	State string `pulumi:"state"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet *ResourceIdResponse `pulumi:"subnet"`
	// Virtual Machine Size
	VmSize *string `pulumi:"vmSize"`
}

// ComputeInstanceResponsePropertiesInput is an input type that accepts ComputeInstanceResponsePropertiesArgs and ComputeInstanceResponsePropertiesOutput values.
// You can construct a concrete instance of `ComputeInstanceResponsePropertiesInput` via:
//
//          ComputeInstanceResponsePropertiesArgs{...}
type ComputeInstanceResponsePropertiesInput interface {
	pulumi.Input

	ToComputeInstanceResponsePropertiesOutput() ComputeInstanceResponsePropertiesOutput
	ToComputeInstanceResponsePropertiesOutputWithContext(context.Context) ComputeInstanceResponsePropertiesOutput
}

type ComputeInstanceResponsePropertiesArgs struct {
	// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
	ApplicationSharingPolicy pulumi.StringPtrInput `pulumi:"applicationSharingPolicy"`
	// Describes available applications and their endpoints on this ComputeInstance.
	Applications ComputeInstanceApplicationResponseArrayInput `pulumi:"applications"`
	// The Compute Instance Authorization type. Available values are personal (default).
	ComputeInstanceAuthorizationType pulumi.StringPtrInput `pulumi:"computeInstanceAuthorizationType"`
	// Describes all connectivity endpoints available for this ComputeInstance.
	ConnectivityEndpoints ComputeInstanceConnectivityEndpointsResponseInput `pulumi:"connectivityEndpoints"`
	// Describes information on user who created this ComputeInstance.
	CreatedBy ComputeInstanceCreatedByResponseInput `pulumi:"createdBy"`
	// Collection of errors encountered on this ComputeInstance.
	Errors MachineLearningServiceErrorResponseArrayInput `pulumi:"errors"`
	// The last operation on ComputeInstance.
	LastOperation ComputeInstanceLastOperationResponseInput `pulumi:"lastOperation"`
	// Settings for a personal compute instance.
	PersonalComputeInstanceSettings PersonalComputeInstanceSettingsResponsePtrInput `pulumi:"personalComputeInstanceSettings"`
	// Details of customized scripts to execute for setting up the cluster.
	SetupScripts SetupScriptsResponsePtrInput `pulumi:"setupScripts"`
	// Specifies policy and settings for SSH access.
	SshSettings ComputeInstanceSshSettingsResponsePtrInput `pulumi:"sshSettings"`
	// The current state of this ComputeInstance.
	State pulumi.StringInput `pulumi:"state"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet ResourceIdResponsePtrInput `pulumi:"subnet"`
	// Virtual Machine Size
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (ComputeInstanceResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceResponseProperties)(nil)).Elem()
}

func (i ComputeInstanceResponsePropertiesArgs) ToComputeInstanceResponsePropertiesOutput() ComputeInstanceResponsePropertiesOutput {
	return i.ToComputeInstanceResponsePropertiesOutputWithContext(context.Background())
}

func (i ComputeInstanceResponsePropertiesArgs) ToComputeInstanceResponsePropertiesOutputWithContext(ctx context.Context) ComputeInstanceResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceResponsePropertiesOutput)
}

func (i ComputeInstanceResponsePropertiesArgs) ToComputeInstanceResponsePropertiesPtrOutput() ComputeInstanceResponsePropertiesPtrOutput {
	return i.ToComputeInstanceResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i ComputeInstanceResponsePropertiesArgs) ToComputeInstanceResponsePropertiesPtrOutputWithContext(ctx context.Context) ComputeInstanceResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceResponsePropertiesOutput).ToComputeInstanceResponsePropertiesPtrOutputWithContext(ctx)
}

// ComputeInstanceResponsePropertiesPtrInput is an input type that accepts ComputeInstanceResponsePropertiesArgs, ComputeInstanceResponsePropertiesPtr and ComputeInstanceResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `ComputeInstanceResponsePropertiesPtrInput` via:
//
//          ComputeInstanceResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceResponsePropertiesPtrInput interface {
	pulumi.Input

	ToComputeInstanceResponsePropertiesPtrOutput() ComputeInstanceResponsePropertiesPtrOutput
	ToComputeInstanceResponsePropertiesPtrOutputWithContext(context.Context) ComputeInstanceResponsePropertiesPtrOutput
}

type computeInstanceResponsePropertiesPtrType ComputeInstanceResponsePropertiesArgs

func ComputeInstanceResponsePropertiesPtr(v *ComputeInstanceResponsePropertiesArgs) ComputeInstanceResponsePropertiesPtrInput {
	return (*computeInstanceResponsePropertiesPtrType)(v)
}

func (*computeInstanceResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceResponseProperties)(nil)).Elem()
}

func (i *computeInstanceResponsePropertiesPtrType) ToComputeInstanceResponsePropertiesPtrOutput() ComputeInstanceResponsePropertiesPtrOutput {
	return i.ToComputeInstanceResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *computeInstanceResponsePropertiesPtrType) ToComputeInstanceResponsePropertiesPtrOutputWithContext(ctx context.Context) ComputeInstanceResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceResponsePropertiesPtrOutput)
}

type ComputeInstanceResponsePropertiesOutput struct{ *pulumi.OutputState }

func (ComputeInstanceResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceResponseProperties)(nil)).Elem()
}

func (o ComputeInstanceResponsePropertiesOutput) ToComputeInstanceResponsePropertiesOutput() ComputeInstanceResponsePropertiesOutput {
	return o
}

func (o ComputeInstanceResponsePropertiesOutput) ToComputeInstanceResponsePropertiesOutputWithContext(ctx context.Context) ComputeInstanceResponsePropertiesOutput {
	return o
}

func (o ComputeInstanceResponsePropertiesOutput) ToComputeInstanceResponsePropertiesPtrOutput() ComputeInstanceResponsePropertiesPtrOutput {
	return o.ToComputeInstanceResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceResponsePropertiesOutput) ToComputeInstanceResponsePropertiesPtrOutputWithContext(ctx context.Context) ComputeInstanceResponsePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeInstanceResponseProperties) *ComputeInstanceResponseProperties {
		return &v
	}).(ComputeInstanceResponsePropertiesPtrOutput)
}

// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
func (o ComputeInstanceResponsePropertiesOutput) ApplicationSharingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceResponseProperties) *string { return v.ApplicationSharingPolicy }).(pulumi.StringPtrOutput)
}

// Describes available applications and their endpoints on this ComputeInstance.
func (o ComputeInstanceResponsePropertiesOutput) Applications() ComputeInstanceApplicationResponseArrayOutput {
	return o.ApplyT(func(v ComputeInstanceResponseProperties) []ComputeInstanceApplicationResponse { return v.Applications }).(ComputeInstanceApplicationResponseArrayOutput)
}

// The Compute Instance Authorization type. Available values are personal (default).
func (o ComputeInstanceResponsePropertiesOutput) ComputeInstanceAuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceResponseProperties) *string { return v.ComputeInstanceAuthorizationType }).(pulumi.StringPtrOutput)
}

// Describes all connectivity endpoints available for this ComputeInstance.
func (o ComputeInstanceResponsePropertiesOutput) ConnectivityEndpoints() ComputeInstanceConnectivityEndpointsResponseOutput {
	return o.ApplyT(func(v ComputeInstanceResponseProperties) ComputeInstanceConnectivityEndpointsResponse {
		return v.ConnectivityEndpoints
	}).(ComputeInstanceConnectivityEndpointsResponseOutput)
}

// Describes information on user who created this ComputeInstance.
func (o ComputeInstanceResponsePropertiesOutput) CreatedBy() ComputeInstanceCreatedByResponseOutput {
	return o.ApplyT(func(v ComputeInstanceResponseProperties) ComputeInstanceCreatedByResponse { return v.CreatedBy }).(ComputeInstanceCreatedByResponseOutput)
}

// Collection of errors encountered on this ComputeInstance.
func (o ComputeInstanceResponsePropertiesOutput) Errors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v ComputeInstanceResponseProperties) []MachineLearningServiceErrorResponse { return v.Errors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// The last operation on ComputeInstance.
func (o ComputeInstanceResponsePropertiesOutput) LastOperation() ComputeInstanceLastOperationResponseOutput {
	return o.ApplyT(func(v ComputeInstanceResponseProperties) ComputeInstanceLastOperationResponse { return v.LastOperation }).(ComputeInstanceLastOperationResponseOutput)
}

// Settings for a personal compute instance.
func (o ComputeInstanceResponsePropertiesOutput) PersonalComputeInstanceSettings() PersonalComputeInstanceSettingsResponsePtrOutput {
	return o.ApplyT(func(v ComputeInstanceResponseProperties) *PersonalComputeInstanceSettingsResponse {
		return v.PersonalComputeInstanceSettings
	}).(PersonalComputeInstanceSettingsResponsePtrOutput)
}

// Details of customized scripts to execute for setting up the cluster.
func (o ComputeInstanceResponsePropertiesOutput) SetupScripts() SetupScriptsResponsePtrOutput {
	return o.ApplyT(func(v ComputeInstanceResponseProperties) *SetupScriptsResponse { return v.SetupScripts }).(SetupScriptsResponsePtrOutput)
}

// Specifies policy and settings for SSH access.
func (o ComputeInstanceResponsePropertiesOutput) SshSettings() ComputeInstanceSshSettingsResponsePtrOutput {
	return o.ApplyT(func(v ComputeInstanceResponseProperties) *ComputeInstanceSshSettingsResponse { return v.SshSettings }).(ComputeInstanceSshSettingsResponsePtrOutput)
}

// The current state of this ComputeInstance.
func (o ComputeInstanceResponsePropertiesOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceResponseProperties) string { return v.State }).(pulumi.StringOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o ComputeInstanceResponsePropertiesOutput) Subnet() ResourceIdResponsePtrOutput {
	return o.ApplyT(func(v ComputeInstanceResponseProperties) *ResourceIdResponse { return v.Subnet }).(ResourceIdResponsePtrOutput)
}

// Virtual Machine Size
func (o ComputeInstanceResponsePropertiesOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceResponseProperties) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type ComputeInstanceResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceResponseProperties)(nil)).Elem()
}

func (o ComputeInstanceResponsePropertiesPtrOutput) ToComputeInstanceResponsePropertiesPtrOutput() ComputeInstanceResponsePropertiesPtrOutput {
	return o
}

func (o ComputeInstanceResponsePropertiesPtrOutput) ToComputeInstanceResponsePropertiesPtrOutputWithContext(ctx context.Context) ComputeInstanceResponsePropertiesPtrOutput {
	return o
}

func (o ComputeInstanceResponsePropertiesPtrOutput) Elem() ComputeInstanceResponsePropertiesOutput {
	return o.ApplyT(func(v *ComputeInstanceResponseProperties) ComputeInstanceResponseProperties {
		if v != nil {
			return *v
		}
		var ret ComputeInstanceResponseProperties
		return ret
	}).(ComputeInstanceResponsePropertiesOutput)
}

// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
func (o ComputeInstanceResponsePropertiesPtrOutput) ApplicationSharingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationSharingPolicy
	}).(pulumi.StringPtrOutput)
}

// Describes available applications and their endpoints on this ComputeInstance.
func (o ComputeInstanceResponsePropertiesPtrOutput) Applications() ComputeInstanceApplicationResponseArrayOutput {
	return o.ApplyT(func(v *ComputeInstanceResponseProperties) []ComputeInstanceApplicationResponse {
		if v == nil {
			return nil
		}
		return v.Applications
	}).(ComputeInstanceApplicationResponseArrayOutput)
}

// The Compute Instance Authorization type. Available values are personal (default).
func (o ComputeInstanceResponsePropertiesPtrOutput) ComputeInstanceAuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ComputeInstanceAuthorizationType
	}).(pulumi.StringPtrOutput)
}

// Describes all connectivity endpoints available for this ComputeInstance.
func (o ComputeInstanceResponsePropertiesPtrOutput) ConnectivityEndpoints() ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return o.ApplyT(func(v *ComputeInstanceResponseProperties) *ComputeInstanceConnectivityEndpointsResponse {
		if v == nil {
			return nil
		}
		return &v.ConnectivityEndpoints
	}).(ComputeInstanceConnectivityEndpointsResponsePtrOutput)
}

// Describes information on user who created this ComputeInstance.
func (o ComputeInstanceResponsePropertiesPtrOutput) CreatedBy() ComputeInstanceCreatedByResponsePtrOutput {
	return o.ApplyT(func(v *ComputeInstanceResponseProperties) *ComputeInstanceCreatedByResponse {
		if v == nil {
			return nil
		}
		return &v.CreatedBy
	}).(ComputeInstanceCreatedByResponsePtrOutput)
}

// Collection of errors encountered on this ComputeInstance.
func (o ComputeInstanceResponsePropertiesPtrOutput) Errors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v *ComputeInstanceResponseProperties) []MachineLearningServiceErrorResponse {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(MachineLearningServiceErrorResponseArrayOutput)
}

// The last operation on ComputeInstance.
func (o ComputeInstanceResponsePropertiesPtrOutput) LastOperation() ComputeInstanceLastOperationResponsePtrOutput {
	return o.ApplyT(func(v *ComputeInstanceResponseProperties) *ComputeInstanceLastOperationResponse {
		if v == nil {
			return nil
		}
		return &v.LastOperation
	}).(ComputeInstanceLastOperationResponsePtrOutput)
}

// Settings for a personal compute instance.
func (o ComputeInstanceResponsePropertiesPtrOutput) PersonalComputeInstanceSettings() PersonalComputeInstanceSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ComputeInstanceResponseProperties) *PersonalComputeInstanceSettingsResponse {
		if v == nil {
			return nil
		}
		return v.PersonalComputeInstanceSettings
	}).(PersonalComputeInstanceSettingsResponsePtrOutput)
}

// Details of customized scripts to execute for setting up the cluster.
func (o ComputeInstanceResponsePropertiesPtrOutput) SetupScripts() SetupScriptsResponsePtrOutput {
	return o.ApplyT(func(v *ComputeInstanceResponseProperties) *SetupScriptsResponse {
		if v == nil {
			return nil
		}
		return v.SetupScripts
	}).(SetupScriptsResponsePtrOutput)
}

// Specifies policy and settings for SSH access.
func (o ComputeInstanceResponsePropertiesPtrOutput) SshSettings() ComputeInstanceSshSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ComputeInstanceResponseProperties) *ComputeInstanceSshSettingsResponse {
		if v == nil {
			return nil
		}
		return v.SshSettings
	}).(ComputeInstanceSshSettingsResponsePtrOutput)
}

// The current state of this ComputeInstance.
func (o ComputeInstanceResponsePropertiesPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o ComputeInstanceResponsePropertiesPtrOutput) Subnet() ResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *ComputeInstanceResponseProperties) *ResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(ResourceIdResponsePtrOutput)
}

// Virtual Machine Size
func (o ComputeInstanceResponsePropertiesPtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceSshSettings struct {
	// Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
	AdminPublicKey *string `pulumi:"adminPublicKey"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
	SshPublicAccess *string `pulumi:"sshPublicAccess"`
}

// ComputeInstanceSshSettingsInput is an input type that accepts ComputeInstanceSshSettingsArgs and ComputeInstanceSshSettingsOutput values.
// You can construct a concrete instance of `ComputeInstanceSshSettingsInput` via:
//
//          ComputeInstanceSshSettingsArgs{...}
type ComputeInstanceSshSettingsInput interface {
	pulumi.Input

	ToComputeInstanceSshSettingsOutput() ComputeInstanceSshSettingsOutput
	ToComputeInstanceSshSettingsOutputWithContext(context.Context) ComputeInstanceSshSettingsOutput
}

type ComputeInstanceSshSettingsArgs struct {
	// Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
	AdminPublicKey pulumi.StringPtrInput `pulumi:"adminPublicKey"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
	SshPublicAccess pulumi.StringPtrInput `pulumi:"sshPublicAccess"`
}

func (ComputeInstanceSshSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceSshSettings)(nil)).Elem()
}

func (i ComputeInstanceSshSettingsArgs) ToComputeInstanceSshSettingsOutput() ComputeInstanceSshSettingsOutput {
	return i.ToComputeInstanceSshSettingsOutputWithContext(context.Background())
}

func (i ComputeInstanceSshSettingsArgs) ToComputeInstanceSshSettingsOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSshSettingsOutput)
}

func (i ComputeInstanceSshSettingsArgs) ToComputeInstanceSshSettingsPtrOutput() ComputeInstanceSshSettingsPtrOutput {
	return i.ToComputeInstanceSshSettingsPtrOutputWithContext(context.Background())
}

func (i ComputeInstanceSshSettingsArgs) ToComputeInstanceSshSettingsPtrOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSshSettingsOutput).ToComputeInstanceSshSettingsPtrOutputWithContext(ctx)
}

// ComputeInstanceSshSettingsPtrInput is an input type that accepts ComputeInstanceSshSettingsArgs, ComputeInstanceSshSettingsPtr and ComputeInstanceSshSettingsPtrOutput values.
// You can construct a concrete instance of `ComputeInstanceSshSettingsPtrInput` via:
//
//          ComputeInstanceSshSettingsArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceSshSettingsPtrInput interface {
	pulumi.Input

	ToComputeInstanceSshSettingsPtrOutput() ComputeInstanceSshSettingsPtrOutput
	ToComputeInstanceSshSettingsPtrOutputWithContext(context.Context) ComputeInstanceSshSettingsPtrOutput
}

type computeInstanceSshSettingsPtrType ComputeInstanceSshSettingsArgs

func ComputeInstanceSshSettingsPtr(v *ComputeInstanceSshSettingsArgs) ComputeInstanceSshSettingsPtrInput {
	return (*computeInstanceSshSettingsPtrType)(v)
}

func (*computeInstanceSshSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceSshSettings)(nil)).Elem()
}

func (i *computeInstanceSshSettingsPtrType) ToComputeInstanceSshSettingsPtrOutput() ComputeInstanceSshSettingsPtrOutput {
	return i.ToComputeInstanceSshSettingsPtrOutputWithContext(context.Background())
}

func (i *computeInstanceSshSettingsPtrType) ToComputeInstanceSshSettingsPtrOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSshSettingsPtrOutput)
}

type ComputeInstanceSshSettingsOutput struct{ *pulumi.OutputState }

func (ComputeInstanceSshSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceSshSettings)(nil)).Elem()
}

func (o ComputeInstanceSshSettingsOutput) ToComputeInstanceSshSettingsOutput() ComputeInstanceSshSettingsOutput {
	return o
}

func (o ComputeInstanceSshSettingsOutput) ToComputeInstanceSshSettingsOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsOutput {
	return o
}

func (o ComputeInstanceSshSettingsOutput) ToComputeInstanceSshSettingsPtrOutput() ComputeInstanceSshSettingsPtrOutput {
	return o.ToComputeInstanceSshSettingsPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceSshSettingsOutput) ToComputeInstanceSshSettingsPtrOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeInstanceSshSettings) *ComputeInstanceSshSettings {
		return &v
	}).(ComputeInstanceSshSettingsPtrOutput)
}

// Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
func (o ComputeInstanceSshSettingsOutput) AdminPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSshSettings) *string { return v.AdminPublicKey }).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
func (o ComputeInstanceSshSettingsOutput) SshPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSshSettings) *string { return v.SshPublicAccess }).(pulumi.StringPtrOutput)
}

type ComputeInstanceSshSettingsPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceSshSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceSshSettings)(nil)).Elem()
}

func (o ComputeInstanceSshSettingsPtrOutput) ToComputeInstanceSshSettingsPtrOutput() ComputeInstanceSshSettingsPtrOutput {
	return o
}

func (o ComputeInstanceSshSettingsPtrOutput) ToComputeInstanceSshSettingsPtrOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsPtrOutput {
	return o
}

func (o ComputeInstanceSshSettingsPtrOutput) Elem() ComputeInstanceSshSettingsOutput {
	return o.ApplyT(func(v *ComputeInstanceSshSettings) ComputeInstanceSshSettings {
		if v != nil {
			return *v
		}
		var ret ComputeInstanceSshSettings
		return ret
	}).(ComputeInstanceSshSettingsOutput)
}

// Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
func (o ComputeInstanceSshSettingsPtrOutput) AdminPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceSshSettings) *string {
		if v == nil {
			return nil
		}
		return v.AdminPublicKey
	}).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
func (o ComputeInstanceSshSettingsPtrOutput) SshPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceSshSettings) *string {
		if v == nil {
			return nil
		}
		return v.SshPublicAccess
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceSshSettingsResponse struct {
	// Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
	AdminPublicKey *string `pulumi:"adminPublicKey"`
	// Describes the admin user name.
	AdminUserName string `pulumi:"adminUserName"`
	// Describes the port for connecting through SSH.
	SshPort int `pulumi:"sshPort"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
	SshPublicAccess *string `pulumi:"sshPublicAccess"`
}

// ComputeInstanceSshSettingsResponseInput is an input type that accepts ComputeInstanceSshSettingsResponseArgs and ComputeInstanceSshSettingsResponseOutput values.
// You can construct a concrete instance of `ComputeInstanceSshSettingsResponseInput` via:
//
//          ComputeInstanceSshSettingsResponseArgs{...}
type ComputeInstanceSshSettingsResponseInput interface {
	pulumi.Input

	ToComputeInstanceSshSettingsResponseOutput() ComputeInstanceSshSettingsResponseOutput
	ToComputeInstanceSshSettingsResponseOutputWithContext(context.Context) ComputeInstanceSshSettingsResponseOutput
}

type ComputeInstanceSshSettingsResponseArgs struct {
	// Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
	AdminPublicKey pulumi.StringPtrInput `pulumi:"adminPublicKey"`
	// Describes the admin user name.
	AdminUserName pulumi.StringInput `pulumi:"adminUserName"`
	// Describes the port for connecting through SSH.
	SshPort pulumi.IntInput `pulumi:"sshPort"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
	SshPublicAccess pulumi.StringPtrInput `pulumi:"sshPublicAccess"`
}

func (ComputeInstanceSshSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceSshSettingsResponse)(nil)).Elem()
}

func (i ComputeInstanceSshSettingsResponseArgs) ToComputeInstanceSshSettingsResponseOutput() ComputeInstanceSshSettingsResponseOutput {
	return i.ToComputeInstanceSshSettingsResponseOutputWithContext(context.Background())
}

func (i ComputeInstanceSshSettingsResponseArgs) ToComputeInstanceSshSettingsResponseOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSshSettingsResponseOutput)
}

func (i ComputeInstanceSshSettingsResponseArgs) ToComputeInstanceSshSettingsResponsePtrOutput() ComputeInstanceSshSettingsResponsePtrOutput {
	return i.ToComputeInstanceSshSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ComputeInstanceSshSettingsResponseArgs) ToComputeInstanceSshSettingsResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSshSettingsResponseOutput).ToComputeInstanceSshSettingsResponsePtrOutputWithContext(ctx)
}

// ComputeInstanceSshSettingsResponsePtrInput is an input type that accepts ComputeInstanceSshSettingsResponseArgs, ComputeInstanceSshSettingsResponsePtr and ComputeInstanceSshSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ComputeInstanceSshSettingsResponsePtrInput` via:
//
//          ComputeInstanceSshSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceSshSettingsResponsePtrInput interface {
	pulumi.Input

	ToComputeInstanceSshSettingsResponsePtrOutput() ComputeInstanceSshSettingsResponsePtrOutput
	ToComputeInstanceSshSettingsResponsePtrOutputWithContext(context.Context) ComputeInstanceSshSettingsResponsePtrOutput
}

type computeInstanceSshSettingsResponsePtrType ComputeInstanceSshSettingsResponseArgs

func ComputeInstanceSshSettingsResponsePtr(v *ComputeInstanceSshSettingsResponseArgs) ComputeInstanceSshSettingsResponsePtrInput {
	return (*computeInstanceSshSettingsResponsePtrType)(v)
}

func (*computeInstanceSshSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceSshSettingsResponse)(nil)).Elem()
}

func (i *computeInstanceSshSettingsResponsePtrType) ToComputeInstanceSshSettingsResponsePtrOutput() ComputeInstanceSshSettingsResponsePtrOutput {
	return i.ToComputeInstanceSshSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *computeInstanceSshSettingsResponsePtrType) ToComputeInstanceSshSettingsResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSshSettingsResponsePtrOutput)
}

type ComputeInstanceSshSettingsResponseOutput struct{ *pulumi.OutputState }

func (ComputeInstanceSshSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceSshSettingsResponse)(nil)).Elem()
}

func (o ComputeInstanceSshSettingsResponseOutput) ToComputeInstanceSshSettingsResponseOutput() ComputeInstanceSshSettingsResponseOutput {
	return o
}

func (o ComputeInstanceSshSettingsResponseOutput) ToComputeInstanceSshSettingsResponseOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsResponseOutput {
	return o
}

func (o ComputeInstanceSshSettingsResponseOutput) ToComputeInstanceSshSettingsResponsePtrOutput() ComputeInstanceSshSettingsResponsePtrOutput {
	return o.ToComputeInstanceSshSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ComputeInstanceSshSettingsResponseOutput) ToComputeInstanceSshSettingsResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeInstanceSshSettingsResponse) *ComputeInstanceSshSettingsResponse {
		return &v
	}).(ComputeInstanceSshSettingsResponsePtrOutput)
}

// Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
func (o ComputeInstanceSshSettingsResponseOutput) AdminPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSshSettingsResponse) *string { return v.AdminPublicKey }).(pulumi.StringPtrOutput)
}

// Describes the admin user name.
func (o ComputeInstanceSshSettingsResponseOutput) AdminUserName() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceSshSettingsResponse) string { return v.AdminUserName }).(pulumi.StringOutput)
}

// Describes the port for connecting through SSH.
func (o ComputeInstanceSshSettingsResponseOutput) SshPort() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeInstanceSshSettingsResponse) int { return v.SshPort }).(pulumi.IntOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
func (o ComputeInstanceSshSettingsResponseOutput) SshPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSshSettingsResponse) *string { return v.SshPublicAccess }).(pulumi.StringPtrOutput)
}

type ComputeInstanceSshSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceSshSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceSshSettingsResponse)(nil)).Elem()
}

func (o ComputeInstanceSshSettingsResponsePtrOutput) ToComputeInstanceSshSettingsResponsePtrOutput() ComputeInstanceSshSettingsResponsePtrOutput {
	return o
}

func (o ComputeInstanceSshSettingsResponsePtrOutput) ToComputeInstanceSshSettingsResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsResponsePtrOutput {
	return o
}

func (o ComputeInstanceSshSettingsResponsePtrOutput) Elem() ComputeInstanceSshSettingsResponseOutput {
	return o.ApplyT(func(v *ComputeInstanceSshSettingsResponse) ComputeInstanceSshSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ComputeInstanceSshSettingsResponse
		return ret
	}).(ComputeInstanceSshSettingsResponseOutput)
}

// Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
func (o ComputeInstanceSshSettingsResponsePtrOutput) AdminPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceSshSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminPublicKey
	}).(pulumi.StringPtrOutput)
}

// Describes the admin user name.
func (o ComputeInstanceSshSettingsResponsePtrOutput) AdminUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceSshSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUserName
	}).(pulumi.StringPtrOutput)
}

// Describes the port for connecting through SSH.
func (o ComputeInstanceSshSettingsResponsePtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceSshSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.SshPort
	}).(pulumi.IntPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
func (o ComputeInstanceSshSettingsResponsePtrOutput) SshPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceSshSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SshPublicAccess
	}).(pulumi.StringPtrOutput)
}

type ContainerResourceRequirements struct {
	// The minimum amount of CPU cores to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Cpu *float64 `pulumi:"cpu"`
	// The maximum amount of CPU cores allowed to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	CpuLimit *float64 `pulumi:"cpuLimit"`
	// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
	Fpga *int `pulumi:"fpga"`
	// The number of GPU cores in the container.
	Gpu *int `pulumi:"gpu"`
	// The minimum amount of memory (in GB) to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	MemoryInGB *float64 `pulumi:"memoryInGB"`
	// The maximum amount of memory (in GB) allowed to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	MemoryInGBLimit *float64 `pulumi:"memoryInGBLimit"`
}

// ContainerResourceRequirementsInput is an input type that accepts ContainerResourceRequirementsArgs and ContainerResourceRequirementsOutput values.
// You can construct a concrete instance of `ContainerResourceRequirementsInput` via:
//
//          ContainerResourceRequirementsArgs{...}
type ContainerResourceRequirementsInput interface {
	pulumi.Input

	ToContainerResourceRequirementsOutput() ContainerResourceRequirementsOutput
	ToContainerResourceRequirementsOutputWithContext(context.Context) ContainerResourceRequirementsOutput
}

type ContainerResourceRequirementsArgs struct {
	// The minimum amount of CPU cores to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Cpu pulumi.Float64PtrInput `pulumi:"cpu"`
	// The maximum amount of CPU cores allowed to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	CpuLimit pulumi.Float64PtrInput `pulumi:"cpuLimit"`
	// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
	Fpga pulumi.IntPtrInput `pulumi:"fpga"`
	// The number of GPU cores in the container.
	Gpu pulumi.IntPtrInput `pulumi:"gpu"`
	// The minimum amount of memory (in GB) to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	MemoryInGB pulumi.Float64PtrInput `pulumi:"memoryInGB"`
	// The maximum amount of memory (in GB) allowed to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	MemoryInGBLimit pulumi.Float64PtrInput `pulumi:"memoryInGBLimit"`
}

func (ContainerResourceRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResourceRequirements)(nil)).Elem()
}

func (i ContainerResourceRequirementsArgs) ToContainerResourceRequirementsOutput() ContainerResourceRequirementsOutput {
	return i.ToContainerResourceRequirementsOutputWithContext(context.Background())
}

func (i ContainerResourceRequirementsArgs) ToContainerResourceRequirementsOutputWithContext(ctx context.Context) ContainerResourceRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsOutput)
}

func (i ContainerResourceRequirementsArgs) ToContainerResourceRequirementsPtrOutput() ContainerResourceRequirementsPtrOutput {
	return i.ToContainerResourceRequirementsPtrOutputWithContext(context.Background())
}

func (i ContainerResourceRequirementsArgs) ToContainerResourceRequirementsPtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsOutput).ToContainerResourceRequirementsPtrOutputWithContext(ctx)
}

// ContainerResourceRequirementsPtrInput is an input type that accepts ContainerResourceRequirementsArgs, ContainerResourceRequirementsPtr and ContainerResourceRequirementsPtrOutput values.
// You can construct a concrete instance of `ContainerResourceRequirementsPtrInput` via:
//
//          ContainerResourceRequirementsArgs{...}
//
//  or:
//
//          nil
type ContainerResourceRequirementsPtrInput interface {
	pulumi.Input

	ToContainerResourceRequirementsPtrOutput() ContainerResourceRequirementsPtrOutput
	ToContainerResourceRequirementsPtrOutputWithContext(context.Context) ContainerResourceRequirementsPtrOutput
}

type containerResourceRequirementsPtrType ContainerResourceRequirementsArgs

func ContainerResourceRequirementsPtr(v *ContainerResourceRequirementsArgs) ContainerResourceRequirementsPtrInput {
	return (*containerResourceRequirementsPtrType)(v)
}

func (*containerResourceRequirementsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResourceRequirements)(nil)).Elem()
}

func (i *containerResourceRequirementsPtrType) ToContainerResourceRequirementsPtrOutput() ContainerResourceRequirementsPtrOutput {
	return i.ToContainerResourceRequirementsPtrOutputWithContext(context.Background())
}

func (i *containerResourceRequirementsPtrType) ToContainerResourceRequirementsPtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsPtrOutput)
}

type ContainerResourceRequirementsOutput struct{ *pulumi.OutputState }

func (ContainerResourceRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResourceRequirements)(nil)).Elem()
}

func (o ContainerResourceRequirementsOutput) ToContainerResourceRequirementsOutput() ContainerResourceRequirementsOutput {
	return o
}

func (o ContainerResourceRequirementsOutput) ToContainerResourceRequirementsOutputWithContext(ctx context.Context) ContainerResourceRequirementsOutput {
	return o
}

func (o ContainerResourceRequirementsOutput) ToContainerResourceRequirementsPtrOutput() ContainerResourceRequirementsPtrOutput {
	return o.ToContainerResourceRequirementsPtrOutputWithContext(context.Background())
}

func (o ContainerResourceRequirementsOutput) ToContainerResourceRequirementsPtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerResourceRequirements) *ContainerResourceRequirements {
		return &v
	}).(ContainerResourceRequirementsPtrOutput)
}

// The minimum amount of CPU cores to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirements) *float64 { return v.Cpu }).(pulumi.Float64PtrOutput)
}

// The maximum amount of CPU cores allowed to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsOutput) CpuLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirements) *float64 { return v.CpuLimit }).(pulumi.Float64PtrOutput)
}

// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
func (o ContainerResourceRequirementsOutput) Fpga() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirements) *int { return v.Fpga }).(pulumi.IntPtrOutput)
}

// The number of GPU cores in the container.
func (o ContainerResourceRequirementsOutput) Gpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirements) *int { return v.Gpu }).(pulumi.IntPtrOutput)
}

// The minimum amount of memory (in GB) to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsOutput) MemoryInGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirements) *float64 { return v.MemoryInGB }).(pulumi.Float64PtrOutput)
}

// The maximum amount of memory (in GB) allowed to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsOutput) MemoryInGBLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirements) *float64 { return v.MemoryInGBLimit }).(pulumi.Float64PtrOutput)
}

type ContainerResourceRequirementsPtrOutput struct{ *pulumi.OutputState }

func (ContainerResourceRequirementsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResourceRequirements)(nil)).Elem()
}

func (o ContainerResourceRequirementsPtrOutput) ToContainerResourceRequirementsPtrOutput() ContainerResourceRequirementsPtrOutput {
	return o
}

func (o ContainerResourceRequirementsPtrOutput) ToContainerResourceRequirementsPtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsPtrOutput {
	return o
}

func (o ContainerResourceRequirementsPtrOutput) Elem() ContainerResourceRequirementsOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) ContainerResourceRequirements {
		if v != nil {
			return *v
		}
		var ret ContainerResourceRequirements
		return ret
	}).(ContainerResourceRequirementsOutput)
}

// The minimum amount of CPU cores to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsPtrOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) *float64 {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.Float64PtrOutput)
}

// The maximum amount of CPU cores allowed to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsPtrOutput) CpuLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) *float64 {
		if v == nil {
			return nil
		}
		return v.CpuLimit
	}).(pulumi.Float64PtrOutput)
}

// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
func (o ContainerResourceRequirementsPtrOutput) Fpga() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) *int {
		if v == nil {
			return nil
		}
		return v.Fpga
	}).(pulumi.IntPtrOutput)
}

// The number of GPU cores in the container.
func (o ContainerResourceRequirementsPtrOutput) Gpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) *int {
		if v == nil {
			return nil
		}
		return v.Gpu
	}).(pulumi.IntPtrOutput)
}

// The minimum amount of memory (in GB) to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsPtrOutput) MemoryInGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) *float64 {
		if v == nil {
			return nil
		}
		return v.MemoryInGB
	}).(pulumi.Float64PtrOutput)
}

// The maximum amount of memory (in GB) allowed to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsPtrOutput) MemoryInGBLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) *float64 {
		if v == nil {
			return nil
		}
		return v.MemoryInGBLimit
	}).(pulumi.Float64PtrOutput)
}

type ContainerResourceRequirementsResponse struct {
	// The minimum amount of CPU cores to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Cpu *float64 `pulumi:"cpu"`
	// The maximum amount of CPU cores allowed to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	CpuLimit *float64 `pulumi:"cpuLimit"`
	// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
	Fpga *int `pulumi:"fpga"`
	// The number of GPU cores in the container.
	Gpu *int `pulumi:"gpu"`
	// The minimum amount of memory (in GB) to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	MemoryInGB *float64 `pulumi:"memoryInGB"`
	// The maximum amount of memory (in GB) allowed to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	MemoryInGBLimit *float64 `pulumi:"memoryInGBLimit"`
}

// ContainerResourceRequirementsResponseInput is an input type that accepts ContainerResourceRequirementsResponseArgs and ContainerResourceRequirementsResponseOutput values.
// You can construct a concrete instance of `ContainerResourceRequirementsResponseInput` via:
//
//          ContainerResourceRequirementsResponseArgs{...}
type ContainerResourceRequirementsResponseInput interface {
	pulumi.Input

	ToContainerResourceRequirementsResponseOutput() ContainerResourceRequirementsResponseOutput
	ToContainerResourceRequirementsResponseOutputWithContext(context.Context) ContainerResourceRequirementsResponseOutput
}

type ContainerResourceRequirementsResponseArgs struct {
	// The minimum amount of CPU cores to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Cpu pulumi.Float64PtrInput `pulumi:"cpu"`
	// The maximum amount of CPU cores allowed to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	CpuLimit pulumi.Float64PtrInput `pulumi:"cpuLimit"`
	// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
	Fpga pulumi.IntPtrInput `pulumi:"fpga"`
	// The number of GPU cores in the container.
	Gpu pulumi.IntPtrInput `pulumi:"gpu"`
	// The minimum amount of memory (in GB) to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	MemoryInGB pulumi.Float64PtrInput `pulumi:"memoryInGB"`
	// The maximum amount of memory (in GB) allowed to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	MemoryInGBLimit pulumi.Float64PtrInput `pulumi:"memoryInGBLimit"`
}

func (ContainerResourceRequirementsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResourceRequirementsResponse)(nil)).Elem()
}

func (i ContainerResourceRequirementsResponseArgs) ToContainerResourceRequirementsResponseOutput() ContainerResourceRequirementsResponseOutput {
	return i.ToContainerResourceRequirementsResponseOutputWithContext(context.Background())
}

func (i ContainerResourceRequirementsResponseArgs) ToContainerResourceRequirementsResponseOutputWithContext(ctx context.Context) ContainerResourceRequirementsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsResponseOutput)
}

func (i ContainerResourceRequirementsResponseArgs) ToContainerResourceRequirementsResponsePtrOutput() ContainerResourceRequirementsResponsePtrOutput {
	return i.ToContainerResourceRequirementsResponsePtrOutputWithContext(context.Background())
}

func (i ContainerResourceRequirementsResponseArgs) ToContainerResourceRequirementsResponsePtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsResponseOutput).ToContainerResourceRequirementsResponsePtrOutputWithContext(ctx)
}

// ContainerResourceRequirementsResponsePtrInput is an input type that accepts ContainerResourceRequirementsResponseArgs, ContainerResourceRequirementsResponsePtr and ContainerResourceRequirementsResponsePtrOutput values.
// You can construct a concrete instance of `ContainerResourceRequirementsResponsePtrInput` via:
//
//          ContainerResourceRequirementsResponseArgs{...}
//
//  or:
//
//          nil
type ContainerResourceRequirementsResponsePtrInput interface {
	pulumi.Input

	ToContainerResourceRequirementsResponsePtrOutput() ContainerResourceRequirementsResponsePtrOutput
	ToContainerResourceRequirementsResponsePtrOutputWithContext(context.Context) ContainerResourceRequirementsResponsePtrOutput
}

type containerResourceRequirementsResponsePtrType ContainerResourceRequirementsResponseArgs

func ContainerResourceRequirementsResponsePtr(v *ContainerResourceRequirementsResponseArgs) ContainerResourceRequirementsResponsePtrInput {
	return (*containerResourceRequirementsResponsePtrType)(v)
}

func (*containerResourceRequirementsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResourceRequirementsResponse)(nil)).Elem()
}

func (i *containerResourceRequirementsResponsePtrType) ToContainerResourceRequirementsResponsePtrOutput() ContainerResourceRequirementsResponsePtrOutput {
	return i.ToContainerResourceRequirementsResponsePtrOutputWithContext(context.Background())
}

func (i *containerResourceRequirementsResponsePtrType) ToContainerResourceRequirementsResponsePtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsResponsePtrOutput)
}

type ContainerResourceRequirementsResponseOutput struct{ *pulumi.OutputState }

func (ContainerResourceRequirementsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResourceRequirementsResponse)(nil)).Elem()
}

func (o ContainerResourceRequirementsResponseOutput) ToContainerResourceRequirementsResponseOutput() ContainerResourceRequirementsResponseOutput {
	return o
}

func (o ContainerResourceRequirementsResponseOutput) ToContainerResourceRequirementsResponseOutputWithContext(ctx context.Context) ContainerResourceRequirementsResponseOutput {
	return o
}

func (o ContainerResourceRequirementsResponseOutput) ToContainerResourceRequirementsResponsePtrOutput() ContainerResourceRequirementsResponsePtrOutput {
	return o.ToContainerResourceRequirementsResponsePtrOutputWithContext(context.Background())
}

func (o ContainerResourceRequirementsResponseOutput) ToContainerResourceRequirementsResponsePtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerResourceRequirementsResponse) *ContainerResourceRequirementsResponse {
		return &v
	}).(ContainerResourceRequirementsResponsePtrOutput)
}

// The minimum amount of CPU cores to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsResponseOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsResponse) *float64 { return v.Cpu }).(pulumi.Float64PtrOutput)
}

// The maximum amount of CPU cores allowed to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsResponseOutput) CpuLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsResponse) *float64 { return v.CpuLimit }).(pulumi.Float64PtrOutput)
}

// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
func (o ContainerResourceRequirementsResponseOutput) Fpga() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsResponse) *int { return v.Fpga }).(pulumi.IntPtrOutput)
}

// The number of GPU cores in the container.
func (o ContainerResourceRequirementsResponseOutput) Gpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsResponse) *int { return v.Gpu }).(pulumi.IntPtrOutput)
}

// The minimum amount of memory (in GB) to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsResponseOutput) MemoryInGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsResponse) *float64 { return v.MemoryInGB }).(pulumi.Float64PtrOutput)
}

// The maximum amount of memory (in GB) allowed to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsResponseOutput) MemoryInGBLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsResponse) *float64 { return v.MemoryInGBLimit }).(pulumi.Float64PtrOutput)
}

type ContainerResourceRequirementsResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerResourceRequirementsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResourceRequirementsResponse)(nil)).Elem()
}

func (o ContainerResourceRequirementsResponsePtrOutput) ToContainerResourceRequirementsResponsePtrOutput() ContainerResourceRequirementsResponsePtrOutput {
	return o
}

func (o ContainerResourceRequirementsResponsePtrOutput) ToContainerResourceRequirementsResponsePtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsResponsePtrOutput {
	return o
}

func (o ContainerResourceRequirementsResponsePtrOutput) Elem() ContainerResourceRequirementsResponseOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) ContainerResourceRequirementsResponse {
		if v != nil {
			return *v
		}
		var ret ContainerResourceRequirementsResponse
		return ret
	}).(ContainerResourceRequirementsResponseOutput)
}

// The minimum amount of CPU cores to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsResponsePtrOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.Float64PtrOutput)
}

// The maximum amount of CPU cores allowed to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsResponsePtrOutput) CpuLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.CpuLimit
	}).(pulumi.Float64PtrOutput)
}

// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
func (o ContainerResourceRequirementsResponsePtrOutput) Fpga() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Fpga
	}).(pulumi.IntPtrOutput)
}

// The number of GPU cores in the container.
func (o ContainerResourceRequirementsResponsePtrOutput) Gpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Gpu
	}).(pulumi.IntPtrOutput)
}

// The minimum amount of memory (in GB) to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsResponsePtrOutput) MemoryInGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MemoryInGB
	}).(pulumi.Float64PtrOutput)
}

// The maximum amount of memory (in GB) allowed to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsResponsePtrOutput) MemoryInGBLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MemoryInGBLimit
	}).(pulumi.Float64PtrOutput)
}

type CosmosDbSettings struct {
	// The throughput of the collections in cosmosdb database
	CollectionsThroughput *int `pulumi:"collectionsThroughput"`
}

// CosmosDbSettingsInput is an input type that accepts CosmosDbSettingsArgs and CosmosDbSettingsOutput values.
// You can construct a concrete instance of `CosmosDbSettingsInput` via:
//
//          CosmosDbSettingsArgs{...}
type CosmosDbSettingsInput interface {
	pulumi.Input

	ToCosmosDbSettingsOutput() CosmosDbSettingsOutput
	ToCosmosDbSettingsOutputWithContext(context.Context) CosmosDbSettingsOutput
}

type CosmosDbSettingsArgs struct {
	// The throughput of the collections in cosmosdb database
	CollectionsThroughput pulumi.IntPtrInput `pulumi:"collectionsThroughput"`
}

func (CosmosDbSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosmosDbSettings)(nil)).Elem()
}

func (i CosmosDbSettingsArgs) ToCosmosDbSettingsOutput() CosmosDbSettingsOutput {
	return i.ToCosmosDbSettingsOutputWithContext(context.Background())
}

func (i CosmosDbSettingsArgs) ToCosmosDbSettingsOutputWithContext(ctx context.Context) CosmosDbSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosmosDbSettingsOutput)
}

func (i CosmosDbSettingsArgs) ToCosmosDbSettingsPtrOutput() CosmosDbSettingsPtrOutput {
	return i.ToCosmosDbSettingsPtrOutputWithContext(context.Background())
}

func (i CosmosDbSettingsArgs) ToCosmosDbSettingsPtrOutputWithContext(ctx context.Context) CosmosDbSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosmosDbSettingsOutput).ToCosmosDbSettingsPtrOutputWithContext(ctx)
}

// CosmosDbSettingsPtrInput is an input type that accepts CosmosDbSettingsArgs, CosmosDbSettingsPtr and CosmosDbSettingsPtrOutput values.
// You can construct a concrete instance of `CosmosDbSettingsPtrInput` via:
//
//          CosmosDbSettingsArgs{...}
//
//  or:
//
//          nil
type CosmosDbSettingsPtrInput interface {
	pulumi.Input

	ToCosmosDbSettingsPtrOutput() CosmosDbSettingsPtrOutput
	ToCosmosDbSettingsPtrOutputWithContext(context.Context) CosmosDbSettingsPtrOutput
}

type cosmosDbSettingsPtrType CosmosDbSettingsArgs

func CosmosDbSettingsPtr(v *CosmosDbSettingsArgs) CosmosDbSettingsPtrInput {
	return (*cosmosDbSettingsPtrType)(v)
}

func (*cosmosDbSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CosmosDbSettings)(nil)).Elem()
}

func (i *cosmosDbSettingsPtrType) ToCosmosDbSettingsPtrOutput() CosmosDbSettingsPtrOutput {
	return i.ToCosmosDbSettingsPtrOutputWithContext(context.Background())
}

func (i *cosmosDbSettingsPtrType) ToCosmosDbSettingsPtrOutputWithContext(ctx context.Context) CosmosDbSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosmosDbSettingsPtrOutput)
}

type CosmosDbSettingsOutput struct{ *pulumi.OutputState }

func (CosmosDbSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosmosDbSettings)(nil)).Elem()
}

func (o CosmosDbSettingsOutput) ToCosmosDbSettingsOutput() CosmosDbSettingsOutput {
	return o
}

func (o CosmosDbSettingsOutput) ToCosmosDbSettingsOutputWithContext(ctx context.Context) CosmosDbSettingsOutput {
	return o
}

func (o CosmosDbSettingsOutput) ToCosmosDbSettingsPtrOutput() CosmosDbSettingsPtrOutput {
	return o.ToCosmosDbSettingsPtrOutputWithContext(context.Background())
}

func (o CosmosDbSettingsOutput) ToCosmosDbSettingsPtrOutputWithContext(ctx context.Context) CosmosDbSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CosmosDbSettings) *CosmosDbSettings {
		return &v
	}).(CosmosDbSettingsPtrOutput)
}

// The throughput of the collections in cosmosdb database
func (o CosmosDbSettingsOutput) CollectionsThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CosmosDbSettings) *int { return v.CollectionsThroughput }).(pulumi.IntPtrOutput)
}

type CosmosDbSettingsPtrOutput struct{ *pulumi.OutputState }

func (CosmosDbSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CosmosDbSettings)(nil)).Elem()
}

func (o CosmosDbSettingsPtrOutput) ToCosmosDbSettingsPtrOutput() CosmosDbSettingsPtrOutput {
	return o
}

func (o CosmosDbSettingsPtrOutput) ToCosmosDbSettingsPtrOutputWithContext(ctx context.Context) CosmosDbSettingsPtrOutput {
	return o
}

func (o CosmosDbSettingsPtrOutput) Elem() CosmosDbSettingsOutput {
	return o.ApplyT(func(v *CosmosDbSettings) CosmosDbSettings {
		if v != nil {
			return *v
		}
		var ret CosmosDbSettings
		return ret
	}).(CosmosDbSettingsOutput)
}

// The throughput of the collections in cosmosdb database
func (o CosmosDbSettingsPtrOutput) CollectionsThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CosmosDbSettings) *int {
		if v == nil {
			return nil
		}
		return v.CollectionsThroughput
	}).(pulumi.IntPtrOutput)
}

type CosmosDbSettingsResponse struct {
	// The throughput of the collections in cosmosdb database
	CollectionsThroughput *int `pulumi:"collectionsThroughput"`
}

// CosmosDbSettingsResponseInput is an input type that accepts CosmosDbSettingsResponseArgs and CosmosDbSettingsResponseOutput values.
// You can construct a concrete instance of `CosmosDbSettingsResponseInput` via:
//
//          CosmosDbSettingsResponseArgs{...}
type CosmosDbSettingsResponseInput interface {
	pulumi.Input

	ToCosmosDbSettingsResponseOutput() CosmosDbSettingsResponseOutput
	ToCosmosDbSettingsResponseOutputWithContext(context.Context) CosmosDbSettingsResponseOutput
}

type CosmosDbSettingsResponseArgs struct {
	// The throughput of the collections in cosmosdb database
	CollectionsThroughput pulumi.IntPtrInput `pulumi:"collectionsThroughput"`
}

func (CosmosDbSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosmosDbSettingsResponse)(nil)).Elem()
}

func (i CosmosDbSettingsResponseArgs) ToCosmosDbSettingsResponseOutput() CosmosDbSettingsResponseOutput {
	return i.ToCosmosDbSettingsResponseOutputWithContext(context.Background())
}

func (i CosmosDbSettingsResponseArgs) ToCosmosDbSettingsResponseOutputWithContext(ctx context.Context) CosmosDbSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosmosDbSettingsResponseOutput)
}

func (i CosmosDbSettingsResponseArgs) ToCosmosDbSettingsResponsePtrOutput() CosmosDbSettingsResponsePtrOutput {
	return i.ToCosmosDbSettingsResponsePtrOutputWithContext(context.Background())
}

func (i CosmosDbSettingsResponseArgs) ToCosmosDbSettingsResponsePtrOutputWithContext(ctx context.Context) CosmosDbSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosmosDbSettingsResponseOutput).ToCosmosDbSettingsResponsePtrOutputWithContext(ctx)
}

// CosmosDbSettingsResponsePtrInput is an input type that accepts CosmosDbSettingsResponseArgs, CosmosDbSettingsResponsePtr and CosmosDbSettingsResponsePtrOutput values.
// You can construct a concrete instance of `CosmosDbSettingsResponsePtrInput` via:
//
//          CosmosDbSettingsResponseArgs{...}
//
//  or:
//
//          nil
type CosmosDbSettingsResponsePtrInput interface {
	pulumi.Input

	ToCosmosDbSettingsResponsePtrOutput() CosmosDbSettingsResponsePtrOutput
	ToCosmosDbSettingsResponsePtrOutputWithContext(context.Context) CosmosDbSettingsResponsePtrOutput
}

type cosmosDbSettingsResponsePtrType CosmosDbSettingsResponseArgs

func CosmosDbSettingsResponsePtr(v *CosmosDbSettingsResponseArgs) CosmosDbSettingsResponsePtrInput {
	return (*cosmosDbSettingsResponsePtrType)(v)
}

func (*cosmosDbSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CosmosDbSettingsResponse)(nil)).Elem()
}

func (i *cosmosDbSettingsResponsePtrType) ToCosmosDbSettingsResponsePtrOutput() CosmosDbSettingsResponsePtrOutput {
	return i.ToCosmosDbSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *cosmosDbSettingsResponsePtrType) ToCosmosDbSettingsResponsePtrOutputWithContext(ctx context.Context) CosmosDbSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosmosDbSettingsResponsePtrOutput)
}

type CosmosDbSettingsResponseOutput struct{ *pulumi.OutputState }

func (CosmosDbSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosmosDbSettingsResponse)(nil)).Elem()
}

func (o CosmosDbSettingsResponseOutput) ToCosmosDbSettingsResponseOutput() CosmosDbSettingsResponseOutput {
	return o
}

func (o CosmosDbSettingsResponseOutput) ToCosmosDbSettingsResponseOutputWithContext(ctx context.Context) CosmosDbSettingsResponseOutput {
	return o
}

func (o CosmosDbSettingsResponseOutput) ToCosmosDbSettingsResponsePtrOutput() CosmosDbSettingsResponsePtrOutput {
	return o.ToCosmosDbSettingsResponsePtrOutputWithContext(context.Background())
}

func (o CosmosDbSettingsResponseOutput) ToCosmosDbSettingsResponsePtrOutputWithContext(ctx context.Context) CosmosDbSettingsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CosmosDbSettingsResponse) *CosmosDbSettingsResponse {
		return &v
	}).(CosmosDbSettingsResponsePtrOutput)
}

// The throughput of the collections in cosmosdb database
func (o CosmosDbSettingsResponseOutput) CollectionsThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CosmosDbSettingsResponse) *int { return v.CollectionsThroughput }).(pulumi.IntPtrOutput)
}

type CosmosDbSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (CosmosDbSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CosmosDbSettingsResponse)(nil)).Elem()
}

func (o CosmosDbSettingsResponsePtrOutput) ToCosmosDbSettingsResponsePtrOutput() CosmosDbSettingsResponsePtrOutput {
	return o
}

func (o CosmosDbSettingsResponsePtrOutput) ToCosmosDbSettingsResponsePtrOutputWithContext(ctx context.Context) CosmosDbSettingsResponsePtrOutput {
	return o
}

func (o CosmosDbSettingsResponsePtrOutput) Elem() CosmosDbSettingsResponseOutput {
	return o.ApplyT(func(v *CosmosDbSettingsResponse) CosmosDbSettingsResponse {
		if v != nil {
			return *v
		}
		var ret CosmosDbSettingsResponse
		return ret
	}).(CosmosDbSettingsResponseOutput)
}

// The throughput of the collections in cosmosdb database
func (o CosmosDbSettingsResponsePtrOutput) CollectionsThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CosmosDbSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.CollectionsThroughput
	}).(pulumi.IntPtrOutput)
}

type CreateServiceRequestEnvironmentImageRequest struct {
	// The list of assets.
	Assets []ImageAsset `pulumi:"assets"`
	// The name of the driver file.
	DriverProgram *string `pulumi:"driverProgram"`
	// The details of the AZURE ML environment.
	Environment *EnvironmentImageRequestEnvironment `pulumi:"environment"`
	// The unique identifying details of the AZURE ML environment.
	EnvironmentReference *EnvironmentImageRequestEnvironmentReference `pulumi:"environmentReference"`
	// The list of model Ids.
	ModelIds []string `pulumi:"modelIds"`
	// The list of models.
	Models []Model `pulumi:"models"`
}

// CreateServiceRequestEnvironmentImageRequestInput is an input type that accepts CreateServiceRequestEnvironmentImageRequestArgs and CreateServiceRequestEnvironmentImageRequestOutput values.
// You can construct a concrete instance of `CreateServiceRequestEnvironmentImageRequestInput` via:
//
//          CreateServiceRequestEnvironmentImageRequestArgs{...}
type CreateServiceRequestEnvironmentImageRequestInput interface {
	pulumi.Input

	ToCreateServiceRequestEnvironmentImageRequestOutput() CreateServiceRequestEnvironmentImageRequestOutput
	ToCreateServiceRequestEnvironmentImageRequestOutputWithContext(context.Context) CreateServiceRequestEnvironmentImageRequestOutput
}

type CreateServiceRequestEnvironmentImageRequestArgs struct {
	// The list of assets.
	Assets ImageAssetArrayInput `pulumi:"assets"`
	// The name of the driver file.
	DriverProgram pulumi.StringPtrInput `pulumi:"driverProgram"`
	// The details of the AZURE ML environment.
	Environment EnvironmentImageRequestEnvironmentPtrInput `pulumi:"environment"`
	// The unique identifying details of the AZURE ML environment.
	EnvironmentReference EnvironmentImageRequestEnvironmentReferencePtrInput `pulumi:"environmentReference"`
	// The list of model Ids.
	ModelIds pulumi.StringArrayInput `pulumi:"modelIds"`
	// The list of models.
	Models ModelArrayInput `pulumi:"models"`
}

func (CreateServiceRequestEnvironmentImageRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateServiceRequestEnvironmentImageRequest)(nil)).Elem()
}

func (i CreateServiceRequestEnvironmentImageRequestArgs) ToCreateServiceRequestEnvironmentImageRequestOutput() CreateServiceRequestEnvironmentImageRequestOutput {
	return i.ToCreateServiceRequestEnvironmentImageRequestOutputWithContext(context.Background())
}

func (i CreateServiceRequestEnvironmentImageRequestArgs) ToCreateServiceRequestEnvironmentImageRequestOutputWithContext(ctx context.Context) CreateServiceRequestEnvironmentImageRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateServiceRequestEnvironmentImageRequestOutput)
}

func (i CreateServiceRequestEnvironmentImageRequestArgs) ToCreateServiceRequestEnvironmentImageRequestPtrOutput() CreateServiceRequestEnvironmentImageRequestPtrOutput {
	return i.ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (i CreateServiceRequestEnvironmentImageRequestArgs) ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) CreateServiceRequestEnvironmentImageRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateServiceRequestEnvironmentImageRequestOutput).ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(ctx)
}

// CreateServiceRequestEnvironmentImageRequestPtrInput is an input type that accepts CreateServiceRequestEnvironmentImageRequestArgs, CreateServiceRequestEnvironmentImageRequestPtr and CreateServiceRequestEnvironmentImageRequestPtrOutput values.
// You can construct a concrete instance of `CreateServiceRequestEnvironmentImageRequestPtrInput` via:
//
//          CreateServiceRequestEnvironmentImageRequestArgs{...}
//
//  or:
//
//          nil
type CreateServiceRequestEnvironmentImageRequestPtrInput interface {
	pulumi.Input

	ToCreateServiceRequestEnvironmentImageRequestPtrOutput() CreateServiceRequestEnvironmentImageRequestPtrOutput
	ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(context.Context) CreateServiceRequestEnvironmentImageRequestPtrOutput
}

type createServiceRequestEnvironmentImageRequestPtrType CreateServiceRequestEnvironmentImageRequestArgs

func CreateServiceRequestEnvironmentImageRequestPtr(v *CreateServiceRequestEnvironmentImageRequestArgs) CreateServiceRequestEnvironmentImageRequestPtrInput {
	return (*createServiceRequestEnvironmentImageRequestPtrType)(v)
}

func (*createServiceRequestEnvironmentImageRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateServiceRequestEnvironmentImageRequest)(nil)).Elem()
}

func (i *createServiceRequestEnvironmentImageRequestPtrType) ToCreateServiceRequestEnvironmentImageRequestPtrOutput() CreateServiceRequestEnvironmentImageRequestPtrOutput {
	return i.ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (i *createServiceRequestEnvironmentImageRequestPtrType) ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) CreateServiceRequestEnvironmentImageRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateServiceRequestEnvironmentImageRequestPtrOutput)
}

type CreateServiceRequestEnvironmentImageRequestOutput struct{ *pulumi.OutputState }

func (CreateServiceRequestEnvironmentImageRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateServiceRequestEnvironmentImageRequest)(nil)).Elem()
}

func (o CreateServiceRequestEnvironmentImageRequestOutput) ToCreateServiceRequestEnvironmentImageRequestOutput() CreateServiceRequestEnvironmentImageRequestOutput {
	return o
}

func (o CreateServiceRequestEnvironmentImageRequestOutput) ToCreateServiceRequestEnvironmentImageRequestOutputWithContext(ctx context.Context) CreateServiceRequestEnvironmentImageRequestOutput {
	return o
}

func (o CreateServiceRequestEnvironmentImageRequestOutput) ToCreateServiceRequestEnvironmentImageRequestPtrOutput() CreateServiceRequestEnvironmentImageRequestPtrOutput {
	return o.ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (o CreateServiceRequestEnvironmentImageRequestOutput) ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) CreateServiceRequestEnvironmentImageRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CreateServiceRequestEnvironmentImageRequest) *CreateServiceRequestEnvironmentImageRequest {
		return &v
	}).(CreateServiceRequestEnvironmentImageRequestPtrOutput)
}

// The list of assets.
func (o CreateServiceRequestEnvironmentImageRequestOutput) Assets() ImageAssetArrayOutput {
	return o.ApplyT(func(v CreateServiceRequestEnvironmentImageRequest) []ImageAsset { return v.Assets }).(ImageAssetArrayOutput)
}

// The name of the driver file.
func (o CreateServiceRequestEnvironmentImageRequestOutput) DriverProgram() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreateServiceRequestEnvironmentImageRequest) *string { return v.DriverProgram }).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
func (o CreateServiceRequestEnvironmentImageRequestOutput) Environment() EnvironmentImageRequestEnvironmentPtrOutput {
	return o.ApplyT(func(v CreateServiceRequestEnvironmentImageRequest) *EnvironmentImageRequestEnvironment {
		return v.Environment
	}).(EnvironmentImageRequestEnvironmentPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
func (o CreateServiceRequestEnvironmentImageRequestOutput) EnvironmentReference() EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v CreateServiceRequestEnvironmentImageRequest) *EnvironmentImageRequestEnvironmentReference {
		return v.EnvironmentReference
	}).(EnvironmentImageRequestEnvironmentReferencePtrOutput)
}

// The list of model Ids.
func (o CreateServiceRequestEnvironmentImageRequestOutput) ModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CreateServiceRequestEnvironmentImageRequest) []string { return v.ModelIds }).(pulumi.StringArrayOutput)
}

// The list of models.
func (o CreateServiceRequestEnvironmentImageRequestOutput) Models() ModelArrayOutput {
	return o.ApplyT(func(v CreateServiceRequestEnvironmentImageRequest) []Model { return v.Models }).(ModelArrayOutput)
}

type CreateServiceRequestEnvironmentImageRequestPtrOutput struct{ *pulumi.OutputState }

func (CreateServiceRequestEnvironmentImageRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateServiceRequestEnvironmentImageRequest)(nil)).Elem()
}

func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) ToCreateServiceRequestEnvironmentImageRequestPtrOutput() CreateServiceRequestEnvironmentImageRequestPtrOutput {
	return o
}

func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) CreateServiceRequestEnvironmentImageRequestPtrOutput {
	return o
}

func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) Elem() CreateServiceRequestEnvironmentImageRequestOutput {
	return o.ApplyT(func(v *CreateServiceRequestEnvironmentImageRequest) CreateServiceRequestEnvironmentImageRequest {
		if v != nil {
			return *v
		}
		var ret CreateServiceRequestEnvironmentImageRequest
		return ret
	}).(CreateServiceRequestEnvironmentImageRequestOutput)
}

// The list of assets.
func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) Assets() ImageAssetArrayOutput {
	return o.ApplyT(func(v *CreateServiceRequestEnvironmentImageRequest) []ImageAsset {
		if v == nil {
			return nil
		}
		return v.Assets
	}).(ImageAssetArrayOutput)
}

// The name of the driver file.
func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) DriverProgram() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CreateServiceRequestEnvironmentImageRequest) *string {
		if v == nil {
			return nil
		}
		return v.DriverProgram
	}).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) Environment() EnvironmentImageRequestEnvironmentPtrOutput {
	return o.ApplyT(func(v *CreateServiceRequestEnvironmentImageRequest) *EnvironmentImageRequestEnvironment {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(EnvironmentImageRequestEnvironmentPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) EnvironmentReference() EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v *CreateServiceRequestEnvironmentImageRequest) *EnvironmentImageRequestEnvironmentReference {
		if v == nil {
			return nil
		}
		return v.EnvironmentReference
	}).(EnvironmentImageRequestEnvironmentReferencePtrOutput)
}

// The list of model Ids.
func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) ModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CreateServiceRequestEnvironmentImageRequest) []string {
		if v == nil {
			return nil
		}
		return v.ModelIds
	}).(pulumi.StringArrayOutput)
}

// The list of models.
func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) Models() ModelArrayOutput {
	return o.ApplyT(func(v *CreateServiceRequestEnvironmentImageRequest) []Model {
		if v == nil {
			return nil
		}
		return v.Models
	}).(ModelArrayOutput)
}

type CreateServiceRequestKeys struct {
	// The primary key.
	PrimaryKey *string `pulumi:"primaryKey"`
	// The secondary key.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

// CreateServiceRequestKeysInput is an input type that accepts CreateServiceRequestKeysArgs and CreateServiceRequestKeysOutput values.
// You can construct a concrete instance of `CreateServiceRequestKeysInput` via:
//
//          CreateServiceRequestKeysArgs{...}
type CreateServiceRequestKeysInput interface {
	pulumi.Input

	ToCreateServiceRequestKeysOutput() CreateServiceRequestKeysOutput
	ToCreateServiceRequestKeysOutputWithContext(context.Context) CreateServiceRequestKeysOutput
}

type CreateServiceRequestKeysArgs struct {
	// The primary key.
	PrimaryKey pulumi.StringPtrInput `pulumi:"primaryKey"`
	// The secondary key.
	SecondaryKey pulumi.StringPtrInput `pulumi:"secondaryKey"`
}

func (CreateServiceRequestKeysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateServiceRequestKeys)(nil)).Elem()
}

func (i CreateServiceRequestKeysArgs) ToCreateServiceRequestKeysOutput() CreateServiceRequestKeysOutput {
	return i.ToCreateServiceRequestKeysOutputWithContext(context.Background())
}

func (i CreateServiceRequestKeysArgs) ToCreateServiceRequestKeysOutputWithContext(ctx context.Context) CreateServiceRequestKeysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateServiceRequestKeysOutput)
}

func (i CreateServiceRequestKeysArgs) ToCreateServiceRequestKeysPtrOutput() CreateServiceRequestKeysPtrOutput {
	return i.ToCreateServiceRequestKeysPtrOutputWithContext(context.Background())
}

func (i CreateServiceRequestKeysArgs) ToCreateServiceRequestKeysPtrOutputWithContext(ctx context.Context) CreateServiceRequestKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateServiceRequestKeysOutput).ToCreateServiceRequestKeysPtrOutputWithContext(ctx)
}

// CreateServiceRequestKeysPtrInput is an input type that accepts CreateServiceRequestKeysArgs, CreateServiceRequestKeysPtr and CreateServiceRequestKeysPtrOutput values.
// You can construct a concrete instance of `CreateServiceRequestKeysPtrInput` via:
//
//          CreateServiceRequestKeysArgs{...}
//
//  or:
//
//          nil
type CreateServiceRequestKeysPtrInput interface {
	pulumi.Input

	ToCreateServiceRequestKeysPtrOutput() CreateServiceRequestKeysPtrOutput
	ToCreateServiceRequestKeysPtrOutputWithContext(context.Context) CreateServiceRequestKeysPtrOutput
}

type createServiceRequestKeysPtrType CreateServiceRequestKeysArgs

func CreateServiceRequestKeysPtr(v *CreateServiceRequestKeysArgs) CreateServiceRequestKeysPtrInput {
	return (*createServiceRequestKeysPtrType)(v)
}

func (*createServiceRequestKeysPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateServiceRequestKeys)(nil)).Elem()
}

func (i *createServiceRequestKeysPtrType) ToCreateServiceRequestKeysPtrOutput() CreateServiceRequestKeysPtrOutput {
	return i.ToCreateServiceRequestKeysPtrOutputWithContext(context.Background())
}

func (i *createServiceRequestKeysPtrType) ToCreateServiceRequestKeysPtrOutputWithContext(ctx context.Context) CreateServiceRequestKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateServiceRequestKeysPtrOutput)
}

type CreateServiceRequestKeysOutput struct{ *pulumi.OutputState }

func (CreateServiceRequestKeysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateServiceRequestKeys)(nil)).Elem()
}

func (o CreateServiceRequestKeysOutput) ToCreateServiceRequestKeysOutput() CreateServiceRequestKeysOutput {
	return o
}

func (o CreateServiceRequestKeysOutput) ToCreateServiceRequestKeysOutputWithContext(ctx context.Context) CreateServiceRequestKeysOutput {
	return o
}

func (o CreateServiceRequestKeysOutput) ToCreateServiceRequestKeysPtrOutput() CreateServiceRequestKeysPtrOutput {
	return o.ToCreateServiceRequestKeysPtrOutputWithContext(context.Background())
}

func (o CreateServiceRequestKeysOutput) ToCreateServiceRequestKeysPtrOutputWithContext(ctx context.Context) CreateServiceRequestKeysPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CreateServiceRequestKeys) *CreateServiceRequestKeys {
		return &v
	}).(CreateServiceRequestKeysPtrOutput)
}

// The primary key.
func (o CreateServiceRequestKeysOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreateServiceRequestKeys) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// The secondary key.
func (o CreateServiceRequestKeysOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreateServiceRequestKeys) *string { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

type CreateServiceRequestKeysPtrOutput struct{ *pulumi.OutputState }

func (CreateServiceRequestKeysPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateServiceRequestKeys)(nil)).Elem()
}

func (o CreateServiceRequestKeysPtrOutput) ToCreateServiceRequestKeysPtrOutput() CreateServiceRequestKeysPtrOutput {
	return o
}

func (o CreateServiceRequestKeysPtrOutput) ToCreateServiceRequestKeysPtrOutputWithContext(ctx context.Context) CreateServiceRequestKeysPtrOutput {
	return o
}

func (o CreateServiceRequestKeysPtrOutput) Elem() CreateServiceRequestKeysOutput {
	return o.ApplyT(func(v *CreateServiceRequestKeys) CreateServiceRequestKeys {
		if v != nil {
			return *v
		}
		var ret CreateServiceRequestKeys
		return ret
	}).(CreateServiceRequestKeysOutput)
}

// The primary key.
func (o CreateServiceRequestKeysPtrOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CreateServiceRequestKeys) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryKey
	}).(pulumi.StringPtrOutput)
}

// The secondary key.
func (o CreateServiceRequestKeysPtrOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CreateServiceRequestKeys) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryKey
	}).(pulumi.StringPtrOutput)
}

type DataContainerType struct {
	// The asset description text.
	Description *string `pulumi:"description"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// DataContainerTypeInput is an input type that accepts DataContainerTypeArgs and DataContainerTypeOutput values.
// You can construct a concrete instance of `DataContainerTypeInput` via:
//
//          DataContainerTypeArgs{...}
type DataContainerTypeInput interface {
	pulumi.Input

	ToDataContainerTypeOutput() DataContainerTypeOutput
	ToDataContainerTypeOutputWithContext(context.Context) DataContainerTypeOutput
}

type DataContainerTypeArgs struct {
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (DataContainerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataContainerType)(nil)).Elem()
}

func (i DataContainerTypeArgs) ToDataContainerTypeOutput() DataContainerTypeOutput {
	return i.ToDataContainerTypeOutputWithContext(context.Background())
}

func (i DataContainerTypeArgs) ToDataContainerTypeOutputWithContext(ctx context.Context) DataContainerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataContainerTypeOutput)
}

func (i DataContainerTypeArgs) ToDataContainerTypePtrOutput() DataContainerTypePtrOutput {
	return i.ToDataContainerTypePtrOutputWithContext(context.Background())
}

func (i DataContainerTypeArgs) ToDataContainerTypePtrOutputWithContext(ctx context.Context) DataContainerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataContainerTypeOutput).ToDataContainerTypePtrOutputWithContext(ctx)
}

// DataContainerTypePtrInput is an input type that accepts DataContainerTypeArgs, DataContainerTypePtr and DataContainerTypePtrOutput values.
// You can construct a concrete instance of `DataContainerTypePtrInput` via:
//
//          DataContainerTypeArgs{...}
//
//  or:
//
//          nil
type DataContainerTypePtrInput interface {
	pulumi.Input

	ToDataContainerTypePtrOutput() DataContainerTypePtrOutput
	ToDataContainerTypePtrOutputWithContext(context.Context) DataContainerTypePtrOutput
}

type dataContainerTypePtrType DataContainerTypeArgs

func DataContainerTypePtr(v *DataContainerTypeArgs) DataContainerTypePtrInput {
	return (*dataContainerTypePtrType)(v)
}

func (*dataContainerTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataContainerType)(nil)).Elem()
}

func (i *dataContainerTypePtrType) ToDataContainerTypePtrOutput() DataContainerTypePtrOutput {
	return i.ToDataContainerTypePtrOutputWithContext(context.Background())
}

func (i *dataContainerTypePtrType) ToDataContainerTypePtrOutputWithContext(ctx context.Context) DataContainerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataContainerTypePtrOutput)
}

type DataContainerTypeOutput struct{ *pulumi.OutputState }

func (DataContainerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataContainerType)(nil)).Elem()
}

func (o DataContainerTypeOutput) ToDataContainerTypeOutput() DataContainerTypeOutput {
	return o
}

func (o DataContainerTypeOutput) ToDataContainerTypeOutputWithContext(ctx context.Context) DataContainerTypeOutput {
	return o
}

func (o DataContainerTypeOutput) ToDataContainerTypePtrOutput() DataContainerTypePtrOutput {
	return o.ToDataContainerTypePtrOutputWithContext(context.Background())
}

func (o DataContainerTypeOutput) ToDataContainerTypePtrOutputWithContext(ctx context.Context) DataContainerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataContainerType) *DataContainerType {
		return &v
	}).(DataContainerTypePtrOutput)
}

// The asset description text.
func (o DataContainerTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataContainerType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o DataContainerTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataContainerType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o DataContainerTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataContainerType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type DataContainerTypePtrOutput struct{ *pulumi.OutputState }

func (DataContainerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataContainerType)(nil)).Elem()
}

func (o DataContainerTypePtrOutput) ToDataContainerTypePtrOutput() DataContainerTypePtrOutput {
	return o
}

func (o DataContainerTypePtrOutput) ToDataContainerTypePtrOutputWithContext(ctx context.Context) DataContainerTypePtrOutput {
	return o
}

func (o DataContainerTypePtrOutput) Elem() DataContainerTypeOutput {
	return o.ApplyT(func(v *DataContainerType) DataContainerType {
		if v != nil {
			return *v
		}
		var ret DataContainerType
		return ret
	}).(DataContainerTypeOutput)
}

// The asset description text.
func (o DataContainerTypePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataContainerType) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o DataContainerTypePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataContainerType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o DataContainerTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataContainerType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type DataContainerResponse struct {
	// The asset description text.
	Description *string `pulumi:"description"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// DataContainerResponseInput is an input type that accepts DataContainerResponseArgs and DataContainerResponseOutput values.
// You can construct a concrete instance of `DataContainerResponseInput` via:
//
//          DataContainerResponseArgs{...}
type DataContainerResponseInput interface {
	pulumi.Input

	ToDataContainerResponseOutput() DataContainerResponseOutput
	ToDataContainerResponseOutputWithContext(context.Context) DataContainerResponseOutput
}

type DataContainerResponseArgs struct {
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (DataContainerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataContainerResponse)(nil)).Elem()
}

func (i DataContainerResponseArgs) ToDataContainerResponseOutput() DataContainerResponseOutput {
	return i.ToDataContainerResponseOutputWithContext(context.Background())
}

func (i DataContainerResponseArgs) ToDataContainerResponseOutputWithContext(ctx context.Context) DataContainerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataContainerResponseOutput)
}

func (i DataContainerResponseArgs) ToDataContainerResponsePtrOutput() DataContainerResponsePtrOutput {
	return i.ToDataContainerResponsePtrOutputWithContext(context.Background())
}

func (i DataContainerResponseArgs) ToDataContainerResponsePtrOutputWithContext(ctx context.Context) DataContainerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataContainerResponseOutput).ToDataContainerResponsePtrOutputWithContext(ctx)
}

// DataContainerResponsePtrInput is an input type that accepts DataContainerResponseArgs, DataContainerResponsePtr and DataContainerResponsePtrOutput values.
// You can construct a concrete instance of `DataContainerResponsePtrInput` via:
//
//          DataContainerResponseArgs{...}
//
//  or:
//
//          nil
type DataContainerResponsePtrInput interface {
	pulumi.Input

	ToDataContainerResponsePtrOutput() DataContainerResponsePtrOutput
	ToDataContainerResponsePtrOutputWithContext(context.Context) DataContainerResponsePtrOutput
}

type dataContainerResponsePtrType DataContainerResponseArgs

func DataContainerResponsePtr(v *DataContainerResponseArgs) DataContainerResponsePtrInput {
	return (*dataContainerResponsePtrType)(v)
}

func (*dataContainerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataContainerResponse)(nil)).Elem()
}

func (i *dataContainerResponsePtrType) ToDataContainerResponsePtrOutput() DataContainerResponsePtrOutput {
	return i.ToDataContainerResponsePtrOutputWithContext(context.Background())
}

func (i *dataContainerResponsePtrType) ToDataContainerResponsePtrOutputWithContext(ctx context.Context) DataContainerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataContainerResponsePtrOutput)
}

type DataContainerResponseOutput struct{ *pulumi.OutputState }

func (DataContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataContainerResponse)(nil)).Elem()
}

func (o DataContainerResponseOutput) ToDataContainerResponseOutput() DataContainerResponseOutput {
	return o
}

func (o DataContainerResponseOutput) ToDataContainerResponseOutputWithContext(ctx context.Context) DataContainerResponseOutput {
	return o
}

func (o DataContainerResponseOutput) ToDataContainerResponsePtrOutput() DataContainerResponsePtrOutput {
	return o.ToDataContainerResponsePtrOutputWithContext(context.Background())
}

func (o DataContainerResponseOutput) ToDataContainerResponsePtrOutputWithContext(ctx context.Context) DataContainerResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataContainerResponse) *DataContainerResponse {
		return &v
	}).(DataContainerResponsePtrOutput)
}

// The asset description text.
func (o DataContainerResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataContainerResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o DataContainerResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataContainerResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o DataContainerResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataContainerResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type DataContainerResponsePtrOutput struct{ *pulumi.OutputState }

func (DataContainerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataContainerResponse)(nil)).Elem()
}

func (o DataContainerResponsePtrOutput) ToDataContainerResponsePtrOutput() DataContainerResponsePtrOutput {
	return o
}

func (o DataContainerResponsePtrOutput) ToDataContainerResponsePtrOutputWithContext(ctx context.Context) DataContainerResponsePtrOutput {
	return o
}

func (o DataContainerResponsePtrOutput) Elem() DataContainerResponseOutput {
	return o.ApplyT(func(v *DataContainerResponse) DataContainerResponse {
		if v != nil {
			return *v
		}
		var ret DataContainerResponse
		return ret
	}).(DataContainerResponseOutput)
}

// The asset description text.
func (o DataContainerResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataContainerResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o DataContainerResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataContainerResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o DataContainerResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataContainerResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type DataFactory struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataFactory'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DataFactoryInput is an input type that accepts DataFactoryArgs and DataFactoryOutput values.
// You can construct a concrete instance of `DataFactoryInput` via:
//
//          DataFactoryArgs{...}
type DataFactoryInput interface {
	pulumi.Input

	ToDataFactoryOutput() DataFactoryOutput
	ToDataFactoryOutputWithContext(context.Context) DataFactoryOutput
}

type DataFactoryArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataFactory'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DataFactoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFactory)(nil)).Elem()
}

func (i DataFactoryArgs) ToDataFactoryOutput() DataFactoryOutput {
	return i.ToDataFactoryOutputWithContext(context.Background())
}

func (i DataFactoryArgs) ToDataFactoryOutputWithContext(ctx context.Context) DataFactoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFactoryOutput)
}

type DataFactoryOutput struct{ *pulumi.OutputState }

func (DataFactoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFactory)(nil)).Elem()
}

func (o DataFactoryOutput) ToDataFactoryOutput() DataFactoryOutput {
	return o
}

func (o DataFactoryOutput) ToDataFactoryOutputWithContext(ctx context.Context) DataFactoryOutput {
	return o
}

// Location for the underlying compute
func (o DataFactoryOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactory) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'DataFactory'.
func (o DataFactoryOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataFactory) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DataFactoryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactory) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// ARM resource id of the underlying compute
func (o DataFactoryOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactory) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type DataFactoryResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataFactory'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DataFactoryResponseInput is an input type that accepts DataFactoryResponseArgs and DataFactoryResponseOutput values.
// You can construct a concrete instance of `DataFactoryResponseInput` via:
//
//          DataFactoryResponseArgs{...}
type DataFactoryResponseInput interface {
	pulumi.Input

	ToDataFactoryResponseOutput() DataFactoryResponseOutput
	ToDataFactoryResponseOutputWithContext(context.Context) DataFactoryResponseOutput
}

type DataFactoryResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataFactory'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DataFactoryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFactoryResponse)(nil)).Elem()
}

func (i DataFactoryResponseArgs) ToDataFactoryResponseOutput() DataFactoryResponseOutput {
	return i.ToDataFactoryResponseOutputWithContext(context.Background())
}

func (i DataFactoryResponseArgs) ToDataFactoryResponseOutputWithContext(ctx context.Context) DataFactoryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFactoryResponseOutput)
}

type DataFactoryResponseOutput struct{ *pulumi.OutputState }

func (DataFactoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFactoryResponse)(nil)).Elem()
}

func (o DataFactoryResponseOutput) ToDataFactoryResponseOutput() DataFactoryResponseOutput {
	return o
}

func (o DataFactoryResponseOutput) ToDataFactoryResponseOutputWithContext(ctx context.Context) DataFactoryResponseOutput {
	return o
}

// Location for the underlying compute
func (o DataFactoryResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactoryResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'DataFactory'.
func (o DataFactoryResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataFactoryResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DataFactoryResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactoryResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o DataFactoryResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v DataFactoryResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// Errors during provisioning
func (o DataFactoryResponseOutput) ProvisioningErrors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v DataFactoryResponse) []MachineLearningServiceErrorResponse { return v.ProvisioningErrors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o DataFactoryResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DataFactoryResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o DataFactoryResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactoryResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type DataLakeAnalytics struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataLakeAnalytics'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string                      `pulumi:"description"`
	Properties  *DataLakeAnalyticsProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DataLakeAnalyticsInput is an input type that accepts DataLakeAnalyticsArgs and DataLakeAnalyticsOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsInput` via:
//
//          DataLakeAnalyticsArgs{...}
type DataLakeAnalyticsInput interface {
	pulumi.Input

	ToDataLakeAnalyticsOutput() DataLakeAnalyticsOutput
	ToDataLakeAnalyticsOutputWithContext(context.Context) DataLakeAnalyticsOutput
}

type DataLakeAnalyticsArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataLakeAnalytics'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput               `pulumi:"description"`
	Properties  DataLakeAnalyticsPropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DataLakeAnalyticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalytics)(nil)).Elem()
}

func (i DataLakeAnalyticsArgs) ToDataLakeAnalyticsOutput() DataLakeAnalyticsOutput {
	return i.ToDataLakeAnalyticsOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsArgs) ToDataLakeAnalyticsOutputWithContext(ctx context.Context) DataLakeAnalyticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsOutput)
}

type DataLakeAnalyticsOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalytics)(nil)).Elem()
}

func (o DataLakeAnalyticsOutput) ToDataLakeAnalyticsOutput() DataLakeAnalyticsOutput {
	return o
}

func (o DataLakeAnalyticsOutput) ToDataLakeAnalyticsOutputWithContext(ctx context.Context) DataLakeAnalyticsOutput {
	return o
}

// Location for the underlying compute
func (o DataLakeAnalyticsOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalytics) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'DataLakeAnalytics'.
func (o DataLakeAnalyticsOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalytics) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DataLakeAnalyticsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalytics) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DataLakeAnalyticsOutput) Properties() DataLakeAnalyticsPropertiesPtrOutput {
	return o.ApplyT(func(v DataLakeAnalytics) *DataLakeAnalyticsProperties { return v.Properties }).(DataLakeAnalyticsPropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o DataLakeAnalyticsOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalytics) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type DataLakeAnalyticsProperties struct {
	// DataLake Store Account Name
	DataLakeStoreAccountName *string `pulumi:"dataLakeStoreAccountName"`
}

// DataLakeAnalyticsPropertiesInput is an input type that accepts DataLakeAnalyticsPropertiesArgs and DataLakeAnalyticsPropertiesOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsPropertiesInput` via:
//
//          DataLakeAnalyticsPropertiesArgs{...}
type DataLakeAnalyticsPropertiesInput interface {
	pulumi.Input

	ToDataLakeAnalyticsPropertiesOutput() DataLakeAnalyticsPropertiesOutput
	ToDataLakeAnalyticsPropertiesOutputWithContext(context.Context) DataLakeAnalyticsPropertiesOutput
}

type DataLakeAnalyticsPropertiesArgs struct {
	// DataLake Store Account Name
	DataLakeStoreAccountName pulumi.StringPtrInput `pulumi:"dataLakeStoreAccountName"`
}

func (DataLakeAnalyticsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsProperties)(nil)).Elem()
}

func (i DataLakeAnalyticsPropertiesArgs) ToDataLakeAnalyticsPropertiesOutput() DataLakeAnalyticsPropertiesOutput {
	return i.ToDataLakeAnalyticsPropertiesOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsPropertiesArgs) ToDataLakeAnalyticsPropertiesOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsPropertiesOutput)
}

func (i DataLakeAnalyticsPropertiesArgs) ToDataLakeAnalyticsPropertiesPtrOutput() DataLakeAnalyticsPropertiesPtrOutput {
	return i.ToDataLakeAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsPropertiesArgs) ToDataLakeAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsPropertiesOutput).ToDataLakeAnalyticsPropertiesPtrOutputWithContext(ctx)
}

// DataLakeAnalyticsPropertiesPtrInput is an input type that accepts DataLakeAnalyticsPropertiesArgs, DataLakeAnalyticsPropertiesPtr and DataLakeAnalyticsPropertiesPtrOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsPropertiesPtrInput` via:
//
//          DataLakeAnalyticsPropertiesArgs{...}
//
//  or:
//
//          nil
type DataLakeAnalyticsPropertiesPtrInput interface {
	pulumi.Input

	ToDataLakeAnalyticsPropertiesPtrOutput() DataLakeAnalyticsPropertiesPtrOutput
	ToDataLakeAnalyticsPropertiesPtrOutputWithContext(context.Context) DataLakeAnalyticsPropertiesPtrOutput
}

type dataLakeAnalyticsPropertiesPtrType DataLakeAnalyticsPropertiesArgs

func DataLakeAnalyticsPropertiesPtr(v *DataLakeAnalyticsPropertiesArgs) DataLakeAnalyticsPropertiesPtrInput {
	return (*dataLakeAnalyticsPropertiesPtrType)(v)
}

func (*dataLakeAnalyticsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAnalyticsProperties)(nil)).Elem()
}

func (i *dataLakeAnalyticsPropertiesPtrType) ToDataLakeAnalyticsPropertiesPtrOutput() DataLakeAnalyticsPropertiesPtrOutput {
	return i.ToDataLakeAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (i *dataLakeAnalyticsPropertiesPtrType) ToDataLakeAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsPropertiesPtrOutput)
}

type DataLakeAnalyticsPropertiesOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsProperties)(nil)).Elem()
}

func (o DataLakeAnalyticsPropertiesOutput) ToDataLakeAnalyticsPropertiesOutput() DataLakeAnalyticsPropertiesOutput {
	return o
}

func (o DataLakeAnalyticsPropertiesOutput) ToDataLakeAnalyticsPropertiesOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesOutput {
	return o
}

func (o DataLakeAnalyticsPropertiesOutput) ToDataLakeAnalyticsPropertiesPtrOutput() DataLakeAnalyticsPropertiesPtrOutput {
	return o.ToDataLakeAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (o DataLakeAnalyticsPropertiesOutput) ToDataLakeAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeAnalyticsProperties) *DataLakeAnalyticsProperties {
		return &v
	}).(DataLakeAnalyticsPropertiesPtrOutput)
}

// DataLake Store Account Name
func (o DataLakeAnalyticsPropertiesOutput) DataLakeStoreAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsProperties) *string { return v.DataLakeStoreAccountName }).(pulumi.StringPtrOutput)
}

type DataLakeAnalyticsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAnalyticsProperties)(nil)).Elem()
}

func (o DataLakeAnalyticsPropertiesPtrOutput) ToDataLakeAnalyticsPropertiesPtrOutput() DataLakeAnalyticsPropertiesPtrOutput {
	return o
}

func (o DataLakeAnalyticsPropertiesPtrOutput) ToDataLakeAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesPtrOutput {
	return o
}

func (o DataLakeAnalyticsPropertiesPtrOutput) Elem() DataLakeAnalyticsPropertiesOutput {
	return o.ApplyT(func(v *DataLakeAnalyticsProperties) DataLakeAnalyticsProperties {
		if v != nil {
			return *v
		}
		var ret DataLakeAnalyticsProperties
		return ret
	}).(DataLakeAnalyticsPropertiesOutput)
}

// DataLake Store Account Name
func (o DataLakeAnalyticsPropertiesPtrOutput) DataLakeStoreAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAnalyticsProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataLakeStoreAccountName
	}).(pulumi.StringPtrOutput)
}

type DataLakeAnalyticsResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataLakeAnalytics'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool                                 `pulumi:"isAttachedCompute"`
	Properties        *DataLakeAnalyticsResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DataLakeAnalyticsResponseInput is an input type that accepts DataLakeAnalyticsResponseArgs and DataLakeAnalyticsResponseOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsResponseInput` via:
//
//          DataLakeAnalyticsResponseArgs{...}
type DataLakeAnalyticsResponseInput interface {
	pulumi.Input

	ToDataLakeAnalyticsResponseOutput() DataLakeAnalyticsResponseOutput
	ToDataLakeAnalyticsResponseOutputWithContext(context.Context) DataLakeAnalyticsResponseOutput
}

type DataLakeAnalyticsResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataLakeAnalytics'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput                            `pulumi:"isAttachedCompute"`
	Properties        DataLakeAnalyticsResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DataLakeAnalyticsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsResponse)(nil)).Elem()
}

func (i DataLakeAnalyticsResponseArgs) ToDataLakeAnalyticsResponseOutput() DataLakeAnalyticsResponseOutput {
	return i.ToDataLakeAnalyticsResponseOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsResponseArgs) ToDataLakeAnalyticsResponseOutputWithContext(ctx context.Context) DataLakeAnalyticsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsResponseOutput)
}

type DataLakeAnalyticsResponseOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsResponse)(nil)).Elem()
}

func (o DataLakeAnalyticsResponseOutput) ToDataLakeAnalyticsResponseOutput() DataLakeAnalyticsResponseOutput {
	return o
}

func (o DataLakeAnalyticsResponseOutput) ToDataLakeAnalyticsResponseOutputWithContext(ctx context.Context) DataLakeAnalyticsResponseOutput {
	return o
}

// Location for the underlying compute
func (o DataLakeAnalyticsResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'DataLakeAnalytics'.
func (o DataLakeAnalyticsResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DataLakeAnalyticsResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o DataLakeAnalyticsResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

func (o DataLakeAnalyticsResponseOutput) Properties() DataLakeAnalyticsResponsePropertiesPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) *DataLakeAnalyticsResponseProperties { return v.Properties }).(DataLakeAnalyticsResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o DataLakeAnalyticsResponseOutput) ProvisioningErrors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) []MachineLearningServiceErrorResponse { return v.ProvisioningErrors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o DataLakeAnalyticsResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o DataLakeAnalyticsResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type DataLakeAnalyticsResponseProperties struct {
	// DataLake Store Account Name
	DataLakeStoreAccountName *string `pulumi:"dataLakeStoreAccountName"`
}

// DataLakeAnalyticsResponsePropertiesInput is an input type that accepts DataLakeAnalyticsResponsePropertiesArgs and DataLakeAnalyticsResponsePropertiesOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsResponsePropertiesInput` via:
//
//          DataLakeAnalyticsResponsePropertiesArgs{...}
type DataLakeAnalyticsResponsePropertiesInput interface {
	pulumi.Input

	ToDataLakeAnalyticsResponsePropertiesOutput() DataLakeAnalyticsResponsePropertiesOutput
	ToDataLakeAnalyticsResponsePropertiesOutputWithContext(context.Context) DataLakeAnalyticsResponsePropertiesOutput
}

type DataLakeAnalyticsResponsePropertiesArgs struct {
	// DataLake Store Account Name
	DataLakeStoreAccountName pulumi.StringPtrInput `pulumi:"dataLakeStoreAccountName"`
}

func (DataLakeAnalyticsResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsResponseProperties)(nil)).Elem()
}

func (i DataLakeAnalyticsResponsePropertiesArgs) ToDataLakeAnalyticsResponsePropertiesOutput() DataLakeAnalyticsResponsePropertiesOutput {
	return i.ToDataLakeAnalyticsResponsePropertiesOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsResponsePropertiesArgs) ToDataLakeAnalyticsResponsePropertiesOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsResponsePropertiesOutput)
}

func (i DataLakeAnalyticsResponsePropertiesArgs) ToDataLakeAnalyticsResponsePropertiesPtrOutput() DataLakeAnalyticsResponsePropertiesPtrOutput {
	return i.ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsResponsePropertiesArgs) ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsResponsePropertiesOutput).ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(ctx)
}

// DataLakeAnalyticsResponsePropertiesPtrInput is an input type that accepts DataLakeAnalyticsResponsePropertiesArgs, DataLakeAnalyticsResponsePropertiesPtr and DataLakeAnalyticsResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsResponsePropertiesPtrInput` via:
//
//          DataLakeAnalyticsResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type DataLakeAnalyticsResponsePropertiesPtrInput interface {
	pulumi.Input

	ToDataLakeAnalyticsResponsePropertiesPtrOutput() DataLakeAnalyticsResponsePropertiesPtrOutput
	ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(context.Context) DataLakeAnalyticsResponsePropertiesPtrOutput
}

type dataLakeAnalyticsResponsePropertiesPtrType DataLakeAnalyticsResponsePropertiesArgs

func DataLakeAnalyticsResponsePropertiesPtr(v *DataLakeAnalyticsResponsePropertiesArgs) DataLakeAnalyticsResponsePropertiesPtrInput {
	return (*dataLakeAnalyticsResponsePropertiesPtrType)(v)
}

func (*dataLakeAnalyticsResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAnalyticsResponseProperties)(nil)).Elem()
}

func (i *dataLakeAnalyticsResponsePropertiesPtrType) ToDataLakeAnalyticsResponsePropertiesPtrOutput() DataLakeAnalyticsResponsePropertiesPtrOutput {
	return i.ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *dataLakeAnalyticsResponsePropertiesPtrType) ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsResponsePropertiesPtrOutput)
}

type DataLakeAnalyticsResponsePropertiesOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsResponseProperties)(nil)).Elem()
}

func (o DataLakeAnalyticsResponsePropertiesOutput) ToDataLakeAnalyticsResponsePropertiesOutput() DataLakeAnalyticsResponsePropertiesOutput {
	return o
}

func (o DataLakeAnalyticsResponsePropertiesOutput) ToDataLakeAnalyticsResponsePropertiesOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesOutput {
	return o
}

func (o DataLakeAnalyticsResponsePropertiesOutput) ToDataLakeAnalyticsResponsePropertiesPtrOutput() DataLakeAnalyticsResponsePropertiesPtrOutput {
	return o.ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o DataLakeAnalyticsResponsePropertiesOutput) ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeAnalyticsResponseProperties) *DataLakeAnalyticsResponseProperties {
		return &v
	}).(DataLakeAnalyticsResponsePropertiesPtrOutput)
}

// DataLake Store Account Name
func (o DataLakeAnalyticsResponsePropertiesOutput) DataLakeStoreAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponseProperties) *string { return v.DataLakeStoreAccountName }).(pulumi.StringPtrOutput)
}

type DataLakeAnalyticsResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAnalyticsResponseProperties)(nil)).Elem()
}

func (o DataLakeAnalyticsResponsePropertiesPtrOutput) ToDataLakeAnalyticsResponsePropertiesPtrOutput() DataLakeAnalyticsResponsePropertiesPtrOutput {
	return o
}

func (o DataLakeAnalyticsResponsePropertiesPtrOutput) ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesPtrOutput {
	return o
}

func (o DataLakeAnalyticsResponsePropertiesPtrOutput) Elem() DataLakeAnalyticsResponsePropertiesOutput {
	return o.ApplyT(func(v *DataLakeAnalyticsResponseProperties) DataLakeAnalyticsResponseProperties {
		if v != nil {
			return *v
		}
		var ret DataLakeAnalyticsResponseProperties
		return ret
	}).(DataLakeAnalyticsResponsePropertiesOutput)
}

// DataLake Store Account Name
func (o DataLakeAnalyticsResponsePropertiesPtrOutput) DataLakeStoreAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAnalyticsResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataLakeStoreAccountName
	}).(pulumi.StringPtrOutput)
}

type DataPathAssetReference struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId *string `pulumi:"datastoreId"`
	// The path of the file/directory in the datastore.
	Path *string `pulumi:"path"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'DataPath'.
	ReferenceType string `pulumi:"referenceType"`
}

// DataPathAssetReferenceInput is an input type that accepts DataPathAssetReferenceArgs and DataPathAssetReferenceOutput values.
// You can construct a concrete instance of `DataPathAssetReferenceInput` via:
//
//          DataPathAssetReferenceArgs{...}
type DataPathAssetReferenceInput interface {
	pulumi.Input

	ToDataPathAssetReferenceOutput() DataPathAssetReferenceOutput
	ToDataPathAssetReferenceOutputWithContext(context.Context) DataPathAssetReferenceOutput
}

type DataPathAssetReferenceArgs struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	// The path of the file/directory in the datastore.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'DataPath'.
	ReferenceType pulumi.StringInput `pulumi:"referenceType"`
}

func (DataPathAssetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPathAssetReference)(nil)).Elem()
}

func (i DataPathAssetReferenceArgs) ToDataPathAssetReferenceOutput() DataPathAssetReferenceOutput {
	return i.ToDataPathAssetReferenceOutputWithContext(context.Background())
}

func (i DataPathAssetReferenceArgs) ToDataPathAssetReferenceOutputWithContext(ctx context.Context) DataPathAssetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataPathAssetReferenceOutput)
}

type DataPathAssetReferenceOutput struct{ *pulumi.OutputState }

func (DataPathAssetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPathAssetReference)(nil)).Elem()
}

func (o DataPathAssetReferenceOutput) ToDataPathAssetReferenceOutput() DataPathAssetReferenceOutput {
	return o
}

func (o DataPathAssetReferenceOutput) ToDataPathAssetReferenceOutputWithContext(ctx context.Context) DataPathAssetReferenceOutput {
	return o
}

// ARM resource ID of the datastore where the asset is located.
func (o DataPathAssetReferenceOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataPathAssetReference) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The path of the file/directory in the datastore.
func (o DataPathAssetReferenceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataPathAssetReference) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'DataPath'.
func (o DataPathAssetReferenceOutput) ReferenceType() pulumi.StringOutput {
	return o.ApplyT(func(v DataPathAssetReference) string { return v.ReferenceType }).(pulumi.StringOutput)
}

type DataPathAssetReferenceResponse struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId *string `pulumi:"datastoreId"`
	// The path of the file/directory in the datastore.
	Path *string `pulumi:"path"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'DataPath'.
	ReferenceType string `pulumi:"referenceType"`
}

// DataPathAssetReferenceResponseInput is an input type that accepts DataPathAssetReferenceResponseArgs and DataPathAssetReferenceResponseOutput values.
// You can construct a concrete instance of `DataPathAssetReferenceResponseInput` via:
//
//          DataPathAssetReferenceResponseArgs{...}
type DataPathAssetReferenceResponseInput interface {
	pulumi.Input

	ToDataPathAssetReferenceResponseOutput() DataPathAssetReferenceResponseOutput
	ToDataPathAssetReferenceResponseOutputWithContext(context.Context) DataPathAssetReferenceResponseOutput
}

type DataPathAssetReferenceResponseArgs struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	// The path of the file/directory in the datastore.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'DataPath'.
	ReferenceType pulumi.StringInput `pulumi:"referenceType"`
}

func (DataPathAssetReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPathAssetReferenceResponse)(nil)).Elem()
}

func (i DataPathAssetReferenceResponseArgs) ToDataPathAssetReferenceResponseOutput() DataPathAssetReferenceResponseOutput {
	return i.ToDataPathAssetReferenceResponseOutputWithContext(context.Background())
}

func (i DataPathAssetReferenceResponseArgs) ToDataPathAssetReferenceResponseOutputWithContext(ctx context.Context) DataPathAssetReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataPathAssetReferenceResponseOutput)
}

type DataPathAssetReferenceResponseOutput struct{ *pulumi.OutputState }

func (DataPathAssetReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPathAssetReferenceResponse)(nil)).Elem()
}

func (o DataPathAssetReferenceResponseOutput) ToDataPathAssetReferenceResponseOutput() DataPathAssetReferenceResponseOutput {
	return o
}

func (o DataPathAssetReferenceResponseOutput) ToDataPathAssetReferenceResponseOutputWithContext(ctx context.Context) DataPathAssetReferenceResponseOutput {
	return o
}

// ARM resource ID of the datastore where the asset is located.
func (o DataPathAssetReferenceResponseOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataPathAssetReferenceResponse) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The path of the file/directory in the datastore.
func (o DataPathAssetReferenceResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataPathAssetReferenceResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'DataPath'.
func (o DataPathAssetReferenceResponseOutput) ReferenceType() pulumi.StringOutput {
	return o.ApplyT(func(v DataPathAssetReferenceResponse) string { return v.ReferenceType }).(pulumi.StringOutput)
}

type DataVersionType struct {
	// The Format of dataset.
	DatasetType *string `pulumi:"datasetType"`
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId *string `pulumi:"datastoreId"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// The path of the file/directory in the datastore.
	Path string `pulumi:"path"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// DataVersionTypeInput is an input type that accepts DataVersionTypeArgs and DataVersionTypeOutput values.
// You can construct a concrete instance of `DataVersionTypeInput` via:
//
//          DataVersionTypeArgs{...}
type DataVersionTypeInput interface {
	pulumi.Input

	ToDataVersionTypeOutput() DataVersionTypeOutput
	ToDataVersionTypeOutputWithContext(context.Context) DataVersionTypeOutput
}

type DataVersionTypeArgs struct {
	// The Format of dataset.
	DatasetType pulumi.StringPtrInput `pulumi:"datasetType"`
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous pulumi.BoolPtrInput `pulumi:"isAnonymous"`
	// The path of the file/directory in the datastore.
	Path pulumi.StringInput `pulumi:"path"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (DataVersionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataVersionType)(nil)).Elem()
}

func (i DataVersionTypeArgs) ToDataVersionTypeOutput() DataVersionTypeOutput {
	return i.ToDataVersionTypeOutputWithContext(context.Background())
}

func (i DataVersionTypeArgs) ToDataVersionTypeOutputWithContext(ctx context.Context) DataVersionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataVersionTypeOutput)
}

func (i DataVersionTypeArgs) ToDataVersionTypePtrOutput() DataVersionTypePtrOutput {
	return i.ToDataVersionTypePtrOutputWithContext(context.Background())
}

func (i DataVersionTypeArgs) ToDataVersionTypePtrOutputWithContext(ctx context.Context) DataVersionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataVersionTypeOutput).ToDataVersionTypePtrOutputWithContext(ctx)
}

// DataVersionTypePtrInput is an input type that accepts DataVersionTypeArgs, DataVersionTypePtr and DataVersionTypePtrOutput values.
// You can construct a concrete instance of `DataVersionTypePtrInput` via:
//
//          DataVersionTypeArgs{...}
//
//  or:
//
//          nil
type DataVersionTypePtrInput interface {
	pulumi.Input

	ToDataVersionTypePtrOutput() DataVersionTypePtrOutput
	ToDataVersionTypePtrOutputWithContext(context.Context) DataVersionTypePtrOutput
}

type dataVersionTypePtrType DataVersionTypeArgs

func DataVersionTypePtr(v *DataVersionTypeArgs) DataVersionTypePtrInput {
	return (*dataVersionTypePtrType)(v)
}

func (*dataVersionTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataVersionType)(nil)).Elem()
}

func (i *dataVersionTypePtrType) ToDataVersionTypePtrOutput() DataVersionTypePtrOutput {
	return i.ToDataVersionTypePtrOutputWithContext(context.Background())
}

func (i *dataVersionTypePtrType) ToDataVersionTypePtrOutputWithContext(ctx context.Context) DataVersionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataVersionTypePtrOutput)
}

type DataVersionTypeOutput struct{ *pulumi.OutputState }

func (DataVersionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataVersionType)(nil)).Elem()
}

func (o DataVersionTypeOutput) ToDataVersionTypeOutput() DataVersionTypeOutput {
	return o
}

func (o DataVersionTypeOutput) ToDataVersionTypeOutputWithContext(ctx context.Context) DataVersionTypeOutput {
	return o
}

func (o DataVersionTypeOutput) ToDataVersionTypePtrOutput() DataVersionTypePtrOutput {
	return o.ToDataVersionTypePtrOutputWithContext(context.Background())
}

func (o DataVersionTypeOutput) ToDataVersionTypePtrOutputWithContext(ctx context.Context) DataVersionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataVersionType) *DataVersionType {
		return &v
	}).(DataVersionTypePtrOutput)
}

// The Format of dataset.
func (o DataVersionTypeOutput) DatasetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataVersionType) *string { return v.DatasetType }).(pulumi.StringPtrOutput)
}

// ARM resource ID of the datastore where the asset is located.
func (o DataVersionTypeOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataVersionType) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o DataVersionTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataVersionType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o DataVersionTypeOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataVersionType) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// The path of the file/directory in the datastore.
func (o DataVersionTypeOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v DataVersionType) string { return v.Path }).(pulumi.StringOutput)
}

// The asset property dictionary.
func (o DataVersionTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataVersionType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o DataVersionTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataVersionType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type DataVersionTypePtrOutput struct{ *pulumi.OutputState }

func (DataVersionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataVersionType)(nil)).Elem()
}

func (o DataVersionTypePtrOutput) ToDataVersionTypePtrOutput() DataVersionTypePtrOutput {
	return o
}

func (o DataVersionTypePtrOutput) ToDataVersionTypePtrOutputWithContext(ctx context.Context) DataVersionTypePtrOutput {
	return o
}

func (o DataVersionTypePtrOutput) Elem() DataVersionTypeOutput {
	return o.ApplyT(func(v *DataVersionType) DataVersionType {
		if v != nil {
			return *v
		}
		var ret DataVersionType
		return ret
	}).(DataVersionTypeOutput)
}

// The Format of dataset.
func (o DataVersionTypePtrOutput) DatasetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataVersionType) *string {
		if v == nil {
			return nil
		}
		return v.DatasetType
	}).(pulumi.StringPtrOutput)
}

// ARM resource ID of the datastore where the asset is located.
func (o DataVersionTypePtrOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataVersionType) *string {
		if v == nil {
			return nil
		}
		return v.DatastoreId
	}).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o DataVersionTypePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataVersionType) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o DataVersionTypePtrOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataVersionType) *bool {
		if v == nil {
			return nil
		}
		return v.IsAnonymous
	}).(pulumi.BoolPtrOutput)
}

// The path of the file/directory in the datastore.
func (o DataVersionTypePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataVersionType) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o DataVersionTypePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataVersionType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o DataVersionTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataVersionType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type DataVersionResponse struct {
	// The Format of dataset.
	DatasetType *string `pulumi:"datasetType"`
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId *string `pulumi:"datastoreId"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// The path of the file/directory in the datastore.
	Path string `pulumi:"path"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// DataVersionResponseInput is an input type that accepts DataVersionResponseArgs and DataVersionResponseOutput values.
// You can construct a concrete instance of `DataVersionResponseInput` via:
//
//          DataVersionResponseArgs{...}
type DataVersionResponseInput interface {
	pulumi.Input

	ToDataVersionResponseOutput() DataVersionResponseOutput
	ToDataVersionResponseOutputWithContext(context.Context) DataVersionResponseOutput
}

type DataVersionResponseArgs struct {
	// The Format of dataset.
	DatasetType pulumi.StringPtrInput `pulumi:"datasetType"`
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous pulumi.BoolPtrInput `pulumi:"isAnonymous"`
	// The path of the file/directory in the datastore.
	Path pulumi.StringInput `pulumi:"path"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (DataVersionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataVersionResponse)(nil)).Elem()
}

func (i DataVersionResponseArgs) ToDataVersionResponseOutput() DataVersionResponseOutput {
	return i.ToDataVersionResponseOutputWithContext(context.Background())
}

func (i DataVersionResponseArgs) ToDataVersionResponseOutputWithContext(ctx context.Context) DataVersionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataVersionResponseOutput)
}

func (i DataVersionResponseArgs) ToDataVersionResponsePtrOutput() DataVersionResponsePtrOutput {
	return i.ToDataVersionResponsePtrOutputWithContext(context.Background())
}

func (i DataVersionResponseArgs) ToDataVersionResponsePtrOutputWithContext(ctx context.Context) DataVersionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataVersionResponseOutput).ToDataVersionResponsePtrOutputWithContext(ctx)
}

// DataVersionResponsePtrInput is an input type that accepts DataVersionResponseArgs, DataVersionResponsePtr and DataVersionResponsePtrOutput values.
// You can construct a concrete instance of `DataVersionResponsePtrInput` via:
//
//          DataVersionResponseArgs{...}
//
//  or:
//
//          nil
type DataVersionResponsePtrInput interface {
	pulumi.Input

	ToDataVersionResponsePtrOutput() DataVersionResponsePtrOutput
	ToDataVersionResponsePtrOutputWithContext(context.Context) DataVersionResponsePtrOutput
}

type dataVersionResponsePtrType DataVersionResponseArgs

func DataVersionResponsePtr(v *DataVersionResponseArgs) DataVersionResponsePtrInput {
	return (*dataVersionResponsePtrType)(v)
}

func (*dataVersionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataVersionResponse)(nil)).Elem()
}

func (i *dataVersionResponsePtrType) ToDataVersionResponsePtrOutput() DataVersionResponsePtrOutput {
	return i.ToDataVersionResponsePtrOutputWithContext(context.Background())
}

func (i *dataVersionResponsePtrType) ToDataVersionResponsePtrOutputWithContext(ctx context.Context) DataVersionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataVersionResponsePtrOutput)
}

type DataVersionResponseOutput struct{ *pulumi.OutputState }

func (DataVersionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataVersionResponse)(nil)).Elem()
}

func (o DataVersionResponseOutput) ToDataVersionResponseOutput() DataVersionResponseOutput {
	return o
}

func (o DataVersionResponseOutput) ToDataVersionResponseOutputWithContext(ctx context.Context) DataVersionResponseOutput {
	return o
}

func (o DataVersionResponseOutput) ToDataVersionResponsePtrOutput() DataVersionResponsePtrOutput {
	return o.ToDataVersionResponsePtrOutputWithContext(context.Background())
}

func (o DataVersionResponseOutput) ToDataVersionResponsePtrOutputWithContext(ctx context.Context) DataVersionResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataVersionResponse) *DataVersionResponse {
		return &v
	}).(DataVersionResponsePtrOutput)
}

// The Format of dataset.
func (o DataVersionResponseOutput) DatasetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataVersionResponse) *string { return v.DatasetType }).(pulumi.StringPtrOutput)
}

// ARM resource ID of the datastore where the asset is located.
func (o DataVersionResponseOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataVersionResponse) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o DataVersionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataVersionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o DataVersionResponseOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataVersionResponse) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// The path of the file/directory in the datastore.
func (o DataVersionResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v DataVersionResponse) string { return v.Path }).(pulumi.StringOutput)
}

// The asset property dictionary.
func (o DataVersionResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataVersionResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o DataVersionResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataVersionResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type DataVersionResponsePtrOutput struct{ *pulumi.OutputState }

func (DataVersionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataVersionResponse)(nil)).Elem()
}

func (o DataVersionResponsePtrOutput) ToDataVersionResponsePtrOutput() DataVersionResponsePtrOutput {
	return o
}

func (o DataVersionResponsePtrOutput) ToDataVersionResponsePtrOutputWithContext(ctx context.Context) DataVersionResponsePtrOutput {
	return o
}

func (o DataVersionResponsePtrOutput) Elem() DataVersionResponseOutput {
	return o.ApplyT(func(v *DataVersionResponse) DataVersionResponse {
		if v != nil {
			return *v
		}
		var ret DataVersionResponse
		return ret
	}).(DataVersionResponseOutput)
}

// The Format of dataset.
func (o DataVersionResponsePtrOutput) DatasetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataVersionResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatasetType
	}).(pulumi.StringPtrOutput)
}

// ARM resource ID of the datastore where the asset is located.
func (o DataVersionResponsePtrOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataVersionResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatastoreId
	}).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o DataVersionResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataVersionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o DataVersionResponsePtrOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataVersionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsAnonymous
	}).(pulumi.BoolPtrOutput)
}

// The path of the file/directory in the datastore.
func (o DataVersionResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataVersionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o DataVersionResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataVersionResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o DataVersionResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataVersionResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type Databricks struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Databricks'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string               `pulumi:"description"`
	Properties  *DatabricksProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DatabricksInput is an input type that accepts DatabricksArgs and DatabricksOutput values.
// You can construct a concrete instance of `DatabricksInput` via:
//
//          DatabricksArgs{...}
type DatabricksInput interface {
	pulumi.Input

	ToDatabricksOutput() DatabricksOutput
	ToDatabricksOutputWithContext(context.Context) DatabricksOutput
}

type DatabricksArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Databricks'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput        `pulumi:"description"`
	Properties  DatabricksPropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DatabricksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Databricks)(nil)).Elem()
}

func (i DatabricksArgs) ToDatabricksOutput() DatabricksOutput {
	return i.ToDatabricksOutputWithContext(context.Background())
}

func (i DatabricksArgs) ToDatabricksOutputWithContext(ctx context.Context) DatabricksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksOutput)
}

type DatabricksOutput struct{ *pulumi.OutputState }

func (DatabricksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Databricks)(nil)).Elem()
}

func (o DatabricksOutput) ToDatabricksOutput() DatabricksOutput {
	return o
}

func (o DatabricksOutput) ToDatabricksOutputWithContext(ctx context.Context) DatabricksOutput {
	return o
}

// Location for the underlying compute
func (o DatabricksOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Databricks) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'Databricks'.
func (o DatabricksOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v Databricks) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DatabricksOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Databricks) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DatabricksOutput) Properties() DatabricksPropertiesPtrOutput {
	return o.ApplyT(func(v Databricks) *DatabricksProperties { return v.Properties }).(DatabricksPropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o DatabricksOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Databricks) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type DatabricksProperties struct {
	// Databricks access token
	DatabricksAccessToken *string `pulumi:"databricksAccessToken"`
	// Workspace Url
	WorkspaceUrl *string `pulumi:"workspaceUrl"`
}

// DatabricksPropertiesInput is an input type that accepts DatabricksPropertiesArgs and DatabricksPropertiesOutput values.
// You can construct a concrete instance of `DatabricksPropertiesInput` via:
//
//          DatabricksPropertiesArgs{...}
type DatabricksPropertiesInput interface {
	pulumi.Input

	ToDatabricksPropertiesOutput() DatabricksPropertiesOutput
	ToDatabricksPropertiesOutputWithContext(context.Context) DatabricksPropertiesOutput
}

type DatabricksPropertiesArgs struct {
	// Databricks access token
	DatabricksAccessToken pulumi.StringPtrInput `pulumi:"databricksAccessToken"`
	// Workspace Url
	WorkspaceUrl pulumi.StringPtrInput `pulumi:"workspaceUrl"`
}

func (DatabricksPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksProperties)(nil)).Elem()
}

func (i DatabricksPropertiesArgs) ToDatabricksPropertiesOutput() DatabricksPropertiesOutput {
	return i.ToDatabricksPropertiesOutputWithContext(context.Background())
}

func (i DatabricksPropertiesArgs) ToDatabricksPropertiesOutputWithContext(ctx context.Context) DatabricksPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksPropertiesOutput)
}

func (i DatabricksPropertiesArgs) ToDatabricksPropertiesPtrOutput() DatabricksPropertiesPtrOutput {
	return i.ToDatabricksPropertiesPtrOutputWithContext(context.Background())
}

func (i DatabricksPropertiesArgs) ToDatabricksPropertiesPtrOutputWithContext(ctx context.Context) DatabricksPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksPropertiesOutput).ToDatabricksPropertiesPtrOutputWithContext(ctx)
}

// DatabricksPropertiesPtrInput is an input type that accepts DatabricksPropertiesArgs, DatabricksPropertiesPtr and DatabricksPropertiesPtrOutput values.
// You can construct a concrete instance of `DatabricksPropertiesPtrInput` via:
//
//          DatabricksPropertiesArgs{...}
//
//  or:
//
//          nil
type DatabricksPropertiesPtrInput interface {
	pulumi.Input

	ToDatabricksPropertiesPtrOutput() DatabricksPropertiesPtrOutput
	ToDatabricksPropertiesPtrOutputWithContext(context.Context) DatabricksPropertiesPtrOutput
}

type databricksPropertiesPtrType DatabricksPropertiesArgs

func DatabricksPropertiesPtr(v *DatabricksPropertiesArgs) DatabricksPropertiesPtrInput {
	return (*databricksPropertiesPtrType)(v)
}

func (*databricksPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabricksProperties)(nil)).Elem()
}

func (i *databricksPropertiesPtrType) ToDatabricksPropertiesPtrOutput() DatabricksPropertiesPtrOutput {
	return i.ToDatabricksPropertiesPtrOutputWithContext(context.Background())
}

func (i *databricksPropertiesPtrType) ToDatabricksPropertiesPtrOutputWithContext(ctx context.Context) DatabricksPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksPropertiesPtrOutput)
}

type DatabricksPropertiesOutput struct{ *pulumi.OutputState }

func (DatabricksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksProperties)(nil)).Elem()
}

func (o DatabricksPropertiesOutput) ToDatabricksPropertiesOutput() DatabricksPropertiesOutput {
	return o
}

func (o DatabricksPropertiesOutput) ToDatabricksPropertiesOutputWithContext(ctx context.Context) DatabricksPropertiesOutput {
	return o
}

func (o DatabricksPropertiesOutput) ToDatabricksPropertiesPtrOutput() DatabricksPropertiesPtrOutput {
	return o.ToDatabricksPropertiesPtrOutputWithContext(context.Background())
}

func (o DatabricksPropertiesOutput) ToDatabricksPropertiesPtrOutputWithContext(ctx context.Context) DatabricksPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabricksProperties) *DatabricksProperties {
		return &v
	}).(DatabricksPropertiesPtrOutput)
}

// Databricks access token
func (o DatabricksPropertiesOutput) DatabricksAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksProperties) *string { return v.DatabricksAccessToken }).(pulumi.StringPtrOutput)
}

// Workspace Url
func (o DatabricksPropertiesOutput) WorkspaceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksProperties) *string { return v.WorkspaceUrl }).(pulumi.StringPtrOutput)
}

type DatabricksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DatabricksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabricksProperties)(nil)).Elem()
}

func (o DatabricksPropertiesPtrOutput) ToDatabricksPropertiesPtrOutput() DatabricksPropertiesPtrOutput {
	return o
}

func (o DatabricksPropertiesPtrOutput) ToDatabricksPropertiesPtrOutputWithContext(ctx context.Context) DatabricksPropertiesPtrOutput {
	return o
}

func (o DatabricksPropertiesPtrOutput) Elem() DatabricksPropertiesOutput {
	return o.ApplyT(func(v *DatabricksProperties) DatabricksProperties {
		if v != nil {
			return *v
		}
		var ret DatabricksProperties
		return ret
	}).(DatabricksPropertiesOutput)
}

// Databricks access token
func (o DatabricksPropertiesPtrOutput) DatabricksAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabricksProperties) *string {
		if v == nil {
			return nil
		}
		return v.DatabricksAccessToken
	}).(pulumi.StringPtrOutput)
}

// Workspace Url
func (o DatabricksPropertiesPtrOutput) WorkspaceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabricksProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceUrl
	}).(pulumi.StringPtrOutput)
}

type DatabricksResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Databricks'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool                          `pulumi:"isAttachedCompute"`
	Properties        *DatabricksResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DatabricksResponseInput is an input type that accepts DatabricksResponseArgs and DatabricksResponseOutput values.
// You can construct a concrete instance of `DatabricksResponseInput` via:
//
//          DatabricksResponseArgs{...}
type DatabricksResponseInput interface {
	pulumi.Input

	ToDatabricksResponseOutput() DatabricksResponseOutput
	ToDatabricksResponseOutputWithContext(context.Context) DatabricksResponseOutput
}

type DatabricksResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Databricks'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput                     `pulumi:"isAttachedCompute"`
	Properties        DatabricksResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DatabricksResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksResponse)(nil)).Elem()
}

func (i DatabricksResponseArgs) ToDatabricksResponseOutput() DatabricksResponseOutput {
	return i.ToDatabricksResponseOutputWithContext(context.Background())
}

func (i DatabricksResponseArgs) ToDatabricksResponseOutputWithContext(ctx context.Context) DatabricksResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksResponseOutput)
}

type DatabricksResponseOutput struct{ *pulumi.OutputState }

func (DatabricksResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksResponse)(nil)).Elem()
}

func (o DatabricksResponseOutput) ToDatabricksResponseOutput() DatabricksResponseOutput {
	return o
}

func (o DatabricksResponseOutput) ToDatabricksResponseOutputWithContext(ctx context.Context) DatabricksResponseOutput {
	return o
}

// Location for the underlying compute
func (o DatabricksResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'Databricks'.
func (o DatabricksResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DatabricksResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o DatabricksResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v DatabricksResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

func (o DatabricksResponseOutput) Properties() DatabricksResponsePropertiesPtrOutput {
	return o.ApplyT(func(v DatabricksResponse) *DatabricksResponseProperties { return v.Properties }).(DatabricksResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o DatabricksResponseOutput) ProvisioningErrors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v DatabricksResponse) []MachineLearningServiceErrorResponse { return v.ProvisioningErrors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o DatabricksResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o DatabricksResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type DatabricksResponseProperties struct {
	// Databricks access token
	DatabricksAccessToken *string `pulumi:"databricksAccessToken"`
	// Workspace Url
	WorkspaceUrl *string `pulumi:"workspaceUrl"`
}

// DatabricksResponsePropertiesInput is an input type that accepts DatabricksResponsePropertiesArgs and DatabricksResponsePropertiesOutput values.
// You can construct a concrete instance of `DatabricksResponsePropertiesInput` via:
//
//          DatabricksResponsePropertiesArgs{...}
type DatabricksResponsePropertiesInput interface {
	pulumi.Input

	ToDatabricksResponsePropertiesOutput() DatabricksResponsePropertiesOutput
	ToDatabricksResponsePropertiesOutputWithContext(context.Context) DatabricksResponsePropertiesOutput
}

type DatabricksResponsePropertiesArgs struct {
	// Databricks access token
	DatabricksAccessToken pulumi.StringPtrInput `pulumi:"databricksAccessToken"`
	// Workspace Url
	WorkspaceUrl pulumi.StringPtrInput `pulumi:"workspaceUrl"`
}

func (DatabricksResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksResponseProperties)(nil)).Elem()
}

func (i DatabricksResponsePropertiesArgs) ToDatabricksResponsePropertiesOutput() DatabricksResponsePropertiesOutput {
	return i.ToDatabricksResponsePropertiesOutputWithContext(context.Background())
}

func (i DatabricksResponsePropertiesArgs) ToDatabricksResponsePropertiesOutputWithContext(ctx context.Context) DatabricksResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksResponsePropertiesOutput)
}

func (i DatabricksResponsePropertiesArgs) ToDatabricksResponsePropertiesPtrOutput() DatabricksResponsePropertiesPtrOutput {
	return i.ToDatabricksResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i DatabricksResponsePropertiesArgs) ToDatabricksResponsePropertiesPtrOutputWithContext(ctx context.Context) DatabricksResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksResponsePropertiesOutput).ToDatabricksResponsePropertiesPtrOutputWithContext(ctx)
}

// DatabricksResponsePropertiesPtrInput is an input type that accepts DatabricksResponsePropertiesArgs, DatabricksResponsePropertiesPtr and DatabricksResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `DatabricksResponsePropertiesPtrInput` via:
//
//          DatabricksResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type DatabricksResponsePropertiesPtrInput interface {
	pulumi.Input

	ToDatabricksResponsePropertiesPtrOutput() DatabricksResponsePropertiesPtrOutput
	ToDatabricksResponsePropertiesPtrOutputWithContext(context.Context) DatabricksResponsePropertiesPtrOutput
}

type databricksResponsePropertiesPtrType DatabricksResponsePropertiesArgs

func DatabricksResponsePropertiesPtr(v *DatabricksResponsePropertiesArgs) DatabricksResponsePropertiesPtrInput {
	return (*databricksResponsePropertiesPtrType)(v)
}

func (*databricksResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabricksResponseProperties)(nil)).Elem()
}

func (i *databricksResponsePropertiesPtrType) ToDatabricksResponsePropertiesPtrOutput() DatabricksResponsePropertiesPtrOutput {
	return i.ToDatabricksResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *databricksResponsePropertiesPtrType) ToDatabricksResponsePropertiesPtrOutputWithContext(ctx context.Context) DatabricksResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksResponsePropertiesPtrOutput)
}

type DatabricksResponsePropertiesOutput struct{ *pulumi.OutputState }

func (DatabricksResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksResponseProperties)(nil)).Elem()
}

func (o DatabricksResponsePropertiesOutput) ToDatabricksResponsePropertiesOutput() DatabricksResponsePropertiesOutput {
	return o
}

func (o DatabricksResponsePropertiesOutput) ToDatabricksResponsePropertiesOutputWithContext(ctx context.Context) DatabricksResponsePropertiesOutput {
	return o
}

func (o DatabricksResponsePropertiesOutput) ToDatabricksResponsePropertiesPtrOutput() DatabricksResponsePropertiesPtrOutput {
	return o.ToDatabricksResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o DatabricksResponsePropertiesOutput) ToDatabricksResponsePropertiesPtrOutputWithContext(ctx context.Context) DatabricksResponsePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabricksResponseProperties) *DatabricksResponseProperties {
		return &v
	}).(DatabricksResponsePropertiesPtrOutput)
}

// Databricks access token
func (o DatabricksResponsePropertiesOutput) DatabricksAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksResponseProperties) *string { return v.DatabricksAccessToken }).(pulumi.StringPtrOutput)
}

// Workspace Url
func (o DatabricksResponsePropertiesOutput) WorkspaceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksResponseProperties) *string { return v.WorkspaceUrl }).(pulumi.StringPtrOutput)
}

type DatabricksResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DatabricksResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabricksResponseProperties)(nil)).Elem()
}

func (o DatabricksResponsePropertiesPtrOutput) ToDatabricksResponsePropertiesPtrOutput() DatabricksResponsePropertiesPtrOutput {
	return o
}

func (o DatabricksResponsePropertiesPtrOutput) ToDatabricksResponsePropertiesPtrOutputWithContext(ctx context.Context) DatabricksResponsePropertiesPtrOutput {
	return o
}

func (o DatabricksResponsePropertiesPtrOutput) Elem() DatabricksResponsePropertiesOutput {
	return o.ApplyT(func(v *DatabricksResponseProperties) DatabricksResponseProperties {
		if v != nil {
			return *v
		}
		var ret DatabricksResponseProperties
		return ret
	}).(DatabricksResponsePropertiesOutput)
}

// Databricks access token
func (o DatabricksResponsePropertiesPtrOutput) DatabricksAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabricksResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DatabricksAccessToken
	}).(pulumi.StringPtrOutput)
}

// Workspace Url
func (o DatabricksResponsePropertiesPtrOutput) WorkspaceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabricksResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceUrl
	}).(pulumi.StringPtrOutput)
}

type DatasetCreateRequestDataPath struct {
	// The datastore name.
	DatastoreName *string `pulumi:"datastoreName"`
	// Path within the datastore.
	RelativePath *string `pulumi:"relativePath"`
}

// DatasetCreateRequestDataPathInput is an input type that accepts DatasetCreateRequestDataPathArgs and DatasetCreateRequestDataPathOutput values.
// You can construct a concrete instance of `DatasetCreateRequestDataPathInput` via:
//
//          DatasetCreateRequestDataPathArgs{...}
type DatasetCreateRequestDataPathInput interface {
	pulumi.Input

	ToDatasetCreateRequestDataPathOutput() DatasetCreateRequestDataPathOutput
	ToDatasetCreateRequestDataPathOutputWithContext(context.Context) DatasetCreateRequestDataPathOutput
}

type DatasetCreateRequestDataPathArgs struct {
	// The datastore name.
	DatastoreName pulumi.StringPtrInput `pulumi:"datastoreName"`
	// Path within the datastore.
	RelativePath pulumi.StringPtrInput `pulumi:"relativePath"`
}

func (DatasetCreateRequestDataPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetCreateRequestDataPath)(nil)).Elem()
}

func (i DatasetCreateRequestDataPathArgs) ToDatasetCreateRequestDataPathOutput() DatasetCreateRequestDataPathOutput {
	return i.ToDatasetCreateRequestDataPathOutputWithContext(context.Background())
}

func (i DatasetCreateRequestDataPathArgs) ToDatasetCreateRequestDataPathOutputWithContext(ctx context.Context) DatasetCreateRequestDataPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestDataPathOutput)
}

func (i DatasetCreateRequestDataPathArgs) ToDatasetCreateRequestDataPathPtrOutput() DatasetCreateRequestDataPathPtrOutput {
	return i.ToDatasetCreateRequestDataPathPtrOutputWithContext(context.Background())
}

func (i DatasetCreateRequestDataPathArgs) ToDatasetCreateRequestDataPathPtrOutputWithContext(ctx context.Context) DatasetCreateRequestDataPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestDataPathOutput).ToDatasetCreateRequestDataPathPtrOutputWithContext(ctx)
}

// DatasetCreateRequestDataPathPtrInput is an input type that accepts DatasetCreateRequestDataPathArgs, DatasetCreateRequestDataPathPtr and DatasetCreateRequestDataPathPtrOutput values.
// You can construct a concrete instance of `DatasetCreateRequestDataPathPtrInput` via:
//
//          DatasetCreateRequestDataPathArgs{...}
//
//  or:
//
//          nil
type DatasetCreateRequestDataPathPtrInput interface {
	pulumi.Input

	ToDatasetCreateRequestDataPathPtrOutput() DatasetCreateRequestDataPathPtrOutput
	ToDatasetCreateRequestDataPathPtrOutputWithContext(context.Context) DatasetCreateRequestDataPathPtrOutput
}

type datasetCreateRequestDataPathPtrType DatasetCreateRequestDataPathArgs

func DatasetCreateRequestDataPathPtr(v *DatasetCreateRequestDataPathArgs) DatasetCreateRequestDataPathPtrInput {
	return (*datasetCreateRequestDataPathPtrType)(v)
}

func (*datasetCreateRequestDataPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetCreateRequestDataPath)(nil)).Elem()
}

func (i *datasetCreateRequestDataPathPtrType) ToDatasetCreateRequestDataPathPtrOutput() DatasetCreateRequestDataPathPtrOutput {
	return i.ToDatasetCreateRequestDataPathPtrOutputWithContext(context.Background())
}

func (i *datasetCreateRequestDataPathPtrType) ToDatasetCreateRequestDataPathPtrOutputWithContext(ctx context.Context) DatasetCreateRequestDataPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestDataPathPtrOutput)
}

type DatasetCreateRequestDataPathOutput struct{ *pulumi.OutputState }

func (DatasetCreateRequestDataPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetCreateRequestDataPath)(nil)).Elem()
}

func (o DatasetCreateRequestDataPathOutput) ToDatasetCreateRequestDataPathOutput() DatasetCreateRequestDataPathOutput {
	return o
}

func (o DatasetCreateRequestDataPathOutput) ToDatasetCreateRequestDataPathOutputWithContext(ctx context.Context) DatasetCreateRequestDataPathOutput {
	return o
}

func (o DatasetCreateRequestDataPathOutput) ToDatasetCreateRequestDataPathPtrOutput() DatasetCreateRequestDataPathPtrOutput {
	return o.ToDatasetCreateRequestDataPathPtrOutputWithContext(context.Background())
}

func (o DatasetCreateRequestDataPathOutput) ToDatasetCreateRequestDataPathPtrOutputWithContext(ctx context.Context) DatasetCreateRequestDataPathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetCreateRequestDataPath) *DatasetCreateRequestDataPath {
		return &v
	}).(DatasetCreateRequestDataPathPtrOutput)
}

// The datastore name.
func (o DatasetCreateRequestDataPathOutput) DatastoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetCreateRequestDataPath) *string { return v.DatastoreName }).(pulumi.StringPtrOutput)
}

// Path within the datastore.
func (o DatasetCreateRequestDataPathOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetCreateRequestDataPath) *string { return v.RelativePath }).(pulumi.StringPtrOutput)
}

type DatasetCreateRequestDataPathPtrOutput struct{ *pulumi.OutputState }

func (DatasetCreateRequestDataPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetCreateRequestDataPath)(nil)).Elem()
}

func (o DatasetCreateRequestDataPathPtrOutput) ToDatasetCreateRequestDataPathPtrOutput() DatasetCreateRequestDataPathPtrOutput {
	return o
}

func (o DatasetCreateRequestDataPathPtrOutput) ToDatasetCreateRequestDataPathPtrOutputWithContext(ctx context.Context) DatasetCreateRequestDataPathPtrOutput {
	return o
}

func (o DatasetCreateRequestDataPathPtrOutput) Elem() DatasetCreateRequestDataPathOutput {
	return o.ApplyT(func(v *DatasetCreateRequestDataPath) DatasetCreateRequestDataPath {
		if v != nil {
			return *v
		}
		var ret DatasetCreateRequestDataPath
		return ret
	}).(DatasetCreateRequestDataPathOutput)
}

// The datastore name.
func (o DatasetCreateRequestDataPathPtrOutput) DatastoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetCreateRequestDataPath) *string {
		if v == nil {
			return nil
		}
		return v.DatastoreName
	}).(pulumi.StringPtrOutput)
}

// Path within the datastore.
func (o DatasetCreateRequestDataPathPtrOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetCreateRequestDataPath) *string {
		if v == nil {
			return nil
		}
		return v.RelativePath
	}).(pulumi.StringPtrOutput)
}

type DatasetCreateRequestParameters struct {
	// Header type.
	Header *string `pulumi:"header"`
	// Boolean to keep path information as column in the dataset. Defaults to False. This is useful when reading multiple files, and want to know which file a particular record originated from, or to keep useful information in file path.
	IncludePath *bool `pulumi:"includePath"`
	// The partition information of each path will be extracted into columns based on the specified format. Format part '{column_name}' creates string column, and '{column_name:yyyy/MM/dd/HH/mm/ss}' creates datetime column, where 'yyyy', 'MM', 'dd', 'HH', 'mm' and 'ss' are used to extract year, month, day, hour, minute and second for the datetime type. The format should start from the position of first partition key until the end of file path. For example, given the path '../USA/2019/01/01/data.parquet' where the partition is by country/region and time, partition_format='/{CountryOrRegion}/{PartitionDate:yyyy/MM/dd}/data.csv' creates a string column 'CountryOrRegion' with the value 'USA' and a datetime column 'PartitionDate' with the value '2019-01-01
	PartitionFormat *string                    `pulumi:"partitionFormat"`
	Path            *DatasetCreateRequestPath  `pulumi:"path"`
	Query           *DatasetCreateRequestQuery `pulumi:"query"`
	// The separator used to split columns for 'delimited_files' sourceType.
	Separator *string `pulumi:"separator"`
	// Data source type.
	SourceType *string `pulumi:"sourceType"`
}

// DatasetCreateRequestParametersInput is an input type that accepts DatasetCreateRequestParametersArgs and DatasetCreateRequestParametersOutput values.
// You can construct a concrete instance of `DatasetCreateRequestParametersInput` via:
//
//          DatasetCreateRequestParametersArgs{...}
type DatasetCreateRequestParametersInput interface {
	pulumi.Input

	ToDatasetCreateRequestParametersOutput() DatasetCreateRequestParametersOutput
	ToDatasetCreateRequestParametersOutputWithContext(context.Context) DatasetCreateRequestParametersOutput
}

type DatasetCreateRequestParametersArgs struct {
	// Header type.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Boolean to keep path information as column in the dataset. Defaults to False. This is useful when reading multiple files, and want to know which file a particular record originated from, or to keep useful information in file path.
	IncludePath pulumi.BoolPtrInput `pulumi:"includePath"`
	// The partition information of each path will be extracted into columns based on the specified format. Format part '{column_name}' creates string column, and '{column_name:yyyy/MM/dd/HH/mm/ss}' creates datetime column, where 'yyyy', 'MM', 'dd', 'HH', 'mm' and 'ss' are used to extract year, month, day, hour, minute and second for the datetime type. The format should start from the position of first partition key until the end of file path. For example, given the path '../USA/2019/01/01/data.parquet' where the partition is by country/region and time, partition_format='/{CountryOrRegion}/{PartitionDate:yyyy/MM/dd}/data.csv' creates a string column 'CountryOrRegion' with the value 'USA' and a datetime column 'PartitionDate' with the value '2019-01-01
	PartitionFormat pulumi.StringPtrInput             `pulumi:"partitionFormat"`
	Path            DatasetCreateRequestPathPtrInput  `pulumi:"path"`
	Query           DatasetCreateRequestQueryPtrInput `pulumi:"query"`
	// The separator used to split columns for 'delimited_files' sourceType.
	Separator pulumi.StringPtrInput `pulumi:"separator"`
	// Data source type.
	SourceType pulumi.StringPtrInput `pulumi:"sourceType"`
}

func (DatasetCreateRequestParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetCreateRequestParameters)(nil)).Elem()
}

func (i DatasetCreateRequestParametersArgs) ToDatasetCreateRequestParametersOutput() DatasetCreateRequestParametersOutput {
	return i.ToDatasetCreateRequestParametersOutputWithContext(context.Background())
}

func (i DatasetCreateRequestParametersArgs) ToDatasetCreateRequestParametersOutputWithContext(ctx context.Context) DatasetCreateRequestParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestParametersOutput)
}

func (i DatasetCreateRequestParametersArgs) ToDatasetCreateRequestParametersPtrOutput() DatasetCreateRequestParametersPtrOutput {
	return i.ToDatasetCreateRequestParametersPtrOutputWithContext(context.Background())
}

func (i DatasetCreateRequestParametersArgs) ToDatasetCreateRequestParametersPtrOutputWithContext(ctx context.Context) DatasetCreateRequestParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestParametersOutput).ToDatasetCreateRequestParametersPtrOutputWithContext(ctx)
}

// DatasetCreateRequestParametersPtrInput is an input type that accepts DatasetCreateRequestParametersArgs, DatasetCreateRequestParametersPtr and DatasetCreateRequestParametersPtrOutput values.
// You can construct a concrete instance of `DatasetCreateRequestParametersPtrInput` via:
//
//          DatasetCreateRequestParametersArgs{...}
//
//  or:
//
//          nil
type DatasetCreateRequestParametersPtrInput interface {
	pulumi.Input

	ToDatasetCreateRequestParametersPtrOutput() DatasetCreateRequestParametersPtrOutput
	ToDatasetCreateRequestParametersPtrOutputWithContext(context.Context) DatasetCreateRequestParametersPtrOutput
}

type datasetCreateRequestParametersPtrType DatasetCreateRequestParametersArgs

func DatasetCreateRequestParametersPtr(v *DatasetCreateRequestParametersArgs) DatasetCreateRequestParametersPtrInput {
	return (*datasetCreateRequestParametersPtrType)(v)
}

func (*datasetCreateRequestParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetCreateRequestParameters)(nil)).Elem()
}

func (i *datasetCreateRequestParametersPtrType) ToDatasetCreateRequestParametersPtrOutput() DatasetCreateRequestParametersPtrOutput {
	return i.ToDatasetCreateRequestParametersPtrOutputWithContext(context.Background())
}

func (i *datasetCreateRequestParametersPtrType) ToDatasetCreateRequestParametersPtrOutputWithContext(ctx context.Context) DatasetCreateRequestParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestParametersPtrOutput)
}

type DatasetCreateRequestParametersOutput struct{ *pulumi.OutputState }

func (DatasetCreateRequestParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetCreateRequestParameters)(nil)).Elem()
}

func (o DatasetCreateRequestParametersOutput) ToDatasetCreateRequestParametersOutput() DatasetCreateRequestParametersOutput {
	return o
}

func (o DatasetCreateRequestParametersOutput) ToDatasetCreateRequestParametersOutputWithContext(ctx context.Context) DatasetCreateRequestParametersOutput {
	return o
}

func (o DatasetCreateRequestParametersOutput) ToDatasetCreateRequestParametersPtrOutput() DatasetCreateRequestParametersPtrOutput {
	return o.ToDatasetCreateRequestParametersPtrOutputWithContext(context.Background())
}

func (o DatasetCreateRequestParametersOutput) ToDatasetCreateRequestParametersPtrOutputWithContext(ctx context.Context) DatasetCreateRequestParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetCreateRequestParameters) *DatasetCreateRequestParameters {
		return &v
	}).(DatasetCreateRequestParametersPtrOutput)
}

// Header type.
func (o DatasetCreateRequestParametersOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetCreateRequestParameters) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Boolean to keep path information as column in the dataset. Defaults to False. This is useful when reading multiple files, and want to know which file a particular record originated from, or to keep useful information in file path.
func (o DatasetCreateRequestParametersOutput) IncludePath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetCreateRequestParameters) *bool { return v.IncludePath }).(pulumi.BoolPtrOutput)
}

// The partition information of each path will be extracted into columns based on the specified format. Format part '{column_name}' creates string column, and '{column_name:yyyy/MM/dd/HH/mm/ss}' creates datetime column, where 'yyyy', 'MM', 'dd', 'HH', 'mm' and 'ss' are used to extract year, month, day, hour, minute and second for the datetime type. The format should start from the position of first partition key until the end of file path. For example, given the path '../USA/2019/01/01/data.parquet' where the partition is by country/region and time, partition_format='/{CountryOrRegion}/{PartitionDate:yyyy/MM/dd}/data.csv' creates a string column 'CountryOrRegion' with the value 'USA' and a datetime column 'PartitionDate' with the value '2019-01-01
func (o DatasetCreateRequestParametersOutput) PartitionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetCreateRequestParameters) *string { return v.PartitionFormat }).(pulumi.StringPtrOutput)
}

func (o DatasetCreateRequestParametersOutput) Path() DatasetCreateRequestPathPtrOutput {
	return o.ApplyT(func(v DatasetCreateRequestParameters) *DatasetCreateRequestPath { return v.Path }).(DatasetCreateRequestPathPtrOutput)
}

func (o DatasetCreateRequestParametersOutput) Query() DatasetCreateRequestQueryPtrOutput {
	return o.ApplyT(func(v DatasetCreateRequestParameters) *DatasetCreateRequestQuery { return v.Query }).(DatasetCreateRequestQueryPtrOutput)
}

// The separator used to split columns for 'delimited_files' sourceType.
func (o DatasetCreateRequestParametersOutput) Separator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetCreateRequestParameters) *string { return v.Separator }).(pulumi.StringPtrOutput)
}

// Data source type.
func (o DatasetCreateRequestParametersOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetCreateRequestParameters) *string { return v.SourceType }).(pulumi.StringPtrOutput)
}

type DatasetCreateRequestParametersPtrOutput struct{ *pulumi.OutputState }

func (DatasetCreateRequestParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetCreateRequestParameters)(nil)).Elem()
}

func (o DatasetCreateRequestParametersPtrOutput) ToDatasetCreateRequestParametersPtrOutput() DatasetCreateRequestParametersPtrOutput {
	return o
}

func (o DatasetCreateRequestParametersPtrOutput) ToDatasetCreateRequestParametersPtrOutputWithContext(ctx context.Context) DatasetCreateRequestParametersPtrOutput {
	return o
}

func (o DatasetCreateRequestParametersPtrOutput) Elem() DatasetCreateRequestParametersOutput {
	return o.ApplyT(func(v *DatasetCreateRequestParameters) DatasetCreateRequestParameters {
		if v != nil {
			return *v
		}
		var ret DatasetCreateRequestParameters
		return ret
	}).(DatasetCreateRequestParametersOutput)
}

// Header type.
func (o DatasetCreateRequestParametersPtrOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetCreateRequestParameters) *string {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.StringPtrOutput)
}

// Boolean to keep path information as column in the dataset. Defaults to False. This is useful when reading multiple files, and want to know which file a particular record originated from, or to keep useful information in file path.
func (o DatasetCreateRequestParametersPtrOutput) IncludePath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetCreateRequestParameters) *bool {
		if v == nil {
			return nil
		}
		return v.IncludePath
	}).(pulumi.BoolPtrOutput)
}

// The partition information of each path will be extracted into columns based on the specified format. Format part '{column_name}' creates string column, and '{column_name:yyyy/MM/dd/HH/mm/ss}' creates datetime column, where 'yyyy', 'MM', 'dd', 'HH', 'mm' and 'ss' are used to extract year, month, day, hour, minute and second for the datetime type. The format should start from the position of first partition key until the end of file path. For example, given the path '../USA/2019/01/01/data.parquet' where the partition is by country/region and time, partition_format='/{CountryOrRegion}/{PartitionDate:yyyy/MM/dd}/data.csv' creates a string column 'CountryOrRegion' with the value 'USA' and a datetime column 'PartitionDate' with the value '2019-01-01
func (o DatasetCreateRequestParametersPtrOutput) PartitionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetCreateRequestParameters) *string {
		if v == nil {
			return nil
		}
		return v.PartitionFormat
	}).(pulumi.StringPtrOutput)
}

func (o DatasetCreateRequestParametersPtrOutput) Path() DatasetCreateRequestPathPtrOutput {
	return o.ApplyT(func(v *DatasetCreateRequestParameters) *DatasetCreateRequestPath {
		if v == nil {
			return nil
		}
		return v.Path
	}).(DatasetCreateRequestPathPtrOutput)
}

func (o DatasetCreateRequestParametersPtrOutput) Query() DatasetCreateRequestQueryPtrOutput {
	return o.ApplyT(func(v *DatasetCreateRequestParameters) *DatasetCreateRequestQuery {
		if v == nil {
			return nil
		}
		return v.Query
	}).(DatasetCreateRequestQueryPtrOutput)
}

// The separator used to split columns for 'delimited_files' sourceType.
func (o DatasetCreateRequestParametersPtrOutput) Separator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetCreateRequestParameters) *string {
		if v == nil {
			return nil
		}
		return v.Separator
	}).(pulumi.StringPtrOutput)
}

// Data source type.
func (o DatasetCreateRequestParametersPtrOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetCreateRequestParameters) *string {
		if v == nil {
			return nil
		}
		return v.SourceType
	}).(pulumi.StringPtrOutput)
}

type DatasetCreateRequestPath struct {
	DataPath *DatasetCreateRequestDataPath `pulumi:"dataPath"`
	// The Http URL.
	HttpUrl *string `pulumi:"httpUrl"`
}

// DatasetCreateRequestPathInput is an input type that accepts DatasetCreateRequestPathArgs and DatasetCreateRequestPathOutput values.
// You can construct a concrete instance of `DatasetCreateRequestPathInput` via:
//
//          DatasetCreateRequestPathArgs{...}
type DatasetCreateRequestPathInput interface {
	pulumi.Input

	ToDatasetCreateRequestPathOutput() DatasetCreateRequestPathOutput
	ToDatasetCreateRequestPathOutputWithContext(context.Context) DatasetCreateRequestPathOutput
}

type DatasetCreateRequestPathArgs struct {
	DataPath DatasetCreateRequestDataPathPtrInput `pulumi:"dataPath"`
	// The Http URL.
	HttpUrl pulumi.StringPtrInput `pulumi:"httpUrl"`
}

func (DatasetCreateRequestPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetCreateRequestPath)(nil)).Elem()
}

func (i DatasetCreateRequestPathArgs) ToDatasetCreateRequestPathOutput() DatasetCreateRequestPathOutput {
	return i.ToDatasetCreateRequestPathOutputWithContext(context.Background())
}

func (i DatasetCreateRequestPathArgs) ToDatasetCreateRequestPathOutputWithContext(ctx context.Context) DatasetCreateRequestPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestPathOutput)
}

func (i DatasetCreateRequestPathArgs) ToDatasetCreateRequestPathPtrOutput() DatasetCreateRequestPathPtrOutput {
	return i.ToDatasetCreateRequestPathPtrOutputWithContext(context.Background())
}

func (i DatasetCreateRequestPathArgs) ToDatasetCreateRequestPathPtrOutputWithContext(ctx context.Context) DatasetCreateRequestPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestPathOutput).ToDatasetCreateRequestPathPtrOutputWithContext(ctx)
}

// DatasetCreateRequestPathPtrInput is an input type that accepts DatasetCreateRequestPathArgs, DatasetCreateRequestPathPtr and DatasetCreateRequestPathPtrOutput values.
// You can construct a concrete instance of `DatasetCreateRequestPathPtrInput` via:
//
//          DatasetCreateRequestPathArgs{...}
//
//  or:
//
//          nil
type DatasetCreateRequestPathPtrInput interface {
	pulumi.Input

	ToDatasetCreateRequestPathPtrOutput() DatasetCreateRequestPathPtrOutput
	ToDatasetCreateRequestPathPtrOutputWithContext(context.Context) DatasetCreateRequestPathPtrOutput
}

type datasetCreateRequestPathPtrType DatasetCreateRequestPathArgs

func DatasetCreateRequestPathPtr(v *DatasetCreateRequestPathArgs) DatasetCreateRequestPathPtrInput {
	return (*datasetCreateRequestPathPtrType)(v)
}

func (*datasetCreateRequestPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetCreateRequestPath)(nil)).Elem()
}

func (i *datasetCreateRequestPathPtrType) ToDatasetCreateRequestPathPtrOutput() DatasetCreateRequestPathPtrOutput {
	return i.ToDatasetCreateRequestPathPtrOutputWithContext(context.Background())
}

func (i *datasetCreateRequestPathPtrType) ToDatasetCreateRequestPathPtrOutputWithContext(ctx context.Context) DatasetCreateRequestPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestPathPtrOutput)
}

type DatasetCreateRequestPathOutput struct{ *pulumi.OutputState }

func (DatasetCreateRequestPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetCreateRequestPath)(nil)).Elem()
}

func (o DatasetCreateRequestPathOutput) ToDatasetCreateRequestPathOutput() DatasetCreateRequestPathOutput {
	return o
}

func (o DatasetCreateRequestPathOutput) ToDatasetCreateRequestPathOutputWithContext(ctx context.Context) DatasetCreateRequestPathOutput {
	return o
}

func (o DatasetCreateRequestPathOutput) ToDatasetCreateRequestPathPtrOutput() DatasetCreateRequestPathPtrOutput {
	return o.ToDatasetCreateRequestPathPtrOutputWithContext(context.Background())
}

func (o DatasetCreateRequestPathOutput) ToDatasetCreateRequestPathPtrOutputWithContext(ctx context.Context) DatasetCreateRequestPathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetCreateRequestPath) *DatasetCreateRequestPath {
		return &v
	}).(DatasetCreateRequestPathPtrOutput)
}

func (o DatasetCreateRequestPathOutput) DataPath() DatasetCreateRequestDataPathPtrOutput {
	return o.ApplyT(func(v DatasetCreateRequestPath) *DatasetCreateRequestDataPath { return v.DataPath }).(DatasetCreateRequestDataPathPtrOutput)
}

// The Http URL.
func (o DatasetCreateRequestPathOutput) HttpUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetCreateRequestPath) *string { return v.HttpUrl }).(pulumi.StringPtrOutput)
}

type DatasetCreateRequestPathPtrOutput struct{ *pulumi.OutputState }

func (DatasetCreateRequestPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetCreateRequestPath)(nil)).Elem()
}

func (o DatasetCreateRequestPathPtrOutput) ToDatasetCreateRequestPathPtrOutput() DatasetCreateRequestPathPtrOutput {
	return o
}

func (o DatasetCreateRequestPathPtrOutput) ToDatasetCreateRequestPathPtrOutputWithContext(ctx context.Context) DatasetCreateRequestPathPtrOutput {
	return o
}

func (o DatasetCreateRequestPathPtrOutput) Elem() DatasetCreateRequestPathOutput {
	return o.ApplyT(func(v *DatasetCreateRequestPath) DatasetCreateRequestPath {
		if v != nil {
			return *v
		}
		var ret DatasetCreateRequestPath
		return ret
	}).(DatasetCreateRequestPathOutput)
}

func (o DatasetCreateRequestPathPtrOutput) DataPath() DatasetCreateRequestDataPathPtrOutput {
	return o.ApplyT(func(v *DatasetCreateRequestPath) *DatasetCreateRequestDataPath {
		if v == nil {
			return nil
		}
		return v.DataPath
	}).(DatasetCreateRequestDataPathPtrOutput)
}

// The Http URL.
func (o DatasetCreateRequestPathPtrOutput) HttpUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetCreateRequestPath) *string {
		if v == nil {
			return nil
		}
		return v.HttpUrl
	}).(pulumi.StringPtrOutput)
}

type DatasetCreateRequestQuery struct {
	// The SQL/PostgreSQL/MySQL datastore name.
	DatastoreName *string `pulumi:"datastoreName"`
	// SQL Quey.
	Query *string `pulumi:"query"`
}

// DatasetCreateRequestQueryInput is an input type that accepts DatasetCreateRequestQueryArgs and DatasetCreateRequestQueryOutput values.
// You can construct a concrete instance of `DatasetCreateRequestQueryInput` via:
//
//          DatasetCreateRequestQueryArgs{...}
type DatasetCreateRequestQueryInput interface {
	pulumi.Input

	ToDatasetCreateRequestQueryOutput() DatasetCreateRequestQueryOutput
	ToDatasetCreateRequestQueryOutputWithContext(context.Context) DatasetCreateRequestQueryOutput
}

type DatasetCreateRequestQueryArgs struct {
	// The SQL/PostgreSQL/MySQL datastore name.
	DatastoreName pulumi.StringPtrInput `pulumi:"datastoreName"`
	// SQL Quey.
	Query pulumi.StringPtrInput `pulumi:"query"`
}

func (DatasetCreateRequestQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetCreateRequestQuery)(nil)).Elem()
}

func (i DatasetCreateRequestQueryArgs) ToDatasetCreateRequestQueryOutput() DatasetCreateRequestQueryOutput {
	return i.ToDatasetCreateRequestQueryOutputWithContext(context.Background())
}

func (i DatasetCreateRequestQueryArgs) ToDatasetCreateRequestQueryOutputWithContext(ctx context.Context) DatasetCreateRequestQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestQueryOutput)
}

func (i DatasetCreateRequestQueryArgs) ToDatasetCreateRequestQueryPtrOutput() DatasetCreateRequestQueryPtrOutput {
	return i.ToDatasetCreateRequestQueryPtrOutputWithContext(context.Background())
}

func (i DatasetCreateRequestQueryArgs) ToDatasetCreateRequestQueryPtrOutputWithContext(ctx context.Context) DatasetCreateRequestQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestQueryOutput).ToDatasetCreateRequestQueryPtrOutputWithContext(ctx)
}

// DatasetCreateRequestQueryPtrInput is an input type that accepts DatasetCreateRequestQueryArgs, DatasetCreateRequestQueryPtr and DatasetCreateRequestQueryPtrOutput values.
// You can construct a concrete instance of `DatasetCreateRequestQueryPtrInput` via:
//
//          DatasetCreateRequestQueryArgs{...}
//
//  or:
//
//          nil
type DatasetCreateRequestQueryPtrInput interface {
	pulumi.Input

	ToDatasetCreateRequestQueryPtrOutput() DatasetCreateRequestQueryPtrOutput
	ToDatasetCreateRequestQueryPtrOutputWithContext(context.Context) DatasetCreateRequestQueryPtrOutput
}

type datasetCreateRequestQueryPtrType DatasetCreateRequestQueryArgs

func DatasetCreateRequestQueryPtr(v *DatasetCreateRequestQueryArgs) DatasetCreateRequestQueryPtrInput {
	return (*datasetCreateRequestQueryPtrType)(v)
}

func (*datasetCreateRequestQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetCreateRequestQuery)(nil)).Elem()
}

func (i *datasetCreateRequestQueryPtrType) ToDatasetCreateRequestQueryPtrOutput() DatasetCreateRequestQueryPtrOutput {
	return i.ToDatasetCreateRequestQueryPtrOutputWithContext(context.Background())
}

func (i *datasetCreateRequestQueryPtrType) ToDatasetCreateRequestQueryPtrOutputWithContext(ctx context.Context) DatasetCreateRequestQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestQueryPtrOutput)
}

type DatasetCreateRequestQueryOutput struct{ *pulumi.OutputState }

func (DatasetCreateRequestQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetCreateRequestQuery)(nil)).Elem()
}

func (o DatasetCreateRequestQueryOutput) ToDatasetCreateRequestQueryOutput() DatasetCreateRequestQueryOutput {
	return o
}

func (o DatasetCreateRequestQueryOutput) ToDatasetCreateRequestQueryOutputWithContext(ctx context.Context) DatasetCreateRequestQueryOutput {
	return o
}

func (o DatasetCreateRequestQueryOutput) ToDatasetCreateRequestQueryPtrOutput() DatasetCreateRequestQueryPtrOutput {
	return o.ToDatasetCreateRequestQueryPtrOutputWithContext(context.Background())
}

func (o DatasetCreateRequestQueryOutput) ToDatasetCreateRequestQueryPtrOutputWithContext(ctx context.Context) DatasetCreateRequestQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetCreateRequestQuery) *DatasetCreateRequestQuery {
		return &v
	}).(DatasetCreateRequestQueryPtrOutput)
}

// The SQL/PostgreSQL/MySQL datastore name.
func (o DatasetCreateRequestQueryOutput) DatastoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetCreateRequestQuery) *string { return v.DatastoreName }).(pulumi.StringPtrOutput)
}

// SQL Quey.
func (o DatasetCreateRequestQueryOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetCreateRequestQuery) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type DatasetCreateRequestQueryPtrOutput struct{ *pulumi.OutputState }

func (DatasetCreateRequestQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetCreateRequestQuery)(nil)).Elem()
}

func (o DatasetCreateRequestQueryPtrOutput) ToDatasetCreateRequestQueryPtrOutput() DatasetCreateRequestQueryPtrOutput {
	return o
}

func (o DatasetCreateRequestQueryPtrOutput) ToDatasetCreateRequestQueryPtrOutputWithContext(ctx context.Context) DatasetCreateRequestQueryPtrOutput {
	return o
}

func (o DatasetCreateRequestQueryPtrOutput) Elem() DatasetCreateRequestQueryOutput {
	return o.ApplyT(func(v *DatasetCreateRequestQuery) DatasetCreateRequestQuery {
		if v != nil {
			return *v
		}
		var ret DatasetCreateRequestQuery
		return ret
	}).(DatasetCreateRequestQueryOutput)
}

// The SQL/PostgreSQL/MySQL datastore name.
func (o DatasetCreateRequestQueryPtrOutput) DatastoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetCreateRequestQuery) *string {
		if v == nil {
			return nil
		}
		return v.DatastoreName
	}).(pulumi.StringPtrOutput)
}

// SQL Quey.
func (o DatasetCreateRequestQueryPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetCreateRequestQuery) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

type DatasetCreateRequestRegistration struct {
	// The description for the dataset.
	Description *string `pulumi:"description"`
	// The name of the dataset.
	Name *string `pulumi:"name"`
	// Tags associated with the dataset.
	Tags map[string]string `pulumi:"tags"`
}

// DatasetCreateRequestRegistrationInput is an input type that accepts DatasetCreateRequestRegistrationArgs and DatasetCreateRequestRegistrationOutput values.
// You can construct a concrete instance of `DatasetCreateRequestRegistrationInput` via:
//
//          DatasetCreateRequestRegistrationArgs{...}
type DatasetCreateRequestRegistrationInput interface {
	pulumi.Input

	ToDatasetCreateRequestRegistrationOutput() DatasetCreateRequestRegistrationOutput
	ToDatasetCreateRequestRegistrationOutputWithContext(context.Context) DatasetCreateRequestRegistrationOutput
}

type DatasetCreateRequestRegistrationArgs struct {
	// The description for the dataset.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the dataset.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags associated with the dataset.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (DatasetCreateRequestRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetCreateRequestRegistration)(nil)).Elem()
}

func (i DatasetCreateRequestRegistrationArgs) ToDatasetCreateRequestRegistrationOutput() DatasetCreateRequestRegistrationOutput {
	return i.ToDatasetCreateRequestRegistrationOutputWithContext(context.Background())
}

func (i DatasetCreateRequestRegistrationArgs) ToDatasetCreateRequestRegistrationOutputWithContext(ctx context.Context) DatasetCreateRequestRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestRegistrationOutput)
}

func (i DatasetCreateRequestRegistrationArgs) ToDatasetCreateRequestRegistrationPtrOutput() DatasetCreateRequestRegistrationPtrOutput {
	return i.ToDatasetCreateRequestRegistrationPtrOutputWithContext(context.Background())
}

func (i DatasetCreateRequestRegistrationArgs) ToDatasetCreateRequestRegistrationPtrOutputWithContext(ctx context.Context) DatasetCreateRequestRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestRegistrationOutput).ToDatasetCreateRequestRegistrationPtrOutputWithContext(ctx)
}

// DatasetCreateRequestRegistrationPtrInput is an input type that accepts DatasetCreateRequestRegistrationArgs, DatasetCreateRequestRegistrationPtr and DatasetCreateRequestRegistrationPtrOutput values.
// You can construct a concrete instance of `DatasetCreateRequestRegistrationPtrInput` via:
//
//          DatasetCreateRequestRegistrationArgs{...}
//
//  or:
//
//          nil
type DatasetCreateRequestRegistrationPtrInput interface {
	pulumi.Input

	ToDatasetCreateRequestRegistrationPtrOutput() DatasetCreateRequestRegistrationPtrOutput
	ToDatasetCreateRequestRegistrationPtrOutputWithContext(context.Context) DatasetCreateRequestRegistrationPtrOutput
}

type datasetCreateRequestRegistrationPtrType DatasetCreateRequestRegistrationArgs

func DatasetCreateRequestRegistrationPtr(v *DatasetCreateRequestRegistrationArgs) DatasetCreateRequestRegistrationPtrInput {
	return (*datasetCreateRequestRegistrationPtrType)(v)
}

func (*datasetCreateRequestRegistrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetCreateRequestRegistration)(nil)).Elem()
}

func (i *datasetCreateRequestRegistrationPtrType) ToDatasetCreateRequestRegistrationPtrOutput() DatasetCreateRequestRegistrationPtrOutput {
	return i.ToDatasetCreateRequestRegistrationPtrOutputWithContext(context.Background())
}

func (i *datasetCreateRequestRegistrationPtrType) ToDatasetCreateRequestRegistrationPtrOutputWithContext(ctx context.Context) DatasetCreateRequestRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestRegistrationPtrOutput)
}

type DatasetCreateRequestRegistrationOutput struct{ *pulumi.OutputState }

func (DatasetCreateRequestRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetCreateRequestRegistration)(nil)).Elem()
}

func (o DatasetCreateRequestRegistrationOutput) ToDatasetCreateRequestRegistrationOutput() DatasetCreateRequestRegistrationOutput {
	return o
}

func (o DatasetCreateRequestRegistrationOutput) ToDatasetCreateRequestRegistrationOutputWithContext(ctx context.Context) DatasetCreateRequestRegistrationOutput {
	return o
}

func (o DatasetCreateRequestRegistrationOutput) ToDatasetCreateRequestRegistrationPtrOutput() DatasetCreateRequestRegistrationPtrOutput {
	return o.ToDatasetCreateRequestRegistrationPtrOutputWithContext(context.Background())
}

func (o DatasetCreateRequestRegistrationOutput) ToDatasetCreateRequestRegistrationPtrOutputWithContext(ctx context.Context) DatasetCreateRequestRegistrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetCreateRequestRegistration) *DatasetCreateRequestRegistration {
		return &v
	}).(DatasetCreateRequestRegistrationPtrOutput)
}

// The description for the dataset.
func (o DatasetCreateRequestRegistrationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetCreateRequestRegistration) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the dataset.
func (o DatasetCreateRequestRegistrationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetCreateRequestRegistration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags associated with the dataset.
func (o DatasetCreateRequestRegistrationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatasetCreateRequestRegistration) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type DatasetCreateRequestRegistrationPtrOutput struct{ *pulumi.OutputState }

func (DatasetCreateRequestRegistrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetCreateRequestRegistration)(nil)).Elem()
}

func (o DatasetCreateRequestRegistrationPtrOutput) ToDatasetCreateRequestRegistrationPtrOutput() DatasetCreateRequestRegistrationPtrOutput {
	return o
}

func (o DatasetCreateRequestRegistrationPtrOutput) ToDatasetCreateRequestRegistrationPtrOutputWithContext(ctx context.Context) DatasetCreateRequestRegistrationPtrOutput {
	return o
}

func (o DatasetCreateRequestRegistrationPtrOutput) Elem() DatasetCreateRequestRegistrationOutput {
	return o.ApplyT(func(v *DatasetCreateRequestRegistration) DatasetCreateRequestRegistration {
		if v != nil {
			return *v
		}
		var ret DatasetCreateRequestRegistration
		return ret
	}).(DatasetCreateRequestRegistrationOutput)
}

// The description for the dataset.
func (o DatasetCreateRequestRegistrationPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetCreateRequestRegistration) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The name of the dataset.
func (o DatasetCreateRequestRegistrationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetCreateRequestRegistration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tags associated with the dataset.
func (o DatasetCreateRequestRegistrationPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatasetCreateRequestRegistration) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type DatasetCreateRequestTimeSeries struct {
	// Column name to be used as CoarseGrainTimestamp. Can only be used if 'fineGrainTimestamp' is specified and cannot be same as 'fineGrainTimestamp'.
	CoarseGrainTimestamp *string `pulumi:"coarseGrainTimestamp"`
	//  Column name to be used as FineGrainTimestamp
	FineGrainTimestamp *string `pulumi:"fineGrainTimestamp"`
}

// DatasetCreateRequestTimeSeriesInput is an input type that accepts DatasetCreateRequestTimeSeriesArgs and DatasetCreateRequestTimeSeriesOutput values.
// You can construct a concrete instance of `DatasetCreateRequestTimeSeriesInput` via:
//
//          DatasetCreateRequestTimeSeriesArgs{...}
type DatasetCreateRequestTimeSeriesInput interface {
	pulumi.Input

	ToDatasetCreateRequestTimeSeriesOutput() DatasetCreateRequestTimeSeriesOutput
	ToDatasetCreateRequestTimeSeriesOutputWithContext(context.Context) DatasetCreateRequestTimeSeriesOutput
}

type DatasetCreateRequestTimeSeriesArgs struct {
	// Column name to be used as CoarseGrainTimestamp. Can only be used if 'fineGrainTimestamp' is specified and cannot be same as 'fineGrainTimestamp'.
	CoarseGrainTimestamp pulumi.StringPtrInput `pulumi:"coarseGrainTimestamp"`
	//  Column name to be used as FineGrainTimestamp
	FineGrainTimestamp pulumi.StringPtrInput `pulumi:"fineGrainTimestamp"`
}

func (DatasetCreateRequestTimeSeriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetCreateRequestTimeSeries)(nil)).Elem()
}

func (i DatasetCreateRequestTimeSeriesArgs) ToDatasetCreateRequestTimeSeriesOutput() DatasetCreateRequestTimeSeriesOutput {
	return i.ToDatasetCreateRequestTimeSeriesOutputWithContext(context.Background())
}

func (i DatasetCreateRequestTimeSeriesArgs) ToDatasetCreateRequestTimeSeriesOutputWithContext(ctx context.Context) DatasetCreateRequestTimeSeriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestTimeSeriesOutput)
}

func (i DatasetCreateRequestTimeSeriesArgs) ToDatasetCreateRequestTimeSeriesPtrOutput() DatasetCreateRequestTimeSeriesPtrOutput {
	return i.ToDatasetCreateRequestTimeSeriesPtrOutputWithContext(context.Background())
}

func (i DatasetCreateRequestTimeSeriesArgs) ToDatasetCreateRequestTimeSeriesPtrOutputWithContext(ctx context.Context) DatasetCreateRequestTimeSeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestTimeSeriesOutput).ToDatasetCreateRequestTimeSeriesPtrOutputWithContext(ctx)
}

// DatasetCreateRequestTimeSeriesPtrInput is an input type that accepts DatasetCreateRequestTimeSeriesArgs, DatasetCreateRequestTimeSeriesPtr and DatasetCreateRequestTimeSeriesPtrOutput values.
// You can construct a concrete instance of `DatasetCreateRequestTimeSeriesPtrInput` via:
//
//          DatasetCreateRequestTimeSeriesArgs{...}
//
//  or:
//
//          nil
type DatasetCreateRequestTimeSeriesPtrInput interface {
	pulumi.Input

	ToDatasetCreateRequestTimeSeriesPtrOutput() DatasetCreateRequestTimeSeriesPtrOutput
	ToDatasetCreateRequestTimeSeriesPtrOutputWithContext(context.Context) DatasetCreateRequestTimeSeriesPtrOutput
}

type datasetCreateRequestTimeSeriesPtrType DatasetCreateRequestTimeSeriesArgs

func DatasetCreateRequestTimeSeriesPtr(v *DatasetCreateRequestTimeSeriesArgs) DatasetCreateRequestTimeSeriesPtrInput {
	return (*datasetCreateRequestTimeSeriesPtrType)(v)
}

func (*datasetCreateRequestTimeSeriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetCreateRequestTimeSeries)(nil)).Elem()
}

func (i *datasetCreateRequestTimeSeriesPtrType) ToDatasetCreateRequestTimeSeriesPtrOutput() DatasetCreateRequestTimeSeriesPtrOutput {
	return i.ToDatasetCreateRequestTimeSeriesPtrOutputWithContext(context.Background())
}

func (i *datasetCreateRequestTimeSeriesPtrType) ToDatasetCreateRequestTimeSeriesPtrOutputWithContext(ctx context.Context) DatasetCreateRequestTimeSeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCreateRequestTimeSeriesPtrOutput)
}

type DatasetCreateRequestTimeSeriesOutput struct{ *pulumi.OutputState }

func (DatasetCreateRequestTimeSeriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetCreateRequestTimeSeries)(nil)).Elem()
}

func (o DatasetCreateRequestTimeSeriesOutput) ToDatasetCreateRequestTimeSeriesOutput() DatasetCreateRequestTimeSeriesOutput {
	return o
}

func (o DatasetCreateRequestTimeSeriesOutput) ToDatasetCreateRequestTimeSeriesOutputWithContext(ctx context.Context) DatasetCreateRequestTimeSeriesOutput {
	return o
}

func (o DatasetCreateRequestTimeSeriesOutput) ToDatasetCreateRequestTimeSeriesPtrOutput() DatasetCreateRequestTimeSeriesPtrOutput {
	return o.ToDatasetCreateRequestTimeSeriesPtrOutputWithContext(context.Background())
}

func (o DatasetCreateRequestTimeSeriesOutput) ToDatasetCreateRequestTimeSeriesPtrOutputWithContext(ctx context.Context) DatasetCreateRequestTimeSeriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetCreateRequestTimeSeries) *DatasetCreateRequestTimeSeries {
		return &v
	}).(DatasetCreateRequestTimeSeriesPtrOutput)
}

// Column name to be used as CoarseGrainTimestamp. Can only be used if 'fineGrainTimestamp' is specified and cannot be same as 'fineGrainTimestamp'.
func (o DatasetCreateRequestTimeSeriesOutput) CoarseGrainTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetCreateRequestTimeSeries) *string { return v.CoarseGrainTimestamp }).(pulumi.StringPtrOutput)
}

//  Column name to be used as FineGrainTimestamp
func (o DatasetCreateRequestTimeSeriesOutput) FineGrainTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetCreateRequestTimeSeries) *string { return v.FineGrainTimestamp }).(pulumi.StringPtrOutput)
}

type DatasetCreateRequestTimeSeriesPtrOutput struct{ *pulumi.OutputState }

func (DatasetCreateRequestTimeSeriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetCreateRequestTimeSeries)(nil)).Elem()
}

func (o DatasetCreateRequestTimeSeriesPtrOutput) ToDatasetCreateRequestTimeSeriesPtrOutput() DatasetCreateRequestTimeSeriesPtrOutput {
	return o
}

func (o DatasetCreateRequestTimeSeriesPtrOutput) ToDatasetCreateRequestTimeSeriesPtrOutputWithContext(ctx context.Context) DatasetCreateRequestTimeSeriesPtrOutput {
	return o
}

func (o DatasetCreateRequestTimeSeriesPtrOutput) Elem() DatasetCreateRequestTimeSeriesOutput {
	return o.ApplyT(func(v *DatasetCreateRequestTimeSeries) DatasetCreateRequestTimeSeries {
		if v != nil {
			return *v
		}
		var ret DatasetCreateRequestTimeSeries
		return ret
	}).(DatasetCreateRequestTimeSeriesOutput)
}

// Column name to be used as CoarseGrainTimestamp. Can only be used if 'fineGrainTimestamp' is specified and cannot be same as 'fineGrainTimestamp'.
func (o DatasetCreateRequestTimeSeriesPtrOutput) CoarseGrainTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetCreateRequestTimeSeries) *string {
		if v == nil {
			return nil
		}
		return v.CoarseGrainTimestamp
	}).(pulumi.StringPtrOutput)
}

//  Column name to be used as FineGrainTimestamp
func (o DatasetCreateRequestTimeSeriesPtrOutput) FineGrainTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetCreateRequestTimeSeries) *string {
		if v == nil {
			return nil
		}
		return v.FineGrainTimestamp
	}).(pulumi.StringPtrOutput)
}

type DatasetReference struct {
	// The id of the dataset reference.
	Id *string `pulumi:"id"`
	// The name of the dataset reference.
	Name *string `pulumi:"name"`
}

// DatasetReferenceInput is an input type that accepts DatasetReferenceArgs and DatasetReferenceOutput values.
// You can construct a concrete instance of `DatasetReferenceInput` via:
//
//          DatasetReferenceArgs{...}
type DatasetReferenceInput interface {
	pulumi.Input

	ToDatasetReferenceOutput() DatasetReferenceOutput
	ToDatasetReferenceOutputWithContext(context.Context) DatasetReferenceOutput
}

type DatasetReferenceArgs struct {
	// The id of the dataset reference.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the dataset reference.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DatasetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetReference)(nil)).Elem()
}

func (i DatasetReferenceArgs) ToDatasetReferenceOutput() DatasetReferenceOutput {
	return i.ToDatasetReferenceOutputWithContext(context.Background())
}

func (i DatasetReferenceArgs) ToDatasetReferenceOutputWithContext(ctx context.Context) DatasetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetReferenceOutput)
}

// DatasetReferenceArrayInput is an input type that accepts DatasetReferenceArray and DatasetReferenceArrayOutput values.
// You can construct a concrete instance of `DatasetReferenceArrayInput` via:
//
//          DatasetReferenceArray{ DatasetReferenceArgs{...} }
type DatasetReferenceArrayInput interface {
	pulumi.Input

	ToDatasetReferenceArrayOutput() DatasetReferenceArrayOutput
	ToDatasetReferenceArrayOutputWithContext(context.Context) DatasetReferenceArrayOutput
}

type DatasetReferenceArray []DatasetReferenceInput

func (DatasetReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetReference)(nil)).Elem()
}

func (i DatasetReferenceArray) ToDatasetReferenceArrayOutput() DatasetReferenceArrayOutput {
	return i.ToDatasetReferenceArrayOutputWithContext(context.Background())
}

func (i DatasetReferenceArray) ToDatasetReferenceArrayOutputWithContext(ctx context.Context) DatasetReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetReferenceArrayOutput)
}

type DatasetReferenceOutput struct{ *pulumi.OutputState }

func (DatasetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetReference)(nil)).Elem()
}

func (o DatasetReferenceOutput) ToDatasetReferenceOutput() DatasetReferenceOutput {
	return o
}

func (o DatasetReferenceOutput) ToDatasetReferenceOutputWithContext(ctx context.Context) DatasetReferenceOutput {
	return o
}

// The id of the dataset reference.
func (o DatasetReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the dataset reference.
func (o DatasetReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DatasetReferenceArrayOutput struct{ *pulumi.OutputState }

func (DatasetReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetReference)(nil)).Elem()
}

func (o DatasetReferenceArrayOutput) ToDatasetReferenceArrayOutput() DatasetReferenceArrayOutput {
	return o
}

func (o DatasetReferenceArrayOutput) ToDatasetReferenceArrayOutputWithContext(ctx context.Context) DatasetReferenceArrayOutput {
	return o
}

func (o DatasetReferenceArrayOutput) Index(i pulumi.IntInput) DatasetReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetReference {
		return vs[0].([]DatasetReference)[vs[1].(int)]
	}).(DatasetReferenceOutput)
}

type DatasetReferenceResponse struct {
	// The id of the dataset reference.
	Id *string `pulumi:"id"`
	// The name of the dataset reference.
	Name *string `pulumi:"name"`
}

// DatasetReferenceResponseInput is an input type that accepts DatasetReferenceResponseArgs and DatasetReferenceResponseOutput values.
// You can construct a concrete instance of `DatasetReferenceResponseInput` via:
//
//          DatasetReferenceResponseArgs{...}
type DatasetReferenceResponseInput interface {
	pulumi.Input

	ToDatasetReferenceResponseOutput() DatasetReferenceResponseOutput
	ToDatasetReferenceResponseOutputWithContext(context.Context) DatasetReferenceResponseOutput
}

type DatasetReferenceResponseArgs struct {
	// The id of the dataset reference.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the dataset reference.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DatasetReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetReferenceResponse)(nil)).Elem()
}

func (i DatasetReferenceResponseArgs) ToDatasetReferenceResponseOutput() DatasetReferenceResponseOutput {
	return i.ToDatasetReferenceResponseOutputWithContext(context.Background())
}

func (i DatasetReferenceResponseArgs) ToDatasetReferenceResponseOutputWithContext(ctx context.Context) DatasetReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetReferenceResponseOutput)
}

// DatasetReferenceResponseArrayInput is an input type that accepts DatasetReferenceResponseArray and DatasetReferenceResponseArrayOutput values.
// You can construct a concrete instance of `DatasetReferenceResponseArrayInput` via:
//
//          DatasetReferenceResponseArray{ DatasetReferenceResponseArgs{...} }
type DatasetReferenceResponseArrayInput interface {
	pulumi.Input

	ToDatasetReferenceResponseArrayOutput() DatasetReferenceResponseArrayOutput
	ToDatasetReferenceResponseArrayOutputWithContext(context.Context) DatasetReferenceResponseArrayOutput
}

type DatasetReferenceResponseArray []DatasetReferenceResponseInput

func (DatasetReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetReferenceResponse)(nil)).Elem()
}

func (i DatasetReferenceResponseArray) ToDatasetReferenceResponseArrayOutput() DatasetReferenceResponseArrayOutput {
	return i.ToDatasetReferenceResponseArrayOutputWithContext(context.Background())
}

func (i DatasetReferenceResponseArray) ToDatasetReferenceResponseArrayOutputWithContext(ctx context.Context) DatasetReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetReferenceResponseArrayOutput)
}

type DatasetReferenceResponseOutput struct{ *pulumi.OutputState }

func (DatasetReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetReferenceResponse)(nil)).Elem()
}

func (o DatasetReferenceResponseOutput) ToDatasetReferenceResponseOutput() DatasetReferenceResponseOutput {
	return o
}

func (o DatasetReferenceResponseOutput) ToDatasetReferenceResponseOutputWithContext(ctx context.Context) DatasetReferenceResponseOutput {
	return o
}

// The id of the dataset reference.
func (o DatasetReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the dataset reference.
func (o DatasetReferenceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetReferenceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DatasetReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (DatasetReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetReferenceResponse)(nil)).Elem()
}

func (o DatasetReferenceResponseArrayOutput) ToDatasetReferenceResponseArrayOutput() DatasetReferenceResponseArrayOutput {
	return o
}

func (o DatasetReferenceResponseArrayOutput) ToDatasetReferenceResponseArrayOutputWithContext(ctx context.Context) DatasetReferenceResponseArrayOutput {
	return o
}

func (o DatasetReferenceResponseArrayOutput) Index(i pulumi.IntInput) DatasetReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetReferenceResponse {
		return vs[0].([]DatasetReferenceResponse)[vs[1].(int)]
	}).(DatasetReferenceResponseOutput)
}

type DatasetResponse struct {
	// The dataset creation time (UTC).
	CreatedTime string `pulumi:"createdTime"`
	// Unique Dataset identifier.
	DatasetId string `pulumi:"datasetId"`
	// Dataset state
	DatasetState *DatasetStateResponse `pulumi:"datasetState"`
	// Dataset Type.
	DatasetType string `pulumi:"datasetType"`
	// Name of the default compute to be used for any Dataset actions (such as Profile, Write).
	DefaultCompute string `pulumi:"defaultCompute"`
	// Description about this dataset version.
	Description string `pulumi:"description"`
	// eTag description
	Etag string `pulumi:"etag"`
	// Flag to hide Dataset in UI
	IsVisible bool `pulumi:"isVisible"`
	// Last created Dataset definition.
	Latest *DatasetResponseLatest `pulumi:"latest"`
	// The dataset last modified time (UTC).
	ModifiedTime string `pulumi:"modifiedTime"`
	// Unique dataset name
	Name string `pulumi:"name"`
	// Tags for this dataset version.
	Tags map[string]string `pulumi:"tags"`
}

// DatasetResponseInput is an input type that accepts DatasetResponseArgs and DatasetResponseOutput values.
// You can construct a concrete instance of `DatasetResponseInput` via:
//
//          DatasetResponseArgs{...}
type DatasetResponseInput interface {
	pulumi.Input

	ToDatasetResponseOutput() DatasetResponseOutput
	ToDatasetResponseOutputWithContext(context.Context) DatasetResponseOutput
}

type DatasetResponseArgs struct {
	// The dataset creation time (UTC).
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	// Unique Dataset identifier.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// Dataset state
	DatasetState DatasetStateResponsePtrInput `pulumi:"datasetState"`
	// Dataset Type.
	DatasetType pulumi.StringInput `pulumi:"datasetType"`
	// Name of the default compute to be used for any Dataset actions (such as Profile, Write).
	DefaultCompute pulumi.StringInput `pulumi:"defaultCompute"`
	// Description about this dataset version.
	Description pulumi.StringInput `pulumi:"description"`
	// eTag description
	Etag pulumi.StringInput `pulumi:"etag"`
	// Flag to hide Dataset in UI
	IsVisible pulumi.BoolInput `pulumi:"isVisible"`
	// Last created Dataset definition.
	Latest DatasetResponseLatestPtrInput `pulumi:"latest"`
	// The dataset last modified time (UTC).
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	// Unique dataset name
	Name pulumi.StringInput `pulumi:"name"`
	// Tags for this dataset version.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (DatasetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetResponse)(nil)).Elem()
}

func (i DatasetResponseArgs) ToDatasetResponseOutput() DatasetResponseOutput {
	return i.ToDatasetResponseOutputWithContext(context.Background())
}

func (i DatasetResponseArgs) ToDatasetResponseOutputWithContext(ctx context.Context) DatasetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResponseOutput)
}

func (i DatasetResponseArgs) ToDatasetResponsePtrOutput() DatasetResponsePtrOutput {
	return i.ToDatasetResponsePtrOutputWithContext(context.Background())
}

func (i DatasetResponseArgs) ToDatasetResponsePtrOutputWithContext(ctx context.Context) DatasetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResponseOutput).ToDatasetResponsePtrOutputWithContext(ctx)
}

// DatasetResponsePtrInput is an input type that accepts DatasetResponseArgs, DatasetResponsePtr and DatasetResponsePtrOutput values.
// You can construct a concrete instance of `DatasetResponsePtrInput` via:
//
//          DatasetResponseArgs{...}
//
//  or:
//
//          nil
type DatasetResponsePtrInput interface {
	pulumi.Input

	ToDatasetResponsePtrOutput() DatasetResponsePtrOutput
	ToDatasetResponsePtrOutputWithContext(context.Context) DatasetResponsePtrOutput
}

type datasetResponsePtrType DatasetResponseArgs

func DatasetResponsePtr(v *DatasetResponseArgs) DatasetResponsePtrInput {
	return (*datasetResponsePtrType)(v)
}

func (*datasetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetResponse)(nil)).Elem()
}

func (i *datasetResponsePtrType) ToDatasetResponsePtrOutput() DatasetResponsePtrOutput {
	return i.ToDatasetResponsePtrOutputWithContext(context.Background())
}

func (i *datasetResponsePtrType) ToDatasetResponsePtrOutputWithContext(ctx context.Context) DatasetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResponsePtrOutput)
}

type DatasetResponseOutput struct{ *pulumi.OutputState }

func (DatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetResponse)(nil)).Elem()
}

func (o DatasetResponseOutput) ToDatasetResponseOutput() DatasetResponseOutput {
	return o
}

func (o DatasetResponseOutput) ToDatasetResponseOutputWithContext(ctx context.Context) DatasetResponseOutput {
	return o
}

func (o DatasetResponseOutput) ToDatasetResponsePtrOutput() DatasetResponsePtrOutput {
	return o.ToDatasetResponsePtrOutputWithContext(context.Background())
}

func (o DatasetResponseOutput) ToDatasetResponsePtrOutputWithContext(ctx context.Context) DatasetResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetResponse) *DatasetResponse {
		return &v
	}).(DatasetResponsePtrOutput)
}

// The dataset creation time (UTC).
func (o DatasetResponseOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponse) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// Unique Dataset identifier.
func (o DatasetResponseOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponse) string { return v.DatasetId }).(pulumi.StringOutput)
}

// Dataset state
func (o DatasetResponseOutput) DatasetState() DatasetStateResponsePtrOutput {
	return o.ApplyT(func(v DatasetResponse) *DatasetStateResponse { return v.DatasetState }).(DatasetStateResponsePtrOutput)
}

// Dataset Type.
func (o DatasetResponseOutput) DatasetType() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponse) string { return v.DatasetType }).(pulumi.StringOutput)
}

// Name of the default compute to be used for any Dataset actions (such as Profile, Write).
func (o DatasetResponseOutput) DefaultCompute() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponse) string { return v.DefaultCompute }).(pulumi.StringOutput)
}

// Description about this dataset version.
func (o DatasetResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponse) string { return v.Description }).(pulumi.StringOutput)
}

// eTag description
func (o DatasetResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Flag to hide Dataset in UI
func (o DatasetResponseOutput) IsVisible() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasetResponse) bool { return v.IsVisible }).(pulumi.BoolOutput)
}

// Last created Dataset definition.
func (o DatasetResponseOutput) Latest() DatasetResponseLatestPtrOutput {
	return o.ApplyT(func(v DatasetResponse) *DatasetResponseLatest { return v.Latest }).(DatasetResponseLatestPtrOutput)
}

// The dataset last modified time (UTC).
func (o DatasetResponseOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponse) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// Unique dataset name
func (o DatasetResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Tags for this dataset version.
func (o DatasetResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatasetResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type DatasetResponsePtrOutput struct{ *pulumi.OutputState }

func (DatasetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetResponse)(nil)).Elem()
}

func (o DatasetResponsePtrOutput) ToDatasetResponsePtrOutput() DatasetResponsePtrOutput {
	return o
}

func (o DatasetResponsePtrOutput) ToDatasetResponsePtrOutputWithContext(ctx context.Context) DatasetResponsePtrOutput {
	return o
}

func (o DatasetResponsePtrOutput) Elem() DatasetResponseOutput {
	return o.ApplyT(func(v *DatasetResponse) DatasetResponse {
		if v != nil {
			return *v
		}
		var ret DatasetResponse
		return ret
	}).(DatasetResponseOutput)
}

// The dataset creation time (UTC).
func (o DatasetResponsePtrOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedTime
	}).(pulumi.StringPtrOutput)
}

// Unique Dataset identifier.
func (o DatasetResponsePtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetId
	}).(pulumi.StringPtrOutput)
}

// Dataset state
func (o DatasetResponsePtrOutput) DatasetState() DatasetStateResponsePtrOutput {
	return o.ApplyT(func(v *DatasetResponse) *DatasetStateResponse {
		if v == nil {
			return nil
		}
		return v.DatasetState
	}).(DatasetStateResponsePtrOutput)
}

// Dataset Type.
func (o DatasetResponsePtrOutput) DatasetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetType
	}).(pulumi.StringPtrOutput)
}

// Name of the default compute to be used for any Dataset actions (such as Profile, Write).
func (o DatasetResponsePtrOutput) DefaultCompute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultCompute
	}).(pulumi.StringPtrOutput)
}

// Description about this dataset version.
func (o DatasetResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// eTag description
func (o DatasetResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Flag to hide Dataset in UI
func (o DatasetResponsePtrOutput) IsVisible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsVisible
	}).(pulumi.BoolPtrOutput)
}

// Last created Dataset definition.
func (o DatasetResponsePtrOutput) Latest() DatasetResponseLatestPtrOutput {
	return o.ApplyT(func(v *DatasetResponse) *DatasetResponseLatest {
		if v == nil {
			return nil
		}
		return v.Latest
	}).(DatasetResponseLatestPtrOutput)
}

// The dataset last modified time (UTC).
func (o DatasetResponsePtrOutput) ModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ModifiedTime
	}).(pulumi.StringPtrOutput)
}

// Unique dataset name
func (o DatasetResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Tags for this dataset version.
func (o DatasetResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatasetResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type DatasetResponseDataPath struct {
	// Additional Properties.
	AdditionalProperties map[string]interface{} `pulumi:"additionalProperties"`
	// Azure path for Azure Blob or File
	AzureFilePath string `pulumi:"azureFilePath"`
	// Data store Name
	DatastoreName string `pulumi:"datastoreName"`
	// HTTP URL.
	HttpUrl string `pulumi:"httpUrl"`
	// Specify the partition format of path. Defaults to None.
	PartitionFormat string `pulumi:"partitionFormat"`
	// Whether or not to ignore unmatched path.
	PartitionFormatIgnoreError bool `pulumi:"partitionFormatIgnoreError"`
	// List of files expanded from a file GLOB specified
	Paths []string `pulumi:"paths"`
	// Relative path in the data store
	RelativePath string `pulumi:"relativePath"`
	// Sql Query/Table/Stored Procedure details.
	SqlDataPath *DatasetResponseSqlDataPath `pulumi:"sqlDataPath"`
}

// DatasetResponseDataPathInput is an input type that accepts DatasetResponseDataPathArgs and DatasetResponseDataPathOutput values.
// You can construct a concrete instance of `DatasetResponseDataPathInput` via:
//
//          DatasetResponseDataPathArgs{...}
type DatasetResponseDataPathInput interface {
	pulumi.Input

	ToDatasetResponseDataPathOutput() DatasetResponseDataPathOutput
	ToDatasetResponseDataPathOutputWithContext(context.Context) DatasetResponseDataPathOutput
}

type DatasetResponseDataPathArgs struct {
	// Additional Properties.
	AdditionalProperties pulumi.MapInput `pulumi:"additionalProperties"`
	// Azure path for Azure Blob or File
	AzureFilePath pulumi.StringInput `pulumi:"azureFilePath"`
	// Data store Name
	DatastoreName pulumi.StringInput `pulumi:"datastoreName"`
	// HTTP URL.
	HttpUrl pulumi.StringInput `pulumi:"httpUrl"`
	// Specify the partition format of path. Defaults to None.
	PartitionFormat pulumi.StringInput `pulumi:"partitionFormat"`
	// Whether or not to ignore unmatched path.
	PartitionFormatIgnoreError pulumi.BoolInput `pulumi:"partitionFormatIgnoreError"`
	// List of files expanded from a file GLOB specified
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Relative path in the data store
	RelativePath pulumi.StringInput `pulumi:"relativePath"`
	// Sql Query/Table/Stored Procedure details.
	SqlDataPath DatasetResponseSqlDataPathPtrInput `pulumi:"sqlDataPath"`
}

func (DatasetResponseDataPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetResponseDataPath)(nil)).Elem()
}

func (i DatasetResponseDataPathArgs) ToDatasetResponseDataPathOutput() DatasetResponseDataPathOutput {
	return i.ToDatasetResponseDataPathOutputWithContext(context.Background())
}

func (i DatasetResponseDataPathArgs) ToDatasetResponseDataPathOutputWithContext(ctx context.Context) DatasetResponseDataPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResponseDataPathOutput)
}

func (i DatasetResponseDataPathArgs) ToDatasetResponseDataPathPtrOutput() DatasetResponseDataPathPtrOutput {
	return i.ToDatasetResponseDataPathPtrOutputWithContext(context.Background())
}

func (i DatasetResponseDataPathArgs) ToDatasetResponseDataPathPtrOutputWithContext(ctx context.Context) DatasetResponseDataPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResponseDataPathOutput).ToDatasetResponseDataPathPtrOutputWithContext(ctx)
}

// DatasetResponseDataPathPtrInput is an input type that accepts DatasetResponseDataPathArgs, DatasetResponseDataPathPtr and DatasetResponseDataPathPtrOutput values.
// You can construct a concrete instance of `DatasetResponseDataPathPtrInput` via:
//
//          DatasetResponseDataPathArgs{...}
//
//  or:
//
//          nil
type DatasetResponseDataPathPtrInput interface {
	pulumi.Input

	ToDatasetResponseDataPathPtrOutput() DatasetResponseDataPathPtrOutput
	ToDatasetResponseDataPathPtrOutputWithContext(context.Context) DatasetResponseDataPathPtrOutput
}

type datasetResponseDataPathPtrType DatasetResponseDataPathArgs

func DatasetResponseDataPathPtr(v *DatasetResponseDataPathArgs) DatasetResponseDataPathPtrInput {
	return (*datasetResponseDataPathPtrType)(v)
}

func (*datasetResponseDataPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetResponseDataPath)(nil)).Elem()
}

func (i *datasetResponseDataPathPtrType) ToDatasetResponseDataPathPtrOutput() DatasetResponseDataPathPtrOutput {
	return i.ToDatasetResponseDataPathPtrOutputWithContext(context.Background())
}

func (i *datasetResponseDataPathPtrType) ToDatasetResponseDataPathPtrOutputWithContext(ctx context.Context) DatasetResponseDataPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResponseDataPathPtrOutput)
}

type DatasetResponseDataPathOutput struct{ *pulumi.OutputState }

func (DatasetResponseDataPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetResponseDataPath)(nil)).Elem()
}

func (o DatasetResponseDataPathOutput) ToDatasetResponseDataPathOutput() DatasetResponseDataPathOutput {
	return o
}

func (o DatasetResponseDataPathOutput) ToDatasetResponseDataPathOutputWithContext(ctx context.Context) DatasetResponseDataPathOutput {
	return o
}

func (o DatasetResponseDataPathOutput) ToDatasetResponseDataPathPtrOutput() DatasetResponseDataPathPtrOutput {
	return o.ToDatasetResponseDataPathPtrOutputWithContext(context.Background())
}

func (o DatasetResponseDataPathOutput) ToDatasetResponseDataPathPtrOutputWithContext(ctx context.Context) DatasetResponseDataPathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetResponseDataPath) *DatasetResponseDataPath {
		return &v
	}).(DatasetResponseDataPathPtrOutput)
}

// Additional Properties.
func (o DatasetResponseDataPathOutput) AdditionalProperties() pulumi.MapOutput {
	return o.ApplyT(func(v DatasetResponseDataPath) map[string]interface{} { return v.AdditionalProperties }).(pulumi.MapOutput)
}

// Azure path for Azure Blob or File
func (o DatasetResponseDataPathOutput) AzureFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseDataPath) string { return v.AzureFilePath }).(pulumi.StringOutput)
}

// Data store Name
func (o DatasetResponseDataPathOutput) DatastoreName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseDataPath) string { return v.DatastoreName }).(pulumi.StringOutput)
}

// HTTP URL.
func (o DatasetResponseDataPathOutput) HttpUrl() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseDataPath) string { return v.HttpUrl }).(pulumi.StringOutput)
}

// Specify the partition format of path. Defaults to None.
func (o DatasetResponseDataPathOutput) PartitionFormat() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseDataPath) string { return v.PartitionFormat }).(pulumi.StringOutput)
}

// Whether or not to ignore unmatched path.
func (o DatasetResponseDataPathOutput) PartitionFormatIgnoreError() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasetResponseDataPath) bool { return v.PartitionFormatIgnoreError }).(pulumi.BoolOutput)
}

// List of files expanded from a file GLOB specified
func (o DatasetResponseDataPathOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatasetResponseDataPath) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Relative path in the data store
func (o DatasetResponseDataPathOutput) RelativePath() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseDataPath) string { return v.RelativePath }).(pulumi.StringOutput)
}

// Sql Query/Table/Stored Procedure details.
func (o DatasetResponseDataPathOutput) SqlDataPath() DatasetResponseSqlDataPathPtrOutput {
	return o.ApplyT(func(v DatasetResponseDataPath) *DatasetResponseSqlDataPath { return v.SqlDataPath }).(DatasetResponseSqlDataPathPtrOutput)
}

type DatasetResponseDataPathPtrOutput struct{ *pulumi.OutputState }

func (DatasetResponseDataPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetResponseDataPath)(nil)).Elem()
}

func (o DatasetResponseDataPathPtrOutput) ToDatasetResponseDataPathPtrOutput() DatasetResponseDataPathPtrOutput {
	return o
}

func (o DatasetResponseDataPathPtrOutput) ToDatasetResponseDataPathPtrOutputWithContext(ctx context.Context) DatasetResponseDataPathPtrOutput {
	return o
}

func (o DatasetResponseDataPathPtrOutput) Elem() DatasetResponseDataPathOutput {
	return o.ApplyT(func(v *DatasetResponseDataPath) DatasetResponseDataPath {
		if v != nil {
			return *v
		}
		var ret DatasetResponseDataPath
		return ret
	}).(DatasetResponseDataPathOutput)
}

// Additional Properties.
func (o DatasetResponseDataPathPtrOutput) AdditionalProperties() pulumi.MapOutput {
	return o.ApplyT(func(v *DatasetResponseDataPath) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AdditionalProperties
	}).(pulumi.MapOutput)
}

// Azure path for Azure Blob or File
func (o DatasetResponseDataPathPtrOutput) AzureFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseDataPath) *string {
		if v == nil {
			return nil
		}
		return &v.AzureFilePath
	}).(pulumi.StringPtrOutput)
}

// Data store Name
func (o DatasetResponseDataPathPtrOutput) DatastoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseDataPath) *string {
		if v == nil {
			return nil
		}
		return &v.DatastoreName
	}).(pulumi.StringPtrOutput)
}

// HTTP URL.
func (o DatasetResponseDataPathPtrOutput) HttpUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseDataPath) *string {
		if v == nil {
			return nil
		}
		return &v.HttpUrl
	}).(pulumi.StringPtrOutput)
}

// Specify the partition format of path. Defaults to None.
func (o DatasetResponseDataPathPtrOutput) PartitionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseDataPath) *string {
		if v == nil {
			return nil
		}
		return &v.PartitionFormat
	}).(pulumi.StringPtrOutput)
}

// Whether or not to ignore unmatched path.
func (o DatasetResponseDataPathPtrOutput) PartitionFormatIgnoreError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetResponseDataPath) *bool {
		if v == nil {
			return nil
		}
		return &v.PartitionFormatIgnoreError
	}).(pulumi.BoolPtrOutput)
}

// List of files expanded from a file GLOB specified
func (o DatasetResponseDataPathPtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatasetResponseDataPath) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

// Relative path in the data store
func (o DatasetResponseDataPathPtrOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseDataPath) *string {
		if v == nil {
			return nil
		}
		return &v.RelativePath
	}).(pulumi.StringPtrOutput)
}

// Sql Query/Table/Stored Procedure details.
func (o DatasetResponseDataPathPtrOutput) SqlDataPath() DatasetResponseSqlDataPathPtrOutput {
	return o.ApplyT(func(v *DatasetResponseDataPath) *DatasetResponseSqlDataPath {
		if v == nil {
			return nil
		}
		return v.SqlDataPath
	}).(DatasetResponseSqlDataPathPtrOutput)
}

type DatasetResponseLatest struct {
	// User who created.
	CreatedBy *UserInfoResponse `pulumi:"createdBy"`
	// The dataset creation time (UTC).
	CreatedTime string `pulumi:"createdTime"`
	//  Datastore and reference to location of data such as relativePath, Sql Query and etc.
	DataPath *DatasetResponseDataPath `pulumi:"dataPath"`
	// Dataflow Json
	Dataflow string `pulumi:"dataflow"`
	// Dataset state
	DatasetDefinitionState *DatasetStateResponse `pulumi:"datasetDefinitionState"`
	// Unique Dataset identifier.
	DatasetId string `pulumi:"datasetId"`
	// Description about the dataset.
	Description string `pulumi:"description"`
	// eTag description
	Etag string `pulumi:"etag"`
	// Dataset FileType, specified by user.
	FileType string `pulumi:"fileType"`
	// The dataset last modified time (UTC).
	ModifiedTime string `pulumi:"modifiedTime"`
	// Summary of Definition changes.
	Notes string `pulumi:"notes"`
	// Indicates how the source data is partitioned. This is defined to filter on a range of partitioned data before performing actions or materialization.
	PartitionFormatInPath bool `pulumi:"partitionFormatInPath"`
	// Properties stores information like name of time series column for time series dataset.
	Properties map[string]interface{} `pulumi:"properties"`
	// Indicates the saved dataset this definition is mapping to, populated on Get.
	SavedDatasetId string `pulumi:"savedDatasetId"`
	// Tags associated with the dataset.
	Tags map[string]string `pulumi:"tags"`
	//  Telemetry information about the dataset including information like which service the dataset was created from.
	TelemetryInfo map[string]string `pulumi:"telemetryInfo"`
	//  Whether to use description and tags from the definition level as opposed to dataset level (old behavior).
	UseDescriptionTagsFromDefinition bool `pulumi:"useDescriptionTagsFromDefinition"`
	// An identifier uniquely identifies a definition change.
	VersionId string `pulumi:"versionId"`
}

// DatasetResponseLatestInput is an input type that accepts DatasetResponseLatestArgs and DatasetResponseLatestOutput values.
// You can construct a concrete instance of `DatasetResponseLatestInput` via:
//
//          DatasetResponseLatestArgs{...}
type DatasetResponseLatestInput interface {
	pulumi.Input

	ToDatasetResponseLatestOutput() DatasetResponseLatestOutput
	ToDatasetResponseLatestOutputWithContext(context.Context) DatasetResponseLatestOutput
}

type DatasetResponseLatestArgs struct {
	// User who created.
	CreatedBy UserInfoResponsePtrInput `pulumi:"createdBy"`
	// The dataset creation time (UTC).
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	//  Datastore and reference to location of data such as relativePath, Sql Query and etc.
	DataPath DatasetResponseDataPathPtrInput `pulumi:"dataPath"`
	// Dataflow Json
	Dataflow pulumi.StringInput `pulumi:"dataflow"`
	// Dataset state
	DatasetDefinitionState DatasetStateResponsePtrInput `pulumi:"datasetDefinitionState"`
	// Unique Dataset identifier.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// Description about the dataset.
	Description pulumi.StringInput `pulumi:"description"`
	// eTag description
	Etag pulumi.StringInput `pulumi:"etag"`
	// Dataset FileType, specified by user.
	FileType pulumi.StringInput `pulumi:"fileType"`
	// The dataset last modified time (UTC).
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	// Summary of Definition changes.
	Notes pulumi.StringInput `pulumi:"notes"`
	// Indicates how the source data is partitioned. This is defined to filter on a range of partitioned data before performing actions or materialization.
	PartitionFormatInPath pulumi.BoolInput `pulumi:"partitionFormatInPath"`
	// Properties stores information like name of time series column for time series dataset.
	Properties pulumi.MapInput `pulumi:"properties"`
	// Indicates the saved dataset this definition is mapping to, populated on Get.
	SavedDatasetId pulumi.StringInput `pulumi:"savedDatasetId"`
	// Tags associated with the dataset.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	//  Telemetry information about the dataset including information like which service the dataset was created from.
	TelemetryInfo pulumi.StringMapInput `pulumi:"telemetryInfo"`
	//  Whether to use description and tags from the definition level as opposed to dataset level (old behavior).
	UseDescriptionTagsFromDefinition pulumi.BoolInput `pulumi:"useDescriptionTagsFromDefinition"`
	// An identifier uniquely identifies a definition change.
	VersionId pulumi.StringInput `pulumi:"versionId"`
}

func (DatasetResponseLatestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetResponseLatest)(nil)).Elem()
}

func (i DatasetResponseLatestArgs) ToDatasetResponseLatestOutput() DatasetResponseLatestOutput {
	return i.ToDatasetResponseLatestOutputWithContext(context.Background())
}

func (i DatasetResponseLatestArgs) ToDatasetResponseLatestOutputWithContext(ctx context.Context) DatasetResponseLatestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResponseLatestOutput)
}

func (i DatasetResponseLatestArgs) ToDatasetResponseLatestPtrOutput() DatasetResponseLatestPtrOutput {
	return i.ToDatasetResponseLatestPtrOutputWithContext(context.Background())
}

func (i DatasetResponseLatestArgs) ToDatasetResponseLatestPtrOutputWithContext(ctx context.Context) DatasetResponseLatestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResponseLatestOutput).ToDatasetResponseLatestPtrOutputWithContext(ctx)
}

// DatasetResponseLatestPtrInput is an input type that accepts DatasetResponseLatestArgs, DatasetResponseLatestPtr and DatasetResponseLatestPtrOutput values.
// You can construct a concrete instance of `DatasetResponseLatestPtrInput` via:
//
//          DatasetResponseLatestArgs{...}
//
//  or:
//
//          nil
type DatasetResponseLatestPtrInput interface {
	pulumi.Input

	ToDatasetResponseLatestPtrOutput() DatasetResponseLatestPtrOutput
	ToDatasetResponseLatestPtrOutputWithContext(context.Context) DatasetResponseLatestPtrOutput
}

type datasetResponseLatestPtrType DatasetResponseLatestArgs

func DatasetResponseLatestPtr(v *DatasetResponseLatestArgs) DatasetResponseLatestPtrInput {
	return (*datasetResponseLatestPtrType)(v)
}

func (*datasetResponseLatestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetResponseLatest)(nil)).Elem()
}

func (i *datasetResponseLatestPtrType) ToDatasetResponseLatestPtrOutput() DatasetResponseLatestPtrOutput {
	return i.ToDatasetResponseLatestPtrOutputWithContext(context.Background())
}

func (i *datasetResponseLatestPtrType) ToDatasetResponseLatestPtrOutputWithContext(ctx context.Context) DatasetResponseLatestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResponseLatestPtrOutput)
}

type DatasetResponseLatestOutput struct{ *pulumi.OutputState }

func (DatasetResponseLatestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetResponseLatest)(nil)).Elem()
}

func (o DatasetResponseLatestOutput) ToDatasetResponseLatestOutput() DatasetResponseLatestOutput {
	return o
}

func (o DatasetResponseLatestOutput) ToDatasetResponseLatestOutputWithContext(ctx context.Context) DatasetResponseLatestOutput {
	return o
}

func (o DatasetResponseLatestOutput) ToDatasetResponseLatestPtrOutput() DatasetResponseLatestPtrOutput {
	return o.ToDatasetResponseLatestPtrOutputWithContext(context.Background())
}

func (o DatasetResponseLatestOutput) ToDatasetResponseLatestPtrOutputWithContext(ctx context.Context) DatasetResponseLatestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetResponseLatest) *DatasetResponseLatest {
		return &v
	}).(DatasetResponseLatestPtrOutput)
}

// User who created.
func (o DatasetResponseLatestOutput) CreatedBy() UserInfoResponsePtrOutput {
	return o.ApplyT(func(v DatasetResponseLatest) *UserInfoResponse { return v.CreatedBy }).(UserInfoResponsePtrOutput)
}

// The dataset creation time (UTC).
func (o DatasetResponseLatestOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseLatest) string { return v.CreatedTime }).(pulumi.StringOutput)
}

//  Datastore and reference to location of data such as relativePath, Sql Query and etc.
func (o DatasetResponseLatestOutput) DataPath() DatasetResponseDataPathPtrOutput {
	return o.ApplyT(func(v DatasetResponseLatest) *DatasetResponseDataPath { return v.DataPath }).(DatasetResponseDataPathPtrOutput)
}

// Dataflow Json
func (o DatasetResponseLatestOutput) Dataflow() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseLatest) string { return v.Dataflow }).(pulumi.StringOutput)
}

// Dataset state
func (o DatasetResponseLatestOutput) DatasetDefinitionState() DatasetStateResponsePtrOutput {
	return o.ApplyT(func(v DatasetResponseLatest) *DatasetStateResponse { return v.DatasetDefinitionState }).(DatasetStateResponsePtrOutput)
}

// Unique Dataset identifier.
func (o DatasetResponseLatestOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseLatest) string { return v.DatasetId }).(pulumi.StringOutput)
}

// Description about the dataset.
func (o DatasetResponseLatestOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseLatest) string { return v.Description }).(pulumi.StringOutput)
}

// eTag description
func (o DatasetResponseLatestOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseLatest) string { return v.Etag }).(pulumi.StringOutput)
}

// Dataset FileType, specified by user.
func (o DatasetResponseLatestOutput) FileType() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseLatest) string { return v.FileType }).(pulumi.StringOutput)
}

// The dataset last modified time (UTC).
func (o DatasetResponseLatestOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseLatest) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// Summary of Definition changes.
func (o DatasetResponseLatestOutput) Notes() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseLatest) string { return v.Notes }).(pulumi.StringOutput)
}

// Indicates how the source data is partitioned. This is defined to filter on a range of partitioned data before performing actions or materialization.
func (o DatasetResponseLatestOutput) PartitionFormatInPath() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasetResponseLatest) bool { return v.PartitionFormatInPath }).(pulumi.BoolOutput)
}

// Properties stores information like name of time series column for time series dataset.
func (o DatasetResponseLatestOutput) Properties() pulumi.MapOutput {
	return o.ApplyT(func(v DatasetResponseLatest) map[string]interface{} { return v.Properties }).(pulumi.MapOutput)
}

// Indicates the saved dataset this definition is mapping to, populated on Get.
func (o DatasetResponseLatestOutput) SavedDatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseLatest) string { return v.SavedDatasetId }).(pulumi.StringOutput)
}

// Tags associated with the dataset.
func (o DatasetResponseLatestOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatasetResponseLatest) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

//  Telemetry information about the dataset including information like which service the dataset was created from.
func (o DatasetResponseLatestOutput) TelemetryInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatasetResponseLatest) map[string]string { return v.TelemetryInfo }).(pulumi.StringMapOutput)
}

//  Whether to use description and tags from the definition level as opposed to dataset level (old behavior).
func (o DatasetResponseLatestOutput) UseDescriptionTagsFromDefinition() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasetResponseLatest) bool { return v.UseDescriptionTagsFromDefinition }).(pulumi.BoolOutput)
}

// An identifier uniquely identifies a definition change.
func (o DatasetResponseLatestOutput) VersionId() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseLatest) string { return v.VersionId }).(pulumi.StringOutput)
}

type DatasetResponseLatestPtrOutput struct{ *pulumi.OutputState }

func (DatasetResponseLatestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetResponseLatest)(nil)).Elem()
}

func (o DatasetResponseLatestPtrOutput) ToDatasetResponseLatestPtrOutput() DatasetResponseLatestPtrOutput {
	return o
}

func (o DatasetResponseLatestPtrOutput) ToDatasetResponseLatestPtrOutputWithContext(ctx context.Context) DatasetResponseLatestPtrOutput {
	return o
}

func (o DatasetResponseLatestPtrOutput) Elem() DatasetResponseLatestOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) DatasetResponseLatest {
		if v != nil {
			return *v
		}
		var ret DatasetResponseLatest
		return ret
	}).(DatasetResponseLatestOutput)
}

// User who created.
func (o DatasetResponseLatestPtrOutput) CreatedBy() UserInfoResponsePtrOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) *UserInfoResponse {
		if v == nil {
			return nil
		}
		return v.CreatedBy
	}).(UserInfoResponsePtrOutput)
}

// The dataset creation time (UTC).
func (o DatasetResponseLatestPtrOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedTime
	}).(pulumi.StringPtrOutput)
}

//  Datastore and reference to location of data such as relativePath, Sql Query and etc.
func (o DatasetResponseLatestPtrOutput) DataPath() DatasetResponseDataPathPtrOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) *DatasetResponseDataPath {
		if v == nil {
			return nil
		}
		return v.DataPath
	}).(DatasetResponseDataPathPtrOutput)
}

// Dataflow Json
func (o DatasetResponseLatestPtrOutput) Dataflow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) *string {
		if v == nil {
			return nil
		}
		return &v.Dataflow
	}).(pulumi.StringPtrOutput)
}

// Dataset state
func (o DatasetResponseLatestPtrOutput) DatasetDefinitionState() DatasetStateResponsePtrOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) *DatasetStateResponse {
		if v == nil {
			return nil
		}
		return v.DatasetDefinitionState
	}).(DatasetStateResponsePtrOutput)
}

// Unique Dataset identifier.
func (o DatasetResponseLatestPtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetId
	}).(pulumi.StringPtrOutput)
}

// Description about the dataset.
func (o DatasetResponseLatestPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// eTag description
func (o DatasetResponseLatestPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Dataset FileType, specified by user.
func (o DatasetResponseLatestPtrOutput) FileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) *string {
		if v == nil {
			return nil
		}
		return &v.FileType
	}).(pulumi.StringPtrOutput)
}

// The dataset last modified time (UTC).
func (o DatasetResponseLatestPtrOutput) ModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) *string {
		if v == nil {
			return nil
		}
		return &v.ModifiedTime
	}).(pulumi.StringPtrOutput)
}

// Summary of Definition changes.
func (o DatasetResponseLatestPtrOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) *string {
		if v == nil {
			return nil
		}
		return &v.Notes
	}).(pulumi.StringPtrOutput)
}

// Indicates how the source data is partitioned. This is defined to filter on a range of partitioned data before performing actions or materialization.
func (o DatasetResponseLatestPtrOutput) PartitionFormatInPath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) *bool {
		if v == nil {
			return nil
		}
		return &v.PartitionFormatInPath
	}).(pulumi.BoolPtrOutput)
}

// Properties stores information like name of time series column for time series dataset.
func (o DatasetResponseLatestPtrOutput) Properties() pulumi.MapOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.MapOutput)
}

// Indicates the saved dataset this definition is mapping to, populated on Get.
func (o DatasetResponseLatestPtrOutput) SavedDatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) *string {
		if v == nil {
			return nil
		}
		return &v.SavedDatasetId
	}).(pulumi.StringPtrOutput)
}

// Tags associated with the dataset.
func (o DatasetResponseLatestPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

//  Telemetry information about the dataset including information like which service the dataset was created from.
func (o DatasetResponseLatestPtrOutput) TelemetryInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) map[string]string {
		if v == nil {
			return nil
		}
		return v.TelemetryInfo
	}).(pulumi.StringMapOutput)
}

//  Whether to use description and tags from the definition level as opposed to dataset level (old behavior).
func (o DatasetResponseLatestPtrOutput) UseDescriptionTagsFromDefinition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) *bool {
		if v == nil {
			return nil
		}
		return &v.UseDescriptionTagsFromDefinition
	}).(pulumi.BoolPtrOutput)
}

// An identifier uniquely identifies a definition change.
func (o DatasetResponseLatestPtrOutput) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseLatest) *string {
		if v == nil {
			return nil
		}
		return &v.VersionId
	}).(pulumi.StringPtrOutput)
}

type DatasetResponseSqlDataPath struct {
	// SQL query timeout. Unit in seconds.
	QueryTimeout float64 `pulumi:"queryTimeout"`
	// SQL query
	SqlQuery string `pulumi:"sqlQuery"`
	// SQL storedProcedure name
	SqlStoredProcedureName string `pulumi:"sqlStoredProcedureName"`
	// SQL table name
	SqlTableName string `pulumi:"sqlTableName"`
}

// DatasetResponseSqlDataPathInput is an input type that accepts DatasetResponseSqlDataPathArgs and DatasetResponseSqlDataPathOutput values.
// You can construct a concrete instance of `DatasetResponseSqlDataPathInput` via:
//
//          DatasetResponseSqlDataPathArgs{...}
type DatasetResponseSqlDataPathInput interface {
	pulumi.Input

	ToDatasetResponseSqlDataPathOutput() DatasetResponseSqlDataPathOutput
	ToDatasetResponseSqlDataPathOutputWithContext(context.Context) DatasetResponseSqlDataPathOutput
}

type DatasetResponseSqlDataPathArgs struct {
	// SQL query timeout. Unit in seconds.
	QueryTimeout pulumi.Float64Input `pulumi:"queryTimeout"`
	// SQL query
	SqlQuery pulumi.StringInput `pulumi:"sqlQuery"`
	// SQL storedProcedure name
	SqlStoredProcedureName pulumi.StringInput `pulumi:"sqlStoredProcedureName"`
	// SQL table name
	SqlTableName pulumi.StringInput `pulumi:"sqlTableName"`
}

func (DatasetResponseSqlDataPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetResponseSqlDataPath)(nil)).Elem()
}

func (i DatasetResponseSqlDataPathArgs) ToDatasetResponseSqlDataPathOutput() DatasetResponseSqlDataPathOutput {
	return i.ToDatasetResponseSqlDataPathOutputWithContext(context.Background())
}

func (i DatasetResponseSqlDataPathArgs) ToDatasetResponseSqlDataPathOutputWithContext(ctx context.Context) DatasetResponseSqlDataPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResponseSqlDataPathOutput)
}

func (i DatasetResponseSqlDataPathArgs) ToDatasetResponseSqlDataPathPtrOutput() DatasetResponseSqlDataPathPtrOutput {
	return i.ToDatasetResponseSqlDataPathPtrOutputWithContext(context.Background())
}

func (i DatasetResponseSqlDataPathArgs) ToDatasetResponseSqlDataPathPtrOutputWithContext(ctx context.Context) DatasetResponseSqlDataPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResponseSqlDataPathOutput).ToDatasetResponseSqlDataPathPtrOutputWithContext(ctx)
}

// DatasetResponseSqlDataPathPtrInput is an input type that accepts DatasetResponseSqlDataPathArgs, DatasetResponseSqlDataPathPtr and DatasetResponseSqlDataPathPtrOutput values.
// You can construct a concrete instance of `DatasetResponseSqlDataPathPtrInput` via:
//
//          DatasetResponseSqlDataPathArgs{...}
//
//  or:
//
//          nil
type DatasetResponseSqlDataPathPtrInput interface {
	pulumi.Input

	ToDatasetResponseSqlDataPathPtrOutput() DatasetResponseSqlDataPathPtrOutput
	ToDatasetResponseSqlDataPathPtrOutputWithContext(context.Context) DatasetResponseSqlDataPathPtrOutput
}

type datasetResponseSqlDataPathPtrType DatasetResponseSqlDataPathArgs

func DatasetResponseSqlDataPathPtr(v *DatasetResponseSqlDataPathArgs) DatasetResponseSqlDataPathPtrInput {
	return (*datasetResponseSqlDataPathPtrType)(v)
}

func (*datasetResponseSqlDataPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetResponseSqlDataPath)(nil)).Elem()
}

func (i *datasetResponseSqlDataPathPtrType) ToDatasetResponseSqlDataPathPtrOutput() DatasetResponseSqlDataPathPtrOutput {
	return i.ToDatasetResponseSqlDataPathPtrOutputWithContext(context.Background())
}

func (i *datasetResponseSqlDataPathPtrType) ToDatasetResponseSqlDataPathPtrOutputWithContext(ctx context.Context) DatasetResponseSqlDataPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResponseSqlDataPathPtrOutput)
}

type DatasetResponseSqlDataPathOutput struct{ *pulumi.OutputState }

func (DatasetResponseSqlDataPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetResponseSqlDataPath)(nil)).Elem()
}

func (o DatasetResponseSqlDataPathOutput) ToDatasetResponseSqlDataPathOutput() DatasetResponseSqlDataPathOutput {
	return o
}

func (o DatasetResponseSqlDataPathOutput) ToDatasetResponseSqlDataPathOutputWithContext(ctx context.Context) DatasetResponseSqlDataPathOutput {
	return o
}

func (o DatasetResponseSqlDataPathOutput) ToDatasetResponseSqlDataPathPtrOutput() DatasetResponseSqlDataPathPtrOutput {
	return o.ToDatasetResponseSqlDataPathPtrOutputWithContext(context.Background())
}

func (o DatasetResponseSqlDataPathOutput) ToDatasetResponseSqlDataPathPtrOutputWithContext(ctx context.Context) DatasetResponseSqlDataPathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetResponseSqlDataPath) *DatasetResponseSqlDataPath {
		return &v
	}).(DatasetResponseSqlDataPathPtrOutput)
}

// SQL query timeout. Unit in seconds.
func (o DatasetResponseSqlDataPathOutput) QueryTimeout() pulumi.Float64Output {
	return o.ApplyT(func(v DatasetResponseSqlDataPath) float64 { return v.QueryTimeout }).(pulumi.Float64Output)
}

// SQL query
func (o DatasetResponseSqlDataPathOutput) SqlQuery() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseSqlDataPath) string { return v.SqlQuery }).(pulumi.StringOutput)
}

// SQL storedProcedure name
func (o DatasetResponseSqlDataPathOutput) SqlStoredProcedureName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseSqlDataPath) string { return v.SqlStoredProcedureName }).(pulumi.StringOutput)
}

// SQL table name
func (o DatasetResponseSqlDataPathOutput) SqlTableName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResponseSqlDataPath) string { return v.SqlTableName }).(pulumi.StringOutput)
}

type DatasetResponseSqlDataPathPtrOutput struct{ *pulumi.OutputState }

func (DatasetResponseSqlDataPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetResponseSqlDataPath)(nil)).Elem()
}

func (o DatasetResponseSqlDataPathPtrOutput) ToDatasetResponseSqlDataPathPtrOutput() DatasetResponseSqlDataPathPtrOutput {
	return o
}

func (o DatasetResponseSqlDataPathPtrOutput) ToDatasetResponseSqlDataPathPtrOutputWithContext(ctx context.Context) DatasetResponseSqlDataPathPtrOutput {
	return o
}

func (o DatasetResponseSqlDataPathPtrOutput) Elem() DatasetResponseSqlDataPathOutput {
	return o.ApplyT(func(v *DatasetResponseSqlDataPath) DatasetResponseSqlDataPath {
		if v != nil {
			return *v
		}
		var ret DatasetResponseSqlDataPath
		return ret
	}).(DatasetResponseSqlDataPathOutput)
}

// SQL query timeout. Unit in seconds.
func (o DatasetResponseSqlDataPathPtrOutput) QueryTimeout() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DatasetResponseSqlDataPath) *float64 {
		if v == nil {
			return nil
		}
		return &v.QueryTimeout
	}).(pulumi.Float64PtrOutput)
}

// SQL query
func (o DatasetResponseSqlDataPathPtrOutput) SqlQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseSqlDataPath) *string {
		if v == nil {
			return nil
		}
		return &v.SqlQuery
	}).(pulumi.StringPtrOutput)
}

// SQL storedProcedure name
func (o DatasetResponseSqlDataPathPtrOutput) SqlStoredProcedureName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseSqlDataPath) *string {
		if v == nil {
			return nil
		}
		return &v.SqlStoredProcedureName
	}).(pulumi.StringPtrOutput)
}

// SQL table name
func (o DatasetResponseSqlDataPathPtrOutput) SqlTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResponseSqlDataPath) *string {
		if v == nil {
			return nil
		}
		return &v.SqlTableName
	}).(pulumi.StringPtrOutput)
}

type DatasetStateResponse struct {
	// Reference to better Dataset or a Definition
	DeprecatedBy *DatasetStateResponseDeprecatedBy `pulumi:"deprecatedBy"`
	// eTag description
	Etag string `pulumi:"etag"`
	// Dataset state
	State *string `pulumi:"state"`
}

// DatasetStateResponseInput is an input type that accepts DatasetStateResponseArgs and DatasetStateResponseOutput values.
// You can construct a concrete instance of `DatasetStateResponseInput` via:
//
//          DatasetStateResponseArgs{...}
type DatasetStateResponseInput interface {
	pulumi.Input

	ToDatasetStateResponseOutput() DatasetStateResponseOutput
	ToDatasetStateResponseOutputWithContext(context.Context) DatasetStateResponseOutput
}

type DatasetStateResponseArgs struct {
	// Reference to better Dataset or a Definition
	DeprecatedBy DatasetStateResponseDeprecatedByPtrInput `pulumi:"deprecatedBy"`
	// eTag description
	Etag pulumi.StringInput `pulumi:"etag"`
	// Dataset state
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (DatasetStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetStateResponse)(nil)).Elem()
}

func (i DatasetStateResponseArgs) ToDatasetStateResponseOutput() DatasetStateResponseOutput {
	return i.ToDatasetStateResponseOutputWithContext(context.Background())
}

func (i DatasetStateResponseArgs) ToDatasetStateResponseOutputWithContext(ctx context.Context) DatasetStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetStateResponseOutput)
}

func (i DatasetStateResponseArgs) ToDatasetStateResponsePtrOutput() DatasetStateResponsePtrOutput {
	return i.ToDatasetStateResponsePtrOutputWithContext(context.Background())
}

func (i DatasetStateResponseArgs) ToDatasetStateResponsePtrOutputWithContext(ctx context.Context) DatasetStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetStateResponseOutput).ToDatasetStateResponsePtrOutputWithContext(ctx)
}

// DatasetStateResponsePtrInput is an input type that accepts DatasetStateResponseArgs, DatasetStateResponsePtr and DatasetStateResponsePtrOutput values.
// You can construct a concrete instance of `DatasetStateResponsePtrInput` via:
//
//          DatasetStateResponseArgs{...}
//
//  or:
//
//          nil
type DatasetStateResponsePtrInput interface {
	pulumi.Input

	ToDatasetStateResponsePtrOutput() DatasetStateResponsePtrOutput
	ToDatasetStateResponsePtrOutputWithContext(context.Context) DatasetStateResponsePtrOutput
}

type datasetStateResponsePtrType DatasetStateResponseArgs

func DatasetStateResponsePtr(v *DatasetStateResponseArgs) DatasetStateResponsePtrInput {
	return (*datasetStateResponsePtrType)(v)
}

func (*datasetStateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetStateResponse)(nil)).Elem()
}

func (i *datasetStateResponsePtrType) ToDatasetStateResponsePtrOutput() DatasetStateResponsePtrOutput {
	return i.ToDatasetStateResponsePtrOutputWithContext(context.Background())
}

func (i *datasetStateResponsePtrType) ToDatasetStateResponsePtrOutputWithContext(ctx context.Context) DatasetStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetStateResponsePtrOutput)
}

type DatasetStateResponseOutput struct{ *pulumi.OutputState }

func (DatasetStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetStateResponse)(nil)).Elem()
}

func (o DatasetStateResponseOutput) ToDatasetStateResponseOutput() DatasetStateResponseOutput {
	return o
}

func (o DatasetStateResponseOutput) ToDatasetStateResponseOutputWithContext(ctx context.Context) DatasetStateResponseOutput {
	return o
}

func (o DatasetStateResponseOutput) ToDatasetStateResponsePtrOutput() DatasetStateResponsePtrOutput {
	return o.ToDatasetStateResponsePtrOutputWithContext(context.Background())
}

func (o DatasetStateResponseOutput) ToDatasetStateResponsePtrOutputWithContext(ctx context.Context) DatasetStateResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetStateResponse) *DatasetStateResponse {
		return &v
	}).(DatasetStateResponsePtrOutput)
}

// Reference to better Dataset or a Definition
func (o DatasetStateResponseOutput) DeprecatedBy() DatasetStateResponseDeprecatedByPtrOutput {
	return o.ApplyT(func(v DatasetStateResponse) *DatasetStateResponseDeprecatedBy { return v.DeprecatedBy }).(DatasetStateResponseDeprecatedByPtrOutput)
}

// eTag description
func (o DatasetStateResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetStateResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Dataset state
func (o DatasetStateResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetStateResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type DatasetStateResponsePtrOutput struct{ *pulumi.OutputState }

func (DatasetStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetStateResponse)(nil)).Elem()
}

func (o DatasetStateResponsePtrOutput) ToDatasetStateResponsePtrOutput() DatasetStateResponsePtrOutput {
	return o
}

func (o DatasetStateResponsePtrOutput) ToDatasetStateResponsePtrOutputWithContext(ctx context.Context) DatasetStateResponsePtrOutput {
	return o
}

func (o DatasetStateResponsePtrOutput) Elem() DatasetStateResponseOutput {
	return o.ApplyT(func(v *DatasetStateResponse) DatasetStateResponse {
		if v != nil {
			return *v
		}
		var ret DatasetStateResponse
		return ret
	}).(DatasetStateResponseOutput)
}

// Reference to better Dataset or a Definition
func (o DatasetStateResponsePtrOutput) DeprecatedBy() DatasetStateResponseDeprecatedByPtrOutput {
	return o.ApplyT(func(v *DatasetStateResponse) *DatasetStateResponseDeprecatedBy {
		if v == nil {
			return nil
		}
		return v.DeprecatedBy
	}).(DatasetStateResponseDeprecatedByPtrOutput)
}

// eTag description
func (o DatasetStateResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Dataset state
func (o DatasetStateResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

type DatasetStateResponseDeprecatedBy struct {
	// Unique Dataset identifier.
	DatasetId string `pulumi:"datasetId"`
	// Definition Version
	DefinitionVersion *string `pulumi:"definitionVersion"`
}

// DatasetStateResponseDeprecatedByInput is an input type that accepts DatasetStateResponseDeprecatedByArgs and DatasetStateResponseDeprecatedByOutput values.
// You can construct a concrete instance of `DatasetStateResponseDeprecatedByInput` via:
//
//          DatasetStateResponseDeprecatedByArgs{...}
type DatasetStateResponseDeprecatedByInput interface {
	pulumi.Input

	ToDatasetStateResponseDeprecatedByOutput() DatasetStateResponseDeprecatedByOutput
	ToDatasetStateResponseDeprecatedByOutputWithContext(context.Context) DatasetStateResponseDeprecatedByOutput
}

type DatasetStateResponseDeprecatedByArgs struct {
	// Unique Dataset identifier.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// Definition Version
	DefinitionVersion pulumi.StringPtrInput `pulumi:"definitionVersion"`
}

func (DatasetStateResponseDeprecatedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetStateResponseDeprecatedBy)(nil)).Elem()
}

func (i DatasetStateResponseDeprecatedByArgs) ToDatasetStateResponseDeprecatedByOutput() DatasetStateResponseDeprecatedByOutput {
	return i.ToDatasetStateResponseDeprecatedByOutputWithContext(context.Background())
}

func (i DatasetStateResponseDeprecatedByArgs) ToDatasetStateResponseDeprecatedByOutputWithContext(ctx context.Context) DatasetStateResponseDeprecatedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetStateResponseDeprecatedByOutput)
}

func (i DatasetStateResponseDeprecatedByArgs) ToDatasetStateResponseDeprecatedByPtrOutput() DatasetStateResponseDeprecatedByPtrOutput {
	return i.ToDatasetStateResponseDeprecatedByPtrOutputWithContext(context.Background())
}

func (i DatasetStateResponseDeprecatedByArgs) ToDatasetStateResponseDeprecatedByPtrOutputWithContext(ctx context.Context) DatasetStateResponseDeprecatedByPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetStateResponseDeprecatedByOutput).ToDatasetStateResponseDeprecatedByPtrOutputWithContext(ctx)
}

// DatasetStateResponseDeprecatedByPtrInput is an input type that accepts DatasetStateResponseDeprecatedByArgs, DatasetStateResponseDeprecatedByPtr and DatasetStateResponseDeprecatedByPtrOutput values.
// You can construct a concrete instance of `DatasetStateResponseDeprecatedByPtrInput` via:
//
//          DatasetStateResponseDeprecatedByArgs{...}
//
//  or:
//
//          nil
type DatasetStateResponseDeprecatedByPtrInput interface {
	pulumi.Input

	ToDatasetStateResponseDeprecatedByPtrOutput() DatasetStateResponseDeprecatedByPtrOutput
	ToDatasetStateResponseDeprecatedByPtrOutputWithContext(context.Context) DatasetStateResponseDeprecatedByPtrOutput
}

type datasetStateResponseDeprecatedByPtrType DatasetStateResponseDeprecatedByArgs

func DatasetStateResponseDeprecatedByPtr(v *DatasetStateResponseDeprecatedByArgs) DatasetStateResponseDeprecatedByPtrInput {
	return (*datasetStateResponseDeprecatedByPtrType)(v)
}

func (*datasetStateResponseDeprecatedByPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetStateResponseDeprecatedBy)(nil)).Elem()
}

func (i *datasetStateResponseDeprecatedByPtrType) ToDatasetStateResponseDeprecatedByPtrOutput() DatasetStateResponseDeprecatedByPtrOutput {
	return i.ToDatasetStateResponseDeprecatedByPtrOutputWithContext(context.Background())
}

func (i *datasetStateResponseDeprecatedByPtrType) ToDatasetStateResponseDeprecatedByPtrOutputWithContext(ctx context.Context) DatasetStateResponseDeprecatedByPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetStateResponseDeprecatedByPtrOutput)
}

type DatasetStateResponseDeprecatedByOutput struct{ *pulumi.OutputState }

func (DatasetStateResponseDeprecatedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetStateResponseDeprecatedBy)(nil)).Elem()
}

func (o DatasetStateResponseDeprecatedByOutput) ToDatasetStateResponseDeprecatedByOutput() DatasetStateResponseDeprecatedByOutput {
	return o
}

func (o DatasetStateResponseDeprecatedByOutput) ToDatasetStateResponseDeprecatedByOutputWithContext(ctx context.Context) DatasetStateResponseDeprecatedByOutput {
	return o
}

func (o DatasetStateResponseDeprecatedByOutput) ToDatasetStateResponseDeprecatedByPtrOutput() DatasetStateResponseDeprecatedByPtrOutput {
	return o.ToDatasetStateResponseDeprecatedByPtrOutputWithContext(context.Background())
}

func (o DatasetStateResponseDeprecatedByOutput) ToDatasetStateResponseDeprecatedByPtrOutputWithContext(ctx context.Context) DatasetStateResponseDeprecatedByPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetStateResponseDeprecatedBy) *DatasetStateResponseDeprecatedBy {
		return &v
	}).(DatasetStateResponseDeprecatedByPtrOutput)
}

// Unique Dataset identifier.
func (o DatasetStateResponseDeprecatedByOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetStateResponseDeprecatedBy) string { return v.DatasetId }).(pulumi.StringOutput)
}

// Definition Version
func (o DatasetStateResponseDeprecatedByOutput) DefinitionVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetStateResponseDeprecatedBy) *string { return v.DefinitionVersion }).(pulumi.StringPtrOutput)
}

type DatasetStateResponseDeprecatedByPtrOutput struct{ *pulumi.OutputState }

func (DatasetStateResponseDeprecatedByPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetStateResponseDeprecatedBy)(nil)).Elem()
}

func (o DatasetStateResponseDeprecatedByPtrOutput) ToDatasetStateResponseDeprecatedByPtrOutput() DatasetStateResponseDeprecatedByPtrOutput {
	return o
}

func (o DatasetStateResponseDeprecatedByPtrOutput) ToDatasetStateResponseDeprecatedByPtrOutputWithContext(ctx context.Context) DatasetStateResponseDeprecatedByPtrOutput {
	return o
}

func (o DatasetStateResponseDeprecatedByPtrOutput) Elem() DatasetStateResponseDeprecatedByOutput {
	return o.ApplyT(func(v *DatasetStateResponseDeprecatedBy) DatasetStateResponseDeprecatedBy {
		if v != nil {
			return *v
		}
		var ret DatasetStateResponseDeprecatedBy
		return ret
	}).(DatasetStateResponseDeprecatedByOutput)
}

// Unique Dataset identifier.
func (o DatasetStateResponseDeprecatedByPtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetStateResponseDeprecatedBy) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetId
	}).(pulumi.StringPtrOutput)
}

// Definition Version
func (o DatasetStateResponseDeprecatedByPtrOutput) DefinitionVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetStateResponseDeprecatedBy) *string {
		if v == nil {
			return nil
		}
		return v.DefinitionVersion
	}).(pulumi.StringPtrOutput)
}

type DatastoreResponse struct {
	AzureDataLakeSection    *AzureDataLakeSectionResponse    `pulumi:"azureDataLakeSection"`
	AzureMySqlSection       *AzureMySqlSectionResponse       `pulumi:"azureMySqlSection"`
	AzurePostgreSqlSection  *AzurePostgreSqlSectionResponse  `pulumi:"azurePostgreSqlSection"`
	AzureSqlDatabaseSection *AzureSqlDatabaseSectionResponse `pulumi:"azureSqlDatabaseSection"`
	AzureStorageSection     *AzureStorageSectionResponse     `pulumi:"azureStorageSection"`
	// The User who created the datastore.
	CreatedBy UserInfoResponse `pulumi:"createdBy"`
	// The date and time when the datastore was created.
	CreatedTime string `pulumi:"createdTime"`
	// The datastore type.
	DataStoreType *string `pulumi:"dataStoreType"`
	// Description of the datastore.
	Description *string `pulumi:"description"`
	// Data specific to GlusterFS.
	GlusterFsSection *GlusterFsSectionResponse `pulumi:"glusterFsSection"`
	// A read only property that denotes whether the service datastore has been validated with credentials.
	HasBeenValidated *bool `pulumi:"hasBeenValidated"`
	// Info about origin if it is linked.
	LinkedInfo *LinkedInfoResponse `pulumi:"linkedInfo"`
	// The User who modified the datastore.
	ModifiedBy UserInfoResponse `pulumi:"modifiedBy"`
	// The date and time when the datastore was last modified.
	ModifiedTime string `pulumi:"modifiedTime"`
	// Name of the datastore.
	Name *string `pulumi:"name"`
	// Tags for this datastore.
	Tags map[string]string `pulumi:"tags"`
}

// DatastoreResponseInput is an input type that accepts DatastoreResponseArgs and DatastoreResponseOutput values.
// You can construct a concrete instance of `DatastoreResponseInput` via:
//
//          DatastoreResponseArgs{...}
type DatastoreResponseInput interface {
	pulumi.Input

	ToDatastoreResponseOutput() DatastoreResponseOutput
	ToDatastoreResponseOutputWithContext(context.Context) DatastoreResponseOutput
}

type DatastoreResponseArgs struct {
	AzureDataLakeSection    AzureDataLakeSectionResponsePtrInput    `pulumi:"azureDataLakeSection"`
	AzureMySqlSection       AzureMySqlSectionResponsePtrInput       `pulumi:"azureMySqlSection"`
	AzurePostgreSqlSection  AzurePostgreSqlSectionResponsePtrInput  `pulumi:"azurePostgreSqlSection"`
	AzureSqlDatabaseSection AzureSqlDatabaseSectionResponsePtrInput `pulumi:"azureSqlDatabaseSection"`
	AzureStorageSection     AzureStorageSectionResponsePtrInput     `pulumi:"azureStorageSection"`
	// The User who created the datastore.
	CreatedBy UserInfoResponseInput `pulumi:"createdBy"`
	// The date and time when the datastore was created.
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	// The datastore type.
	DataStoreType pulumi.StringPtrInput `pulumi:"dataStoreType"`
	// Description of the datastore.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Data specific to GlusterFS.
	GlusterFsSection GlusterFsSectionResponsePtrInput `pulumi:"glusterFsSection"`
	// A read only property that denotes whether the service datastore has been validated with credentials.
	HasBeenValidated pulumi.BoolPtrInput `pulumi:"hasBeenValidated"`
	// Info about origin if it is linked.
	LinkedInfo LinkedInfoResponsePtrInput `pulumi:"linkedInfo"`
	// The User who modified the datastore.
	ModifiedBy UserInfoResponseInput `pulumi:"modifiedBy"`
	// The date and time when the datastore was last modified.
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	// Name of the datastore.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tags for this datastore.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (DatastoreResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreResponse)(nil)).Elem()
}

func (i DatastoreResponseArgs) ToDatastoreResponseOutput() DatastoreResponseOutput {
	return i.ToDatastoreResponseOutputWithContext(context.Background())
}

func (i DatastoreResponseArgs) ToDatastoreResponseOutputWithContext(ctx context.Context) DatastoreResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreResponseOutput)
}

func (i DatastoreResponseArgs) ToDatastoreResponsePtrOutput() DatastoreResponsePtrOutput {
	return i.ToDatastoreResponsePtrOutputWithContext(context.Background())
}

func (i DatastoreResponseArgs) ToDatastoreResponsePtrOutputWithContext(ctx context.Context) DatastoreResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreResponseOutput).ToDatastoreResponsePtrOutputWithContext(ctx)
}

// DatastoreResponsePtrInput is an input type that accepts DatastoreResponseArgs, DatastoreResponsePtr and DatastoreResponsePtrOutput values.
// You can construct a concrete instance of `DatastoreResponsePtrInput` via:
//
//          DatastoreResponseArgs{...}
//
//  or:
//
//          nil
type DatastoreResponsePtrInput interface {
	pulumi.Input

	ToDatastoreResponsePtrOutput() DatastoreResponsePtrOutput
	ToDatastoreResponsePtrOutputWithContext(context.Context) DatastoreResponsePtrOutput
}

type datastoreResponsePtrType DatastoreResponseArgs

func DatastoreResponsePtr(v *DatastoreResponseArgs) DatastoreResponsePtrInput {
	return (*datastoreResponsePtrType)(v)
}

func (*datastoreResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreResponse)(nil)).Elem()
}

func (i *datastoreResponsePtrType) ToDatastoreResponsePtrOutput() DatastoreResponsePtrOutput {
	return i.ToDatastoreResponsePtrOutputWithContext(context.Background())
}

func (i *datastoreResponsePtrType) ToDatastoreResponsePtrOutputWithContext(ctx context.Context) DatastoreResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreResponsePtrOutput)
}

type DatastoreResponseOutput struct{ *pulumi.OutputState }

func (DatastoreResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreResponse)(nil)).Elem()
}

func (o DatastoreResponseOutput) ToDatastoreResponseOutput() DatastoreResponseOutput {
	return o
}

func (o DatastoreResponseOutput) ToDatastoreResponseOutputWithContext(ctx context.Context) DatastoreResponseOutput {
	return o
}

func (o DatastoreResponseOutput) ToDatastoreResponsePtrOutput() DatastoreResponsePtrOutput {
	return o.ToDatastoreResponsePtrOutputWithContext(context.Background())
}

func (o DatastoreResponseOutput) ToDatastoreResponsePtrOutputWithContext(ctx context.Context) DatastoreResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreResponse) *DatastoreResponse {
		return &v
	}).(DatastoreResponsePtrOutput)
}

func (o DatastoreResponseOutput) AzureDataLakeSection() AzureDataLakeSectionResponsePtrOutput {
	return o.ApplyT(func(v DatastoreResponse) *AzureDataLakeSectionResponse { return v.AzureDataLakeSection }).(AzureDataLakeSectionResponsePtrOutput)
}

func (o DatastoreResponseOutput) AzureMySqlSection() AzureMySqlSectionResponsePtrOutput {
	return o.ApplyT(func(v DatastoreResponse) *AzureMySqlSectionResponse { return v.AzureMySqlSection }).(AzureMySqlSectionResponsePtrOutput)
}

func (o DatastoreResponseOutput) AzurePostgreSqlSection() AzurePostgreSqlSectionResponsePtrOutput {
	return o.ApplyT(func(v DatastoreResponse) *AzurePostgreSqlSectionResponse { return v.AzurePostgreSqlSection }).(AzurePostgreSqlSectionResponsePtrOutput)
}

func (o DatastoreResponseOutput) AzureSqlDatabaseSection() AzureSqlDatabaseSectionResponsePtrOutput {
	return o.ApplyT(func(v DatastoreResponse) *AzureSqlDatabaseSectionResponse { return v.AzureSqlDatabaseSection }).(AzureSqlDatabaseSectionResponsePtrOutput)
}

func (o DatastoreResponseOutput) AzureStorageSection() AzureStorageSectionResponsePtrOutput {
	return o.ApplyT(func(v DatastoreResponse) *AzureStorageSectionResponse { return v.AzureStorageSection }).(AzureStorageSectionResponsePtrOutput)
}

// The User who created the datastore.
func (o DatastoreResponseOutput) CreatedBy() UserInfoResponseOutput {
	return o.ApplyT(func(v DatastoreResponse) UserInfoResponse { return v.CreatedBy }).(UserInfoResponseOutput)
}

// The date and time when the datastore was created.
func (o DatastoreResponseOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreResponse) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// The datastore type.
func (o DatastoreResponseOutput) DataStoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatastoreResponse) *string { return v.DataStoreType }).(pulumi.StringPtrOutput)
}

// Description of the datastore.
func (o DatastoreResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatastoreResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Data specific to GlusterFS.
func (o DatastoreResponseOutput) GlusterFsSection() GlusterFsSectionResponsePtrOutput {
	return o.ApplyT(func(v DatastoreResponse) *GlusterFsSectionResponse { return v.GlusterFsSection }).(GlusterFsSectionResponsePtrOutput)
}

// A read only property that denotes whether the service datastore has been validated with credentials.
func (o DatastoreResponseOutput) HasBeenValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatastoreResponse) *bool { return v.HasBeenValidated }).(pulumi.BoolPtrOutput)
}

// Info about origin if it is linked.
func (o DatastoreResponseOutput) LinkedInfo() LinkedInfoResponsePtrOutput {
	return o.ApplyT(func(v DatastoreResponse) *LinkedInfoResponse { return v.LinkedInfo }).(LinkedInfoResponsePtrOutput)
}

// The User who modified the datastore.
func (o DatastoreResponseOutput) ModifiedBy() UserInfoResponseOutput {
	return o.ApplyT(func(v DatastoreResponse) UserInfoResponse { return v.ModifiedBy }).(UserInfoResponseOutput)
}

// The date and time when the datastore was last modified.
func (o DatastoreResponseOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreResponse) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// Name of the datastore.
func (o DatastoreResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatastoreResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags for this datastore.
func (o DatastoreResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatastoreResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type DatastoreResponsePtrOutput struct{ *pulumi.OutputState }

func (DatastoreResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreResponse)(nil)).Elem()
}

func (o DatastoreResponsePtrOutput) ToDatastoreResponsePtrOutput() DatastoreResponsePtrOutput {
	return o
}

func (o DatastoreResponsePtrOutput) ToDatastoreResponsePtrOutputWithContext(ctx context.Context) DatastoreResponsePtrOutput {
	return o
}

func (o DatastoreResponsePtrOutput) Elem() DatastoreResponseOutput {
	return o.ApplyT(func(v *DatastoreResponse) DatastoreResponse {
		if v != nil {
			return *v
		}
		var ret DatastoreResponse
		return ret
	}).(DatastoreResponseOutput)
}

func (o DatastoreResponsePtrOutput) AzureDataLakeSection() AzureDataLakeSectionResponsePtrOutput {
	return o.ApplyT(func(v *DatastoreResponse) *AzureDataLakeSectionResponse {
		if v == nil {
			return nil
		}
		return v.AzureDataLakeSection
	}).(AzureDataLakeSectionResponsePtrOutput)
}

func (o DatastoreResponsePtrOutput) AzureMySqlSection() AzureMySqlSectionResponsePtrOutput {
	return o.ApplyT(func(v *DatastoreResponse) *AzureMySqlSectionResponse {
		if v == nil {
			return nil
		}
		return v.AzureMySqlSection
	}).(AzureMySqlSectionResponsePtrOutput)
}

func (o DatastoreResponsePtrOutput) AzurePostgreSqlSection() AzurePostgreSqlSectionResponsePtrOutput {
	return o.ApplyT(func(v *DatastoreResponse) *AzurePostgreSqlSectionResponse {
		if v == nil {
			return nil
		}
		return v.AzurePostgreSqlSection
	}).(AzurePostgreSqlSectionResponsePtrOutput)
}

func (o DatastoreResponsePtrOutput) AzureSqlDatabaseSection() AzureSqlDatabaseSectionResponsePtrOutput {
	return o.ApplyT(func(v *DatastoreResponse) *AzureSqlDatabaseSectionResponse {
		if v == nil {
			return nil
		}
		return v.AzureSqlDatabaseSection
	}).(AzureSqlDatabaseSectionResponsePtrOutput)
}

func (o DatastoreResponsePtrOutput) AzureStorageSection() AzureStorageSectionResponsePtrOutput {
	return o.ApplyT(func(v *DatastoreResponse) *AzureStorageSectionResponse {
		if v == nil {
			return nil
		}
		return v.AzureStorageSection
	}).(AzureStorageSectionResponsePtrOutput)
}

// The User who created the datastore.
func (o DatastoreResponsePtrOutput) CreatedBy() UserInfoResponsePtrOutput {
	return o.ApplyT(func(v *DatastoreResponse) *UserInfoResponse {
		if v == nil {
			return nil
		}
		return &v.CreatedBy
	}).(UserInfoResponsePtrOutput)
}

// The date and time when the datastore was created.
func (o DatastoreResponsePtrOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedTime
	}).(pulumi.StringPtrOutput)
}

// The datastore type.
func (o DatastoreResponsePtrOutput) DataStoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreResponse) *string {
		if v == nil {
			return nil
		}
		return v.DataStoreType
	}).(pulumi.StringPtrOutput)
}

// Description of the datastore.
func (o DatastoreResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Data specific to GlusterFS.
func (o DatastoreResponsePtrOutput) GlusterFsSection() GlusterFsSectionResponsePtrOutput {
	return o.ApplyT(func(v *DatastoreResponse) *GlusterFsSectionResponse {
		if v == nil {
			return nil
		}
		return v.GlusterFsSection
	}).(GlusterFsSectionResponsePtrOutput)
}

// A read only property that denotes whether the service datastore has been validated with credentials.
func (o DatastoreResponsePtrOutput) HasBeenValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatastoreResponse) *bool {
		if v == nil {
			return nil
		}
		return v.HasBeenValidated
	}).(pulumi.BoolPtrOutput)
}

// Info about origin if it is linked.
func (o DatastoreResponsePtrOutput) LinkedInfo() LinkedInfoResponsePtrOutput {
	return o.ApplyT(func(v *DatastoreResponse) *LinkedInfoResponse {
		if v == nil {
			return nil
		}
		return v.LinkedInfo
	}).(LinkedInfoResponsePtrOutput)
}

// The User who modified the datastore.
func (o DatastoreResponsePtrOutput) ModifiedBy() UserInfoResponsePtrOutput {
	return o.ApplyT(func(v *DatastoreResponse) *UserInfoResponse {
		if v == nil {
			return nil
		}
		return &v.ModifiedBy
	}).(UserInfoResponsePtrOutput)
}

// The date and time when the datastore was last modified.
func (o DatastoreResponsePtrOutput) ModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ModifiedTime
	}).(pulumi.StringPtrOutput)
}

// Name of the datastore.
func (o DatastoreResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tags for this datastore.
func (o DatastoreResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatastoreResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type DockerBuild struct {
	// Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is specified.
	// The path is relative to the asset path which must contain a single Blob URI value.
	// <seealso href="https://docs.docker.com/engine/context/working-with-contexts/" />
	Context *string `pulumi:"context"`
	// Enum to determine docker specification type. Must be either Build or Image.
	// Expected value is 'Build'.
	DockerSpecificationType string `pulumi:"dockerSpecificationType"`
	// Docker command line instructions to assemble an image.
	// <seealso href="https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments" />
	Dockerfile string `pulumi:"dockerfile"`
	// The platform information of the docker image.
	Platform *DockerImagePlatform `pulumi:"platform"`
}

// DockerBuildInput is an input type that accepts DockerBuildArgs and DockerBuildOutput values.
// You can construct a concrete instance of `DockerBuildInput` via:
//
//          DockerBuildArgs{...}
type DockerBuildInput interface {
	pulumi.Input

	ToDockerBuildOutput() DockerBuildOutput
	ToDockerBuildOutputWithContext(context.Context) DockerBuildOutput
}

type DockerBuildArgs struct {
	// Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is specified.
	// The path is relative to the asset path which must contain a single Blob URI value.
	// <seealso href="https://docs.docker.com/engine/context/working-with-contexts/" />
	Context pulumi.StringPtrInput `pulumi:"context"`
	// Enum to determine docker specification type. Must be either Build or Image.
	// Expected value is 'Build'.
	DockerSpecificationType pulumi.StringInput `pulumi:"dockerSpecificationType"`
	// Docker command line instructions to assemble an image.
	// <seealso href="https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments" />
	Dockerfile pulumi.StringInput `pulumi:"dockerfile"`
	// The platform information of the docker image.
	Platform DockerImagePlatformPtrInput `pulumi:"platform"`
}

func (DockerBuildArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuild)(nil)).Elem()
}

func (i DockerBuildArgs) ToDockerBuildOutput() DockerBuildOutput {
	return i.ToDockerBuildOutputWithContext(context.Background())
}

func (i DockerBuildArgs) ToDockerBuildOutputWithContext(ctx context.Context) DockerBuildOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerBuildOutput)
}

type DockerBuildOutput struct{ *pulumi.OutputState }

func (DockerBuildOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuild)(nil)).Elem()
}

func (o DockerBuildOutput) ToDockerBuildOutput() DockerBuildOutput {
	return o
}

func (o DockerBuildOutput) ToDockerBuildOutputWithContext(ctx context.Context) DockerBuildOutput {
	return o
}

// Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is specified.
// The path is relative to the asset path which must contain a single Blob URI value.
// <seealso href="https://docs.docker.com/engine/context/working-with-contexts/" />
func (o DockerBuildOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuild) *string { return v.Context }).(pulumi.StringPtrOutput)
}

// Enum to determine docker specification type. Must be either Build or Image.
// Expected value is 'Build'.
func (o DockerBuildOutput) DockerSpecificationType() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuild) string { return v.DockerSpecificationType }).(pulumi.StringOutput)
}

// Docker command line instructions to assemble an image.
// <seealso href="https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments" />
func (o DockerBuildOutput) Dockerfile() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuild) string { return v.Dockerfile }).(pulumi.StringOutput)
}

// The platform information of the docker image.
func (o DockerBuildOutput) Platform() DockerImagePlatformPtrOutput {
	return o.ApplyT(func(v DockerBuild) *DockerImagePlatform { return v.Platform }).(DockerImagePlatformPtrOutput)
}

type DockerBuildResponse struct {
	// Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is specified.
	// The path is relative to the asset path which must contain a single Blob URI value.
	// <seealso href="https://docs.docker.com/engine/context/working-with-contexts/" />
	Context *string `pulumi:"context"`
	// Enum to determine docker specification type. Must be either Build or Image.
	// Expected value is 'Build'.
	DockerSpecificationType string `pulumi:"dockerSpecificationType"`
	// Docker command line instructions to assemble an image.
	// <seealso href="https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments" />
	Dockerfile string `pulumi:"dockerfile"`
	// The platform information of the docker image.
	Platform *DockerImagePlatformResponse `pulumi:"platform"`
}

// DockerBuildResponseInput is an input type that accepts DockerBuildResponseArgs and DockerBuildResponseOutput values.
// You can construct a concrete instance of `DockerBuildResponseInput` via:
//
//          DockerBuildResponseArgs{...}
type DockerBuildResponseInput interface {
	pulumi.Input

	ToDockerBuildResponseOutput() DockerBuildResponseOutput
	ToDockerBuildResponseOutputWithContext(context.Context) DockerBuildResponseOutput
}

type DockerBuildResponseArgs struct {
	// Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is specified.
	// The path is relative to the asset path which must contain a single Blob URI value.
	// <seealso href="https://docs.docker.com/engine/context/working-with-contexts/" />
	Context pulumi.StringPtrInput `pulumi:"context"`
	// Enum to determine docker specification type. Must be either Build or Image.
	// Expected value is 'Build'.
	DockerSpecificationType pulumi.StringInput `pulumi:"dockerSpecificationType"`
	// Docker command line instructions to assemble an image.
	// <seealso href="https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments" />
	Dockerfile pulumi.StringInput `pulumi:"dockerfile"`
	// The platform information of the docker image.
	Platform DockerImagePlatformResponsePtrInput `pulumi:"platform"`
}

func (DockerBuildResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildResponse)(nil)).Elem()
}

func (i DockerBuildResponseArgs) ToDockerBuildResponseOutput() DockerBuildResponseOutput {
	return i.ToDockerBuildResponseOutputWithContext(context.Background())
}

func (i DockerBuildResponseArgs) ToDockerBuildResponseOutputWithContext(ctx context.Context) DockerBuildResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerBuildResponseOutput)
}

type DockerBuildResponseOutput struct{ *pulumi.OutputState }

func (DockerBuildResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildResponse)(nil)).Elem()
}

func (o DockerBuildResponseOutput) ToDockerBuildResponseOutput() DockerBuildResponseOutput {
	return o
}

func (o DockerBuildResponseOutput) ToDockerBuildResponseOutputWithContext(ctx context.Context) DockerBuildResponseOutput {
	return o
}

// Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is specified.
// The path is relative to the asset path which must contain a single Blob URI value.
// <seealso href="https://docs.docker.com/engine/context/working-with-contexts/" />
func (o DockerBuildResponseOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildResponse) *string { return v.Context }).(pulumi.StringPtrOutput)
}

// Enum to determine docker specification type. Must be either Build or Image.
// Expected value is 'Build'.
func (o DockerBuildResponseOutput) DockerSpecificationType() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildResponse) string { return v.DockerSpecificationType }).(pulumi.StringOutput)
}

// Docker command line instructions to assemble an image.
// <seealso href="https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments" />
func (o DockerBuildResponseOutput) Dockerfile() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildResponse) string { return v.Dockerfile }).(pulumi.StringOutput)
}

// The platform information of the docker image.
func (o DockerBuildResponseOutput) Platform() DockerImagePlatformResponsePtrOutput {
	return o.ApplyT(func(v DockerBuildResponse) *DockerImagePlatformResponse { return v.Platform }).(DockerImagePlatformResponsePtrOutput)
}

type DockerImage struct {
	// Image name of a custom base image.
	// <seealso href="https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image" />
	DockerImageUri string `pulumi:"dockerImageUri"`
	// Enum to determine docker specification type. Must be either Build or Image.
	// Expected value is 'Image'.
	DockerSpecificationType string `pulumi:"dockerSpecificationType"`
	// The platform information of the docker image.
	Platform *DockerImagePlatform `pulumi:"platform"`
}

// DockerImageInput is an input type that accepts DockerImageArgs and DockerImageOutput values.
// You can construct a concrete instance of `DockerImageInput` via:
//
//          DockerImageArgs{...}
type DockerImageInput interface {
	pulumi.Input

	ToDockerImageOutput() DockerImageOutput
	ToDockerImageOutputWithContext(context.Context) DockerImageOutput
}

type DockerImageArgs struct {
	// Image name of a custom base image.
	// <seealso href="https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image" />
	DockerImageUri pulumi.StringInput `pulumi:"dockerImageUri"`
	// Enum to determine docker specification type. Must be either Build or Image.
	// Expected value is 'Image'.
	DockerSpecificationType pulumi.StringInput `pulumi:"dockerSpecificationType"`
	// The platform information of the docker image.
	Platform DockerImagePlatformPtrInput `pulumi:"platform"`
}

func (DockerImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerImage)(nil)).Elem()
}

func (i DockerImageArgs) ToDockerImageOutput() DockerImageOutput {
	return i.ToDockerImageOutputWithContext(context.Background())
}

func (i DockerImageArgs) ToDockerImageOutputWithContext(ctx context.Context) DockerImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerImageOutput)
}

type DockerImageOutput struct{ *pulumi.OutputState }

func (DockerImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerImage)(nil)).Elem()
}

func (o DockerImageOutput) ToDockerImageOutput() DockerImageOutput {
	return o
}

func (o DockerImageOutput) ToDockerImageOutputWithContext(ctx context.Context) DockerImageOutput {
	return o
}

// Image name of a custom base image.
// <seealso href="https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image" />
func (o DockerImageOutput) DockerImageUri() pulumi.StringOutput {
	return o.ApplyT(func(v DockerImage) string { return v.DockerImageUri }).(pulumi.StringOutput)
}

// Enum to determine docker specification type. Must be either Build or Image.
// Expected value is 'Image'.
func (o DockerImageOutput) DockerSpecificationType() pulumi.StringOutput {
	return o.ApplyT(func(v DockerImage) string { return v.DockerSpecificationType }).(pulumi.StringOutput)
}

// The platform information of the docker image.
func (o DockerImageOutput) Platform() DockerImagePlatformPtrOutput {
	return o.ApplyT(func(v DockerImage) *DockerImagePlatform { return v.Platform }).(DockerImagePlatformPtrOutput)
}

type DockerImagePlatform struct {
	// The OS type the Environment.
	OperatingSystemType *string `pulumi:"operatingSystemType"`
}

// DockerImagePlatformInput is an input type that accepts DockerImagePlatformArgs and DockerImagePlatformOutput values.
// You can construct a concrete instance of `DockerImagePlatformInput` via:
//
//          DockerImagePlatformArgs{...}
type DockerImagePlatformInput interface {
	pulumi.Input

	ToDockerImagePlatformOutput() DockerImagePlatformOutput
	ToDockerImagePlatformOutputWithContext(context.Context) DockerImagePlatformOutput
}

type DockerImagePlatformArgs struct {
	// The OS type the Environment.
	OperatingSystemType pulumi.StringPtrInput `pulumi:"operatingSystemType"`
}

func (DockerImagePlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerImagePlatform)(nil)).Elem()
}

func (i DockerImagePlatformArgs) ToDockerImagePlatformOutput() DockerImagePlatformOutput {
	return i.ToDockerImagePlatformOutputWithContext(context.Background())
}

func (i DockerImagePlatformArgs) ToDockerImagePlatformOutputWithContext(ctx context.Context) DockerImagePlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerImagePlatformOutput)
}

func (i DockerImagePlatformArgs) ToDockerImagePlatformPtrOutput() DockerImagePlatformPtrOutput {
	return i.ToDockerImagePlatformPtrOutputWithContext(context.Background())
}

func (i DockerImagePlatformArgs) ToDockerImagePlatformPtrOutputWithContext(ctx context.Context) DockerImagePlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerImagePlatformOutput).ToDockerImagePlatformPtrOutputWithContext(ctx)
}

// DockerImagePlatformPtrInput is an input type that accepts DockerImagePlatformArgs, DockerImagePlatformPtr and DockerImagePlatformPtrOutput values.
// You can construct a concrete instance of `DockerImagePlatformPtrInput` via:
//
//          DockerImagePlatformArgs{...}
//
//  or:
//
//          nil
type DockerImagePlatformPtrInput interface {
	pulumi.Input

	ToDockerImagePlatformPtrOutput() DockerImagePlatformPtrOutput
	ToDockerImagePlatformPtrOutputWithContext(context.Context) DockerImagePlatformPtrOutput
}

type dockerImagePlatformPtrType DockerImagePlatformArgs

func DockerImagePlatformPtr(v *DockerImagePlatformArgs) DockerImagePlatformPtrInput {
	return (*dockerImagePlatformPtrType)(v)
}

func (*dockerImagePlatformPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerImagePlatform)(nil)).Elem()
}

func (i *dockerImagePlatformPtrType) ToDockerImagePlatformPtrOutput() DockerImagePlatformPtrOutput {
	return i.ToDockerImagePlatformPtrOutputWithContext(context.Background())
}

func (i *dockerImagePlatformPtrType) ToDockerImagePlatformPtrOutputWithContext(ctx context.Context) DockerImagePlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerImagePlatformPtrOutput)
}

type DockerImagePlatformOutput struct{ *pulumi.OutputState }

func (DockerImagePlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerImagePlatform)(nil)).Elem()
}

func (o DockerImagePlatformOutput) ToDockerImagePlatformOutput() DockerImagePlatformOutput {
	return o
}

func (o DockerImagePlatformOutput) ToDockerImagePlatformOutputWithContext(ctx context.Context) DockerImagePlatformOutput {
	return o
}

func (o DockerImagePlatformOutput) ToDockerImagePlatformPtrOutput() DockerImagePlatformPtrOutput {
	return o.ToDockerImagePlatformPtrOutputWithContext(context.Background())
}

func (o DockerImagePlatformOutput) ToDockerImagePlatformPtrOutputWithContext(ctx context.Context) DockerImagePlatformPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DockerImagePlatform) *DockerImagePlatform {
		return &v
	}).(DockerImagePlatformPtrOutput)
}

// The OS type the Environment.
func (o DockerImagePlatformOutput) OperatingSystemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerImagePlatform) *string { return v.OperatingSystemType }).(pulumi.StringPtrOutput)
}

type DockerImagePlatformPtrOutput struct{ *pulumi.OutputState }

func (DockerImagePlatformPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerImagePlatform)(nil)).Elem()
}

func (o DockerImagePlatformPtrOutput) ToDockerImagePlatformPtrOutput() DockerImagePlatformPtrOutput {
	return o
}

func (o DockerImagePlatformPtrOutput) ToDockerImagePlatformPtrOutputWithContext(ctx context.Context) DockerImagePlatformPtrOutput {
	return o
}

func (o DockerImagePlatformPtrOutput) Elem() DockerImagePlatformOutput {
	return o.ApplyT(func(v *DockerImagePlatform) DockerImagePlatform {
		if v != nil {
			return *v
		}
		var ret DockerImagePlatform
		return ret
	}).(DockerImagePlatformOutput)
}

// The OS type the Environment.
func (o DockerImagePlatformPtrOutput) OperatingSystemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerImagePlatform) *string {
		if v == nil {
			return nil
		}
		return v.OperatingSystemType
	}).(pulumi.StringPtrOutput)
}

type DockerImagePlatformResponse struct {
	// The OS type the Environment.
	OperatingSystemType *string `pulumi:"operatingSystemType"`
}

// DockerImagePlatformResponseInput is an input type that accepts DockerImagePlatformResponseArgs and DockerImagePlatformResponseOutput values.
// You can construct a concrete instance of `DockerImagePlatformResponseInput` via:
//
//          DockerImagePlatformResponseArgs{...}
type DockerImagePlatformResponseInput interface {
	pulumi.Input

	ToDockerImagePlatformResponseOutput() DockerImagePlatformResponseOutput
	ToDockerImagePlatformResponseOutputWithContext(context.Context) DockerImagePlatformResponseOutput
}

type DockerImagePlatformResponseArgs struct {
	// The OS type the Environment.
	OperatingSystemType pulumi.StringPtrInput `pulumi:"operatingSystemType"`
}

func (DockerImagePlatformResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerImagePlatformResponse)(nil)).Elem()
}

func (i DockerImagePlatformResponseArgs) ToDockerImagePlatformResponseOutput() DockerImagePlatformResponseOutput {
	return i.ToDockerImagePlatformResponseOutputWithContext(context.Background())
}

func (i DockerImagePlatformResponseArgs) ToDockerImagePlatformResponseOutputWithContext(ctx context.Context) DockerImagePlatformResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerImagePlatformResponseOutput)
}

func (i DockerImagePlatformResponseArgs) ToDockerImagePlatformResponsePtrOutput() DockerImagePlatformResponsePtrOutput {
	return i.ToDockerImagePlatformResponsePtrOutputWithContext(context.Background())
}

func (i DockerImagePlatformResponseArgs) ToDockerImagePlatformResponsePtrOutputWithContext(ctx context.Context) DockerImagePlatformResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerImagePlatformResponseOutput).ToDockerImagePlatformResponsePtrOutputWithContext(ctx)
}

// DockerImagePlatformResponsePtrInput is an input type that accepts DockerImagePlatformResponseArgs, DockerImagePlatformResponsePtr and DockerImagePlatformResponsePtrOutput values.
// You can construct a concrete instance of `DockerImagePlatformResponsePtrInput` via:
//
//          DockerImagePlatformResponseArgs{...}
//
//  or:
//
//          nil
type DockerImagePlatformResponsePtrInput interface {
	pulumi.Input

	ToDockerImagePlatformResponsePtrOutput() DockerImagePlatformResponsePtrOutput
	ToDockerImagePlatformResponsePtrOutputWithContext(context.Context) DockerImagePlatformResponsePtrOutput
}

type dockerImagePlatformResponsePtrType DockerImagePlatformResponseArgs

func DockerImagePlatformResponsePtr(v *DockerImagePlatformResponseArgs) DockerImagePlatformResponsePtrInput {
	return (*dockerImagePlatformResponsePtrType)(v)
}

func (*dockerImagePlatformResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerImagePlatformResponse)(nil)).Elem()
}

func (i *dockerImagePlatformResponsePtrType) ToDockerImagePlatformResponsePtrOutput() DockerImagePlatformResponsePtrOutput {
	return i.ToDockerImagePlatformResponsePtrOutputWithContext(context.Background())
}

func (i *dockerImagePlatformResponsePtrType) ToDockerImagePlatformResponsePtrOutputWithContext(ctx context.Context) DockerImagePlatformResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerImagePlatformResponsePtrOutput)
}

type DockerImagePlatformResponseOutput struct{ *pulumi.OutputState }

func (DockerImagePlatformResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerImagePlatformResponse)(nil)).Elem()
}

func (o DockerImagePlatformResponseOutput) ToDockerImagePlatformResponseOutput() DockerImagePlatformResponseOutput {
	return o
}

func (o DockerImagePlatformResponseOutput) ToDockerImagePlatformResponseOutputWithContext(ctx context.Context) DockerImagePlatformResponseOutput {
	return o
}

func (o DockerImagePlatformResponseOutput) ToDockerImagePlatformResponsePtrOutput() DockerImagePlatformResponsePtrOutput {
	return o.ToDockerImagePlatformResponsePtrOutputWithContext(context.Background())
}

func (o DockerImagePlatformResponseOutput) ToDockerImagePlatformResponsePtrOutputWithContext(ctx context.Context) DockerImagePlatformResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DockerImagePlatformResponse) *DockerImagePlatformResponse {
		return &v
	}).(DockerImagePlatformResponsePtrOutput)
}

// The OS type the Environment.
func (o DockerImagePlatformResponseOutput) OperatingSystemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerImagePlatformResponse) *string { return v.OperatingSystemType }).(pulumi.StringPtrOutput)
}

type DockerImagePlatformResponsePtrOutput struct{ *pulumi.OutputState }

func (DockerImagePlatformResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerImagePlatformResponse)(nil)).Elem()
}

func (o DockerImagePlatformResponsePtrOutput) ToDockerImagePlatformResponsePtrOutput() DockerImagePlatformResponsePtrOutput {
	return o
}

func (o DockerImagePlatformResponsePtrOutput) ToDockerImagePlatformResponsePtrOutputWithContext(ctx context.Context) DockerImagePlatformResponsePtrOutput {
	return o
}

func (o DockerImagePlatformResponsePtrOutput) Elem() DockerImagePlatformResponseOutput {
	return o.ApplyT(func(v *DockerImagePlatformResponse) DockerImagePlatformResponse {
		if v != nil {
			return *v
		}
		var ret DockerImagePlatformResponse
		return ret
	}).(DockerImagePlatformResponseOutput)
}

// The OS type the Environment.
func (o DockerImagePlatformResponsePtrOutput) OperatingSystemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerImagePlatformResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperatingSystemType
	}).(pulumi.StringPtrOutput)
}

type DockerImageResponse struct {
	// Image name of a custom base image.
	// <seealso href="https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image" />
	DockerImageUri string `pulumi:"dockerImageUri"`
	// Enum to determine docker specification type. Must be either Build or Image.
	// Expected value is 'Image'.
	DockerSpecificationType string `pulumi:"dockerSpecificationType"`
	// The platform information of the docker image.
	Platform *DockerImagePlatformResponse `pulumi:"platform"`
}

// DockerImageResponseInput is an input type that accepts DockerImageResponseArgs and DockerImageResponseOutput values.
// You can construct a concrete instance of `DockerImageResponseInput` via:
//
//          DockerImageResponseArgs{...}
type DockerImageResponseInput interface {
	pulumi.Input

	ToDockerImageResponseOutput() DockerImageResponseOutput
	ToDockerImageResponseOutputWithContext(context.Context) DockerImageResponseOutput
}

type DockerImageResponseArgs struct {
	// Image name of a custom base image.
	// <seealso href="https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image" />
	DockerImageUri pulumi.StringInput `pulumi:"dockerImageUri"`
	// Enum to determine docker specification type. Must be either Build or Image.
	// Expected value is 'Image'.
	DockerSpecificationType pulumi.StringInput `pulumi:"dockerSpecificationType"`
	// The platform information of the docker image.
	Platform DockerImagePlatformResponsePtrInput `pulumi:"platform"`
}

func (DockerImageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerImageResponse)(nil)).Elem()
}

func (i DockerImageResponseArgs) ToDockerImageResponseOutput() DockerImageResponseOutput {
	return i.ToDockerImageResponseOutputWithContext(context.Background())
}

func (i DockerImageResponseArgs) ToDockerImageResponseOutputWithContext(ctx context.Context) DockerImageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerImageResponseOutput)
}

type DockerImageResponseOutput struct{ *pulumi.OutputState }

func (DockerImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerImageResponse)(nil)).Elem()
}

func (o DockerImageResponseOutput) ToDockerImageResponseOutput() DockerImageResponseOutput {
	return o
}

func (o DockerImageResponseOutput) ToDockerImageResponseOutputWithContext(ctx context.Context) DockerImageResponseOutput {
	return o
}

// Image name of a custom base image.
// <seealso href="https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image" />
func (o DockerImageResponseOutput) DockerImageUri() pulumi.StringOutput {
	return o.ApplyT(func(v DockerImageResponse) string { return v.DockerImageUri }).(pulumi.StringOutput)
}

// Enum to determine docker specification type. Must be either Build or Image.
// Expected value is 'Image'.
func (o DockerImageResponseOutput) DockerSpecificationType() pulumi.StringOutput {
	return o.ApplyT(func(v DockerImageResponse) string { return v.DockerSpecificationType }).(pulumi.StringOutput)
}

// The platform information of the docker image.
func (o DockerImageResponseOutput) Platform() DockerImagePlatformResponsePtrOutput {
	return o.ApplyT(func(v DockerImageResponse) *DockerImagePlatformResponse { return v.Platform }).(DockerImagePlatformResponsePtrOutput)
}

type EncryptionProperty struct {
	// The identity that will be used to access the key vault for encryption at rest.
	Identity *IdentityForCmk `pulumi:"identity"`
	// Customer Key vault properties.
	KeyVaultProperties KeyVaultProperties `pulumi:"keyVaultProperties"`
	// Indicates whether or not the encryption is enabled for the workspace.
	Status string `pulumi:"status"`
}

// EncryptionPropertyInput is an input type that accepts EncryptionPropertyArgs and EncryptionPropertyOutput values.
// You can construct a concrete instance of `EncryptionPropertyInput` via:
//
//          EncryptionPropertyArgs{...}
type EncryptionPropertyInput interface {
	pulumi.Input

	ToEncryptionPropertyOutput() EncryptionPropertyOutput
	ToEncryptionPropertyOutputWithContext(context.Context) EncryptionPropertyOutput
}

type EncryptionPropertyArgs struct {
	// The identity that will be used to access the key vault for encryption at rest.
	Identity IdentityForCmkPtrInput `pulumi:"identity"`
	// Customer Key vault properties.
	KeyVaultProperties KeyVaultPropertiesInput `pulumi:"keyVaultProperties"`
	// Indicates whether or not the encryption is enabled for the workspace.
	Status pulumi.StringInput `pulumi:"status"`
}

func (EncryptionPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionProperty)(nil)).Elem()
}

func (i EncryptionPropertyArgs) ToEncryptionPropertyOutput() EncryptionPropertyOutput {
	return i.ToEncryptionPropertyOutputWithContext(context.Background())
}

func (i EncryptionPropertyArgs) ToEncryptionPropertyOutputWithContext(ctx context.Context) EncryptionPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyOutput)
}

func (i EncryptionPropertyArgs) ToEncryptionPropertyPtrOutput() EncryptionPropertyPtrOutput {
	return i.ToEncryptionPropertyPtrOutputWithContext(context.Background())
}

func (i EncryptionPropertyArgs) ToEncryptionPropertyPtrOutputWithContext(ctx context.Context) EncryptionPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyOutput).ToEncryptionPropertyPtrOutputWithContext(ctx)
}

// EncryptionPropertyPtrInput is an input type that accepts EncryptionPropertyArgs, EncryptionPropertyPtr and EncryptionPropertyPtrOutput values.
// You can construct a concrete instance of `EncryptionPropertyPtrInput` via:
//
//          EncryptionPropertyArgs{...}
//
//  or:
//
//          nil
type EncryptionPropertyPtrInput interface {
	pulumi.Input

	ToEncryptionPropertyPtrOutput() EncryptionPropertyPtrOutput
	ToEncryptionPropertyPtrOutputWithContext(context.Context) EncryptionPropertyPtrOutput
}

type encryptionPropertyPtrType EncryptionPropertyArgs

func EncryptionPropertyPtr(v *EncryptionPropertyArgs) EncryptionPropertyPtrInput {
	return (*encryptionPropertyPtrType)(v)
}

func (*encryptionPropertyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionProperty)(nil)).Elem()
}

func (i *encryptionPropertyPtrType) ToEncryptionPropertyPtrOutput() EncryptionPropertyPtrOutput {
	return i.ToEncryptionPropertyPtrOutputWithContext(context.Background())
}

func (i *encryptionPropertyPtrType) ToEncryptionPropertyPtrOutputWithContext(ctx context.Context) EncryptionPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyPtrOutput)
}

type EncryptionPropertyOutput struct{ *pulumi.OutputState }

func (EncryptionPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionProperty)(nil)).Elem()
}

func (o EncryptionPropertyOutput) ToEncryptionPropertyOutput() EncryptionPropertyOutput {
	return o
}

func (o EncryptionPropertyOutput) ToEncryptionPropertyOutputWithContext(ctx context.Context) EncryptionPropertyOutput {
	return o
}

func (o EncryptionPropertyOutput) ToEncryptionPropertyPtrOutput() EncryptionPropertyPtrOutput {
	return o.ToEncryptionPropertyPtrOutputWithContext(context.Background())
}

func (o EncryptionPropertyOutput) ToEncryptionPropertyPtrOutputWithContext(ctx context.Context) EncryptionPropertyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionProperty) *EncryptionProperty {
		return &v
	}).(EncryptionPropertyPtrOutput)
}

// The identity that will be used to access the key vault for encryption at rest.
func (o EncryptionPropertyOutput) Identity() IdentityForCmkPtrOutput {
	return o.ApplyT(func(v EncryptionProperty) *IdentityForCmk { return v.Identity }).(IdentityForCmkPtrOutput)
}

// Customer Key vault properties.
func (o EncryptionPropertyOutput) KeyVaultProperties() KeyVaultPropertiesOutput {
	return o.ApplyT(func(v EncryptionProperty) KeyVaultProperties { return v.KeyVaultProperties }).(KeyVaultPropertiesOutput)
}

// Indicates whether or not the encryption is enabled for the workspace.
func (o EncryptionPropertyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionProperty) string { return v.Status }).(pulumi.StringOutput)
}

type EncryptionPropertyPtrOutput struct{ *pulumi.OutputState }

func (EncryptionPropertyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionProperty)(nil)).Elem()
}

func (o EncryptionPropertyPtrOutput) ToEncryptionPropertyPtrOutput() EncryptionPropertyPtrOutput {
	return o
}

func (o EncryptionPropertyPtrOutput) ToEncryptionPropertyPtrOutputWithContext(ctx context.Context) EncryptionPropertyPtrOutput {
	return o
}

func (o EncryptionPropertyPtrOutput) Elem() EncryptionPropertyOutput {
	return o.ApplyT(func(v *EncryptionProperty) EncryptionProperty {
		if v != nil {
			return *v
		}
		var ret EncryptionProperty
		return ret
	}).(EncryptionPropertyOutput)
}

// The identity that will be used to access the key vault for encryption at rest.
func (o EncryptionPropertyPtrOutput) Identity() IdentityForCmkPtrOutput {
	return o.ApplyT(func(v *EncryptionProperty) *IdentityForCmk {
		if v == nil {
			return nil
		}
		return v.Identity
	}).(IdentityForCmkPtrOutput)
}

// Customer Key vault properties.
func (o EncryptionPropertyPtrOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v *EncryptionProperty) *KeyVaultProperties {
		if v == nil {
			return nil
		}
		return &v.KeyVaultProperties
	}).(KeyVaultPropertiesPtrOutput)
}

// Indicates whether or not the encryption is enabled for the workspace.
func (o EncryptionPropertyPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionProperty) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

type EncryptionPropertyResponse struct {
	// The identity that will be used to access the key vault for encryption at rest.
	Identity *IdentityForCmkResponse `pulumi:"identity"`
	// Customer Key vault properties.
	KeyVaultProperties KeyVaultPropertiesResponse `pulumi:"keyVaultProperties"`
	// Indicates whether or not the encryption is enabled for the workspace.
	Status string `pulumi:"status"`
}

// EncryptionPropertyResponseInput is an input type that accepts EncryptionPropertyResponseArgs and EncryptionPropertyResponseOutput values.
// You can construct a concrete instance of `EncryptionPropertyResponseInput` via:
//
//          EncryptionPropertyResponseArgs{...}
type EncryptionPropertyResponseInput interface {
	pulumi.Input

	ToEncryptionPropertyResponseOutput() EncryptionPropertyResponseOutput
	ToEncryptionPropertyResponseOutputWithContext(context.Context) EncryptionPropertyResponseOutput
}

type EncryptionPropertyResponseArgs struct {
	// The identity that will be used to access the key vault for encryption at rest.
	Identity IdentityForCmkResponsePtrInput `pulumi:"identity"`
	// Customer Key vault properties.
	KeyVaultProperties KeyVaultPropertiesResponseInput `pulumi:"keyVaultProperties"`
	// Indicates whether or not the encryption is enabled for the workspace.
	Status pulumi.StringInput `pulumi:"status"`
}

func (EncryptionPropertyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPropertyResponse)(nil)).Elem()
}

func (i EncryptionPropertyResponseArgs) ToEncryptionPropertyResponseOutput() EncryptionPropertyResponseOutput {
	return i.ToEncryptionPropertyResponseOutputWithContext(context.Background())
}

func (i EncryptionPropertyResponseArgs) ToEncryptionPropertyResponseOutputWithContext(ctx context.Context) EncryptionPropertyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyResponseOutput)
}

func (i EncryptionPropertyResponseArgs) ToEncryptionPropertyResponsePtrOutput() EncryptionPropertyResponsePtrOutput {
	return i.ToEncryptionPropertyResponsePtrOutputWithContext(context.Background())
}

func (i EncryptionPropertyResponseArgs) ToEncryptionPropertyResponsePtrOutputWithContext(ctx context.Context) EncryptionPropertyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyResponseOutput).ToEncryptionPropertyResponsePtrOutputWithContext(ctx)
}

// EncryptionPropertyResponsePtrInput is an input type that accepts EncryptionPropertyResponseArgs, EncryptionPropertyResponsePtr and EncryptionPropertyResponsePtrOutput values.
// You can construct a concrete instance of `EncryptionPropertyResponsePtrInput` via:
//
//          EncryptionPropertyResponseArgs{...}
//
//  or:
//
//          nil
type EncryptionPropertyResponsePtrInput interface {
	pulumi.Input

	ToEncryptionPropertyResponsePtrOutput() EncryptionPropertyResponsePtrOutput
	ToEncryptionPropertyResponsePtrOutputWithContext(context.Context) EncryptionPropertyResponsePtrOutput
}

type encryptionPropertyResponsePtrType EncryptionPropertyResponseArgs

func EncryptionPropertyResponsePtr(v *EncryptionPropertyResponseArgs) EncryptionPropertyResponsePtrInput {
	return (*encryptionPropertyResponsePtrType)(v)
}

func (*encryptionPropertyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPropertyResponse)(nil)).Elem()
}

func (i *encryptionPropertyResponsePtrType) ToEncryptionPropertyResponsePtrOutput() EncryptionPropertyResponsePtrOutput {
	return i.ToEncryptionPropertyResponsePtrOutputWithContext(context.Background())
}

func (i *encryptionPropertyResponsePtrType) ToEncryptionPropertyResponsePtrOutputWithContext(ctx context.Context) EncryptionPropertyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyResponsePtrOutput)
}

type EncryptionPropertyResponseOutput struct{ *pulumi.OutputState }

func (EncryptionPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPropertyResponse)(nil)).Elem()
}

func (o EncryptionPropertyResponseOutput) ToEncryptionPropertyResponseOutput() EncryptionPropertyResponseOutput {
	return o
}

func (o EncryptionPropertyResponseOutput) ToEncryptionPropertyResponseOutputWithContext(ctx context.Context) EncryptionPropertyResponseOutput {
	return o
}

func (o EncryptionPropertyResponseOutput) ToEncryptionPropertyResponsePtrOutput() EncryptionPropertyResponsePtrOutput {
	return o.ToEncryptionPropertyResponsePtrOutputWithContext(context.Background())
}

func (o EncryptionPropertyResponseOutput) ToEncryptionPropertyResponsePtrOutputWithContext(ctx context.Context) EncryptionPropertyResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionPropertyResponse) *EncryptionPropertyResponse {
		return &v
	}).(EncryptionPropertyResponsePtrOutput)
}

// The identity that will be used to access the key vault for encryption at rest.
func (o EncryptionPropertyResponseOutput) Identity() IdentityForCmkResponsePtrOutput {
	return o.ApplyT(func(v EncryptionPropertyResponse) *IdentityForCmkResponse { return v.Identity }).(IdentityForCmkResponsePtrOutput)
}

// Customer Key vault properties.
func (o EncryptionPropertyResponseOutput) KeyVaultProperties() KeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v EncryptionPropertyResponse) KeyVaultPropertiesResponse { return v.KeyVaultProperties }).(KeyVaultPropertiesResponseOutput)
}

// Indicates whether or not the encryption is enabled for the workspace.
func (o EncryptionPropertyResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionPropertyResponse) string { return v.Status }).(pulumi.StringOutput)
}

type EncryptionPropertyResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionPropertyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPropertyResponse)(nil)).Elem()
}

func (o EncryptionPropertyResponsePtrOutput) ToEncryptionPropertyResponsePtrOutput() EncryptionPropertyResponsePtrOutput {
	return o
}

func (o EncryptionPropertyResponsePtrOutput) ToEncryptionPropertyResponsePtrOutputWithContext(ctx context.Context) EncryptionPropertyResponsePtrOutput {
	return o
}

func (o EncryptionPropertyResponsePtrOutput) Elem() EncryptionPropertyResponseOutput {
	return o.ApplyT(func(v *EncryptionPropertyResponse) EncryptionPropertyResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionPropertyResponse
		return ret
	}).(EncryptionPropertyResponseOutput)
}

// The identity that will be used to access the key vault for encryption at rest.
func (o EncryptionPropertyResponsePtrOutput) Identity() IdentityForCmkResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionPropertyResponse) *IdentityForCmkResponse {
		if v == nil {
			return nil
		}
		return v.Identity
	}).(IdentityForCmkResponsePtrOutput)
}

// Customer Key vault properties.
func (o EncryptionPropertyResponsePtrOutput) KeyVaultProperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionPropertyResponse) *KeyVaultPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.KeyVaultProperties
	}).(KeyVaultPropertiesResponsePtrOutput)
}

// Indicates whether or not the encryption is enabled for the workspace.
func (o EncryptionPropertyResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionPropertyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

type EndpointAuthKeys struct {
	// The primary key.
	PrimaryKey *string `pulumi:"primaryKey"`
	// The secondary key.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

// EndpointAuthKeysInput is an input type that accepts EndpointAuthKeysArgs and EndpointAuthKeysOutput values.
// You can construct a concrete instance of `EndpointAuthKeysInput` via:
//
//          EndpointAuthKeysArgs{...}
type EndpointAuthKeysInput interface {
	pulumi.Input

	ToEndpointAuthKeysOutput() EndpointAuthKeysOutput
	ToEndpointAuthKeysOutputWithContext(context.Context) EndpointAuthKeysOutput
}

type EndpointAuthKeysArgs struct {
	// The primary key.
	PrimaryKey pulumi.StringPtrInput `pulumi:"primaryKey"`
	// The secondary key.
	SecondaryKey pulumi.StringPtrInput `pulumi:"secondaryKey"`
}

func (EndpointAuthKeysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAuthKeys)(nil)).Elem()
}

func (i EndpointAuthKeysArgs) ToEndpointAuthKeysOutput() EndpointAuthKeysOutput {
	return i.ToEndpointAuthKeysOutputWithContext(context.Background())
}

func (i EndpointAuthKeysArgs) ToEndpointAuthKeysOutputWithContext(ctx context.Context) EndpointAuthKeysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAuthKeysOutput)
}

func (i EndpointAuthKeysArgs) ToEndpointAuthKeysPtrOutput() EndpointAuthKeysPtrOutput {
	return i.ToEndpointAuthKeysPtrOutputWithContext(context.Background())
}

func (i EndpointAuthKeysArgs) ToEndpointAuthKeysPtrOutputWithContext(ctx context.Context) EndpointAuthKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAuthKeysOutput).ToEndpointAuthKeysPtrOutputWithContext(ctx)
}

// EndpointAuthKeysPtrInput is an input type that accepts EndpointAuthKeysArgs, EndpointAuthKeysPtr and EndpointAuthKeysPtrOutput values.
// You can construct a concrete instance of `EndpointAuthKeysPtrInput` via:
//
//          EndpointAuthKeysArgs{...}
//
//  or:
//
//          nil
type EndpointAuthKeysPtrInput interface {
	pulumi.Input

	ToEndpointAuthKeysPtrOutput() EndpointAuthKeysPtrOutput
	ToEndpointAuthKeysPtrOutputWithContext(context.Context) EndpointAuthKeysPtrOutput
}

type endpointAuthKeysPtrType EndpointAuthKeysArgs

func EndpointAuthKeysPtr(v *EndpointAuthKeysArgs) EndpointAuthKeysPtrInput {
	return (*endpointAuthKeysPtrType)(v)
}

func (*endpointAuthKeysPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointAuthKeys)(nil)).Elem()
}

func (i *endpointAuthKeysPtrType) ToEndpointAuthKeysPtrOutput() EndpointAuthKeysPtrOutput {
	return i.ToEndpointAuthKeysPtrOutputWithContext(context.Background())
}

func (i *endpointAuthKeysPtrType) ToEndpointAuthKeysPtrOutputWithContext(ctx context.Context) EndpointAuthKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAuthKeysPtrOutput)
}

type EndpointAuthKeysOutput struct{ *pulumi.OutputState }

func (EndpointAuthKeysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAuthKeys)(nil)).Elem()
}

func (o EndpointAuthKeysOutput) ToEndpointAuthKeysOutput() EndpointAuthKeysOutput {
	return o
}

func (o EndpointAuthKeysOutput) ToEndpointAuthKeysOutputWithContext(ctx context.Context) EndpointAuthKeysOutput {
	return o
}

func (o EndpointAuthKeysOutput) ToEndpointAuthKeysPtrOutput() EndpointAuthKeysPtrOutput {
	return o.ToEndpointAuthKeysPtrOutputWithContext(context.Background())
}

func (o EndpointAuthKeysOutput) ToEndpointAuthKeysPtrOutputWithContext(ctx context.Context) EndpointAuthKeysPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointAuthKeys) *EndpointAuthKeys {
		return &v
	}).(EndpointAuthKeysPtrOutput)
}

// The primary key.
func (o EndpointAuthKeysOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointAuthKeys) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// The secondary key.
func (o EndpointAuthKeysOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointAuthKeys) *string { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

type EndpointAuthKeysPtrOutput struct{ *pulumi.OutputState }

func (EndpointAuthKeysPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointAuthKeys)(nil)).Elem()
}

func (o EndpointAuthKeysPtrOutput) ToEndpointAuthKeysPtrOutput() EndpointAuthKeysPtrOutput {
	return o
}

func (o EndpointAuthKeysPtrOutput) ToEndpointAuthKeysPtrOutputWithContext(ctx context.Context) EndpointAuthKeysPtrOutput {
	return o
}

func (o EndpointAuthKeysPtrOutput) Elem() EndpointAuthKeysOutput {
	return o.ApplyT(func(v *EndpointAuthKeys) EndpointAuthKeys {
		if v != nil {
			return *v
		}
		var ret EndpointAuthKeys
		return ret
	}).(EndpointAuthKeysOutput)
}

// The primary key.
func (o EndpointAuthKeysPtrOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointAuthKeys) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryKey
	}).(pulumi.StringPtrOutput)
}

// The secondary key.
func (o EndpointAuthKeysPtrOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointAuthKeys) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryKey
	}).(pulumi.StringPtrOutput)
}

type EndpointAuthKeysResponse struct {
	// The primary key.
	PrimaryKey *string `pulumi:"primaryKey"`
	// The secondary key.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

// EndpointAuthKeysResponseInput is an input type that accepts EndpointAuthKeysResponseArgs and EndpointAuthKeysResponseOutput values.
// You can construct a concrete instance of `EndpointAuthKeysResponseInput` via:
//
//          EndpointAuthKeysResponseArgs{...}
type EndpointAuthKeysResponseInput interface {
	pulumi.Input

	ToEndpointAuthKeysResponseOutput() EndpointAuthKeysResponseOutput
	ToEndpointAuthKeysResponseOutputWithContext(context.Context) EndpointAuthKeysResponseOutput
}

type EndpointAuthKeysResponseArgs struct {
	// The primary key.
	PrimaryKey pulumi.StringPtrInput `pulumi:"primaryKey"`
	// The secondary key.
	SecondaryKey pulumi.StringPtrInput `pulumi:"secondaryKey"`
}

func (EndpointAuthKeysResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAuthKeysResponse)(nil)).Elem()
}

func (i EndpointAuthKeysResponseArgs) ToEndpointAuthKeysResponseOutput() EndpointAuthKeysResponseOutput {
	return i.ToEndpointAuthKeysResponseOutputWithContext(context.Background())
}

func (i EndpointAuthKeysResponseArgs) ToEndpointAuthKeysResponseOutputWithContext(ctx context.Context) EndpointAuthKeysResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAuthKeysResponseOutput)
}

type EndpointAuthKeysResponseOutput struct{ *pulumi.OutputState }

func (EndpointAuthKeysResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAuthKeysResponse)(nil)).Elem()
}

func (o EndpointAuthKeysResponseOutput) ToEndpointAuthKeysResponseOutput() EndpointAuthKeysResponseOutput {
	return o
}

func (o EndpointAuthKeysResponseOutput) ToEndpointAuthKeysResponseOutputWithContext(ctx context.Context) EndpointAuthKeysResponseOutput {
	return o
}

// The primary key.
func (o EndpointAuthKeysResponseOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointAuthKeysResponse) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// The secondary key.
func (o EndpointAuthKeysResponseOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointAuthKeysResponse) *string { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

type EnvironmentContainerType struct {
	// The asset description text.
	Description *string `pulumi:"description"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// EnvironmentContainerTypeInput is an input type that accepts EnvironmentContainerTypeArgs and EnvironmentContainerTypeOutput values.
// You can construct a concrete instance of `EnvironmentContainerTypeInput` via:
//
//          EnvironmentContainerTypeArgs{...}
type EnvironmentContainerTypeInput interface {
	pulumi.Input

	ToEnvironmentContainerTypeOutput() EnvironmentContainerTypeOutput
	ToEnvironmentContainerTypeOutputWithContext(context.Context) EnvironmentContainerTypeOutput
}

type EnvironmentContainerTypeArgs struct {
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (EnvironmentContainerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentContainerType)(nil)).Elem()
}

func (i EnvironmentContainerTypeArgs) ToEnvironmentContainerTypeOutput() EnvironmentContainerTypeOutput {
	return i.ToEnvironmentContainerTypeOutputWithContext(context.Background())
}

func (i EnvironmentContainerTypeArgs) ToEnvironmentContainerTypeOutputWithContext(ctx context.Context) EnvironmentContainerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentContainerTypeOutput)
}

func (i EnvironmentContainerTypeArgs) ToEnvironmentContainerTypePtrOutput() EnvironmentContainerTypePtrOutput {
	return i.ToEnvironmentContainerTypePtrOutputWithContext(context.Background())
}

func (i EnvironmentContainerTypeArgs) ToEnvironmentContainerTypePtrOutputWithContext(ctx context.Context) EnvironmentContainerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentContainerTypeOutput).ToEnvironmentContainerTypePtrOutputWithContext(ctx)
}

// EnvironmentContainerTypePtrInput is an input type that accepts EnvironmentContainerTypeArgs, EnvironmentContainerTypePtr and EnvironmentContainerTypePtrOutput values.
// You can construct a concrete instance of `EnvironmentContainerTypePtrInput` via:
//
//          EnvironmentContainerTypeArgs{...}
//
//  or:
//
//          nil
type EnvironmentContainerTypePtrInput interface {
	pulumi.Input

	ToEnvironmentContainerTypePtrOutput() EnvironmentContainerTypePtrOutput
	ToEnvironmentContainerTypePtrOutputWithContext(context.Context) EnvironmentContainerTypePtrOutput
}

type environmentContainerTypePtrType EnvironmentContainerTypeArgs

func EnvironmentContainerTypePtr(v *EnvironmentContainerTypeArgs) EnvironmentContainerTypePtrInput {
	return (*environmentContainerTypePtrType)(v)
}

func (*environmentContainerTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentContainerType)(nil)).Elem()
}

func (i *environmentContainerTypePtrType) ToEnvironmentContainerTypePtrOutput() EnvironmentContainerTypePtrOutput {
	return i.ToEnvironmentContainerTypePtrOutputWithContext(context.Background())
}

func (i *environmentContainerTypePtrType) ToEnvironmentContainerTypePtrOutputWithContext(ctx context.Context) EnvironmentContainerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentContainerTypePtrOutput)
}

type EnvironmentContainerTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentContainerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentContainerType)(nil)).Elem()
}

func (o EnvironmentContainerTypeOutput) ToEnvironmentContainerTypeOutput() EnvironmentContainerTypeOutput {
	return o
}

func (o EnvironmentContainerTypeOutput) ToEnvironmentContainerTypeOutputWithContext(ctx context.Context) EnvironmentContainerTypeOutput {
	return o
}

func (o EnvironmentContainerTypeOutput) ToEnvironmentContainerTypePtrOutput() EnvironmentContainerTypePtrOutput {
	return o.ToEnvironmentContainerTypePtrOutputWithContext(context.Background())
}

func (o EnvironmentContainerTypeOutput) ToEnvironmentContainerTypePtrOutputWithContext(ctx context.Context) EnvironmentContainerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentContainerType) *EnvironmentContainerType {
		return &v
	}).(EnvironmentContainerTypePtrOutput)
}

// The asset description text.
func (o EnvironmentContainerTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentContainerType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o EnvironmentContainerTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentContainerType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o EnvironmentContainerTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentContainerType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type EnvironmentContainerTypePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentContainerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentContainerType)(nil)).Elem()
}

func (o EnvironmentContainerTypePtrOutput) ToEnvironmentContainerTypePtrOutput() EnvironmentContainerTypePtrOutput {
	return o
}

func (o EnvironmentContainerTypePtrOutput) ToEnvironmentContainerTypePtrOutputWithContext(ctx context.Context) EnvironmentContainerTypePtrOutput {
	return o
}

func (o EnvironmentContainerTypePtrOutput) Elem() EnvironmentContainerTypeOutput {
	return o.ApplyT(func(v *EnvironmentContainerType) EnvironmentContainerType {
		if v != nil {
			return *v
		}
		var ret EnvironmentContainerType
		return ret
	}).(EnvironmentContainerTypeOutput)
}

// The asset description text.
func (o EnvironmentContainerTypePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentContainerType) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o EnvironmentContainerTypePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EnvironmentContainerType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o EnvironmentContainerTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EnvironmentContainerType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type EnvironmentContainerResponse struct {
	// The asset description text.
	Description *string `pulumi:"description"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// EnvironmentContainerResponseInput is an input type that accepts EnvironmentContainerResponseArgs and EnvironmentContainerResponseOutput values.
// You can construct a concrete instance of `EnvironmentContainerResponseInput` via:
//
//          EnvironmentContainerResponseArgs{...}
type EnvironmentContainerResponseInput interface {
	pulumi.Input

	ToEnvironmentContainerResponseOutput() EnvironmentContainerResponseOutput
	ToEnvironmentContainerResponseOutputWithContext(context.Context) EnvironmentContainerResponseOutput
}

type EnvironmentContainerResponseArgs struct {
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (EnvironmentContainerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentContainerResponse)(nil)).Elem()
}

func (i EnvironmentContainerResponseArgs) ToEnvironmentContainerResponseOutput() EnvironmentContainerResponseOutput {
	return i.ToEnvironmentContainerResponseOutputWithContext(context.Background())
}

func (i EnvironmentContainerResponseArgs) ToEnvironmentContainerResponseOutputWithContext(ctx context.Context) EnvironmentContainerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentContainerResponseOutput)
}

func (i EnvironmentContainerResponseArgs) ToEnvironmentContainerResponsePtrOutput() EnvironmentContainerResponsePtrOutput {
	return i.ToEnvironmentContainerResponsePtrOutputWithContext(context.Background())
}

func (i EnvironmentContainerResponseArgs) ToEnvironmentContainerResponsePtrOutputWithContext(ctx context.Context) EnvironmentContainerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentContainerResponseOutput).ToEnvironmentContainerResponsePtrOutputWithContext(ctx)
}

// EnvironmentContainerResponsePtrInput is an input type that accepts EnvironmentContainerResponseArgs, EnvironmentContainerResponsePtr and EnvironmentContainerResponsePtrOutput values.
// You can construct a concrete instance of `EnvironmentContainerResponsePtrInput` via:
//
//          EnvironmentContainerResponseArgs{...}
//
//  or:
//
//          nil
type EnvironmentContainerResponsePtrInput interface {
	pulumi.Input

	ToEnvironmentContainerResponsePtrOutput() EnvironmentContainerResponsePtrOutput
	ToEnvironmentContainerResponsePtrOutputWithContext(context.Context) EnvironmentContainerResponsePtrOutput
}

type environmentContainerResponsePtrType EnvironmentContainerResponseArgs

func EnvironmentContainerResponsePtr(v *EnvironmentContainerResponseArgs) EnvironmentContainerResponsePtrInput {
	return (*environmentContainerResponsePtrType)(v)
}

func (*environmentContainerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentContainerResponse)(nil)).Elem()
}

func (i *environmentContainerResponsePtrType) ToEnvironmentContainerResponsePtrOutput() EnvironmentContainerResponsePtrOutput {
	return i.ToEnvironmentContainerResponsePtrOutputWithContext(context.Background())
}

func (i *environmentContainerResponsePtrType) ToEnvironmentContainerResponsePtrOutputWithContext(ctx context.Context) EnvironmentContainerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentContainerResponsePtrOutput)
}

type EnvironmentContainerResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentContainerResponse)(nil)).Elem()
}

func (o EnvironmentContainerResponseOutput) ToEnvironmentContainerResponseOutput() EnvironmentContainerResponseOutput {
	return o
}

func (o EnvironmentContainerResponseOutput) ToEnvironmentContainerResponseOutputWithContext(ctx context.Context) EnvironmentContainerResponseOutput {
	return o
}

func (o EnvironmentContainerResponseOutput) ToEnvironmentContainerResponsePtrOutput() EnvironmentContainerResponsePtrOutput {
	return o.ToEnvironmentContainerResponsePtrOutputWithContext(context.Background())
}

func (o EnvironmentContainerResponseOutput) ToEnvironmentContainerResponsePtrOutputWithContext(ctx context.Context) EnvironmentContainerResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentContainerResponse) *EnvironmentContainerResponse {
		return &v
	}).(EnvironmentContainerResponsePtrOutput)
}

// The asset description text.
func (o EnvironmentContainerResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentContainerResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o EnvironmentContainerResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentContainerResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o EnvironmentContainerResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentContainerResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type EnvironmentContainerResponsePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentContainerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentContainerResponse)(nil)).Elem()
}

func (o EnvironmentContainerResponsePtrOutput) ToEnvironmentContainerResponsePtrOutput() EnvironmentContainerResponsePtrOutput {
	return o
}

func (o EnvironmentContainerResponsePtrOutput) ToEnvironmentContainerResponsePtrOutputWithContext(ctx context.Context) EnvironmentContainerResponsePtrOutput {
	return o
}

func (o EnvironmentContainerResponsePtrOutput) Elem() EnvironmentContainerResponseOutput {
	return o.ApplyT(func(v *EnvironmentContainerResponse) EnvironmentContainerResponse {
		if v != nil {
			return *v
		}
		var ret EnvironmentContainerResponse
		return ret
	}).(EnvironmentContainerResponseOutput)
}

// The asset description text.
func (o EnvironmentContainerResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentContainerResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o EnvironmentContainerResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EnvironmentContainerResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o EnvironmentContainerResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EnvironmentContainerResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type EnvironmentImageRequestEnvironment struct {
	// The definition of a Docker container.
	Docker *ModelEnvironmentDefinitionDocker `pulumi:"docker"`
	// Definition of environment variables to be defined in the environment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
	InferencingStackVersion *string `pulumi:"inferencingStackVersion"`
	// The name of the environment.
	Name *string `pulumi:"name"`
	// Settings for a Python environment.
	Python *ModelEnvironmentDefinitionPython `pulumi:"python"`
	// Settings for a R environment.
	R *ModelEnvironmentDefinitionR `pulumi:"r"`
	// The configuration for a Spark environment.
	Spark *ModelEnvironmentDefinitionSpark `pulumi:"spark"`
	// The environment version.
	Version *string `pulumi:"version"`
}

// EnvironmentImageRequestEnvironmentInput is an input type that accepts EnvironmentImageRequestEnvironmentArgs and EnvironmentImageRequestEnvironmentOutput values.
// You can construct a concrete instance of `EnvironmentImageRequestEnvironmentInput` via:
//
//          EnvironmentImageRequestEnvironmentArgs{...}
type EnvironmentImageRequestEnvironmentInput interface {
	pulumi.Input

	ToEnvironmentImageRequestEnvironmentOutput() EnvironmentImageRequestEnvironmentOutput
	ToEnvironmentImageRequestEnvironmentOutputWithContext(context.Context) EnvironmentImageRequestEnvironmentOutput
}

type EnvironmentImageRequestEnvironmentArgs struct {
	// The definition of a Docker container.
	Docker ModelEnvironmentDefinitionDockerPtrInput `pulumi:"docker"`
	// Definition of environment variables to be defined in the environment.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
	InferencingStackVersion pulumi.StringPtrInput `pulumi:"inferencingStackVersion"`
	// The name of the environment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Settings for a Python environment.
	Python ModelEnvironmentDefinitionPythonPtrInput `pulumi:"python"`
	// Settings for a R environment.
	R ModelEnvironmentDefinitionRPtrInput `pulumi:"r"`
	// The configuration for a Spark environment.
	Spark ModelEnvironmentDefinitionSparkPtrInput `pulumi:"spark"`
	// The environment version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (EnvironmentImageRequestEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageRequestEnvironment)(nil)).Elem()
}

func (i EnvironmentImageRequestEnvironmentArgs) ToEnvironmentImageRequestEnvironmentOutput() EnvironmentImageRequestEnvironmentOutput {
	return i.ToEnvironmentImageRequestEnvironmentOutputWithContext(context.Background())
}

func (i EnvironmentImageRequestEnvironmentArgs) ToEnvironmentImageRequestEnvironmentOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageRequestEnvironmentOutput)
}

func (i EnvironmentImageRequestEnvironmentArgs) ToEnvironmentImageRequestEnvironmentPtrOutput() EnvironmentImageRequestEnvironmentPtrOutput {
	return i.ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(context.Background())
}

func (i EnvironmentImageRequestEnvironmentArgs) ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageRequestEnvironmentOutput).ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(ctx)
}

// EnvironmentImageRequestEnvironmentPtrInput is an input type that accepts EnvironmentImageRequestEnvironmentArgs, EnvironmentImageRequestEnvironmentPtr and EnvironmentImageRequestEnvironmentPtrOutput values.
// You can construct a concrete instance of `EnvironmentImageRequestEnvironmentPtrInput` via:
//
//          EnvironmentImageRequestEnvironmentArgs{...}
//
//  or:
//
//          nil
type EnvironmentImageRequestEnvironmentPtrInput interface {
	pulumi.Input

	ToEnvironmentImageRequestEnvironmentPtrOutput() EnvironmentImageRequestEnvironmentPtrOutput
	ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(context.Context) EnvironmentImageRequestEnvironmentPtrOutput
}

type environmentImageRequestEnvironmentPtrType EnvironmentImageRequestEnvironmentArgs

func EnvironmentImageRequestEnvironmentPtr(v *EnvironmentImageRequestEnvironmentArgs) EnvironmentImageRequestEnvironmentPtrInput {
	return (*environmentImageRequestEnvironmentPtrType)(v)
}

func (*environmentImageRequestEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageRequestEnvironment)(nil)).Elem()
}

func (i *environmentImageRequestEnvironmentPtrType) ToEnvironmentImageRequestEnvironmentPtrOutput() EnvironmentImageRequestEnvironmentPtrOutput {
	return i.ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(context.Background())
}

func (i *environmentImageRequestEnvironmentPtrType) ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageRequestEnvironmentPtrOutput)
}

type EnvironmentImageRequestEnvironmentOutput struct{ *pulumi.OutputState }

func (EnvironmentImageRequestEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageRequestEnvironment)(nil)).Elem()
}

func (o EnvironmentImageRequestEnvironmentOutput) ToEnvironmentImageRequestEnvironmentOutput() EnvironmentImageRequestEnvironmentOutput {
	return o
}

func (o EnvironmentImageRequestEnvironmentOutput) ToEnvironmentImageRequestEnvironmentOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentOutput {
	return o
}

func (o EnvironmentImageRequestEnvironmentOutput) ToEnvironmentImageRequestEnvironmentPtrOutput() EnvironmentImageRequestEnvironmentPtrOutput {
	return o.ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(context.Background())
}

func (o EnvironmentImageRequestEnvironmentOutput) ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentImageRequestEnvironment) *EnvironmentImageRequestEnvironment {
		return &v
	}).(EnvironmentImageRequestEnvironmentPtrOutput)
}

// The definition of a Docker container.
func (o EnvironmentImageRequestEnvironmentOutput) Docker() ModelEnvironmentDefinitionDockerPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironment) *ModelEnvironmentDefinitionDocker { return v.Docker }).(ModelEnvironmentDefinitionDockerPtrOutput)
}

// Definition of environment variables to be defined in the environment.
func (o EnvironmentImageRequestEnvironmentOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironment) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
func (o EnvironmentImageRequestEnvironmentOutput) InferencingStackVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironment) *string { return v.InferencingStackVersion }).(pulumi.StringPtrOutput)
}

// The name of the environment.
func (o EnvironmentImageRequestEnvironmentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironment) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Settings for a Python environment.
func (o EnvironmentImageRequestEnvironmentOutput) Python() ModelEnvironmentDefinitionPythonPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironment) *ModelEnvironmentDefinitionPython { return v.Python }).(ModelEnvironmentDefinitionPythonPtrOutput)
}

// Settings for a R environment.
func (o EnvironmentImageRequestEnvironmentOutput) R() ModelEnvironmentDefinitionRPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironment) *ModelEnvironmentDefinitionR { return v.R }).(ModelEnvironmentDefinitionRPtrOutput)
}

// The configuration for a Spark environment.
func (o EnvironmentImageRequestEnvironmentOutput) Spark() ModelEnvironmentDefinitionSparkPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironment) *ModelEnvironmentDefinitionSpark { return v.Spark }).(ModelEnvironmentDefinitionSparkPtrOutput)
}

// The environment version.
func (o EnvironmentImageRequestEnvironmentOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironment) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type EnvironmentImageRequestEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentImageRequestEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageRequestEnvironment)(nil)).Elem()
}

func (o EnvironmentImageRequestEnvironmentPtrOutput) ToEnvironmentImageRequestEnvironmentPtrOutput() EnvironmentImageRequestEnvironmentPtrOutput {
	return o
}

func (o EnvironmentImageRequestEnvironmentPtrOutput) ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentPtrOutput {
	return o
}

func (o EnvironmentImageRequestEnvironmentPtrOutput) Elem() EnvironmentImageRequestEnvironmentOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) EnvironmentImageRequestEnvironment {
		if v != nil {
			return *v
		}
		var ret EnvironmentImageRequestEnvironment
		return ret
	}).(EnvironmentImageRequestEnvironmentOutput)
}

// The definition of a Docker container.
func (o EnvironmentImageRequestEnvironmentPtrOutput) Docker() ModelEnvironmentDefinitionDockerPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) *ModelEnvironmentDefinitionDocker {
		if v == nil {
			return nil
		}
		return v.Docker
	}).(ModelEnvironmentDefinitionDockerPtrOutput)
}

// Definition of environment variables to be defined in the environment.
func (o EnvironmentImageRequestEnvironmentPtrOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
func (o EnvironmentImageRequestEnvironmentPtrOutput) InferencingStackVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.InferencingStackVersion
	}).(pulumi.StringPtrOutput)
}

// The name of the environment.
func (o EnvironmentImageRequestEnvironmentPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Settings for a Python environment.
func (o EnvironmentImageRequestEnvironmentPtrOutput) Python() ModelEnvironmentDefinitionPythonPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) *ModelEnvironmentDefinitionPython {
		if v == nil {
			return nil
		}
		return v.Python
	}).(ModelEnvironmentDefinitionPythonPtrOutput)
}

// Settings for a R environment.
func (o EnvironmentImageRequestEnvironmentPtrOutput) R() ModelEnvironmentDefinitionRPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) *ModelEnvironmentDefinitionR {
		if v == nil {
			return nil
		}
		return v.R
	}).(ModelEnvironmentDefinitionRPtrOutput)
}

// The configuration for a Spark environment.
func (o EnvironmentImageRequestEnvironmentPtrOutput) Spark() ModelEnvironmentDefinitionSparkPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) *ModelEnvironmentDefinitionSpark {
		if v == nil {
			return nil
		}
		return v.Spark
	}).(ModelEnvironmentDefinitionSparkPtrOutput)
}

// The environment version.
func (o EnvironmentImageRequestEnvironmentPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type EnvironmentImageRequestEnvironmentReference struct {
	// Name of the environment.
	Name *string `pulumi:"name"`
	// Version of the environment.
	Version *string `pulumi:"version"`
}

// EnvironmentImageRequestEnvironmentReferenceInput is an input type that accepts EnvironmentImageRequestEnvironmentReferenceArgs and EnvironmentImageRequestEnvironmentReferenceOutput values.
// You can construct a concrete instance of `EnvironmentImageRequestEnvironmentReferenceInput` via:
//
//          EnvironmentImageRequestEnvironmentReferenceArgs{...}
type EnvironmentImageRequestEnvironmentReferenceInput interface {
	pulumi.Input

	ToEnvironmentImageRequestEnvironmentReferenceOutput() EnvironmentImageRequestEnvironmentReferenceOutput
	ToEnvironmentImageRequestEnvironmentReferenceOutputWithContext(context.Context) EnvironmentImageRequestEnvironmentReferenceOutput
}

type EnvironmentImageRequestEnvironmentReferenceArgs struct {
	// Name of the environment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Version of the environment.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (EnvironmentImageRequestEnvironmentReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageRequestEnvironmentReference)(nil)).Elem()
}

func (i EnvironmentImageRequestEnvironmentReferenceArgs) ToEnvironmentImageRequestEnvironmentReferenceOutput() EnvironmentImageRequestEnvironmentReferenceOutput {
	return i.ToEnvironmentImageRequestEnvironmentReferenceOutputWithContext(context.Background())
}

func (i EnvironmentImageRequestEnvironmentReferenceArgs) ToEnvironmentImageRequestEnvironmentReferenceOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageRequestEnvironmentReferenceOutput)
}

func (i EnvironmentImageRequestEnvironmentReferenceArgs) ToEnvironmentImageRequestEnvironmentReferencePtrOutput() EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return i.ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (i EnvironmentImageRequestEnvironmentReferenceArgs) ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageRequestEnvironmentReferenceOutput).ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(ctx)
}

// EnvironmentImageRequestEnvironmentReferencePtrInput is an input type that accepts EnvironmentImageRequestEnvironmentReferenceArgs, EnvironmentImageRequestEnvironmentReferencePtr and EnvironmentImageRequestEnvironmentReferencePtrOutput values.
// You can construct a concrete instance of `EnvironmentImageRequestEnvironmentReferencePtrInput` via:
//
//          EnvironmentImageRequestEnvironmentReferenceArgs{...}
//
//  or:
//
//          nil
type EnvironmentImageRequestEnvironmentReferencePtrInput interface {
	pulumi.Input

	ToEnvironmentImageRequestEnvironmentReferencePtrOutput() EnvironmentImageRequestEnvironmentReferencePtrOutput
	ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(context.Context) EnvironmentImageRequestEnvironmentReferencePtrOutput
}

type environmentImageRequestEnvironmentReferencePtrType EnvironmentImageRequestEnvironmentReferenceArgs

func EnvironmentImageRequestEnvironmentReferencePtr(v *EnvironmentImageRequestEnvironmentReferenceArgs) EnvironmentImageRequestEnvironmentReferencePtrInput {
	return (*environmentImageRequestEnvironmentReferencePtrType)(v)
}

func (*environmentImageRequestEnvironmentReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageRequestEnvironmentReference)(nil)).Elem()
}

func (i *environmentImageRequestEnvironmentReferencePtrType) ToEnvironmentImageRequestEnvironmentReferencePtrOutput() EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return i.ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (i *environmentImageRequestEnvironmentReferencePtrType) ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageRequestEnvironmentReferencePtrOutput)
}

type EnvironmentImageRequestEnvironmentReferenceOutput struct{ *pulumi.OutputState }

func (EnvironmentImageRequestEnvironmentReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageRequestEnvironmentReference)(nil)).Elem()
}

func (o EnvironmentImageRequestEnvironmentReferenceOutput) ToEnvironmentImageRequestEnvironmentReferenceOutput() EnvironmentImageRequestEnvironmentReferenceOutput {
	return o
}

func (o EnvironmentImageRequestEnvironmentReferenceOutput) ToEnvironmentImageRequestEnvironmentReferenceOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentReferenceOutput {
	return o
}

func (o EnvironmentImageRequestEnvironmentReferenceOutput) ToEnvironmentImageRequestEnvironmentReferencePtrOutput() EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return o.ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (o EnvironmentImageRequestEnvironmentReferenceOutput) ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentImageRequestEnvironmentReference) *EnvironmentImageRequestEnvironmentReference {
		return &v
	}).(EnvironmentImageRequestEnvironmentReferencePtrOutput)
}

// Name of the environment.
func (o EnvironmentImageRequestEnvironmentReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironmentReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Version of the environment.
func (o EnvironmentImageRequestEnvironmentReferenceOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironmentReference) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type EnvironmentImageRequestEnvironmentReferencePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentImageRequestEnvironmentReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageRequestEnvironmentReference)(nil)).Elem()
}

func (o EnvironmentImageRequestEnvironmentReferencePtrOutput) ToEnvironmentImageRequestEnvironmentReferencePtrOutput() EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return o
}

func (o EnvironmentImageRequestEnvironmentReferencePtrOutput) ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return o
}

func (o EnvironmentImageRequestEnvironmentReferencePtrOutput) Elem() EnvironmentImageRequestEnvironmentReferenceOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironmentReference) EnvironmentImageRequestEnvironmentReference {
		if v != nil {
			return *v
		}
		var ret EnvironmentImageRequestEnvironmentReference
		return ret
	}).(EnvironmentImageRequestEnvironmentReferenceOutput)
}

// Name of the environment.
func (o EnvironmentImageRequestEnvironmentReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironmentReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Version of the environment.
func (o EnvironmentImageRequestEnvironmentReferencePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironmentReference) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type EnvironmentImageResponseResponseEnvironment struct {
	// The definition of a Docker container.
	Docker *ModelEnvironmentDefinitionResponseResponseDocker `pulumi:"docker"`
	// Definition of environment variables to be defined in the environment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
	InferencingStackVersion *string `pulumi:"inferencingStackVersion"`
	// The name of the environment.
	Name *string `pulumi:"name"`
	// Settings for a Python environment.
	Python *ModelEnvironmentDefinitionResponseResponsePython `pulumi:"python"`
	// Settings for a R environment.
	R *ModelEnvironmentDefinitionResponseResponseR `pulumi:"r"`
	// The configuration for a Spark environment.
	Spark *ModelEnvironmentDefinitionResponseResponseSpark `pulumi:"spark"`
	// The environment version.
	Version *string `pulumi:"version"`
}

// EnvironmentImageResponseResponseEnvironmentInput is an input type that accepts EnvironmentImageResponseResponseEnvironmentArgs and EnvironmentImageResponseResponseEnvironmentOutput values.
// You can construct a concrete instance of `EnvironmentImageResponseResponseEnvironmentInput` via:
//
//          EnvironmentImageResponseResponseEnvironmentArgs{...}
type EnvironmentImageResponseResponseEnvironmentInput interface {
	pulumi.Input

	ToEnvironmentImageResponseResponseEnvironmentOutput() EnvironmentImageResponseResponseEnvironmentOutput
	ToEnvironmentImageResponseResponseEnvironmentOutputWithContext(context.Context) EnvironmentImageResponseResponseEnvironmentOutput
}

type EnvironmentImageResponseResponseEnvironmentArgs struct {
	// The definition of a Docker container.
	Docker ModelEnvironmentDefinitionResponseResponseDockerPtrInput `pulumi:"docker"`
	// Definition of environment variables to be defined in the environment.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
	InferencingStackVersion pulumi.StringPtrInput `pulumi:"inferencingStackVersion"`
	// The name of the environment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Settings for a Python environment.
	Python ModelEnvironmentDefinitionResponseResponsePythonPtrInput `pulumi:"python"`
	// Settings for a R environment.
	R ModelEnvironmentDefinitionResponseResponseRPtrInput `pulumi:"r"`
	// The configuration for a Spark environment.
	Spark ModelEnvironmentDefinitionResponseResponseSparkPtrInput `pulumi:"spark"`
	// The environment version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (EnvironmentImageResponseResponseEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageResponseResponseEnvironment)(nil)).Elem()
}

func (i EnvironmentImageResponseResponseEnvironmentArgs) ToEnvironmentImageResponseResponseEnvironmentOutput() EnvironmentImageResponseResponseEnvironmentOutput {
	return i.ToEnvironmentImageResponseResponseEnvironmentOutputWithContext(context.Background())
}

func (i EnvironmentImageResponseResponseEnvironmentArgs) ToEnvironmentImageResponseResponseEnvironmentOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseResponseEnvironmentOutput)
}

func (i EnvironmentImageResponseResponseEnvironmentArgs) ToEnvironmentImageResponseResponseEnvironmentPtrOutput() EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return i.ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(context.Background())
}

func (i EnvironmentImageResponseResponseEnvironmentArgs) ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseResponseEnvironmentOutput).ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(ctx)
}

// EnvironmentImageResponseResponseEnvironmentPtrInput is an input type that accepts EnvironmentImageResponseResponseEnvironmentArgs, EnvironmentImageResponseResponseEnvironmentPtr and EnvironmentImageResponseResponseEnvironmentPtrOutput values.
// You can construct a concrete instance of `EnvironmentImageResponseResponseEnvironmentPtrInput` via:
//
//          EnvironmentImageResponseResponseEnvironmentArgs{...}
//
//  or:
//
//          nil
type EnvironmentImageResponseResponseEnvironmentPtrInput interface {
	pulumi.Input

	ToEnvironmentImageResponseResponseEnvironmentPtrOutput() EnvironmentImageResponseResponseEnvironmentPtrOutput
	ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(context.Context) EnvironmentImageResponseResponseEnvironmentPtrOutput
}

type environmentImageResponseResponseEnvironmentPtrType EnvironmentImageResponseResponseEnvironmentArgs

func EnvironmentImageResponseResponseEnvironmentPtr(v *EnvironmentImageResponseResponseEnvironmentArgs) EnvironmentImageResponseResponseEnvironmentPtrInput {
	return (*environmentImageResponseResponseEnvironmentPtrType)(v)
}

func (*environmentImageResponseResponseEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageResponseResponseEnvironment)(nil)).Elem()
}

func (i *environmentImageResponseResponseEnvironmentPtrType) ToEnvironmentImageResponseResponseEnvironmentPtrOutput() EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return i.ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(context.Background())
}

func (i *environmentImageResponseResponseEnvironmentPtrType) ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseResponseEnvironmentPtrOutput)
}

type EnvironmentImageResponseResponseEnvironmentOutput struct{ *pulumi.OutputState }

func (EnvironmentImageResponseResponseEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageResponseResponseEnvironment)(nil)).Elem()
}

func (o EnvironmentImageResponseResponseEnvironmentOutput) ToEnvironmentImageResponseResponseEnvironmentOutput() EnvironmentImageResponseResponseEnvironmentOutput {
	return o
}

func (o EnvironmentImageResponseResponseEnvironmentOutput) ToEnvironmentImageResponseResponseEnvironmentOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentOutput {
	return o
}

func (o EnvironmentImageResponseResponseEnvironmentOutput) ToEnvironmentImageResponseResponseEnvironmentPtrOutput() EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return o.ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(context.Background())
}

func (o EnvironmentImageResponseResponseEnvironmentOutput) ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentImageResponseResponseEnvironment) *EnvironmentImageResponseResponseEnvironment {
		return &v
	}).(EnvironmentImageResponseResponseEnvironmentPtrOutput)
}

// The definition of a Docker container.
func (o EnvironmentImageResponseResponseEnvironmentOutput) Docker() ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironment) *ModelEnvironmentDefinitionResponseResponseDocker {
		return v.Docker
	}).(ModelEnvironmentDefinitionResponseResponseDockerPtrOutput)
}

// Definition of environment variables to be defined in the environment.
func (o EnvironmentImageResponseResponseEnvironmentOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironment) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
func (o EnvironmentImageResponseResponseEnvironmentOutput) InferencingStackVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironment) *string { return v.InferencingStackVersion }).(pulumi.StringPtrOutput)
}

// The name of the environment.
func (o EnvironmentImageResponseResponseEnvironmentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironment) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Settings for a Python environment.
func (o EnvironmentImageResponseResponseEnvironmentOutput) Python() ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironment) *ModelEnvironmentDefinitionResponseResponsePython {
		return v.Python
	}).(ModelEnvironmentDefinitionResponseResponsePythonPtrOutput)
}

// Settings for a R environment.
func (o EnvironmentImageResponseResponseEnvironmentOutput) R() ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironment) *ModelEnvironmentDefinitionResponseResponseR {
		return v.R
	}).(ModelEnvironmentDefinitionResponseResponseRPtrOutput)
}

// The configuration for a Spark environment.
func (o EnvironmentImageResponseResponseEnvironmentOutput) Spark() ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironment) *ModelEnvironmentDefinitionResponseResponseSpark {
		return v.Spark
	}).(ModelEnvironmentDefinitionResponseResponseSparkPtrOutput)
}

// The environment version.
func (o EnvironmentImageResponseResponseEnvironmentOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironment) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type EnvironmentImageResponseResponseEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentImageResponseResponseEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageResponseResponseEnvironment)(nil)).Elem()
}

func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) ToEnvironmentImageResponseResponseEnvironmentPtrOutput() EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return o
}

func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return o
}

func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) Elem() EnvironmentImageResponseResponseEnvironmentOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) EnvironmentImageResponseResponseEnvironment {
		if v != nil {
			return *v
		}
		var ret EnvironmentImageResponseResponseEnvironment
		return ret
	}).(EnvironmentImageResponseResponseEnvironmentOutput)
}

// The definition of a Docker container.
func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) Docker() ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) *ModelEnvironmentDefinitionResponseResponseDocker {
		if v == nil {
			return nil
		}
		return v.Docker
	}).(ModelEnvironmentDefinitionResponseResponseDockerPtrOutput)
}

// Definition of environment variables to be defined in the environment.
func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) InferencingStackVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.InferencingStackVersion
	}).(pulumi.StringPtrOutput)
}

// The name of the environment.
func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Settings for a Python environment.
func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) Python() ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) *ModelEnvironmentDefinitionResponseResponsePython {
		if v == nil {
			return nil
		}
		return v.Python
	}).(ModelEnvironmentDefinitionResponseResponsePythonPtrOutput)
}

// Settings for a R environment.
func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) R() ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) *ModelEnvironmentDefinitionResponseResponseR {
		if v == nil {
			return nil
		}
		return v.R
	}).(ModelEnvironmentDefinitionResponseResponseRPtrOutput)
}

// The configuration for a Spark environment.
func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) Spark() ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) *ModelEnvironmentDefinitionResponseResponseSpark {
		if v == nil {
			return nil
		}
		return v.Spark
	}).(ModelEnvironmentDefinitionResponseResponseSparkPtrOutput)
}

// The environment version.
func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type EnvironmentImageResponseResponseEnvironmentReference struct {
	// Name of the environment.
	Name *string `pulumi:"name"`
	// Version of the environment.
	Version *string `pulumi:"version"`
}

// EnvironmentImageResponseResponseEnvironmentReferenceInput is an input type that accepts EnvironmentImageResponseResponseEnvironmentReferenceArgs and EnvironmentImageResponseResponseEnvironmentReferenceOutput values.
// You can construct a concrete instance of `EnvironmentImageResponseResponseEnvironmentReferenceInput` via:
//
//          EnvironmentImageResponseResponseEnvironmentReferenceArgs{...}
type EnvironmentImageResponseResponseEnvironmentReferenceInput interface {
	pulumi.Input

	ToEnvironmentImageResponseResponseEnvironmentReferenceOutput() EnvironmentImageResponseResponseEnvironmentReferenceOutput
	ToEnvironmentImageResponseResponseEnvironmentReferenceOutputWithContext(context.Context) EnvironmentImageResponseResponseEnvironmentReferenceOutput
}

type EnvironmentImageResponseResponseEnvironmentReferenceArgs struct {
	// Name of the environment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Version of the environment.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (EnvironmentImageResponseResponseEnvironmentReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageResponseResponseEnvironmentReference)(nil)).Elem()
}

func (i EnvironmentImageResponseResponseEnvironmentReferenceArgs) ToEnvironmentImageResponseResponseEnvironmentReferenceOutput() EnvironmentImageResponseResponseEnvironmentReferenceOutput {
	return i.ToEnvironmentImageResponseResponseEnvironmentReferenceOutputWithContext(context.Background())
}

func (i EnvironmentImageResponseResponseEnvironmentReferenceArgs) ToEnvironmentImageResponseResponseEnvironmentReferenceOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseResponseEnvironmentReferenceOutput)
}

func (i EnvironmentImageResponseResponseEnvironmentReferenceArgs) ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutput() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return i.ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (i EnvironmentImageResponseResponseEnvironmentReferenceArgs) ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseResponseEnvironmentReferenceOutput).ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(ctx)
}

// EnvironmentImageResponseResponseEnvironmentReferencePtrInput is an input type that accepts EnvironmentImageResponseResponseEnvironmentReferenceArgs, EnvironmentImageResponseResponseEnvironmentReferencePtr and EnvironmentImageResponseResponseEnvironmentReferencePtrOutput values.
// You can construct a concrete instance of `EnvironmentImageResponseResponseEnvironmentReferencePtrInput` via:
//
//          EnvironmentImageResponseResponseEnvironmentReferenceArgs{...}
//
//  or:
//
//          nil
type EnvironmentImageResponseResponseEnvironmentReferencePtrInput interface {
	pulumi.Input

	ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutput() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput
	ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(context.Context) EnvironmentImageResponseResponseEnvironmentReferencePtrOutput
}

type environmentImageResponseResponseEnvironmentReferencePtrType EnvironmentImageResponseResponseEnvironmentReferenceArgs

func EnvironmentImageResponseResponseEnvironmentReferencePtr(v *EnvironmentImageResponseResponseEnvironmentReferenceArgs) EnvironmentImageResponseResponseEnvironmentReferencePtrInput {
	return (*environmentImageResponseResponseEnvironmentReferencePtrType)(v)
}

func (*environmentImageResponseResponseEnvironmentReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageResponseResponseEnvironmentReference)(nil)).Elem()
}

func (i *environmentImageResponseResponseEnvironmentReferencePtrType) ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutput() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return i.ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (i *environmentImageResponseResponseEnvironmentReferencePtrType) ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseResponseEnvironmentReferencePtrOutput)
}

type EnvironmentImageResponseResponseEnvironmentReferenceOutput struct{ *pulumi.OutputState }

func (EnvironmentImageResponseResponseEnvironmentReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageResponseResponseEnvironmentReference)(nil)).Elem()
}

func (o EnvironmentImageResponseResponseEnvironmentReferenceOutput) ToEnvironmentImageResponseResponseEnvironmentReferenceOutput() EnvironmentImageResponseResponseEnvironmentReferenceOutput {
	return o
}

func (o EnvironmentImageResponseResponseEnvironmentReferenceOutput) ToEnvironmentImageResponseResponseEnvironmentReferenceOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentReferenceOutput {
	return o
}

func (o EnvironmentImageResponseResponseEnvironmentReferenceOutput) ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutput() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return o.ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (o EnvironmentImageResponseResponseEnvironmentReferenceOutput) ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentImageResponseResponseEnvironmentReference) *EnvironmentImageResponseResponseEnvironmentReference {
		return &v
	}).(EnvironmentImageResponseResponseEnvironmentReferencePtrOutput)
}

// Name of the environment.
func (o EnvironmentImageResponseResponseEnvironmentReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironmentReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Version of the environment.
func (o EnvironmentImageResponseResponseEnvironmentReferenceOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironmentReference) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type EnvironmentImageResponseResponseEnvironmentReferencePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentImageResponseResponseEnvironmentReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageResponseResponseEnvironmentReference)(nil)).Elem()
}

func (o EnvironmentImageResponseResponseEnvironmentReferencePtrOutput) ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutput() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return o
}

func (o EnvironmentImageResponseResponseEnvironmentReferencePtrOutput) ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return o
}

func (o EnvironmentImageResponseResponseEnvironmentReferencePtrOutput) Elem() EnvironmentImageResponseResponseEnvironmentReferenceOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironmentReference) EnvironmentImageResponseResponseEnvironmentReference {
		if v != nil {
			return *v
		}
		var ret EnvironmentImageResponseResponseEnvironmentReference
		return ret
	}).(EnvironmentImageResponseResponseEnvironmentReferenceOutput)
}

// Name of the environment.
func (o EnvironmentImageResponseResponseEnvironmentReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironmentReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Version of the environment.
func (o EnvironmentImageResponseResponseEnvironmentReferencePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironmentReference) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type EnvironmentSpecificationVersionType struct {
	// Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
	// <see href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment" />
	CondaFile *string `pulumi:"condaFile"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Configuration settings for Docker.
	Docker interface{} `pulumi:"docker"`
	// Defines configuration specific to inference.
	InferenceContainerProperties *InferenceContainerProperties `pulumi:"inferenceContainerProperties"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// EnvironmentSpecificationVersionTypeInput is an input type that accepts EnvironmentSpecificationVersionTypeArgs and EnvironmentSpecificationVersionTypeOutput values.
// You can construct a concrete instance of `EnvironmentSpecificationVersionTypeInput` via:
//
//          EnvironmentSpecificationVersionTypeArgs{...}
type EnvironmentSpecificationVersionTypeInput interface {
	pulumi.Input

	ToEnvironmentSpecificationVersionTypeOutput() EnvironmentSpecificationVersionTypeOutput
	ToEnvironmentSpecificationVersionTypeOutputWithContext(context.Context) EnvironmentSpecificationVersionTypeOutput
}

type EnvironmentSpecificationVersionTypeArgs struct {
	// Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
	// <see href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment" />
	CondaFile pulumi.StringPtrInput `pulumi:"condaFile"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Configuration settings for Docker.
	Docker pulumi.Input `pulumi:"docker"`
	// Defines configuration specific to inference.
	InferenceContainerProperties InferenceContainerPropertiesPtrInput `pulumi:"inferenceContainerProperties"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous pulumi.BoolPtrInput `pulumi:"isAnonymous"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (EnvironmentSpecificationVersionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSpecificationVersionType)(nil)).Elem()
}

func (i EnvironmentSpecificationVersionTypeArgs) ToEnvironmentSpecificationVersionTypeOutput() EnvironmentSpecificationVersionTypeOutput {
	return i.ToEnvironmentSpecificationVersionTypeOutputWithContext(context.Background())
}

func (i EnvironmentSpecificationVersionTypeArgs) ToEnvironmentSpecificationVersionTypeOutputWithContext(ctx context.Context) EnvironmentSpecificationVersionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSpecificationVersionTypeOutput)
}

func (i EnvironmentSpecificationVersionTypeArgs) ToEnvironmentSpecificationVersionTypePtrOutput() EnvironmentSpecificationVersionTypePtrOutput {
	return i.ToEnvironmentSpecificationVersionTypePtrOutputWithContext(context.Background())
}

func (i EnvironmentSpecificationVersionTypeArgs) ToEnvironmentSpecificationVersionTypePtrOutputWithContext(ctx context.Context) EnvironmentSpecificationVersionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSpecificationVersionTypeOutput).ToEnvironmentSpecificationVersionTypePtrOutputWithContext(ctx)
}

// EnvironmentSpecificationVersionTypePtrInput is an input type that accepts EnvironmentSpecificationVersionTypeArgs, EnvironmentSpecificationVersionTypePtr and EnvironmentSpecificationVersionTypePtrOutput values.
// You can construct a concrete instance of `EnvironmentSpecificationVersionTypePtrInput` via:
//
//          EnvironmentSpecificationVersionTypeArgs{...}
//
//  or:
//
//          nil
type EnvironmentSpecificationVersionTypePtrInput interface {
	pulumi.Input

	ToEnvironmentSpecificationVersionTypePtrOutput() EnvironmentSpecificationVersionTypePtrOutput
	ToEnvironmentSpecificationVersionTypePtrOutputWithContext(context.Context) EnvironmentSpecificationVersionTypePtrOutput
}

type environmentSpecificationVersionTypePtrType EnvironmentSpecificationVersionTypeArgs

func EnvironmentSpecificationVersionTypePtr(v *EnvironmentSpecificationVersionTypeArgs) EnvironmentSpecificationVersionTypePtrInput {
	return (*environmentSpecificationVersionTypePtrType)(v)
}

func (*environmentSpecificationVersionTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentSpecificationVersionType)(nil)).Elem()
}

func (i *environmentSpecificationVersionTypePtrType) ToEnvironmentSpecificationVersionTypePtrOutput() EnvironmentSpecificationVersionTypePtrOutput {
	return i.ToEnvironmentSpecificationVersionTypePtrOutputWithContext(context.Background())
}

func (i *environmentSpecificationVersionTypePtrType) ToEnvironmentSpecificationVersionTypePtrOutputWithContext(ctx context.Context) EnvironmentSpecificationVersionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSpecificationVersionTypePtrOutput)
}

type EnvironmentSpecificationVersionTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentSpecificationVersionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSpecificationVersionType)(nil)).Elem()
}

func (o EnvironmentSpecificationVersionTypeOutput) ToEnvironmentSpecificationVersionTypeOutput() EnvironmentSpecificationVersionTypeOutput {
	return o
}

func (o EnvironmentSpecificationVersionTypeOutput) ToEnvironmentSpecificationVersionTypeOutputWithContext(ctx context.Context) EnvironmentSpecificationVersionTypeOutput {
	return o
}

func (o EnvironmentSpecificationVersionTypeOutput) ToEnvironmentSpecificationVersionTypePtrOutput() EnvironmentSpecificationVersionTypePtrOutput {
	return o.ToEnvironmentSpecificationVersionTypePtrOutputWithContext(context.Background())
}

func (o EnvironmentSpecificationVersionTypeOutput) ToEnvironmentSpecificationVersionTypePtrOutputWithContext(ctx context.Context) EnvironmentSpecificationVersionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentSpecificationVersionType) *EnvironmentSpecificationVersionType {
		return &v
	}).(EnvironmentSpecificationVersionTypePtrOutput)
}

// Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
// <see href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment" />
func (o EnvironmentSpecificationVersionTypeOutput) CondaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionType) *string { return v.CondaFile }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o EnvironmentSpecificationVersionTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Configuration settings for Docker.
func (o EnvironmentSpecificationVersionTypeOutput) Docker() pulumi.AnyOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionType) interface{} { return v.Docker }).(pulumi.AnyOutput)
}

// Defines configuration specific to inference.
func (o EnvironmentSpecificationVersionTypeOutput) InferenceContainerProperties() InferenceContainerPropertiesPtrOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionType) *InferenceContainerProperties {
		return v.InferenceContainerProperties
	}).(InferenceContainerPropertiesPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o EnvironmentSpecificationVersionTypeOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionType) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// The asset property dictionary.
func (o EnvironmentSpecificationVersionTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o EnvironmentSpecificationVersionTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type EnvironmentSpecificationVersionTypePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentSpecificationVersionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentSpecificationVersionType)(nil)).Elem()
}

func (o EnvironmentSpecificationVersionTypePtrOutput) ToEnvironmentSpecificationVersionTypePtrOutput() EnvironmentSpecificationVersionTypePtrOutput {
	return o
}

func (o EnvironmentSpecificationVersionTypePtrOutput) ToEnvironmentSpecificationVersionTypePtrOutputWithContext(ctx context.Context) EnvironmentSpecificationVersionTypePtrOutput {
	return o
}

func (o EnvironmentSpecificationVersionTypePtrOutput) Elem() EnvironmentSpecificationVersionTypeOutput {
	return o.ApplyT(func(v *EnvironmentSpecificationVersionType) EnvironmentSpecificationVersionType {
		if v != nil {
			return *v
		}
		var ret EnvironmentSpecificationVersionType
		return ret
	}).(EnvironmentSpecificationVersionTypeOutput)
}

// Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
// <see href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment" />
func (o EnvironmentSpecificationVersionTypePtrOutput) CondaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentSpecificationVersionType) *string {
		if v == nil {
			return nil
		}
		return v.CondaFile
	}).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o EnvironmentSpecificationVersionTypePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentSpecificationVersionType) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Configuration settings for Docker.
func (o EnvironmentSpecificationVersionTypePtrOutput) Docker() pulumi.AnyOutput {
	return o.ApplyT(func(v *EnvironmentSpecificationVersionType) interface{} {
		if v == nil {
			return nil
		}
		return v.Docker
	}).(pulumi.AnyOutput)
}

// Defines configuration specific to inference.
func (o EnvironmentSpecificationVersionTypePtrOutput) InferenceContainerProperties() InferenceContainerPropertiesPtrOutput {
	return o.ApplyT(func(v *EnvironmentSpecificationVersionType) *InferenceContainerProperties {
		if v == nil {
			return nil
		}
		return v.InferenceContainerProperties
	}).(InferenceContainerPropertiesPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o EnvironmentSpecificationVersionTypePtrOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EnvironmentSpecificationVersionType) *bool {
		if v == nil {
			return nil
		}
		return v.IsAnonymous
	}).(pulumi.BoolPtrOutput)
}

// The asset property dictionary.
func (o EnvironmentSpecificationVersionTypePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EnvironmentSpecificationVersionType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o EnvironmentSpecificationVersionTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EnvironmentSpecificationVersionType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type EnvironmentSpecificationVersionResponse struct {
	// Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
	// <see href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment" />
	CondaFile *string `pulumi:"condaFile"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Configuration settings for Docker.
	Docker interface{} `pulumi:"docker"`
	// Environment specification is either user managed or curated by the Azure ML service
	// <see href="https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments" />
	EnvironmentSpecificationType string `pulumi:"environmentSpecificationType"`
	// Defines configuration specific to inference.
	InferenceContainerProperties *InferenceContainerPropertiesResponse `pulumi:"inferenceContainerProperties"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// EnvironmentSpecificationVersionResponseInput is an input type that accepts EnvironmentSpecificationVersionResponseArgs and EnvironmentSpecificationVersionResponseOutput values.
// You can construct a concrete instance of `EnvironmentSpecificationVersionResponseInput` via:
//
//          EnvironmentSpecificationVersionResponseArgs{...}
type EnvironmentSpecificationVersionResponseInput interface {
	pulumi.Input

	ToEnvironmentSpecificationVersionResponseOutput() EnvironmentSpecificationVersionResponseOutput
	ToEnvironmentSpecificationVersionResponseOutputWithContext(context.Context) EnvironmentSpecificationVersionResponseOutput
}

type EnvironmentSpecificationVersionResponseArgs struct {
	// Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
	// <see href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment" />
	CondaFile pulumi.StringPtrInput `pulumi:"condaFile"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Configuration settings for Docker.
	Docker pulumi.Input `pulumi:"docker"`
	// Environment specification is either user managed or curated by the Azure ML service
	// <see href="https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments" />
	EnvironmentSpecificationType pulumi.StringInput `pulumi:"environmentSpecificationType"`
	// Defines configuration specific to inference.
	InferenceContainerProperties InferenceContainerPropertiesResponsePtrInput `pulumi:"inferenceContainerProperties"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous pulumi.BoolPtrInput `pulumi:"isAnonymous"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (EnvironmentSpecificationVersionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSpecificationVersionResponse)(nil)).Elem()
}

func (i EnvironmentSpecificationVersionResponseArgs) ToEnvironmentSpecificationVersionResponseOutput() EnvironmentSpecificationVersionResponseOutput {
	return i.ToEnvironmentSpecificationVersionResponseOutputWithContext(context.Background())
}

func (i EnvironmentSpecificationVersionResponseArgs) ToEnvironmentSpecificationVersionResponseOutputWithContext(ctx context.Context) EnvironmentSpecificationVersionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSpecificationVersionResponseOutput)
}

func (i EnvironmentSpecificationVersionResponseArgs) ToEnvironmentSpecificationVersionResponsePtrOutput() EnvironmentSpecificationVersionResponsePtrOutput {
	return i.ToEnvironmentSpecificationVersionResponsePtrOutputWithContext(context.Background())
}

func (i EnvironmentSpecificationVersionResponseArgs) ToEnvironmentSpecificationVersionResponsePtrOutputWithContext(ctx context.Context) EnvironmentSpecificationVersionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSpecificationVersionResponseOutput).ToEnvironmentSpecificationVersionResponsePtrOutputWithContext(ctx)
}

// EnvironmentSpecificationVersionResponsePtrInput is an input type that accepts EnvironmentSpecificationVersionResponseArgs, EnvironmentSpecificationVersionResponsePtr and EnvironmentSpecificationVersionResponsePtrOutput values.
// You can construct a concrete instance of `EnvironmentSpecificationVersionResponsePtrInput` via:
//
//          EnvironmentSpecificationVersionResponseArgs{...}
//
//  or:
//
//          nil
type EnvironmentSpecificationVersionResponsePtrInput interface {
	pulumi.Input

	ToEnvironmentSpecificationVersionResponsePtrOutput() EnvironmentSpecificationVersionResponsePtrOutput
	ToEnvironmentSpecificationVersionResponsePtrOutputWithContext(context.Context) EnvironmentSpecificationVersionResponsePtrOutput
}

type environmentSpecificationVersionResponsePtrType EnvironmentSpecificationVersionResponseArgs

func EnvironmentSpecificationVersionResponsePtr(v *EnvironmentSpecificationVersionResponseArgs) EnvironmentSpecificationVersionResponsePtrInput {
	return (*environmentSpecificationVersionResponsePtrType)(v)
}

func (*environmentSpecificationVersionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentSpecificationVersionResponse)(nil)).Elem()
}

func (i *environmentSpecificationVersionResponsePtrType) ToEnvironmentSpecificationVersionResponsePtrOutput() EnvironmentSpecificationVersionResponsePtrOutput {
	return i.ToEnvironmentSpecificationVersionResponsePtrOutputWithContext(context.Background())
}

func (i *environmentSpecificationVersionResponsePtrType) ToEnvironmentSpecificationVersionResponsePtrOutputWithContext(ctx context.Context) EnvironmentSpecificationVersionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSpecificationVersionResponsePtrOutput)
}

type EnvironmentSpecificationVersionResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentSpecificationVersionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSpecificationVersionResponse)(nil)).Elem()
}

func (o EnvironmentSpecificationVersionResponseOutput) ToEnvironmentSpecificationVersionResponseOutput() EnvironmentSpecificationVersionResponseOutput {
	return o
}

func (o EnvironmentSpecificationVersionResponseOutput) ToEnvironmentSpecificationVersionResponseOutputWithContext(ctx context.Context) EnvironmentSpecificationVersionResponseOutput {
	return o
}

func (o EnvironmentSpecificationVersionResponseOutput) ToEnvironmentSpecificationVersionResponsePtrOutput() EnvironmentSpecificationVersionResponsePtrOutput {
	return o.ToEnvironmentSpecificationVersionResponsePtrOutputWithContext(context.Background())
}

func (o EnvironmentSpecificationVersionResponseOutput) ToEnvironmentSpecificationVersionResponsePtrOutputWithContext(ctx context.Context) EnvironmentSpecificationVersionResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentSpecificationVersionResponse) *EnvironmentSpecificationVersionResponse {
		return &v
	}).(EnvironmentSpecificationVersionResponsePtrOutput)
}

// Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
// <see href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment" />
func (o EnvironmentSpecificationVersionResponseOutput) CondaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionResponse) *string { return v.CondaFile }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o EnvironmentSpecificationVersionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Configuration settings for Docker.
func (o EnvironmentSpecificationVersionResponseOutput) Docker() pulumi.AnyOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionResponse) interface{} { return v.Docker }).(pulumi.AnyOutput)
}

// Environment specification is either user managed or curated by the Azure ML service
// <see href="https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments" />
func (o EnvironmentSpecificationVersionResponseOutput) EnvironmentSpecificationType() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionResponse) string { return v.EnvironmentSpecificationType }).(pulumi.StringOutput)
}

// Defines configuration specific to inference.
func (o EnvironmentSpecificationVersionResponseOutput) InferenceContainerProperties() InferenceContainerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionResponse) *InferenceContainerPropertiesResponse {
		return v.InferenceContainerProperties
	}).(InferenceContainerPropertiesResponsePtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o EnvironmentSpecificationVersionResponseOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionResponse) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// The asset property dictionary.
func (o EnvironmentSpecificationVersionResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o EnvironmentSpecificationVersionResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type EnvironmentSpecificationVersionResponsePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentSpecificationVersionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentSpecificationVersionResponse)(nil)).Elem()
}

func (o EnvironmentSpecificationVersionResponsePtrOutput) ToEnvironmentSpecificationVersionResponsePtrOutput() EnvironmentSpecificationVersionResponsePtrOutput {
	return o
}

func (o EnvironmentSpecificationVersionResponsePtrOutput) ToEnvironmentSpecificationVersionResponsePtrOutputWithContext(ctx context.Context) EnvironmentSpecificationVersionResponsePtrOutput {
	return o
}

func (o EnvironmentSpecificationVersionResponsePtrOutput) Elem() EnvironmentSpecificationVersionResponseOutput {
	return o.ApplyT(func(v *EnvironmentSpecificationVersionResponse) EnvironmentSpecificationVersionResponse {
		if v != nil {
			return *v
		}
		var ret EnvironmentSpecificationVersionResponse
		return ret
	}).(EnvironmentSpecificationVersionResponseOutput)
}

// Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
// <see href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment" />
func (o EnvironmentSpecificationVersionResponsePtrOutput) CondaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentSpecificationVersionResponse) *string {
		if v == nil {
			return nil
		}
		return v.CondaFile
	}).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o EnvironmentSpecificationVersionResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentSpecificationVersionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Configuration settings for Docker.
func (o EnvironmentSpecificationVersionResponsePtrOutput) Docker() pulumi.AnyOutput {
	return o.ApplyT(func(v *EnvironmentSpecificationVersionResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Docker
	}).(pulumi.AnyOutput)
}

// Environment specification is either user managed or curated by the Azure ML service
// <see href="https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments" />
func (o EnvironmentSpecificationVersionResponsePtrOutput) EnvironmentSpecificationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentSpecificationVersionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EnvironmentSpecificationType
	}).(pulumi.StringPtrOutput)
}

// Defines configuration specific to inference.
func (o EnvironmentSpecificationVersionResponsePtrOutput) InferenceContainerProperties() InferenceContainerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *EnvironmentSpecificationVersionResponse) *InferenceContainerPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.InferenceContainerProperties
	}).(InferenceContainerPropertiesResponsePtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o EnvironmentSpecificationVersionResponsePtrOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EnvironmentSpecificationVersionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsAnonymous
	}).(pulumi.BoolPtrOutput)
}

// The asset property dictionary.
func (o EnvironmentSpecificationVersionResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EnvironmentSpecificationVersionResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o EnvironmentSpecificationVersionResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EnvironmentSpecificationVersionResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type ErrorDetailResponse struct {
	// Error code.
	Code string `pulumi:"code"`
	// Error message.
	Message string `pulumi:"message"`
}

// ErrorDetailResponseInput is an input type that accepts ErrorDetailResponseArgs and ErrorDetailResponseOutput values.
// You can construct a concrete instance of `ErrorDetailResponseInput` via:
//
//          ErrorDetailResponseArgs{...}
type ErrorDetailResponseInput interface {
	pulumi.Input

	ToErrorDetailResponseOutput() ErrorDetailResponseOutput
	ToErrorDetailResponseOutputWithContext(context.Context) ErrorDetailResponseOutput
}

type ErrorDetailResponseArgs struct {
	// Error code.
	Code pulumi.StringInput `pulumi:"code"`
	// Error message.
	Message pulumi.StringInput `pulumi:"message"`
}

func (ErrorDetailResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailResponse)(nil)).Elem()
}

func (i ErrorDetailResponseArgs) ToErrorDetailResponseOutput() ErrorDetailResponseOutput {
	return i.ToErrorDetailResponseOutputWithContext(context.Background())
}

func (i ErrorDetailResponseArgs) ToErrorDetailResponseOutputWithContext(ctx context.Context) ErrorDetailResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorDetailResponseOutput)
}

// ErrorDetailResponseArrayInput is an input type that accepts ErrorDetailResponseArray and ErrorDetailResponseArrayOutput values.
// You can construct a concrete instance of `ErrorDetailResponseArrayInput` via:
//
//          ErrorDetailResponseArray{ ErrorDetailResponseArgs{...} }
type ErrorDetailResponseArrayInput interface {
	pulumi.Input

	ToErrorDetailResponseArrayOutput() ErrorDetailResponseArrayOutput
	ToErrorDetailResponseArrayOutputWithContext(context.Context) ErrorDetailResponseArrayOutput
}

type ErrorDetailResponseArray []ErrorDetailResponseInput

func (ErrorDetailResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorDetailResponse)(nil)).Elem()
}

func (i ErrorDetailResponseArray) ToErrorDetailResponseArrayOutput() ErrorDetailResponseArrayOutput {
	return i.ToErrorDetailResponseArrayOutputWithContext(context.Background())
}

func (i ErrorDetailResponseArray) ToErrorDetailResponseArrayOutputWithContext(ctx context.Context) ErrorDetailResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorDetailResponseArrayOutput)
}

type ErrorDetailResponseOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutput() ErrorDetailResponseOutput {
	return o
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutputWithContext(ctx context.Context) ErrorDetailResponseOutput {
	return o
}

// Error code.
func (o ErrorDetailResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Error message.
func (o ErrorDetailResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Message }).(pulumi.StringOutput)
}

type ErrorDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseArrayOutput) ToErrorDetailResponseArrayOutput() ErrorDetailResponseArrayOutput {
	return o
}

func (o ErrorDetailResponseArrayOutput) ToErrorDetailResponseArrayOutputWithContext(ctx context.Context) ErrorDetailResponseArrayOutput {
	return o
}

func (o ErrorDetailResponseArrayOutput) Index(i pulumi.IntInput) ErrorDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorDetailResponse {
		return vs[0].([]ErrorDetailResponse)[vs[1].(int)]
	}).(ErrorDetailResponseOutput)
}

type ErrorResponseResponse struct {
	// Error code.
	Code string `pulumi:"code"`
	// An array of error detail objects.
	Details []ErrorDetailResponse `pulumi:"details"`
	// Error message.
	Message string `pulumi:"message"`
}

// ErrorResponseResponseInput is an input type that accepts ErrorResponseResponseArgs and ErrorResponseResponseOutput values.
// You can construct a concrete instance of `ErrorResponseResponseInput` via:
//
//          ErrorResponseResponseArgs{...}
type ErrorResponseResponseInput interface {
	pulumi.Input

	ToErrorResponseResponseOutput() ErrorResponseResponseOutput
	ToErrorResponseResponseOutputWithContext(context.Context) ErrorResponseResponseOutput
}

type ErrorResponseResponseArgs struct {
	// Error code.
	Code pulumi.StringInput `pulumi:"code"`
	// An array of error detail objects.
	Details ErrorDetailResponseArrayInput `pulumi:"details"`
	// Error message.
	Message pulumi.StringInput `pulumi:"message"`
}

func (ErrorResponseResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponseResponse)(nil)).Elem()
}

func (i ErrorResponseResponseArgs) ToErrorResponseResponseOutput() ErrorResponseResponseOutput {
	return i.ToErrorResponseResponseOutputWithContext(context.Background())
}

func (i ErrorResponseResponseArgs) ToErrorResponseResponseOutputWithContext(ctx context.Context) ErrorResponseResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorResponseResponseOutput)
}

func (i ErrorResponseResponseArgs) ToErrorResponseResponsePtrOutput() ErrorResponseResponsePtrOutput {
	return i.ToErrorResponseResponsePtrOutputWithContext(context.Background())
}

func (i ErrorResponseResponseArgs) ToErrorResponseResponsePtrOutputWithContext(ctx context.Context) ErrorResponseResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorResponseResponseOutput).ToErrorResponseResponsePtrOutputWithContext(ctx)
}

// ErrorResponseResponsePtrInput is an input type that accepts ErrorResponseResponseArgs, ErrorResponseResponsePtr and ErrorResponseResponsePtrOutput values.
// You can construct a concrete instance of `ErrorResponseResponsePtrInput` via:
//
//          ErrorResponseResponseArgs{...}
//
//  or:
//
//          nil
type ErrorResponseResponsePtrInput interface {
	pulumi.Input

	ToErrorResponseResponsePtrOutput() ErrorResponseResponsePtrOutput
	ToErrorResponseResponsePtrOutputWithContext(context.Context) ErrorResponseResponsePtrOutput
}

type errorResponseResponsePtrType ErrorResponseResponseArgs

func ErrorResponseResponsePtr(v *ErrorResponseResponseArgs) ErrorResponseResponsePtrInput {
	return (*errorResponseResponsePtrType)(v)
}

func (*errorResponseResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorResponseResponse)(nil)).Elem()
}

func (i *errorResponseResponsePtrType) ToErrorResponseResponsePtrOutput() ErrorResponseResponsePtrOutput {
	return i.ToErrorResponseResponsePtrOutputWithContext(context.Background())
}

func (i *errorResponseResponsePtrType) ToErrorResponseResponsePtrOutputWithContext(ctx context.Context) ErrorResponseResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorResponseResponsePtrOutput)
}

type ErrorResponseResponseOutput struct{ *pulumi.OutputState }

func (ErrorResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponseResponse)(nil)).Elem()
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponseOutput() ErrorResponseResponseOutput {
	return o
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponseOutputWithContext(ctx context.Context) ErrorResponseResponseOutput {
	return o
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponsePtrOutput() ErrorResponseResponsePtrOutput {
	return o.ToErrorResponseResponsePtrOutputWithContext(context.Background())
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponsePtrOutputWithContext(ctx context.Context) ErrorResponseResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ErrorResponseResponse) *ErrorResponseResponse {
		return &v
	}).(ErrorResponseResponsePtrOutput)
}

// Error code.
func (o ErrorResponseResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorResponseResponse) string { return v.Code }).(pulumi.StringOutput)
}

// An array of error detail objects.
func (o ErrorResponseResponseOutput) Details() ErrorDetailResponseArrayOutput {
	return o.ApplyT(func(v ErrorResponseResponse) []ErrorDetailResponse { return v.Details }).(ErrorDetailResponseArrayOutput)
}

// Error message.
func (o ErrorResponseResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorResponseResponse) string { return v.Message }).(pulumi.StringOutput)
}

type ErrorResponseResponsePtrOutput struct{ *pulumi.OutputState }

func (ErrorResponseResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorResponseResponse)(nil)).Elem()
}

func (o ErrorResponseResponsePtrOutput) ToErrorResponseResponsePtrOutput() ErrorResponseResponsePtrOutput {
	return o
}

func (o ErrorResponseResponsePtrOutput) ToErrorResponseResponsePtrOutputWithContext(ctx context.Context) ErrorResponseResponsePtrOutput {
	return o
}

func (o ErrorResponseResponsePtrOutput) Elem() ErrorResponseResponseOutput {
	return o.ApplyT(func(v *ErrorResponseResponse) ErrorResponseResponse {
		if v != nil {
			return *v
		}
		var ret ErrorResponseResponse
		return ret
	}).(ErrorResponseResponseOutput)
}

// Error code.
func (o ErrorResponseResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// An array of error detail objects.
func (o ErrorResponseResponsePtrOutput) Details() ErrorDetailResponseArrayOutput {
	return o.ApplyT(func(v *ErrorResponseResponse) []ErrorDetailResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(ErrorDetailResponseArrayOutput)
}

// Error message.
func (o ErrorResponseResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

type FlavorData struct {
	// Model flavor-specific data.
	Data map[string]string `pulumi:"data"`
}

// FlavorDataInput is an input type that accepts FlavorDataArgs and FlavorDataOutput values.
// You can construct a concrete instance of `FlavorDataInput` via:
//
//          FlavorDataArgs{...}
type FlavorDataInput interface {
	pulumi.Input

	ToFlavorDataOutput() FlavorDataOutput
	ToFlavorDataOutputWithContext(context.Context) FlavorDataOutput
}

type FlavorDataArgs struct {
	// Model flavor-specific data.
	Data pulumi.StringMapInput `pulumi:"data"`
}

func (FlavorDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlavorData)(nil)).Elem()
}

func (i FlavorDataArgs) ToFlavorDataOutput() FlavorDataOutput {
	return i.ToFlavorDataOutputWithContext(context.Background())
}

func (i FlavorDataArgs) ToFlavorDataOutputWithContext(ctx context.Context) FlavorDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlavorDataOutput)
}

// FlavorDataMapInput is an input type that accepts FlavorDataMap and FlavorDataMapOutput values.
// You can construct a concrete instance of `FlavorDataMapInput` via:
//
//          FlavorDataMap{ "key": FlavorDataArgs{...} }
type FlavorDataMapInput interface {
	pulumi.Input

	ToFlavorDataMapOutput() FlavorDataMapOutput
	ToFlavorDataMapOutputWithContext(context.Context) FlavorDataMapOutput
}

type FlavorDataMap map[string]FlavorDataInput

func (FlavorDataMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]FlavorData)(nil)).Elem()
}

func (i FlavorDataMap) ToFlavorDataMapOutput() FlavorDataMapOutput {
	return i.ToFlavorDataMapOutputWithContext(context.Background())
}

func (i FlavorDataMap) ToFlavorDataMapOutputWithContext(ctx context.Context) FlavorDataMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlavorDataMapOutput)
}

type FlavorDataOutput struct{ *pulumi.OutputState }

func (FlavorDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlavorData)(nil)).Elem()
}

func (o FlavorDataOutput) ToFlavorDataOutput() FlavorDataOutput {
	return o
}

func (o FlavorDataOutput) ToFlavorDataOutputWithContext(ctx context.Context) FlavorDataOutput {
	return o
}

// Model flavor-specific data.
func (o FlavorDataOutput) Data() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlavorData) map[string]string { return v.Data }).(pulumi.StringMapOutput)
}

type FlavorDataMapOutput struct{ *pulumi.OutputState }

func (FlavorDataMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]FlavorData)(nil)).Elem()
}

func (o FlavorDataMapOutput) ToFlavorDataMapOutput() FlavorDataMapOutput {
	return o
}

func (o FlavorDataMapOutput) ToFlavorDataMapOutputWithContext(ctx context.Context) FlavorDataMapOutput {
	return o
}

func (o FlavorDataMapOutput) MapIndex(k pulumi.StringInput) FlavorDataOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) FlavorData {
		return vs[0].(map[string]FlavorData)[vs[1].(string)]
	}).(FlavorDataOutput)
}

type FlavorDataResponse struct {
	// Model flavor-specific data.
	Data map[string]string `pulumi:"data"`
}

// FlavorDataResponseInput is an input type that accepts FlavorDataResponseArgs and FlavorDataResponseOutput values.
// You can construct a concrete instance of `FlavorDataResponseInput` via:
//
//          FlavorDataResponseArgs{...}
type FlavorDataResponseInput interface {
	pulumi.Input

	ToFlavorDataResponseOutput() FlavorDataResponseOutput
	ToFlavorDataResponseOutputWithContext(context.Context) FlavorDataResponseOutput
}

type FlavorDataResponseArgs struct {
	// Model flavor-specific data.
	Data pulumi.StringMapInput `pulumi:"data"`
}

func (FlavorDataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlavorDataResponse)(nil)).Elem()
}

func (i FlavorDataResponseArgs) ToFlavorDataResponseOutput() FlavorDataResponseOutput {
	return i.ToFlavorDataResponseOutputWithContext(context.Background())
}

func (i FlavorDataResponseArgs) ToFlavorDataResponseOutputWithContext(ctx context.Context) FlavorDataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlavorDataResponseOutput)
}

// FlavorDataResponseMapInput is an input type that accepts FlavorDataResponseMap and FlavorDataResponseMapOutput values.
// You can construct a concrete instance of `FlavorDataResponseMapInput` via:
//
//          FlavorDataResponseMap{ "key": FlavorDataResponseArgs{...} }
type FlavorDataResponseMapInput interface {
	pulumi.Input

	ToFlavorDataResponseMapOutput() FlavorDataResponseMapOutput
	ToFlavorDataResponseMapOutputWithContext(context.Context) FlavorDataResponseMapOutput
}

type FlavorDataResponseMap map[string]FlavorDataResponseInput

func (FlavorDataResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]FlavorDataResponse)(nil)).Elem()
}

func (i FlavorDataResponseMap) ToFlavorDataResponseMapOutput() FlavorDataResponseMapOutput {
	return i.ToFlavorDataResponseMapOutputWithContext(context.Background())
}

func (i FlavorDataResponseMap) ToFlavorDataResponseMapOutputWithContext(ctx context.Context) FlavorDataResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlavorDataResponseMapOutput)
}

type FlavorDataResponseOutput struct{ *pulumi.OutputState }

func (FlavorDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlavorDataResponse)(nil)).Elem()
}

func (o FlavorDataResponseOutput) ToFlavorDataResponseOutput() FlavorDataResponseOutput {
	return o
}

func (o FlavorDataResponseOutput) ToFlavorDataResponseOutputWithContext(ctx context.Context) FlavorDataResponseOutput {
	return o
}

// Model flavor-specific data.
func (o FlavorDataResponseOutput) Data() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlavorDataResponse) map[string]string { return v.Data }).(pulumi.StringMapOutput)
}

type FlavorDataResponseMapOutput struct{ *pulumi.OutputState }

func (FlavorDataResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]FlavorDataResponse)(nil)).Elem()
}

func (o FlavorDataResponseMapOutput) ToFlavorDataResponseMapOutput() FlavorDataResponseMapOutput {
	return o
}

func (o FlavorDataResponseMapOutput) ToFlavorDataResponseMapOutputWithContext(ctx context.Context) FlavorDataResponseMapOutput {
	return o
}

func (o FlavorDataResponseMapOutput) MapIndex(k pulumi.StringInput) FlavorDataResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) FlavorDataResponse {
		return vs[0].(map[string]FlavorDataResponse)[vs[1].(string)]
	}).(FlavorDataResponseOutput)
}

type GlusterFsSectionResponse struct {
	// The server address of one of the servers that hosts the GlusterFS. Can be either the IP address or server name.
	ServerAddress string `pulumi:"serverAddress"`
	// The name of the created GlusterFS volume.
	VolumeName string `pulumi:"volumeName"`
}

// GlusterFsSectionResponseInput is an input type that accepts GlusterFsSectionResponseArgs and GlusterFsSectionResponseOutput values.
// You can construct a concrete instance of `GlusterFsSectionResponseInput` via:
//
//          GlusterFsSectionResponseArgs{...}
type GlusterFsSectionResponseInput interface {
	pulumi.Input

	ToGlusterFsSectionResponseOutput() GlusterFsSectionResponseOutput
	ToGlusterFsSectionResponseOutputWithContext(context.Context) GlusterFsSectionResponseOutput
}

type GlusterFsSectionResponseArgs struct {
	// The server address of one of the servers that hosts the GlusterFS. Can be either the IP address or server name.
	ServerAddress pulumi.StringInput `pulumi:"serverAddress"`
	// The name of the created GlusterFS volume.
	VolumeName pulumi.StringInput `pulumi:"volumeName"`
}

func (GlusterFsSectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlusterFsSectionResponse)(nil)).Elem()
}

func (i GlusterFsSectionResponseArgs) ToGlusterFsSectionResponseOutput() GlusterFsSectionResponseOutput {
	return i.ToGlusterFsSectionResponseOutputWithContext(context.Background())
}

func (i GlusterFsSectionResponseArgs) ToGlusterFsSectionResponseOutputWithContext(ctx context.Context) GlusterFsSectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlusterFsSectionResponseOutput)
}

func (i GlusterFsSectionResponseArgs) ToGlusterFsSectionResponsePtrOutput() GlusterFsSectionResponsePtrOutput {
	return i.ToGlusterFsSectionResponsePtrOutputWithContext(context.Background())
}

func (i GlusterFsSectionResponseArgs) ToGlusterFsSectionResponsePtrOutputWithContext(ctx context.Context) GlusterFsSectionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlusterFsSectionResponseOutput).ToGlusterFsSectionResponsePtrOutputWithContext(ctx)
}

// GlusterFsSectionResponsePtrInput is an input type that accepts GlusterFsSectionResponseArgs, GlusterFsSectionResponsePtr and GlusterFsSectionResponsePtrOutput values.
// You can construct a concrete instance of `GlusterFsSectionResponsePtrInput` via:
//
//          GlusterFsSectionResponseArgs{...}
//
//  or:
//
//          nil
type GlusterFsSectionResponsePtrInput interface {
	pulumi.Input

	ToGlusterFsSectionResponsePtrOutput() GlusterFsSectionResponsePtrOutput
	ToGlusterFsSectionResponsePtrOutputWithContext(context.Context) GlusterFsSectionResponsePtrOutput
}

type glusterFsSectionResponsePtrType GlusterFsSectionResponseArgs

func GlusterFsSectionResponsePtr(v *GlusterFsSectionResponseArgs) GlusterFsSectionResponsePtrInput {
	return (*glusterFsSectionResponsePtrType)(v)
}

func (*glusterFsSectionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlusterFsSectionResponse)(nil)).Elem()
}

func (i *glusterFsSectionResponsePtrType) ToGlusterFsSectionResponsePtrOutput() GlusterFsSectionResponsePtrOutput {
	return i.ToGlusterFsSectionResponsePtrOutputWithContext(context.Background())
}

func (i *glusterFsSectionResponsePtrType) ToGlusterFsSectionResponsePtrOutputWithContext(ctx context.Context) GlusterFsSectionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlusterFsSectionResponsePtrOutput)
}

type GlusterFsSectionResponseOutput struct{ *pulumi.OutputState }

func (GlusterFsSectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlusterFsSectionResponse)(nil)).Elem()
}

func (o GlusterFsSectionResponseOutput) ToGlusterFsSectionResponseOutput() GlusterFsSectionResponseOutput {
	return o
}

func (o GlusterFsSectionResponseOutput) ToGlusterFsSectionResponseOutputWithContext(ctx context.Context) GlusterFsSectionResponseOutput {
	return o
}

func (o GlusterFsSectionResponseOutput) ToGlusterFsSectionResponsePtrOutput() GlusterFsSectionResponsePtrOutput {
	return o.ToGlusterFsSectionResponsePtrOutputWithContext(context.Background())
}

func (o GlusterFsSectionResponseOutput) ToGlusterFsSectionResponsePtrOutputWithContext(ctx context.Context) GlusterFsSectionResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlusterFsSectionResponse) *GlusterFsSectionResponse {
		return &v
	}).(GlusterFsSectionResponsePtrOutput)
}

// The server address of one of the servers that hosts the GlusterFS. Can be either the IP address or server name.
func (o GlusterFsSectionResponseOutput) ServerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GlusterFsSectionResponse) string { return v.ServerAddress }).(pulumi.StringOutput)
}

// The name of the created GlusterFS volume.
func (o GlusterFsSectionResponseOutput) VolumeName() pulumi.StringOutput {
	return o.ApplyT(func(v GlusterFsSectionResponse) string { return v.VolumeName }).(pulumi.StringOutput)
}

type GlusterFsSectionResponsePtrOutput struct{ *pulumi.OutputState }

func (GlusterFsSectionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlusterFsSectionResponse)(nil)).Elem()
}

func (o GlusterFsSectionResponsePtrOutput) ToGlusterFsSectionResponsePtrOutput() GlusterFsSectionResponsePtrOutput {
	return o
}

func (o GlusterFsSectionResponsePtrOutput) ToGlusterFsSectionResponsePtrOutputWithContext(ctx context.Context) GlusterFsSectionResponsePtrOutput {
	return o
}

func (o GlusterFsSectionResponsePtrOutput) Elem() GlusterFsSectionResponseOutput {
	return o.ApplyT(func(v *GlusterFsSectionResponse) GlusterFsSectionResponse {
		if v != nil {
			return *v
		}
		var ret GlusterFsSectionResponse
		return ret
	}).(GlusterFsSectionResponseOutput)
}

// The server address of one of the servers that hosts the GlusterFS. Can be either the IP address or server name.
func (o GlusterFsSectionResponsePtrOutput) ServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlusterFsSectionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServerAddress
	}).(pulumi.StringPtrOutput)
}

// The name of the created GlusterFS volume.
func (o GlusterFsSectionResponsePtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlusterFsSectionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeName
	}).(pulumi.StringPtrOutput)
}

type HDInsight struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'HDInsight'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string              `pulumi:"description"`
	Properties  *HDInsightProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// HDInsightInput is an input type that accepts HDInsightArgs and HDInsightOutput values.
// You can construct a concrete instance of `HDInsightInput` via:
//
//          HDInsightArgs{...}
type HDInsightInput interface {
	pulumi.Input

	ToHDInsightOutput() HDInsightOutput
	ToHDInsightOutputWithContext(context.Context) HDInsightOutput
}

type HDInsightArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'HDInsight'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput       `pulumi:"description"`
	Properties  HDInsightPropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (HDInsightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsight)(nil)).Elem()
}

func (i HDInsightArgs) ToHDInsightOutput() HDInsightOutput {
	return i.ToHDInsightOutputWithContext(context.Background())
}

func (i HDInsightArgs) ToHDInsightOutputWithContext(ctx context.Context) HDInsightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightOutput)
}

type HDInsightOutput struct{ *pulumi.OutputState }

func (HDInsightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsight)(nil)).Elem()
}

func (o HDInsightOutput) ToHDInsightOutput() HDInsightOutput {
	return o
}

func (o HDInsightOutput) ToHDInsightOutputWithContext(ctx context.Context) HDInsightOutput {
	return o
}

// Location for the underlying compute
func (o HDInsightOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsight) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'HDInsight'.
func (o HDInsightOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsight) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o HDInsightOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsight) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o HDInsightOutput) Properties() HDInsightPropertiesPtrOutput {
	return o.ApplyT(func(v HDInsight) *HDInsightProperties { return v.Properties }).(HDInsightPropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o HDInsightOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsight) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type HDInsightProperties struct {
	// Public IP address of the master node of the cluster.
	Address *string `pulumi:"address"`
	// Admin credentials for master node of the cluster
	AdministratorAccount *VirtualMachineSshCredentials `pulumi:"administratorAccount"`
	// Port open for ssh connections on the master node of the cluster.
	SshPort *int `pulumi:"sshPort"`
}

// HDInsightPropertiesInput is an input type that accepts HDInsightPropertiesArgs and HDInsightPropertiesOutput values.
// You can construct a concrete instance of `HDInsightPropertiesInput` via:
//
//          HDInsightPropertiesArgs{...}
type HDInsightPropertiesInput interface {
	pulumi.Input

	ToHDInsightPropertiesOutput() HDInsightPropertiesOutput
	ToHDInsightPropertiesOutputWithContext(context.Context) HDInsightPropertiesOutput
}

type HDInsightPropertiesArgs struct {
	// Public IP address of the master node of the cluster.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Admin credentials for master node of the cluster
	AdministratorAccount VirtualMachineSshCredentialsPtrInput `pulumi:"administratorAccount"`
	// Port open for ssh connections on the master node of the cluster.
	SshPort pulumi.IntPtrInput `pulumi:"sshPort"`
}

func (HDInsightPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightProperties)(nil)).Elem()
}

func (i HDInsightPropertiesArgs) ToHDInsightPropertiesOutput() HDInsightPropertiesOutput {
	return i.ToHDInsightPropertiesOutputWithContext(context.Background())
}

func (i HDInsightPropertiesArgs) ToHDInsightPropertiesOutputWithContext(ctx context.Context) HDInsightPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightPropertiesOutput)
}

func (i HDInsightPropertiesArgs) ToHDInsightPropertiesPtrOutput() HDInsightPropertiesPtrOutput {
	return i.ToHDInsightPropertiesPtrOutputWithContext(context.Background())
}

func (i HDInsightPropertiesArgs) ToHDInsightPropertiesPtrOutputWithContext(ctx context.Context) HDInsightPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightPropertiesOutput).ToHDInsightPropertiesPtrOutputWithContext(ctx)
}

// HDInsightPropertiesPtrInput is an input type that accepts HDInsightPropertiesArgs, HDInsightPropertiesPtr and HDInsightPropertiesPtrOutput values.
// You can construct a concrete instance of `HDInsightPropertiesPtrInput` via:
//
//          HDInsightPropertiesArgs{...}
//
//  or:
//
//          nil
type HDInsightPropertiesPtrInput interface {
	pulumi.Input

	ToHDInsightPropertiesPtrOutput() HDInsightPropertiesPtrOutput
	ToHDInsightPropertiesPtrOutputWithContext(context.Context) HDInsightPropertiesPtrOutput
}

type hdinsightPropertiesPtrType HDInsightPropertiesArgs

func HDInsightPropertiesPtr(v *HDInsightPropertiesArgs) HDInsightPropertiesPtrInput {
	return (*hdinsightPropertiesPtrType)(v)
}

func (*hdinsightPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HDInsightProperties)(nil)).Elem()
}

func (i *hdinsightPropertiesPtrType) ToHDInsightPropertiesPtrOutput() HDInsightPropertiesPtrOutput {
	return i.ToHDInsightPropertiesPtrOutputWithContext(context.Background())
}

func (i *hdinsightPropertiesPtrType) ToHDInsightPropertiesPtrOutputWithContext(ctx context.Context) HDInsightPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightPropertiesPtrOutput)
}

type HDInsightPropertiesOutput struct{ *pulumi.OutputState }

func (HDInsightPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightProperties)(nil)).Elem()
}

func (o HDInsightPropertiesOutput) ToHDInsightPropertiesOutput() HDInsightPropertiesOutput {
	return o
}

func (o HDInsightPropertiesOutput) ToHDInsightPropertiesOutputWithContext(ctx context.Context) HDInsightPropertiesOutput {
	return o
}

func (o HDInsightPropertiesOutput) ToHDInsightPropertiesPtrOutput() HDInsightPropertiesPtrOutput {
	return o.ToHDInsightPropertiesPtrOutputWithContext(context.Background())
}

func (o HDInsightPropertiesOutput) ToHDInsightPropertiesPtrOutputWithContext(ctx context.Context) HDInsightPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HDInsightProperties) *HDInsightProperties {
		return &v
	}).(HDInsightPropertiesPtrOutput)
}

// Public IP address of the master node of the cluster.
func (o HDInsightPropertiesOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightProperties) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Admin credentials for master node of the cluster
func (o HDInsightPropertiesOutput) AdministratorAccount() VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyT(func(v HDInsightProperties) *VirtualMachineSshCredentials { return v.AdministratorAccount }).(VirtualMachineSshCredentialsPtrOutput)
}

// Port open for ssh connections on the master node of the cluster.
func (o HDInsightPropertiesOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HDInsightProperties) *int { return v.SshPort }).(pulumi.IntPtrOutput)
}

type HDInsightPropertiesPtrOutput struct{ *pulumi.OutputState }

func (HDInsightPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HDInsightProperties)(nil)).Elem()
}

func (o HDInsightPropertiesPtrOutput) ToHDInsightPropertiesPtrOutput() HDInsightPropertiesPtrOutput {
	return o
}

func (o HDInsightPropertiesPtrOutput) ToHDInsightPropertiesPtrOutputWithContext(ctx context.Context) HDInsightPropertiesPtrOutput {
	return o
}

func (o HDInsightPropertiesPtrOutput) Elem() HDInsightPropertiesOutput {
	return o.ApplyT(func(v *HDInsightProperties) HDInsightProperties {
		if v != nil {
			return *v
		}
		var ret HDInsightProperties
		return ret
	}).(HDInsightPropertiesOutput)
}

// Public IP address of the master node of the cluster.
func (o HDInsightPropertiesPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HDInsightProperties) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for master node of the cluster
func (o HDInsightPropertiesPtrOutput) AdministratorAccount() VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyT(func(v *HDInsightProperties) *VirtualMachineSshCredentials {
		if v == nil {
			return nil
		}
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsPtrOutput)
}

// Port open for ssh connections on the master node of the cluster.
func (o HDInsightPropertiesPtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HDInsightProperties) *int {
		if v == nil {
			return nil
		}
		return v.SshPort
	}).(pulumi.IntPtrOutput)
}

type HDInsightResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'HDInsight'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool                         `pulumi:"isAttachedCompute"`
	Properties        *HDInsightResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// HDInsightResponseInput is an input type that accepts HDInsightResponseArgs and HDInsightResponseOutput values.
// You can construct a concrete instance of `HDInsightResponseInput` via:
//
//          HDInsightResponseArgs{...}
type HDInsightResponseInput interface {
	pulumi.Input

	ToHDInsightResponseOutput() HDInsightResponseOutput
	ToHDInsightResponseOutputWithContext(context.Context) HDInsightResponseOutput
}

type HDInsightResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'HDInsight'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput                    `pulumi:"isAttachedCompute"`
	Properties        HDInsightResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (HDInsightResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightResponse)(nil)).Elem()
}

func (i HDInsightResponseArgs) ToHDInsightResponseOutput() HDInsightResponseOutput {
	return i.ToHDInsightResponseOutputWithContext(context.Background())
}

func (i HDInsightResponseArgs) ToHDInsightResponseOutputWithContext(ctx context.Context) HDInsightResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightResponseOutput)
}

type HDInsightResponseOutput struct{ *pulumi.OutputState }

func (HDInsightResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightResponse)(nil)).Elem()
}

func (o HDInsightResponseOutput) ToHDInsightResponseOutput() HDInsightResponseOutput {
	return o
}

func (o HDInsightResponseOutput) ToHDInsightResponseOutputWithContext(ctx context.Context) HDInsightResponseOutput {
	return o
}

// Location for the underlying compute
func (o HDInsightResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'HDInsight'.
func (o HDInsightResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o HDInsightResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o HDInsightResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v HDInsightResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

func (o HDInsightResponseOutput) Properties() HDInsightResponsePropertiesPtrOutput {
	return o.ApplyT(func(v HDInsightResponse) *HDInsightResponseProperties { return v.Properties }).(HDInsightResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o HDInsightResponseOutput) ProvisioningErrors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v HDInsightResponse) []MachineLearningServiceErrorResponse { return v.ProvisioningErrors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o HDInsightResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o HDInsightResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type HDInsightResponseProperties struct {
	// Public IP address of the master node of the cluster.
	Address *string `pulumi:"address"`
	// Admin credentials for master node of the cluster
	AdministratorAccount *VirtualMachineSshCredentialsResponse `pulumi:"administratorAccount"`
	// Port open for ssh connections on the master node of the cluster.
	SshPort *int `pulumi:"sshPort"`
}

// HDInsightResponsePropertiesInput is an input type that accepts HDInsightResponsePropertiesArgs and HDInsightResponsePropertiesOutput values.
// You can construct a concrete instance of `HDInsightResponsePropertiesInput` via:
//
//          HDInsightResponsePropertiesArgs{...}
type HDInsightResponsePropertiesInput interface {
	pulumi.Input

	ToHDInsightResponsePropertiesOutput() HDInsightResponsePropertiesOutput
	ToHDInsightResponsePropertiesOutputWithContext(context.Context) HDInsightResponsePropertiesOutput
}

type HDInsightResponsePropertiesArgs struct {
	// Public IP address of the master node of the cluster.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Admin credentials for master node of the cluster
	AdministratorAccount VirtualMachineSshCredentialsResponsePtrInput `pulumi:"administratorAccount"`
	// Port open for ssh connections on the master node of the cluster.
	SshPort pulumi.IntPtrInput `pulumi:"sshPort"`
}

func (HDInsightResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightResponseProperties)(nil)).Elem()
}

func (i HDInsightResponsePropertiesArgs) ToHDInsightResponsePropertiesOutput() HDInsightResponsePropertiesOutput {
	return i.ToHDInsightResponsePropertiesOutputWithContext(context.Background())
}

func (i HDInsightResponsePropertiesArgs) ToHDInsightResponsePropertiesOutputWithContext(ctx context.Context) HDInsightResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightResponsePropertiesOutput)
}

func (i HDInsightResponsePropertiesArgs) ToHDInsightResponsePropertiesPtrOutput() HDInsightResponsePropertiesPtrOutput {
	return i.ToHDInsightResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i HDInsightResponsePropertiesArgs) ToHDInsightResponsePropertiesPtrOutputWithContext(ctx context.Context) HDInsightResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightResponsePropertiesOutput).ToHDInsightResponsePropertiesPtrOutputWithContext(ctx)
}

// HDInsightResponsePropertiesPtrInput is an input type that accepts HDInsightResponsePropertiesArgs, HDInsightResponsePropertiesPtr and HDInsightResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `HDInsightResponsePropertiesPtrInput` via:
//
//          HDInsightResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type HDInsightResponsePropertiesPtrInput interface {
	pulumi.Input

	ToHDInsightResponsePropertiesPtrOutput() HDInsightResponsePropertiesPtrOutput
	ToHDInsightResponsePropertiesPtrOutputWithContext(context.Context) HDInsightResponsePropertiesPtrOutput
}

type hdinsightResponsePropertiesPtrType HDInsightResponsePropertiesArgs

func HDInsightResponsePropertiesPtr(v *HDInsightResponsePropertiesArgs) HDInsightResponsePropertiesPtrInput {
	return (*hdinsightResponsePropertiesPtrType)(v)
}

func (*hdinsightResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HDInsightResponseProperties)(nil)).Elem()
}

func (i *hdinsightResponsePropertiesPtrType) ToHDInsightResponsePropertiesPtrOutput() HDInsightResponsePropertiesPtrOutput {
	return i.ToHDInsightResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *hdinsightResponsePropertiesPtrType) ToHDInsightResponsePropertiesPtrOutputWithContext(ctx context.Context) HDInsightResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightResponsePropertiesPtrOutput)
}

type HDInsightResponsePropertiesOutput struct{ *pulumi.OutputState }

func (HDInsightResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightResponseProperties)(nil)).Elem()
}

func (o HDInsightResponsePropertiesOutput) ToHDInsightResponsePropertiesOutput() HDInsightResponsePropertiesOutput {
	return o
}

func (o HDInsightResponsePropertiesOutput) ToHDInsightResponsePropertiesOutputWithContext(ctx context.Context) HDInsightResponsePropertiesOutput {
	return o
}

func (o HDInsightResponsePropertiesOutput) ToHDInsightResponsePropertiesPtrOutput() HDInsightResponsePropertiesPtrOutput {
	return o.ToHDInsightResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o HDInsightResponsePropertiesOutput) ToHDInsightResponsePropertiesPtrOutputWithContext(ctx context.Context) HDInsightResponsePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HDInsightResponseProperties) *HDInsightResponseProperties {
		return &v
	}).(HDInsightResponsePropertiesPtrOutput)
}

// Public IP address of the master node of the cluster.
func (o HDInsightResponsePropertiesOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightResponseProperties) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Admin credentials for master node of the cluster
func (o HDInsightResponsePropertiesOutput) AdministratorAccount() VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ApplyT(func(v HDInsightResponseProperties) *VirtualMachineSshCredentialsResponse {
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Port open for ssh connections on the master node of the cluster.
func (o HDInsightResponsePropertiesOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HDInsightResponseProperties) *int { return v.SshPort }).(pulumi.IntPtrOutput)
}

type HDInsightResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (HDInsightResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HDInsightResponseProperties)(nil)).Elem()
}

func (o HDInsightResponsePropertiesPtrOutput) ToHDInsightResponsePropertiesPtrOutput() HDInsightResponsePropertiesPtrOutput {
	return o
}

func (o HDInsightResponsePropertiesPtrOutput) ToHDInsightResponsePropertiesPtrOutputWithContext(ctx context.Context) HDInsightResponsePropertiesPtrOutput {
	return o
}

func (o HDInsightResponsePropertiesPtrOutput) Elem() HDInsightResponsePropertiesOutput {
	return o.ApplyT(func(v *HDInsightResponseProperties) HDInsightResponseProperties {
		if v != nil {
			return *v
		}
		var ret HDInsightResponseProperties
		return ret
	}).(HDInsightResponsePropertiesOutput)
}

// Public IP address of the master node of the cluster.
func (o HDInsightResponsePropertiesPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HDInsightResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for master node of the cluster
func (o HDInsightResponsePropertiesPtrOutput) AdministratorAccount() VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ApplyT(func(v *HDInsightResponseProperties) *VirtualMachineSshCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Port open for ssh connections on the master node of the cluster.
func (o HDInsightResponsePropertiesPtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HDInsightResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.SshPort
	}).(pulumi.IntPtrOutput)
}

type IdAssetReference struct {
	// ARM resource ID of the asset.
	AssetId string `pulumi:"assetId"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'Id'.
	ReferenceType string `pulumi:"referenceType"`
}

// IdAssetReferenceInput is an input type that accepts IdAssetReferenceArgs and IdAssetReferenceOutput values.
// You can construct a concrete instance of `IdAssetReferenceInput` via:
//
//          IdAssetReferenceArgs{...}
type IdAssetReferenceInput interface {
	pulumi.Input

	ToIdAssetReferenceOutput() IdAssetReferenceOutput
	ToIdAssetReferenceOutputWithContext(context.Context) IdAssetReferenceOutput
}

type IdAssetReferenceArgs struct {
	// ARM resource ID of the asset.
	AssetId pulumi.StringInput `pulumi:"assetId"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'Id'.
	ReferenceType pulumi.StringInput `pulumi:"referenceType"`
}

func (IdAssetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdAssetReference)(nil)).Elem()
}

func (i IdAssetReferenceArgs) ToIdAssetReferenceOutput() IdAssetReferenceOutput {
	return i.ToIdAssetReferenceOutputWithContext(context.Background())
}

func (i IdAssetReferenceArgs) ToIdAssetReferenceOutputWithContext(ctx context.Context) IdAssetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdAssetReferenceOutput)
}

type IdAssetReferenceOutput struct{ *pulumi.OutputState }

func (IdAssetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdAssetReference)(nil)).Elem()
}

func (o IdAssetReferenceOutput) ToIdAssetReferenceOutput() IdAssetReferenceOutput {
	return o
}

func (o IdAssetReferenceOutput) ToIdAssetReferenceOutputWithContext(ctx context.Context) IdAssetReferenceOutput {
	return o
}

// ARM resource ID of the asset.
func (o IdAssetReferenceOutput) AssetId() pulumi.StringOutput {
	return o.ApplyT(func(v IdAssetReference) string { return v.AssetId }).(pulumi.StringOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'Id'.
func (o IdAssetReferenceOutput) ReferenceType() pulumi.StringOutput {
	return o.ApplyT(func(v IdAssetReference) string { return v.ReferenceType }).(pulumi.StringOutput)
}

type IdAssetReferenceResponse struct {
	// ARM resource ID of the asset.
	AssetId string `pulumi:"assetId"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'Id'.
	ReferenceType string `pulumi:"referenceType"`
}

// IdAssetReferenceResponseInput is an input type that accepts IdAssetReferenceResponseArgs and IdAssetReferenceResponseOutput values.
// You can construct a concrete instance of `IdAssetReferenceResponseInput` via:
//
//          IdAssetReferenceResponseArgs{...}
type IdAssetReferenceResponseInput interface {
	pulumi.Input

	ToIdAssetReferenceResponseOutput() IdAssetReferenceResponseOutput
	ToIdAssetReferenceResponseOutputWithContext(context.Context) IdAssetReferenceResponseOutput
}

type IdAssetReferenceResponseArgs struct {
	// ARM resource ID of the asset.
	AssetId pulumi.StringInput `pulumi:"assetId"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'Id'.
	ReferenceType pulumi.StringInput `pulumi:"referenceType"`
}

func (IdAssetReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdAssetReferenceResponse)(nil)).Elem()
}

func (i IdAssetReferenceResponseArgs) ToIdAssetReferenceResponseOutput() IdAssetReferenceResponseOutput {
	return i.ToIdAssetReferenceResponseOutputWithContext(context.Background())
}

func (i IdAssetReferenceResponseArgs) ToIdAssetReferenceResponseOutputWithContext(ctx context.Context) IdAssetReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdAssetReferenceResponseOutput)
}

type IdAssetReferenceResponseOutput struct{ *pulumi.OutputState }

func (IdAssetReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdAssetReferenceResponse)(nil)).Elem()
}

func (o IdAssetReferenceResponseOutput) ToIdAssetReferenceResponseOutput() IdAssetReferenceResponseOutput {
	return o
}

func (o IdAssetReferenceResponseOutput) ToIdAssetReferenceResponseOutputWithContext(ctx context.Context) IdAssetReferenceResponseOutput {
	return o
}

// ARM resource ID of the asset.
func (o IdAssetReferenceResponseOutput) AssetId() pulumi.StringOutput {
	return o.ApplyT(func(v IdAssetReferenceResponse) string { return v.AssetId }).(pulumi.StringOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'Id'.
func (o IdAssetReferenceResponseOutput) ReferenceType() pulumi.StringOutput {
	return o.ApplyT(func(v IdAssetReferenceResponse) string { return v.ReferenceType }).(pulumi.StringOutput)
}

type Identity struct {
	// The identity type.
	Type *ResourceIdentityType `pulumi:"type"`
	// The user assigned identities associated with the resource.
	UserAssignedIdentities map[string]interface{} `pulumi:"userAssignedIdentities"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//          IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

type IdentityArgs struct {
	// The identity type.
	Type ResourceIdentityTypePtrInput `pulumi:"type"`
	// The user assigned identities associated with the resource.
	UserAssignedIdentities pulumi.MapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//          IdentityArgs{...}
//
//  or:
//
//          nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// The identity type.
func (o IdentityOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v Identity) *ResourceIdentityType { return v.Type }).(ResourceIdentityTypePtrOutput)
}

// The user assigned identities associated with the resource.
func (o IdentityOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v Identity) map[string]interface{} { return v.UserAssignedIdentities }).(pulumi.MapOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity {
		if v != nil {
			return *v
		}
		var ret Identity
		return ret
	}).(IdentityOutput)
}

// The identity type.
func (o IdentityPtrOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v *Identity) *ResourceIdentityType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(ResourceIdentityTypePtrOutput)
}

// The user assigned identities associated with the resource.
func (o IdentityPtrOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v *Identity) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.MapOutput)
}

type IdentityForCmk struct {
	// The ArmId of the user assigned identity that will be used to access the customer managed key vault
	UserAssignedIdentity string `pulumi:"userAssignedIdentity"`
}

// IdentityForCmkInput is an input type that accepts IdentityForCmkArgs and IdentityForCmkOutput values.
// You can construct a concrete instance of `IdentityForCmkInput` via:
//
//          IdentityForCmkArgs{...}
type IdentityForCmkInput interface {
	pulumi.Input

	ToIdentityForCmkOutput() IdentityForCmkOutput
	ToIdentityForCmkOutputWithContext(context.Context) IdentityForCmkOutput
}

type IdentityForCmkArgs struct {
	// The ArmId of the user assigned identity that will be used to access the customer managed key vault
	UserAssignedIdentity pulumi.StringInput `pulumi:"userAssignedIdentity"`
}

func (IdentityForCmkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityForCmk)(nil)).Elem()
}

func (i IdentityForCmkArgs) ToIdentityForCmkOutput() IdentityForCmkOutput {
	return i.ToIdentityForCmkOutputWithContext(context.Background())
}

func (i IdentityForCmkArgs) ToIdentityForCmkOutputWithContext(ctx context.Context) IdentityForCmkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityForCmkOutput)
}

func (i IdentityForCmkArgs) ToIdentityForCmkPtrOutput() IdentityForCmkPtrOutput {
	return i.ToIdentityForCmkPtrOutputWithContext(context.Background())
}

func (i IdentityForCmkArgs) ToIdentityForCmkPtrOutputWithContext(ctx context.Context) IdentityForCmkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityForCmkOutput).ToIdentityForCmkPtrOutputWithContext(ctx)
}

// IdentityForCmkPtrInput is an input type that accepts IdentityForCmkArgs, IdentityForCmkPtr and IdentityForCmkPtrOutput values.
// You can construct a concrete instance of `IdentityForCmkPtrInput` via:
//
//          IdentityForCmkArgs{...}
//
//  or:
//
//          nil
type IdentityForCmkPtrInput interface {
	pulumi.Input

	ToIdentityForCmkPtrOutput() IdentityForCmkPtrOutput
	ToIdentityForCmkPtrOutputWithContext(context.Context) IdentityForCmkPtrOutput
}

type identityForCmkPtrType IdentityForCmkArgs

func IdentityForCmkPtr(v *IdentityForCmkArgs) IdentityForCmkPtrInput {
	return (*identityForCmkPtrType)(v)
}

func (*identityForCmkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityForCmk)(nil)).Elem()
}

func (i *identityForCmkPtrType) ToIdentityForCmkPtrOutput() IdentityForCmkPtrOutput {
	return i.ToIdentityForCmkPtrOutputWithContext(context.Background())
}

func (i *identityForCmkPtrType) ToIdentityForCmkPtrOutputWithContext(ctx context.Context) IdentityForCmkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityForCmkPtrOutput)
}

type IdentityForCmkOutput struct{ *pulumi.OutputState }

func (IdentityForCmkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityForCmk)(nil)).Elem()
}

func (o IdentityForCmkOutput) ToIdentityForCmkOutput() IdentityForCmkOutput {
	return o
}

func (o IdentityForCmkOutput) ToIdentityForCmkOutputWithContext(ctx context.Context) IdentityForCmkOutput {
	return o
}

func (o IdentityForCmkOutput) ToIdentityForCmkPtrOutput() IdentityForCmkPtrOutput {
	return o.ToIdentityForCmkPtrOutputWithContext(context.Background())
}

func (o IdentityForCmkOutput) ToIdentityForCmkPtrOutputWithContext(ctx context.Context) IdentityForCmkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityForCmk) *IdentityForCmk {
		return &v
	}).(IdentityForCmkPtrOutput)
}

// The ArmId of the user assigned identity that will be used to access the customer managed key vault
func (o IdentityForCmkOutput) UserAssignedIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityForCmk) string { return v.UserAssignedIdentity }).(pulumi.StringOutput)
}

type IdentityForCmkPtrOutput struct{ *pulumi.OutputState }

func (IdentityForCmkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityForCmk)(nil)).Elem()
}

func (o IdentityForCmkPtrOutput) ToIdentityForCmkPtrOutput() IdentityForCmkPtrOutput {
	return o
}

func (o IdentityForCmkPtrOutput) ToIdentityForCmkPtrOutputWithContext(ctx context.Context) IdentityForCmkPtrOutput {
	return o
}

func (o IdentityForCmkPtrOutput) Elem() IdentityForCmkOutput {
	return o.ApplyT(func(v *IdentityForCmk) IdentityForCmk {
		if v != nil {
			return *v
		}
		var ret IdentityForCmk
		return ret
	}).(IdentityForCmkOutput)
}

// The ArmId of the user assigned identity that will be used to access the customer managed key vault
func (o IdentityForCmkPtrOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityForCmk) *string {
		if v == nil {
			return nil
		}
		return &v.UserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

type IdentityForCmkResponse struct {
	// The ArmId of the user assigned identity that will be used to access the customer managed key vault
	UserAssignedIdentity string `pulumi:"userAssignedIdentity"`
}

// IdentityForCmkResponseInput is an input type that accepts IdentityForCmkResponseArgs and IdentityForCmkResponseOutput values.
// You can construct a concrete instance of `IdentityForCmkResponseInput` via:
//
//          IdentityForCmkResponseArgs{...}
type IdentityForCmkResponseInput interface {
	pulumi.Input

	ToIdentityForCmkResponseOutput() IdentityForCmkResponseOutput
	ToIdentityForCmkResponseOutputWithContext(context.Context) IdentityForCmkResponseOutput
}

type IdentityForCmkResponseArgs struct {
	// The ArmId of the user assigned identity that will be used to access the customer managed key vault
	UserAssignedIdentity pulumi.StringInput `pulumi:"userAssignedIdentity"`
}

func (IdentityForCmkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityForCmkResponse)(nil)).Elem()
}

func (i IdentityForCmkResponseArgs) ToIdentityForCmkResponseOutput() IdentityForCmkResponseOutput {
	return i.ToIdentityForCmkResponseOutputWithContext(context.Background())
}

func (i IdentityForCmkResponseArgs) ToIdentityForCmkResponseOutputWithContext(ctx context.Context) IdentityForCmkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityForCmkResponseOutput)
}

func (i IdentityForCmkResponseArgs) ToIdentityForCmkResponsePtrOutput() IdentityForCmkResponsePtrOutput {
	return i.ToIdentityForCmkResponsePtrOutputWithContext(context.Background())
}

func (i IdentityForCmkResponseArgs) ToIdentityForCmkResponsePtrOutputWithContext(ctx context.Context) IdentityForCmkResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityForCmkResponseOutput).ToIdentityForCmkResponsePtrOutputWithContext(ctx)
}

// IdentityForCmkResponsePtrInput is an input type that accepts IdentityForCmkResponseArgs, IdentityForCmkResponsePtr and IdentityForCmkResponsePtrOutput values.
// You can construct a concrete instance of `IdentityForCmkResponsePtrInput` via:
//
//          IdentityForCmkResponseArgs{...}
//
//  or:
//
//          nil
type IdentityForCmkResponsePtrInput interface {
	pulumi.Input

	ToIdentityForCmkResponsePtrOutput() IdentityForCmkResponsePtrOutput
	ToIdentityForCmkResponsePtrOutputWithContext(context.Context) IdentityForCmkResponsePtrOutput
}

type identityForCmkResponsePtrType IdentityForCmkResponseArgs

func IdentityForCmkResponsePtr(v *IdentityForCmkResponseArgs) IdentityForCmkResponsePtrInput {
	return (*identityForCmkResponsePtrType)(v)
}

func (*identityForCmkResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityForCmkResponse)(nil)).Elem()
}

func (i *identityForCmkResponsePtrType) ToIdentityForCmkResponsePtrOutput() IdentityForCmkResponsePtrOutput {
	return i.ToIdentityForCmkResponsePtrOutputWithContext(context.Background())
}

func (i *identityForCmkResponsePtrType) ToIdentityForCmkResponsePtrOutputWithContext(ctx context.Context) IdentityForCmkResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityForCmkResponsePtrOutput)
}

type IdentityForCmkResponseOutput struct{ *pulumi.OutputState }

func (IdentityForCmkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityForCmkResponse)(nil)).Elem()
}

func (o IdentityForCmkResponseOutput) ToIdentityForCmkResponseOutput() IdentityForCmkResponseOutput {
	return o
}

func (o IdentityForCmkResponseOutput) ToIdentityForCmkResponseOutputWithContext(ctx context.Context) IdentityForCmkResponseOutput {
	return o
}

func (o IdentityForCmkResponseOutput) ToIdentityForCmkResponsePtrOutput() IdentityForCmkResponsePtrOutput {
	return o.ToIdentityForCmkResponsePtrOutputWithContext(context.Background())
}

func (o IdentityForCmkResponseOutput) ToIdentityForCmkResponsePtrOutputWithContext(ctx context.Context) IdentityForCmkResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityForCmkResponse) *IdentityForCmkResponse {
		return &v
	}).(IdentityForCmkResponsePtrOutput)
}

// The ArmId of the user assigned identity that will be used to access the customer managed key vault
func (o IdentityForCmkResponseOutput) UserAssignedIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityForCmkResponse) string { return v.UserAssignedIdentity }).(pulumi.StringOutput)
}

type IdentityForCmkResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityForCmkResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityForCmkResponse)(nil)).Elem()
}

func (o IdentityForCmkResponsePtrOutput) ToIdentityForCmkResponsePtrOutput() IdentityForCmkResponsePtrOutput {
	return o
}

func (o IdentityForCmkResponsePtrOutput) ToIdentityForCmkResponsePtrOutputWithContext(ctx context.Context) IdentityForCmkResponsePtrOutput {
	return o
}

func (o IdentityForCmkResponsePtrOutput) Elem() IdentityForCmkResponseOutput {
	return o.ApplyT(func(v *IdentityForCmkResponse) IdentityForCmkResponse {
		if v != nil {
			return *v
		}
		var ret IdentityForCmkResponse
		return ret
	}).(IdentityForCmkResponseOutput)
}

// The ArmId of the user assigned identity that will be used to access the customer managed key vault
func (o IdentityForCmkResponsePtrOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityForCmkResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

type IdentityResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
	// The user assigned identities associated with the resource.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// IdentityResponseInput is an input type that accepts IdentityResponseArgs and IdentityResponseOutput values.
// You can construct a concrete instance of `IdentityResponseInput` via:
//
//          IdentityResponseArgs{...}
type IdentityResponseInput interface {
	pulumi.Input

	ToIdentityResponseOutput() IdentityResponseOutput
	ToIdentityResponseOutputWithContext(context.Context) IdentityResponseOutput
}

type IdentityResponseArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The user assigned identities associated with the resource.
	UserAssignedIdentities UserAssignedIdentityResponseMapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (i IdentityResponseArgs) ToIdentityResponseOutput() IdentityResponseOutput {
	return i.ToIdentityResponseOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput)
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput).ToIdentityResponsePtrOutputWithContext(ctx)
}

// IdentityResponsePtrInput is an input type that accepts IdentityResponseArgs, IdentityResponsePtr and IdentityResponsePtrOutput values.
// You can construct a concrete instance of `IdentityResponsePtrInput` via:
//
//          IdentityResponseArgs{...}
//
//  or:
//
//          nil
type IdentityResponsePtrInput interface {
	pulumi.Input

	ToIdentityResponsePtrOutput() IdentityResponsePtrOutput
	ToIdentityResponsePtrOutputWithContext(context.Context) IdentityResponsePtrOutput
}

type identityResponsePtrType IdentityResponseArgs

func IdentityResponsePtr(v *IdentityResponseArgs) IdentityResponsePtrInput {
	return (*identityResponsePtrType)(v)
}

func (*identityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponsePtrOutput)
}

type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityResponse) *IdentityResponse {
		return &v
	}).(IdentityResponsePtrOutput)
}

// The principal ID of resource identity.
func (o IdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type.
func (o IdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The user assigned identities associated with the resource.
func (o IdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v IdentityResponse) map[string]UserAssignedIdentityResponse { return v.UserAssignedIdentities }).(UserAssignedIdentityResponseMapOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse {
		if v != nil {
			return *v
		}
		var ret IdentityResponse
		return ret
	}).(IdentityResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The user assigned identities associated with the resource.
func (o IdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *IdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ImageAsset struct {
	// The Asset Id.
	Id *string `pulumi:"id"`
	// The mime type.
	MimeType *string `pulumi:"mimeType"`
	// Whether the Asset is unpacked.
	Unpack *bool `pulumi:"unpack"`
	// The Url of the Asset.
	Url *string `pulumi:"url"`
}

// ImageAssetInput is an input type that accepts ImageAssetArgs and ImageAssetOutput values.
// You can construct a concrete instance of `ImageAssetInput` via:
//
//          ImageAssetArgs{...}
type ImageAssetInput interface {
	pulumi.Input

	ToImageAssetOutput() ImageAssetOutput
	ToImageAssetOutputWithContext(context.Context) ImageAssetOutput
}

type ImageAssetArgs struct {
	// The Asset Id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The mime type.
	MimeType pulumi.StringPtrInput `pulumi:"mimeType"`
	// Whether the Asset is unpacked.
	Unpack pulumi.BoolPtrInput `pulumi:"unpack"`
	// The Url of the Asset.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ImageAssetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageAsset)(nil)).Elem()
}

func (i ImageAssetArgs) ToImageAssetOutput() ImageAssetOutput {
	return i.ToImageAssetOutputWithContext(context.Background())
}

func (i ImageAssetArgs) ToImageAssetOutputWithContext(ctx context.Context) ImageAssetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageAssetOutput)
}

// ImageAssetArrayInput is an input type that accepts ImageAssetArray and ImageAssetArrayOutput values.
// You can construct a concrete instance of `ImageAssetArrayInput` via:
//
//          ImageAssetArray{ ImageAssetArgs{...} }
type ImageAssetArrayInput interface {
	pulumi.Input

	ToImageAssetArrayOutput() ImageAssetArrayOutput
	ToImageAssetArrayOutputWithContext(context.Context) ImageAssetArrayOutput
}

type ImageAssetArray []ImageAssetInput

func (ImageAssetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageAsset)(nil)).Elem()
}

func (i ImageAssetArray) ToImageAssetArrayOutput() ImageAssetArrayOutput {
	return i.ToImageAssetArrayOutputWithContext(context.Background())
}

func (i ImageAssetArray) ToImageAssetArrayOutputWithContext(ctx context.Context) ImageAssetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageAssetArrayOutput)
}

type ImageAssetOutput struct{ *pulumi.OutputState }

func (ImageAssetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageAsset)(nil)).Elem()
}

func (o ImageAssetOutput) ToImageAssetOutput() ImageAssetOutput {
	return o
}

func (o ImageAssetOutput) ToImageAssetOutputWithContext(ctx context.Context) ImageAssetOutput {
	return o
}

// The Asset Id.
func (o ImageAssetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageAsset) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The mime type.
func (o ImageAssetOutput) MimeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageAsset) *string { return v.MimeType }).(pulumi.StringPtrOutput)
}

// Whether the Asset is unpacked.
func (o ImageAssetOutput) Unpack() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ImageAsset) *bool { return v.Unpack }).(pulumi.BoolPtrOutput)
}

// The Url of the Asset.
func (o ImageAssetOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageAsset) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ImageAssetArrayOutput struct{ *pulumi.OutputState }

func (ImageAssetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageAsset)(nil)).Elem()
}

func (o ImageAssetArrayOutput) ToImageAssetArrayOutput() ImageAssetArrayOutput {
	return o
}

func (o ImageAssetArrayOutput) ToImageAssetArrayOutputWithContext(ctx context.Context) ImageAssetArrayOutput {
	return o
}

func (o ImageAssetArrayOutput) Index(i pulumi.IntInput) ImageAssetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageAsset {
		return vs[0].([]ImageAsset)[vs[1].(int)]
	}).(ImageAssetOutput)
}

type ImageAssetResponse struct {
	// The Asset Id.
	Id *string `pulumi:"id"`
	// The mime type.
	MimeType *string `pulumi:"mimeType"`
	// Whether the Asset is unpacked.
	Unpack *bool `pulumi:"unpack"`
	// The Url of the Asset.
	Url *string `pulumi:"url"`
}

// ImageAssetResponseInput is an input type that accepts ImageAssetResponseArgs and ImageAssetResponseOutput values.
// You can construct a concrete instance of `ImageAssetResponseInput` via:
//
//          ImageAssetResponseArgs{...}
type ImageAssetResponseInput interface {
	pulumi.Input

	ToImageAssetResponseOutput() ImageAssetResponseOutput
	ToImageAssetResponseOutputWithContext(context.Context) ImageAssetResponseOutput
}

type ImageAssetResponseArgs struct {
	// The Asset Id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The mime type.
	MimeType pulumi.StringPtrInput `pulumi:"mimeType"`
	// Whether the Asset is unpacked.
	Unpack pulumi.BoolPtrInput `pulumi:"unpack"`
	// The Url of the Asset.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ImageAssetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageAssetResponse)(nil)).Elem()
}

func (i ImageAssetResponseArgs) ToImageAssetResponseOutput() ImageAssetResponseOutput {
	return i.ToImageAssetResponseOutputWithContext(context.Background())
}

func (i ImageAssetResponseArgs) ToImageAssetResponseOutputWithContext(ctx context.Context) ImageAssetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageAssetResponseOutput)
}

// ImageAssetResponseArrayInput is an input type that accepts ImageAssetResponseArray and ImageAssetResponseArrayOutput values.
// You can construct a concrete instance of `ImageAssetResponseArrayInput` via:
//
//          ImageAssetResponseArray{ ImageAssetResponseArgs{...} }
type ImageAssetResponseArrayInput interface {
	pulumi.Input

	ToImageAssetResponseArrayOutput() ImageAssetResponseArrayOutput
	ToImageAssetResponseArrayOutputWithContext(context.Context) ImageAssetResponseArrayOutput
}

type ImageAssetResponseArray []ImageAssetResponseInput

func (ImageAssetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageAssetResponse)(nil)).Elem()
}

func (i ImageAssetResponseArray) ToImageAssetResponseArrayOutput() ImageAssetResponseArrayOutput {
	return i.ToImageAssetResponseArrayOutputWithContext(context.Background())
}

func (i ImageAssetResponseArray) ToImageAssetResponseArrayOutputWithContext(ctx context.Context) ImageAssetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageAssetResponseArrayOutput)
}

type ImageAssetResponseOutput struct{ *pulumi.OutputState }

func (ImageAssetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageAssetResponse)(nil)).Elem()
}

func (o ImageAssetResponseOutput) ToImageAssetResponseOutput() ImageAssetResponseOutput {
	return o
}

func (o ImageAssetResponseOutput) ToImageAssetResponseOutputWithContext(ctx context.Context) ImageAssetResponseOutput {
	return o
}

// The Asset Id.
func (o ImageAssetResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageAssetResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The mime type.
func (o ImageAssetResponseOutput) MimeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageAssetResponse) *string { return v.MimeType }).(pulumi.StringPtrOutput)
}

// Whether the Asset is unpacked.
func (o ImageAssetResponseOutput) Unpack() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ImageAssetResponse) *bool { return v.Unpack }).(pulumi.BoolPtrOutput)
}

// The Url of the Asset.
func (o ImageAssetResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageAssetResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ImageAssetResponseArrayOutput struct{ *pulumi.OutputState }

func (ImageAssetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageAssetResponse)(nil)).Elem()
}

func (o ImageAssetResponseArrayOutput) ToImageAssetResponseArrayOutput() ImageAssetResponseArrayOutput {
	return o
}

func (o ImageAssetResponseArrayOutput) ToImageAssetResponseArrayOutputWithContext(ctx context.Context) ImageAssetResponseArrayOutput {
	return o
}

func (o ImageAssetResponseArrayOutput) Index(i pulumi.IntInput) ImageAssetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageAssetResponse {
		return vs[0].([]ImageAssetResponse)[vs[1].(int)]
	}).(ImageAssetResponseOutput)
}

type InferenceContainerProperties struct {
	// The route to check the liveness of the inference server container.
	LivenessRoute *Route `pulumi:"livenessRoute"`
	// The route to check the readiness of the inference server container.
	ReadinessRoute *Route `pulumi:"readinessRoute"`
	// The port to send the scoring requests to, within the inference server container.
	ScoringRoute *Route `pulumi:"scoringRoute"`
}

// InferenceContainerPropertiesInput is an input type that accepts InferenceContainerPropertiesArgs and InferenceContainerPropertiesOutput values.
// You can construct a concrete instance of `InferenceContainerPropertiesInput` via:
//
//          InferenceContainerPropertiesArgs{...}
type InferenceContainerPropertiesInput interface {
	pulumi.Input

	ToInferenceContainerPropertiesOutput() InferenceContainerPropertiesOutput
	ToInferenceContainerPropertiesOutputWithContext(context.Context) InferenceContainerPropertiesOutput
}

type InferenceContainerPropertiesArgs struct {
	// The route to check the liveness of the inference server container.
	LivenessRoute RoutePtrInput `pulumi:"livenessRoute"`
	// The route to check the readiness of the inference server container.
	ReadinessRoute RoutePtrInput `pulumi:"readinessRoute"`
	// The port to send the scoring requests to, within the inference server container.
	ScoringRoute RoutePtrInput `pulumi:"scoringRoute"`
}

func (InferenceContainerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceContainerProperties)(nil)).Elem()
}

func (i InferenceContainerPropertiesArgs) ToInferenceContainerPropertiesOutput() InferenceContainerPropertiesOutput {
	return i.ToInferenceContainerPropertiesOutputWithContext(context.Background())
}

func (i InferenceContainerPropertiesArgs) ToInferenceContainerPropertiesOutputWithContext(ctx context.Context) InferenceContainerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceContainerPropertiesOutput)
}

func (i InferenceContainerPropertiesArgs) ToInferenceContainerPropertiesPtrOutput() InferenceContainerPropertiesPtrOutput {
	return i.ToInferenceContainerPropertiesPtrOutputWithContext(context.Background())
}

func (i InferenceContainerPropertiesArgs) ToInferenceContainerPropertiesPtrOutputWithContext(ctx context.Context) InferenceContainerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceContainerPropertiesOutput).ToInferenceContainerPropertiesPtrOutputWithContext(ctx)
}

// InferenceContainerPropertiesPtrInput is an input type that accepts InferenceContainerPropertiesArgs, InferenceContainerPropertiesPtr and InferenceContainerPropertiesPtrOutput values.
// You can construct a concrete instance of `InferenceContainerPropertiesPtrInput` via:
//
//          InferenceContainerPropertiesArgs{...}
//
//  or:
//
//          nil
type InferenceContainerPropertiesPtrInput interface {
	pulumi.Input

	ToInferenceContainerPropertiesPtrOutput() InferenceContainerPropertiesPtrOutput
	ToInferenceContainerPropertiesPtrOutputWithContext(context.Context) InferenceContainerPropertiesPtrOutput
}

type inferenceContainerPropertiesPtrType InferenceContainerPropertiesArgs

func InferenceContainerPropertiesPtr(v *InferenceContainerPropertiesArgs) InferenceContainerPropertiesPtrInput {
	return (*inferenceContainerPropertiesPtrType)(v)
}

func (*inferenceContainerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceContainerProperties)(nil)).Elem()
}

func (i *inferenceContainerPropertiesPtrType) ToInferenceContainerPropertiesPtrOutput() InferenceContainerPropertiesPtrOutput {
	return i.ToInferenceContainerPropertiesPtrOutputWithContext(context.Background())
}

func (i *inferenceContainerPropertiesPtrType) ToInferenceContainerPropertiesPtrOutputWithContext(ctx context.Context) InferenceContainerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceContainerPropertiesPtrOutput)
}

type InferenceContainerPropertiesOutput struct{ *pulumi.OutputState }

func (InferenceContainerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceContainerProperties)(nil)).Elem()
}

func (o InferenceContainerPropertiesOutput) ToInferenceContainerPropertiesOutput() InferenceContainerPropertiesOutput {
	return o
}

func (o InferenceContainerPropertiesOutput) ToInferenceContainerPropertiesOutputWithContext(ctx context.Context) InferenceContainerPropertiesOutput {
	return o
}

func (o InferenceContainerPropertiesOutput) ToInferenceContainerPropertiesPtrOutput() InferenceContainerPropertiesPtrOutput {
	return o.ToInferenceContainerPropertiesPtrOutputWithContext(context.Background())
}

func (o InferenceContainerPropertiesOutput) ToInferenceContainerPropertiesPtrOutputWithContext(ctx context.Context) InferenceContainerPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InferenceContainerProperties) *InferenceContainerProperties {
		return &v
	}).(InferenceContainerPropertiesPtrOutput)
}

// The route to check the liveness of the inference server container.
func (o InferenceContainerPropertiesOutput) LivenessRoute() RoutePtrOutput {
	return o.ApplyT(func(v InferenceContainerProperties) *Route { return v.LivenessRoute }).(RoutePtrOutput)
}

// The route to check the readiness of the inference server container.
func (o InferenceContainerPropertiesOutput) ReadinessRoute() RoutePtrOutput {
	return o.ApplyT(func(v InferenceContainerProperties) *Route { return v.ReadinessRoute }).(RoutePtrOutput)
}

// The port to send the scoring requests to, within the inference server container.
func (o InferenceContainerPropertiesOutput) ScoringRoute() RoutePtrOutput {
	return o.ApplyT(func(v InferenceContainerProperties) *Route { return v.ScoringRoute }).(RoutePtrOutput)
}

type InferenceContainerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (InferenceContainerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceContainerProperties)(nil)).Elem()
}

func (o InferenceContainerPropertiesPtrOutput) ToInferenceContainerPropertiesPtrOutput() InferenceContainerPropertiesPtrOutput {
	return o
}

func (o InferenceContainerPropertiesPtrOutput) ToInferenceContainerPropertiesPtrOutputWithContext(ctx context.Context) InferenceContainerPropertiesPtrOutput {
	return o
}

func (o InferenceContainerPropertiesPtrOutput) Elem() InferenceContainerPropertiesOutput {
	return o.ApplyT(func(v *InferenceContainerProperties) InferenceContainerProperties {
		if v != nil {
			return *v
		}
		var ret InferenceContainerProperties
		return ret
	}).(InferenceContainerPropertiesOutput)
}

// The route to check the liveness of the inference server container.
func (o InferenceContainerPropertiesPtrOutput) LivenessRoute() RoutePtrOutput {
	return o.ApplyT(func(v *InferenceContainerProperties) *Route {
		if v == nil {
			return nil
		}
		return v.LivenessRoute
	}).(RoutePtrOutput)
}

// The route to check the readiness of the inference server container.
func (o InferenceContainerPropertiesPtrOutput) ReadinessRoute() RoutePtrOutput {
	return o.ApplyT(func(v *InferenceContainerProperties) *Route {
		if v == nil {
			return nil
		}
		return v.ReadinessRoute
	}).(RoutePtrOutput)
}

// The port to send the scoring requests to, within the inference server container.
func (o InferenceContainerPropertiesPtrOutput) ScoringRoute() RoutePtrOutput {
	return o.ApplyT(func(v *InferenceContainerProperties) *Route {
		if v == nil {
			return nil
		}
		return v.ScoringRoute
	}).(RoutePtrOutput)
}

type InferenceContainerPropertiesResponse struct {
	// The route to check the liveness of the inference server container.
	LivenessRoute *RouteResponse `pulumi:"livenessRoute"`
	// The route to check the readiness of the inference server container.
	ReadinessRoute *RouteResponse `pulumi:"readinessRoute"`
	// The port to send the scoring requests to, within the inference server container.
	ScoringRoute *RouteResponse `pulumi:"scoringRoute"`
}

// InferenceContainerPropertiesResponseInput is an input type that accepts InferenceContainerPropertiesResponseArgs and InferenceContainerPropertiesResponseOutput values.
// You can construct a concrete instance of `InferenceContainerPropertiesResponseInput` via:
//
//          InferenceContainerPropertiesResponseArgs{...}
type InferenceContainerPropertiesResponseInput interface {
	pulumi.Input

	ToInferenceContainerPropertiesResponseOutput() InferenceContainerPropertiesResponseOutput
	ToInferenceContainerPropertiesResponseOutputWithContext(context.Context) InferenceContainerPropertiesResponseOutput
}

type InferenceContainerPropertiesResponseArgs struct {
	// The route to check the liveness of the inference server container.
	LivenessRoute RouteResponsePtrInput `pulumi:"livenessRoute"`
	// The route to check the readiness of the inference server container.
	ReadinessRoute RouteResponsePtrInput `pulumi:"readinessRoute"`
	// The port to send the scoring requests to, within the inference server container.
	ScoringRoute RouteResponsePtrInput `pulumi:"scoringRoute"`
}

func (InferenceContainerPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceContainerPropertiesResponse)(nil)).Elem()
}

func (i InferenceContainerPropertiesResponseArgs) ToInferenceContainerPropertiesResponseOutput() InferenceContainerPropertiesResponseOutput {
	return i.ToInferenceContainerPropertiesResponseOutputWithContext(context.Background())
}

func (i InferenceContainerPropertiesResponseArgs) ToInferenceContainerPropertiesResponseOutputWithContext(ctx context.Context) InferenceContainerPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceContainerPropertiesResponseOutput)
}

func (i InferenceContainerPropertiesResponseArgs) ToInferenceContainerPropertiesResponsePtrOutput() InferenceContainerPropertiesResponsePtrOutput {
	return i.ToInferenceContainerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i InferenceContainerPropertiesResponseArgs) ToInferenceContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) InferenceContainerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceContainerPropertiesResponseOutput).ToInferenceContainerPropertiesResponsePtrOutputWithContext(ctx)
}

// InferenceContainerPropertiesResponsePtrInput is an input type that accepts InferenceContainerPropertiesResponseArgs, InferenceContainerPropertiesResponsePtr and InferenceContainerPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `InferenceContainerPropertiesResponsePtrInput` via:
//
//          InferenceContainerPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type InferenceContainerPropertiesResponsePtrInput interface {
	pulumi.Input

	ToInferenceContainerPropertiesResponsePtrOutput() InferenceContainerPropertiesResponsePtrOutput
	ToInferenceContainerPropertiesResponsePtrOutputWithContext(context.Context) InferenceContainerPropertiesResponsePtrOutput
}

type inferenceContainerPropertiesResponsePtrType InferenceContainerPropertiesResponseArgs

func InferenceContainerPropertiesResponsePtr(v *InferenceContainerPropertiesResponseArgs) InferenceContainerPropertiesResponsePtrInput {
	return (*inferenceContainerPropertiesResponsePtrType)(v)
}

func (*inferenceContainerPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceContainerPropertiesResponse)(nil)).Elem()
}

func (i *inferenceContainerPropertiesResponsePtrType) ToInferenceContainerPropertiesResponsePtrOutput() InferenceContainerPropertiesResponsePtrOutput {
	return i.ToInferenceContainerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *inferenceContainerPropertiesResponsePtrType) ToInferenceContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) InferenceContainerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceContainerPropertiesResponsePtrOutput)
}

type InferenceContainerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (InferenceContainerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceContainerPropertiesResponse)(nil)).Elem()
}

func (o InferenceContainerPropertiesResponseOutput) ToInferenceContainerPropertiesResponseOutput() InferenceContainerPropertiesResponseOutput {
	return o
}

func (o InferenceContainerPropertiesResponseOutput) ToInferenceContainerPropertiesResponseOutputWithContext(ctx context.Context) InferenceContainerPropertiesResponseOutput {
	return o
}

func (o InferenceContainerPropertiesResponseOutput) ToInferenceContainerPropertiesResponsePtrOutput() InferenceContainerPropertiesResponsePtrOutput {
	return o.ToInferenceContainerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o InferenceContainerPropertiesResponseOutput) ToInferenceContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) InferenceContainerPropertiesResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InferenceContainerPropertiesResponse) *InferenceContainerPropertiesResponse {
		return &v
	}).(InferenceContainerPropertiesResponsePtrOutput)
}

// The route to check the liveness of the inference server container.
func (o InferenceContainerPropertiesResponseOutput) LivenessRoute() RouteResponsePtrOutput {
	return o.ApplyT(func(v InferenceContainerPropertiesResponse) *RouteResponse { return v.LivenessRoute }).(RouteResponsePtrOutput)
}

// The route to check the readiness of the inference server container.
func (o InferenceContainerPropertiesResponseOutput) ReadinessRoute() RouteResponsePtrOutput {
	return o.ApplyT(func(v InferenceContainerPropertiesResponse) *RouteResponse { return v.ReadinessRoute }).(RouteResponsePtrOutput)
}

// The port to send the scoring requests to, within the inference server container.
func (o InferenceContainerPropertiesResponseOutput) ScoringRoute() RouteResponsePtrOutput {
	return o.ApplyT(func(v InferenceContainerPropertiesResponse) *RouteResponse { return v.ScoringRoute }).(RouteResponsePtrOutput)
}

type InferenceContainerPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (InferenceContainerPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceContainerPropertiesResponse)(nil)).Elem()
}

func (o InferenceContainerPropertiesResponsePtrOutput) ToInferenceContainerPropertiesResponsePtrOutput() InferenceContainerPropertiesResponsePtrOutput {
	return o
}

func (o InferenceContainerPropertiesResponsePtrOutput) ToInferenceContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) InferenceContainerPropertiesResponsePtrOutput {
	return o
}

func (o InferenceContainerPropertiesResponsePtrOutput) Elem() InferenceContainerPropertiesResponseOutput {
	return o.ApplyT(func(v *InferenceContainerPropertiesResponse) InferenceContainerPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret InferenceContainerPropertiesResponse
		return ret
	}).(InferenceContainerPropertiesResponseOutput)
}

// The route to check the liveness of the inference server container.
func (o InferenceContainerPropertiesResponsePtrOutput) LivenessRoute() RouteResponsePtrOutput {
	return o.ApplyT(func(v *InferenceContainerPropertiesResponse) *RouteResponse {
		if v == nil {
			return nil
		}
		return v.LivenessRoute
	}).(RouteResponsePtrOutput)
}

// The route to check the readiness of the inference server container.
func (o InferenceContainerPropertiesResponsePtrOutput) ReadinessRoute() RouteResponsePtrOutput {
	return o.ApplyT(func(v *InferenceContainerPropertiesResponse) *RouteResponse {
		if v == nil {
			return nil
		}
		return v.ReadinessRoute
	}).(RouteResponsePtrOutput)
}

// The port to send the scoring requests to, within the inference server container.
func (o InferenceContainerPropertiesResponsePtrOutput) ScoringRoute() RouteResponsePtrOutput {
	return o.ApplyT(func(v *InferenceContainerPropertiesResponse) *RouteResponse {
		if v == nil {
			return nil
		}
		return v.ScoringRoute
	}).(RouteResponsePtrOutput)
}

type InputDataBinding struct {
	// ARM resource ID of the registered dataVersion.
	DataId *string `pulumi:"dataId"`
	// Mechanism for accessing the data artifact.
	Mode *string `pulumi:"mode"`
	// Location of data inside the container process.
	PathOnCompute *string `pulumi:"pathOnCompute"`
}

// InputDataBindingInput is an input type that accepts InputDataBindingArgs and InputDataBindingOutput values.
// You can construct a concrete instance of `InputDataBindingInput` via:
//
//          InputDataBindingArgs{...}
type InputDataBindingInput interface {
	pulumi.Input

	ToInputDataBindingOutput() InputDataBindingOutput
	ToInputDataBindingOutputWithContext(context.Context) InputDataBindingOutput
}

type InputDataBindingArgs struct {
	// ARM resource ID of the registered dataVersion.
	DataId pulumi.StringPtrInput `pulumi:"dataId"`
	// Mechanism for accessing the data artifact.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Location of data inside the container process.
	PathOnCompute pulumi.StringPtrInput `pulumi:"pathOnCompute"`
}

func (InputDataBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDataBinding)(nil)).Elem()
}

func (i InputDataBindingArgs) ToInputDataBindingOutput() InputDataBindingOutput {
	return i.ToInputDataBindingOutputWithContext(context.Background())
}

func (i InputDataBindingArgs) ToInputDataBindingOutputWithContext(ctx context.Context) InputDataBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputDataBindingOutput)
}

// InputDataBindingMapInput is an input type that accepts InputDataBindingMap and InputDataBindingMapOutput values.
// You can construct a concrete instance of `InputDataBindingMapInput` via:
//
//          InputDataBindingMap{ "key": InputDataBindingArgs{...} }
type InputDataBindingMapInput interface {
	pulumi.Input

	ToInputDataBindingMapOutput() InputDataBindingMapOutput
	ToInputDataBindingMapOutputWithContext(context.Context) InputDataBindingMapOutput
}

type InputDataBindingMap map[string]InputDataBindingInput

func (InputDataBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]InputDataBinding)(nil)).Elem()
}

func (i InputDataBindingMap) ToInputDataBindingMapOutput() InputDataBindingMapOutput {
	return i.ToInputDataBindingMapOutputWithContext(context.Background())
}

func (i InputDataBindingMap) ToInputDataBindingMapOutputWithContext(ctx context.Context) InputDataBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputDataBindingMapOutput)
}

type InputDataBindingOutput struct{ *pulumi.OutputState }

func (InputDataBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDataBinding)(nil)).Elem()
}

func (o InputDataBindingOutput) ToInputDataBindingOutput() InputDataBindingOutput {
	return o
}

func (o InputDataBindingOutput) ToInputDataBindingOutputWithContext(ctx context.Context) InputDataBindingOutput {
	return o
}

// ARM resource ID of the registered dataVersion.
func (o InputDataBindingOutput) DataId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputDataBinding) *string { return v.DataId }).(pulumi.StringPtrOutput)
}

// Mechanism for accessing the data artifact.
func (o InputDataBindingOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputDataBinding) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Location of data inside the container process.
func (o InputDataBindingOutput) PathOnCompute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputDataBinding) *string { return v.PathOnCompute }).(pulumi.StringPtrOutput)
}

type InputDataBindingMapOutput struct{ *pulumi.OutputState }

func (InputDataBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]InputDataBinding)(nil)).Elem()
}

func (o InputDataBindingMapOutput) ToInputDataBindingMapOutput() InputDataBindingMapOutput {
	return o
}

func (o InputDataBindingMapOutput) ToInputDataBindingMapOutputWithContext(ctx context.Context) InputDataBindingMapOutput {
	return o
}

func (o InputDataBindingMapOutput) MapIndex(k pulumi.StringInput) InputDataBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) InputDataBinding {
		return vs[0].(map[string]InputDataBinding)[vs[1].(string)]
	}).(InputDataBindingOutput)
}

type InputDataBindingResponse struct {
	// ARM resource ID of the registered dataVersion.
	DataId *string `pulumi:"dataId"`
	// Mechanism for accessing the data artifact.
	Mode *string `pulumi:"mode"`
	// Location of data inside the container process.
	PathOnCompute *string `pulumi:"pathOnCompute"`
}

// InputDataBindingResponseInput is an input type that accepts InputDataBindingResponseArgs and InputDataBindingResponseOutput values.
// You can construct a concrete instance of `InputDataBindingResponseInput` via:
//
//          InputDataBindingResponseArgs{...}
type InputDataBindingResponseInput interface {
	pulumi.Input

	ToInputDataBindingResponseOutput() InputDataBindingResponseOutput
	ToInputDataBindingResponseOutputWithContext(context.Context) InputDataBindingResponseOutput
}

type InputDataBindingResponseArgs struct {
	// ARM resource ID of the registered dataVersion.
	DataId pulumi.StringPtrInput `pulumi:"dataId"`
	// Mechanism for accessing the data artifact.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Location of data inside the container process.
	PathOnCompute pulumi.StringPtrInput `pulumi:"pathOnCompute"`
}

func (InputDataBindingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDataBindingResponse)(nil)).Elem()
}

func (i InputDataBindingResponseArgs) ToInputDataBindingResponseOutput() InputDataBindingResponseOutput {
	return i.ToInputDataBindingResponseOutputWithContext(context.Background())
}

func (i InputDataBindingResponseArgs) ToInputDataBindingResponseOutputWithContext(ctx context.Context) InputDataBindingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputDataBindingResponseOutput)
}

// InputDataBindingResponseMapInput is an input type that accepts InputDataBindingResponseMap and InputDataBindingResponseMapOutput values.
// You can construct a concrete instance of `InputDataBindingResponseMapInput` via:
//
//          InputDataBindingResponseMap{ "key": InputDataBindingResponseArgs{...} }
type InputDataBindingResponseMapInput interface {
	pulumi.Input

	ToInputDataBindingResponseMapOutput() InputDataBindingResponseMapOutput
	ToInputDataBindingResponseMapOutputWithContext(context.Context) InputDataBindingResponseMapOutput
}

type InputDataBindingResponseMap map[string]InputDataBindingResponseInput

func (InputDataBindingResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]InputDataBindingResponse)(nil)).Elem()
}

func (i InputDataBindingResponseMap) ToInputDataBindingResponseMapOutput() InputDataBindingResponseMapOutput {
	return i.ToInputDataBindingResponseMapOutputWithContext(context.Background())
}

func (i InputDataBindingResponseMap) ToInputDataBindingResponseMapOutputWithContext(ctx context.Context) InputDataBindingResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputDataBindingResponseMapOutput)
}

type InputDataBindingResponseOutput struct{ *pulumi.OutputState }

func (InputDataBindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDataBindingResponse)(nil)).Elem()
}

func (o InputDataBindingResponseOutput) ToInputDataBindingResponseOutput() InputDataBindingResponseOutput {
	return o
}

func (o InputDataBindingResponseOutput) ToInputDataBindingResponseOutputWithContext(ctx context.Context) InputDataBindingResponseOutput {
	return o
}

// ARM resource ID of the registered dataVersion.
func (o InputDataBindingResponseOutput) DataId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputDataBindingResponse) *string { return v.DataId }).(pulumi.StringPtrOutput)
}

// Mechanism for accessing the data artifact.
func (o InputDataBindingResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputDataBindingResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Location of data inside the container process.
func (o InputDataBindingResponseOutput) PathOnCompute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputDataBindingResponse) *string { return v.PathOnCompute }).(pulumi.StringPtrOutput)
}

type InputDataBindingResponseMapOutput struct{ *pulumi.OutputState }

func (InputDataBindingResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]InputDataBindingResponse)(nil)).Elem()
}

func (o InputDataBindingResponseMapOutput) ToInputDataBindingResponseMapOutput() InputDataBindingResponseMapOutput {
	return o
}

func (o InputDataBindingResponseMapOutput) ToInputDataBindingResponseMapOutputWithContext(ctx context.Context) InputDataBindingResponseMapOutput {
	return o
}

func (o InputDataBindingResponseMapOutput) MapIndex(k pulumi.StringInput) InputDataBindingResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) InputDataBindingResponse {
		return vs[0].(map[string]InputDataBindingResponse)[vs[1].(string)]
	}).(InputDataBindingResponseOutput)
}

type JobEndpointResponse struct {
	// Url for endpoint.
	Endpoint *string `pulumi:"endpoint"`
	// Endpoint type.
	JobEndpointType *string `pulumi:"jobEndpointType"`
	// Port for endpoint.
	Port *int `pulumi:"port"`
	// Additional properties to set on the endpoint.
	Properties map[string]string `pulumi:"properties"`
}

// JobEndpointResponseInput is an input type that accepts JobEndpointResponseArgs and JobEndpointResponseOutput values.
// You can construct a concrete instance of `JobEndpointResponseInput` via:
//
//          JobEndpointResponseArgs{...}
type JobEndpointResponseInput interface {
	pulumi.Input

	ToJobEndpointResponseOutput() JobEndpointResponseOutput
	ToJobEndpointResponseOutputWithContext(context.Context) JobEndpointResponseOutput
}

type JobEndpointResponseArgs struct {
	// Url for endpoint.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// Endpoint type.
	JobEndpointType pulumi.StringPtrInput `pulumi:"jobEndpointType"`
	// Port for endpoint.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Additional properties to set on the endpoint.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (JobEndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobEndpointResponse)(nil)).Elem()
}

func (i JobEndpointResponseArgs) ToJobEndpointResponseOutput() JobEndpointResponseOutput {
	return i.ToJobEndpointResponseOutputWithContext(context.Background())
}

func (i JobEndpointResponseArgs) ToJobEndpointResponseOutputWithContext(ctx context.Context) JobEndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobEndpointResponseOutput)
}

// JobEndpointResponseMapInput is an input type that accepts JobEndpointResponseMap and JobEndpointResponseMapOutput values.
// You can construct a concrete instance of `JobEndpointResponseMapInput` via:
//
//          JobEndpointResponseMap{ "key": JobEndpointResponseArgs{...} }
type JobEndpointResponseMapInput interface {
	pulumi.Input

	ToJobEndpointResponseMapOutput() JobEndpointResponseMapOutput
	ToJobEndpointResponseMapOutputWithContext(context.Context) JobEndpointResponseMapOutput
}

type JobEndpointResponseMap map[string]JobEndpointResponseInput

func (JobEndpointResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]JobEndpointResponse)(nil)).Elem()
}

func (i JobEndpointResponseMap) ToJobEndpointResponseMapOutput() JobEndpointResponseMapOutput {
	return i.ToJobEndpointResponseMapOutputWithContext(context.Background())
}

func (i JobEndpointResponseMap) ToJobEndpointResponseMapOutputWithContext(ctx context.Context) JobEndpointResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobEndpointResponseMapOutput)
}

type JobEndpointResponseOutput struct{ *pulumi.OutputState }

func (JobEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobEndpointResponse)(nil)).Elem()
}

func (o JobEndpointResponseOutput) ToJobEndpointResponseOutput() JobEndpointResponseOutput {
	return o
}

func (o JobEndpointResponseOutput) ToJobEndpointResponseOutputWithContext(ctx context.Context) JobEndpointResponseOutput {
	return o
}

// Url for endpoint.
func (o JobEndpointResponseOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobEndpointResponse) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// Endpoint type.
func (o JobEndpointResponseOutput) JobEndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobEndpointResponse) *string { return v.JobEndpointType }).(pulumi.StringPtrOutput)
}

// Port for endpoint.
func (o JobEndpointResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobEndpointResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Additional properties to set on the endpoint.
func (o JobEndpointResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobEndpointResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type JobEndpointResponseMapOutput struct{ *pulumi.OutputState }

func (JobEndpointResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]JobEndpointResponse)(nil)).Elem()
}

func (o JobEndpointResponseMapOutput) ToJobEndpointResponseMapOutput() JobEndpointResponseMapOutput {
	return o
}

func (o JobEndpointResponseMapOutput) ToJobEndpointResponseMapOutputWithContext(ctx context.Context) JobEndpointResponseMapOutput {
	return o
}

func (o JobEndpointResponseMapOutput) MapIndex(k pulumi.StringInput) JobEndpointResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) JobEndpointResponse {
		return vs[0].(map[string]JobEndpointResponse)[vs[1].(string)]
	}).(JobEndpointResponseOutput)
}

type JobOutputResponse struct {
	// ARM ID of the datastore where the job logs and artifacts are stored, or null for the default container ("azureml") in the workspace's storage account.
	DatastoreId string `pulumi:"datastoreId"`
	// Path within the datastore to the job logs and artifacts.
	Path string `pulumi:"path"`
}

// JobOutputResponseInput is an input type that accepts JobOutputResponseArgs and JobOutputResponseOutput values.
// You can construct a concrete instance of `JobOutputResponseInput` via:
//
//          JobOutputResponseArgs{...}
type JobOutputResponseInput interface {
	pulumi.Input

	ToJobOutputResponseOutput() JobOutputResponseOutput
	ToJobOutputResponseOutputWithContext(context.Context) JobOutputResponseOutput
}

type JobOutputResponseArgs struct {
	// ARM ID of the datastore where the job logs and artifacts are stored, or null for the default container ("azureml") in the workspace's storage account.
	DatastoreId pulumi.StringInput `pulumi:"datastoreId"`
	// Path within the datastore to the job logs and artifacts.
	Path pulumi.StringInput `pulumi:"path"`
}

func (JobOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobOutputResponse)(nil)).Elem()
}

func (i JobOutputResponseArgs) ToJobOutputResponseOutput() JobOutputResponseOutput {
	return i.ToJobOutputResponseOutputWithContext(context.Background())
}

func (i JobOutputResponseArgs) ToJobOutputResponseOutputWithContext(ctx context.Context) JobOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobOutputResponseOutput)
}

type JobOutputResponseOutput struct{ *pulumi.OutputState }

func (JobOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobOutputResponse)(nil)).Elem()
}

func (o JobOutputResponseOutput) ToJobOutputResponseOutput() JobOutputResponseOutput {
	return o
}

func (o JobOutputResponseOutput) ToJobOutputResponseOutputWithContext(ctx context.Context) JobOutputResponseOutput {
	return o
}

// ARM ID of the datastore where the job logs and artifacts are stored, or null for the default container ("azureml") in the workspace's storage account.
func (o JobOutputResponseOutput) DatastoreId() pulumi.StringOutput {
	return o.ApplyT(func(v JobOutputResponse) string { return v.DatastoreId }).(pulumi.StringOutput)
}

// Path within the datastore to the job logs and artifacts.
func (o JobOutputResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v JobOutputResponse) string { return v.Path }).(pulumi.StringOutput)
}

type K8sOnlineDeployment struct {
	// If true, enables Application Insights logging.
	AppInsightsEnabled *bool `pulumi:"appInsightsEnabled"`
	// Code configuration for the endpoint deployment.
	CodeConfiguration *CodeConfiguration `pulumi:"codeConfiguration"`
	// Resource requirements for each container instance within an online deployment.
	ContainerResourceRequirements *ContainerResourceRequirements `pulumi:"containerResourceRequirements"`
	// Description of the endpoint deployment.
	Description *string `pulumi:"description"`
	// Enum to determine endpoint compute type.
	// Expected value is 'K8S'.
	EndpointComputeType string `pulumi:"endpointComputeType"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Deployment container liveness/readiness probe configuration.
	LivenessProbe *ProbeSettings `pulumi:"livenessProbe"`
	// Reference to the model asset for the endpoint deployment.
	Model interface{} `pulumi:"model"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// Online deployment scoring requests configuration.
	RequestSettings *OnlineRequestSettings `pulumi:"requestSettings"`
	// Online deployment scaling configuration.
	ScaleSettings interface{} `pulumi:"scaleSettings"`
}

// K8sOnlineDeploymentInput is an input type that accepts K8sOnlineDeploymentArgs and K8sOnlineDeploymentOutput values.
// You can construct a concrete instance of `K8sOnlineDeploymentInput` via:
//
//          K8sOnlineDeploymentArgs{...}
type K8sOnlineDeploymentInput interface {
	pulumi.Input

	ToK8sOnlineDeploymentOutput() K8sOnlineDeploymentOutput
	ToK8sOnlineDeploymentOutputWithContext(context.Context) K8sOnlineDeploymentOutput
}

type K8sOnlineDeploymentArgs struct {
	// If true, enables Application Insights logging.
	AppInsightsEnabled pulumi.BoolPtrInput `pulumi:"appInsightsEnabled"`
	// Code configuration for the endpoint deployment.
	CodeConfiguration CodeConfigurationPtrInput `pulumi:"codeConfiguration"`
	// Resource requirements for each container instance within an online deployment.
	ContainerResourceRequirements ContainerResourceRequirementsPtrInput `pulumi:"containerResourceRequirements"`
	// Description of the endpoint deployment.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enum to determine endpoint compute type.
	// Expected value is 'K8S'.
	EndpointComputeType pulumi.StringInput `pulumi:"endpointComputeType"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// Deployment container liveness/readiness probe configuration.
	LivenessProbe ProbeSettingsPtrInput `pulumi:"livenessProbe"`
	// Reference to the model asset for the endpoint deployment.
	Model pulumi.Input `pulumi:"model"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Online deployment scoring requests configuration.
	RequestSettings OnlineRequestSettingsPtrInput `pulumi:"requestSettings"`
	// Online deployment scaling configuration.
	ScaleSettings pulumi.Input `pulumi:"scaleSettings"`
}

func (K8sOnlineDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sOnlineDeployment)(nil)).Elem()
}

func (i K8sOnlineDeploymentArgs) ToK8sOnlineDeploymentOutput() K8sOnlineDeploymentOutput {
	return i.ToK8sOnlineDeploymentOutputWithContext(context.Background())
}

func (i K8sOnlineDeploymentArgs) ToK8sOnlineDeploymentOutputWithContext(ctx context.Context) K8sOnlineDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sOnlineDeploymentOutput)
}

type K8sOnlineDeploymentOutput struct{ *pulumi.OutputState }

func (K8sOnlineDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sOnlineDeployment)(nil)).Elem()
}

func (o K8sOnlineDeploymentOutput) ToK8sOnlineDeploymentOutput() K8sOnlineDeploymentOutput {
	return o
}

func (o K8sOnlineDeploymentOutput) ToK8sOnlineDeploymentOutputWithContext(ctx context.Context) K8sOnlineDeploymentOutput {
	return o
}

// If true, enables Application Insights logging.
func (o K8sOnlineDeploymentOutput) AppInsightsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) *bool { return v.AppInsightsEnabled }).(pulumi.BoolPtrOutput)
}

// Code configuration for the endpoint deployment.
func (o K8sOnlineDeploymentOutput) CodeConfiguration() CodeConfigurationPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) *CodeConfiguration { return v.CodeConfiguration }).(CodeConfigurationPtrOutput)
}

// Resource requirements for each container instance within an online deployment.
func (o K8sOnlineDeploymentOutput) ContainerResourceRequirements() ContainerResourceRequirementsPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) *ContainerResourceRequirements { return v.ContainerResourceRequirements }).(ContainerResourceRequirementsPtrOutput)
}

// Description of the endpoint deployment.
func (o K8sOnlineDeploymentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine endpoint compute type.
// Expected value is 'K8S'.
func (o K8sOnlineDeploymentOutput) EndpointComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) string { return v.EndpointComputeType }).(pulumi.StringOutput)
}

// ARM resource ID of the environment specification for the endpoint deployment.
func (o K8sOnlineDeploymentOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables configuration for the deployment.
func (o K8sOnlineDeploymentOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Deployment container liveness/readiness probe configuration.
func (o K8sOnlineDeploymentOutput) LivenessProbe() ProbeSettingsPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) *ProbeSettings { return v.LivenessProbe }).(ProbeSettingsPtrOutput)
}

// Reference to the model asset for the endpoint deployment.
func (o K8sOnlineDeploymentOutput) Model() pulumi.AnyOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) interface{} { return v.Model }).(pulumi.AnyOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o K8sOnlineDeploymentOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Online deployment scoring requests configuration.
func (o K8sOnlineDeploymentOutput) RequestSettings() OnlineRequestSettingsPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) *OnlineRequestSettings { return v.RequestSettings }).(OnlineRequestSettingsPtrOutput)
}

// Online deployment scaling configuration.
func (o K8sOnlineDeploymentOutput) ScaleSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) interface{} { return v.ScaleSettings }).(pulumi.AnyOutput)
}

type K8sOnlineDeploymentResponse struct {
	// If true, enables Application Insights logging.
	AppInsightsEnabled *bool `pulumi:"appInsightsEnabled"`
	// Code configuration for the endpoint deployment.
	CodeConfiguration *CodeConfigurationResponse `pulumi:"codeConfiguration"`
	// Resource requirements for each container instance within an online deployment.
	ContainerResourceRequirements *ContainerResourceRequirementsResponse `pulumi:"containerResourceRequirements"`
	// Description of the endpoint deployment.
	Description *string `pulumi:"description"`
	// Enum to determine endpoint compute type.
	// Expected value is 'K8S'.
	EndpointComputeType string `pulumi:"endpointComputeType"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Deployment container liveness/readiness probe configuration.
	LivenessProbe *ProbeSettingsResponse `pulumi:"livenessProbe"`
	// Reference to the model asset for the endpoint deployment.
	Model interface{} `pulumi:"model"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// Provisioning state for the endpoint deployment.
	ProvisioningState string `pulumi:"provisioningState"`
	// Online deployment scoring requests configuration.
	RequestSettings *OnlineRequestSettingsResponse `pulumi:"requestSettings"`
	// Online deployment scaling configuration.
	ScaleSettings interface{} `pulumi:"scaleSettings"`
}

// K8sOnlineDeploymentResponseInput is an input type that accepts K8sOnlineDeploymentResponseArgs and K8sOnlineDeploymentResponseOutput values.
// You can construct a concrete instance of `K8sOnlineDeploymentResponseInput` via:
//
//          K8sOnlineDeploymentResponseArgs{...}
type K8sOnlineDeploymentResponseInput interface {
	pulumi.Input

	ToK8sOnlineDeploymentResponseOutput() K8sOnlineDeploymentResponseOutput
	ToK8sOnlineDeploymentResponseOutputWithContext(context.Context) K8sOnlineDeploymentResponseOutput
}

type K8sOnlineDeploymentResponseArgs struct {
	// If true, enables Application Insights logging.
	AppInsightsEnabled pulumi.BoolPtrInput `pulumi:"appInsightsEnabled"`
	// Code configuration for the endpoint deployment.
	CodeConfiguration CodeConfigurationResponsePtrInput `pulumi:"codeConfiguration"`
	// Resource requirements for each container instance within an online deployment.
	ContainerResourceRequirements ContainerResourceRequirementsResponsePtrInput `pulumi:"containerResourceRequirements"`
	// Description of the endpoint deployment.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enum to determine endpoint compute type.
	// Expected value is 'K8S'.
	EndpointComputeType pulumi.StringInput `pulumi:"endpointComputeType"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// Deployment container liveness/readiness probe configuration.
	LivenessProbe ProbeSettingsResponsePtrInput `pulumi:"livenessProbe"`
	// Reference to the model asset for the endpoint deployment.
	Model pulumi.Input `pulumi:"model"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Provisioning state for the endpoint deployment.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Online deployment scoring requests configuration.
	RequestSettings OnlineRequestSettingsResponsePtrInput `pulumi:"requestSettings"`
	// Online deployment scaling configuration.
	ScaleSettings pulumi.Input `pulumi:"scaleSettings"`
}

func (K8sOnlineDeploymentResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sOnlineDeploymentResponse)(nil)).Elem()
}

func (i K8sOnlineDeploymentResponseArgs) ToK8sOnlineDeploymentResponseOutput() K8sOnlineDeploymentResponseOutput {
	return i.ToK8sOnlineDeploymentResponseOutputWithContext(context.Background())
}

func (i K8sOnlineDeploymentResponseArgs) ToK8sOnlineDeploymentResponseOutputWithContext(ctx context.Context) K8sOnlineDeploymentResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sOnlineDeploymentResponseOutput)
}

type K8sOnlineDeploymentResponseOutput struct{ *pulumi.OutputState }

func (K8sOnlineDeploymentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sOnlineDeploymentResponse)(nil)).Elem()
}

func (o K8sOnlineDeploymentResponseOutput) ToK8sOnlineDeploymentResponseOutput() K8sOnlineDeploymentResponseOutput {
	return o
}

func (o K8sOnlineDeploymentResponseOutput) ToK8sOnlineDeploymentResponseOutputWithContext(ctx context.Context) K8sOnlineDeploymentResponseOutput {
	return o
}

// If true, enables Application Insights logging.
func (o K8sOnlineDeploymentResponseOutput) AppInsightsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) *bool { return v.AppInsightsEnabled }).(pulumi.BoolPtrOutput)
}

// Code configuration for the endpoint deployment.
func (o K8sOnlineDeploymentResponseOutput) CodeConfiguration() CodeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) *CodeConfigurationResponse { return v.CodeConfiguration }).(CodeConfigurationResponsePtrOutput)
}

// Resource requirements for each container instance within an online deployment.
func (o K8sOnlineDeploymentResponseOutput) ContainerResourceRequirements() ContainerResourceRequirementsResponsePtrOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) *ContainerResourceRequirementsResponse {
		return v.ContainerResourceRequirements
	}).(ContainerResourceRequirementsResponsePtrOutput)
}

// Description of the endpoint deployment.
func (o K8sOnlineDeploymentResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine endpoint compute type.
// Expected value is 'K8S'.
func (o K8sOnlineDeploymentResponseOutput) EndpointComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) string { return v.EndpointComputeType }).(pulumi.StringOutput)
}

// ARM resource ID of the environment specification for the endpoint deployment.
func (o K8sOnlineDeploymentResponseOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables configuration for the deployment.
func (o K8sOnlineDeploymentResponseOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Deployment container liveness/readiness probe configuration.
func (o K8sOnlineDeploymentResponseOutput) LivenessProbe() ProbeSettingsResponsePtrOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) *ProbeSettingsResponse { return v.LivenessProbe }).(ProbeSettingsResponsePtrOutput)
}

// Reference to the model asset for the endpoint deployment.
func (o K8sOnlineDeploymentResponseOutput) Model() pulumi.AnyOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) interface{} { return v.Model }).(pulumi.AnyOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o K8sOnlineDeploymentResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Provisioning state for the endpoint deployment.
func (o K8sOnlineDeploymentResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Online deployment scoring requests configuration.
func (o K8sOnlineDeploymentResponseOutput) RequestSettings() OnlineRequestSettingsResponsePtrOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) *OnlineRequestSettingsResponse { return v.RequestSettings }).(OnlineRequestSettingsResponsePtrOutput)
}

// Online deployment scaling configuration.
func (o K8sOnlineDeploymentResponseOutput) ScaleSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) interface{} { return v.ScaleSettings }).(pulumi.AnyOutput)
}

type KeyVaultProperties struct {
	// For future use - The client id of the identity which will be used to access key vault.
	IdentityClientId *string `pulumi:"identityClientId"`
	// Key vault uri to access the encryption key.
	KeyIdentifier string `pulumi:"keyIdentifier"`
	// The ArmId of the keyVault where the customer owned encryption key is present.
	KeyVaultArmId string `pulumi:"keyVaultArmId"`
}

// KeyVaultPropertiesInput is an input type that accepts KeyVaultPropertiesArgs and KeyVaultPropertiesOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesInput` via:
//
//          KeyVaultPropertiesArgs{...}
type KeyVaultPropertiesInput interface {
	pulumi.Input

	ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput
	ToKeyVaultPropertiesOutputWithContext(context.Context) KeyVaultPropertiesOutput
}

type KeyVaultPropertiesArgs struct {
	// For future use - The client id of the identity which will be used to access key vault.
	IdentityClientId pulumi.StringPtrInput `pulumi:"identityClientId"`
	// Key vault uri to access the encryption key.
	KeyIdentifier pulumi.StringInput `pulumi:"keyIdentifier"`
	// The ArmId of the keyVault where the customer owned encryption key is present.
	KeyVaultArmId pulumi.StringInput `pulumi:"keyVaultArmId"`
}

func (KeyVaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return i.ToKeyVaultPropertiesOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput)
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput).ToKeyVaultPropertiesPtrOutputWithContext(ctx)
}

// KeyVaultPropertiesPtrInput is an input type that accepts KeyVaultPropertiesArgs, KeyVaultPropertiesPtr and KeyVaultPropertiesPtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesPtrInput` via:
//
//          KeyVaultPropertiesArgs{...}
//
//  or:
//
//          nil
type KeyVaultPropertiesPtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput
	ToKeyVaultPropertiesPtrOutputWithContext(context.Context) KeyVaultPropertiesPtrOutput
}

type keyVaultPropertiesPtrType KeyVaultPropertiesArgs

func KeyVaultPropertiesPtr(v *KeyVaultPropertiesArgs) KeyVaultPropertiesPtrInput {
	return (*keyVaultPropertiesPtrType)(v)
}

func (*keyVaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesPtrOutput)
}

type KeyVaultPropertiesOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyVaultProperties) *KeyVaultProperties {
		return &v
	}).(KeyVaultPropertiesPtrOutput)
}

// For future use - The client id of the identity which will be used to access key vault.
func (o KeyVaultPropertiesOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// Key vault uri to access the encryption key.
func (o KeyVaultPropertiesOutput) KeyIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultProperties) string { return v.KeyIdentifier }).(pulumi.StringOutput)
}

// The ArmId of the keyVault where the customer owned encryption key is present.
func (o KeyVaultPropertiesOutput) KeyVaultArmId() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultProperties) string { return v.KeyVaultArmId }).(pulumi.StringOutput)
}

type KeyVaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) Elem() KeyVaultPropertiesOutput {
	return o.ApplyT(func(v *KeyVaultProperties) KeyVaultProperties {
		if v != nil {
			return *v
		}
		var ret KeyVaultProperties
		return ret
	}).(KeyVaultPropertiesOutput)
}

// For future use - The client id of the identity which will be used to access key vault.
func (o KeyVaultPropertiesPtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// Key vault uri to access the encryption key.
func (o KeyVaultPropertiesPtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// The ArmId of the keyVault where the customer owned encryption key is present.
func (o KeyVaultPropertiesPtrOutput) KeyVaultArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultArmId
	}).(pulumi.StringPtrOutput)
}

type KeyVaultPropertiesResponse struct {
	// For future use - The client id of the identity which will be used to access key vault.
	IdentityClientId *string `pulumi:"identityClientId"`
	// Key vault uri to access the encryption key.
	KeyIdentifier string `pulumi:"keyIdentifier"`
	// The ArmId of the keyVault where the customer owned encryption key is present.
	KeyVaultArmId string `pulumi:"keyVaultArmId"`
}

// KeyVaultPropertiesResponseInput is an input type that accepts KeyVaultPropertiesResponseArgs and KeyVaultPropertiesResponseOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesResponseInput` via:
//
//          KeyVaultPropertiesResponseArgs{...}
type KeyVaultPropertiesResponseInput interface {
	pulumi.Input

	ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput
	ToKeyVaultPropertiesResponseOutputWithContext(context.Context) KeyVaultPropertiesResponseOutput
}

type KeyVaultPropertiesResponseArgs struct {
	// For future use - The client id of the identity which will be used to access key vault.
	IdentityClientId pulumi.StringPtrInput `pulumi:"identityClientId"`
	// Key vault uri to access the encryption key.
	KeyIdentifier pulumi.StringInput `pulumi:"keyIdentifier"`
	// The ArmId of the keyVault where the customer owned encryption key is present.
	KeyVaultArmId pulumi.StringInput `pulumi:"keyVaultArmId"`
}

func (KeyVaultPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return i.ToKeyVaultPropertiesResponseOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponseOutput)
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return i.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponseOutput).ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx)
}

// KeyVaultPropertiesResponsePtrInput is an input type that accepts KeyVaultPropertiesResponseArgs, KeyVaultPropertiesResponsePtr and KeyVaultPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesResponsePtrInput` via:
//
//          KeyVaultPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type KeyVaultPropertiesResponsePtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput
	ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Context) KeyVaultPropertiesResponsePtrOutput
}

type keyVaultPropertiesResponsePtrType KeyVaultPropertiesResponseArgs

func KeyVaultPropertiesResponsePtr(v *KeyVaultPropertiesResponseArgs) KeyVaultPropertiesResponsePtrInput {
	return (*keyVaultPropertiesResponsePtrType)(v)
}

func (*keyVaultPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (i *keyVaultPropertiesResponsePtrType) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return i.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesResponsePtrType) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponsePtrOutput)
}

type KeyVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyVaultPropertiesResponse) *KeyVaultPropertiesResponse {
		return &v
	}).(KeyVaultPropertiesResponsePtrOutput)
}

// For future use - The client id of the identity which will be used to access key vault.
func (o KeyVaultPropertiesResponseOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// Key vault uri to access the encryption key.
func (o KeyVaultPropertiesResponseOutput) KeyIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) string { return v.KeyIdentifier }).(pulumi.StringOutput)
}

// The ArmId of the keyVault where the customer owned encryption key is present.
func (o KeyVaultPropertiesResponseOutput) KeyVaultArmId() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) string { return v.KeyVaultArmId }).(pulumi.StringOutput)
}

type KeyVaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) Elem() KeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) KeyVaultPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret KeyVaultPropertiesResponse
		return ret
	}).(KeyVaultPropertiesResponseOutput)
}

// For future use - The client id of the identity which will be used to access key vault.
func (o KeyVaultPropertiesResponsePtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// Key vault uri to access the encryption key.
func (o KeyVaultPropertiesResponsePtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// The ArmId of the keyVault where the customer owned encryption key is present.
func (o KeyVaultPropertiesResponsePtrOutput) KeyVaultArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultArmId
	}).(pulumi.StringPtrOutput)
}

type LabelCategory struct {
	// Indicates whether it is allowed to select multiple classes in this category.
	AllowMultiSelect *bool `pulumi:"allowMultiSelect"`
	// Dictionary of label classes in this category.
	Classes map[string]LabelClass `pulumi:"classes"`
	// Display name of the label category.
	DisplayName *string `pulumi:"displayName"`
}

// LabelCategoryInput is an input type that accepts LabelCategoryArgs and LabelCategoryOutput values.
// You can construct a concrete instance of `LabelCategoryInput` via:
//
//          LabelCategoryArgs{...}
type LabelCategoryInput interface {
	pulumi.Input

	ToLabelCategoryOutput() LabelCategoryOutput
	ToLabelCategoryOutputWithContext(context.Context) LabelCategoryOutput
}

type LabelCategoryArgs struct {
	// Indicates whether it is allowed to select multiple classes in this category.
	AllowMultiSelect pulumi.BoolPtrInput `pulumi:"allowMultiSelect"`
	// Dictionary of label classes in this category.
	Classes LabelClassMapInput `pulumi:"classes"`
	// Display name of the label category.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
}

func (LabelCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelCategory)(nil)).Elem()
}

func (i LabelCategoryArgs) ToLabelCategoryOutput() LabelCategoryOutput {
	return i.ToLabelCategoryOutputWithContext(context.Background())
}

func (i LabelCategoryArgs) ToLabelCategoryOutputWithContext(ctx context.Context) LabelCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelCategoryOutput)
}

// LabelCategoryMapInput is an input type that accepts LabelCategoryMap and LabelCategoryMapOutput values.
// You can construct a concrete instance of `LabelCategoryMapInput` via:
//
//          LabelCategoryMap{ "key": LabelCategoryArgs{...} }
type LabelCategoryMapInput interface {
	pulumi.Input

	ToLabelCategoryMapOutput() LabelCategoryMapOutput
	ToLabelCategoryMapOutputWithContext(context.Context) LabelCategoryMapOutput
}

type LabelCategoryMap map[string]LabelCategoryInput

func (LabelCategoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LabelCategory)(nil)).Elem()
}

func (i LabelCategoryMap) ToLabelCategoryMapOutput() LabelCategoryMapOutput {
	return i.ToLabelCategoryMapOutputWithContext(context.Background())
}

func (i LabelCategoryMap) ToLabelCategoryMapOutputWithContext(ctx context.Context) LabelCategoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelCategoryMapOutput)
}

type LabelCategoryOutput struct{ *pulumi.OutputState }

func (LabelCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelCategory)(nil)).Elem()
}

func (o LabelCategoryOutput) ToLabelCategoryOutput() LabelCategoryOutput {
	return o
}

func (o LabelCategoryOutput) ToLabelCategoryOutputWithContext(ctx context.Context) LabelCategoryOutput {
	return o
}

// Indicates whether it is allowed to select multiple classes in this category.
func (o LabelCategoryOutput) AllowMultiSelect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabelCategory) *bool { return v.AllowMultiSelect }).(pulumi.BoolPtrOutput)
}

// Dictionary of label classes in this category.
func (o LabelCategoryOutput) Classes() LabelClassMapOutput {
	return o.ApplyT(func(v LabelCategory) map[string]LabelClass { return v.Classes }).(LabelClassMapOutput)
}

// Display name of the label category.
func (o LabelCategoryOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelCategory) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

type LabelCategoryMapOutput struct{ *pulumi.OutputState }

func (LabelCategoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LabelCategory)(nil)).Elem()
}

func (o LabelCategoryMapOutput) ToLabelCategoryMapOutput() LabelCategoryMapOutput {
	return o
}

func (o LabelCategoryMapOutput) ToLabelCategoryMapOutputWithContext(ctx context.Context) LabelCategoryMapOutput {
	return o
}

func (o LabelCategoryMapOutput) MapIndex(k pulumi.StringInput) LabelCategoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LabelCategory {
		return vs[0].(map[string]LabelCategory)[vs[1].(string)]
	}).(LabelCategoryOutput)
}

type LabelCategoryResponse struct {
	// Indicates whether it is allowed to select multiple classes in this category.
	AllowMultiSelect *bool `pulumi:"allowMultiSelect"`
	// Dictionary of label classes in this category.
	Classes map[string]LabelClassResponse `pulumi:"classes"`
	// Display name of the label category.
	DisplayName *string `pulumi:"displayName"`
}

// LabelCategoryResponseInput is an input type that accepts LabelCategoryResponseArgs and LabelCategoryResponseOutput values.
// You can construct a concrete instance of `LabelCategoryResponseInput` via:
//
//          LabelCategoryResponseArgs{...}
type LabelCategoryResponseInput interface {
	pulumi.Input

	ToLabelCategoryResponseOutput() LabelCategoryResponseOutput
	ToLabelCategoryResponseOutputWithContext(context.Context) LabelCategoryResponseOutput
}

type LabelCategoryResponseArgs struct {
	// Indicates whether it is allowed to select multiple classes in this category.
	AllowMultiSelect pulumi.BoolPtrInput `pulumi:"allowMultiSelect"`
	// Dictionary of label classes in this category.
	Classes LabelClassResponseMapInput `pulumi:"classes"`
	// Display name of the label category.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
}

func (LabelCategoryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelCategoryResponse)(nil)).Elem()
}

func (i LabelCategoryResponseArgs) ToLabelCategoryResponseOutput() LabelCategoryResponseOutput {
	return i.ToLabelCategoryResponseOutputWithContext(context.Background())
}

func (i LabelCategoryResponseArgs) ToLabelCategoryResponseOutputWithContext(ctx context.Context) LabelCategoryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelCategoryResponseOutput)
}

// LabelCategoryResponseMapInput is an input type that accepts LabelCategoryResponseMap and LabelCategoryResponseMapOutput values.
// You can construct a concrete instance of `LabelCategoryResponseMapInput` via:
//
//          LabelCategoryResponseMap{ "key": LabelCategoryResponseArgs{...} }
type LabelCategoryResponseMapInput interface {
	pulumi.Input

	ToLabelCategoryResponseMapOutput() LabelCategoryResponseMapOutput
	ToLabelCategoryResponseMapOutputWithContext(context.Context) LabelCategoryResponseMapOutput
}

type LabelCategoryResponseMap map[string]LabelCategoryResponseInput

func (LabelCategoryResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LabelCategoryResponse)(nil)).Elem()
}

func (i LabelCategoryResponseMap) ToLabelCategoryResponseMapOutput() LabelCategoryResponseMapOutput {
	return i.ToLabelCategoryResponseMapOutputWithContext(context.Background())
}

func (i LabelCategoryResponseMap) ToLabelCategoryResponseMapOutputWithContext(ctx context.Context) LabelCategoryResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelCategoryResponseMapOutput)
}

type LabelCategoryResponseOutput struct{ *pulumi.OutputState }

func (LabelCategoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelCategoryResponse)(nil)).Elem()
}

func (o LabelCategoryResponseOutput) ToLabelCategoryResponseOutput() LabelCategoryResponseOutput {
	return o
}

func (o LabelCategoryResponseOutput) ToLabelCategoryResponseOutputWithContext(ctx context.Context) LabelCategoryResponseOutput {
	return o
}

// Indicates whether it is allowed to select multiple classes in this category.
func (o LabelCategoryResponseOutput) AllowMultiSelect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabelCategoryResponse) *bool { return v.AllowMultiSelect }).(pulumi.BoolPtrOutput)
}

// Dictionary of label classes in this category.
func (o LabelCategoryResponseOutput) Classes() LabelClassResponseMapOutput {
	return o.ApplyT(func(v LabelCategoryResponse) map[string]LabelClassResponse { return v.Classes }).(LabelClassResponseMapOutput)
}

// Display name of the label category.
func (o LabelCategoryResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelCategoryResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

type LabelCategoryResponseMapOutput struct{ *pulumi.OutputState }

func (LabelCategoryResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LabelCategoryResponse)(nil)).Elem()
}

func (o LabelCategoryResponseMapOutput) ToLabelCategoryResponseMapOutput() LabelCategoryResponseMapOutput {
	return o
}

func (o LabelCategoryResponseMapOutput) ToLabelCategoryResponseMapOutputWithContext(ctx context.Context) LabelCategoryResponseMapOutput {
	return o
}

func (o LabelCategoryResponseMapOutput) MapIndex(k pulumi.StringInput) LabelCategoryResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LabelCategoryResponse {
		return vs[0].(map[string]LabelCategoryResponse)[vs[1].(string)]
	}).(LabelCategoryResponseOutput)
}

type LabelClass struct {
	// Display name of the label class.
	DisplayName *string `pulumi:"displayName"`
	// Dictionary of subclasses of the label class.
	Subclasses map[string]LabelClass `pulumi:"subclasses"`
}

// LabelClassInput is an input type that accepts LabelClassArgs and LabelClassOutput values.
// You can construct a concrete instance of `LabelClassInput` via:
//
//          LabelClassArgs{...}
type LabelClassInput interface {
	pulumi.Input

	ToLabelClassOutput() LabelClassOutput
	ToLabelClassOutputWithContext(context.Context) LabelClassOutput
}

type LabelClassArgs struct {
	// Display name of the label class.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Dictionary of subclasses of the label class.
	Subclasses LabelClassMapInput `pulumi:"subclasses"`
}

func (LabelClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelClass)(nil)).Elem()
}

func (i LabelClassArgs) ToLabelClassOutput() LabelClassOutput {
	return i.ToLabelClassOutputWithContext(context.Background())
}

func (i LabelClassArgs) ToLabelClassOutputWithContext(ctx context.Context) LabelClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelClassOutput)
}

// LabelClassMapInput is an input type that accepts LabelClassMap and LabelClassMapOutput values.
// You can construct a concrete instance of `LabelClassMapInput` via:
//
//          LabelClassMap{ "key": LabelClassArgs{...} }
type LabelClassMapInput interface {
	pulumi.Input

	ToLabelClassMapOutput() LabelClassMapOutput
	ToLabelClassMapOutputWithContext(context.Context) LabelClassMapOutput
}

type LabelClassMap map[string]LabelClassInput

func (LabelClassMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LabelClass)(nil)).Elem()
}

func (i LabelClassMap) ToLabelClassMapOutput() LabelClassMapOutput {
	return i.ToLabelClassMapOutputWithContext(context.Background())
}

func (i LabelClassMap) ToLabelClassMapOutputWithContext(ctx context.Context) LabelClassMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelClassMapOutput)
}

type LabelClassOutput struct{ *pulumi.OutputState }

func (LabelClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelClass)(nil)).Elem()
}

func (o LabelClassOutput) ToLabelClassOutput() LabelClassOutput {
	return o
}

func (o LabelClassOutput) ToLabelClassOutputWithContext(ctx context.Context) LabelClassOutput {
	return o
}

// Display name of the label class.
func (o LabelClassOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelClass) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Dictionary of subclasses of the label class.
func (o LabelClassOutput) Subclasses() LabelClassMapOutput {
	return o.ApplyT(func(v LabelClass) map[string]LabelClass { return v.Subclasses }).(LabelClassMapOutput)
}

type LabelClassMapOutput struct{ *pulumi.OutputState }

func (LabelClassMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LabelClass)(nil)).Elem()
}

func (o LabelClassMapOutput) ToLabelClassMapOutput() LabelClassMapOutput {
	return o
}

func (o LabelClassMapOutput) ToLabelClassMapOutputWithContext(ctx context.Context) LabelClassMapOutput {
	return o
}

func (o LabelClassMapOutput) MapIndex(k pulumi.StringInput) LabelClassOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LabelClass {
		return vs[0].(map[string]LabelClass)[vs[1].(string)]
	}).(LabelClassOutput)
}

type LabelClassResponse struct {
	// Display name of the label class.
	DisplayName *string `pulumi:"displayName"`
	// Dictionary of subclasses of the label class.
	Subclasses map[string]LabelClassResponse `pulumi:"subclasses"`
}

// LabelClassResponseInput is an input type that accepts LabelClassResponseArgs and LabelClassResponseOutput values.
// You can construct a concrete instance of `LabelClassResponseInput` via:
//
//          LabelClassResponseArgs{...}
type LabelClassResponseInput interface {
	pulumi.Input

	ToLabelClassResponseOutput() LabelClassResponseOutput
	ToLabelClassResponseOutputWithContext(context.Context) LabelClassResponseOutput
}

type LabelClassResponseArgs struct {
	// Display name of the label class.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Dictionary of subclasses of the label class.
	Subclasses LabelClassResponseMapInput `pulumi:"subclasses"`
}

func (LabelClassResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelClassResponse)(nil)).Elem()
}

func (i LabelClassResponseArgs) ToLabelClassResponseOutput() LabelClassResponseOutput {
	return i.ToLabelClassResponseOutputWithContext(context.Background())
}

func (i LabelClassResponseArgs) ToLabelClassResponseOutputWithContext(ctx context.Context) LabelClassResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelClassResponseOutput)
}

// LabelClassResponseMapInput is an input type that accepts LabelClassResponseMap and LabelClassResponseMapOutput values.
// You can construct a concrete instance of `LabelClassResponseMapInput` via:
//
//          LabelClassResponseMap{ "key": LabelClassResponseArgs{...} }
type LabelClassResponseMapInput interface {
	pulumi.Input

	ToLabelClassResponseMapOutput() LabelClassResponseMapOutput
	ToLabelClassResponseMapOutputWithContext(context.Context) LabelClassResponseMapOutput
}

type LabelClassResponseMap map[string]LabelClassResponseInput

func (LabelClassResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LabelClassResponse)(nil)).Elem()
}

func (i LabelClassResponseMap) ToLabelClassResponseMapOutput() LabelClassResponseMapOutput {
	return i.ToLabelClassResponseMapOutputWithContext(context.Background())
}

func (i LabelClassResponseMap) ToLabelClassResponseMapOutputWithContext(ctx context.Context) LabelClassResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelClassResponseMapOutput)
}

type LabelClassResponseOutput struct{ *pulumi.OutputState }

func (LabelClassResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelClassResponse)(nil)).Elem()
}

func (o LabelClassResponseOutput) ToLabelClassResponseOutput() LabelClassResponseOutput {
	return o
}

func (o LabelClassResponseOutput) ToLabelClassResponseOutputWithContext(ctx context.Context) LabelClassResponseOutput {
	return o
}

// Display name of the label class.
func (o LabelClassResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelClassResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Dictionary of subclasses of the label class.
func (o LabelClassResponseOutput) Subclasses() LabelClassResponseMapOutput {
	return o.ApplyT(func(v LabelClassResponse) map[string]LabelClassResponse { return v.Subclasses }).(LabelClassResponseMapOutput)
}

type LabelClassResponseMapOutput struct{ *pulumi.OutputState }

func (LabelClassResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LabelClassResponse)(nil)).Elem()
}

func (o LabelClassResponseMapOutput) ToLabelClassResponseMapOutput() LabelClassResponseMapOutput {
	return o
}

func (o LabelClassResponseMapOutput) ToLabelClassResponseMapOutputWithContext(ctx context.Context) LabelClassResponseMapOutput {
	return o
}

func (o LabelClassResponseMapOutput) MapIndex(k pulumi.StringInput) LabelClassResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LabelClassResponse {
		return vs[0].(map[string]LabelClassResponse)[vs[1].(string)]
	}).(LabelClassResponseOutput)
}

type LabelingDatasetConfiguration struct {
	// Name of the data asset to perform labeling.
	AssetName string `pulumi:"assetName"`
	// AML dataset version.
	DatasetVersion string `pulumi:"datasetVersion"`
	// Indicates whether to enable incremental dataset refresh.
	EnableIncrementalDatasetRefresh *bool `pulumi:"enableIncrementalDatasetRefresh"`
}

// LabelingDatasetConfigurationInput is an input type that accepts LabelingDatasetConfigurationArgs and LabelingDatasetConfigurationOutput values.
// You can construct a concrete instance of `LabelingDatasetConfigurationInput` via:
//
//          LabelingDatasetConfigurationArgs{...}
type LabelingDatasetConfigurationInput interface {
	pulumi.Input

	ToLabelingDatasetConfigurationOutput() LabelingDatasetConfigurationOutput
	ToLabelingDatasetConfigurationOutputWithContext(context.Context) LabelingDatasetConfigurationOutput
}

type LabelingDatasetConfigurationArgs struct {
	// Name of the data asset to perform labeling.
	AssetName pulumi.StringInput `pulumi:"assetName"`
	// AML dataset version.
	DatasetVersion pulumi.StringInput `pulumi:"datasetVersion"`
	// Indicates whether to enable incremental dataset refresh.
	EnableIncrementalDatasetRefresh pulumi.BoolPtrInput `pulumi:"enableIncrementalDatasetRefresh"`
}

func (LabelingDatasetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingDatasetConfiguration)(nil)).Elem()
}

func (i LabelingDatasetConfigurationArgs) ToLabelingDatasetConfigurationOutput() LabelingDatasetConfigurationOutput {
	return i.ToLabelingDatasetConfigurationOutputWithContext(context.Background())
}

func (i LabelingDatasetConfigurationArgs) ToLabelingDatasetConfigurationOutputWithContext(ctx context.Context) LabelingDatasetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingDatasetConfigurationOutput)
}

func (i LabelingDatasetConfigurationArgs) ToLabelingDatasetConfigurationPtrOutput() LabelingDatasetConfigurationPtrOutput {
	return i.ToLabelingDatasetConfigurationPtrOutputWithContext(context.Background())
}

func (i LabelingDatasetConfigurationArgs) ToLabelingDatasetConfigurationPtrOutputWithContext(ctx context.Context) LabelingDatasetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingDatasetConfigurationOutput).ToLabelingDatasetConfigurationPtrOutputWithContext(ctx)
}

// LabelingDatasetConfigurationPtrInput is an input type that accepts LabelingDatasetConfigurationArgs, LabelingDatasetConfigurationPtr and LabelingDatasetConfigurationPtrOutput values.
// You can construct a concrete instance of `LabelingDatasetConfigurationPtrInput` via:
//
//          LabelingDatasetConfigurationArgs{...}
//
//  or:
//
//          nil
type LabelingDatasetConfigurationPtrInput interface {
	pulumi.Input

	ToLabelingDatasetConfigurationPtrOutput() LabelingDatasetConfigurationPtrOutput
	ToLabelingDatasetConfigurationPtrOutputWithContext(context.Context) LabelingDatasetConfigurationPtrOutput
}

type labelingDatasetConfigurationPtrType LabelingDatasetConfigurationArgs

func LabelingDatasetConfigurationPtr(v *LabelingDatasetConfigurationArgs) LabelingDatasetConfigurationPtrInput {
	return (*labelingDatasetConfigurationPtrType)(v)
}

func (*labelingDatasetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingDatasetConfiguration)(nil)).Elem()
}

func (i *labelingDatasetConfigurationPtrType) ToLabelingDatasetConfigurationPtrOutput() LabelingDatasetConfigurationPtrOutput {
	return i.ToLabelingDatasetConfigurationPtrOutputWithContext(context.Background())
}

func (i *labelingDatasetConfigurationPtrType) ToLabelingDatasetConfigurationPtrOutputWithContext(ctx context.Context) LabelingDatasetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingDatasetConfigurationPtrOutput)
}

type LabelingDatasetConfigurationOutput struct{ *pulumi.OutputState }

func (LabelingDatasetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingDatasetConfiguration)(nil)).Elem()
}

func (o LabelingDatasetConfigurationOutput) ToLabelingDatasetConfigurationOutput() LabelingDatasetConfigurationOutput {
	return o
}

func (o LabelingDatasetConfigurationOutput) ToLabelingDatasetConfigurationOutputWithContext(ctx context.Context) LabelingDatasetConfigurationOutput {
	return o
}

func (o LabelingDatasetConfigurationOutput) ToLabelingDatasetConfigurationPtrOutput() LabelingDatasetConfigurationPtrOutput {
	return o.ToLabelingDatasetConfigurationPtrOutputWithContext(context.Background())
}

func (o LabelingDatasetConfigurationOutput) ToLabelingDatasetConfigurationPtrOutputWithContext(ctx context.Context) LabelingDatasetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LabelingDatasetConfiguration) *LabelingDatasetConfiguration {
		return &v
	}).(LabelingDatasetConfigurationPtrOutput)
}

// Name of the data asset to perform labeling.
func (o LabelingDatasetConfigurationOutput) AssetName() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingDatasetConfiguration) string { return v.AssetName }).(pulumi.StringOutput)
}

// AML dataset version.
func (o LabelingDatasetConfigurationOutput) DatasetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingDatasetConfiguration) string { return v.DatasetVersion }).(pulumi.StringOutput)
}

// Indicates whether to enable incremental dataset refresh.
func (o LabelingDatasetConfigurationOutput) EnableIncrementalDatasetRefresh() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabelingDatasetConfiguration) *bool { return v.EnableIncrementalDatasetRefresh }).(pulumi.BoolPtrOutput)
}

type LabelingDatasetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (LabelingDatasetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingDatasetConfiguration)(nil)).Elem()
}

func (o LabelingDatasetConfigurationPtrOutput) ToLabelingDatasetConfigurationPtrOutput() LabelingDatasetConfigurationPtrOutput {
	return o
}

func (o LabelingDatasetConfigurationPtrOutput) ToLabelingDatasetConfigurationPtrOutputWithContext(ctx context.Context) LabelingDatasetConfigurationPtrOutput {
	return o
}

func (o LabelingDatasetConfigurationPtrOutput) Elem() LabelingDatasetConfigurationOutput {
	return o.ApplyT(func(v *LabelingDatasetConfiguration) LabelingDatasetConfiguration {
		if v != nil {
			return *v
		}
		var ret LabelingDatasetConfiguration
		return ret
	}).(LabelingDatasetConfigurationOutput)
}

// Name of the data asset to perform labeling.
func (o LabelingDatasetConfigurationPtrOutput) AssetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingDatasetConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.AssetName
	}).(pulumi.StringPtrOutput)
}

// AML dataset version.
func (o LabelingDatasetConfigurationPtrOutput) DatasetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingDatasetConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetVersion
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to enable incremental dataset refresh.
func (o LabelingDatasetConfigurationPtrOutput) EnableIncrementalDatasetRefresh() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LabelingDatasetConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIncrementalDatasetRefresh
	}).(pulumi.BoolPtrOutput)
}

type LabelingDatasetConfigurationResponse struct {
	// Name of the data asset to perform labeling.
	AssetName string `pulumi:"assetName"`
	// AML dataset version.
	DatasetVersion string `pulumi:"datasetVersion"`
	// Indicates whether to enable incremental dataset refresh.
	EnableIncrementalDatasetRefresh *bool `pulumi:"enableIncrementalDatasetRefresh"`
}

// LabelingDatasetConfigurationResponseInput is an input type that accepts LabelingDatasetConfigurationResponseArgs and LabelingDatasetConfigurationResponseOutput values.
// You can construct a concrete instance of `LabelingDatasetConfigurationResponseInput` via:
//
//          LabelingDatasetConfigurationResponseArgs{...}
type LabelingDatasetConfigurationResponseInput interface {
	pulumi.Input

	ToLabelingDatasetConfigurationResponseOutput() LabelingDatasetConfigurationResponseOutput
	ToLabelingDatasetConfigurationResponseOutputWithContext(context.Context) LabelingDatasetConfigurationResponseOutput
}

type LabelingDatasetConfigurationResponseArgs struct {
	// Name of the data asset to perform labeling.
	AssetName pulumi.StringInput `pulumi:"assetName"`
	// AML dataset version.
	DatasetVersion pulumi.StringInput `pulumi:"datasetVersion"`
	// Indicates whether to enable incremental dataset refresh.
	EnableIncrementalDatasetRefresh pulumi.BoolPtrInput `pulumi:"enableIncrementalDatasetRefresh"`
}

func (LabelingDatasetConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingDatasetConfigurationResponse)(nil)).Elem()
}

func (i LabelingDatasetConfigurationResponseArgs) ToLabelingDatasetConfigurationResponseOutput() LabelingDatasetConfigurationResponseOutput {
	return i.ToLabelingDatasetConfigurationResponseOutputWithContext(context.Background())
}

func (i LabelingDatasetConfigurationResponseArgs) ToLabelingDatasetConfigurationResponseOutputWithContext(ctx context.Context) LabelingDatasetConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingDatasetConfigurationResponseOutput)
}

func (i LabelingDatasetConfigurationResponseArgs) ToLabelingDatasetConfigurationResponsePtrOutput() LabelingDatasetConfigurationResponsePtrOutput {
	return i.ToLabelingDatasetConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i LabelingDatasetConfigurationResponseArgs) ToLabelingDatasetConfigurationResponsePtrOutputWithContext(ctx context.Context) LabelingDatasetConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingDatasetConfigurationResponseOutput).ToLabelingDatasetConfigurationResponsePtrOutputWithContext(ctx)
}

// LabelingDatasetConfigurationResponsePtrInput is an input type that accepts LabelingDatasetConfigurationResponseArgs, LabelingDatasetConfigurationResponsePtr and LabelingDatasetConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `LabelingDatasetConfigurationResponsePtrInput` via:
//
//          LabelingDatasetConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type LabelingDatasetConfigurationResponsePtrInput interface {
	pulumi.Input

	ToLabelingDatasetConfigurationResponsePtrOutput() LabelingDatasetConfigurationResponsePtrOutput
	ToLabelingDatasetConfigurationResponsePtrOutputWithContext(context.Context) LabelingDatasetConfigurationResponsePtrOutput
}

type labelingDatasetConfigurationResponsePtrType LabelingDatasetConfigurationResponseArgs

func LabelingDatasetConfigurationResponsePtr(v *LabelingDatasetConfigurationResponseArgs) LabelingDatasetConfigurationResponsePtrInput {
	return (*labelingDatasetConfigurationResponsePtrType)(v)
}

func (*labelingDatasetConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingDatasetConfigurationResponse)(nil)).Elem()
}

func (i *labelingDatasetConfigurationResponsePtrType) ToLabelingDatasetConfigurationResponsePtrOutput() LabelingDatasetConfigurationResponsePtrOutput {
	return i.ToLabelingDatasetConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *labelingDatasetConfigurationResponsePtrType) ToLabelingDatasetConfigurationResponsePtrOutputWithContext(ctx context.Context) LabelingDatasetConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingDatasetConfigurationResponsePtrOutput)
}

type LabelingDatasetConfigurationResponseOutput struct{ *pulumi.OutputState }

func (LabelingDatasetConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingDatasetConfigurationResponse)(nil)).Elem()
}

func (o LabelingDatasetConfigurationResponseOutput) ToLabelingDatasetConfigurationResponseOutput() LabelingDatasetConfigurationResponseOutput {
	return o
}

func (o LabelingDatasetConfigurationResponseOutput) ToLabelingDatasetConfigurationResponseOutputWithContext(ctx context.Context) LabelingDatasetConfigurationResponseOutput {
	return o
}

func (o LabelingDatasetConfigurationResponseOutput) ToLabelingDatasetConfigurationResponsePtrOutput() LabelingDatasetConfigurationResponsePtrOutput {
	return o.ToLabelingDatasetConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o LabelingDatasetConfigurationResponseOutput) ToLabelingDatasetConfigurationResponsePtrOutputWithContext(ctx context.Context) LabelingDatasetConfigurationResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LabelingDatasetConfigurationResponse) *LabelingDatasetConfigurationResponse {
		return &v
	}).(LabelingDatasetConfigurationResponsePtrOutput)
}

// Name of the data asset to perform labeling.
func (o LabelingDatasetConfigurationResponseOutput) AssetName() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingDatasetConfigurationResponse) string { return v.AssetName }).(pulumi.StringOutput)
}

// AML dataset version.
func (o LabelingDatasetConfigurationResponseOutput) DatasetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingDatasetConfigurationResponse) string { return v.DatasetVersion }).(pulumi.StringOutput)
}

// Indicates whether to enable incremental dataset refresh.
func (o LabelingDatasetConfigurationResponseOutput) EnableIncrementalDatasetRefresh() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabelingDatasetConfigurationResponse) *bool { return v.EnableIncrementalDatasetRefresh }).(pulumi.BoolPtrOutput)
}

type LabelingDatasetConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (LabelingDatasetConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingDatasetConfigurationResponse)(nil)).Elem()
}

func (o LabelingDatasetConfigurationResponsePtrOutput) ToLabelingDatasetConfigurationResponsePtrOutput() LabelingDatasetConfigurationResponsePtrOutput {
	return o
}

func (o LabelingDatasetConfigurationResponsePtrOutput) ToLabelingDatasetConfigurationResponsePtrOutputWithContext(ctx context.Context) LabelingDatasetConfigurationResponsePtrOutput {
	return o
}

func (o LabelingDatasetConfigurationResponsePtrOutput) Elem() LabelingDatasetConfigurationResponseOutput {
	return o.ApplyT(func(v *LabelingDatasetConfigurationResponse) LabelingDatasetConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret LabelingDatasetConfigurationResponse
		return ret
	}).(LabelingDatasetConfigurationResponseOutput)
}

// Name of the data asset to perform labeling.
func (o LabelingDatasetConfigurationResponsePtrOutput) AssetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingDatasetConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AssetName
	}).(pulumi.StringPtrOutput)
}

// AML dataset version.
func (o LabelingDatasetConfigurationResponsePtrOutput) DatasetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingDatasetConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetVersion
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to enable incremental dataset refresh.
func (o LabelingDatasetConfigurationResponsePtrOutput) EnableIncrementalDatasetRefresh() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LabelingDatasetConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIncrementalDatasetRefresh
	}).(pulumi.BoolPtrOutput)
}

type LabelingJobImageProperties struct {
	// Annotation type of image labeling tasks.
	AnnotationType *string `pulumi:"annotationType"`
	// Media type of data asset.
	MediaType string `pulumi:"mediaType"`
}

// LabelingJobImagePropertiesInput is an input type that accepts LabelingJobImagePropertiesArgs and LabelingJobImagePropertiesOutput values.
// You can construct a concrete instance of `LabelingJobImagePropertiesInput` via:
//
//          LabelingJobImagePropertiesArgs{...}
type LabelingJobImagePropertiesInput interface {
	pulumi.Input

	ToLabelingJobImagePropertiesOutput() LabelingJobImagePropertiesOutput
	ToLabelingJobImagePropertiesOutputWithContext(context.Context) LabelingJobImagePropertiesOutput
}

type LabelingJobImagePropertiesArgs struct {
	// Annotation type of image labeling tasks.
	AnnotationType pulumi.StringPtrInput `pulumi:"annotationType"`
	// Media type of data asset.
	MediaType pulumi.StringInput `pulumi:"mediaType"`
}

func (LabelingJobImagePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobImageProperties)(nil)).Elem()
}

func (i LabelingJobImagePropertiesArgs) ToLabelingJobImagePropertiesOutput() LabelingJobImagePropertiesOutput {
	return i.ToLabelingJobImagePropertiesOutputWithContext(context.Background())
}

func (i LabelingJobImagePropertiesArgs) ToLabelingJobImagePropertiesOutputWithContext(ctx context.Context) LabelingJobImagePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobImagePropertiesOutput)
}

func (i LabelingJobImagePropertiesArgs) ToLabelingJobImagePropertiesPtrOutput() LabelingJobImagePropertiesPtrOutput {
	return i.ToLabelingJobImagePropertiesPtrOutputWithContext(context.Background())
}

func (i LabelingJobImagePropertiesArgs) ToLabelingJobImagePropertiesPtrOutputWithContext(ctx context.Context) LabelingJobImagePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobImagePropertiesOutput).ToLabelingJobImagePropertiesPtrOutputWithContext(ctx)
}

// LabelingJobImagePropertiesPtrInput is an input type that accepts LabelingJobImagePropertiesArgs, LabelingJobImagePropertiesPtr and LabelingJobImagePropertiesPtrOutput values.
// You can construct a concrete instance of `LabelingJobImagePropertiesPtrInput` via:
//
//          LabelingJobImagePropertiesArgs{...}
//
//  or:
//
//          nil
type LabelingJobImagePropertiesPtrInput interface {
	pulumi.Input

	ToLabelingJobImagePropertiesPtrOutput() LabelingJobImagePropertiesPtrOutput
	ToLabelingJobImagePropertiesPtrOutputWithContext(context.Context) LabelingJobImagePropertiesPtrOutput
}

type labelingJobImagePropertiesPtrType LabelingJobImagePropertiesArgs

func LabelingJobImagePropertiesPtr(v *LabelingJobImagePropertiesArgs) LabelingJobImagePropertiesPtrInput {
	return (*labelingJobImagePropertiesPtrType)(v)
}

func (*labelingJobImagePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobImageProperties)(nil)).Elem()
}

func (i *labelingJobImagePropertiesPtrType) ToLabelingJobImagePropertiesPtrOutput() LabelingJobImagePropertiesPtrOutput {
	return i.ToLabelingJobImagePropertiesPtrOutputWithContext(context.Background())
}

func (i *labelingJobImagePropertiesPtrType) ToLabelingJobImagePropertiesPtrOutputWithContext(ctx context.Context) LabelingJobImagePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobImagePropertiesPtrOutput)
}

type LabelingJobImagePropertiesOutput struct{ *pulumi.OutputState }

func (LabelingJobImagePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobImageProperties)(nil)).Elem()
}

func (o LabelingJobImagePropertiesOutput) ToLabelingJobImagePropertiesOutput() LabelingJobImagePropertiesOutput {
	return o
}

func (o LabelingJobImagePropertiesOutput) ToLabelingJobImagePropertiesOutputWithContext(ctx context.Context) LabelingJobImagePropertiesOutput {
	return o
}

func (o LabelingJobImagePropertiesOutput) ToLabelingJobImagePropertiesPtrOutput() LabelingJobImagePropertiesPtrOutput {
	return o.ToLabelingJobImagePropertiesPtrOutputWithContext(context.Background())
}

func (o LabelingJobImagePropertiesOutput) ToLabelingJobImagePropertiesPtrOutputWithContext(ctx context.Context) LabelingJobImagePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LabelingJobImageProperties) *LabelingJobImageProperties {
		return &v
	}).(LabelingJobImagePropertiesPtrOutput)
}

// Annotation type of image labeling tasks.
func (o LabelingJobImagePropertiesOutput) AnnotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelingJobImageProperties) *string { return v.AnnotationType }).(pulumi.StringPtrOutput)
}

// Media type of data asset.
func (o LabelingJobImagePropertiesOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingJobImageProperties) string { return v.MediaType }).(pulumi.StringOutput)
}

type LabelingJobImagePropertiesPtrOutput struct{ *pulumi.OutputState }

func (LabelingJobImagePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobImageProperties)(nil)).Elem()
}

func (o LabelingJobImagePropertiesPtrOutput) ToLabelingJobImagePropertiesPtrOutput() LabelingJobImagePropertiesPtrOutput {
	return o
}

func (o LabelingJobImagePropertiesPtrOutput) ToLabelingJobImagePropertiesPtrOutputWithContext(ctx context.Context) LabelingJobImagePropertiesPtrOutput {
	return o
}

func (o LabelingJobImagePropertiesPtrOutput) Elem() LabelingJobImagePropertiesOutput {
	return o.ApplyT(func(v *LabelingJobImageProperties) LabelingJobImageProperties {
		if v != nil {
			return *v
		}
		var ret LabelingJobImageProperties
		return ret
	}).(LabelingJobImagePropertiesOutput)
}

// Annotation type of image labeling tasks.
func (o LabelingJobImagePropertiesPtrOutput) AnnotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobImageProperties) *string {
		if v == nil {
			return nil
		}
		return v.AnnotationType
	}).(pulumi.StringPtrOutput)
}

// Media type of data asset.
func (o LabelingJobImagePropertiesPtrOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobImageProperties) *string {
		if v == nil {
			return nil
		}
		return &v.MediaType
	}).(pulumi.StringPtrOutput)
}

type LabelingJobImagePropertiesResponse struct {
	// Annotation type of image labeling tasks.
	AnnotationType *string `pulumi:"annotationType"`
	// Media type of data asset.
	MediaType string `pulumi:"mediaType"`
}

// LabelingJobImagePropertiesResponseInput is an input type that accepts LabelingJobImagePropertiesResponseArgs and LabelingJobImagePropertiesResponseOutput values.
// You can construct a concrete instance of `LabelingJobImagePropertiesResponseInput` via:
//
//          LabelingJobImagePropertiesResponseArgs{...}
type LabelingJobImagePropertiesResponseInput interface {
	pulumi.Input

	ToLabelingJobImagePropertiesResponseOutput() LabelingJobImagePropertiesResponseOutput
	ToLabelingJobImagePropertiesResponseOutputWithContext(context.Context) LabelingJobImagePropertiesResponseOutput
}

type LabelingJobImagePropertiesResponseArgs struct {
	// Annotation type of image labeling tasks.
	AnnotationType pulumi.StringPtrInput `pulumi:"annotationType"`
	// Media type of data asset.
	MediaType pulumi.StringInput `pulumi:"mediaType"`
}

func (LabelingJobImagePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobImagePropertiesResponse)(nil)).Elem()
}

func (i LabelingJobImagePropertiesResponseArgs) ToLabelingJobImagePropertiesResponseOutput() LabelingJobImagePropertiesResponseOutput {
	return i.ToLabelingJobImagePropertiesResponseOutputWithContext(context.Background())
}

func (i LabelingJobImagePropertiesResponseArgs) ToLabelingJobImagePropertiesResponseOutputWithContext(ctx context.Context) LabelingJobImagePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobImagePropertiesResponseOutput)
}

func (i LabelingJobImagePropertiesResponseArgs) ToLabelingJobImagePropertiesResponsePtrOutput() LabelingJobImagePropertiesResponsePtrOutput {
	return i.ToLabelingJobImagePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i LabelingJobImagePropertiesResponseArgs) ToLabelingJobImagePropertiesResponsePtrOutputWithContext(ctx context.Context) LabelingJobImagePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobImagePropertiesResponseOutput).ToLabelingJobImagePropertiesResponsePtrOutputWithContext(ctx)
}

// LabelingJobImagePropertiesResponsePtrInput is an input type that accepts LabelingJobImagePropertiesResponseArgs, LabelingJobImagePropertiesResponsePtr and LabelingJobImagePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `LabelingJobImagePropertiesResponsePtrInput` via:
//
//          LabelingJobImagePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type LabelingJobImagePropertiesResponsePtrInput interface {
	pulumi.Input

	ToLabelingJobImagePropertiesResponsePtrOutput() LabelingJobImagePropertiesResponsePtrOutput
	ToLabelingJobImagePropertiesResponsePtrOutputWithContext(context.Context) LabelingJobImagePropertiesResponsePtrOutput
}

type labelingJobImagePropertiesResponsePtrType LabelingJobImagePropertiesResponseArgs

func LabelingJobImagePropertiesResponsePtr(v *LabelingJobImagePropertiesResponseArgs) LabelingJobImagePropertiesResponsePtrInput {
	return (*labelingJobImagePropertiesResponsePtrType)(v)
}

func (*labelingJobImagePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobImagePropertiesResponse)(nil)).Elem()
}

func (i *labelingJobImagePropertiesResponsePtrType) ToLabelingJobImagePropertiesResponsePtrOutput() LabelingJobImagePropertiesResponsePtrOutput {
	return i.ToLabelingJobImagePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *labelingJobImagePropertiesResponsePtrType) ToLabelingJobImagePropertiesResponsePtrOutputWithContext(ctx context.Context) LabelingJobImagePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobImagePropertiesResponsePtrOutput)
}

type LabelingJobImagePropertiesResponseOutput struct{ *pulumi.OutputState }

func (LabelingJobImagePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobImagePropertiesResponse)(nil)).Elem()
}

func (o LabelingJobImagePropertiesResponseOutput) ToLabelingJobImagePropertiesResponseOutput() LabelingJobImagePropertiesResponseOutput {
	return o
}

func (o LabelingJobImagePropertiesResponseOutput) ToLabelingJobImagePropertiesResponseOutputWithContext(ctx context.Context) LabelingJobImagePropertiesResponseOutput {
	return o
}

func (o LabelingJobImagePropertiesResponseOutput) ToLabelingJobImagePropertiesResponsePtrOutput() LabelingJobImagePropertiesResponsePtrOutput {
	return o.ToLabelingJobImagePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o LabelingJobImagePropertiesResponseOutput) ToLabelingJobImagePropertiesResponsePtrOutputWithContext(ctx context.Context) LabelingJobImagePropertiesResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LabelingJobImagePropertiesResponse) *LabelingJobImagePropertiesResponse {
		return &v
	}).(LabelingJobImagePropertiesResponsePtrOutput)
}

// Annotation type of image labeling tasks.
func (o LabelingJobImagePropertiesResponseOutput) AnnotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelingJobImagePropertiesResponse) *string { return v.AnnotationType }).(pulumi.StringPtrOutput)
}

// Media type of data asset.
func (o LabelingJobImagePropertiesResponseOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingJobImagePropertiesResponse) string { return v.MediaType }).(pulumi.StringOutput)
}

type LabelingJobImagePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (LabelingJobImagePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobImagePropertiesResponse)(nil)).Elem()
}

func (o LabelingJobImagePropertiesResponsePtrOutput) ToLabelingJobImagePropertiesResponsePtrOutput() LabelingJobImagePropertiesResponsePtrOutput {
	return o
}

func (o LabelingJobImagePropertiesResponsePtrOutput) ToLabelingJobImagePropertiesResponsePtrOutputWithContext(ctx context.Context) LabelingJobImagePropertiesResponsePtrOutput {
	return o
}

func (o LabelingJobImagePropertiesResponsePtrOutput) Elem() LabelingJobImagePropertiesResponseOutput {
	return o.ApplyT(func(v *LabelingJobImagePropertiesResponse) LabelingJobImagePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret LabelingJobImagePropertiesResponse
		return ret
	}).(LabelingJobImagePropertiesResponseOutput)
}

// Annotation type of image labeling tasks.
func (o LabelingJobImagePropertiesResponsePtrOutput) AnnotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobImagePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AnnotationType
	}).(pulumi.StringPtrOutput)
}

// Media type of data asset.
func (o LabelingJobImagePropertiesResponsePtrOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobImagePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MediaType
	}).(pulumi.StringPtrOutput)
}

type LabelingJobInstructions struct {
	// The link to a page with detailed labeling instructions for labelers.
	Uri *string `pulumi:"uri"`
}

// LabelingJobInstructionsInput is an input type that accepts LabelingJobInstructionsArgs and LabelingJobInstructionsOutput values.
// You can construct a concrete instance of `LabelingJobInstructionsInput` via:
//
//          LabelingJobInstructionsArgs{...}
type LabelingJobInstructionsInput interface {
	pulumi.Input

	ToLabelingJobInstructionsOutput() LabelingJobInstructionsOutput
	ToLabelingJobInstructionsOutputWithContext(context.Context) LabelingJobInstructionsOutput
}

type LabelingJobInstructionsArgs struct {
	// The link to a page with detailed labeling instructions for labelers.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (LabelingJobInstructionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobInstructions)(nil)).Elem()
}

func (i LabelingJobInstructionsArgs) ToLabelingJobInstructionsOutput() LabelingJobInstructionsOutput {
	return i.ToLabelingJobInstructionsOutputWithContext(context.Background())
}

func (i LabelingJobInstructionsArgs) ToLabelingJobInstructionsOutputWithContext(ctx context.Context) LabelingJobInstructionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobInstructionsOutput)
}

func (i LabelingJobInstructionsArgs) ToLabelingJobInstructionsPtrOutput() LabelingJobInstructionsPtrOutput {
	return i.ToLabelingJobInstructionsPtrOutputWithContext(context.Background())
}

func (i LabelingJobInstructionsArgs) ToLabelingJobInstructionsPtrOutputWithContext(ctx context.Context) LabelingJobInstructionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobInstructionsOutput).ToLabelingJobInstructionsPtrOutputWithContext(ctx)
}

// LabelingJobInstructionsPtrInput is an input type that accepts LabelingJobInstructionsArgs, LabelingJobInstructionsPtr and LabelingJobInstructionsPtrOutput values.
// You can construct a concrete instance of `LabelingJobInstructionsPtrInput` via:
//
//          LabelingJobInstructionsArgs{...}
//
//  or:
//
//          nil
type LabelingJobInstructionsPtrInput interface {
	pulumi.Input

	ToLabelingJobInstructionsPtrOutput() LabelingJobInstructionsPtrOutput
	ToLabelingJobInstructionsPtrOutputWithContext(context.Context) LabelingJobInstructionsPtrOutput
}

type labelingJobInstructionsPtrType LabelingJobInstructionsArgs

func LabelingJobInstructionsPtr(v *LabelingJobInstructionsArgs) LabelingJobInstructionsPtrInput {
	return (*labelingJobInstructionsPtrType)(v)
}

func (*labelingJobInstructionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobInstructions)(nil)).Elem()
}

func (i *labelingJobInstructionsPtrType) ToLabelingJobInstructionsPtrOutput() LabelingJobInstructionsPtrOutput {
	return i.ToLabelingJobInstructionsPtrOutputWithContext(context.Background())
}

func (i *labelingJobInstructionsPtrType) ToLabelingJobInstructionsPtrOutputWithContext(ctx context.Context) LabelingJobInstructionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobInstructionsPtrOutput)
}

type LabelingJobInstructionsOutput struct{ *pulumi.OutputState }

func (LabelingJobInstructionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobInstructions)(nil)).Elem()
}

func (o LabelingJobInstructionsOutput) ToLabelingJobInstructionsOutput() LabelingJobInstructionsOutput {
	return o
}

func (o LabelingJobInstructionsOutput) ToLabelingJobInstructionsOutputWithContext(ctx context.Context) LabelingJobInstructionsOutput {
	return o
}

func (o LabelingJobInstructionsOutput) ToLabelingJobInstructionsPtrOutput() LabelingJobInstructionsPtrOutput {
	return o.ToLabelingJobInstructionsPtrOutputWithContext(context.Background())
}

func (o LabelingJobInstructionsOutput) ToLabelingJobInstructionsPtrOutputWithContext(ctx context.Context) LabelingJobInstructionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LabelingJobInstructions) *LabelingJobInstructions {
		return &v
	}).(LabelingJobInstructionsPtrOutput)
}

// The link to a page with detailed labeling instructions for labelers.
func (o LabelingJobInstructionsOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelingJobInstructions) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type LabelingJobInstructionsPtrOutput struct{ *pulumi.OutputState }

func (LabelingJobInstructionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobInstructions)(nil)).Elem()
}

func (o LabelingJobInstructionsPtrOutput) ToLabelingJobInstructionsPtrOutput() LabelingJobInstructionsPtrOutput {
	return o
}

func (o LabelingJobInstructionsPtrOutput) ToLabelingJobInstructionsPtrOutputWithContext(ctx context.Context) LabelingJobInstructionsPtrOutput {
	return o
}

func (o LabelingJobInstructionsPtrOutput) Elem() LabelingJobInstructionsOutput {
	return o.ApplyT(func(v *LabelingJobInstructions) LabelingJobInstructions {
		if v != nil {
			return *v
		}
		var ret LabelingJobInstructions
		return ret
	}).(LabelingJobInstructionsOutput)
}

// The link to a page with detailed labeling instructions for labelers.
func (o LabelingJobInstructionsPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobInstructions) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

type LabelingJobInstructionsResponse struct {
	// The link to a page with detailed labeling instructions for labelers.
	Uri *string `pulumi:"uri"`
}

// LabelingJobInstructionsResponseInput is an input type that accepts LabelingJobInstructionsResponseArgs and LabelingJobInstructionsResponseOutput values.
// You can construct a concrete instance of `LabelingJobInstructionsResponseInput` via:
//
//          LabelingJobInstructionsResponseArgs{...}
type LabelingJobInstructionsResponseInput interface {
	pulumi.Input

	ToLabelingJobInstructionsResponseOutput() LabelingJobInstructionsResponseOutput
	ToLabelingJobInstructionsResponseOutputWithContext(context.Context) LabelingJobInstructionsResponseOutput
}

type LabelingJobInstructionsResponseArgs struct {
	// The link to a page with detailed labeling instructions for labelers.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (LabelingJobInstructionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobInstructionsResponse)(nil)).Elem()
}

func (i LabelingJobInstructionsResponseArgs) ToLabelingJobInstructionsResponseOutput() LabelingJobInstructionsResponseOutput {
	return i.ToLabelingJobInstructionsResponseOutputWithContext(context.Background())
}

func (i LabelingJobInstructionsResponseArgs) ToLabelingJobInstructionsResponseOutputWithContext(ctx context.Context) LabelingJobInstructionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobInstructionsResponseOutput)
}

func (i LabelingJobInstructionsResponseArgs) ToLabelingJobInstructionsResponsePtrOutput() LabelingJobInstructionsResponsePtrOutput {
	return i.ToLabelingJobInstructionsResponsePtrOutputWithContext(context.Background())
}

func (i LabelingJobInstructionsResponseArgs) ToLabelingJobInstructionsResponsePtrOutputWithContext(ctx context.Context) LabelingJobInstructionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobInstructionsResponseOutput).ToLabelingJobInstructionsResponsePtrOutputWithContext(ctx)
}

// LabelingJobInstructionsResponsePtrInput is an input type that accepts LabelingJobInstructionsResponseArgs, LabelingJobInstructionsResponsePtr and LabelingJobInstructionsResponsePtrOutput values.
// You can construct a concrete instance of `LabelingJobInstructionsResponsePtrInput` via:
//
//          LabelingJobInstructionsResponseArgs{...}
//
//  or:
//
//          nil
type LabelingJobInstructionsResponsePtrInput interface {
	pulumi.Input

	ToLabelingJobInstructionsResponsePtrOutput() LabelingJobInstructionsResponsePtrOutput
	ToLabelingJobInstructionsResponsePtrOutputWithContext(context.Context) LabelingJobInstructionsResponsePtrOutput
}

type labelingJobInstructionsResponsePtrType LabelingJobInstructionsResponseArgs

func LabelingJobInstructionsResponsePtr(v *LabelingJobInstructionsResponseArgs) LabelingJobInstructionsResponsePtrInput {
	return (*labelingJobInstructionsResponsePtrType)(v)
}

func (*labelingJobInstructionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobInstructionsResponse)(nil)).Elem()
}

func (i *labelingJobInstructionsResponsePtrType) ToLabelingJobInstructionsResponsePtrOutput() LabelingJobInstructionsResponsePtrOutput {
	return i.ToLabelingJobInstructionsResponsePtrOutputWithContext(context.Background())
}

func (i *labelingJobInstructionsResponsePtrType) ToLabelingJobInstructionsResponsePtrOutputWithContext(ctx context.Context) LabelingJobInstructionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobInstructionsResponsePtrOutput)
}

type LabelingJobInstructionsResponseOutput struct{ *pulumi.OutputState }

func (LabelingJobInstructionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobInstructionsResponse)(nil)).Elem()
}

func (o LabelingJobInstructionsResponseOutput) ToLabelingJobInstructionsResponseOutput() LabelingJobInstructionsResponseOutput {
	return o
}

func (o LabelingJobInstructionsResponseOutput) ToLabelingJobInstructionsResponseOutputWithContext(ctx context.Context) LabelingJobInstructionsResponseOutput {
	return o
}

func (o LabelingJobInstructionsResponseOutput) ToLabelingJobInstructionsResponsePtrOutput() LabelingJobInstructionsResponsePtrOutput {
	return o.ToLabelingJobInstructionsResponsePtrOutputWithContext(context.Background())
}

func (o LabelingJobInstructionsResponseOutput) ToLabelingJobInstructionsResponsePtrOutputWithContext(ctx context.Context) LabelingJobInstructionsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LabelingJobInstructionsResponse) *LabelingJobInstructionsResponse {
		return &v
	}).(LabelingJobInstructionsResponsePtrOutput)
}

// The link to a page with detailed labeling instructions for labelers.
func (o LabelingJobInstructionsResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelingJobInstructionsResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type LabelingJobInstructionsResponsePtrOutput struct{ *pulumi.OutputState }

func (LabelingJobInstructionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobInstructionsResponse)(nil)).Elem()
}

func (o LabelingJobInstructionsResponsePtrOutput) ToLabelingJobInstructionsResponsePtrOutput() LabelingJobInstructionsResponsePtrOutput {
	return o
}

func (o LabelingJobInstructionsResponsePtrOutput) ToLabelingJobInstructionsResponsePtrOutputWithContext(ctx context.Context) LabelingJobInstructionsResponsePtrOutput {
	return o
}

func (o LabelingJobInstructionsResponsePtrOutput) Elem() LabelingJobInstructionsResponseOutput {
	return o.ApplyT(func(v *LabelingJobInstructionsResponse) LabelingJobInstructionsResponse {
		if v != nil {
			return *v
		}
		var ret LabelingJobInstructionsResponse
		return ret
	}).(LabelingJobInstructionsResponseOutput)
}

// The link to a page with detailed labeling instructions for labelers.
func (o LabelingJobInstructionsResponsePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobInstructionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

type LabelingJobProperties struct {
	// Dataset configuration for the job.
	DatasetConfiguration LabelingDatasetConfiguration `pulumi:"datasetConfiguration"`
	// Instructions for the job.
	JobInstructions LabelingJobInstructions `pulumi:"jobInstructions"`
	// Label categories of the job.
	LabelCategories map[string]LabelCategory `pulumi:"labelCategories"`
	// Media specific properties in a labeling job.
	LabelingJobMediaProperties LabelingJobImageProperties `pulumi:"labelingJobMediaProperties"`
	// Machine learning assisted configuration for the job.
	MlAssistConfiguration *MLAssistConfiguration `pulumi:"mlAssistConfiguration"`
	// The job property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// The job tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// LabelingJobPropertiesInput is an input type that accepts LabelingJobPropertiesArgs and LabelingJobPropertiesOutput values.
// You can construct a concrete instance of `LabelingJobPropertiesInput` via:
//
//          LabelingJobPropertiesArgs{...}
type LabelingJobPropertiesInput interface {
	pulumi.Input

	ToLabelingJobPropertiesOutput() LabelingJobPropertiesOutput
	ToLabelingJobPropertiesOutputWithContext(context.Context) LabelingJobPropertiesOutput
}

type LabelingJobPropertiesArgs struct {
	// Dataset configuration for the job.
	DatasetConfiguration LabelingDatasetConfigurationInput `pulumi:"datasetConfiguration"`
	// Instructions for the job.
	JobInstructions LabelingJobInstructionsInput `pulumi:"jobInstructions"`
	// Label categories of the job.
	LabelCategories LabelCategoryMapInput `pulumi:"labelCategories"`
	// Media specific properties in a labeling job.
	LabelingJobMediaProperties LabelingJobImagePropertiesInput `pulumi:"labelingJobMediaProperties"`
	// Machine learning assisted configuration for the job.
	MlAssistConfiguration MLAssistConfigurationPtrInput `pulumi:"mlAssistConfiguration"`
	// The job property dictionary. Properties can be added, but not removed or altered.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The job tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LabelingJobPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobProperties)(nil)).Elem()
}

func (i LabelingJobPropertiesArgs) ToLabelingJobPropertiesOutput() LabelingJobPropertiesOutput {
	return i.ToLabelingJobPropertiesOutputWithContext(context.Background())
}

func (i LabelingJobPropertiesArgs) ToLabelingJobPropertiesOutputWithContext(ctx context.Context) LabelingJobPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobPropertiesOutput)
}

func (i LabelingJobPropertiesArgs) ToLabelingJobPropertiesPtrOutput() LabelingJobPropertiesPtrOutput {
	return i.ToLabelingJobPropertiesPtrOutputWithContext(context.Background())
}

func (i LabelingJobPropertiesArgs) ToLabelingJobPropertiesPtrOutputWithContext(ctx context.Context) LabelingJobPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobPropertiesOutput).ToLabelingJobPropertiesPtrOutputWithContext(ctx)
}

// LabelingJobPropertiesPtrInput is an input type that accepts LabelingJobPropertiesArgs, LabelingJobPropertiesPtr and LabelingJobPropertiesPtrOutput values.
// You can construct a concrete instance of `LabelingJobPropertiesPtrInput` via:
//
//          LabelingJobPropertiesArgs{...}
//
//  or:
//
//          nil
type LabelingJobPropertiesPtrInput interface {
	pulumi.Input

	ToLabelingJobPropertiesPtrOutput() LabelingJobPropertiesPtrOutput
	ToLabelingJobPropertiesPtrOutputWithContext(context.Context) LabelingJobPropertiesPtrOutput
}

type labelingJobPropertiesPtrType LabelingJobPropertiesArgs

func LabelingJobPropertiesPtr(v *LabelingJobPropertiesArgs) LabelingJobPropertiesPtrInput {
	return (*labelingJobPropertiesPtrType)(v)
}

func (*labelingJobPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobProperties)(nil)).Elem()
}

func (i *labelingJobPropertiesPtrType) ToLabelingJobPropertiesPtrOutput() LabelingJobPropertiesPtrOutput {
	return i.ToLabelingJobPropertiesPtrOutputWithContext(context.Background())
}

func (i *labelingJobPropertiesPtrType) ToLabelingJobPropertiesPtrOutputWithContext(ctx context.Context) LabelingJobPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobPropertiesPtrOutput)
}

type LabelingJobPropertiesOutput struct{ *pulumi.OutputState }

func (LabelingJobPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobProperties)(nil)).Elem()
}

func (o LabelingJobPropertiesOutput) ToLabelingJobPropertiesOutput() LabelingJobPropertiesOutput {
	return o
}

func (o LabelingJobPropertiesOutput) ToLabelingJobPropertiesOutputWithContext(ctx context.Context) LabelingJobPropertiesOutput {
	return o
}

func (o LabelingJobPropertiesOutput) ToLabelingJobPropertiesPtrOutput() LabelingJobPropertiesPtrOutput {
	return o.ToLabelingJobPropertiesPtrOutputWithContext(context.Background())
}

func (o LabelingJobPropertiesOutput) ToLabelingJobPropertiesPtrOutputWithContext(ctx context.Context) LabelingJobPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LabelingJobProperties) *LabelingJobProperties {
		return &v
	}).(LabelingJobPropertiesPtrOutput)
}

// Dataset configuration for the job.
func (o LabelingJobPropertiesOutput) DatasetConfiguration() LabelingDatasetConfigurationOutput {
	return o.ApplyT(func(v LabelingJobProperties) LabelingDatasetConfiguration { return v.DatasetConfiguration }).(LabelingDatasetConfigurationOutput)
}

// Instructions for the job.
func (o LabelingJobPropertiesOutput) JobInstructions() LabelingJobInstructionsOutput {
	return o.ApplyT(func(v LabelingJobProperties) LabelingJobInstructions { return v.JobInstructions }).(LabelingJobInstructionsOutput)
}

// Label categories of the job.
func (o LabelingJobPropertiesOutput) LabelCategories() LabelCategoryMapOutput {
	return o.ApplyT(func(v LabelingJobProperties) map[string]LabelCategory { return v.LabelCategories }).(LabelCategoryMapOutput)
}

// Media specific properties in a labeling job.
func (o LabelingJobPropertiesOutput) LabelingJobMediaProperties() LabelingJobImagePropertiesOutput {
	return o.ApplyT(func(v LabelingJobProperties) LabelingJobImageProperties { return v.LabelingJobMediaProperties }).(LabelingJobImagePropertiesOutput)
}

// Machine learning assisted configuration for the job.
func (o LabelingJobPropertiesOutput) MlAssistConfiguration() MLAssistConfigurationPtrOutput {
	return o.ApplyT(func(v LabelingJobProperties) *MLAssistConfiguration { return v.MlAssistConfiguration }).(MLAssistConfigurationPtrOutput)
}

// The job property dictionary. Properties can be added, but not removed or altered.
func (o LabelingJobPropertiesOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v LabelingJobProperties) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The job tag dictionary. Tags can be added, removed, and updated.
func (o LabelingJobPropertiesOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LabelingJobProperties) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type LabelingJobPropertiesPtrOutput struct{ *pulumi.OutputState }

func (LabelingJobPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobProperties)(nil)).Elem()
}

func (o LabelingJobPropertiesPtrOutput) ToLabelingJobPropertiesPtrOutput() LabelingJobPropertiesPtrOutput {
	return o
}

func (o LabelingJobPropertiesPtrOutput) ToLabelingJobPropertiesPtrOutputWithContext(ctx context.Context) LabelingJobPropertiesPtrOutput {
	return o
}

func (o LabelingJobPropertiesPtrOutput) Elem() LabelingJobPropertiesOutput {
	return o.ApplyT(func(v *LabelingJobProperties) LabelingJobProperties {
		if v != nil {
			return *v
		}
		var ret LabelingJobProperties
		return ret
	}).(LabelingJobPropertiesOutput)
}

// Dataset configuration for the job.
func (o LabelingJobPropertiesPtrOutput) DatasetConfiguration() LabelingDatasetConfigurationPtrOutput {
	return o.ApplyT(func(v *LabelingJobProperties) *LabelingDatasetConfiguration {
		if v == nil {
			return nil
		}
		return &v.DatasetConfiguration
	}).(LabelingDatasetConfigurationPtrOutput)
}

// Instructions for the job.
func (o LabelingJobPropertiesPtrOutput) JobInstructions() LabelingJobInstructionsPtrOutput {
	return o.ApplyT(func(v *LabelingJobProperties) *LabelingJobInstructions {
		if v == nil {
			return nil
		}
		return &v.JobInstructions
	}).(LabelingJobInstructionsPtrOutput)
}

// Label categories of the job.
func (o LabelingJobPropertiesPtrOutput) LabelCategories() LabelCategoryMapOutput {
	return o.ApplyT(func(v *LabelingJobProperties) map[string]LabelCategory {
		if v == nil {
			return nil
		}
		return v.LabelCategories
	}).(LabelCategoryMapOutput)
}

// Media specific properties in a labeling job.
func (o LabelingJobPropertiesPtrOutput) LabelingJobMediaProperties() LabelingJobImagePropertiesPtrOutput {
	return o.ApplyT(func(v *LabelingJobProperties) *LabelingJobImageProperties {
		if v == nil {
			return nil
		}
		return &v.LabelingJobMediaProperties
	}).(LabelingJobImagePropertiesPtrOutput)
}

// Machine learning assisted configuration for the job.
func (o LabelingJobPropertiesPtrOutput) MlAssistConfiguration() MLAssistConfigurationPtrOutput {
	return o.ApplyT(func(v *LabelingJobProperties) *MLAssistConfiguration {
		if v == nil {
			return nil
		}
		return v.MlAssistConfiguration
	}).(MLAssistConfigurationPtrOutput)
}

// The job property dictionary. Properties can be added, but not removed or altered.
func (o LabelingJobPropertiesPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LabelingJobProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// The job tag dictionary. Tags can be added, removed, and updated.
func (o LabelingJobPropertiesPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LabelingJobProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type LabelingJobPropertiesResponse struct {
	// Created time of the job in UTC timezone.
	CreatedTimeUtc string `pulumi:"createdTimeUtc"`
	// Dataset configuration for the job.
	DatasetConfiguration LabelingDatasetConfigurationResponse `pulumi:"datasetConfiguration"`
	// Instructions for the job.
	JobInstructions LabelingJobInstructionsResponse `pulumi:"jobInstructions"`
	// Label categories of the job.
	LabelCategories map[string]LabelCategoryResponse `pulumi:"labelCategories"`
	// Media specific properties in a labeling job.
	LabelingJobMediaProperties LabelingJobImagePropertiesResponse `pulumi:"labelingJobMediaProperties"`
	// Machine learning assisted configuration for the job.
	MlAssistConfiguration *MLAssistConfigurationResponse `pulumi:"mlAssistConfiguration"`
	// Progress metrics of the job.
	ProgressMetrics ProgressMetricsResponse `pulumi:"progressMetrics"`
	// Internal id of the job(Previously called project).
	ProjectId string `pulumi:"projectId"`
	// The job property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// Status of the job.
	Status string `pulumi:"status"`
	// Status messages of the job.
	StatusMessages []StatusMessageResponse `pulumi:"statusMessages"`
	// The job tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// LabelingJobPropertiesResponseInput is an input type that accepts LabelingJobPropertiesResponseArgs and LabelingJobPropertiesResponseOutput values.
// You can construct a concrete instance of `LabelingJobPropertiesResponseInput` via:
//
//          LabelingJobPropertiesResponseArgs{...}
type LabelingJobPropertiesResponseInput interface {
	pulumi.Input

	ToLabelingJobPropertiesResponseOutput() LabelingJobPropertiesResponseOutput
	ToLabelingJobPropertiesResponseOutputWithContext(context.Context) LabelingJobPropertiesResponseOutput
}

type LabelingJobPropertiesResponseArgs struct {
	// Created time of the job in UTC timezone.
	CreatedTimeUtc pulumi.StringInput `pulumi:"createdTimeUtc"`
	// Dataset configuration for the job.
	DatasetConfiguration LabelingDatasetConfigurationResponseInput `pulumi:"datasetConfiguration"`
	// Instructions for the job.
	JobInstructions LabelingJobInstructionsResponseInput `pulumi:"jobInstructions"`
	// Label categories of the job.
	LabelCategories LabelCategoryResponseMapInput `pulumi:"labelCategories"`
	// Media specific properties in a labeling job.
	LabelingJobMediaProperties LabelingJobImagePropertiesResponseInput `pulumi:"labelingJobMediaProperties"`
	// Machine learning assisted configuration for the job.
	MlAssistConfiguration MLAssistConfigurationResponsePtrInput `pulumi:"mlAssistConfiguration"`
	// Progress metrics of the job.
	ProgressMetrics ProgressMetricsResponseInput `pulumi:"progressMetrics"`
	// Internal id of the job(Previously called project).
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The job property dictionary. Properties can be added, but not removed or altered.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Status of the job.
	Status pulumi.StringInput `pulumi:"status"`
	// Status messages of the job.
	StatusMessages StatusMessageResponseArrayInput `pulumi:"statusMessages"`
	// The job tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LabelingJobPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobPropertiesResponse)(nil)).Elem()
}

func (i LabelingJobPropertiesResponseArgs) ToLabelingJobPropertiesResponseOutput() LabelingJobPropertiesResponseOutput {
	return i.ToLabelingJobPropertiesResponseOutputWithContext(context.Background())
}

func (i LabelingJobPropertiesResponseArgs) ToLabelingJobPropertiesResponseOutputWithContext(ctx context.Context) LabelingJobPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobPropertiesResponseOutput)
}

func (i LabelingJobPropertiesResponseArgs) ToLabelingJobPropertiesResponsePtrOutput() LabelingJobPropertiesResponsePtrOutput {
	return i.ToLabelingJobPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i LabelingJobPropertiesResponseArgs) ToLabelingJobPropertiesResponsePtrOutputWithContext(ctx context.Context) LabelingJobPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobPropertiesResponseOutput).ToLabelingJobPropertiesResponsePtrOutputWithContext(ctx)
}

// LabelingJobPropertiesResponsePtrInput is an input type that accepts LabelingJobPropertiesResponseArgs, LabelingJobPropertiesResponsePtr and LabelingJobPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `LabelingJobPropertiesResponsePtrInput` via:
//
//          LabelingJobPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type LabelingJobPropertiesResponsePtrInput interface {
	pulumi.Input

	ToLabelingJobPropertiesResponsePtrOutput() LabelingJobPropertiesResponsePtrOutput
	ToLabelingJobPropertiesResponsePtrOutputWithContext(context.Context) LabelingJobPropertiesResponsePtrOutput
}

type labelingJobPropertiesResponsePtrType LabelingJobPropertiesResponseArgs

func LabelingJobPropertiesResponsePtr(v *LabelingJobPropertiesResponseArgs) LabelingJobPropertiesResponsePtrInput {
	return (*labelingJobPropertiesResponsePtrType)(v)
}

func (*labelingJobPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobPropertiesResponse)(nil)).Elem()
}

func (i *labelingJobPropertiesResponsePtrType) ToLabelingJobPropertiesResponsePtrOutput() LabelingJobPropertiesResponsePtrOutput {
	return i.ToLabelingJobPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *labelingJobPropertiesResponsePtrType) ToLabelingJobPropertiesResponsePtrOutputWithContext(ctx context.Context) LabelingJobPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobPropertiesResponsePtrOutput)
}

type LabelingJobPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LabelingJobPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobPropertiesResponse)(nil)).Elem()
}

func (o LabelingJobPropertiesResponseOutput) ToLabelingJobPropertiesResponseOutput() LabelingJobPropertiesResponseOutput {
	return o
}

func (o LabelingJobPropertiesResponseOutput) ToLabelingJobPropertiesResponseOutputWithContext(ctx context.Context) LabelingJobPropertiesResponseOutput {
	return o
}

func (o LabelingJobPropertiesResponseOutput) ToLabelingJobPropertiesResponsePtrOutput() LabelingJobPropertiesResponsePtrOutput {
	return o.ToLabelingJobPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o LabelingJobPropertiesResponseOutput) ToLabelingJobPropertiesResponsePtrOutputWithContext(ctx context.Context) LabelingJobPropertiesResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LabelingJobPropertiesResponse) *LabelingJobPropertiesResponse {
		return &v
	}).(LabelingJobPropertiesResponsePtrOutput)
}

// Created time of the job in UTC timezone.
func (o LabelingJobPropertiesResponseOutput) CreatedTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingJobPropertiesResponse) string { return v.CreatedTimeUtc }).(pulumi.StringOutput)
}

// Dataset configuration for the job.
func (o LabelingJobPropertiesResponseOutput) DatasetConfiguration() LabelingDatasetConfigurationResponseOutput {
	return o.ApplyT(func(v LabelingJobPropertiesResponse) LabelingDatasetConfigurationResponse {
		return v.DatasetConfiguration
	}).(LabelingDatasetConfigurationResponseOutput)
}

// Instructions for the job.
func (o LabelingJobPropertiesResponseOutput) JobInstructions() LabelingJobInstructionsResponseOutput {
	return o.ApplyT(func(v LabelingJobPropertiesResponse) LabelingJobInstructionsResponse { return v.JobInstructions }).(LabelingJobInstructionsResponseOutput)
}

// Label categories of the job.
func (o LabelingJobPropertiesResponseOutput) LabelCategories() LabelCategoryResponseMapOutput {
	return o.ApplyT(func(v LabelingJobPropertiesResponse) map[string]LabelCategoryResponse { return v.LabelCategories }).(LabelCategoryResponseMapOutput)
}

// Media specific properties in a labeling job.
func (o LabelingJobPropertiesResponseOutput) LabelingJobMediaProperties() LabelingJobImagePropertiesResponseOutput {
	return o.ApplyT(func(v LabelingJobPropertiesResponse) LabelingJobImagePropertiesResponse {
		return v.LabelingJobMediaProperties
	}).(LabelingJobImagePropertiesResponseOutput)
}

// Machine learning assisted configuration for the job.
func (o LabelingJobPropertiesResponseOutput) MlAssistConfiguration() MLAssistConfigurationResponsePtrOutput {
	return o.ApplyT(func(v LabelingJobPropertiesResponse) *MLAssistConfigurationResponse { return v.MlAssistConfiguration }).(MLAssistConfigurationResponsePtrOutput)
}

// Progress metrics of the job.
func (o LabelingJobPropertiesResponseOutput) ProgressMetrics() ProgressMetricsResponseOutput {
	return o.ApplyT(func(v LabelingJobPropertiesResponse) ProgressMetricsResponse { return v.ProgressMetrics }).(ProgressMetricsResponseOutput)
}

// Internal id of the job(Previously called project).
func (o LabelingJobPropertiesResponseOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingJobPropertiesResponse) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The job property dictionary. Properties can be added, but not removed or altered.
func (o LabelingJobPropertiesResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v LabelingJobPropertiesResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Status of the job.
func (o LabelingJobPropertiesResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingJobPropertiesResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Status messages of the job.
func (o LabelingJobPropertiesResponseOutput) StatusMessages() StatusMessageResponseArrayOutput {
	return o.ApplyT(func(v LabelingJobPropertiesResponse) []StatusMessageResponse { return v.StatusMessages }).(StatusMessageResponseArrayOutput)
}

// The job tag dictionary. Tags can be added, removed, and updated.
func (o LabelingJobPropertiesResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LabelingJobPropertiesResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type LabelingJobPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (LabelingJobPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobPropertiesResponse)(nil)).Elem()
}

func (o LabelingJobPropertiesResponsePtrOutput) ToLabelingJobPropertiesResponsePtrOutput() LabelingJobPropertiesResponsePtrOutput {
	return o
}

func (o LabelingJobPropertiesResponsePtrOutput) ToLabelingJobPropertiesResponsePtrOutputWithContext(ctx context.Context) LabelingJobPropertiesResponsePtrOutput {
	return o
}

func (o LabelingJobPropertiesResponsePtrOutput) Elem() LabelingJobPropertiesResponseOutput {
	return o.ApplyT(func(v *LabelingJobPropertiesResponse) LabelingJobPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret LabelingJobPropertiesResponse
		return ret
	}).(LabelingJobPropertiesResponseOutput)
}

// Created time of the job in UTC timezone.
func (o LabelingJobPropertiesResponsePtrOutput) CreatedTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Dataset configuration for the job.
func (o LabelingJobPropertiesResponsePtrOutput) DatasetConfiguration() LabelingDatasetConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *LabelingJobPropertiesResponse) *LabelingDatasetConfigurationResponse {
		if v == nil {
			return nil
		}
		return &v.DatasetConfiguration
	}).(LabelingDatasetConfigurationResponsePtrOutput)
}

// Instructions for the job.
func (o LabelingJobPropertiesResponsePtrOutput) JobInstructions() LabelingJobInstructionsResponsePtrOutput {
	return o.ApplyT(func(v *LabelingJobPropertiesResponse) *LabelingJobInstructionsResponse {
		if v == nil {
			return nil
		}
		return &v.JobInstructions
	}).(LabelingJobInstructionsResponsePtrOutput)
}

// Label categories of the job.
func (o LabelingJobPropertiesResponsePtrOutput) LabelCategories() LabelCategoryResponseMapOutput {
	return o.ApplyT(func(v *LabelingJobPropertiesResponse) map[string]LabelCategoryResponse {
		if v == nil {
			return nil
		}
		return v.LabelCategories
	}).(LabelCategoryResponseMapOutput)
}

// Media specific properties in a labeling job.
func (o LabelingJobPropertiesResponsePtrOutput) LabelingJobMediaProperties() LabelingJobImagePropertiesResponsePtrOutput {
	return o.ApplyT(func(v *LabelingJobPropertiesResponse) *LabelingJobImagePropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.LabelingJobMediaProperties
	}).(LabelingJobImagePropertiesResponsePtrOutput)
}

// Machine learning assisted configuration for the job.
func (o LabelingJobPropertiesResponsePtrOutput) MlAssistConfiguration() MLAssistConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *LabelingJobPropertiesResponse) *MLAssistConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.MlAssistConfiguration
	}).(MLAssistConfigurationResponsePtrOutput)
}

// Progress metrics of the job.
func (o LabelingJobPropertiesResponsePtrOutput) ProgressMetrics() ProgressMetricsResponsePtrOutput {
	return o.ApplyT(func(v *LabelingJobPropertiesResponse) *ProgressMetricsResponse {
		if v == nil {
			return nil
		}
		return &v.ProgressMetrics
	}).(ProgressMetricsResponsePtrOutput)
}

// Internal id of the job(Previously called project).
func (o LabelingJobPropertiesResponsePtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// The job property dictionary. Properties can be added, but not removed or altered.
func (o LabelingJobPropertiesResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LabelingJobPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Status of the job.
func (o LabelingJobPropertiesResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Status messages of the job.
func (o LabelingJobPropertiesResponsePtrOutput) StatusMessages() StatusMessageResponseArrayOutput {
	return o.ApplyT(func(v *LabelingJobPropertiesResponse) []StatusMessageResponse {
		if v == nil {
			return nil
		}
		return v.StatusMessages
	}).(StatusMessageResponseArrayOutput)
}

// The job tag dictionary. Tags can be added, removed, and updated.
func (o LabelingJobPropertiesResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LabelingJobPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type LinkedInfoResponse struct {
	// LinkedId id.
	LinkedId *string `pulumi:"linkedId"`
	// Linked resource name.
	LinkedResourceName *string `pulumi:"linkedResourceName"`
	// Datastore origin
	Origin *string `pulumi:"origin"`
}

// LinkedInfoResponseInput is an input type that accepts LinkedInfoResponseArgs and LinkedInfoResponseOutput values.
// You can construct a concrete instance of `LinkedInfoResponseInput` via:
//
//          LinkedInfoResponseArgs{...}
type LinkedInfoResponseInput interface {
	pulumi.Input

	ToLinkedInfoResponseOutput() LinkedInfoResponseOutput
	ToLinkedInfoResponseOutputWithContext(context.Context) LinkedInfoResponseOutput
}

type LinkedInfoResponseArgs struct {
	// LinkedId id.
	LinkedId pulumi.StringPtrInput `pulumi:"linkedId"`
	// Linked resource name.
	LinkedResourceName pulumi.StringPtrInput `pulumi:"linkedResourceName"`
	// Datastore origin
	Origin pulumi.StringPtrInput `pulumi:"origin"`
}

func (LinkedInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedInfoResponse)(nil)).Elem()
}

func (i LinkedInfoResponseArgs) ToLinkedInfoResponseOutput() LinkedInfoResponseOutput {
	return i.ToLinkedInfoResponseOutputWithContext(context.Background())
}

func (i LinkedInfoResponseArgs) ToLinkedInfoResponseOutputWithContext(ctx context.Context) LinkedInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedInfoResponseOutput)
}

func (i LinkedInfoResponseArgs) ToLinkedInfoResponsePtrOutput() LinkedInfoResponsePtrOutput {
	return i.ToLinkedInfoResponsePtrOutputWithContext(context.Background())
}

func (i LinkedInfoResponseArgs) ToLinkedInfoResponsePtrOutputWithContext(ctx context.Context) LinkedInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedInfoResponseOutput).ToLinkedInfoResponsePtrOutputWithContext(ctx)
}

// LinkedInfoResponsePtrInput is an input type that accepts LinkedInfoResponseArgs, LinkedInfoResponsePtr and LinkedInfoResponsePtrOutput values.
// You can construct a concrete instance of `LinkedInfoResponsePtrInput` via:
//
//          LinkedInfoResponseArgs{...}
//
//  or:
//
//          nil
type LinkedInfoResponsePtrInput interface {
	pulumi.Input

	ToLinkedInfoResponsePtrOutput() LinkedInfoResponsePtrOutput
	ToLinkedInfoResponsePtrOutputWithContext(context.Context) LinkedInfoResponsePtrOutput
}

type linkedInfoResponsePtrType LinkedInfoResponseArgs

func LinkedInfoResponsePtr(v *LinkedInfoResponseArgs) LinkedInfoResponsePtrInput {
	return (*linkedInfoResponsePtrType)(v)
}

func (*linkedInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedInfoResponse)(nil)).Elem()
}

func (i *linkedInfoResponsePtrType) ToLinkedInfoResponsePtrOutput() LinkedInfoResponsePtrOutput {
	return i.ToLinkedInfoResponsePtrOutputWithContext(context.Background())
}

func (i *linkedInfoResponsePtrType) ToLinkedInfoResponsePtrOutputWithContext(ctx context.Context) LinkedInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedInfoResponsePtrOutput)
}

type LinkedInfoResponseOutput struct{ *pulumi.OutputState }

func (LinkedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedInfoResponse)(nil)).Elem()
}

func (o LinkedInfoResponseOutput) ToLinkedInfoResponseOutput() LinkedInfoResponseOutput {
	return o
}

func (o LinkedInfoResponseOutput) ToLinkedInfoResponseOutputWithContext(ctx context.Context) LinkedInfoResponseOutput {
	return o
}

func (o LinkedInfoResponseOutput) ToLinkedInfoResponsePtrOutput() LinkedInfoResponsePtrOutput {
	return o.ToLinkedInfoResponsePtrOutputWithContext(context.Background())
}

func (o LinkedInfoResponseOutput) ToLinkedInfoResponsePtrOutputWithContext(ctx context.Context) LinkedInfoResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedInfoResponse) *LinkedInfoResponse {
		return &v
	}).(LinkedInfoResponsePtrOutput)
}

// LinkedId id.
func (o LinkedInfoResponseOutput) LinkedId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedInfoResponse) *string { return v.LinkedId }).(pulumi.StringPtrOutput)
}

// Linked resource name.
func (o LinkedInfoResponseOutput) LinkedResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedInfoResponse) *string { return v.LinkedResourceName }).(pulumi.StringPtrOutput)
}

// Datastore origin
func (o LinkedInfoResponseOutput) Origin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedInfoResponse) *string { return v.Origin }).(pulumi.StringPtrOutput)
}

type LinkedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (LinkedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedInfoResponse)(nil)).Elem()
}

func (o LinkedInfoResponsePtrOutput) ToLinkedInfoResponsePtrOutput() LinkedInfoResponsePtrOutput {
	return o
}

func (o LinkedInfoResponsePtrOutput) ToLinkedInfoResponsePtrOutputWithContext(ctx context.Context) LinkedInfoResponsePtrOutput {
	return o
}

func (o LinkedInfoResponsePtrOutput) Elem() LinkedInfoResponseOutput {
	return o.ApplyT(func(v *LinkedInfoResponse) LinkedInfoResponse {
		if v != nil {
			return *v
		}
		var ret LinkedInfoResponse
		return ret
	}).(LinkedInfoResponseOutput)
}

// LinkedId id.
func (o LinkedInfoResponsePtrOutput) LinkedId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinkedId
	}).(pulumi.StringPtrOutput)
}

// Linked resource name.
func (o LinkedInfoResponsePtrOutput) LinkedResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinkedResourceName
	}).(pulumi.StringPtrOutput)
}

// Datastore origin
func (o LinkedInfoResponsePtrOutput) Origin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Origin
	}).(pulumi.StringPtrOutput)
}

type LinkedServiceProps struct {
	// The creation time of the linked service.
	CreatedTime *string `pulumi:"createdTime"`
	// Type of the link target.
	LinkType *LinkedServiceLinkType `pulumi:"linkType"`
	// ResourceId of the link target of the linked service.
	LinkedServiceResourceId string `pulumi:"linkedServiceResourceId"`
	// The last modified time of the linked service.
	ModifiedTime *string `pulumi:"modifiedTime"`
}

// LinkedServicePropsInput is an input type that accepts LinkedServicePropsArgs and LinkedServicePropsOutput values.
// You can construct a concrete instance of `LinkedServicePropsInput` via:
//
//          LinkedServicePropsArgs{...}
type LinkedServicePropsInput interface {
	pulumi.Input

	ToLinkedServicePropsOutput() LinkedServicePropsOutput
	ToLinkedServicePropsOutputWithContext(context.Context) LinkedServicePropsOutput
}

type LinkedServicePropsArgs struct {
	// The creation time of the linked service.
	CreatedTime pulumi.StringPtrInput `pulumi:"createdTime"`
	// Type of the link target.
	LinkType LinkedServiceLinkTypePtrInput `pulumi:"linkType"`
	// ResourceId of the link target of the linked service.
	LinkedServiceResourceId pulumi.StringInput `pulumi:"linkedServiceResourceId"`
	// The last modified time of the linked service.
	ModifiedTime pulumi.StringPtrInput `pulumi:"modifiedTime"`
}

func (LinkedServicePropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceProps)(nil)).Elem()
}

func (i LinkedServicePropsArgs) ToLinkedServicePropsOutput() LinkedServicePropsOutput {
	return i.ToLinkedServicePropsOutputWithContext(context.Background())
}

func (i LinkedServicePropsArgs) ToLinkedServicePropsOutputWithContext(ctx context.Context) LinkedServicePropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServicePropsOutput)
}

func (i LinkedServicePropsArgs) ToLinkedServicePropsPtrOutput() LinkedServicePropsPtrOutput {
	return i.ToLinkedServicePropsPtrOutputWithContext(context.Background())
}

func (i LinkedServicePropsArgs) ToLinkedServicePropsPtrOutputWithContext(ctx context.Context) LinkedServicePropsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServicePropsOutput).ToLinkedServicePropsPtrOutputWithContext(ctx)
}

// LinkedServicePropsPtrInput is an input type that accepts LinkedServicePropsArgs, LinkedServicePropsPtr and LinkedServicePropsPtrOutput values.
// You can construct a concrete instance of `LinkedServicePropsPtrInput` via:
//
//          LinkedServicePropsArgs{...}
//
//  or:
//
//          nil
type LinkedServicePropsPtrInput interface {
	pulumi.Input

	ToLinkedServicePropsPtrOutput() LinkedServicePropsPtrOutput
	ToLinkedServicePropsPtrOutputWithContext(context.Context) LinkedServicePropsPtrOutput
}

type linkedServicePropsPtrType LinkedServicePropsArgs

func LinkedServicePropsPtr(v *LinkedServicePropsArgs) LinkedServicePropsPtrInput {
	return (*linkedServicePropsPtrType)(v)
}

func (*linkedServicePropsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceProps)(nil)).Elem()
}

func (i *linkedServicePropsPtrType) ToLinkedServicePropsPtrOutput() LinkedServicePropsPtrOutput {
	return i.ToLinkedServicePropsPtrOutputWithContext(context.Background())
}

func (i *linkedServicePropsPtrType) ToLinkedServicePropsPtrOutputWithContext(ctx context.Context) LinkedServicePropsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServicePropsPtrOutput)
}

type LinkedServicePropsOutput struct{ *pulumi.OutputState }

func (LinkedServicePropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceProps)(nil)).Elem()
}

func (o LinkedServicePropsOutput) ToLinkedServicePropsOutput() LinkedServicePropsOutput {
	return o
}

func (o LinkedServicePropsOutput) ToLinkedServicePropsOutputWithContext(ctx context.Context) LinkedServicePropsOutput {
	return o
}

func (o LinkedServicePropsOutput) ToLinkedServicePropsPtrOutput() LinkedServicePropsPtrOutput {
	return o.ToLinkedServicePropsPtrOutputWithContext(context.Background())
}

func (o LinkedServicePropsOutput) ToLinkedServicePropsPtrOutputWithContext(ctx context.Context) LinkedServicePropsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceProps) *LinkedServiceProps {
		return &v
	}).(LinkedServicePropsPtrOutput)
}

// The creation time of the linked service.
func (o LinkedServicePropsOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedServiceProps) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

// Type of the link target.
func (o LinkedServicePropsOutput) LinkType() LinkedServiceLinkTypePtrOutput {
	return o.ApplyT(func(v LinkedServiceProps) *LinkedServiceLinkType { return v.LinkType }).(LinkedServiceLinkTypePtrOutput)
}

// ResourceId of the link target of the linked service.
func (o LinkedServicePropsOutput) LinkedServiceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceProps) string { return v.LinkedServiceResourceId }).(pulumi.StringOutput)
}

// The last modified time of the linked service.
func (o LinkedServicePropsOutput) ModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedServiceProps) *string { return v.ModifiedTime }).(pulumi.StringPtrOutput)
}

type LinkedServicePropsPtrOutput struct{ *pulumi.OutputState }

func (LinkedServicePropsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceProps)(nil)).Elem()
}

func (o LinkedServicePropsPtrOutput) ToLinkedServicePropsPtrOutput() LinkedServicePropsPtrOutput {
	return o
}

func (o LinkedServicePropsPtrOutput) ToLinkedServicePropsPtrOutputWithContext(ctx context.Context) LinkedServicePropsPtrOutput {
	return o
}

func (o LinkedServicePropsPtrOutput) Elem() LinkedServicePropsOutput {
	return o.ApplyT(func(v *LinkedServiceProps) LinkedServiceProps {
		if v != nil {
			return *v
		}
		var ret LinkedServiceProps
		return ret
	}).(LinkedServicePropsOutput)
}

// The creation time of the linked service.
func (o LinkedServicePropsPtrOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceProps) *string {
		if v == nil {
			return nil
		}
		return v.CreatedTime
	}).(pulumi.StringPtrOutput)
}

// Type of the link target.
func (o LinkedServicePropsPtrOutput) LinkType() LinkedServiceLinkTypePtrOutput {
	return o.ApplyT(func(v *LinkedServiceProps) *LinkedServiceLinkType {
		if v == nil {
			return nil
		}
		return v.LinkType
	}).(LinkedServiceLinkTypePtrOutput)
}

// ResourceId of the link target of the linked service.
func (o LinkedServicePropsPtrOutput) LinkedServiceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceProps) *string {
		if v == nil {
			return nil
		}
		return &v.LinkedServiceResourceId
	}).(pulumi.StringPtrOutput)
}

// The last modified time of the linked service.
func (o LinkedServicePropsPtrOutput) ModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceProps) *string {
		if v == nil {
			return nil
		}
		return v.ModifiedTime
	}).(pulumi.StringPtrOutput)
}

type LinkedServicePropsResponse struct {
	// The creation time of the linked service.
	CreatedTime *string `pulumi:"createdTime"`
	// Type of the link target.
	LinkType *string `pulumi:"linkType"`
	// ResourceId of the link target of the linked service.
	LinkedServiceResourceId string `pulumi:"linkedServiceResourceId"`
	// The last modified time of the linked service.
	ModifiedTime *string `pulumi:"modifiedTime"`
}

// LinkedServicePropsResponseInput is an input type that accepts LinkedServicePropsResponseArgs and LinkedServicePropsResponseOutput values.
// You can construct a concrete instance of `LinkedServicePropsResponseInput` via:
//
//          LinkedServicePropsResponseArgs{...}
type LinkedServicePropsResponseInput interface {
	pulumi.Input

	ToLinkedServicePropsResponseOutput() LinkedServicePropsResponseOutput
	ToLinkedServicePropsResponseOutputWithContext(context.Context) LinkedServicePropsResponseOutput
}

type LinkedServicePropsResponseArgs struct {
	// The creation time of the linked service.
	CreatedTime pulumi.StringPtrInput `pulumi:"createdTime"`
	// Type of the link target.
	LinkType pulumi.StringPtrInput `pulumi:"linkType"`
	// ResourceId of the link target of the linked service.
	LinkedServiceResourceId pulumi.StringInput `pulumi:"linkedServiceResourceId"`
	// The last modified time of the linked service.
	ModifiedTime pulumi.StringPtrInput `pulumi:"modifiedTime"`
}

func (LinkedServicePropsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServicePropsResponse)(nil)).Elem()
}

func (i LinkedServicePropsResponseArgs) ToLinkedServicePropsResponseOutput() LinkedServicePropsResponseOutput {
	return i.ToLinkedServicePropsResponseOutputWithContext(context.Background())
}

func (i LinkedServicePropsResponseArgs) ToLinkedServicePropsResponseOutputWithContext(ctx context.Context) LinkedServicePropsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServicePropsResponseOutput)
}

func (i LinkedServicePropsResponseArgs) ToLinkedServicePropsResponsePtrOutput() LinkedServicePropsResponsePtrOutput {
	return i.ToLinkedServicePropsResponsePtrOutputWithContext(context.Background())
}

func (i LinkedServicePropsResponseArgs) ToLinkedServicePropsResponsePtrOutputWithContext(ctx context.Context) LinkedServicePropsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServicePropsResponseOutput).ToLinkedServicePropsResponsePtrOutputWithContext(ctx)
}

// LinkedServicePropsResponsePtrInput is an input type that accepts LinkedServicePropsResponseArgs, LinkedServicePropsResponsePtr and LinkedServicePropsResponsePtrOutput values.
// You can construct a concrete instance of `LinkedServicePropsResponsePtrInput` via:
//
//          LinkedServicePropsResponseArgs{...}
//
//  or:
//
//          nil
type LinkedServicePropsResponsePtrInput interface {
	pulumi.Input

	ToLinkedServicePropsResponsePtrOutput() LinkedServicePropsResponsePtrOutput
	ToLinkedServicePropsResponsePtrOutputWithContext(context.Context) LinkedServicePropsResponsePtrOutput
}

type linkedServicePropsResponsePtrType LinkedServicePropsResponseArgs

func LinkedServicePropsResponsePtr(v *LinkedServicePropsResponseArgs) LinkedServicePropsResponsePtrInput {
	return (*linkedServicePropsResponsePtrType)(v)
}

func (*linkedServicePropsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServicePropsResponse)(nil)).Elem()
}

func (i *linkedServicePropsResponsePtrType) ToLinkedServicePropsResponsePtrOutput() LinkedServicePropsResponsePtrOutput {
	return i.ToLinkedServicePropsResponsePtrOutputWithContext(context.Background())
}

func (i *linkedServicePropsResponsePtrType) ToLinkedServicePropsResponsePtrOutputWithContext(ctx context.Context) LinkedServicePropsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServicePropsResponsePtrOutput)
}

type LinkedServicePropsResponseOutput struct{ *pulumi.OutputState }

func (LinkedServicePropsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServicePropsResponse)(nil)).Elem()
}

func (o LinkedServicePropsResponseOutput) ToLinkedServicePropsResponseOutput() LinkedServicePropsResponseOutput {
	return o
}

func (o LinkedServicePropsResponseOutput) ToLinkedServicePropsResponseOutputWithContext(ctx context.Context) LinkedServicePropsResponseOutput {
	return o
}

func (o LinkedServicePropsResponseOutput) ToLinkedServicePropsResponsePtrOutput() LinkedServicePropsResponsePtrOutput {
	return o.ToLinkedServicePropsResponsePtrOutputWithContext(context.Background())
}

func (o LinkedServicePropsResponseOutput) ToLinkedServicePropsResponsePtrOutputWithContext(ctx context.Context) LinkedServicePropsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServicePropsResponse) *LinkedServicePropsResponse {
		return &v
	}).(LinkedServicePropsResponsePtrOutput)
}

// The creation time of the linked service.
func (o LinkedServicePropsResponseOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedServicePropsResponse) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

// Type of the link target.
func (o LinkedServicePropsResponseOutput) LinkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedServicePropsResponse) *string { return v.LinkType }).(pulumi.StringPtrOutput)
}

// ResourceId of the link target of the linked service.
func (o LinkedServicePropsResponseOutput) LinkedServiceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServicePropsResponse) string { return v.LinkedServiceResourceId }).(pulumi.StringOutput)
}

// The last modified time of the linked service.
func (o LinkedServicePropsResponseOutput) ModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedServicePropsResponse) *string { return v.ModifiedTime }).(pulumi.StringPtrOutput)
}

type LinkedServicePropsResponsePtrOutput struct{ *pulumi.OutputState }

func (LinkedServicePropsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServicePropsResponse)(nil)).Elem()
}

func (o LinkedServicePropsResponsePtrOutput) ToLinkedServicePropsResponsePtrOutput() LinkedServicePropsResponsePtrOutput {
	return o
}

func (o LinkedServicePropsResponsePtrOutput) ToLinkedServicePropsResponsePtrOutputWithContext(ctx context.Context) LinkedServicePropsResponsePtrOutput {
	return o
}

func (o LinkedServicePropsResponsePtrOutput) Elem() LinkedServicePropsResponseOutput {
	return o.ApplyT(func(v *LinkedServicePropsResponse) LinkedServicePropsResponse {
		if v != nil {
			return *v
		}
		var ret LinkedServicePropsResponse
		return ret
	}).(LinkedServicePropsResponseOutput)
}

// The creation time of the linked service.
func (o LinkedServicePropsResponsePtrOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServicePropsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedTime
	}).(pulumi.StringPtrOutput)
}

// Type of the link target.
func (o LinkedServicePropsResponsePtrOutput) LinkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServicePropsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinkType
	}).(pulumi.StringPtrOutput)
}

// ResourceId of the link target of the linked service.
func (o LinkedServicePropsResponsePtrOutput) LinkedServiceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServicePropsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LinkedServiceResourceId
	}).(pulumi.StringPtrOutput)
}

// The last modified time of the linked service.
func (o LinkedServicePropsResponsePtrOutput) ModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServicePropsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ModifiedTime
	}).(pulumi.StringPtrOutput)
}

type LinkedWorkspaceProps struct {
	// ResourceId of the link target of the linked workspace.
	LinkedWorkspaceResourceId *string `pulumi:"linkedWorkspaceResourceId"`
	// ResourceId of the user assigned identity for the linked workspace.
	UserAssignedIdentityResourceId *string `pulumi:"userAssignedIdentityResourceId"`
}

// LinkedWorkspacePropsInput is an input type that accepts LinkedWorkspacePropsArgs and LinkedWorkspacePropsOutput values.
// You can construct a concrete instance of `LinkedWorkspacePropsInput` via:
//
//          LinkedWorkspacePropsArgs{...}
type LinkedWorkspacePropsInput interface {
	pulumi.Input

	ToLinkedWorkspacePropsOutput() LinkedWorkspacePropsOutput
	ToLinkedWorkspacePropsOutputWithContext(context.Context) LinkedWorkspacePropsOutput
}

type LinkedWorkspacePropsArgs struct {
	// ResourceId of the link target of the linked workspace.
	LinkedWorkspaceResourceId pulumi.StringPtrInput `pulumi:"linkedWorkspaceResourceId"`
	// ResourceId of the user assigned identity for the linked workspace.
	UserAssignedIdentityResourceId pulumi.StringPtrInput `pulumi:"userAssignedIdentityResourceId"`
}

func (LinkedWorkspacePropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedWorkspaceProps)(nil)).Elem()
}

func (i LinkedWorkspacePropsArgs) ToLinkedWorkspacePropsOutput() LinkedWorkspacePropsOutput {
	return i.ToLinkedWorkspacePropsOutputWithContext(context.Background())
}

func (i LinkedWorkspacePropsArgs) ToLinkedWorkspacePropsOutputWithContext(ctx context.Context) LinkedWorkspacePropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedWorkspacePropsOutput)
}

func (i LinkedWorkspacePropsArgs) ToLinkedWorkspacePropsPtrOutput() LinkedWorkspacePropsPtrOutput {
	return i.ToLinkedWorkspacePropsPtrOutputWithContext(context.Background())
}

func (i LinkedWorkspacePropsArgs) ToLinkedWorkspacePropsPtrOutputWithContext(ctx context.Context) LinkedWorkspacePropsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedWorkspacePropsOutput).ToLinkedWorkspacePropsPtrOutputWithContext(ctx)
}

// LinkedWorkspacePropsPtrInput is an input type that accepts LinkedWorkspacePropsArgs, LinkedWorkspacePropsPtr and LinkedWorkspacePropsPtrOutput values.
// You can construct a concrete instance of `LinkedWorkspacePropsPtrInput` via:
//
//          LinkedWorkspacePropsArgs{...}
//
//  or:
//
//          nil
type LinkedWorkspacePropsPtrInput interface {
	pulumi.Input

	ToLinkedWorkspacePropsPtrOutput() LinkedWorkspacePropsPtrOutput
	ToLinkedWorkspacePropsPtrOutputWithContext(context.Context) LinkedWorkspacePropsPtrOutput
}

type linkedWorkspacePropsPtrType LinkedWorkspacePropsArgs

func LinkedWorkspacePropsPtr(v *LinkedWorkspacePropsArgs) LinkedWorkspacePropsPtrInput {
	return (*linkedWorkspacePropsPtrType)(v)
}

func (*linkedWorkspacePropsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedWorkspaceProps)(nil)).Elem()
}

func (i *linkedWorkspacePropsPtrType) ToLinkedWorkspacePropsPtrOutput() LinkedWorkspacePropsPtrOutput {
	return i.ToLinkedWorkspacePropsPtrOutputWithContext(context.Background())
}

func (i *linkedWorkspacePropsPtrType) ToLinkedWorkspacePropsPtrOutputWithContext(ctx context.Context) LinkedWorkspacePropsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedWorkspacePropsPtrOutput)
}

type LinkedWorkspacePropsOutput struct{ *pulumi.OutputState }

func (LinkedWorkspacePropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedWorkspaceProps)(nil)).Elem()
}

func (o LinkedWorkspacePropsOutput) ToLinkedWorkspacePropsOutput() LinkedWorkspacePropsOutput {
	return o
}

func (o LinkedWorkspacePropsOutput) ToLinkedWorkspacePropsOutputWithContext(ctx context.Context) LinkedWorkspacePropsOutput {
	return o
}

func (o LinkedWorkspacePropsOutput) ToLinkedWorkspacePropsPtrOutput() LinkedWorkspacePropsPtrOutput {
	return o.ToLinkedWorkspacePropsPtrOutputWithContext(context.Background())
}

func (o LinkedWorkspacePropsOutput) ToLinkedWorkspacePropsPtrOutputWithContext(ctx context.Context) LinkedWorkspacePropsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedWorkspaceProps) *LinkedWorkspaceProps {
		return &v
	}).(LinkedWorkspacePropsPtrOutput)
}

// ResourceId of the link target of the linked workspace.
func (o LinkedWorkspacePropsOutput) LinkedWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedWorkspaceProps) *string { return v.LinkedWorkspaceResourceId }).(pulumi.StringPtrOutput)
}

// ResourceId of the user assigned identity for the linked workspace.
func (o LinkedWorkspacePropsOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedWorkspaceProps) *string { return v.UserAssignedIdentityResourceId }).(pulumi.StringPtrOutput)
}

type LinkedWorkspacePropsPtrOutput struct{ *pulumi.OutputState }

func (LinkedWorkspacePropsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedWorkspaceProps)(nil)).Elem()
}

func (o LinkedWorkspacePropsPtrOutput) ToLinkedWorkspacePropsPtrOutput() LinkedWorkspacePropsPtrOutput {
	return o
}

func (o LinkedWorkspacePropsPtrOutput) ToLinkedWorkspacePropsPtrOutputWithContext(ctx context.Context) LinkedWorkspacePropsPtrOutput {
	return o
}

func (o LinkedWorkspacePropsPtrOutput) Elem() LinkedWorkspacePropsOutput {
	return o.ApplyT(func(v *LinkedWorkspaceProps) LinkedWorkspaceProps {
		if v != nil {
			return *v
		}
		var ret LinkedWorkspaceProps
		return ret
	}).(LinkedWorkspacePropsOutput)
}

// ResourceId of the link target of the linked workspace.
func (o LinkedWorkspacePropsPtrOutput) LinkedWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedWorkspaceProps) *string {
		if v == nil {
			return nil
		}
		return v.LinkedWorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// ResourceId of the user assigned identity for the linked workspace.
func (o LinkedWorkspacePropsPtrOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedWorkspaceProps) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityResourceId
	}).(pulumi.StringPtrOutput)
}

type LinkedWorkspacePropsResponse struct {
	// ResourceId of the link target of the linked workspace.
	LinkedWorkspaceResourceId *string `pulumi:"linkedWorkspaceResourceId"`
	// ResourceId of the user assigned identity for the linked workspace.
	UserAssignedIdentityResourceId *string `pulumi:"userAssignedIdentityResourceId"`
}

// LinkedWorkspacePropsResponseInput is an input type that accepts LinkedWorkspacePropsResponseArgs and LinkedWorkspacePropsResponseOutput values.
// You can construct a concrete instance of `LinkedWorkspacePropsResponseInput` via:
//
//          LinkedWorkspacePropsResponseArgs{...}
type LinkedWorkspacePropsResponseInput interface {
	pulumi.Input

	ToLinkedWorkspacePropsResponseOutput() LinkedWorkspacePropsResponseOutput
	ToLinkedWorkspacePropsResponseOutputWithContext(context.Context) LinkedWorkspacePropsResponseOutput
}

type LinkedWorkspacePropsResponseArgs struct {
	// ResourceId of the link target of the linked workspace.
	LinkedWorkspaceResourceId pulumi.StringPtrInput `pulumi:"linkedWorkspaceResourceId"`
	// ResourceId of the user assigned identity for the linked workspace.
	UserAssignedIdentityResourceId pulumi.StringPtrInput `pulumi:"userAssignedIdentityResourceId"`
}

func (LinkedWorkspacePropsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedWorkspacePropsResponse)(nil)).Elem()
}

func (i LinkedWorkspacePropsResponseArgs) ToLinkedWorkspacePropsResponseOutput() LinkedWorkspacePropsResponseOutput {
	return i.ToLinkedWorkspacePropsResponseOutputWithContext(context.Background())
}

func (i LinkedWorkspacePropsResponseArgs) ToLinkedWorkspacePropsResponseOutputWithContext(ctx context.Context) LinkedWorkspacePropsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedWorkspacePropsResponseOutput)
}

func (i LinkedWorkspacePropsResponseArgs) ToLinkedWorkspacePropsResponsePtrOutput() LinkedWorkspacePropsResponsePtrOutput {
	return i.ToLinkedWorkspacePropsResponsePtrOutputWithContext(context.Background())
}

func (i LinkedWorkspacePropsResponseArgs) ToLinkedWorkspacePropsResponsePtrOutputWithContext(ctx context.Context) LinkedWorkspacePropsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedWorkspacePropsResponseOutput).ToLinkedWorkspacePropsResponsePtrOutputWithContext(ctx)
}

// LinkedWorkspacePropsResponsePtrInput is an input type that accepts LinkedWorkspacePropsResponseArgs, LinkedWorkspacePropsResponsePtr and LinkedWorkspacePropsResponsePtrOutput values.
// You can construct a concrete instance of `LinkedWorkspacePropsResponsePtrInput` via:
//
//          LinkedWorkspacePropsResponseArgs{...}
//
//  or:
//
//          nil
type LinkedWorkspacePropsResponsePtrInput interface {
	pulumi.Input

	ToLinkedWorkspacePropsResponsePtrOutput() LinkedWorkspacePropsResponsePtrOutput
	ToLinkedWorkspacePropsResponsePtrOutputWithContext(context.Context) LinkedWorkspacePropsResponsePtrOutput
}

type linkedWorkspacePropsResponsePtrType LinkedWorkspacePropsResponseArgs

func LinkedWorkspacePropsResponsePtr(v *LinkedWorkspacePropsResponseArgs) LinkedWorkspacePropsResponsePtrInput {
	return (*linkedWorkspacePropsResponsePtrType)(v)
}

func (*linkedWorkspacePropsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedWorkspacePropsResponse)(nil)).Elem()
}

func (i *linkedWorkspacePropsResponsePtrType) ToLinkedWorkspacePropsResponsePtrOutput() LinkedWorkspacePropsResponsePtrOutput {
	return i.ToLinkedWorkspacePropsResponsePtrOutputWithContext(context.Background())
}

func (i *linkedWorkspacePropsResponsePtrType) ToLinkedWorkspacePropsResponsePtrOutputWithContext(ctx context.Context) LinkedWorkspacePropsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedWorkspacePropsResponsePtrOutput)
}

type LinkedWorkspacePropsResponseOutput struct{ *pulumi.OutputState }

func (LinkedWorkspacePropsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedWorkspacePropsResponse)(nil)).Elem()
}

func (o LinkedWorkspacePropsResponseOutput) ToLinkedWorkspacePropsResponseOutput() LinkedWorkspacePropsResponseOutput {
	return o
}

func (o LinkedWorkspacePropsResponseOutput) ToLinkedWorkspacePropsResponseOutputWithContext(ctx context.Context) LinkedWorkspacePropsResponseOutput {
	return o
}

func (o LinkedWorkspacePropsResponseOutput) ToLinkedWorkspacePropsResponsePtrOutput() LinkedWorkspacePropsResponsePtrOutput {
	return o.ToLinkedWorkspacePropsResponsePtrOutputWithContext(context.Background())
}

func (o LinkedWorkspacePropsResponseOutput) ToLinkedWorkspacePropsResponsePtrOutputWithContext(ctx context.Context) LinkedWorkspacePropsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedWorkspacePropsResponse) *LinkedWorkspacePropsResponse {
		return &v
	}).(LinkedWorkspacePropsResponsePtrOutput)
}

// ResourceId of the link target of the linked workspace.
func (o LinkedWorkspacePropsResponseOutput) LinkedWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedWorkspacePropsResponse) *string { return v.LinkedWorkspaceResourceId }).(pulumi.StringPtrOutput)
}

// ResourceId of the user assigned identity for the linked workspace.
func (o LinkedWorkspacePropsResponseOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedWorkspacePropsResponse) *string { return v.UserAssignedIdentityResourceId }).(pulumi.StringPtrOutput)
}

type LinkedWorkspacePropsResponsePtrOutput struct{ *pulumi.OutputState }

func (LinkedWorkspacePropsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedWorkspacePropsResponse)(nil)).Elem()
}

func (o LinkedWorkspacePropsResponsePtrOutput) ToLinkedWorkspacePropsResponsePtrOutput() LinkedWorkspacePropsResponsePtrOutput {
	return o
}

func (o LinkedWorkspacePropsResponsePtrOutput) ToLinkedWorkspacePropsResponsePtrOutputWithContext(ctx context.Context) LinkedWorkspacePropsResponsePtrOutput {
	return o
}

func (o LinkedWorkspacePropsResponsePtrOutput) Elem() LinkedWorkspacePropsResponseOutput {
	return o.ApplyT(func(v *LinkedWorkspacePropsResponse) LinkedWorkspacePropsResponse {
		if v != nil {
			return *v
		}
		var ret LinkedWorkspacePropsResponse
		return ret
	}).(LinkedWorkspacePropsResponseOutput)
}

// ResourceId of the link target of the linked workspace.
func (o LinkedWorkspacePropsResponsePtrOutput) LinkedWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedWorkspacePropsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinkedWorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// ResourceId of the user assigned identity for the linked workspace.
func (o LinkedWorkspacePropsResponsePtrOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedWorkspacePropsResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityResourceId
	}).(pulumi.StringPtrOutput)
}

type ListNotebookKeysResultResponse struct {
	PrimaryAccessKey   string `pulumi:"primaryAccessKey"`
	SecondaryAccessKey string `pulumi:"secondaryAccessKey"`
}

// ListNotebookKeysResultResponseInput is an input type that accepts ListNotebookKeysResultResponseArgs and ListNotebookKeysResultResponseOutput values.
// You can construct a concrete instance of `ListNotebookKeysResultResponseInput` via:
//
//          ListNotebookKeysResultResponseArgs{...}
type ListNotebookKeysResultResponseInput interface {
	pulumi.Input

	ToListNotebookKeysResultResponseOutput() ListNotebookKeysResultResponseOutput
	ToListNotebookKeysResultResponseOutputWithContext(context.Context) ListNotebookKeysResultResponseOutput
}

type ListNotebookKeysResultResponseArgs struct {
	PrimaryAccessKey   pulumi.StringInput `pulumi:"primaryAccessKey"`
	SecondaryAccessKey pulumi.StringInput `pulumi:"secondaryAccessKey"`
}

func (ListNotebookKeysResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListNotebookKeysResultResponse)(nil)).Elem()
}

func (i ListNotebookKeysResultResponseArgs) ToListNotebookKeysResultResponseOutput() ListNotebookKeysResultResponseOutput {
	return i.ToListNotebookKeysResultResponseOutputWithContext(context.Background())
}

func (i ListNotebookKeysResultResponseArgs) ToListNotebookKeysResultResponseOutputWithContext(ctx context.Context) ListNotebookKeysResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListNotebookKeysResultResponseOutput)
}

type ListNotebookKeysResultResponseOutput struct{ *pulumi.OutputState }

func (ListNotebookKeysResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListNotebookKeysResultResponse)(nil)).Elem()
}

func (o ListNotebookKeysResultResponseOutput) ToListNotebookKeysResultResponseOutput() ListNotebookKeysResultResponseOutput {
	return o
}

func (o ListNotebookKeysResultResponseOutput) ToListNotebookKeysResultResponseOutputWithContext(ctx context.Context) ListNotebookKeysResultResponseOutput {
	return o
}

func (o ListNotebookKeysResultResponseOutput) PrimaryAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v ListNotebookKeysResultResponse) string { return v.PrimaryAccessKey }).(pulumi.StringOutput)
}

func (o ListNotebookKeysResultResponseOutput) SecondaryAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v ListNotebookKeysResultResponse) string { return v.SecondaryAccessKey }).(pulumi.StringOutput)
}

type MLAssistConfiguration struct {
	// The compute designated for inferencing.
	InferencingComputeBinding ComputeBinding `pulumi:"inferencingComputeBinding"`
	// Indicates whether MLAssist feature is enabled.
	MlAssistEnabled *bool `pulumi:"mlAssistEnabled"`
	// Name prefix to use for machine learning model. For each iteration modelName will be appended with iteration e.g.{modelName}_{i}.
	ModelNamePrefix string `pulumi:"modelNamePrefix"`
	// Prelabel accuracy threshold used in MLAssist feature.
	PrelabelAccuracyThreshold *float64 `pulumi:"prelabelAccuracyThreshold"`
	// The compute designated for training.
	TrainingComputeBinding ComputeBinding `pulumi:"trainingComputeBinding"`
}

// MLAssistConfigurationInput is an input type that accepts MLAssistConfigurationArgs and MLAssistConfigurationOutput values.
// You can construct a concrete instance of `MLAssistConfigurationInput` via:
//
//          MLAssistConfigurationArgs{...}
type MLAssistConfigurationInput interface {
	pulumi.Input

	ToMLAssistConfigurationOutput() MLAssistConfigurationOutput
	ToMLAssistConfigurationOutputWithContext(context.Context) MLAssistConfigurationOutput
}

type MLAssistConfigurationArgs struct {
	// The compute designated for inferencing.
	InferencingComputeBinding ComputeBindingInput `pulumi:"inferencingComputeBinding"`
	// Indicates whether MLAssist feature is enabled.
	MlAssistEnabled pulumi.BoolPtrInput `pulumi:"mlAssistEnabled"`
	// Name prefix to use for machine learning model. For each iteration modelName will be appended with iteration e.g.{modelName}_{i}.
	ModelNamePrefix pulumi.StringInput `pulumi:"modelNamePrefix"`
	// Prelabel accuracy threshold used in MLAssist feature.
	PrelabelAccuracyThreshold pulumi.Float64PtrInput `pulumi:"prelabelAccuracyThreshold"`
	// The compute designated for training.
	TrainingComputeBinding ComputeBindingInput `pulumi:"trainingComputeBinding"`
}

func (MLAssistConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MLAssistConfiguration)(nil)).Elem()
}

func (i MLAssistConfigurationArgs) ToMLAssistConfigurationOutput() MLAssistConfigurationOutput {
	return i.ToMLAssistConfigurationOutputWithContext(context.Background())
}

func (i MLAssistConfigurationArgs) ToMLAssistConfigurationOutputWithContext(ctx context.Context) MLAssistConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MLAssistConfigurationOutput)
}

func (i MLAssistConfigurationArgs) ToMLAssistConfigurationPtrOutput() MLAssistConfigurationPtrOutput {
	return i.ToMLAssistConfigurationPtrOutputWithContext(context.Background())
}

func (i MLAssistConfigurationArgs) ToMLAssistConfigurationPtrOutputWithContext(ctx context.Context) MLAssistConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MLAssistConfigurationOutput).ToMLAssistConfigurationPtrOutputWithContext(ctx)
}

// MLAssistConfigurationPtrInput is an input type that accepts MLAssistConfigurationArgs, MLAssistConfigurationPtr and MLAssistConfigurationPtrOutput values.
// You can construct a concrete instance of `MLAssistConfigurationPtrInput` via:
//
//          MLAssistConfigurationArgs{...}
//
//  or:
//
//          nil
type MLAssistConfigurationPtrInput interface {
	pulumi.Input

	ToMLAssistConfigurationPtrOutput() MLAssistConfigurationPtrOutput
	ToMLAssistConfigurationPtrOutputWithContext(context.Context) MLAssistConfigurationPtrOutput
}

type mlassistConfigurationPtrType MLAssistConfigurationArgs

func MLAssistConfigurationPtr(v *MLAssistConfigurationArgs) MLAssistConfigurationPtrInput {
	return (*mlassistConfigurationPtrType)(v)
}

func (*mlassistConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MLAssistConfiguration)(nil)).Elem()
}

func (i *mlassistConfigurationPtrType) ToMLAssistConfigurationPtrOutput() MLAssistConfigurationPtrOutput {
	return i.ToMLAssistConfigurationPtrOutputWithContext(context.Background())
}

func (i *mlassistConfigurationPtrType) ToMLAssistConfigurationPtrOutputWithContext(ctx context.Context) MLAssistConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MLAssistConfigurationPtrOutput)
}

type MLAssistConfigurationOutput struct{ *pulumi.OutputState }

func (MLAssistConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MLAssistConfiguration)(nil)).Elem()
}

func (o MLAssistConfigurationOutput) ToMLAssistConfigurationOutput() MLAssistConfigurationOutput {
	return o
}

func (o MLAssistConfigurationOutput) ToMLAssistConfigurationOutputWithContext(ctx context.Context) MLAssistConfigurationOutput {
	return o
}

func (o MLAssistConfigurationOutput) ToMLAssistConfigurationPtrOutput() MLAssistConfigurationPtrOutput {
	return o.ToMLAssistConfigurationPtrOutputWithContext(context.Background())
}

func (o MLAssistConfigurationOutput) ToMLAssistConfigurationPtrOutputWithContext(ctx context.Context) MLAssistConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MLAssistConfiguration) *MLAssistConfiguration {
		return &v
	}).(MLAssistConfigurationPtrOutput)
}

// The compute designated for inferencing.
func (o MLAssistConfigurationOutput) InferencingComputeBinding() ComputeBindingOutput {
	return o.ApplyT(func(v MLAssistConfiguration) ComputeBinding { return v.InferencingComputeBinding }).(ComputeBindingOutput)
}

// Indicates whether MLAssist feature is enabled.
func (o MLAssistConfigurationOutput) MlAssistEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MLAssistConfiguration) *bool { return v.MlAssistEnabled }).(pulumi.BoolPtrOutput)
}

// Name prefix to use for machine learning model. For each iteration modelName will be appended with iteration e.g.{modelName}_{i}.
func (o MLAssistConfigurationOutput) ModelNamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v MLAssistConfiguration) string { return v.ModelNamePrefix }).(pulumi.StringOutput)
}

// Prelabel accuracy threshold used in MLAssist feature.
func (o MLAssistConfigurationOutput) PrelabelAccuracyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MLAssistConfiguration) *float64 { return v.PrelabelAccuracyThreshold }).(pulumi.Float64PtrOutput)
}

// The compute designated for training.
func (o MLAssistConfigurationOutput) TrainingComputeBinding() ComputeBindingOutput {
	return o.ApplyT(func(v MLAssistConfiguration) ComputeBinding { return v.TrainingComputeBinding }).(ComputeBindingOutput)
}

type MLAssistConfigurationPtrOutput struct{ *pulumi.OutputState }

func (MLAssistConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MLAssistConfiguration)(nil)).Elem()
}

func (o MLAssistConfigurationPtrOutput) ToMLAssistConfigurationPtrOutput() MLAssistConfigurationPtrOutput {
	return o
}

func (o MLAssistConfigurationPtrOutput) ToMLAssistConfigurationPtrOutputWithContext(ctx context.Context) MLAssistConfigurationPtrOutput {
	return o
}

func (o MLAssistConfigurationPtrOutput) Elem() MLAssistConfigurationOutput {
	return o.ApplyT(func(v *MLAssistConfiguration) MLAssistConfiguration {
		if v != nil {
			return *v
		}
		var ret MLAssistConfiguration
		return ret
	}).(MLAssistConfigurationOutput)
}

// The compute designated for inferencing.
func (o MLAssistConfigurationPtrOutput) InferencingComputeBinding() ComputeBindingPtrOutput {
	return o.ApplyT(func(v *MLAssistConfiguration) *ComputeBinding {
		if v == nil {
			return nil
		}
		return &v.InferencingComputeBinding
	}).(ComputeBindingPtrOutput)
}

// Indicates whether MLAssist feature is enabled.
func (o MLAssistConfigurationPtrOutput) MlAssistEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MLAssistConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.MlAssistEnabled
	}).(pulumi.BoolPtrOutput)
}

// Name prefix to use for machine learning model. For each iteration modelName will be appended with iteration e.g.{modelName}_{i}.
func (o MLAssistConfigurationPtrOutput) ModelNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MLAssistConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ModelNamePrefix
	}).(pulumi.StringPtrOutput)
}

// Prelabel accuracy threshold used in MLAssist feature.
func (o MLAssistConfigurationPtrOutput) PrelabelAccuracyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MLAssistConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.PrelabelAccuracyThreshold
	}).(pulumi.Float64PtrOutput)
}

// The compute designated for training.
func (o MLAssistConfigurationPtrOutput) TrainingComputeBinding() ComputeBindingPtrOutput {
	return o.ApplyT(func(v *MLAssistConfiguration) *ComputeBinding {
		if v == nil {
			return nil
		}
		return &v.TrainingComputeBinding
	}).(ComputeBindingPtrOutput)
}

type MLAssistConfigurationResponse struct {
	// The compute designated for inferencing.
	InferencingComputeBinding ComputeBindingResponse `pulumi:"inferencingComputeBinding"`
	// Indicates whether MLAssist feature is enabled.
	MlAssistEnabled *bool `pulumi:"mlAssistEnabled"`
	// Name prefix to use for machine learning model. For each iteration modelName will be appended with iteration e.g.{modelName}_{i}.
	ModelNamePrefix string `pulumi:"modelNamePrefix"`
	// Prelabel accuracy threshold used in MLAssist feature.
	PrelabelAccuracyThreshold *float64 `pulumi:"prelabelAccuracyThreshold"`
	// The compute designated for training.
	TrainingComputeBinding ComputeBindingResponse `pulumi:"trainingComputeBinding"`
}

// MLAssistConfigurationResponseInput is an input type that accepts MLAssistConfigurationResponseArgs and MLAssistConfigurationResponseOutput values.
// You can construct a concrete instance of `MLAssistConfigurationResponseInput` via:
//
//          MLAssistConfigurationResponseArgs{...}
type MLAssistConfigurationResponseInput interface {
	pulumi.Input

	ToMLAssistConfigurationResponseOutput() MLAssistConfigurationResponseOutput
	ToMLAssistConfigurationResponseOutputWithContext(context.Context) MLAssistConfigurationResponseOutput
}

type MLAssistConfigurationResponseArgs struct {
	// The compute designated for inferencing.
	InferencingComputeBinding ComputeBindingResponseInput `pulumi:"inferencingComputeBinding"`
	// Indicates whether MLAssist feature is enabled.
	MlAssistEnabled pulumi.BoolPtrInput `pulumi:"mlAssistEnabled"`
	// Name prefix to use for machine learning model. For each iteration modelName will be appended with iteration e.g.{modelName}_{i}.
	ModelNamePrefix pulumi.StringInput `pulumi:"modelNamePrefix"`
	// Prelabel accuracy threshold used in MLAssist feature.
	PrelabelAccuracyThreshold pulumi.Float64PtrInput `pulumi:"prelabelAccuracyThreshold"`
	// The compute designated for training.
	TrainingComputeBinding ComputeBindingResponseInput `pulumi:"trainingComputeBinding"`
}

func (MLAssistConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MLAssistConfigurationResponse)(nil)).Elem()
}

func (i MLAssistConfigurationResponseArgs) ToMLAssistConfigurationResponseOutput() MLAssistConfigurationResponseOutput {
	return i.ToMLAssistConfigurationResponseOutputWithContext(context.Background())
}

func (i MLAssistConfigurationResponseArgs) ToMLAssistConfigurationResponseOutputWithContext(ctx context.Context) MLAssistConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MLAssistConfigurationResponseOutput)
}

func (i MLAssistConfigurationResponseArgs) ToMLAssistConfigurationResponsePtrOutput() MLAssistConfigurationResponsePtrOutput {
	return i.ToMLAssistConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i MLAssistConfigurationResponseArgs) ToMLAssistConfigurationResponsePtrOutputWithContext(ctx context.Context) MLAssistConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MLAssistConfigurationResponseOutput).ToMLAssistConfigurationResponsePtrOutputWithContext(ctx)
}

// MLAssistConfigurationResponsePtrInput is an input type that accepts MLAssistConfigurationResponseArgs, MLAssistConfigurationResponsePtr and MLAssistConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `MLAssistConfigurationResponsePtrInput` via:
//
//          MLAssistConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type MLAssistConfigurationResponsePtrInput interface {
	pulumi.Input

	ToMLAssistConfigurationResponsePtrOutput() MLAssistConfigurationResponsePtrOutput
	ToMLAssistConfigurationResponsePtrOutputWithContext(context.Context) MLAssistConfigurationResponsePtrOutput
}

type mlassistConfigurationResponsePtrType MLAssistConfigurationResponseArgs

func MLAssistConfigurationResponsePtr(v *MLAssistConfigurationResponseArgs) MLAssistConfigurationResponsePtrInput {
	return (*mlassistConfigurationResponsePtrType)(v)
}

func (*mlassistConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MLAssistConfigurationResponse)(nil)).Elem()
}

func (i *mlassistConfigurationResponsePtrType) ToMLAssistConfigurationResponsePtrOutput() MLAssistConfigurationResponsePtrOutput {
	return i.ToMLAssistConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *mlassistConfigurationResponsePtrType) ToMLAssistConfigurationResponsePtrOutputWithContext(ctx context.Context) MLAssistConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MLAssistConfigurationResponsePtrOutput)
}

type MLAssistConfigurationResponseOutput struct{ *pulumi.OutputState }

func (MLAssistConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MLAssistConfigurationResponse)(nil)).Elem()
}

func (o MLAssistConfigurationResponseOutput) ToMLAssistConfigurationResponseOutput() MLAssistConfigurationResponseOutput {
	return o
}

func (o MLAssistConfigurationResponseOutput) ToMLAssistConfigurationResponseOutputWithContext(ctx context.Context) MLAssistConfigurationResponseOutput {
	return o
}

func (o MLAssistConfigurationResponseOutput) ToMLAssistConfigurationResponsePtrOutput() MLAssistConfigurationResponsePtrOutput {
	return o.ToMLAssistConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o MLAssistConfigurationResponseOutput) ToMLAssistConfigurationResponsePtrOutputWithContext(ctx context.Context) MLAssistConfigurationResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MLAssistConfigurationResponse) *MLAssistConfigurationResponse {
		return &v
	}).(MLAssistConfigurationResponsePtrOutput)
}

// The compute designated for inferencing.
func (o MLAssistConfigurationResponseOutput) InferencingComputeBinding() ComputeBindingResponseOutput {
	return o.ApplyT(func(v MLAssistConfigurationResponse) ComputeBindingResponse { return v.InferencingComputeBinding }).(ComputeBindingResponseOutput)
}

// Indicates whether MLAssist feature is enabled.
func (o MLAssistConfigurationResponseOutput) MlAssistEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MLAssistConfigurationResponse) *bool { return v.MlAssistEnabled }).(pulumi.BoolPtrOutput)
}

// Name prefix to use for machine learning model. For each iteration modelName will be appended with iteration e.g.{modelName}_{i}.
func (o MLAssistConfigurationResponseOutput) ModelNamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v MLAssistConfigurationResponse) string { return v.ModelNamePrefix }).(pulumi.StringOutput)
}

// Prelabel accuracy threshold used in MLAssist feature.
func (o MLAssistConfigurationResponseOutput) PrelabelAccuracyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MLAssistConfigurationResponse) *float64 { return v.PrelabelAccuracyThreshold }).(pulumi.Float64PtrOutput)
}

// The compute designated for training.
func (o MLAssistConfigurationResponseOutput) TrainingComputeBinding() ComputeBindingResponseOutput {
	return o.ApplyT(func(v MLAssistConfigurationResponse) ComputeBindingResponse { return v.TrainingComputeBinding }).(ComputeBindingResponseOutput)
}

type MLAssistConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (MLAssistConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MLAssistConfigurationResponse)(nil)).Elem()
}

func (o MLAssistConfigurationResponsePtrOutput) ToMLAssistConfigurationResponsePtrOutput() MLAssistConfigurationResponsePtrOutput {
	return o
}

func (o MLAssistConfigurationResponsePtrOutput) ToMLAssistConfigurationResponsePtrOutputWithContext(ctx context.Context) MLAssistConfigurationResponsePtrOutput {
	return o
}

func (o MLAssistConfigurationResponsePtrOutput) Elem() MLAssistConfigurationResponseOutput {
	return o.ApplyT(func(v *MLAssistConfigurationResponse) MLAssistConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret MLAssistConfigurationResponse
		return ret
	}).(MLAssistConfigurationResponseOutput)
}

// The compute designated for inferencing.
func (o MLAssistConfigurationResponsePtrOutput) InferencingComputeBinding() ComputeBindingResponsePtrOutput {
	return o.ApplyT(func(v *MLAssistConfigurationResponse) *ComputeBindingResponse {
		if v == nil {
			return nil
		}
		return &v.InferencingComputeBinding
	}).(ComputeBindingResponsePtrOutput)
}

// Indicates whether MLAssist feature is enabled.
func (o MLAssistConfigurationResponsePtrOutput) MlAssistEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MLAssistConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.MlAssistEnabled
	}).(pulumi.BoolPtrOutput)
}

// Name prefix to use for machine learning model. For each iteration modelName will be appended with iteration e.g.{modelName}_{i}.
func (o MLAssistConfigurationResponsePtrOutput) ModelNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MLAssistConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ModelNamePrefix
	}).(pulumi.StringPtrOutput)
}

// Prelabel accuracy threshold used in MLAssist feature.
func (o MLAssistConfigurationResponsePtrOutput) PrelabelAccuracyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MLAssistConfigurationResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.PrelabelAccuracyThreshold
	}).(pulumi.Float64PtrOutput)
}

// The compute designated for training.
func (o MLAssistConfigurationResponsePtrOutput) TrainingComputeBinding() ComputeBindingResponsePtrOutput {
	return o.ApplyT(func(v *MLAssistConfigurationResponse) *ComputeBindingResponse {
		if v == nil {
			return nil
		}
		return &v.TrainingComputeBinding
	}).(ComputeBindingResponsePtrOutput)
}

type MachineLearningServiceErrorResponse struct {
	// The error response.
	Error ErrorResponseResponse `pulumi:"error"`
}

// MachineLearningServiceErrorResponseInput is an input type that accepts MachineLearningServiceErrorResponseArgs and MachineLearningServiceErrorResponseOutput values.
// You can construct a concrete instance of `MachineLearningServiceErrorResponseInput` via:
//
//          MachineLearningServiceErrorResponseArgs{...}
type MachineLearningServiceErrorResponseInput interface {
	pulumi.Input

	ToMachineLearningServiceErrorResponseOutput() MachineLearningServiceErrorResponseOutput
	ToMachineLearningServiceErrorResponseOutputWithContext(context.Context) MachineLearningServiceErrorResponseOutput
}

type MachineLearningServiceErrorResponseArgs struct {
	// The error response.
	Error ErrorResponseResponseInput `pulumi:"error"`
}

func (MachineLearningServiceErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineLearningServiceErrorResponse)(nil)).Elem()
}

func (i MachineLearningServiceErrorResponseArgs) ToMachineLearningServiceErrorResponseOutput() MachineLearningServiceErrorResponseOutput {
	return i.ToMachineLearningServiceErrorResponseOutputWithContext(context.Background())
}

func (i MachineLearningServiceErrorResponseArgs) ToMachineLearningServiceErrorResponseOutputWithContext(ctx context.Context) MachineLearningServiceErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineLearningServiceErrorResponseOutput)
}

// MachineLearningServiceErrorResponseArrayInput is an input type that accepts MachineLearningServiceErrorResponseArray and MachineLearningServiceErrorResponseArrayOutput values.
// You can construct a concrete instance of `MachineLearningServiceErrorResponseArrayInput` via:
//
//          MachineLearningServiceErrorResponseArray{ MachineLearningServiceErrorResponseArgs{...} }
type MachineLearningServiceErrorResponseArrayInput interface {
	pulumi.Input

	ToMachineLearningServiceErrorResponseArrayOutput() MachineLearningServiceErrorResponseArrayOutput
	ToMachineLearningServiceErrorResponseArrayOutputWithContext(context.Context) MachineLearningServiceErrorResponseArrayOutput
}

type MachineLearningServiceErrorResponseArray []MachineLearningServiceErrorResponseInput

func (MachineLearningServiceErrorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineLearningServiceErrorResponse)(nil)).Elem()
}

func (i MachineLearningServiceErrorResponseArray) ToMachineLearningServiceErrorResponseArrayOutput() MachineLearningServiceErrorResponseArrayOutput {
	return i.ToMachineLearningServiceErrorResponseArrayOutputWithContext(context.Background())
}

func (i MachineLearningServiceErrorResponseArray) ToMachineLearningServiceErrorResponseArrayOutputWithContext(ctx context.Context) MachineLearningServiceErrorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineLearningServiceErrorResponseArrayOutput)
}

type MachineLearningServiceErrorResponseOutput struct{ *pulumi.OutputState }

func (MachineLearningServiceErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineLearningServiceErrorResponse)(nil)).Elem()
}

func (o MachineLearningServiceErrorResponseOutput) ToMachineLearningServiceErrorResponseOutput() MachineLearningServiceErrorResponseOutput {
	return o
}

func (o MachineLearningServiceErrorResponseOutput) ToMachineLearningServiceErrorResponseOutputWithContext(ctx context.Context) MachineLearningServiceErrorResponseOutput {
	return o
}

// The error response.
func (o MachineLearningServiceErrorResponseOutput) Error() ErrorResponseResponseOutput {
	return o.ApplyT(func(v MachineLearningServiceErrorResponse) ErrorResponseResponse { return v.Error }).(ErrorResponseResponseOutput)
}

type MachineLearningServiceErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (MachineLearningServiceErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineLearningServiceErrorResponse)(nil)).Elem()
}

func (o MachineLearningServiceErrorResponseArrayOutput) ToMachineLearningServiceErrorResponseArrayOutput() MachineLearningServiceErrorResponseArrayOutput {
	return o
}

func (o MachineLearningServiceErrorResponseArrayOutput) ToMachineLearningServiceErrorResponseArrayOutputWithContext(ctx context.Context) MachineLearningServiceErrorResponseArrayOutput {
	return o
}

func (o MachineLearningServiceErrorResponseArrayOutput) Index(i pulumi.IntInput) MachineLearningServiceErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachineLearningServiceErrorResponse {
		return vs[0].([]MachineLearningServiceErrorResponse)[vs[1].(int)]
	}).(MachineLearningServiceErrorResponseOutput)
}

type ManagedIdentity struct {
	// Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.
	ClientId *string `pulumi:"clientId"`
	// Enum to determine identity framework.
	// Expected value is 'Managed'.
	IdentityType string `pulumi:"identityType"`
	// Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.
	ObjectId *string `pulumi:"objectId"`
	// Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field.
	ResourceId *string `pulumi:"resourceId"`
}

// ManagedIdentityInput is an input type that accepts ManagedIdentityArgs and ManagedIdentityOutput values.
// You can construct a concrete instance of `ManagedIdentityInput` via:
//
//          ManagedIdentityArgs{...}
type ManagedIdentityInput interface {
	pulumi.Input

	ToManagedIdentityOutput() ManagedIdentityOutput
	ToManagedIdentityOutputWithContext(context.Context) ManagedIdentityOutput
}

type ManagedIdentityArgs struct {
	// Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Enum to determine identity framework.
	// Expected value is 'Managed'.
	IdentityType pulumi.StringInput `pulumi:"identityType"`
	// Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ManagedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentity)(nil)).Elem()
}

func (i ManagedIdentityArgs) ToManagedIdentityOutput() ManagedIdentityOutput {
	return i.ToManagedIdentityOutputWithContext(context.Background())
}

func (i ManagedIdentityArgs) ToManagedIdentityOutputWithContext(ctx context.Context) ManagedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityOutput)
}

type ManagedIdentityOutput struct{ *pulumi.OutputState }

func (ManagedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentity)(nil)).Elem()
}

func (o ManagedIdentityOutput) ToManagedIdentityOutput() ManagedIdentityOutput {
	return o
}

func (o ManagedIdentityOutput) ToManagedIdentityOutputWithContext(ctx context.Context) ManagedIdentityOutput {
	return o
}

// Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.
func (o ManagedIdentityOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentity) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Enum to determine identity framework.
// Expected value is 'Managed'.
func (o ManagedIdentityOutput) IdentityType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIdentity) string { return v.IdentityType }).(pulumi.StringOutput)
}

// Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.
func (o ManagedIdentityOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentity) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field.
func (o ManagedIdentityOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentity) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ManagedIdentityResponse struct {
	// Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.
	ClientId *string `pulumi:"clientId"`
	// Enum to determine identity framework.
	// Expected value is 'Managed'.
	IdentityType string `pulumi:"identityType"`
	// Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.
	ObjectId *string `pulumi:"objectId"`
	// Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field.
	ResourceId *string `pulumi:"resourceId"`
}

// ManagedIdentityResponseInput is an input type that accepts ManagedIdentityResponseArgs and ManagedIdentityResponseOutput values.
// You can construct a concrete instance of `ManagedIdentityResponseInput` via:
//
//          ManagedIdentityResponseArgs{...}
type ManagedIdentityResponseInput interface {
	pulumi.Input

	ToManagedIdentityResponseOutput() ManagedIdentityResponseOutput
	ToManagedIdentityResponseOutputWithContext(context.Context) ManagedIdentityResponseOutput
}

type ManagedIdentityResponseArgs struct {
	// Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Enum to determine identity framework.
	// Expected value is 'Managed'.
	IdentityType pulumi.StringInput `pulumi:"identityType"`
	// Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ManagedIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityResponse)(nil)).Elem()
}

func (i ManagedIdentityResponseArgs) ToManagedIdentityResponseOutput() ManagedIdentityResponseOutput {
	return i.ToManagedIdentityResponseOutputWithContext(context.Background())
}

func (i ManagedIdentityResponseArgs) ToManagedIdentityResponseOutputWithContext(ctx context.Context) ManagedIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityResponseOutput)
}

type ManagedIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityResponse)(nil)).Elem()
}

func (o ManagedIdentityResponseOutput) ToManagedIdentityResponseOutput() ManagedIdentityResponseOutput {
	return o
}

func (o ManagedIdentityResponseOutput) ToManagedIdentityResponseOutputWithContext(ctx context.Context) ManagedIdentityResponseOutput {
	return o
}

// Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.
func (o ManagedIdentityResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Enum to determine identity framework.
// Expected value is 'Managed'.
func (o ManagedIdentityResponseOutput) IdentityType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIdentityResponse) string { return v.IdentityType }).(pulumi.StringOutput)
}

// Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.
func (o ManagedIdentityResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field.
func (o ManagedIdentityResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ManagedOnlineDeployment struct {
	// If true, enables Application Insights logging.
	AppInsightsEnabled *bool `pulumi:"appInsightsEnabled"`
	// Code configuration for the endpoint deployment.
	CodeConfiguration *CodeConfiguration `pulumi:"codeConfiguration"`
	// Description of the endpoint deployment.
	Description *string `pulumi:"description"`
	// Enum to determine endpoint compute type.
	// Expected value is 'Managed'.
	EndpointComputeType string `pulumi:"endpointComputeType"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Compute instance type.
	InstanceType *string `pulumi:"instanceType"`
	// Deployment container liveness/readiness probe configuration.
	LivenessProbe *ProbeSettings `pulumi:"livenessProbe"`
	// Reference to the model asset for the endpoint deployment.
	Model interface{} `pulumi:"model"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// Deployment container liveness/readiness probe configuration.
	ReadinessProbe *ProbeSettings `pulumi:"readinessProbe"`
	// Online deployment scoring requests configuration.
	RequestSettings *OnlineRequestSettings `pulumi:"requestSettings"`
	// Online deployment scaling configuration.
	ScaleSettings interface{} `pulumi:"scaleSettings"`
}

// ManagedOnlineDeploymentInput is an input type that accepts ManagedOnlineDeploymentArgs and ManagedOnlineDeploymentOutput values.
// You can construct a concrete instance of `ManagedOnlineDeploymentInput` via:
//
//          ManagedOnlineDeploymentArgs{...}
type ManagedOnlineDeploymentInput interface {
	pulumi.Input

	ToManagedOnlineDeploymentOutput() ManagedOnlineDeploymentOutput
	ToManagedOnlineDeploymentOutputWithContext(context.Context) ManagedOnlineDeploymentOutput
}

type ManagedOnlineDeploymentArgs struct {
	// If true, enables Application Insights logging.
	AppInsightsEnabled pulumi.BoolPtrInput `pulumi:"appInsightsEnabled"`
	// Code configuration for the endpoint deployment.
	CodeConfiguration CodeConfigurationPtrInput `pulumi:"codeConfiguration"`
	// Description of the endpoint deployment.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enum to determine endpoint compute type.
	// Expected value is 'Managed'.
	EndpointComputeType pulumi.StringInput `pulumi:"endpointComputeType"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// Compute instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Deployment container liveness/readiness probe configuration.
	LivenessProbe ProbeSettingsPtrInput `pulumi:"livenessProbe"`
	// Reference to the model asset for the endpoint deployment.
	Model pulumi.Input `pulumi:"model"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Deployment container liveness/readiness probe configuration.
	ReadinessProbe ProbeSettingsPtrInput `pulumi:"readinessProbe"`
	// Online deployment scoring requests configuration.
	RequestSettings OnlineRequestSettingsPtrInput `pulumi:"requestSettings"`
	// Online deployment scaling configuration.
	ScaleSettings pulumi.Input `pulumi:"scaleSettings"`
}

func (ManagedOnlineDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedOnlineDeployment)(nil)).Elem()
}

func (i ManagedOnlineDeploymentArgs) ToManagedOnlineDeploymentOutput() ManagedOnlineDeploymentOutput {
	return i.ToManagedOnlineDeploymentOutputWithContext(context.Background())
}

func (i ManagedOnlineDeploymentArgs) ToManagedOnlineDeploymentOutputWithContext(ctx context.Context) ManagedOnlineDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedOnlineDeploymentOutput)
}

type ManagedOnlineDeploymentOutput struct{ *pulumi.OutputState }

func (ManagedOnlineDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedOnlineDeployment)(nil)).Elem()
}

func (o ManagedOnlineDeploymentOutput) ToManagedOnlineDeploymentOutput() ManagedOnlineDeploymentOutput {
	return o
}

func (o ManagedOnlineDeploymentOutput) ToManagedOnlineDeploymentOutputWithContext(ctx context.Context) ManagedOnlineDeploymentOutput {
	return o
}

// If true, enables Application Insights logging.
func (o ManagedOnlineDeploymentOutput) AppInsightsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) *bool { return v.AppInsightsEnabled }).(pulumi.BoolPtrOutput)
}

// Code configuration for the endpoint deployment.
func (o ManagedOnlineDeploymentOutput) CodeConfiguration() CodeConfigurationPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) *CodeConfiguration { return v.CodeConfiguration }).(CodeConfigurationPtrOutput)
}

// Description of the endpoint deployment.
func (o ManagedOnlineDeploymentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine endpoint compute type.
// Expected value is 'Managed'.
func (o ManagedOnlineDeploymentOutput) EndpointComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) string { return v.EndpointComputeType }).(pulumi.StringOutput)
}

// ARM resource ID of the environment specification for the endpoint deployment.
func (o ManagedOnlineDeploymentOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables configuration for the deployment.
func (o ManagedOnlineDeploymentOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Compute instance type.
func (o ManagedOnlineDeploymentOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Deployment container liveness/readiness probe configuration.
func (o ManagedOnlineDeploymentOutput) LivenessProbe() ProbeSettingsPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) *ProbeSettings { return v.LivenessProbe }).(ProbeSettingsPtrOutput)
}

// Reference to the model asset for the endpoint deployment.
func (o ManagedOnlineDeploymentOutput) Model() pulumi.AnyOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) interface{} { return v.Model }).(pulumi.AnyOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o ManagedOnlineDeploymentOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Deployment container liveness/readiness probe configuration.
func (o ManagedOnlineDeploymentOutput) ReadinessProbe() ProbeSettingsPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) *ProbeSettings { return v.ReadinessProbe }).(ProbeSettingsPtrOutput)
}

// Online deployment scoring requests configuration.
func (o ManagedOnlineDeploymentOutput) RequestSettings() OnlineRequestSettingsPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) *OnlineRequestSettings { return v.RequestSettings }).(OnlineRequestSettingsPtrOutput)
}

// Online deployment scaling configuration.
func (o ManagedOnlineDeploymentOutput) ScaleSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) interface{} { return v.ScaleSettings }).(pulumi.AnyOutput)
}

type ManagedOnlineDeploymentResponse struct {
	// If true, enables Application Insights logging.
	AppInsightsEnabled *bool `pulumi:"appInsightsEnabled"`
	// Code configuration for the endpoint deployment.
	CodeConfiguration *CodeConfigurationResponse `pulumi:"codeConfiguration"`
	// Description of the endpoint deployment.
	Description *string `pulumi:"description"`
	// Enum to determine endpoint compute type.
	// Expected value is 'Managed'.
	EndpointComputeType string `pulumi:"endpointComputeType"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Compute instance type.
	InstanceType *string `pulumi:"instanceType"`
	// Deployment container liveness/readiness probe configuration.
	LivenessProbe *ProbeSettingsResponse `pulumi:"livenessProbe"`
	// Reference to the model asset for the endpoint deployment.
	Model interface{} `pulumi:"model"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// Provisioning state for the endpoint deployment.
	ProvisioningState string `pulumi:"provisioningState"`
	// Deployment container liveness/readiness probe configuration.
	ReadinessProbe *ProbeSettingsResponse `pulumi:"readinessProbe"`
	// Online deployment scoring requests configuration.
	RequestSettings *OnlineRequestSettingsResponse `pulumi:"requestSettings"`
	// Online deployment scaling configuration.
	ScaleSettings interface{} `pulumi:"scaleSettings"`
}

// ManagedOnlineDeploymentResponseInput is an input type that accepts ManagedOnlineDeploymentResponseArgs and ManagedOnlineDeploymentResponseOutput values.
// You can construct a concrete instance of `ManagedOnlineDeploymentResponseInput` via:
//
//          ManagedOnlineDeploymentResponseArgs{...}
type ManagedOnlineDeploymentResponseInput interface {
	pulumi.Input

	ToManagedOnlineDeploymentResponseOutput() ManagedOnlineDeploymentResponseOutput
	ToManagedOnlineDeploymentResponseOutputWithContext(context.Context) ManagedOnlineDeploymentResponseOutput
}

type ManagedOnlineDeploymentResponseArgs struct {
	// If true, enables Application Insights logging.
	AppInsightsEnabled pulumi.BoolPtrInput `pulumi:"appInsightsEnabled"`
	// Code configuration for the endpoint deployment.
	CodeConfiguration CodeConfigurationResponsePtrInput `pulumi:"codeConfiguration"`
	// Description of the endpoint deployment.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enum to determine endpoint compute type.
	// Expected value is 'Managed'.
	EndpointComputeType pulumi.StringInput `pulumi:"endpointComputeType"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// Compute instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Deployment container liveness/readiness probe configuration.
	LivenessProbe ProbeSettingsResponsePtrInput `pulumi:"livenessProbe"`
	// Reference to the model asset for the endpoint deployment.
	Model pulumi.Input `pulumi:"model"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Provisioning state for the endpoint deployment.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Deployment container liveness/readiness probe configuration.
	ReadinessProbe ProbeSettingsResponsePtrInput `pulumi:"readinessProbe"`
	// Online deployment scoring requests configuration.
	RequestSettings OnlineRequestSettingsResponsePtrInput `pulumi:"requestSettings"`
	// Online deployment scaling configuration.
	ScaleSettings pulumi.Input `pulumi:"scaleSettings"`
}

func (ManagedOnlineDeploymentResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedOnlineDeploymentResponse)(nil)).Elem()
}

func (i ManagedOnlineDeploymentResponseArgs) ToManagedOnlineDeploymentResponseOutput() ManagedOnlineDeploymentResponseOutput {
	return i.ToManagedOnlineDeploymentResponseOutputWithContext(context.Background())
}

func (i ManagedOnlineDeploymentResponseArgs) ToManagedOnlineDeploymentResponseOutputWithContext(ctx context.Context) ManagedOnlineDeploymentResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedOnlineDeploymentResponseOutput)
}

type ManagedOnlineDeploymentResponseOutput struct{ *pulumi.OutputState }

func (ManagedOnlineDeploymentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedOnlineDeploymentResponse)(nil)).Elem()
}

func (o ManagedOnlineDeploymentResponseOutput) ToManagedOnlineDeploymentResponseOutput() ManagedOnlineDeploymentResponseOutput {
	return o
}

func (o ManagedOnlineDeploymentResponseOutput) ToManagedOnlineDeploymentResponseOutputWithContext(ctx context.Context) ManagedOnlineDeploymentResponseOutput {
	return o
}

// If true, enables Application Insights logging.
func (o ManagedOnlineDeploymentResponseOutput) AppInsightsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) *bool { return v.AppInsightsEnabled }).(pulumi.BoolPtrOutput)
}

// Code configuration for the endpoint deployment.
func (o ManagedOnlineDeploymentResponseOutput) CodeConfiguration() CodeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) *CodeConfigurationResponse { return v.CodeConfiguration }).(CodeConfigurationResponsePtrOutput)
}

// Description of the endpoint deployment.
func (o ManagedOnlineDeploymentResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine endpoint compute type.
// Expected value is 'Managed'.
func (o ManagedOnlineDeploymentResponseOutput) EndpointComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) string { return v.EndpointComputeType }).(pulumi.StringOutput)
}

// ARM resource ID of the environment specification for the endpoint deployment.
func (o ManagedOnlineDeploymentResponseOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables configuration for the deployment.
func (o ManagedOnlineDeploymentResponseOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Compute instance type.
func (o ManagedOnlineDeploymentResponseOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Deployment container liveness/readiness probe configuration.
func (o ManagedOnlineDeploymentResponseOutput) LivenessProbe() ProbeSettingsResponsePtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) *ProbeSettingsResponse { return v.LivenessProbe }).(ProbeSettingsResponsePtrOutput)
}

// Reference to the model asset for the endpoint deployment.
func (o ManagedOnlineDeploymentResponseOutput) Model() pulumi.AnyOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) interface{} { return v.Model }).(pulumi.AnyOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o ManagedOnlineDeploymentResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Provisioning state for the endpoint deployment.
func (o ManagedOnlineDeploymentResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Deployment container liveness/readiness probe configuration.
func (o ManagedOnlineDeploymentResponseOutput) ReadinessProbe() ProbeSettingsResponsePtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) *ProbeSettingsResponse { return v.ReadinessProbe }).(ProbeSettingsResponsePtrOutput)
}

// Online deployment scoring requests configuration.
func (o ManagedOnlineDeploymentResponseOutput) RequestSettings() OnlineRequestSettingsResponsePtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) *OnlineRequestSettingsResponse { return v.RequestSettings }).(OnlineRequestSettingsResponsePtrOutput)
}

// Online deployment scaling configuration.
func (o ManagedOnlineDeploymentResponseOutput) ScaleSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) interface{} { return v.ScaleSettings }).(pulumi.AnyOutput)
}

type ManualScaleSettings struct {
	// Fixed number of instances for this deployment.
	InstanceCount *int `pulumi:"instanceCount"`
	// Maximum number of instances for this deployment.
	MaxInstances *int `pulumi:"maxInstances"`
	// Minimum number of instances for this deployment.
	MinInstances *int `pulumi:"minInstances"`
	// Expected value is 'Manual'.
	ScaleType string `pulumi:"scaleType"`
}

// ManualScaleSettingsInput is an input type that accepts ManualScaleSettingsArgs and ManualScaleSettingsOutput values.
// You can construct a concrete instance of `ManualScaleSettingsInput` via:
//
//          ManualScaleSettingsArgs{...}
type ManualScaleSettingsInput interface {
	pulumi.Input

	ToManualScaleSettingsOutput() ManualScaleSettingsOutput
	ToManualScaleSettingsOutputWithContext(context.Context) ManualScaleSettingsOutput
}

type ManualScaleSettingsArgs struct {
	// Fixed number of instances for this deployment.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// Maximum number of instances for this deployment.
	MaxInstances pulumi.IntPtrInput `pulumi:"maxInstances"`
	// Minimum number of instances for this deployment.
	MinInstances pulumi.IntPtrInput `pulumi:"minInstances"`
	// Expected value is 'Manual'.
	ScaleType pulumi.StringInput `pulumi:"scaleType"`
}

func (ManualScaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScaleSettings)(nil)).Elem()
}

func (i ManualScaleSettingsArgs) ToManualScaleSettingsOutput() ManualScaleSettingsOutput {
	return i.ToManualScaleSettingsOutputWithContext(context.Background())
}

func (i ManualScaleSettingsArgs) ToManualScaleSettingsOutputWithContext(ctx context.Context) ManualScaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScaleSettingsOutput)
}

type ManualScaleSettingsOutput struct{ *pulumi.OutputState }

func (ManualScaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScaleSettings)(nil)).Elem()
}

func (o ManualScaleSettingsOutput) ToManualScaleSettingsOutput() ManualScaleSettingsOutput {
	return o
}

func (o ManualScaleSettingsOutput) ToManualScaleSettingsOutputWithContext(ctx context.Context) ManualScaleSettingsOutput {
	return o
}

// Fixed number of instances for this deployment.
func (o ManualScaleSettingsOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualScaleSettings) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// Maximum number of instances for this deployment.
func (o ManualScaleSettingsOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualScaleSettings) *int { return v.MaxInstances }).(pulumi.IntPtrOutput)
}

// Minimum number of instances for this deployment.
func (o ManualScaleSettingsOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualScaleSettings) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

// Expected value is 'Manual'.
func (o ManualScaleSettingsOutput) ScaleType() pulumi.StringOutput {
	return o.ApplyT(func(v ManualScaleSettings) string { return v.ScaleType }).(pulumi.StringOutput)
}

type ManualScaleSettingsResponse struct {
	// Fixed number of instances for this deployment.
	InstanceCount *int `pulumi:"instanceCount"`
	// Maximum number of instances for this deployment.
	MaxInstances *int `pulumi:"maxInstances"`
	// Minimum number of instances for this deployment.
	MinInstances *int `pulumi:"minInstances"`
	// Expected value is 'Manual'.
	ScaleType string `pulumi:"scaleType"`
}

// ManualScaleSettingsResponseInput is an input type that accepts ManualScaleSettingsResponseArgs and ManualScaleSettingsResponseOutput values.
// You can construct a concrete instance of `ManualScaleSettingsResponseInput` via:
//
//          ManualScaleSettingsResponseArgs{...}
type ManualScaleSettingsResponseInput interface {
	pulumi.Input

	ToManualScaleSettingsResponseOutput() ManualScaleSettingsResponseOutput
	ToManualScaleSettingsResponseOutputWithContext(context.Context) ManualScaleSettingsResponseOutput
}

type ManualScaleSettingsResponseArgs struct {
	// Fixed number of instances for this deployment.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// Maximum number of instances for this deployment.
	MaxInstances pulumi.IntPtrInput `pulumi:"maxInstances"`
	// Minimum number of instances for this deployment.
	MinInstances pulumi.IntPtrInput `pulumi:"minInstances"`
	// Expected value is 'Manual'.
	ScaleType pulumi.StringInput `pulumi:"scaleType"`
}

func (ManualScaleSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScaleSettingsResponse)(nil)).Elem()
}

func (i ManualScaleSettingsResponseArgs) ToManualScaleSettingsResponseOutput() ManualScaleSettingsResponseOutput {
	return i.ToManualScaleSettingsResponseOutputWithContext(context.Background())
}

func (i ManualScaleSettingsResponseArgs) ToManualScaleSettingsResponseOutputWithContext(ctx context.Context) ManualScaleSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScaleSettingsResponseOutput)
}

type ManualScaleSettingsResponseOutput struct{ *pulumi.OutputState }

func (ManualScaleSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScaleSettingsResponse)(nil)).Elem()
}

func (o ManualScaleSettingsResponseOutput) ToManualScaleSettingsResponseOutput() ManualScaleSettingsResponseOutput {
	return o
}

func (o ManualScaleSettingsResponseOutput) ToManualScaleSettingsResponseOutputWithContext(ctx context.Context) ManualScaleSettingsResponseOutput {
	return o
}

// Fixed number of instances for this deployment.
func (o ManualScaleSettingsResponseOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualScaleSettingsResponse) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// Maximum number of instances for this deployment.
func (o ManualScaleSettingsResponseOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualScaleSettingsResponse) *int { return v.MaxInstances }).(pulumi.IntPtrOutput)
}

// Minimum number of instances for this deployment.
func (o ManualScaleSettingsResponseOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualScaleSettingsResponse) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

// Expected value is 'Manual'.
func (o ManualScaleSettingsResponseOutput) ScaleType() pulumi.StringOutput {
	return o.ApplyT(func(v ManualScaleSettingsResponse) string { return v.ScaleType }).(pulumi.StringOutput)
}

type MedianStoppingPolicy struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'MedianStopping'.
	PolicyType string `pulumi:"policyType"`
}

// MedianStoppingPolicyInput is an input type that accepts MedianStoppingPolicyArgs and MedianStoppingPolicyOutput values.
// You can construct a concrete instance of `MedianStoppingPolicyInput` via:
//
//          MedianStoppingPolicyArgs{...}
type MedianStoppingPolicyInput interface {
	pulumi.Input

	ToMedianStoppingPolicyOutput() MedianStoppingPolicyOutput
	ToMedianStoppingPolicyOutputWithContext(context.Context) MedianStoppingPolicyOutput
}

type MedianStoppingPolicyArgs struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation pulumi.IntPtrInput `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval pulumi.IntPtrInput `pulumi:"evaluationInterval"`
	// Expected value is 'MedianStopping'.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
}

func (MedianStoppingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MedianStoppingPolicy)(nil)).Elem()
}

func (i MedianStoppingPolicyArgs) ToMedianStoppingPolicyOutput() MedianStoppingPolicyOutput {
	return i.ToMedianStoppingPolicyOutputWithContext(context.Background())
}

func (i MedianStoppingPolicyArgs) ToMedianStoppingPolicyOutputWithContext(ctx context.Context) MedianStoppingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MedianStoppingPolicyOutput)
}

type MedianStoppingPolicyOutput struct{ *pulumi.OutputState }

func (MedianStoppingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MedianStoppingPolicy)(nil)).Elem()
}

func (o MedianStoppingPolicyOutput) ToMedianStoppingPolicyOutput() MedianStoppingPolicyOutput {
	return o
}

func (o MedianStoppingPolicyOutput) ToMedianStoppingPolicyOutputWithContext(ctx context.Context) MedianStoppingPolicyOutput {
	return o
}

// Number of intervals by which to delay the first evaluation.
func (o MedianStoppingPolicyOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MedianStoppingPolicy) *int { return v.DelayEvaluation }).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o MedianStoppingPolicyOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MedianStoppingPolicy) *int { return v.EvaluationInterval }).(pulumi.IntPtrOutput)
}

// Expected value is 'MedianStopping'.
func (o MedianStoppingPolicyOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v MedianStoppingPolicy) string { return v.PolicyType }).(pulumi.StringOutput)
}

type MedianStoppingPolicyResponse struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'MedianStopping'.
	PolicyType string `pulumi:"policyType"`
}

// MedianStoppingPolicyResponseInput is an input type that accepts MedianStoppingPolicyResponseArgs and MedianStoppingPolicyResponseOutput values.
// You can construct a concrete instance of `MedianStoppingPolicyResponseInput` via:
//
//          MedianStoppingPolicyResponseArgs{...}
type MedianStoppingPolicyResponseInput interface {
	pulumi.Input

	ToMedianStoppingPolicyResponseOutput() MedianStoppingPolicyResponseOutput
	ToMedianStoppingPolicyResponseOutputWithContext(context.Context) MedianStoppingPolicyResponseOutput
}

type MedianStoppingPolicyResponseArgs struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation pulumi.IntPtrInput `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval pulumi.IntPtrInput `pulumi:"evaluationInterval"`
	// Expected value is 'MedianStopping'.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
}

func (MedianStoppingPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MedianStoppingPolicyResponse)(nil)).Elem()
}

func (i MedianStoppingPolicyResponseArgs) ToMedianStoppingPolicyResponseOutput() MedianStoppingPolicyResponseOutput {
	return i.ToMedianStoppingPolicyResponseOutputWithContext(context.Background())
}

func (i MedianStoppingPolicyResponseArgs) ToMedianStoppingPolicyResponseOutputWithContext(ctx context.Context) MedianStoppingPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MedianStoppingPolicyResponseOutput)
}

type MedianStoppingPolicyResponseOutput struct{ *pulumi.OutputState }

func (MedianStoppingPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MedianStoppingPolicyResponse)(nil)).Elem()
}

func (o MedianStoppingPolicyResponseOutput) ToMedianStoppingPolicyResponseOutput() MedianStoppingPolicyResponseOutput {
	return o
}

func (o MedianStoppingPolicyResponseOutput) ToMedianStoppingPolicyResponseOutputWithContext(ctx context.Context) MedianStoppingPolicyResponseOutput {
	return o
}

// Number of intervals by which to delay the first evaluation.
func (o MedianStoppingPolicyResponseOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MedianStoppingPolicyResponse) *int { return v.DelayEvaluation }).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o MedianStoppingPolicyResponseOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MedianStoppingPolicyResponse) *int { return v.EvaluationInterval }).(pulumi.IntPtrOutput)
}

// Expected value is 'MedianStopping'.
func (o MedianStoppingPolicyResponseOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v MedianStoppingPolicyResponse) string { return v.PolicyType }).(pulumi.StringOutput)
}

type Model struct {
	// The Model creation time (UTC).
	CreatedTime *string `pulumi:"createdTime"`
	// The list of datasets associated with the model.
	Datasets []DatasetReference `pulumi:"datasets"`
	// Models derived from this model
	DerivedModelIds []string `pulumi:"derivedModelIds"`
	// The Model description text.
	Description *string `pulumi:"description"`
	// The name of the experiment where this model was created.
	ExperimentName *string `pulumi:"experimentName"`
	// The Model framework.
	Framework *string `pulumi:"framework"`
	// The Model framework version.
	FrameworkVersion *string `pulumi:"frameworkVersion"`
	// The Model Id.
	Id *string `pulumi:"id"`
	// The Model tag dictionary. Items are mutable.
	KvTags map[string]string `pulumi:"kvTags"`
	// The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
	MimeType string `pulumi:"mimeType"`
	// The Model last modified time (UTC).
	ModifiedTime *string `pulumi:"modifiedTime"`
	// The Model name.
	Name string `pulumi:"name"`
	// The Parent Model Id.
	ParentModelId *string `pulumi:"parentModelId"`
	// The Model property dictionary. Properties are immutable.
	Properties map[string]string `pulumi:"properties"`
	// Resource requirements for the model
	ResourceRequirements *ContainerResourceRequirements `pulumi:"resourceRequirements"`
	// The RunId that created this model.
	RunId *string `pulumi:"runId"`
	// Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleInputData *string `pulumi:"sampleInputData"`
	// Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleOutputData *string `pulumi:"sampleOutputData"`
	// Indicates whether we need to unpack the Model during docker Image creation.
	Unpack *bool `pulumi:"unpack"`
	// The URL of the Model. Usually a SAS URL.
	Url string `pulumi:"url"`
	// The Model version assigned by Model Management Service.
	Version *float64 `pulumi:"version"`
}

// ModelInput is an input type that accepts ModelArgs and ModelOutput values.
// You can construct a concrete instance of `ModelInput` via:
//
//          ModelArgs{...}
type ModelInput interface {
	pulumi.Input

	ToModelOutput() ModelOutput
	ToModelOutputWithContext(context.Context) ModelOutput
}

type ModelArgs struct {
	// The Model creation time (UTC).
	CreatedTime pulumi.StringPtrInput `pulumi:"createdTime"`
	// The list of datasets associated with the model.
	Datasets DatasetReferenceArrayInput `pulumi:"datasets"`
	// Models derived from this model
	DerivedModelIds pulumi.StringArrayInput `pulumi:"derivedModelIds"`
	// The Model description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the experiment where this model was created.
	ExperimentName pulumi.StringPtrInput `pulumi:"experimentName"`
	// The Model framework.
	Framework pulumi.StringPtrInput `pulumi:"framework"`
	// The Model framework version.
	FrameworkVersion pulumi.StringPtrInput `pulumi:"frameworkVersion"`
	// The Model Id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Model tag dictionary. Items are mutable.
	KvTags pulumi.StringMapInput `pulumi:"kvTags"`
	// The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
	MimeType pulumi.StringInput `pulumi:"mimeType"`
	// The Model last modified time (UTC).
	ModifiedTime pulumi.StringPtrInput `pulumi:"modifiedTime"`
	// The Model name.
	Name pulumi.StringInput `pulumi:"name"`
	// The Parent Model Id.
	ParentModelId pulumi.StringPtrInput `pulumi:"parentModelId"`
	// The Model property dictionary. Properties are immutable.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Resource requirements for the model
	ResourceRequirements ContainerResourceRequirementsPtrInput `pulumi:"resourceRequirements"`
	// The RunId that created this model.
	RunId pulumi.StringPtrInput `pulumi:"runId"`
	// Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleInputData pulumi.StringPtrInput `pulumi:"sampleInputData"`
	// Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleOutputData pulumi.StringPtrInput `pulumi:"sampleOutputData"`
	// Indicates whether we need to unpack the Model during docker Image creation.
	Unpack pulumi.BoolPtrInput `pulumi:"unpack"`
	// The URL of the Model. Usually a SAS URL.
	Url pulumi.StringInput `pulumi:"url"`
	// The Model version assigned by Model Management Service.
	Version pulumi.Float64PtrInput `pulumi:"version"`
}

func (ModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Model)(nil)).Elem()
}

func (i ModelArgs) ToModelOutput() ModelOutput {
	return i.ToModelOutputWithContext(context.Background())
}

func (i ModelArgs) ToModelOutputWithContext(ctx context.Context) ModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelOutput)
}

// ModelArrayInput is an input type that accepts ModelArray and ModelArrayOutput values.
// You can construct a concrete instance of `ModelArrayInput` via:
//
//          ModelArray{ ModelArgs{...} }
type ModelArrayInput interface {
	pulumi.Input

	ToModelArrayOutput() ModelArrayOutput
	ToModelArrayOutputWithContext(context.Context) ModelArrayOutput
}

type ModelArray []ModelInput

func (ModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Model)(nil)).Elem()
}

func (i ModelArray) ToModelArrayOutput() ModelArrayOutput {
	return i.ToModelArrayOutputWithContext(context.Background())
}

func (i ModelArray) ToModelArrayOutputWithContext(ctx context.Context) ModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelArrayOutput)
}

type ModelOutput struct{ *pulumi.OutputState }

func (ModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Model)(nil)).Elem()
}

func (o ModelOutput) ToModelOutput() ModelOutput {
	return o
}

func (o ModelOutput) ToModelOutputWithContext(ctx context.Context) ModelOutput {
	return o
}

// The Model creation time (UTC).
func (o ModelOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

// The list of datasets associated with the model.
func (o ModelOutput) Datasets() DatasetReferenceArrayOutput {
	return o.ApplyT(func(v Model) []DatasetReference { return v.Datasets }).(DatasetReferenceArrayOutput)
}

// Models derived from this model
func (o ModelOutput) DerivedModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Model) []string { return v.DerivedModelIds }).(pulumi.StringArrayOutput)
}

// The Model description text.
func (o ModelOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the experiment where this model was created.
func (o ModelOutput) ExperimentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.ExperimentName }).(pulumi.StringPtrOutput)
}

// The Model framework.
func (o ModelOutput) Framework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.Framework }).(pulumi.StringPtrOutput)
}

// The Model framework version.
func (o ModelOutput) FrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.FrameworkVersion }).(pulumi.StringPtrOutput)
}

// The Model Id.
func (o ModelOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Model tag dictionary. Items are mutable.
func (o ModelOutput) KvTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v Model) map[string]string { return v.KvTags }).(pulumi.StringMapOutput)
}

// The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
func (o ModelOutput) MimeType() pulumi.StringOutput {
	return o.ApplyT(func(v Model) string { return v.MimeType }).(pulumi.StringOutput)
}

// The Model last modified time (UTC).
func (o ModelOutput) ModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.ModifiedTime }).(pulumi.StringPtrOutput)
}

// The Model name.
func (o ModelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Model) string { return v.Name }).(pulumi.StringOutput)
}

// The Parent Model Id.
func (o ModelOutput) ParentModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.ParentModelId }).(pulumi.StringPtrOutput)
}

// The Model property dictionary. Properties are immutable.
func (o ModelOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v Model) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Resource requirements for the model
func (o ModelOutput) ResourceRequirements() ContainerResourceRequirementsPtrOutput {
	return o.ApplyT(func(v Model) *ContainerResourceRequirements { return v.ResourceRequirements }).(ContainerResourceRequirementsPtrOutput)
}

// The RunId that created this model.
func (o ModelOutput) RunId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.RunId }).(pulumi.StringPtrOutput)
}

// Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
func (o ModelOutput) SampleInputData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.SampleInputData }).(pulumi.StringPtrOutput)
}

// Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
func (o ModelOutput) SampleOutputData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.SampleOutputData }).(pulumi.StringPtrOutput)
}

// Indicates whether we need to unpack the Model during docker Image creation.
func (o ModelOutput) Unpack() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Model) *bool { return v.Unpack }).(pulumi.BoolPtrOutput)
}

// The URL of the Model. Usually a SAS URL.
func (o ModelOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v Model) string { return v.Url }).(pulumi.StringOutput)
}

// The Model version assigned by Model Management Service.
func (o ModelOutput) Version() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v Model) *float64 { return v.Version }).(pulumi.Float64PtrOutput)
}

type ModelArrayOutput struct{ *pulumi.OutputState }

func (ModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Model)(nil)).Elem()
}

func (o ModelArrayOutput) ToModelArrayOutput() ModelArrayOutput {
	return o
}

func (o ModelArrayOutput) ToModelArrayOutputWithContext(ctx context.Context) ModelArrayOutput {
	return o
}

func (o ModelArrayOutput) Index(i pulumi.IntInput) ModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Model {
		return vs[0].([]Model)[vs[1].(int)]
	}).(ModelOutput)
}

type ModelContainerType struct {
	// The asset description text.
	Description *string `pulumi:"description"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// ModelContainerTypeInput is an input type that accepts ModelContainerTypeArgs and ModelContainerTypeOutput values.
// You can construct a concrete instance of `ModelContainerTypeInput` via:
//
//          ModelContainerTypeArgs{...}
type ModelContainerTypeInput interface {
	pulumi.Input

	ToModelContainerTypeOutput() ModelContainerTypeOutput
	ToModelContainerTypeOutputWithContext(context.Context) ModelContainerTypeOutput
}

type ModelContainerTypeArgs struct {
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ModelContainerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelContainerType)(nil)).Elem()
}

func (i ModelContainerTypeArgs) ToModelContainerTypeOutput() ModelContainerTypeOutput {
	return i.ToModelContainerTypeOutputWithContext(context.Background())
}

func (i ModelContainerTypeArgs) ToModelContainerTypeOutputWithContext(ctx context.Context) ModelContainerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelContainerTypeOutput)
}

func (i ModelContainerTypeArgs) ToModelContainerTypePtrOutput() ModelContainerTypePtrOutput {
	return i.ToModelContainerTypePtrOutputWithContext(context.Background())
}

func (i ModelContainerTypeArgs) ToModelContainerTypePtrOutputWithContext(ctx context.Context) ModelContainerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelContainerTypeOutput).ToModelContainerTypePtrOutputWithContext(ctx)
}

// ModelContainerTypePtrInput is an input type that accepts ModelContainerTypeArgs, ModelContainerTypePtr and ModelContainerTypePtrOutput values.
// You can construct a concrete instance of `ModelContainerTypePtrInput` via:
//
//          ModelContainerTypeArgs{...}
//
//  or:
//
//          nil
type ModelContainerTypePtrInput interface {
	pulumi.Input

	ToModelContainerTypePtrOutput() ModelContainerTypePtrOutput
	ToModelContainerTypePtrOutputWithContext(context.Context) ModelContainerTypePtrOutput
}

type modelContainerTypePtrType ModelContainerTypeArgs

func ModelContainerTypePtr(v *ModelContainerTypeArgs) ModelContainerTypePtrInput {
	return (*modelContainerTypePtrType)(v)
}

func (*modelContainerTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelContainerType)(nil)).Elem()
}

func (i *modelContainerTypePtrType) ToModelContainerTypePtrOutput() ModelContainerTypePtrOutput {
	return i.ToModelContainerTypePtrOutputWithContext(context.Background())
}

func (i *modelContainerTypePtrType) ToModelContainerTypePtrOutputWithContext(ctx context.Context) ModelContainerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelContainerTypePtrOutput)
}

type ModelContainerTypeOutput struct{ *pulumi.OutputState }

func (ModelContainerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelContainerType)(nil)).Elem()
}

func (o ModelContainerTypeOutput) ToModelContainerTypeOutput() ModelContainerTypeOutput {
	return o
}

func (o ModelContainerTypeOutput) ToModelContainerTypeOutputWithContext(ctx context.Context) ModelContainerTypeOutput {
	return o
}

func (o ModelContainerTypeOutput) ToModelContainerTypePtrOutput() ModelContainerTypePtrOutput {
	return o.ToModelContainerTypePtrOutputWithContext(context.Background())
}

func (o ModelContainerTypeOutput) ToModelContainerTypePtrOutputWithContext(ctx context.Context) ModelContainerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelContainerType) *ModelContainerType {
		return &v
	}).(ModelContainerTypePtrOutput)
}

// The asset description text.
func (o ModelContainerTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelContainerType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o ModelContainerTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelContainerType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o ModelContainerTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelContainerType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ModelContainerTypePtrOutput struct{ *pulumi.OutputState }

func (ModelContainerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelContainerType)(nil)).Elem()
}

func (o ModelContainerTypePtrOutput) ToModelContainerTypePtrOutput() ModelContainerTypePtrOutput {
	return o
}

func (o ModelContainerTypePtrOutput) ToModelContainerTypePtrOutputWithContext(ctx context.Context) ModelContainerTypePtrOutput {
	return o
}

func (o ModelContainerTypePtrOutput) Elem() ModelContainerTypeOutput {
	return o.ApplyT(func(v *ModelContainerType) ModelContainerType {
		if v != nil {
			return *v
		}
		var ret ModelContainerType
		return ret
	}).(ModelContainerTypeOutput)
}

// The asset description text.
func (o ModelContainerTypePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelContainerType) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o ModelContainerTypePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ModelContainerType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o ModelContainerTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ModelContainerType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type ModelContainerResponse struct {
	// The asset description text.
	Description *string `pulumi:"description"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// ModelContainerResponseInput is an input type that accepts ModelContainerResponseArgs and ModelContainerResponseOutput values.
// You can construct a concrete instance of `ModelContainerResponseInput` via:
//
//          ModelContainerResponseArgs{...}
type ModelContainerResponseInput interface {
	pulumi.Input

	ToModelContainerResponseOutput() ModelContainerResponseOutput
	ToModelContainerResponseOutputWithContext(context.Context) ModelContainerResponseOutput
}

type ModelContainerResponseArgs struct {
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ModelContainerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelContainerResponse)(nil)).Elem()
}

func (i ModelContainerResponseArgs) ToModelContainerResponseOutput() ModelContainerResponseOutput {
	return i.ToModelContainerResponseOutputWithContext(context.Background())
}

func (i ModelContainerResponseArgs) ToModelContainerResponseOutputWithContext(ctx context.Context) ModelContainerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelContainerResponseOutput)
}

func (i ModelContainerResponseArgs) ToModelContainerResponsePtrOutput() ModelContainerResponsePtrOutput {
	return i.ToModelContainerResponsePtrOutputWithContext(context.Background())
}

func (i ModelContainerResponseArgs) ToModelContainerResponsePtrOutputWithContext(ctx context.Context) ModelContainerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelContainerResponseOutput).ToModelContainerResponsePtrOutputWithContext(ctx)
}

// ModelContainerResponsePtrInput is an input type that accepts ModelContainerResponseArgs, ModelContainerResponsePtr and ModelContainerResponsePtrOutput values.
// You can construct a concrete instance of `ModelContainerResponsePtrInput` via:
//
//          ModelContainerResponseArgs{...}
//
//  or:
//
//          nil
type ModelContainerResponsePtrInput interface {
	pulumi.Input

	ToModelContainerResponsePtrOutput() ModelContainerResponsePtrOutput
	ToModelContainerResponsePtrOutputWithContext(context.Context) ModelContainerResponsePtrOutput
}

type modelContainerResponsePtrType ModelContainerResponseArgs

func ModelContainerResponsePtr(v *ModelContainerResponseArgs) ModelContainerResponsePtrInput {
	return (*modelContainerResponsePtrType)(v)
}

func (*modelContainerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelContainerResponse)(nil)).Elem()
}

func (i *modelContainerResponsePtrType) ToModelContainerResponsePtrOutput() ModelContainerResponsePtrOutput {
	return i.ToModelContainerResponsePtrOutputWithContext(context.Background())
}

func (i *modelContainerResponsePtrType) ToModelContainerResponsePtrOutputWithContext(ctx context.Context) ModelContainerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelContainerResponsePtrOutput)
}

type ModelContainerResponseOutput struct{ *pulumi.OutputState }

func (ModelContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelContainerResponse)(nil)).Elem()
}

func (o ModelContainerResponseOutput) ToModelContainerResponseOutput() ModelContainerResponseOutput {
	return o
}

func (o ModelContainerResponseOutput) ToModelContainerResponseOutputWithContext(ctx context.Context) ModelContainerResponseOutput {
	return o
}

func (o ModelContainerResponseOutput) ToModelContainerResponsePtrOutput() ModelContainerResponsePtrOutput {
	return o.ToModelContainerResponsePtrOutputWithContext(context.Background())
}

func (o ModelContainerResponseOutput) ToModelContainerResponsePtrOutputWithContext(ctx context.Context) ModelContainerResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelContainerResponse) *ModelContainerResponse {
		return &v
	}).(ModelContainerResponsePtrOutput)
}

// The asset description text.
func (o ModelContainerResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelContainerResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o ModelContainerResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelContainerResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o ModelContainerResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelContainerResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ModelContainerResponsePtrOutput struct{ *pulumi.OutputState }

func (ModelContainerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelContainerResponse)(nil)).Elem()
}

func (o ModelContainerResponsePtrOutput) ToModelContainerResponsePtrOutput() ModelContainerResponsePtrOutput {
	return o
}

func (o ModelContainerResponsePtrOutput) ToModelContainerResponsePtrOutputWithContext(ctx context.Context) ModelContainerResponsePtrOutput {
	return o
}

func (o ModelContainerResponsePtrOutput) Elem() ModelContainerResponseOutput {
	return o.ApplyT(func(v *ModelContainerResponse) ModelContainerResponse {
		if v != nil {
			return *v
		}
		var ret ModelContainerResponse
		return ret
	}).(ModelContainerResponseOutput)
}

// The asset description text.
func (o ModelContainerResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelContainerResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o ModelContainerResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ModelContainerResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o ModelContainerResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ModelContainerResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type ModelDockerSectionBaseImageRegistry struct {
	Address  *string `pulumi:"address"`
	Password *string `pulumi:"password"`
	Username *string `pulumi:"username"`
}

// ModelDockerSectionBaseImageRegistryInput is an input type that accepts ModelDockerSectionBaseImageRegistryArgs and ModelDockerSectionBaseImageRegistryOutput values.
// You can construct a concrete instance of `ModelDockerSectionBaseImageRegistryInput` via:
//
//          ModelDockerSectionBaseImageRegistryArgs{...}
type ModelDockerSectionBaseImageRegistryInput interface {
	pulumi.Input

	ToModelDockerSectionBaseImageRegistryOutput() ModelDockerSectionBaseImageRegistryOutput
	ToModelDockerSectionBaseImageRegistryOutputWithContext(context.Context) ModelDockerSectionBaseImageRegistryOutput
}

type ModelDockerSectionBaseImageRegistryArgs struct {
	Address  pulumi.StringPtrInput `pulumi:"address"`
	Password pulumi.StringPtrInput `pulumi:"password"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ModelDockerSectionBaseImageRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelDockerSectionBaseImageRegistry)(nil)).Elem()
}

func (i ModelDockerSectionBaseImageRegistryArgs) ToModelDockerSectionBaseImageRegistryOutput() ModelDockerSectionBaseImageRegistryOutput {
	return i.ToModelDockerSectionBaseImageRegistryOutputWithContext(context.Background())
}

func (i ModelDockerSectionBaseImageRegistryArgs) ToModelDockerSectionBaseImageRegistryOutputWithContext(ctx context.Context) ModelDockerSectionBaseImageRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDockerSectionBaseImageRegistryOutput)
}

func (i ModelDockerSectionBaseImageRegistryArgs) ToModelDockerSectionBaseImageRegistryPtrOutput() ModelDockerSectionBaseImageRegistryPtrOutput {
	return i.ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(context.Background())
}

func (i ModelDockerSectionBaseImageRegistryArgs) ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionBaseImageRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDockerSectionBaseImageRegistryOutput).ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(ctx)
}

// ModelDockerSectionBaseImageRegistryPtrInput is an input type that accepts ModelDockerSectionBaseImageRegistryArgs, ModelDockerSectionBaseImageRegistryPtr and ModelDockerSectionBaseImageRegistryPtrOutput values.
// You can construct a concrete instance of `ModelDockerSectionBaseImageRegistryPtrInput` via:
//
//          ModelDockerSectionBaseImageRegistryArgs{...}
//
//  or:
//
//          nil
type ModelDockerSectionBaseImageRegistryPtrInput interface {
	pulumi.Input

	ToModelDockerSectionBaseImageRegistryPtrOutput() ModelDockerSectionBaseImageRegistryPtrOutput
	ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(context.Context) ModelDockerSectionBaseImageRegistryPtrOutput
}

type modelDockerSectionBaseImageRegistryPtrType ModelDockerSectionBaseImageRegistryArgs

func ModelDockerSectionBaseImageRegistryPtr(v *ModelDockerSectionBaseImageRegistryArgs) ModelDockerSectionBaseImageRegistryPtrInput {
	return (*modelDockerSectionBaseImageRegistryPtrType)(v)
}

func (*modelDockerSectionBaseImageRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelDockerSectionBaseImageRegistry)(nil)).Elem()
}

func (i *modelDockerSectionBaseImageRegistryPtrType) ToModelDockerSectionBaseImageRegistryPtrOutput() ModelDockerSectionBaseImageRegistryPtrOutput {
	return i.ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(context.Background())
}

func (i *modelDockerSectionBaseImageRegistryPtrType) ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionBaseImageRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDockerSectionBaseImageRegistryPtrOutput)
}

type ModelDockerSectionBaseImageRegistryOutput struct{ *pulumi.OutputState }

func (ModelDockerSectionBaseImageRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelDockerSectionBaseImageRegistry)(nil)).Elem()
}

func (o ModelDockerSectionBaseImageRegistryOutput) ToModelDockerSectionBaseImageRegistryOutput() ModelDockerSectionBaseImageRegistryOutput {
	return o
}

func (o ModelDockerSectionBaseImageRegistryOutput) ToModelDockerSectionBaseImageRegistryOutputWithContext(ctx context.Context) ModelDockerSectionBaseImageRegistryOutput {
	return o
}

func (o ModelDockerSectionBaseImageRegistryOutput) ToModelDockerSectionBaseImageRegistryPtrOutput() ModelDockerSectionBaseImageRegistryPtrOutput {
	return o.ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(context.Background())
}

func (o ModelDockerSectionBaseImageRegistryOutput) ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionBaseImageRegistryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelDockerSectionBaseImageRegistry) *ModelDockerSectionBaseImageRegistry {
		return &v
	}).(ModelDockerSectionBaseImageRegistryPtrOutput)
}

func (o ModelDockerSectionBaseImageRegistryOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelDockerSectionBaseImageRegistry) *string { return v.Address }).(pulumi.StringPtrOutput)
}

func (o ModelDockerSectionBaseImageRegistryOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelDockerSectionBaseImageRegistry) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ModelDockerSectionBaseImageRegistryOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelDockerSectionBaseImageRegistry) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ModelDockerSectionBaseImageRegistryPtrOutput struct{ *pulumi.OutputState }

func (ModelDockerSectionBaseImageRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelDockerSectionBaseImageRegistry)(nil)).Elem()
}

func (o ModelDockerSectionBaseImageRegistryPtrOutput) ToModelDockerSectionBaseImageRegistryPtrOutput() ModelDockerSectionBaseImageRegistryPtrOutput {
	return o
}

func (o ModelDockerSectionBaseImageRegistryPtrOutput) ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionBaseImageRegistryPtrOutput {
	return o
}

func (o ModelDockerSectionBaseImageRegistryPtrOutput) Elem() ModelDockerSectionBaseImageRegistryOutput {
	return o.ApplyT(func(v *ModelDockerSectionBaseImageRegistry) ModelDockerSectionBaseImageRegistry {
		if v != nil {
			return *v
		}
		var ret ModelDockerSectionBaseImageRegistry
		return ret
	}).(ModelDockerSectionBaseImageRegistryOutput)
}

func (o ModelDockerSectionBaseImageRegistryPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelDockerSectionBaseImageRegistry) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

func (o ModelDockerSectionBaseImageRegistryPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelDockerSectionBaseImageRegistry) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ModelDockerSectionBaseImageRegistryPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelDockerSectionBaseImageRegistry) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ModelDockerSectionResponseResponseBaseImageRegistry struct {
	Address *string `pulumi:"address"`
}

// ModelDockerSectionResponseResponseBaseImageRegistryInput is an input type that accepts ModelDockerSectionResponseResponseBaseImageRegistryArgs and ModelDockerSectionResponseResponseBaseImageRegistryOutput values.
// You can construct a concrete instance of `ModelDockerSectionResponseResponseBaseImageRegistryInput` via:
//
//          ModelDockerSectionResponseResponseBaseImageRegistryArgs{...}
type ModelDockerSectionResponseResponseBaseImageRegistryInput interface {
	pulumi.Input

	ToModelDockerSectionResponseResponseBaseImageRegistryOutput() ModelDockerSectionResponseResponseBaseImageRegistryOutput
	ToModelDockerSectionResponseResponseBaseImageRegistryOutputWithContext(context.Context) ModelDockerSectionResponseResponseBaseImageRegistryOutput
}

type ModelDockerSectionResponseResponseBaseImageRegistryArgs struct {
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (ModelDockerSectionResponseResponseBaseImageRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelDockerSectionResponseResponseBaseImageRegistry)(nil)).Elem()
}

func (i ModelDockerSectionResponseResponseBaseImageRegistryArgs) ToModelDockerSectionResponseResponseBaseImageRegistryOutput() ModelDockerSectionResponseResponseBaseImageRegistryOutput {
	return i.ToModelDockerSectionResponseResponseBaseImageRegistryOutputWithContext(context.Background())
}

func (i ModelDockerSectionResponseResponseBaseImageRegistryArgs) ToModelDockerSectionResponseResponseBaseImageRegistryOutputWithContext(ctx context.Context) ModelDockerSectionResponseResponseBaseImageRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDockerSectionResponseResponseBaseImageRegistryOutput)
}

func (i ModelDockerSectionResponseResponseBaseImageRegistryArgs) ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutput() ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return i.ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(context.Background())
}

func (i ModelDockerSectionResponseResponseBaseImageRegistryArgs) ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDockerSectionResponseResponseBaseImageRegistryOutput).ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(ctx)
}

// ModelDockerSectionResponseResponseBaseImageRegistryPtrInput is an input type that accepts ModelDockerSectionResponseResponseBaseImageRegistryArgs, ModelDockerSectionResponseResponseBaseImageRegistryPtr and ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput values.
// You can construct a concrete instance of `ModelDockerSectionResponseResponseBaseImageRegistryPtrInput` via:
//
//          ModelDockerSectionResponseResponseBaseImageRegistryArgs{...}
//
//  or:
//
//          nil
type ModelDockerSectionResponseResponseBaseImageRegistryPtrInput interface {
	pulumi.Input

	ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutput() ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput
	ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(context.Context) ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput
}

type modelDockerSectionResponseResponseBaseImageRegistryPtrType ModelDockerSectionResponseResponseBaseImageRegistryArgs

func ModelDockerSectionResponseResponseBaseImageRegistryPtr(v *ModelDockerSectionResponseResponseBaseImageRegistryArgs) ModelDockerSectionResponseResponseBaseImageRegistryPtrInput {
	return (*modelDockerSectionResponseResponseBaseImageRegistryPtrType)(v)
}

func (*modelDockerSectionResponseResponseBaseImageRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelDockerSectionResponseResponseBaseImageRegistry)(nil)).Elem()
}

func (i *modelDockerSectionResponseResponseBaseImageRegistryPtrType) ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutput() ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return i.ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(context.Background())
}

func (i *modelDockerSectionResponseResponseBaseImageRegistryPtrType) ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput)
}

type ModelDockerSectionResponseResponseBaseImageRegistryOutput struct{ *pulumi.OutputState }

func (ModelDockerSectionResponseResponseBaseImageRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelDockerSectionResponseResponseBaseImageRegistry)(nil)).Elem()
}

func (o ModelDockerSectionResponseResponseBaseImageRegistryOutput) ToModelDockerSectionResponseResponseBaseImageRegistryOutput() ModelDockerSectionResponseResponseBaseImageRegistryOutput {
	return o
}

func (o ModelDockerSectionResponseResponseBaseImageRegistryOutput) ToModelDockerSectionResponseResponseBaseImageRegistryOutputWithContext(ctx context.Context) ModelDockerSectionResponseResponseBaseImageRegistryOutput {
	return o
}

func (o ModelDockerSectionResponseResponseBaseImageRegistryOutput) ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutput() ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return o.ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(context.Background())
}

func (o ModelDockerSectionResponseResponseBaseImageRegistryOutput) ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelDockerSectionResponseResponseBaseImageRegistry) *ModelDockerSectionResponseResponseBaseImageRegistry {
		return &v
	}).(ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput)
}

func (o ModelDockerSectionResponseResponseBaseImageRegistryOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelDockerSectionResponseResponseBaseImageRegistry) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput struct{ *pulumi.OutputState }

func (ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelDockerSectionResponseResponseBaseImageRegistry)(nil)).Elem()
}

func (o ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput) ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutput() ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return o
}

func (o ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput) ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return o
}

func (o ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput) Elem() ModelDockerSectionResponseResponseBaseImageRegistryOutput {
	return o.ApplyT(func(v *ModelDockerSectionResponseResponseBaseImageRegistry) ModelDockerSectionResponseResponseBaseImageRegistry {
		if v != nil {
			return *v
		}
		var ret ModelDockerSectionResponseResponseBaseImageRegistry
		return ret
	}).(ModelDockerSectionResponseResponseBaseImageRegistryOutput)
}

func (o ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelDockerSectionResponseResponseBaseImageRegistry) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

type ModelEnvironmentDefinitionDocker struct {
	// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
	BaseDockerfile *string `pulumi:"baseDockerfile"`
	// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
	BaseImage *string `pulumi:"baseImage"`
	// Image registry that contains the base image.
	BaseImageRegistry *ModelDockerSectionBaseImageRegistry `pulumi:"baseImageRegistry"`
}

// ModelEnvironmentDefinitionDockerInput is an input type that accepts ModelEnvironmentDefinitionDockerArgs and ModelEnvironmentDefinitionDockerOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionDockerInput` via:
//
//          ModelEnvironmentDefinitionDockerArgs{...}
type ModelEnvironmentDefinitionDockerInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionDockerOutput() ModelEnvironmentDefinitionDockerOutput
	ToModelEnvironmentDefinitionDockerOutputWithContext(context.Context) ModelEnvironmentDefinitionDockerOutput
}

type ModelEnvironmentDefinitionDockerArgs struct {
	// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
	BaseDockerfile pulumi.StringPtrInput `pulumi:"baseDockerfile"`
	// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
	BaseImage pulumi.StringPtrInput `pulumi:"baseImage"`
	// Image registry that contains the base image.
	BaseImageRegistry ModelDockerSectionBaseImageRegistryPtrInput `pulumi:"baseImageRegistry"`
}

func (ModelEnvironmentDefinitionDockerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionDocker)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionDockerArgs) ToModelEnvironmentDefinitionDockerOutput() ModelEnvironmentDefinitionDockerOutput {
	return i.ToModelEnvironmentDefinitionDockerOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionDockerArgs) ToModelEnvironmentDefinitionDockerOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionDockerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionDockerOutput)
}

func (i ModelEnvironmentDefinitionDockerArgs) ToModelEnvironmentDefinitionDockerPtrOutput() ModelEnvironmentDefinitionDockerPtrOutput {
	return i.ToModelEnvironmentDefinitionDockerPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionDockerArgs) ToModelEnvironmentDefinitionDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionDockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionDockerOutput).ToModelEnvironmentDefinitionDockerPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionDockerPtrInput is an input type that accepts ModelEnvironmentDefinitionDockerArgs, ModelEnvironmentDefinitionDockerPtr and ModelEnvironmentDefinitionDockerPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionDockerPtrInput` via:
//
//          ModelEnvironmentDefinitionDockerArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionDockerPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionDockerPtrOutput() ModelEnvironmentDefinitionDockerPtrOutput
	ToModelEnvironmentDefinitionDockerPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionDockerPtrOutput
}

type modelEnvironmentDefinitionDockerPtrType ModelEnvironmentDefinitionDockerArgs

func ModelEnvironmentDefinitionDockerPtr(v *ModelEnvironmentDefinitionDockerArgs) ModelEnvironmentDefinitionDockerPtrInput {
	return (*modelEnvironmentDefinitionDockerPtrType)(v)
}

func (*modelEnvironmentDefinitionDockerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionDocker)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionDockerPtrType) ToModelEnvironmentDefinitionDockerPtrOutput() ModelEnvironmentDefinitionDockerPtrOutput {
	return i.ToModelEnvironmentDefinitionDockerPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionDockerPtrType) ToModelEnvironmentDefinitionDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionDockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionDockerPtrOutput)
}

type ModelEnvironmentDefinitionDockerOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionDockerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionDocker)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionDockerOutput) ToModelEnvironmentDefinitionDockerOutput() ModelEnvironmentDefinitionDockerOutput {
	return o
}

func (o ModelEnvironmentDefinitionDockerOutput) ToModelEnvironmentDefinitionDockerOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionDockerOutput {
	return o
}

func (o ModelEnvironmentDefinitionDockerOutput) ToModelEnvironmentDefinitionDockerPtrOutput() ModelEnvironmentDefinitionDockerPtrOutput {
	return o.ToModelEnvironmentDefinitionDockerPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionDockerOutput) ToModelEnvironmentDefinitionDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionDockerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelEnvironmentDefinitionDocker) *ModelEnvironmentDefinitionDocker {
		return &v
	}).(ModelEnvironmentDefinitionDockerPtrOutput)
}

// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
func (o ModelEnvironmentDefinitionDockerOutput) BaseDockerfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionDocker) *string { return v.BaseDockerfile }).(pulumi.StringPtrOutput)
}

// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
func (o ModelEnvironmentDefinitionDockerOutput) BaseImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionDocker) *string { return v.BaseImage }).(pulumi.StringPtrOutput)
}

// Image registry that contains the base image.
func (o ModelEnvironmentDefinitionDockerOutput) BaseImageRegistry() ModelDockerSectionBaseImageRegistryPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionDocker) *ModelDockerSectionBaseImageRegistry {
		return v.BaseImageRegistry
	}).(ModelDockerSectionBaseImageRegistryPtrOutput)
}

type ModelEnvironmentDefinitionDockerPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionDockerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionDocker)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionDockerPtrOutput) ToModelEnvironmentDefinitionDockerPtrOutput() ModelEnvironmentDefinitionDockerPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionDockerPtrOutput) ToModelEnvironmentDefinitionDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionDockerPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionDockerPtrOutput) Elem() ModelEnvironmentDefinitionDockerOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionDocker) ModelEnvironmentDefinitionDocker {
		if v != nil {
			return *v
		}
		var ret ModelEnvironmentDefinitionDocker
		return ret
	}).(ModelEnvironmentDefinitionDockerOutput)
}

// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
func (o ModelEnvironmentDefinitionDockerPtrOutput) BaseDockerfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionDocker) *string {
		if v == nil {
			return nil
		}
		return v.BaseDockerfile
	}).(pulumi.StringPtrOutput)
}

// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
func (o ModelEnvironmentDefinitionDockerPtrOutput) BaseImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionDocker) *string {
		if v == nil {
			return nil
		}
		return v.BaseImage
	}).(pulumi.StringPtrOutput)
}

// Image registry that contains the base image.
func (o ModelEnvironmentDefinitionDockerPtrOutput) BaseImageRegistry() ModelDockerSectionBaseImageRegistryPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionDocker) *ModelDockerSectionBaseImageRegistry {
		if v == nil {
			return nil
		}
		return v.BaseImageRegistry
	}).(ModelDockerSectionBaseImageRegistryPtrOutput)
}

type ModelEnvironmentDefinitionPython struct {
	BaseCondaEnvironment *string `pulumi:"baseCondaEnvironment"`
	// A JObject containing Conda dependencies.
	CondaDependencies interface{} `pulumi:"condaDependencies"`
	// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
	InterpreterPath *string `pulumi:"interpreterPath"`
	// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
	UserManagedDependencies *bool `pulumi:"userManagedDependencies"`
}

// ModelEnvironmentDefinitionPythonInput is an input type that accepts ModelEnvironmentDefinitionPythonArgs and ModelEnvironmentDefinitionPythonOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionPythonInput` via:
//
//          ModelEnvironmentDefinitionPythonArgs{...}
type ModelEnvironmentDefinitionPythonInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionPythonOutput() ModelEnvironmentDefinitionPythonOutput
	ToModelEnvironmentDefinitionPythonOutputWithContext(context.Context) ModelEnvironmentDefinitionPythonOutput
}

type ModelEnvironmentDefinitionPythonArgs struct {
	BaseCondaEnvironment pulumi.StringPtrInput `pulumi:"baseCondaEnvironment"`
	// A JObject containing Conda dependencies.
	CondaDependencies pulumi.Input `pulumi:"condaDependencies"`
	// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
	InterpreterPath pulumi.StringPtrInput `pulumi:"interpreterPath"`
	// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
	UserManagedDependencies pulumi.BoolPtrInput `pulumi:"userManagedDependencies"`
}

func (ModelEnvironmentDefinitionPythonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionPython)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionPythonArgs) ToModelEnvironmentDefinitionPythonOutput() ModelEnvironmentDefinitionPythonOutput {
	return i.ToModelEnvironmentDefinitionPythonOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionPythonArgs) ToModelEnvironmentDefinitionPythonOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionPythonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionPythonOutput)
}

func (i ModelEnvironmentDefinitionPythonArgs) ToModelEnvironmentDefinitionPythonPtrOutput() ModelEnvironmentDefinitionPythonPtrOutput {
	return i.ToModelEnvironmentDefinitionPythonPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionPythonArgs) ToModelEnvironmentDefinitionPythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionPythonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionPythonOutput).ToModelEnvironmentDefinitionPythonPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionPythonPtrInput is an input type that accepts ModelEnvironmentDefinitionPythonArgs, ModelEnvironmentDefinitionPythonPtr and ModelEnvironmentDefinitionPythonPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionPythonPtrInput` via:
//
//          ModelEnvironmentDefinitionPythonArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionPythonPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionPythonPtrOutput() ModelEnvironmentDefinitionPythonPtrOutput
	ToModelEnvironmentDefinitionPythonPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionPythonPtrOutput
}

type modelEnvironmentDefinitionPythonPtrType ModelEnvironmentDefinitionPythonArgs

func ModelEnvironmentDefinitionPythonPtr(v *ModelEnvironmentDefinitionPythonArgs) ModelEnvironmentDefinitionPythonPtrInput {
	return (*modelEnvironmentDefinitionPythonPtrType)(v)
}

func (*modelEnvironmentDefinitionPythonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionPython)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionPythonPtrType) ToModelEnvironmentDefinitionPythonPtrOutput() ModelEnvironmentDefinitionPythonPtrOutput {
	return i.ToModelEnvironmentDefinitionPythonPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionPythonPtrType) ToModelEnvironmentDefinitionPythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionPythonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionPythonPtrOutput)
}

type ModelEnvironmentDefinitionPythonOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionPythonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionPython)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionPythonOutput) ToModelEnvironmentDefinitionPythonOutput() ModelEnvironmentDefinitionPythonOutput {
	return o
}

func (o ModelEnvironmentDefinitionPythonOutput) ToModelEnvironmentDefinitionPythonOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionPythonOutput {
	return o
}

func (o ModelEnvironmentDefinitionPythonOutput) ToModelEnvironmentDefinitionPythonPtrOutput() ModelEnvironmentDefinitionPythonPtrOutput {
	return o.ToModelEnvironmentDefinitionPythonPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionPythonOutput) ToModelEnvironmentDefinitionPythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionPythonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelEnvironmentDefinitionPython) *ModelEnvironmentDefinitionPython {
		return &v
	}).(ModelEnvironmentDefinitionPythonPtrOutput)
}

func (o ModelEnvironmentDefinitionPythonOutput) BaseCondaEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionPython) *string { return v.BaseCondaEnvironment }).(pulumi.StringPtrOutput)
}

// A JObject containing Conda dependencies.
func (o ModelEnvironmentDefinitionPythonOutput) CondaDependencies() pulumi.AnyOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionPython) interface{} { return v.CondaDependencies }).(pulumi.AnyOutput)
}

// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionPythonOutput) InterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionPython) *string { return v.InterpreterPath }).(pulumi.StringPtrOutput)
}

// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
func (o ModelEnvironmentDefinitionPythonOutput) UserManagedDependencies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionPython) *bool { return v.UserManagedDependencies }).(pulumi.BoolPtrOutput)
}

type ModelEnvironmentDefinitionPythonPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionPythonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionPython)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionPythonPtrOutput) ToModelEnvironmentDefinitionPythonPtrOutput() ModelEnvironmentDefinitionPythonPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionPythonPtrOutput) ToModelEnvironmentDefinitionPythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionPythonPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionPythonPtrOutput) Elem() ModelEnvironmentDefinitionPythonOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionPython) ModelEnvironmentDefinitionPython {
		if v != nil {
			return *v
		}
		var ret ModelEnvironmentDefinitionPython
		return ret
	}).(ModelEnvironmentDefinitionPythonOutput)
}

func (o ModelEnvironmentDefinitionPythonPtrOutput) BaseCondaEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionPython) *string {
		if v == nil {
			return nil
		}
		return v.BaseCondaEnvironment
	}).(pulumi.StringPtrOutput)
}

// A JObject containing Conda dependencies.
func (o ModelEnvironmentDefinitionPythonPtrOutput) CondaDependencies() pulumi.AnyOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionPython) interface{} {
		if v == nil {
			return nil
		}
		return v.CondaDependencies
	}).(pulumi.AnyOutput)
}

// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionPythonPtrOutput) InterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionPython) *string {
		if v == nil {
			return nil
		}
		return v.InterpreterPath
	}).(pulumi.StringPtrOutput)
}

// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
func (o ModelEnvironmentDefinitionPythonPtrOutput) UserManagedDependencies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionPython) *bool {
		if v == nil {
			return nil
		}
		return v.UserManagedDependencies
	}).(pulumi.BoolPtrOutput)
}

type ModelEnvironmentDefinitionR struct {
	// The packages from Bioconductor.
	BioConductorPackages []string `pulumi:"bioConductorPackages"`
	// The CRAN packages to use.
	CranPackages []RCranPackage `pulumi:"cranPackages"`
	// The packages from custom urls.
	CustomUrlPackages []string `pulumi:"customUrlPackages"`
	// The packages directly from GitHub.
	GitHubPackages []RGitHubPackage `pulumi:"gitHubPackages"`
	// The version of R to be installed
	RVersion *string `pulumi:"rVersion"`
	// The Rscript path to use if an environment build is not required.
	// The path specified gets used to call the user script.
	RscriptPath *string `pulumi:"rscriptPath"`
	// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
	SnapshotDate *string `pulumi:"snapshotDate"`
	// Indicates whether the environment is managed by user or by AzureML.
	UserManaged *bool `pulumi:"userManaged"`
}

// ModelEnvironmentDefinitionRInput is an input type that accepts ModelEnvironmentDefinitionRArgs and ModelEnvironmentDefinitionROutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionRInput` via:
//
//          ModelEnvironmentDefinitionRArgs{...}
type ModelEnvironmentDefinitionRInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionROutput() ModelEnvironmentDefinitionROutput
	ToModelEnvironmentDefinitionROutputWithContext(context.Context) ModelEnvironmentDefinitionROutput
}

type ModelEnvironmentDefinitionRArgs struct {
	// The packages from Bioconductor.
	BioConductorPackages pulumi.StringArrayInput `pulumi:"bioConductorPackages"`
	// The CRAN packages to use.
	CranPackages RCranPackageArrayInput `pulumi:"cranPackages"`
	// The packages from custom urls.
	CustomUrlPackages pulumi.StringArrayInput `pulumi:"customUrlPackages"`
	// The packages directly from GitHub.
	GitHubPackages RGitHubPackageArrayInput `pulumi:"gitHubPackages"`
	// The version of R to be installed
	RVersion pulumi.StringPtrInput `pulumi:"rVersion"`
	// The Rscript path to use if an environment build is not required.
	// The path specified gets used to call the user script.
	RscriptPath pulumi.StringPtrInput `pulumi:"rscriptPath"`
	// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
	SnapshotDate pulumi.StringPtrInput `pulumi:"snapshotDate"`
	// Indicates whether the environment is managed by user or by AzureML.
	UserManaged pulumi.BoolPtrInput `pulumi:"userManaged"`
}

func (ModelEnvironmentDefinitionRArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionR)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionRArgs) ToModelEnvironmentDefinitionROutput() ModelEnvironmentDefinitionROutput {
	return i.ToModelEnvironmentDefinitionROutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionRArgs) ToModelEnvironmentDefinitionROutputWithContext(ctx context.Context) ModelEnvironmentDefinitionROutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionROutput)
}

func (i ModelEnvironmentDefinitionRArgs) ToModelEnvironmentDefinitionRPtrOutput() ModelEnvironmentDefinitionRPtrOutput {
	return i.ToModelEnvironmentDefinitionRPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionRArgs) ToModelEnvironmentDefinitionRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionRPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionROutput).ToModelEnvironmentDefinitionRPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionRPtrInput is an input type that accepts ModelEnvironmentDefinitionRArgs, ModelEnvironmentDefinitionRPtr and ModelEnvironmentDefinitionRPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionRPtrInput` via:
//
//          ModelEnvironmentDefinitionRArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionRPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionRPtrOutput() ModelEnvironmentDefinitionRPtrOutput
	ToModelEnvironmentDefinitionRPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionRPtrOutput
}

type modelEnvironmentDefinitionRPtrType ModelEnvironmentDefinitionRArgs

func ModelEnvironmentDefinitionRPtr(v *ModelEnvironmentDefinitionRArgs) ModelEnvironmentDefinitionRPtrInput {
	return (*modelEnvironmentDefinitionRPtrType)(v)
}

func (*modelEnvironmentDefinitionRPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionR)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionRPtrType) ToModelEnvironmentDefinitionRPtrOutput() ModelEnvironmentDefinitionRPtrOutput {
	return i.ToModelEnvironmentDefinitionRPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionRPtrType) ToModelEnvironmentDefinitionRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionRPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionRPtrOutput)
}

type ModelEnvironmentDefinitionROutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionROutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionR)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionROutput) ToModelEnvironmentDefinitionROutput() ModelEnvironmentDefinitionROutput {
	return o
}

func (o ModelEnvironmentDefinitionROutput) ToModelEnvironmentDefinitionROutputWithContext(ctx context.Context) ModelEnvironmentDefinitionROutput {
	return o
}

func (o ModelEnvironmentDefinitionROutput) ToModelEnvironmentDefinitionRPtrOutput() ModelEnvironmentDefinitionRPtrOutput {
	return o.ToModelEnvironmentDefinitionRPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionROutput) ToModelEnvironmentDefinitionRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionRPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelEnvironmentDefinitionR) *ModelEnvironmentDefinitionR {
		return &v
	}).(ModelEnvironmentDefinitionRPtrOutput)
}

// The packages from Bioconductor.
func (o ModelEnvironmentDefinitionROutput) BioConductorPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionR) []string { return v.BioConductorPackages }).(pulumi.StringArrayOutput)
}

// The CRAN packages to use.
func (o ModelEnvironmentDefinitionROutput) CranPackages() RCranPackageArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionR) []RCranPackage { return v.CranPackages }).(RCranPackageArrayOutput)
}

// The packages from custom urls.
func (o ModelEnvironmentDefinitionROutput) CustomUrlPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionR) []string { return v.CustomUrlPackages }).(pulumi.StringArrayOutput)
}

// The packages directly from GitHub.
func (o ModelEnvironmentDefinitionROutput) GitHubPackages() RGitHubPackageArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionR) []RGitHubPackage { return v.GitHubPackages }).(RGitHubPackageArrayOutput)
}

// The version of R to be installed
func (o ModelEnvironmentDefinitionROutput) RVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionR) *string { return v.RVersion }).(pulumi.StringPtrOutput)
}

// The Rscript path to use if an environment build is not required.
// The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionROutput) RscriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionR) *string { return v.RscriptPath }).(pulumi.StringPtrOutput)
}

// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
func (o ModelEnvironmentDefinitionROutput) SnapshotDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionR) *string { return v.SnapshotDate }).(pulumi.StringPtrOutput)
}

// Indicates whether the environment is managed by user or by AzureML.
func (o ModelEnvironmentDefinitionROutput) UserManaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionR) *bool { return v.UserManaged }).(pulumi.BoolPtrOutput)
}

type ModelEnvironmentDefinitionRPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionRPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionR)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionRPtrOutput) ToModelEnvironmentDefinitionRPtrOutput() ModelEnvironmentDefinitionRPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionRPtrOutput) ToModelEnvironmentDefinitionRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionRPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionRPtrOutput) Elem() ModelEnvironmentDefinitionROutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) ModelEnvironmentDefinitionR {
		if v != nil {
			return *v
		}
		var ret ModelEnvironmentDefinitionR
		return ret
	}).(ModelEnvironmentDefinitionROutput)
}

// The packages from Bioconductor.
func (o ModelEnvironmentDefinitionRPtrOutput) BioConductorPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) []string {
		if v == nil {
			return nil
		}
		return v.BioConductorPackages
	}).(pulumi.StringArrayOutput)
}

// The CRAN packages to use.
func (o ModelEnvironmentDefinitionRPtrOutput) CranPackages() RCranPackageArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) []RCranPackage {
		if v == nil {
			return nil
		}
		return v.CranPackages
	}).(RCranPackageArrayOutput)
}

// The packages from custom urls.
func (o ModelEnvironmentDefinitionRPtrOutput) CustomUrlPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) []string {
		if v == nil {
			return nil
		}
		return v.CustomUrlPackages
	}).(pulumi.StringArrayOutput)
}

// The packages directly from GitHub.
func (o ModelEnvironmentDefinitionRPtrOutput) GitHubPackages() RGitHubPackageArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) []RGitHubPackage {
		if v == nil {
			return nil
		}
		return v.GitHubPackages
	}).(RGitHubPackageArrayOutput)
}

// The version of R to be installed
func (o ModelEnvironmentDefinitionRPtrOutput) RVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) *string {
		if v == nil {
			return nil
		}
		return v.RVersion
	}).(pulumi.StringPtrOutput)
}

// The Rscript path to use if an environment build is not required.
// The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionRPtrOutput) RscriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) *string {
		if v == nil {
			return nil
		}
		return v.RscriptPath
	}).(pulumi.StringPtrOutput)
}

// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
func (o ModelEnvironmentDefinitionRPtrOutput) SnapshotDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotDate
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the environment is managed by user or by AzureML.
func (o ModelEnvironmentDefinitionRPtrOutput) UserManaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) *bool {
		if v == nil {
			return nil
		}
		return v.UserManaged
	}).(pulumi.BoolPtrOutput)
}

type ModelEnvironmentDefinitionResponseResponseDocker struct {
	// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
	BaseDockerfile *string `pulumi:"baseDockerfile"`
	// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
	BaseImage *string `pulumi:"baseImage"`
	// Image registry that contains the base image.
	BaseImageRegistry *ModelDockerSectionResponseResponseBaseImageRegistry `pulumi:"baseImageRegistry"`
}

// ModelEnvironmentDefinitionResponseResponseDockerInput is an input type that accepts ModelEnvironmentDefinitionResponseResponseDockerArgs and ModelEnvironmentDefinitionResponseResponseDockerOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseResponseDockerInput` via:
//
//          ModelEnvironmentDefinitionResponseResponseDockerArgs{...}
type ModelEnvironmentDefinitionResponseResponseDockerInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseResponseDockerOutput() ModelEnvironmentDefinitionResponseResponseDockerOutput
	ToModelEnvironmentDefinitionResponseResponseDockerOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseResponseDockerOutput
}

type ModelEnvironmentDefinitionResponseResponseDockerArgs struct {
	// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
	BaseDockerfile pulumi.StringPtrInput `pulumi:"baseDockerfile"`
	// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
	BaseImage pulumi.StringPtrInput `pulumi:"baseImage"`
	// Image registry that contains the base image.
	BaseImageRegistry ModelDockerSectionResponseResponseBaseImageRegistryPtrInput `pulumi:"baseImageRegistry"`
}

func (ModelEnvironmentDefinitionResponseResponseDockerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseResponseDocker)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionResponseResponseDockerArgs) ToModelEnvironmentDefinitionResponseResponseDockerOutput() ModelEnvironmentDefinitionResponseResponseDockerOutput {
	return i.ToModelEnvironmentDefinitionResponseResponseDockerOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseResponseDockerArgs) ToModelEnvironmentDefinitionResponseResponseDockerOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseDockerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseDockerOutput)
}

func (i ModelEnvironmentDefinitionResponseResponseDockerArgs) ToModelEnvironmentDefinitionResponseResponseDockerPtrOutput() ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseResponseDockerArgs) ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseDockerOutput).ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionResponseResponseDockerPtrInput is an input type that accepts ModelEnvironmentDefinitionResponseResponseDockerArgs, ModelEnvironmentDefinitionResponseResponseDockerPtr and ModelEnvironmentDefinitionResponseResponseDockerPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseResponseDockerPtrInput` via:
//
//          ModelEnvironmentDefinitionResponseResponseDockerArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionResponseResponseDockerPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseResponseDockerPtrOutput() ModelEnvironmentDefinitionResponseResponseDockerPtrOutput
	ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseResponseDockerPtrOutput
}

type modelEnvironmentDefinitionResponseResponseDockerPtrType ModelEnvironmentDefinitionResponseResponseDockerArgs

func ModelEnvironmentDefinitionResponseResponseDockerPtr(v *ModelEnvironmentDefinitionResponseResponseDockerArgs) ModelEnvironmentDefinitionResponseResponseDockerPtrInput {
	return (*modelEnvironmentDefinitionResponseResponseDockerPtrType)(v)
}

func (*modelEnvironmentDefinitionResponseResponseDockerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseResponseDocker)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionResponseResponseDockerPtrType) ToModelEnvironmentDefinitionResponseResponseDockerPtrOutput() ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionResponseResponseDockerPtrType) ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseDockerPtrOutput)
}

type ModelEnvironmentDefinitionResponseResponseDockerOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseResponseDockerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseResponseDocker)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseResponseDockerOutput) ToModelEnvironmentDefinitionResponseResponseDockerOutput() ModelEnvironmentDefinitionResponseResponseDockerOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseDockerOutput) ToModelEnvironmentDefinitionResponseResponseDockerOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseDockerOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseDockerOutput) ToModelEnvironmentDefinitionResponseResponseDockerPtrOutput() ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return o.ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionResponseResponseDockerOutput) ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelEnvironmentDefinitionResponseResponseDocker) *ModelEnvironmentDefinitionResponseResponseDocker {
		return &v
	}).(ModelEnvironmentDefinitionResponseResponseDockerPtrOutput)
}

// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
func (o ModelEnvironmentDefinitionResponseResponseDockerOutput) BaseDockerfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseDocker) *string { return v.BaseDockerfile }).(pulumi.StringPtrOutput)
}

// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
func (o ModelEnvironmentDefinitionResponseResponseDockerOutput) BaseImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseDocker) *string { return v.BaseImage }).(pulumi.StringPtrOutput)
}

// Image registry that contains the base image.
func (o ModelEnvironmentDefinitionResponseResponseDockerOutput) BaseImageRegistry() ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseDocker) *ModelDockerSectionResponseResponseBaseImageRegistry {
		return v.BaseImageRegistry
	}).(ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput)
}

type ModelEnvironmentDefinitionResponseResponseDockerPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseResponseDockerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseResponseDocker)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseResponseDockerPtrOutput) ToModelEnvironmentDefinitionResponseResponseDockerPtrOutput() ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseDockerPtrOutput) ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseDockerPtrOutput) Elem() ModelEnvironmentDefinitionResponseResponseDockerOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseDocker) ModelEnvironmentDefinitionResponseResponseDocker {
		if v != nil {
			return *v
		}
		var ret ModelEnvironmentDefinitionResponseResponseDocker
		return ret
	}).(ModelEnvironmentDefinitionResponseResponseDockerOutput)
}

// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
func (o ModelEnvironmentDefinitionResponseResponseDockerPtrOutput) BaseDockerfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseDocker) *string {
		if v == nil {
			return nil
		}
		return v.BaseDockerfile
	}).(pulumi.StringPtrOutput)
}

// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
func (o ModelEnvironmentDefinitionResponseResponseDockerPtrOutput) BaseImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseDocker) *string {
		if v == nil {
			return nil
		}
		return v.BaseImage
	}).(pulumi.StringPtrOutput)
}

// Image registry that contains the base image.
func (o ModelEnvironmentDefinitionResponseResponseDockerPtrOutput) BaseImageRegistry() ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseDocker) *ModelDockerSectionResponseResponseBaseImageRegistry {
		if v == nil {
			return nil
		}
		return v.BaseImageRegistry
	}).(ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput)
}

type ModelEnvironmentDefinitionResponseResponsePython struct {
	BaseCondaEnvironment *string `pulumi:"baseCondaEnvironment"`
	// A JObject containing Conda dependencies.
	CondaDependencies interface{} `pulumi:"condaDependencies"`
	// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
	InterpreterPath *string `pulumi:"interpreterPath"`
	// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
	UserManagedDependencies *bool `pulumi:"userManagedDependencies"`
}

// ModelEnvironmentDefinitionResponseResponsePythonInput is an input type that accepts ModelEnvironmentDefinitionResponseResponsePythonArgs and ModelEnvironmentDefinitionResponseResponsePythonOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseResponsePythonInput` via:
//
//          ModelEnvironmentDefinitionResponseResponsePythonArgs{...}
type ModelEnvironmentDefinitionResponseResponsePythonInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseResponsePythonOutput() ModelEnvironmentDefinitionResponseResponsePythonOutput
	ToModelEnvironmentDefinitionResponseResponsePythonOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseResponsePythonOutput
}

type ModelEnvironmentDefinitionResponseResponsePythonArgs struct {
	BaseCondaEnvironment pulumi.StringPtrInput `pulumi:"baseCondaEnvironment"`
	// A JObject containing Conda dependencies.
	CondaDependencies pulumi.Input `pulumi:"condaDependencies"`
	// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
	InterpreterPath pulumi.StringPtrInput `pulumi:"interpreterPath"`
	// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
	UserManagedDependencies pulumi.BoolPtrInput `pulumi:"userManagedDependencies"`
}

func (ModelEnvironmentDefinitionResponseResponsePythonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseResponsePython)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionResponseResponsePythonArgs) ToModelEnvironmentDefinitionResponseResponsePythonOutput() ModelEnvironmentDefinitionResponseResponsePythonOutput {
	return i.ToModelEnvironmentDefinitionResponseResponsePythonOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseResponsePythonArgs) ToModelEnvironmentDefinitionResponseResponsePythonOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponsePythonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponsePythonOutput)
}

func (i ModelEnvironmentDefinitionResponseResponsePythonArgs) ToModelEnvironmentDefinitionResponseResponsePythonPtrOutput() ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseResponsePythonArgs) ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponsePythonOutput).ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionResponseResponsePythonPtrInput is an input type that accepts ModelEnvironmentDefinitionResponseResponsePythonArgs, ModelEnvironmentDefinitionResponseResponsePythonPtr and ModelEnvironmentDefinitionResponseResponsePythonPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseResponsePythonPtrInput` via:
//
//          ModelEnvironmentDefinitionResponseResponsePythonArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionResponseResponsePythonPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseResponsePythonPtrOutput() ModelEnvironmentDefinitionResponseResponsePythonPtrOutput
	ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseResponsePythonPtrOutput
}

type modelEnvironmentDefinitionResponseResponsePythonPtrType ModelEnvironmentDefinitionResponseResponsePythonArgs

func ModelEnvironmentDefinitionResponseResponsePythonPtr(v *ModelEnvironmentDefinitionResponseResponsePythonArgs) ModelEnvironmentDefinitionResponseResponsePythonPtrInput {
	return (*modelEnvironmentDefinitionResponseResponsePythonPtrType)(v)
}

func (*modelEnvironmentDefinitionResponseResponsePythonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseResponsePython)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionResponseResponsePythonPtrType) ToModelEnvironmentDefinitionResponseResponsePythonPtrOutput() ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionResponseResponsePythonPtrType) ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponsePythonPtrOutput)
}

type ModelEnvironmentDefinitionResponseResponsePythonOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseResponsePythonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseResponsePython)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseResponsePythonOutput) ToModelEnvironmentDefinitionResponseResponsePythonOutput() ModelEnvironmentDefinitionResponseResponsePythonOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponsePythonOutput) ToModelEnvironmentDefinitionResponseResponsePythonOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponsePythonOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponsePythonOutput) ToModelEnvironmentDefinitionResponseResponsePythonPtrOutput() ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return o.ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionResponseResponsePythonOutput) ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelEnvironmentDefinitionResponseResponsePython) *ModelEnvironmentDefinitionResponseResponsePython {
		return &v
	}).(ModelEnvironmentDefinitionResponseResponsePythonPtrOutput)
}

func (o ModelEnvironmentDefinitionResponseResponsePythonOutput) BaseCondaEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponsePython) *string { return v.BaseCondaEnvironment }).(pulumi.StringPtrOutput)
}

// A JObject containing Conda dependencies.
func (o ModelEnvironmentDefinitionResponseResponsePythonOutput) CondaDependencies() pulumi.AnyOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponsePython) interface{} { return v.CondaDependencies }).(pulumi.AnyOutput)
}

// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionResponseResponsePythonOutput) InterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponsePython) *string { return v.InterpreterPath }).(pulumi.StringPtrOutput)
}

// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
func (o ModelEnvironmentDefinitionResponseResponsePythonOutput) UserManagedDependencies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponsePython) *bool { return v.UserManagedDependencies }).(pulumi.BoolPtrOutput)
}

type ModelEnvironmentDefinitionResponseResponsePythonPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseResponsePythonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseResponsePython)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseResponsePythonPtrOutput) ToModelEnvironmentDefinitionResponseResponsePythonPtrOutput() ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponsePythonPtrOutput) ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponsePythonPtrOutput) Elem() ModelEnvironmentDefinitionResponseResponsePythonOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponsePython) ModelEnvironmentDefinitionResponseResponsePython {
		if v != nil {
			return *v
		}
		var ret ModelEnvironmentDefinitionResponseResponsePython
		return ret
	}).(ModelEnvironmentDefinitionResponseResponsePythonOutput)
}

func (o ModelEnvironmentDefinitionResponseResponsePythonPtrOutput) BaseCondaEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponsePython) *string {
		if v == nil {
			return nil
		}
		return v.BaseCondaEnvironment
	}).(pulumi.StringPtrOutput)
}

// A JObject containing Conda dependencies.
func (o ModelEnvironmentDefinitionResponseResponsePythonPtrOutput) CondaDependencies() pulumi.AnyOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponsePython) interface{} {
		if v == nil {
			return nil
		}
		return v.CondaDependencies
	}).(pulumi.AnyOutput)
}

// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionResponseResponsePythonPtrOutput) InterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponsePython) *string {
		if v == nil {
			return nil
		}
		return v.InterpreterPath
	}).(pulumi.StringPtrOutput)
}

// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
func (o ModelEnvironmentDefinitionResponseResponsePythonPtrOutput) UserManagedDependencies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponsePython) *bool {
		if v == nil {
			return nil
		}
		return v.UserManagedDependencies
	}).(pulumi.BoolPtrOutput)
}

type ModelEnvironmentDefinitionResponseResponseR struct {
	// The packages from Bioconductor.
	BioConductorPackages []string `pulumi:"bioConductorPackages"`
	// The CRAN packages to use.
	CranPackages []RCranPackageResponse `pulumi:"cranPackages"`
	// The packages from custom urls.
	CustomUrlPackages []string `pulumi:"customUrlPackages"`
	// The packages directly from GitHub.
	GitHubPackages []RGitHubPackageResponseResponse `pulumi:"gitHubPackages"`
	// The version of R to be installed
	RVersion *string `pulumi:"rVersion"`
	// The Rscript path to use if an environment build is not required.
	// The path specified gets used to call the user script.
	RscriptPath *string `pulumi:"rscriptPath"`
	// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
	SnapshotDate *string `pulumi:"snapshotDate"`
	// Indicates whether the environment is managed by user or by AzureML.
	UserManaged *bool `pulumi:"userManaged"`
}

// ModelEnvironmentDefinitionResponseResponseRInput is an input type that accepts ModelEnvironmentDefinitionResponseResponseRArgs and ModelEnvironmentDefinitionResponseResponseROutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseResponseRInput` via:
//
//          ModelEnvironmentDefinitionResponseResponseRArgs{...}
type ModelEnvironmentDefinitionResponseResponseRInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseResponseROutput() ModelEnvironmentDefinitionResponseResponseROutput
	ToModelEnvironmentDefinitionResponseResponseROutputWithContext(context.Context) ModelEnvironmentDefinitionResponseResponseROutput
}

type ModelEnvironmentDefinitionResponseResponseRArgs struct {
	// The packages from Bioconductor.
	BioConductorPackages pulumi.StringArrayInput `pulumi:"bioConductorPackages"`
	// The CRAN packages to use.
	CranPackages RCranPackageResponseArrayInput `pulumi:"cranPackages"`
	// The packages from custom urls.
	CustomUrlPackages pulumi.StringArrayInput `pulumi:"customUrlPackages"`
	// The packages directly from GitHub.
	GitHubPackages RGitHubPackageResponseResponseArrayInput `pulumi:"gitHubPackages"`
	// The version of R to be installed
	RVersion pulumi.StringPtrInput `pulumi:"rVersion"`
	// The Rscript path to use if an environment build is not required.
	// The path specified gets used to call the user script.
	RscriptPath pulumi.StringPtrInput `pulumi:"rscriptPath"`
	// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
	SnapshotDate pulumi.StringPtrInput `pulumi:"snapshotDate"`
	// Indicates whether the environment is managed by user or by AzureML.
	UserManaged pulumi.BoolPtrInput `pulumi:"userManaged"`
}

func (ModelEnvironmentDefinitionResponseResponseRArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseResponseR)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionResponseResponseRArgs) ToModelEnvironmentDefinitionResponseResponseROutput() ModelEnvironmentDefinitionResponseResponseROutput {
	return i.ToModelEnvironmentDefinitionResponseResponseROutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseResponseRArgs) ToModelEnvironmentDefinitionResponseResponseROutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseROutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseROutput)
}

func (i ModelEnvironmentDefinitionResponseResponseRArgs) ToModelEnvironmentDefinitionResponseResponseRPtrOutput() ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseResponseRArgs) ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseROutput).ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionResponseResponseRPtrInput is an input type that accepts ModelEnvironmentDefinitionResponseResponseRArgs, ModelEnvironmentDefinitionResponseResponseRPtr and ModelEnvironmentDefinitionResponseResponseRPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseResponseRPtrInput` via:
//
//          ModelEnvironmentDefinitionResponseResponseRArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionResponseResponseRPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseResponseRPtrOutput() ModelEnvironmentDefinitionResponseResponseRPtrOutput
	ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseResponseRPtrOutput
}

type modelEnvironmentDefinitionResponseResponseRPtrType ModelEnvironmentDefinitionResponseResponseRArgs

func ModelEnvironmentDefinitionResponseResponseRPtr(v *ModelEnvironmentDefinitionResponseResponseRArgs) ModelEnvironmentDefinitionResponseResponseRPtrInput {
	return (*modelEnvironmentDefinitionResponseResponseRPtrType)(v)
}

func (*modelEnvironmentDefinitionResponseResponseRPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseResponseR)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionResponseResponseRPtrType) ToModelEnvironmentDefinitionResponseResponseRPtrOutput() ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionResponseResponseRPtrType) ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseRPtrOutput)
}

type ModelEnvironmentDefinitionResponseResponseROutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseResponseROutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseResponseR)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseResponseROutput) ToModelEnvironmentDefinitionResponseResponseROutput() ModelEnvironmentDefinitionResponseResponseROutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseROutput) ToModelEnvironmentDefinitionResponseResponseROutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseROutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseROutput) ToModelEnvironmentDefinitionResponseResponseRPtrOutput() ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return o.ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionResponseResponseROutput) ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelEnvironmentDefinitionResponseResponseR) *ModelEnvironmentDefinitionResponseResponseR {
		return &v
	}).(ModelEnvironmentDefinitionResponseResponseRPtrOutput)
}

// The packages from Bioconductor.
func (o ModelEnvironmentDefinitionResponseResponseROutput) BioConductorPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseR) []string { return v.BioConductorPackages }).(pulumi.StringArrayOutput)
}

// The CRAN packages to use.
func (o ModelEnvironmentDefinitionResponseResponseROutput) CranPackages() RCranPackageResponseArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseR) []RCranPackageResponse { return v.CranPackages }).(RCranPackageResponseArrayOutput)
}

// The packages from custom urls.
func (o ModelEnvironmentDefinitionResponseResponseROutput) CustomUrlPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseR) []string { return v.CustomUrlPackages }).(pulumi.StringArrayOutput)
}

// The packages directly from GitHub.
func (o ModelEnvironmentDefinitionResponseResponseROutput) GitHubPackages() RGitHubPackageResponseResponseArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseR) []RGitHubPackageResponseResponse {
		return v.GitHubPackages
	}).(RGitHubPackageResponseResponseArrayOutput)
}

// The version of R to be installed
func (o ModelEnvironmentDefinitionResponseResponseROutput) RVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseR) *string { return v.RVersion }).(pulumi.StringPtrOutput)
}

// The Rscript path to use if an environment build is not required.
// The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionResponseResponseROutput) RscriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseR) *string { return v.RscriptPath }).(pulumi.StringPtrOutput)
}

// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
func (o ModelEnvironmentDefinitionResponseResponseROutput) SnapshotDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseR) *string { return v.SnapshotDate }).(pulumi.StringPtrOutput)
}

// Indicates whether the environment is managed by user or by AzureML.
func (o ModelEnvironmentDefinitionResponseResponseROutput) UserManaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseR) *bool { return v.UserManaged }).(pulumi.BoolPtrOutput)
}

type ModelEnvironmentDefinitionResponseResponseRPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseResponseRPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseResponseR)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) ToModelEnvironmentDefinitionResponseResponseRPtrOutput() ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) Elem() ModelEnvironmentDefinitionResponseResponseROutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) ModelEnvironmentDefinitionResponseResponseR {
		if v != nil {
			return *v
		}
		var ret ModelEnvironmentDefinitionResponseResponseR
		return ret
	}).(ModelEnvironmentDefinitionResponseResponseROutput)
}

// The packages from Bioconductor.
func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) BioConductorPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) []string {
		if v == nil {
			return nil
		}
		return v.BioConductorPackages
	}).(pulumi.StringArrayOutput)
}

// The CRAN packages to use.
func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) CranPackages() RCranPackageResponseArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) []RCranPackageResponse {
		if v == nil {
			return nil
		}
		return v.CranPackages
	}).(RCranPackageResponseArrayOutput)
}

// The packages from custom urls.
func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) CustomUrlPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) []string {
		if v == nil {
			return nil
		}
		return v.CustomUrlPackages
	}).(pulumi.StringArrayOutput)
}

// The packages directly from GitHub.
func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) GitHubPackages() RGitHubPackageResponseResponseArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) []RGitHubPackageResponseResponse {
		if v == nil {
			return nil
		}
		return v.GitHubPackages
	}).(RGitHubPackageResponseResponseArrayOutput)
}

// The version of R to be installed
func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) RVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) *string {
		if v == nil {
			return nil
		}
		return v.RVersion
	}).(pulumi.StringPtrOutput)
}

// The Rscript path to use if an environment build is not required.
// The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) RscriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) *string {
		if v == nil {
			return nil
		}
		return v.RscriptPath
	}).(pulumi.StringPtrOutput)
}

// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) SnapshotDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotDate
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the environment is managed by user or by AzureML.
func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) UserManaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) *bool {
		if v == nil {
			return nil
		}
		return v.UserManaged
	}).(pulumi.BoolPtrOutput)
}

type ModelEnvironmentDefinitionResponseResponseSpark struct {
	// The Spark packages to use.
	Packages []SparkMavenPackageResponse `pulumi:"packages"`
	// Whether to precache the packages.
	PrecachePackages *bool `pulumi:"precachePackages"`
	// The list of spark repositories.
	Repositories []string `pulumi:"repositories"`
}

// ModelEnvironmentDefinitionResponseResponseSparkInput is an input type that accepts ModelEnvironmentDefinitionResponseResponseSparkArgs and ModelEnvironmentDefinitionResponseResponseSparkOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseResponseSparkInput` via:
//
//          ModelEnvironmentDefinitionResponseResponseSparkArgs{...}
type ModelEnvironmentDefinitionResponseResponseSparkInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseResponseSparkOutput() ModelEnvironmentDefinitionResponseResponseSparkOutput
	ToModelEnvironmentDefinitionResponseResponseSparkOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseResponseSparkOutput
}

type ModelEnvironmentDefinitionResponseResponseSparkArgs struct {
	// The Spark packages to use.
	Packages SparkMavenPackageResponseArrayInput `pulumi:"packages"`
	// Whether to precache the packages.
	PrecachePackages pulumi.BoolPtrInput `pulumi:"precachePackages"`
	// The list of spark repositories.
	Repositories pulumi.StringArrayInput `pulumi:"repositories"`
}

func (ModelEnvironmentDefinitionResponseResponseSparkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseResponseSpark)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionResponseResponseSparkArgs) ToModelEnvironmentDefinitionResponseResponseSparkOutput() ModelEnvironmentDefinitionResponseResponseSparkOutput {
	return i.ToModelEnvironmentDefinitionResponseResponseSparkOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseResponseSparkArgs) ToModelEnvironmentDefinitionResponseResponseSparkOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseSparkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseSparkOutput)
}

func (i ModelEnvironmentDefinitionResponseResponseSparkArgs) ToModelEnvironmentDefinitionResponseResponseSparkPtrOutput() ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseResponseSparkArgs) ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseSparkOutput).ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionResponseResponseSparkPtrInput is an input type that accepts ModelEnvironmentDefinitionResponseResponseSparkArgs, ModelEnvironmentDefinitionResponseResponseSparkPtr and ModelEnvironmentDefinitionResponseResponseSparkPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseResponseSparkPtrInput` via:
//
//          ModelEnvironmentDefinitionResponseResponseSparkArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionResponseResponseSparkPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseResponseSparkPtrOutput() ModelEnvironmentDefinitionResponseResponseSparkPtrOutput
	ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseResponseSparkPtrOutput
}

type modelEnvironmentDefinitionResponseResponseSparkPtrType ModelEnvironmentDefinitionResponseResponseSparkArgs

func ModelEnvironmentDefinitionResponseResponseSparkPtr(v *ModelEnvironmentDefinitionResponseResponseSparkArgs) ModelEnvironmentDefinitionResponseResponseSparkPtrInput {
	return (*modelEnvironmentDefinitionResponseResponseSparkPtrType)(v)
}

func (*modelEnvironmentDefinitionResponseResponseSparkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseResponseSpark)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionResponseResponseSparkPtrType) ToModelEnvironmentDefinitionResponseResponseSparkPtrOutput() ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionResponseResponseSparkPtrType) ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseSparkPtrOutput)
}

type ModelEnvironmentDefinitionResponseResponseSparkOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseResponseSparkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseResponseSpark)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseResponseSparkOutput) ToModelEnvironmentDefinitionResponseResponseSparkOutput() ModelEnvironmentDefinitionResponseResponseSparkOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseSparkOutput) ToModelEnvironmentDefinitionResponseResponseSparkOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseSparkOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseSparkOutput) ToModelEnvironmentDefinitionResponseResponseSparkPtrOutput() ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return o.ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionResponseResponseSparkOutput) ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelEnvironmentDefinitionResponseResponseSpark) *ModelEnvironmentDefinitionResponseResponseSpark {
		return &v
	}).(ModelEnvironmentDefinitionResponseResponseSparkPtrOutput)
}

// The Spark packages to use.
func (o ModelEnvironmentDefinitionResponseResponseSparkOutput) Packages() SparkMavenPackageResponseArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseSpark) []SparkMavenPackageResponse { return v.Packages }).(SparkMavenPackageResponseArrayOutput)
}

// Whether to precache the packages.
func (o ModelEnvironmentDefinitionResponseResponseSparkOutput) PrecachePackages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseSpark) *bool { return v.PrecachePackages }).(pulumi.BoolPtrOutput)
}

// The list of spark repositories.
func (o ModelEnvironmentDefinitionResponseResponseSparkOutput) Repositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseSpark) []string { return v.Repositories }).(pulumi.StringArrayOutput)
}

type ModelEnvironmentDefinitionResponseResponseSparkPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseResponseSparkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseResponseSpark)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseResponseSparkPtrOutput) ToModelEnvironmentDefinitionResponseResponseSparkPtrOutput() ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseSparkPtrOutput) ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseSparkPtrOutput) Elem() ModelEnvironmentDefinitionResponseResponseSparkOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseSpark) ModelEnvironmentDefinitionResponseResponseSpark {
		if v != nil {
			return *v
		}
		var ret ModelEnvironmentDefinitionResponseResponseSpark
		return ret
	}).(ModelEnvironmentDefinitionResponseResponseSparkOutput)
}

// The Spark packages to use.
func (o ModelEnvironmentDefinitionResponseResponseSparkPtrOutput) Packages() SparkMavenPackageResponseArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseSpark) []SparkMavenPackageResponse {
		if v == nil {
			return nil
		}
		return v.Packages
	}).(SparkMavenPackageResponseArrayOutput)
}

// Whether to precache the packages.
func (o ModelEnvironmentDefinitionResponseResponseSparkPtrOutput) PrecachePackages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseSpark) *bool {
		if v == nil {
			return nil
		}
		return v.PrecachePackages
	}).(pulumi.BoolPtrOutput)
}

// The list of spark repositories.
func (o ModelEnvironmentDefinitionResponseResponseSparkPtrOutput) Repositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseSpark) []string {
		if v == nil {
			return nil
		}
		return v.Repositories
	}).(pulumi.StringArrayOutput)
}

type ModelEnvironmentDefinitionSpark struct {
	// The Spark packages to use.
	Packages []SparkMavenPackage `pulumi:"packages"`
	// Whether to precache the packages.
	PrecachePackages *bool `pulumi:"precachePackages"`
	// The list of spark repositories.
	Repositories []string `pulumi:"repositories"`
}

// ModelEnvironmentDefinitionSparkInput is an input type that accepts ModelEnvironmentDefinitionSparkArgs and ModelEnvironmentDefinitionSparkOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionSparkInput` via:
//
//          ModelEnvironmentDefinitionSparkArgs{...}
type ModelEnvironmentDefinitionSparkInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionSparkOutput() ModelEnvironmentDefinitionSparkOutput
	ToModelEnvironmentDefinitionSparkOutputWithContext(context.Context) ModelEnvironmentDefinitionSparkOutput
}

type ModelEnvironmentDefinitionSparkArgs struct {
	// The Spark packages to use.
	Packages SparkMavenPackageArrayInput `pulumi:"packages"`
	// Whether to precache the packages.
	PrecachePackages pulumi.BoolPtrInput `pulumi:"precachePackages"`
	// The list of spark repositories.
	Repositories pulumi.StringArrayInput `pulumi:"repositories"`
}

func (ModelEnvironmentDefinitionSparkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionSpark)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionSparkArgs) ToModelEnvironmentDefinitionSparkOutput() ModelEnvironmentDefinitionSparkOutput {
	return i.ToModelEnvironmentDefinitionSparkOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionSparkArgs) ToModelEnvironmentDefinitionSparkOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionSparkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionSparkOutput)
}

func (i ModelEnvironmentDefinitionSparkArgs) ToModelEnvironmentDefinitionSparkPtrOutput() ModelEnvironmentDefinitionSparkPtrOutput {
	return i.ToModelEnvironmentDefinitionSparkPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionSparkArgs) ToModelEnvironmentDefinitionSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionSparkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionSparkOutput).ToModelEnvironmentDefinitionSparkPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionSparkPtrInput is an input type that accepts ModelEnvironmentDefinitionSparkArgs, ModelEnvironmentDefinitionSparkPtr and ModelEnvironmentDefinitionSparkPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionSparkPtrInput` via:
//
//          ModelEnvironmentDefinitionSparkArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionSparkPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionSparkPtrOutput() ModelEnvironmentDefinitionSparkPtrOutput
	ToModelEnvironmentDefinitionSparkPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionSparkPtrOutput
}

type modelEnvironmentDefinitionSparkPtrType ModelEnvironmentDefinitionSparkArgs

func ModelEnvironmentDefinitionSparkPtr(v *ModelEnvironmentDefinitionSparkArgs) ModelEnvironmentDefinitionSparkPtrInput {
	return (*modelEnvironmentDefinitionSparkPtrType)(v)
}

func (*modelEnvironmentDefinitionSparkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionSpark)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionSparkPtrType) ToModelEnvironmentDefinitionSparkPtrOutput() ModelEnvironmentDefinitionSparkPtrOutput {
	return i.ToModelEnvironmentDefinitionSparkPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionSparkPtrType) ToModelEnvironmentDefinitionSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionSparkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionSparkPtrOutput)
}

type ModelEnvironmentDefinitionSparkOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionSparkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionSpark)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionSparkOutput) ToModelEnvironmentDefinitionSparkOutput() ModelEnvironmentDefinitionSparkOutput {
	return o
}

func (o ModelEnvironmentDefinitionSparkOutput) ToModelEnvironmentDefinitionSparkOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionSparkOutput {
	return o
}

func (o ModelEnvironmentDefinitionSparkOutput) ToModelEnvironmentDefinitionSparkPtrOutput() ModelEnvironmentDefinitionSparkPtrOutput {
	return o.ToModelEnvironmentDefinitionSparkPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionSparkOutput) ToModelEnvironmentDefinitionSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionSparkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelEnvironmentDefinitionSpark) *ModelEnvironmentDefinitionSpark {
		return &v
	}).(ModelEnvironmentDefinitionSparkPtrOutput)
}

// The Spark packages to use.
func (o ModelEnvironmentDefinitionSparkOutput) Packages() SparkMavenPackageArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionSpark) []SparkMavenPackage { return v.Packages }).(SparkMavenPackageArrayOutput)
}

// Whether to precache the packages.
func (o ModelEnvironmentDefinitionSparkOutput) PrecachePackages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionSpark) *bool { return v.PrecachePackages }).(pulumi.BoolPtrOutput)
}

// The list of spark repositories.
func (o ModelEnvironmentDefinitionSparkOutput) Repositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionSpark) []string { return v.Repositories }).(pulumi.StringArrayOutput)
}

type ModelEnvironmentDefinitionSparkPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionSparkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionSpark)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionSparkPtrOutput) ToModelEnvironmentDefinitionSparkPtrOutput() ModelEnvironmentDefinitionSparkPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionSparkPtrOutput) ToModelEnvironmentDefinitionSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionSparkPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionSparkPtrOutput) Elem() ModelEnvironmentDefinitionSparkOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionSpark) ModelEnvironmentDefinitionSpark {
		if v != nil {
			return *v
		}
		var ret ModelEnvironmentDefinitionSpark
		return ret
	}).(ModelEnvironmentDefinitionSparkOutput)
}

// The Spark packages to use.
func (o ModelEnvironmentDefinitionSparkPtrOutput) Packages() SparkMavenPackageArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionSpark) []SparkMavenPackage {
		if v == nil {
			return nil
		}
		return v.Packages
	}).(SparkMavenPackageArrayOutput)
}

// Whether to precache the packages.
func (o ModelEnvironmentDefinitionSparkPtrOutput) PrecachePackages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionSpark) *bool {
		if v == nil {
			return nil
		}
		return v.PrecachePackages
	}).(pulumi.BoolPtrOutput)
}

// The list of spark repositories.
func (o ModelEnvironmentDefinitionSparkPtrOutput) Repositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionSpark) []string {
		if v == nil {
			return nil
		}
		return v.Repositories
	}).(pulumi.StringArrayOutput)
}

type ModelResponse struct {
	// The Model creation time (UTC).
	CreatedTime *string `pulumi:"createdTime"`
	// The list of datasets associated with the model.
	Datasets []DatasetReferenceResponse `pulumi:"datasets"`
	// Models derived from this model
	DerivedModelIds []string `pulumi:"derivedModelIds"`
	// The Model description text.
	Description *string `pulumi:"description"`
	// The name of the experiment where this model was created.
	ExperimentName *string `pulumi:"experimentName"`
	// The Model framework.
	Framework *string `pulumi:"framework"`
	// The Model framework version.
	FrameworkVersion *string `pulumi:"frameworkVersion"`
	// The Model Id.
	Id *string `pulumi:"id"`
	// The Model tag dictionary. Items are mutable.
	KvTags map[string]string `pulumi:"kvTags"`
	// The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
	MimeType string `pulumi:"mimeType"`
	// The Model last modified time (UTC).
	ModifiedTime *string `pulumi:"modifiedTime"`
	// The Model name.
	Name string `pulumi:"name"`
	// The Parent Model Id.
	ParentModelId *string `pulumi:"parentModelId"`
	// The Model property dictionary. Properties are immutable.
	Properties map[string]string `pulumi:"properties"`
	// Resource requirements for the model
	ResourceRequirements *ContainerResourceRequirementsResponse `pulumi:"resourceRequirements"`
	// The RunId that created this model.
	RunId *string `pulumi:"runId"`
	// Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleInputData *string `pulumi:"sampleInputData"`
	// Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleOutputData *string `pulumi:"sampleOutputData"`
	// Indicates whether we need to unpack the Model during docker Image creation.
	Unpack *bool `pulumi:"unpack"`
	// The URL of the Model. Usually a SAS URL.
	Url string `pulumi:"url"`
	// The Model version assigned by Model Management Service.
	Version *float64 `pulumi:"version"`
}

// ModelResponseInput is an input type that accepts ModelResponseArgs and ModelResponseOutput values.
// You can construct a concrete instance of `ModelResponseInput` via:
//
//          ModelResponseArgs{...}
type ModelResponseInput interface {
	pulumi.Input

	ToModelResponseOutput() ModelResponseOutput
	ToModelResponseOutputWithContext(context.Context) ModelResponseOutput
}

type ModelResponseArgs struct {
	// The Model creation time (UTC).
	CreatedTime pulumi.StringPtrInput `pulumi:"createdTime"`
	// The list of datasets associated with the model.
	Datasets DatasetReferenceResponseArrayInput `pulumi:"datasets"`
	// Models derived from this model
	DerivedModelIds pulumi.StringArrayInput `pulumi:"derivedModelIds"`
	// The Model description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the experiment where this model was created.
	ExperimentName pulumi.StringPtrInput `pulumi:"experimentName"`
	// The Model framework.
	Framework pulumi.StringPtrInput `pulumi:"framework"`
	// The Model framework version.
	FrameworkVersion pulumi.StringPtrInput `pulumi:"frameworkVersion"`
	// The Model Id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Model tag dictionary. Items are mutable.
	KvTags pulumi.StringMapInput `pulumi:"kvTags"`
	// The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
	MimeType pulumi.StringInput `pulumi:"mimeType"`
	// The Model last modified time (UTC).
	ModifiedTime pulumi.StringPtrInput `pulumi:"modifiedTime"`
	// The Model name.
	Name pulumi.StringInput `pulumi:"name"`
	// The Parent Model Id.
	ParentModelId pulumi.StringPtrInput `pulumi:"parentModelId"`
	// The Model property dictionary. Properties are immutable.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Resource requirements for the model
	ResourceRequirements ContainerResourceRequirementsResponsePtrInput `pulumi:"resourceRequirements"`
	// The RunId that created this model.
	RunId pulumi.StringPtrInput `pulumi:"runId"`
	// Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleInputData pulumi.StringPtrInput `pulumi:"sampleInputData"`
	// Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleOutputData pulumi.StringPtrInput `pulumi:"sampleOutputData"`
	// Indicates whether we need to unpack the Model during docker Image creation.
	Unpack pulumi.BoolPtrInput `pulumi:"unpack"`
	// The URL of the Model. Usually a SAS URL.
	Url pulumi.StringInput `pulumi:"url"`
	// The Model version assigned by Model Management Service.
	Version pulumi.Float64PtrInput `pulumi:"version"`
}

func (ModelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelResponse)(nil)).Elem()
}

func (i ModelResponseArgs) ToModelResponseOutput() ModelResponseOutput {
	return i.ToModelResponseOutputWithContext(context.Background())
}

func (i ModelResponseArgs) ToModelResponseOutputWithContext(ctx context.Context) ModelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelResponseOutput)
}

// ModelResponseArrayInput is an input type that accepts ModelResponseArray and ModelResponseArrayOutput values.
// You can construct a concrete instance of `ModelResponseArrayInput` via:
//
//          ModelResponseArray{ ModelResponseArgs{...} }
type ModelResponseArrayInput interface {
	pulumi.Input

	ToModelResponseArrayOutput() ModelResponseArrayOutput
	ToModelResponseArrayOutputWithContext(context.Context) ModelResponseArrayOutput
}

type ModelResponseArray []ModelResponseInput

func (ModelResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelResponse)(nil)).Elem()
}

func (i ModelResponseArray) ToModelResponseArrayOutput() ModelResponseArrayOutput {
	return i.ToModelResponseArrayOutputWithContext(context.Background())
}

func (i ModelResponseArray) ToModelResponseArrayOutputWithContext(ctx context.Context) ModelResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelResponseArrayOutput)
}

type ModelResponseOutput struct{ *pulumi.OutputState }

func (ModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelResponse)(nil)).Elem()
}

func (o ModelResponseOutput) ToModelResponseOutput() ModelResponseOutput {
	return o
}

func (o ModelResponseOutput) ToModelResponseOutputWithContext(ctx context.Context) ModelResponseOutput {
	return o
}

// The Model creation time (UTC).
func (o ModelResponseOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

// The list of datasets associated with the model.
func (o ModelResponseOutput) Datasets() DatasetReferenceResponseArrayOutput {
	return o.ApplyT(func(v ModelResponse) []DatasetReferenceResponse { return v.Datasets }).(DatasetReferenceResponseArrayOutput)
}

// Models derived from this model
func (o ModelResponseOutput) DerivedModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelResponse) []string { return v.DerivedModelIds }).(pulumi.StringArrayOutput)
}

// The Model description text.
func (o ModelResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the experiment where this model was created.
func (o ModelResponseOutput) ExperimentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.ExperimentName }).(pulumi.StringPtrOutput)
}

// The Model framework.
func (o ModelResponseOutput) Framework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.Framework }).(pulumi.StringPtrOutput)
}

// The Model framework version.
func (o ModelResponseOutput) FrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.FrameworkVersion }).(pulumi.StringPtrOutput)
}

// The Model Id.
func (o ModelResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Model tag dictionary. Items are mutable.
func (o ModelResponseOutput) KvTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelResponse) map[string]string { return v.KvTags }).(pulumi.StringMapOutput)
}

// The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
func (o ModelResponseOutput) MimeType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelResponse) string { return v.MimeType }).(pulumi.StringOutput)
}

// The Model last modified time (UTC).
func (o ModelResponseOutput) ModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.ModifiedTime }).(pulumi.StringPtrOutput)
}

// The Model name.
func (o ModelResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ModelResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The Parent Model Id.
func (o ModelResponseOutput) ParentModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.ParentModelId }).(pulumi.StringPtrOutput)
}

// The Model property dictionary. Properties are immutable.
func (o ModelResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Resource requirements for the model
func (o ModelResponseOutput) ResourceRequirements() ContainerResourceRequirementsResponsePtrOutput {
	return o.ApplyT(func(v ModelResponse) *ContainerResourceRequirementsResponse { return v.ResourceRequirements }).(ContainerResourceRequirementsResponsePtrOutput)
}

// The RunId that created this model.
func (o ModelResponseOutput) RunId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.RunId }).(pulumi.StringPtrOutput)
}

// Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
func (o ModelResponseOutput) SampleInputData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.SampleInputData }).(pulumi.StringPtrOutput)
}

// Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
func (o ModelResponseOutput) SampleOutputData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.SampleOutputData }).(pulumi.StringPtrOutput)
}

// Indicates whether we need to unpack the Model during docker Image creation.
func (o ModelResponseOutput) Unpack() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelResponse) *bool { return v.Unpack }).(pulumi.BoolPtrOutput)
}

// The URL of the Model. Usually a SAS URL.
func (o ModelResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ModelResponse) string { return v.Url }).(pulumi.StringOutput)
}

// The Model version assigned by Model Management Service.
func (o ModelResponseOutput) Version() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelResponse) *float64 { return v.Version }).(pulumi.Float64PtrOutput)
}

type ModelResponseArrayOutput struct{ *pulumi.OutputState }

func (ModelResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelResponse)(nil)).Elem()
}

func (o ModelResponseArrayOutput) ToModelResponseArrayOutput() ModelResponseArrayOutput {
	return o
}

func (o ModelResponseArrayOutput) ToModelResponseArrayOutputWithContext(ctx context.Context) ModelResponseArrayOutput {
	return o
}

func (o ModelResponseArrayOutput) Index(i pulumi.IntInput) ModelResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelResponse {
		return vs[0].([]ModelResponse)[vs[1].(int)]
	}).(ModelResponseOutput)
}

type ModelVersionType struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId *string `pulumi:"datastoreId"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Mapping of model flavors to their properties.
	Flavors map[string]FlavorData `pulumi:"flavors"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// The path of the file/directory in the datastore.
	Path string `pulumi:"path"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// ModelVersionTypeInput is an input type that accepts ModelVersionTypeArgs and ModelVersionTypeOutput values.
// You can construct a concrete instance of `ModelVersionTypeInput` via:
//
//          ModelVersionTypeArgs{...}
type ModelVersionTypeInput interface {
	pulumi.Input

	ToModelVersionTypeOutput() ModelVersionTypeOutput
	ToModelVersionTypeOutputWithContext(context.Context) ModelVersionTypeOutput
}

type ModelVersionTypeArgs struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Mapping of model flavors to their properties.
	Flavors FlavorDataMapInput `pulumi:"flavors"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous pulumi.BoolPtrInput `pulumi:"isAnonymous"`
	// The path of the file/directory in the datastore.
	Path pulumi.StringInput `pulumi:"path"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ModelVersionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelVersionType)(nil)).Elem()
}

func (i ModelVersionTypeArgs) ToModelVersionTypeOutput() ModelVersionTypeOutput {
	return i.ToModelVersionTypeOutputWithContext(context.Background())
}

func (i ModelVersionTypeArgs) ToModelVersionTypeOutputWithContext(ctx context.Context) ModelVersionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelVersionTypeOutput)
}

func (i ModelVersionTypeArgs) ToModelVersionTypePtrOutput() ModelVersionTypePtrOutput {
	return i.ToModelVersionTypePtrOutputWithContext(context.Background())
}

func (i ModelVersionTypeArgs) ToModelVersionTypePtrOutputWithContext(ctx context.Context) ModelVersionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelVersionTypeOutput).ToModelVersionTypePtrOutputWithContext(ctx)
}

// ModelVersionTypePtrInput is an input type that accepts ModelVersionTypeArgs, ModelVersionTypePtr and ModelVersionTypePtrOutput values.
// You can construct a concrete instance of `ModelVersionTypePtrInput` via:
//
//          ModelVersionTypeArgs{...}
//
//  or:
//
//          nil
type ModelVersionTypePtrInput interface {
	pulumi.Input

	ToModelVersionTypePtrOutput() ModelVersionTypePtrOutput
	ToModelVersionTypePtrOutputWithContext(context.Context) ModelVersionTypePtrOutput
}

type modelVersionTypePtrType ModelVersionTypeArgs

func ModelVersionTypePtr(v *ModelVersionTypeArgs) ModelVersionTypePtrInput {
	return (*modelVersionTypePtrType)(v)
}

func (*modelVersionTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelVersionType)(nil)).Elem()
}

func (i *modelVersionTypePtrType) ToModelVersionTypePtrOutput() ModelVersionTypePtrOutput {
	return i.ToModelVersionTypePtrOutputWithContext(context.Background())
}

func (i *modelVersionTypePtrType) ToModelVersionTypePtrOutputWithContext(ctx context.Context) ModelVersionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelVersionTypePtrOutput)
}

type ModelVersionTypeOutput struct{ *pulumi.OutputState }

func (ModelVersionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelVersionType)(nil)).Elem()
}

func (o ModelVersionTypeOutput) ToModelVersionTypeOutput() ModelVersionTypeOutput {
	return o
}

func (o ModelVersionTypeOutput) ToModelVersionTypeOutputWithContext(ctx context.Context) ModelVersionTypeOutput {
	return o
}

func (o ModelVersionTypeOutput) ToModelVersionTypePtrOutput() ModelVersionTypePtrOutput {
	return o.ToModelVersionTypePtrOutputWithContext(context.Background())
}

func (o ModelVersionTypeOutput) ToModelVersionTypePtrOutputWithContext(ctx context.Context) ModelVersionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelVersionType) *ModelVersionType {
		return &v
	}).(ModelVersionTypePtrOutput)
}

// ARM resource ID of the datastore where the asset is located.
func (o ModelVersionTypeOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelVersionType) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o ModelVersionTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelVersionType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Mapping of model flavors to their properties.
func (o ModelVersionTypeOutput) Flavors() FlavorDataMapOutput {
	return o.ApplyT(func(v ModelVersionType) map[string]FlavorData { return v.Flavors }).(FlavorDataMapOutput)
}

// If the name version are system generated (anonymous registration).
func (o ModelVersionTypeOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelVersionType) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// The path of the file/directory in the datastore.
func (o ModelVersionTypeOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ModelVersionType) string { return v.Path }).(pulumi.StringOutput)
}

// The asset property dictionary.
func (o ModelVersionTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelVersionType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o ModelVersionTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelVersionType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ModelVersionTypePtrOutput struct{ *pulumi.OutputState }

func (ModelVersionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelVersionType)(nil)).Elem()
}

func (o ModelVersionTypePtrOutput) ToModelVersionTypePtrOutput() ModelVersionTypePtrOutput {
	return o
}

func (o ModelVersionTypePtrOutput) ToModelVersionTypePtrOutputWithContext(ctx context.Context) ModelVersionTypePtrOutput {
	return o
}

func (o ModelVersionTypePtrOutput) Elem() ModelVersionTypeOutput {
	return o.ApplyT(func(v *ModelVersionType) ModelVersionType {
		if v != nil {
			return *v
		}
		var ret ModelVersionType
		return ret
	}).(ModelVersionTypeOutput)
}

// ARM resource ID of the datastore where the asset is located.
func (o ModelVersionTypePtrOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelVersionType) *string {
		if v == nil {
			return nil
		}
		return v.DatastoreId
	}).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o ModelVersionTypePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelVersionType) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Mapping of model flavors to their properties.
func (o ModelVersionTypePtrOutput) Flavors() FlavorDataMapOutput {
	return o.ApplyT(func(v *ModelVersionType) map[string]FlavorData {
		if v == nil {
			return nil
		}
		return v.Flavors
	}).(FlavorDataMapOutput)
}

// If the name version are system generated (anonymous registration).
func (o ModelVersionTypePtrOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelVersionType) *bool {
		if v == nil {
			return nil
		}
		return v.IsAnonymous
	}).(pulumi.BoolPtrOutput)
}

// The path of the file/directory in the datastore.
func (o ModelVersionTypePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelVersionType) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o ModelVersionTypePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ModelVersionType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o ModelVersionTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ModelVersionType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type ModelVersionResponse struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId *string `pulumi:"datastoreId"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Mapping of model flavors to their properties.
	Flavors map[string]FlavorDataResponse `pulumi:"flavors"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// The path of the file/directory in the datastore.
	Path string `pulumi:"path"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// ModelVersionResponseInput is an input type that accepts ModelVersionResponseArgs and ModelVersionResponseOutput values.
// You can construct a concrete instance of `ModelVersionResponseInput` via:
//
//          ModelVersionResponseArgs{...}
type ModelVersionResponseInput interface {
	pulumi.Input

	ToModelVersionResponseOutput() ModelVersionResponseOutput
	ToModelVersionResponseOutputWithContext(context.Context) ModelVersionResponseOutput
}

type ModelVersionResponseArgs struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Mapping of model flavors to their properties.
	Flavors FlavorDataResponseMapInput `pulumi:"flavors"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous pulumi.BoolPtrInput `pulumi:"isAnonymous"`
	// The path of the file/directory in the datastore.
	Path pulumi.StringInput `pulumi:"path"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ModelVersionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelVersionResponse)(nil)).Elem()
}

func (i ModelVersionResponseArgs) ToModelVersionResponseOutput() ModelVersionResponseOutput {
	return i.ToModelVersionResponseOutputWithContext(context.Background())
}

func (i ModelVersionResponseArgs) ToModelVersionResponseOutputWithContext(ctx context.Context) ModelVersionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelVersionResponseOutput)
}

func (i ModelVersionResponseArgs) ToModelVersionResponsePtrOutput() ModelVersionResponsePtrOutput {
	return i.ToModelVersionResponsePtrOutputWithContext(context.Background())
}

func (i ModelVersionResponseArgs) ToModelVersionResponsePtrOutputWithContext(ctx context.Context) ModelVersionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelVersionResponseOutput).ToModelVersionResponsePtrOutputWithContext(ctx)
}

// ModelVersionResponsePtrInput is an input type that accepts ModelVersionResponseArgs, ModelVersionResponsePtr and ModelVersionResponsePtrOutput values.
// You can construct a concrete instance of `ModelVersionResponsePtrInput` via:
//
//          ModelVersionResponseArgs{...}
//
//  or:
//
//          nil
type ModelVersionResponsePtrInput interface {
	pulumi.Input

	ToModelVersionResponsePtrOutput() ModelVersionResponsePtrOutput
	ToModelVersionResponsePtrOutputWithContext(context.Context) ModelVersionResponsePtrOutput
}

type modelVersionResponsePtrType ModelVersionResponseArgs

func ModelVersionResponsePtr(v *ModelVersionResponseArgs) ModelVersionResponsePtrInput {
	return (*modelVersionResponsePtrType)(v)
}

func (*modelVersionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelVersionResponse)(nil)).Elem()
}

func (i *modelVersionResponsePtrType) ToModelVersionResponsePtrOutput() ModelVersionResponsePtrOutput {
	return i.ToModelVersionResponsePtrOutputWithContext(context.Background())
}

func (i *modelVersionResponsePtrType) ToModelVersionResponsePtrOutputWithContext(ctx context.Context) ModelVersionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelVersionResponsePtrOutput)
}

type ModelVersionResponseOutput struct{ *pulumi.OutputState }

func (ModelVersionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelVersionResponse)(nil)).Elem()
}

func (o ModelVersionResponseOutput) ToModelVersionResponseOutput() ModelVersionResponseOutput {
	return o
}

func (o ModelVersionResponseOutput) ToModelVersionResponseOutputWithContext(ctx context.Context) ModelVersionResponseOutput {
	return o
}

func (o ModelVersionResponseOutput) ToModelVersionResponsePtrOutput() ModelVersionResponsePtrOutput {
	return o.ToModelVersionResponsePtrOutputWithContext(context.Background())
}

func (o ModelVersionResponseOutput) ToModelVersionResponsePtrOutputWithContext(ctx context.Context) ModelVersionResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelVersionResponse) *ModelVersionResponse {
		return &v
	}).(ModelVersionResponsePtrOutput)
}

// ARM resource ID of the datastore where the asset is located.
func (o ModelVersionResponseOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelVersionResponse) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o ModelVersionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelVersionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Mapping of model flavors to their properties.
func (o ModelVersionResponseOutput) Flavors() FlavorDataResponseMapOutput {
	return o.ApplyT(func(v ModelVersionResponse) map[string]FlavorDataResponse { return v.Flavors }).(FlavorDataResponseMapOutput)
}

// If the name version are system generated (anonymous registration).
func (o ModelVersionResponseOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelVersionResponse) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// The path of the file/directory in the datastore.
func (o ModelVersionResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ModelVersionResponse) string { return v.Path }).(pulumi.StringOutput)
}

// The asset property dictionary.
func (o ModelVersionResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelVersionResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o ModelVersionResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelVersionResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ModelVersionResponsePtrOutput struct{ *pulumi.OutputState }

func (ModelVersionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelVersionResponse)(nil)).Elem()
}

func (o ModelVersionResponsePtrOutput) ToModelVersionResponsePtrOutput() ModelVersionResponsePtrOutput {
	return o
}

func (o ModelVersionResponsePtrOutput) ToModelVersionResponsePtrOutputWithContext(ctx context.Context) ModelVersionResponsePtrOutput {
	return o
}

func (o ModelVersionResponsePtrOutput) Elem() ModelVersionResponseOutput {
	return o.ApplyT(func(v *ModelVersionResponse) ModelVersionResponse {
		if v != nil {
			return *v
		}
		var ret ModelVersionResponse
		return ret
	}).(ModelVersionResponseOutput)
}

// ARM resource ID of the datastore where the asset is located.
func (o ModelVersionResponsePtrOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelVersionResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatastoreId
	}).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o ModelVersionResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelVersionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Mapping of model flavors to their properties.
func (o ModelVersionResponsePtrOutput) Flavors() FlavorDataResponseMapOutput {
	return o.ApplyT(func(v *ModelVersionResponse) map[string]FlavorDataResponse {
		if v == nil {
			return nil
		}
		return v.Flavors
	}).(FlavorDataResponseMapOutput)
}

// If the name version are system generated (anonymous registration).
func (o ModelVersionResponsePtrOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelVersionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsAnonymous
	}).(pulumi.BoolPtrOutput)
}

// The path of the file/directory in the datastore.
func (o ModelVersionResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelVersionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o ModelVersionResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ModelVersionResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o ModelVersionResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ModelVersionResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type Mpi struct {
	// Enum to determine the job distribution type.
	// Expected value is 'Mpi'.
	DistributionType string `pulumi:"distributionType"`
	// Number of processes per MPI node.
	ProcessCountPerInstance *int `pulumi:"processCountPerInstance"`
}

// MpiInput is an input type that accepts MpiArgs and MpiOutput values.
// You can construct a concrete instance of `MpiInput` via:
//
//          MpiArgs{...}
type MpiInput interface {
	pulumi.Input

	ToMpiOutput() MpiOutput
	ToMpiOutputWithContext(context.Context) MpiOutput
}

type MpiArgs struct {
	// Enum to determine the job distribution type.
	// Expected value is 'Mpi'.
	DistributionType pulumi.StringInput `pulumi:"distributionType"`
	// Number of processes per MPI node.
	ProcessCountPerInstance pulumi.IntPtrInput `pulumi:"processCountPerInstance"`
}

func (MpiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mpi)(nil)).Elem()
}

func (i MpiArgs) ToMpiOutput() MpiOutput {
	return i.ToMpiOutputWithContext(context.Background())
}

func (i MpiArgs) ToMpiOutputWithContext(ctx context.Context) MpiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MpiOutput)
}

type MpiOutput struct{ *pulumi.OutputState }

func (MpiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mpi)(nil)).Elem()
}

func (o MpiOutput) ToMpiOutput() MpiOutput {
	return o
}

func (o MpiOutput) ToMpiOutputWithContext(ctx context.Context) MpiOutput {
	return o
}

// Enum to determine the job distribution type.
// Expected value is 'Mpi'.
func (o MpiOutput) DistributionType() pulumi.StringOutput {
	return o.ApplyT(func(v Mpi) string { return v.DistributionType }).(pulumi.StringOutput)
}

// Number of processes per MPI node.
func (o MpiOutput) ProcessCountPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mpi) *int { return v.ProcessCountPerInstance }).(pulumi.IntPtrOutput)
}

type MpiResponse struct {
	// Enum to determine the job distribution type.
	// Expected value is 'Mpi'.
	DistributionType string `pulumi:"distributionType"`
	// Number of processes per MPI node.
	ProcessCountPerInstance *int `pulumi:"processCountPerInstance"`
}

// MpiResponseInput is an input type that accepts MpiResponseArgs and MpiResponseOutput values.
// You can construct a concrete instance of `MpiResponseInput` via:
//
//          MpiResponseArgs{...}
type MpiResponseInput interface {
	pulumi.Input

	ToMpiResponseOutput() MpiResponseOutput
	ToMpiResponseOutputWithContext(context.Context) MpiResponseOutput
}

type MpiResponseArgs struct {
	// Enum to determine the job distribution type.
	// Expected value is 'Mpi'.
	DistributionType pulumi.StringInput `pulumi:"distributionType"`
	// Number of processes per MPI node.
	ProcessCountPerInstance pulumi.IntPtrInput `pulumi:"processCountPerInstance"`
}

func (MpiResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MpiResponse)(nil)).Elem()
}

func (i MpiResponseArgs) ToMpiResponseOutput() MpiResponseOutput {
	return i.ToMpiResponseOutputWithContext(context.Background())
}

func (i MpiResponseArgs) ToMpiResponseOutputWithContext(ctx context.Context) MpiResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MpiResponseOutput)
}

type MpiResponseOutput struct{ *pulumi.OutputState }

func (MpiResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MpiResponse)(nil)).Elem()
}

func (o MpiResponseOutput) ToMpiResponseOutput() MpiResponseOutput {
	return o
}

func (o MpiResponseOutput) ToMpiResponseOutputWithContext(ctx context.Context) MpiResponseOutput {
	return o
}

// Enum to determine the job distribution type.
// Expected value is 'Mpi'.
func (o MpiResponseOutput) DistributionType() pulumi.StringOutput {
	return o.ApplyT(func(v MpiResponse) string { return v.DistributionType }).(pulumi.StringOutput)
}

// Number of processes per MPI node.
func (o MpiResponseOutput) ProcessCountPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MpiResponse) *int { return v.ProcessCountPerInstance }).(pulumi.IntPtrOutput)
}

type NodeStateCountsResponse struct {
	// Number of compute nodes in idle state.
	IdleNodeCount int `pulumi:"idleNodeCount"`
	// Number of compute nodes which are leaving the amlCompute.
	LeavingNodeCount int `pulumi:"leavingNodeCount"`
	// Number of compute nodes which are in preempted state.
	PreemptedNodeCount int `pulumi:"preemptedNodeCount"`
	// Number of compute nodes which are being prepared.
	PreparingNodeCount int `pulumi:"preparingNodeCount"`
	// Number of compute nodes which are running jobs.
	RunningNodeCount int `pulumi:"runningNodeCount"`
	// Number of compute nodes which are in unusable state.
	UnusableNodeCount int `pulumi:"unusableNodeCount"`
}

// NodeStateCountsResponseInput is an input type that accepts NodeStateCountsResponseArgs and NodeStateCountsResponseOutput values.
// You can construct a concrete instance of `NodeStateCountsResponseInput` via:
//
//          NodeStateCountsResponseArgs{...}
type NodeStateCountsResponseInput interface {
	pulumi.Input

	ToNodeStateCountsResponseOutput() NodeStateCountsResponseOutput
	ToNodeStateCountsResponseOutputWithContext(context.Context) NodeStateCountsResponseOutput
}

type NodeStateCountsResponseArgs struct {
	// Number of compute nodes in idle state.
	IdleNodeCount pulumi.IntInput `pulumi:"idleNodeCount"`
	// Number of compute nodes which are leaving the amlCompute.
	LeavingNodeCount pulumi.IntInput `pulumi:"leavingNodeCount"`
	// Number of compute nodes which are in preempted state.
	PreemptedNodeCount pulumi.IntInput `pulumi:"preemptedNodeCount"`
	// Number of compute nodes which are being prepared.
	PreparingNodeCount pulumi.IntInput `pulumi:"preparingNodeCount"`
	// Number of compute nodes which are running jobs.
	RunningNodeCount pulumi.IntInput `pulumi:"runningNodeCount"`
	// Number of compute nodes which are in unusable state.
	UnusableNodeCount pulumi.IntInput `pulumi:"unusableNodeCount"`
}

func (NodeStateCountsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeStateCountsResponse)(nil)).Elem()
}

func (i NodeStateCountsResponseArgs) ToNodeStateCountsResponseOutput() NodeStateCountsResponseOutput {
	return i.ToNodeStateCountsResponseOutputWithContext(context.Background())
}

func (i NodeStateCountsResponseArgs) ToNodeStateCountsResponseOutputWithContext(ctx context.Context) NodeStateCountsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStateCountsResponseOutput)
}

func (i NodeStateCountsResponseArgs) ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput {
	return i.ToNodeStateCountsResponsePtrOutputWithContext(context.Background())
}

func (i NodeStateCountsResponseArgs) ToNodeStateCountsResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStateCountsResponseOutput).ToNodeStateCountsResponsePtrOutputWithContext(ctx)
}

// NodeStateCountsResponsePtrInput is an input type that accepts NodeStateCountsResponseArgs, NodeStateCountsResponsePtr and NodeStateCountsResponsePtrOutput values.
// You can construct a concrete instance of `NodeStateCountsResponsePtrInput` via:
//
//          NodeStateCountsResponseArgs{...}
//
//  or:
//
//          nil
type NodeStateCountsResponsePtrInput interface {
	pulumi.Input

	ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput
	ToNodeStateCountsResponsePtrOutputWithContext(context.Context) NodeStateCountsResponsePtrOutput
}

type nodeStateCountsResponsePtrType NodeStateCountsResponseArgs

func NodeStateCountsResponsePtr(v *NodeStateCountsResponseArgs) NodeStateCountsResponsePtrInput {
	return (*nodeStateCountsResponsePtrType)(v)
}

func (*nodeStateCountsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeStateCountsResponse)(nil)).Elem()
}

func (i *nodeStateCountsResponsePtrType) ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput {
	return i.ToNodeStateCountsResponsePtrOutputWithContext(context.Background())
}

func (i *nodeStateCountsResponsePtrType) ToNodeStateCountsResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStateCountsResponsePtrOutput)
}

type NodeStateCountsResponseOutput struct{ *pulumi.OutputState }

func (NodeStateCountsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeStateCountsResponse)(nil)).Elem()
}

func (o NodeStateCountsResponseOutput) ToNodeStateCountsResponseOutput() NodeStateCountsResponseOutput {
	return o
}

func (o NodeStateCountsResponseOutput) ToNodeStateCountsResponseOutputWithContext(ctx context.Context) NodeStateCountsResponseOutput {
	return o
}

func (o NodeStateCountsResponseOutput) ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput {
	return o.ToNodeStateCountsResponsePtrOutputWithContext(context.Background())
}

func (o NodeStateCountsResponseOutput) ToNodeStateCountsResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeStateCountsResponse) *NodeStateCountsResponse {
		return &v
	}).(NodeStateCountsResponsePtrOutput)
}

// Number of compute nodes in idle state.
func (o NodeStateCountsResponseOutput) IdleNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.IdleNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are leaving the amlCompute.
func (o NodeStateCountsResponseOutput) LeavingNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.LeavingNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are in preempted state.
func (o NodeStateCountsResponseOutput) PreemptedNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.PreemptedNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are being prepared.
func (o NodeStateCountsResponseOutput) PreparingNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.PreparingNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are running jobs.
func (o NodeStateCountsResponseOutput) RunningNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.RunningNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are in unusable state.
func (o NodeStateCountsResponseOutput) UnusableNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.UnusableNodeCount }).(pulumi.IntOutput)
}

type NodeStateCountsResponsePtrOutput struct{ *pulumi.OutputState }

func (NodeStateCountsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeStateCountsResponse)(nil)).Elem()
}

func (o NodeStateCountsResponsePtrOutput) ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput {
	return o
}

func (o NodeStateCountsResponsePtrOutput) ToNodeStateCountsResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsResponsePtrOutput {
	return o
}

func (o NodeStateCountsResponsePtrOutput) Elem() NodeStateCountsResponseOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) NodeStateCountsResponse {
		if v != nil {
			return *v
		}
		var ret NodeStateCountsResponse
		return ret
	}).(NodeStateCountsResponseOutput)
}

// Number of compute nodes in idle state.
func (o NodeStateCountsResponsePtrOutput) IdleNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.IdleNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are leaving the amlCompute.
func (o NodeStateCountsResponsePtrOutput) LeavingNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.LeavingNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are in preempted state.
func (o NodeStateCountsResponsePtrOutput) PreemptedNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.PreemptedNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are being prepared.
func (o NodeStateCountsResponsePtrOutput) PreparingNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.PreparingNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are running jobs.
func (o NodeStateCountsResponsePtrOutput) RunningNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.RunningNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are in unusable state.
func (o NodeStateCountsResponsePtrOutput) UnusableNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.UnusableNodeCount
	}).(pulumi.IntPtrOutput)
}

type NotebookPreparationErrorResponse struct {
	ErrorMessage *string `pulumi:"errorMessage"`
	StatusCode   *int    `pulumi:"statusCode"`
}

// NotebookPreparationErrorResponseInput is an input type that accepts NotebookPreparationErrorResponseArgs and NotebookPreparationErrorResponseOutput values.
// You can construct a concrete instance of `NotebookPreparationErrorResponseInput` via:
//
//          NotebookPreparationErrorResponseArgs{...}
type NotebookPreparationErrorResponseInput interface {
	pulumi.Input

	ToNotebookPreparationErrorResponseOutput() NotebookPreparationErrorResponseOutput
	ToNotebookPreparationErrorResponseOutputWithContext(context.Context) NotebookPreparationErrorResponseOutput
}

type NotebookPreparationErrorResponseArgs struct {
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
	StatusCode   pulumi.IntPtrInput    `pulumi:"statusCode"`
}

func (NotebookPreparationErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookPreparationErrorResponse)(nil)).Elem()
}

func (i NotebookPreparationErrorResponseArgs) ToNotebookPreparationErrorResponseOutput() NotebookPreparationErrorResponseOutput {
	return i.ToNotebookPreparationErrorResponseOutputWithContext(context.Background())
}

func (i NotebookPreparationErrorResponseArgs) ToNotebookPreparationErrorResponseOutputWithContext(ctx context.Context) NotebookPreparationErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookPreparationErrorResponseOutput)
}

func (i NotebookPreparationErrorResponseArgs) ToNotebookPreparationErrorResponsePtrOutput() NotebookPreparationErrorResponsePtrOutput {
	return i.ToNotebookPreparationErrorResponsePtrOutputWithContext(context.Background())
}

func (i NotebookPreparationErrorResponseArgs) ToNotebookPreparationErrorResponsePtrOutputWithContext(ctx context.Context) NotebookPreparationErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookPreparationErrorResponseOutput).ToNotebookPreparationErrorResponsePtrOutputWithContext(ctx)
}

// NotebookPreparationErrorResponsePtrInput is an input type that accepts NotebookPreparationErrorResponseArgs, NotebookPreparationErrorResponsePtr and NotebookPreparationErrorResponsePtrOutput values.
// You can construct a concrete instance of `NotebookPreparationErrorResponsePtrInput` via:
//
//          NotebookPreparationErrorResponseArgs{...}
//
//  or:
//
//          nil
type NotebookPreparationErrorResponsePtrInput interface {
	pulumi.Input

	ToNotebookPreparationErrorResponsePtrOutput() NotebookPreparationErrorResponsePtrOutput
	ToNotebookPreparationErrorResponsePtrOutputWithContext(context.Context) NotebookPreparationErrorResponsePtrOutput
}

type notebookPreparationErrorResponsePtrType NotebookPreparationErrorResponseArgs

func NotebookPreparationErrorResponsePtr(v *NotebookPreparationErrorResponseArgs) NotebookPreparationErrorResponsePtrInput {
	return (*notebookPreparationErrorResponsePtrType)(v)
}

func (*notebookPreparationErrorResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebookPreparationErrorResponse)(nil)).Elem()
}

func (i *notebookPreparationErrorResponsePtrType) ToNotebookPreparationErrorResponsePtrOutput() NotebookPreparationErrorResponsePtrOutput {
	return i.ToNotebookPreparationErrorResponsePtrOutputWithContext(context.Background())
}

func (i *notebookPreparationErrorResponsePtrType) ToNotebookPreparationErrorResponsePtrOutputWithContext(ctx context.Context) NotebookPreparationErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookPreparationErrorResponsePtrOutput)
}

type NotebookPreparationErrorResponseOutput struct{ *pulumi.OutputState }

func (NotebookPreparationErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookPreparationErrorResponse)(nil)).Elem()
}

func (o NotebookPreparationErrorResponseOutput) ToNotebookPreparationErrorResponseOutput() NotebookPreparationErrorResponseOutput {
	return o
}

func (o NotebookPreparationErrorResponseOutput) ToNotebookPreparationErrorResponseOutputWithContext(ctx context.Context) NotebookPreparationErrorResponseOutput {
	return o
}

func (o NotebookPreparationErrorResponseOutput) ToNotebookPreparationErrorResponsePtrOutput() NotebookPreparationErrorResponsePtrOutput {
	return o.ToNotebookPreparationErrorResponsePtrOutputWithContext(context.Background())
}

func (o NotebookPreparationErrorResponseOutput) ToNotebookPreparationErrorResponsePtrOutputWithContext(ctx context.Context) NotebookPreparationErrorResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotebookPreparationErrorResponse) *NotebookPreparationErrorResponse {
		return &v
	}).(NotebookPreparationErrorResponsePtrOutput)
}

func (o NotebookPreparationErrorResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotebookPreparationErrorResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

func (o NotebookPreparationErrorResponseOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NotebookPreparationErrorResponse) *int { return v.StatusCode }).(pulumi.IntPtrOutput)
}

type NotebookPreparationErrorResponsePtrOutput struct{ *pulumi.OutputState }

func (NotebookPreparationErrorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebookPreparationErrorResponse)(nil)).Elem()
}

func (o NotebookPreparationErrorResponsePtrOutput) ToNotebookPreparationErrorResponsePtrOutput() NotebookPreparationErrorResponsePtrOutput {
	return o
}

func (o NotebookPreparationErrorResponsePtrOutput) ToNotebookPreparationErrorResponsePtrOutputWithContext(ctx context.Context) NotebookPreparationErrorResponsePtrOutput {
	return o
}

func (o NotebookPreparationErrorResponsePtrOutput) Elem() NotebookPreparationErrorResponseOutput {
	return o.ApplyT(func(v *NotebookPreparationErrorResponse) NotebookPreparationErrorResponse {
		if v != nil {
			return *v
		}
		var ret NotebookPreparationErrorResponse
		return ret
	}).(NotebookPreparationErrorResponseOutput)
}

func (o NotebookPreparationErrorResponsePtrOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotebookPreparationErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

func (o NotebookPreparationErrorResponsePtrOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NotebookPreparationErrorResponse) *int {
		if v == nil {
			return nil
		}
		return v.StatusCode
	}).(pulumi.IntPtrOutput)
}

type NotebookResourceInfoResponse struct {
	Fqdn *string `pulumi:"fqdn"`
	// The error that occurs when preparing notebook.
	NotebookPreparationError *NotebookPreparationErrorResponse `pulumi:"notebookPreparationError"`
	// the data plane resourceId that used to initialize notebook component
	ResourceId *string `pulumi:"resourceId"`
}

// NotebookResourceInfoResponseInput is an input type that accepts NotebookResourceInfoResponseArgs and NotebookResourceInfoResponseOutput values.
// You can construct a concrete instance of `NotebookResourceInfoResponseInput` via:
//
//          NotebookResourceInfoResponseArgs{...}
type NotebookResourceInfoResponseInput interface {
	pulumi.Input

	ToNotebookResourceInfoResponseOutput() NotebookResourceInfoResponseOutput
	ToNotebookResourceInfoResponseOutputWithContext(context.Context) NotebookResourceInfoResponseOutput
}

type NotebookResourceInfoResponseArgs struct {
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The error that occurs when preparing notebook.
	NotebookPreparationError NotebookPreparationErrorResponsePtrInput `pulumi:"notebookPreparationError"`
	// the data plane resourceId that used to initialize notebook component
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (NotebookResourceInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookResourceInfoResponse)(nil)).Elem()
}

func (i NotebookResourceInfoResponseArgs) ToNotebookResourceInfoResponseOutput() NotebookResourceInfoResponseOutput {
	return i.ToNotebookResourceInfoResponseOutputWithContext(context.Background())
}

func (i NotebookResourceInfoResponseArgs) ToNotebookResourceInfoResponseOutputWithContext(ctx context.Context) NotebookResourceInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookResourceInfoResponseOutput)
}

func (i NotebookResourceInfoResponseArgs) ToNotebookResourceInfoResponsePtrOutput() NotebookResourceInfoResponsePtrOutput {
	return i.ToNotebookResourceInfoResponsePtrOutputWithContext(context.Background())
}

func (i NotebookResourceInfoResponseArgs) ToNotebookResourceInfoResponsePtrOutputWithContext(ctx context.Context) NotebookResourceInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookResourceInfoResponseOutput).ToNotebookResourceInfoResponsePtrOutputWithContext(ctx)
}

// NotebookResourceInfoResponsePtrInput is an input type that accepts NotebookResourceInfoResponseArgs, NotebookResourceInfoResponsePtr and NotebookResourceInfoResponsePtrOutput values.
// You can construct a concrete instance of `NotebookResourceInfoResponsePtrInput` via:
//
//          NotebookResourceInfoResponseArgs{...}
//
//  or:
//
//          nil
type NotebookResourceInfoResponsePtrInput interface {
	pulumi.Input

	ToNotebookResourceInfoResponsePtrOutput() NotebookResourceInfoResponsePtrOutput
	ToNotebookResourceInfoResponsePtrOutputWithContext(context.Context) NotebookResourceInfoResponsePtrOutput
}

type notebookResourceInfoResponsePtrType NotebookResourceInfoResponseArgs

func NotebookResourceInfoResponsePtr(v *NotebookResourceInfoResponseArgs) NotebookResourceInfoResponsePtrInput {
	return (*notebookResourceInfoResponsePtrType)(v)
}

func (*notebookResourceInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebookResourceInfoResponse)(nil)).Elem()
}

func (i *notebookResourceInfoResponsePtrType) ToNotebookResourceInfoResponsePtrOutput() NotebookResourceInfoResponsePtrOutput {
	return i.ToNotebookResourceInfoResponsePtrOutputWithContext(context.Background())
}

func (i *notebookResourceInfoResponsePtrType) ToNotebookResourceInfoResponsePtrOutputWithContext(ctx context.Context) NotebookResourceInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookResourceInfoResponsePtrOutput)
}

type NotebookResourceInfoResponseOutput struct{ *pulumi.OutputState }

func (NotebookResourceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookResourceInfoResponse)(nil)).Elem()
}

func (o NotebookResourceInfoResponseOutput) ToNotebookResourceInfoResponseOutput() NotebookResourceInfoResponseOutput {
	return o
}

func (o NotebookResourceInfoResponseOutput) ToNotebookResourceInfoResponseOutputWithContext(ctx context.Context) NotebookResourceInfoResponseOutput {
	return o
}

func (o NotebookResourceInfoResponseOutput) ToNotebookResourceInfoResponsePtrOutput() NotebookResourceInfoResponsePtrOutput {
	return o.ToNotebookResourceInfoResponsePtrOutputWithContext(context.Background())
}

func (o NotebookResourceInfoResponseOutput) ToNotebookResourceInfoResponsePtrOutputWithContext(ctx context.Context) NotebookResourceInfoResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotebookResourceInfoResponse) *NotebookResourceInfoResponse {
		return &v
	}).(NotebookResourceInfoResponsePtrOutput)
}

func (o NotebookResourceInfoResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotebookResourceInfoResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The error that occurs when preparing notebook.
func (o NotebookResourceInfoResponseOutput) NotebookPreparationError() NotebookPreparationErrorResponsePtrOutput {
	return o.ApplyT(func(v NotebookResourceInfoResponse) *NotebookPreparationErrorResponse {
		return v.NotebookPreparationError
	}).(NotebookPreparationErrorResponsePtrOutput)
}

// the data plane resourceId that used to initialize notebook component
func (o NotebookResourceInfoResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotebookResourceInfoResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type NotebookResourceInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (NotebookResourceInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebookResourceInfoResponse)(nil)).Elem()
}

func (o NotebookResourceInfoResponsePtrOutput) ToNotebookResourceInfoResponsePtrOutput() NotebookResourceInfoResponsePtrOutput {
	return o
}

func (o NotebookResourceInfoResponsePtrOutput) ToNotebookResourceInfoResponsePtrOutputWithContext(ctx context.Context) NotebookResourceInfoResponsePtrOutput {
	return o
}

func (o NotebookResourceInfoResponsePtrOutput) Elem() NotebookResourceInfoResponseOutput {
	return o.ApplyT(func(v *NotebookResourceInfoResponse) NotebookResourceInfoResponse {
		if v != nil {
			return *v
		}
		var ret NotebookResourceInfoResponse
		return ret
	}).(NotebookResourceInfoResponseOutput)
}

func (o NotebookResourceInfoResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotebookResourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The error that occurs when preparing notebook.
func (o NotebookResourceInfoResponsePtrOutput) NotebookPreparationError() NotebookPreparationErrorResponsePtrOutput {
	return o.ApplyT(func(v *NotebookResourceInfoResponse) *NotebookPreparationErrorResponse {
		if v == nil {
			return nil
		}
		return v.NotebookPreparationError
	}).(NotebookPreparationErrorResponsePtrOutput)
}

// the data plane resourceId that used to initialize notebook component
func (o NotebookResourceInfoResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotebookResourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

type Objective struct {
	// Defines supported metric goals for hyperparameter tuning
	Goal string `pulumi:"goal"`
	// Name of the metric to optimize.
	PrimaryMetric string `pulumi:"primaryMetric"`
}

// ObjectiveInput is an input type that accepts ObjectiveArgs and ObjectiveOutput values.
// You can construct a concrete instance of `ObjectiveInput` via:
//
//          ObjectiveArgs{...}
type ObjectiveInput interface {
	pulumi.Input

	ToObjectiveOutput() ObjectiveOutput
	ToObjectiveOutputWithContext(context.Context) ObjectiveOutput
}

type ObjectiveArgs struct {
	// Defines supported metric goals for hyperparameter tuning
	Goal pulumi.StringInput `pulumi:"goal"`
	// Name of the metric to optimize.
	PrimaryMetric pulumi.StringInput `pulumi:"primaryMetric"`
}

func (ObjectiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Objective)(nil)).Elem()
}

func (i ObjectiveArgs) ToObjectiveOutput() ObjectiveOutput {
	return i.ToObjectiveOutputWithContext(context.Background())
}

func (i ObjectiveArgs) ToObjectiveOutputWithContext(ctx context.Context) ObjectiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectiveOutput)
}

type ObjectiveOutput struct{ *pulumi.OutputState }

func (ObjectiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Objective)(nil)).Elem()
}

func (o ObjectiveOutput) ToObjectiveOutput() ObjectiveOutput {
	return o
}

func (o ObjectiveOutput) ToObjectiveOutputWithContext(ctx context.Context) ObjectiveOutput {
	return o
}

// Defines supported metric goals for hyperparameter tuning
func (o ObjectiveOutput) Goal() pulumi.StringOutput {
	return o.ApplyT(func(v Objective) string { return v.Goal }).(pulumi.StringOutput)
}

// Name of the metric to optimize.
func (o ObjectiveOutput) PrimaryMetric() pulumi.StringOutput {
	return o.ApplyT(func(v Objective) string { return v.PrimaryMetric }).(pulumi.StringOutput)
}

type ObjectiveResponse struct {
	// Defines supported metric goals for hyperparameter tuning
	Goal string `pulumi:"goal"`
	// Name of the metric to optimize.
	PrimaryMetric string `pulumi:"primaryMetric"`
}

// ObjectiveResponseInput is an input type that accepts ObjectiveResponseArgs and ObjectiveResponseOutput values.
// You can construct a concrete instance of `ObjectiveResponseInput` via:
//
//          ObjectiveResponseArgs{...}
type ObjectiveResponseInput interface {
	pulumi.Input

	ToObjectiveResponseOutput() ObjectiveResponseOutput
	ToObjectiveResponseOutputWithContext(context.Context) ObjectiveResponseOutput
}

type ObjectiveResponseArgs struct {
	// Defines supported metric goals for hyperparameter tuning
	Goal pulumi.StringInput `pulumi:"goal"`
	// Name of the metric to optimize.
	PrimaryMetric pulumi.StringInput `pulumi:"primaryMetric"`
}

func (ObjectiveResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectiveResponse)(nil)).Elem()
}

func (i ObjectiveResponseArgs) ToObjectiveResponseOutput() ObjectiveResponseOutput {
	return i.ToObjectiveResponseOutputWithContext(context.Background())
}

func (i ObjectiveResponseArgs) ToObjectiveResponseOutputWithContext(ctx context.Context) ObjectiveResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectiveResponseOutput)
}

type ObjectiveResponseOutput struct{ *pulumi.OutputState }

func (ObjectiveResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectiveResponse)(nil)).Elem()
}

func (o ObjectiveResponseOutput) ToObjectiveResponseOutput() ObjectiveResponseOutput {
	return o
}

func (o ObjectiveResponseOutput) ToObjectiveResponseOutputWithContext(ctx context.Context) ObjectiveResponseOutput {
	return o
}

// Defines supported metric goals for hyperparameter tuning
func (o ObjectiveResponseOutput) Goal() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectiveResponse) string { return v.Goal }).(pulumi.StringOutput)
}

// Name of the metric to optimize.
func (o ObjectiveResponseOutput) PrimaryMetric() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectiveResponse) string { return v.PrimaryMetric }).(pulumi.StringOutput)
}

type OnlineEndpointType struct {
	// Inference endpoint authentication mode type
	AuthMode string `pulumi:"authMode"`
	// Description of the inference endpoint.
	Description *string `pulumi:"description"`
	// EndpointAuthKeys to set initially on an Endpoint.
	// This property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.
	Keys *EndpointAuthKeys `pulumi:"keys"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// ARM resource ID of the compute if it exists.
	// optional
	Target *string `pulumi:"target"`
	// Traffic rules on how the traffic will be routed across deployments.
	Traffic map[string]int `pulumi:"traffic"`
}

// OnlineEndpointTypeInput is an input type that accepts OnlineEndpointTypeArgs and OnlineEndpointTypeOutput values.
// You can construct a concrete instance of `OnlineEndpointTypeInput` via:
//
//          OnlineEndpointTypeArgs{...}
type OnlineEndpointTypeInput interface {
	pulumi.Input

	ToOnlineEndpointTypeOutput() OnlineEndpointTypeOutput
	ToOnlineEndpointTypeOutputWithContext(context.Context) OnlineEndpointTypeOutput
}

type OnlineEndpointTypeArgs struct {
	// Inference endpoint authentication mode type
	AuthMode pulumi.StringInput `pulumi:"authMode"`
	// Description of the inference endpoint.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// EndpointAuthKeys to set initially on an Endpoint.
	// This property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.
	Keys EndpointAuthKeysPtrInput `pulumi:"keys"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// ARM resource ID of the compute if it exists.
	// optional
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Traffic rules on how the traffic will be routed across deployments.
	Traffic pulumi.IntMapInput `pulumi:"traffic"`
}

func (OnlineEndpointTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineEndpointType)(nil)).Elem()
}

func (i OnlineEndpointTypeArgs) ToOnlineEndpointTypeOutput() OnlineEndpointTypeOutput {
	return i.ToOnlineEndpointTypeOutputWithContext(context.Background())
}

func (i OnlineEndpointTypeArgs) ToOnlineEndpointTypeOutputWithContext(ctx context.Context) OnlineEndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineEndpointTypeOutput)
}

func (i OnlineEndpointTypeArgs) ToOnlineEndpointTypePtrOutput() OnlineEndpointTypePtrOutput {
	return i.ToOnlineEndpointTypePtrOutputWithContext(context.Background())
}

func (i OnlineEndpointTypeArgs) ToOnlineEndpointTypePtrOutputWithContext(ctx context.Context) OnlineEndpointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineEndpointTypeOutput).ToOnlineEndpointTypePtrOutputWithContext(ctx)
}

// OnlineEndpointTypePtrInput is an input type that accepts OnlineEndpointTypeArgs, OnlineEndpointTypePtr and OnlineEndpointTypePtrOutput values.
// You can construct a concrete instance of `OnlineEndpointTypePtrInput` via:
//
//          OnlineEndpointTypeArgs{...}
//
//  or:
//
//          nil
type OnlineEndpointTypePtrInput interface {
	pulumi.Input

	ToOnlineEndpointTypePtrOutput() OnlineEndpointTypePtrOutput
	ToOnlineEndpointTypePtrOutputWithContext(context.Context) OnlineEndpointTypePtrOutput
}

type onlineEndpointTypePtrType OnlineEndpointTypeArgs

func OnlineEndpointTypePtr(v *OnlineEndpointTypeArgs) OnlineEndpointTypePtrInput {
	return (*onlineEndpointTypePtrType)(v)
}

func (*onlineEndpointTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineEndpointType)(nil)).Elem()
}

func (i *onlineEndpointTypePtrType) ToOnlineEndpointTypePtrOutput() OnlineEndpointTypePtrOutput {
	return i.ToOnlineEndpointTypePtrOutputWithContext(context.Background())
}

func (i *onlineEndpointTypePtrType) ToOnlineEndpointTypePtrOutputWithContext(ctx context.Context) OnlineEndpointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineEndpointTypePtrOutput)
}

type OnlineEndpointTypeOutput struct{ *pulumi.OutputState }

func (OnlineEndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineEndpointType)(nil)).Elem()
}

func (o OnlineEndpointTypeOutput) ToOnlineEndpointTypeOutput() OnlineEndpointTypeOutput {
	return o
}

func (o OnlineEndpointTypeOutput) ToOnlineEndpointTypeOutputWithContext(ctx context.Context) OnlineEndpointTypeOutput {
	return o
}

func (o OnlineEndpointTypeOutput) ToOnlineEndpointTypePtrOutput() OnlineEndpointTypePtrOutput {
	return o.ToOnlineEndpointTypePtrOutputWithContext(context.Background())
}

func (o OnlineEndpointTypeOutput) ToOnlineEndpointTypePtrOutputWithContext(ctx context.Context) OnlineEndpointTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OnlineEndpointType) *OnlineEndpointType {
		return &v
	}).(OnlineEndpointTypePtrOutput)
}

// Inference endpoint authentication mode type
func (o OnlineEndpointTypeOutput) AuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v OnlineEndpointType) string { return v.AuthMode }).(pulumi.StringOutput)
}

// Description of the inference endpoint.
func (o OnlineEndpointTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineEndpointType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// EndpointAuthKeys to set initially on an Endpoint.
// This property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.
func (o OnlineEndpointTypeOutput) Keys() EndpointAuthKeysPtrOutput {
	return o.ApplyT(func(v OnlineEndpointType) *EndpointAuthKeys { return v.Keys }).(EndpointAuthKeysPtrOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o OnlineEndpointTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v OnlineEndpointType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// ARM resource ID of the compute if it exists.
// optional
func (o OnlineEndpointTypeOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineEndpointType) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Traffic rules on how the traffic will be routed across deployments.
func (o OnlineEndpointTypeOutput) Traffic() pulumi.IntMapOutput {
	return o.ApplyT(func(v OnlineEndpointType) map[string]int { return v.Traffic }).(pulumi.IntMapOutput)
}

type OnlineEndpointTypePtrOutput struct{ *pulumi.OutputState }

func (OnlineEndpointTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineEndpointType)(nil)).Elem()
}

func (o OnlineEndpointTypePtrOutput) ToOnlineEndpointTypePtrOutput() OnlineEndpointTypePtrOutput {
	return o
}

func (o OnlineEndpointTypePtrOutput) ToOnlineEndpointTypePtrOutputWithContext(ctx context.Context) OnlineEndpointTypePtrOutput {
	return o
}

func (o OnlineEndpointTypePtrOutput) Elem() OnlineEndpointTypeOutput {
	return o.ApplyT(func(v *OnlineEndpointType) OnlineEndpointType {
		if v != nil {
			return *v
		}
		var ret OnlineEndpointType
		return ret
	}).(OnlineEndpointTypeOutput)
}

// Inference endpoint authentication mode type
func (o OnlineEndpointTypePtrOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineEndpointType) *string {
		if v == nil {
			return nil
		}
		return &v.AuthMode
	}).(pulumi.StringPtrOutput)
}

// Description of the inference endpoint.
func (o OnlineEndpointTypePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineEndpointType) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// EndpointAuthKeys to set initially on an Endpoint.
// This property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.
func (o OnlineEndpointTypePtrOutput) Keys() EndpointAuthKeysPtrOutput {
	return o.ApplyT(func(v *OnlineEndpointType) *EndpointAuthKeys {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(EndpointAuthKeysPtrOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o OnlineEndpointTypePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OnlineEndpointType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// ARM resource ID of the compute if it exists.
// optional
func (o OnlineEndpointTypePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineEndpointType) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// Traffic rules on how the traffic will be routed across deployments.
func (o OnlineEndpointTypePtrOutput) Traffic() pulumi.IntMapOutput {
	return o.ApplyT(func(v *OnlineEndpointType) map[string]int {
		if v == nil {
			return nil
		}
		return v.Traffic
	}).(pulumi.IntMapOutput)
}

type OnlineEndpointResponse struct {
	// Inference endpoint authentication mode type
	AuthMode string `pulumi:"authMode"`
	// Description of the inference endpoint.
	Description *string `pulumi:"description"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// State of endpoint provisioning.
	ProvisioningState string `pulumi:"provisioningState"`
	// Endpoint URI.
	ScoringUri string `pulumi:"scoringUri"`
	// Endpoint Swagger URI.
	SwaggerUri string `pulumi:"swaggerUri"`
	// ARM resource ID of the compute if it exists.
	// optional
	Target *string `pulumi:"target"`
	// Traffic rules on how the traffic will be routed across deployments.
	Traffic map[string]int `pulumi:"traffic"`
}

// OnlineEndpointResponseInput is an input type that accepts OnlineEndpointResponseArgs and OnlineEndpointResponseOutput values.
// You can construct a concrete instance of `OnlineEndpointResponseInput` via:
//
//          OnlineEndpointResponseArgs{...}
type OnlineEndpointResponseInput interface {
	pulumi.Input

	ToOnlineEndpointResponseOutput() OnlineEndpointResponseOutput
	ToOnlineEndpointResponseOutputWithContext(context.Context) OnlineEndpointResponseOutput
}

type OnlineEndpointResponseArgs struct {
	// Inference endpoint authentication mode type
	AuthMode pulumi.StringInput `pulumi:"authMode"`
	// Description of the inference endpoint.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// State of endpoint provisioning.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Endpoint URI.
	ScoringUri pulumi.StringInput `pulumi:"scoringUri"`
	// Endpoint Swagger URI.
	SwaggerUri pulumi.StringInput `pulumi:"swaggerUri"`
	// ARM resource ID of the compute if it exists.
	// optional
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Traffic rules on how the traffic will be routed across deployments.
	Traffic pulumi.IntMapInput `pulumi:"traffic"`
}

func (OnlineEndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineEndpointResponse)(nil)).Elem()
}

func (i OnlineEndpointResponseArgs) ToOnlineEndpointResponseOutput() OnlineEndpointResponseOutput {
	return i.ToOnlineEndpointResponseOutputWithContext(context.Background())
}

func (i OnlineEndpointResponseArgs) ToOnlineEndpointResponseOutputWithContext(ctx context.Context) OnlineEndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineEndpointResponseOutput)
}

func (i OnlineEndpointResponseArgs) ToOnlineEndpointResponsePtrOutput() OnlineEndpointResponsePtrOutput {
	return i.ToOnlineEndpointResponsePtrOutputWithContext(context.Background())
}

func (i OnlineEndpointResponseArgs) ToOnlineEndpointResponsePtrOutputWithContext(ctx context.Context) OnlineEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineEndpointResponseOutput).ToOnlineEndpointResponsePtrOutputWithContext(ctx)
}

// OnlineEndpointResponsePtrInput is an input type that accepts OnlineEndpointResponseArgs, OnlineEndpointResponsePtr and OnlineEndpointResponsePtrOutput values.
// You can construct a concrete instance of `OnlineEndpointResponsePtrInput` via:
//
//          OnlineEndpointResponseArgs{...}
//
//  or:
//
//          nil
type OnlineEndpointResponsePtrInput interface {
	pulumi.Input

	ToOnlineEndpointResponsePtrOutput() OnlineEndpointResponsePtrOutput
	ToOnlineEndpointResponsePtrOutputWithContext(context.Context) OnlineEndpointResponsePtrOutput
}

type onlineEndpointResponsePtrType OnlineEndpointResponseArgs

func OnlineEndpointResponsePtr(v *OnlineEndpointResponseArgs) OnlineEndpointResponsePtrInput {
	return (*onlineEndpointResponsePtrType)(v)
}

func (*onlineEndpointResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineEndpointResponse)(nil)).Elem()
}

func (i *onlineEndpointResponsePtrType) ToOnlineEndpointResponsePtrOutput() OnlineEndpointResponsePtrOutput {
	return i.ToOnlineEndpointResponsePtrOutputWithContext(context.Background())
}

func (i *onlineEndpointResponsePtrType) ToOnlineEndpointResponsePtrOutputWithContext(ctx context.Context) OnlineEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineEndpointResponsePtrOutput)
}

type OnlineEndpointResponseOutput struct{ *pulumi.OutputState }

func (OnlineEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineEndpointResponse)(nil)).Elem()
}

func (o OnlineEndpointResponseOutput) ToOnlineEndpointResponseOutput() OnlineEndpointResponseOutput {
	return o
}

func (o OnlineEndpointResponseOutput) ToOnlineEndpointResponseOutputWithContext(ctx context.Context) OnlineEndpointResponseOutput {
	return o
}

func (o OnlineEndpointResponseOutput) ToOnlineEndpointResponsePtrOutput() OnlineEndpointResponsePtrOutput {
	return o.ToOnlineEndpointResponsePtrOutputWithContext(context.Background())
}

func (o OnlineEndpointResponseOutput) ToOnlineEndpointResponsePtrOutputWithContext(ctx context.Context) OnlineEndpointResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OnlineEndpointResponse) *OnlineEndpointResponse {
		return &v
	}).(OnlineEndpointResponsePtrOutput)
}

// Inference endpoint authentication mode type
func (o OnlineEndpointResponseOutput) AuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v OnlineEndpointResponse) string { return v.AuthMode }).(pulumi.StringOutput)
}

// Description of the inference endpoint.
func (o OnlineEndpointResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineEndpointResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o OnlineEndpointResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v OnlineEndpointResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// State of endpoint provisioning.
func (o OnlineEndpointResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v OnlineEndpointResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Endpoint URI.
func (o OnlineEndpointResponseOutput) ScoringUri() pulumi.StringOutput {
	return o.ApplyT(func(v OnlineEndpointResponse) string { return v.ScoringUri }).(pulumi.StringOutput)
}

// Endpoint Swagger URI.
func (o OnlineEndpointResponseOutput) SwaggerUri() pulumi.StringOutput {
	return o.ApplyT(func(v OnlineEndpointResponse) string { return v.SwaggerUri }).(pulumi.StringOutput)
}

// ARM resource ID of the compute if it exists.
// optional
func (o OnlineEndpointResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineEndpointResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Traffic rules on how the traffic will be routed across deployments.
func (o OnlineEndpointResponseOutput) Traffic() pulumi.IntMapOutput {
	return o.ApplyT(func(v OnlineEndpointResponse) map[string]int { return v.Traffic }).(pulumi.IntMapOutput)
}

type OnlineEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (OnlineEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineEndpointResponse)(nil)).Elem()
}

func (o OnlineEndpointResponsePtrOutput) ToOnlineEndpointResponsePtrOutput() OnlineEndpointResponsePtrOutput {
	return o
}

func (o OnlineEndpointResponsePtrOutput) ToOnlineEndpointResponsePtrOutputWithContext(ctx context.Context) OnlineEndpointResponsePtrOutput {
	return o
}

func (o OnlineEndpointResponsePtrOutput) Elem() OnlineEndpointResponseOutput {
	return o.ApplyT(func(v *OnlineEndpointResponse) OnlineEndpointResponse {
		if v != nil {
			return *v
		}
		var ret OnlineEndpointResponse
		return ret
	}).(OnlineEndpointResponseOutput)
}

// Inference endpoint authentication mode type
func (o OnlineEndpointResponsePtrOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AuthMode
	}).(pulumi.StringPtrOutput)
}

// Description of the inference endpoint.
func (o OnlineEndpointResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o OnlineEndpointResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OnlineEndpointResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// State of endpoint provisioning.
func (o OnlineEndpointResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Endpoint URI.
func (o OnlineEndpointResponsePtrOutput) ScoringUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ScoringUri
	}).(pulumi.StringPtrOutput)
}

// Endpoint Swagger URI.
func (o OnlineEndpointResponsePtrOutput) SwaggerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SwaggerUri
	}).(pulumi.StringPtrOutput)
}

// ARM resource ID of the compute if it exists.
// optional
func (o OnlineEndpointResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// Traffic rules on how the traffic will be routed across deployments.
func (o OnlineEndpointResponsePtrOutput) Traffic() pulumi.IntMapOutput {
	return o.ApplyT(func(v *OnlineEndpointResponse) map[string]int {
		if v == nil {
			return nil
		}
		return v.Traffic
	}).(pulumi.IntMapOutput)
}

type OnlineRequestSettings struct {
	// The number of requests allowed to queue at once for this deployment.
	MaxConcurrentRequestsPerInstance *int `pulumi:"maxConcurrentRequestsPerInstance"`
	// The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
	MaxQueueWait *string `pulumi:"maxQueueWait"`
	// The request timeout in ISO 8601 format. Supports millisecond precision.
	RequestTimeout *string `pulumi:"requestTimeout"`
}

// OnlineRequestSettingsInput is an input type that accepts OnlineRequestSettingsArgs and OnlineRequestSettingsOutput values.
// You can construct a concrete instance of `OnlineRequestSettingsInput` via:
//
//          OnlineRequestSettingsArgs{...}
type OnlineRequestSettingsInput interface {
	pulumi.Input

	ToOnlineRequestSettingsOutput() OnlineRequestSettingsOutput
	ToOnlineRequestSettingsOutputWithContext(context.Context) OnlineRequestSettingsOutput
}

type OnlineRequestSettingsArgs struct {
	// The number of requests allowed to queue at once for this deployment.
	MaxConcurrentRequestsPerInstance pulumi.IntPtrInput `pulumi:"maxConcurrentRequestsPerInstance"`
	// The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
	MaxQueueWait pulumi.StringPtrInput `pulumi:"maxQueueWait"`
	// The request timeout in ISO 8601 format. Supports millisecond precision.
	RequestTimeout pulumi.StringPtrInput `pulumi:"requestTimeout"`
}

func (OnlineRequestSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineRequestSettings)(nil)).Elem()
}

func (i OnlineRequestSettingsArgs) ToOnlineRequestSettingsOutput() OnlineRequestSettingsOutput {
	return i.ToOnlineRequestSettingsOutputWithContext(context.Background())
}

func (i OnlineRequestSettingsArgs) ToOnlineRequestSettingsOutputWithContext(ctx context.Context) OnlineRequestSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineRequestSettingsOutput)
}

func (i OnlineRequestSettingsArgs) ToOnlineRequestSettingsPtrOutput() OnlineRequestSettingsPtrOutput {
	return i.ToOnlineRequestSettingsPtrOutputWithContext(context.Background())
}

func (i OnlineRequestSettingsArgs) ToOnlineRequestSettingsPtrOutputWithContext(ctx context.Context) OnlineRequestSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineRequestSettingsOutput).ToOnlineRequestSettingsPtrOutputWithContext(ctx)
}

// OnlineRequestSettingsPtrInput is an input type that accepts OnlineRequestSettingsArgs, OnlineRequestSettingsPtr and OnlineRequestSettingsPtrOutput values.
// You can construct a concrete instance of `OnlineRequestSettingsPtrInput` via:
//
//          OnlineRequestSettingsArgs{...}
//
//  or:
//
//          nil
type OnlineRequestSettingsPtrInput interface {
	pulumi.Input

	ToOnlineRequestSettingsPtrOutput() OnlineRequestSettingsPtrOutput
	ToOnlineRequestSettingsPtrOutputWithContext(context.Context) OnlineRequestSettingsPtrOutput
}

type onlineRequestSettingsPtrType OnlineRequestSettingsArgs

func OnlineRequestSettingsPtr(v *OnlineRequestSettingsArgs) OnlineRequestSettingsPtrInput {
	return (*onlineRequestSettingsPtrType)(v)
}

func (*onlineRequestSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineRequestSettings)(nil)).Elem()
}

func (i *onlineRequestSettingsPtrType) ToOnlineRequestSettingsPtrOutput() OnlineRequestSettingsPtrOutput {
	return i.ToOnlineRequestSettingsPtrOutputWithContext(context.Background())
}

func (i *onlineRequestSettingsPtrType) ToOnlineRequestSettingsPtrOutputWithContext(ctx context.Context) OnlineRequestSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineRequestSettingsPtrOutput)
}

type OnlineRequestSettingsOutput struct{ *pulumi.OutputState }

func (OnlineRequestSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineRequestSettings)(nil)).Elem()
}

func (o OnlineRequestSettingsOutput) ToOnlineRequestSettingsOutput() OnlineRequestSettingsOutput {
	return o
}

func (o OnlineRequestSettingsOutput) ToOnlineRequestSettingsOutputWithContext(ctx context.Context) OnlineRequestSettingsOutput {
	return o
}

func (o OnlineRequestSettingsOutput) ToOnlineRequestSettingsPtrOutput() OnlineRequestSettingsPtrOutput {
	return o.ToOnlineRequestSettingsPtrOutputWithContext(context.Background())
}

func (o OnlineRequestSettingsOutput) ToOnlineRequestSettingsPtrOutputWithContext(ctx context.Context) OnlineRequestSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OnlineRequestSettings) *OnlineRequestSettings {
		return &v
	}).(OnlineRequestSettingsPtrOutput)
}

// The number of requests allowed to queue at once for this deployment.
func (o OnlineRequestSettingsOutput) MaxConcurrentRequestsPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OnlineRequestSettings) *int { return v.MaxConcurrentRequestsPerInstance }).(pulumi.IntPtrOutput)
}

// The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
func (o OnlineRequestSettingsOutput) MaxQueueWait() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineRequestSettings) *string { return v.MaxQueueWait }).(pulumi.StringPtrOutput)
}

// The request timeout in ISO 8601 format. Supports millisecond precision.
func (o OnlineRequestSettingsOutput) RequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineRequestSettings) *string { return v.RequestTimeout }).(pulumi.StringPtrOutput)
}

type OnlineRequestSettingsPtrOutput struct{ *pulumi.OutputState }

func (OnlineRequestSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineRequestSettings)(nil)).Elem()
}

func (o OnlineRequestSettingsPtrOutput) ToOnlineRequestSettingsPtrOutput() OnlineRequestSettingsPtrOutput {
	return o
}

func (o OnlineRequestSettingsPtrOutput) ToOnlineRequestSettingsPtrOutputWithContext(ctx context.Context) OnlineRequestSettingsPtrOutput {
	return o
}

func (o OnlineRequestSettingsPtrOutput) Elem() OnlineRequestSettingsOutput {
	return o.ApplyT(func(v *OnlineRequestSettings) OnlineRequestSettings {
		if v != nil {
			return *v
		}
		var ret OnlineRequestSettings
		return ret
	}).(OnlineRequestSettingsOutput)
}

// The number of requests allowed to queue at once for this deployment.
func (o OnlineRequestSettingsPtrOutput) MaxConcurrentRequestsPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OnlineRequestSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentRequestsPerInstance
	}).(pulumi.IntPtrOutput)
}

// The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
func (o OnlineRequestSettingsPtrOutput) MaxQueueWait() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineRequestSettings) *string {
		if v == nil {
			return nil
		}
		return v.MaxQueueWait
	}).(pulumi.StringPtrOutput)
}

// The request timeout in ISO 8601 format. Supports millisecond precision.
func (o OnlineRequestSettingsPtrOutput) RequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineRequestSettings) *string {
		if v == nil {
			return nil
		}
		return v.RequestTimeout
	}).(pulumi.StringPtrOutput)
}

type OnlineRequestSettingsResponse struct {
	// The number of requests allowed to queue at once for this deployment.
	MaxConcurrentRequestsPerInstance *int `pulumi:"maxConcurrentRequestsPerInstance"`
	// The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
	MaxQueueWait *string `pulumi:"maxQueueWait"`
	// The request timeout in ISO 8601 format. Supports millisecond precision.
	RequestTimeout *string `pulumi:"requestTimeout"`
}

// OnlineRequestSettingsResponseInput is an input type that accepts OnlineRequestSettingsResponseArgs and OnlineRequestSettingsResponseOutput values.
// You can construct a concrete instance of `OnlineRequestSettingsResponseInput` via:
//
//          OnlineRequestSettingsResponseArgs{...}
type OnlineRequestSettingsResponseInput interface {
	pulumi.Input

	ToOnlineRequestSettingsResponseOutput() OnlineRequestSettingsResponseOutput
	ToOnlineRequestSettingsResponseOutputWithContext(context.Context) OnlineRequestSettingsResponseOutput
}

type OnlineRequestSettingsResponseArgs struct {
	// The number of requests allowed to queue at once for this deployment.
	MaxConcurrentRequestsPerInstance pulumi.IntPtrInput `pulumi:"maxConcurrentRequestsPerInstance"`
	// The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
	MaxQueueWait pulumi.StringPtrInput `pulumi:"maxQueueWait"`
	// The request timeout in ISO 8601 format. Supports millisecond precision.
	RequestTimeout pulumi.StringPtrInput `pulumi:"requestTimeout"`
}

func (OnlineRequestSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineRequestSettingsResponse)(nil)).Elem()
}

func (i OnlineRequestSettingsResponseArgs) ToOnlineRequestSettingsResponseOutput() OnlineRequestSettingsResponseOutput {
	return i.ToOnlineRequestSettingsResponseOutputWithContext(context.Background())
}

func (i OnlineRequestSettingsResponseArgs) ToOnlineRequestSettingsResponseOutputWithContext(ctx context.Context) OnlineRequestSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineRequestSettingsResponseOutput)
}

func (i OnlineRequestSettingsResponseArgs) ToOnlineRequestSettingsResponsePtrOutput() OnlineRequestSettingsResponsePtrOutput {
	return i.ToOnlineRequestSettingsResponsePtrOutputWithContext(context.Background())
}

func (i OnlineRequestSettingsResponseArgs) ToOnlineRequestSettingsResponsePtrOutputWithContext(ctx context.Context) OnlineRequestSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineRequestSettingsResponseOutput).ToOnlineRequestSettingsResponsePtrOutputWithContext(ctx)
}

// OnlineRequestSettingsResponsePtrInput is an input type that accepts OnlineRequestSettingsResponseArgs, OnlineRequestSettingsResponsePtr and OnlineRequestSettingsResponsePtrOutput values.
// You can construct a concrete instance of `OnlineRequestSettingsResponsePtrInput` via:
//
//          OnlineRequestSettingsResponseArgs{...}
//
//  or:
//
//          nil
type OnlineRequestSettingsResponsePtrInput interface {
	pulumi.Input

	ToOnlineRequestSettingsResponsePtrOutput() OnlineRequestSettingsResponsePtrOutput
	ToOnlineRequestSettingsResponsePtrOutputWithContext(context.Context) OnlineRequestSettingsResponsePtrOutput
}

type onlineRequestSettingsResponsePtrType OnlineRequestSettingsResponseArgs

func OnlineRequestSettingsResponsePtr(v *OnlineRequestSettingsResponseArgs) OnlineRequestSettingsResponsePtrInput {
	return (*onlineRequestSettingsResponsePtrType)(v)
}

func (*onlineRequestSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineRequestSettingsResponse)(nil)).Elem()
}

func (i *onlineRequestSettingsResponsePtrType) ToOnlineRequestSettingsResponsePtrOutput() OnlineRequestSettingsResponsePtrOutput {
	return i.ToOnlineRequestSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *onlineRequestSettingsResponsePtrType) ToOnlineRequestSettingsResponsePtrOutputWithContext(ctx context.Context) OnlineRequestSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineRequestSettingsResponsePtrOutput)
}

type OnlineRequestSettingsResponseOutput struct{ *pulumi.OutputState }

func (OnlineRequestSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineRequestSettingsResponse)(nil)).Elem()
}

func (o OnlineRequestSettingsResponseOutput) ToOnlineRequestSettingsResponseOutput() OnlineRequestSettingsResponseOutput {
	return o
}

func (o OnlineRequestSettingsResponseOutput) ToOnlineRequestSettingsResponseOutputWithContext(ctx context.Context) OnlineRequestSettingsResponseOutput {
	return o
}

func (o OnlineRequestSettingsResponseOutput) ToOnlineRequestSettingsResponsePtrOutput() OnlineRequestSettingsResponsePtrOutput {
	return o.ToOnlineRequestSettingsResponsePtrOutputWithContext(context.Background())
}

func (o OnlineRequestSettingsResponseOutput) ToOnlineRequestSettingsResponsePtrOutputWithContext(ctx context.Context) OnlineRequestSettingsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OnlineRequestSettingsResponse) *OnlineRequestSettingsResponse {
		return &v
	}).(OnlineRequestSettingsResponsePtrOutput)
}

// The number of requests allowed to queue at once for this deployment.
func (o OnlineRequestSettingsResponseOutput) MaxConcurrentRequestsPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OnlineRequestSettingsResponse) *int { return v.MaxConcurrentRequestsPerInstance }).(pulumi.IntPtrOutput)
}

// The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
func (o OnlineRequestSettingsResponseOutput) MaxQueueWait() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineRequestSettingsResponse) *string { return v.MaxQueueWait }).(pulumi.StringPtrOutput)
}

// The request timeout in ISO 8601 format. Supports millisecond precision.
func (o OnlineRequestSettingsResponseOutput) RequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineRequestSettingsResponse) *string { return v.RequestTimeout }).(pulumi.StringPtrOutput)
}

type OnlineRequestSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (OnlineRequestSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineRequestSettingsResponse)(nil)).Elem()
}

func (o OnlineRequestSettingsResponsePtrOutput) ToOnlineRequestSettingsResponsePtrOutput() OnlineRequestSettingsResponsePtrOutput {
	return o
}

func (o OnlineRequestSettingsResponsePtrOutput) ToOnlineRequestSettingsResponsePtrOutputWithContext(ctx context.Context) OnlineRequestSettingsResponsePtrOutput {
	return o
}

func (o OnlineRequestSettingsResponsePtrOutput) Elem() OnlineRequestSettingsResponseOutput {
	return o.ApplyT(func(v *OnlineRequestSettingsResponse) OnlineRequestSettingsResponse {
		if v != nil {
			return *v
		}
		var ret OnlineRequestSettingsResponse
		return ret
	}).(OnlineRequestSettingsResponseOutput)
}

// The number of requests allowed to queue at once for this deployment.
func (o OnlineRequestSettingsResponsePtrOutput) MaxConcurrentRequestsPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OnlineRequestSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentRequestsPerInstance
	}).(pulumi.IntPtrOutput)
}

// The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
func (o OnlineRequestSettingsResponsePtrOutput) MaxQueueWait() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineRequestSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MaxQueueWait
	}).(pulumi.StringPtrOutput)
}

// The request timeout in ISO 8601 format. Supports millisecond precision.
func (o OnlineRequestSettingsResponsePtrOutput) RequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineRequestSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RequestTimeout
	}).(pulumi.StringPtrOutput)
}

type OutputDataBinding struct {
	// ARM resource ID of the datastore where the data output will be stored.
	DatastoreId *string `pulumi:"datastoreId"`
	// Mechanism for data movement to datastore.
	Mode *string `pulumi:"mode"`
	// Location of data inside the container process.
	PathOnCompute *string `pulumi:"pathOnCompute"`
	// Path within the datastore to the data.
	PathOnDatastore *string `pulumi:"pathOnDatastore"`
}

// OutputDataBindingInput is an input type that accepts OutputDataBindingArgs and OutputDataBindingOutput values.
// You can construct a concrete instance of `OutputDataBindingInput` via:
//
//          OutputDataBindingArgs{...}
type OutputDataBindingInput interface {
	pulumi.Input

	ToOutputDataBindingOutput() OutputDataBindingOutput
	ToOutputDataBindingOutputWithContext(context.Context) OutputDataBindingOutput
}

type OutputDataBindingArgs struct {
	// ARM resource ID of the datastore where the data output will be stored.
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	// Mechanism for data movement to datastore.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Location of data inside the container process.
	PathOnCompute pulumi.StringPtrInput `pulumi:"pathOnCompute"`
	// Path within the datastore to the data.
	PathOnDatastore pulumi.StringPtrInput `pulumi:"pathOnDatastore"`
}

func (OutputDataBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputDataBinding)(nil)).Elem()
}

func (i OutputDataBindingArgs) ToOutputDataBindingOutput() OutputDataBindingOutput {
	return i.ToOutputDataBindingOutputWithContext(context.Background())
}

func (i OutputDataBindingArgs) ToOutputDataBindingOutputWithContext(ctx context.Context) OutputDataBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputDataBindingOutput)
}

// OutputDataBindingMapInput is an input type that accepts OutputDataBindingMap and OutputDataBindingMapOutput values.
// You can construct a concrete instance of `OutputDataBindingMapInput` via:
//
//          OutputDataBindingMap{ "key": OutputDataBindingArgs{...} }
type OutputDataBindingMapInput interface {
	pulumi.Input

	ToOutputDataBindingMapOutput() OutputDataBindingMapOutput
	ToOutputDataBindingMapOutputWithContext(context.Context) OutputDataBindingMapOutput
}

type OutputDataBindingMap map[string]OutputDataBindingInput

func (OutputDataBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OutputDataBinding)(nil)).Elem()
}

func (i OutputDataBindingMap) ToOutputDataBindingMapOutput() OutputDataBindingMapOutput {
	return i.ToOutputDataBindingMapOutputWithContext(context.Background())
}

func (i OutputDataBindingMap) ToOutputDataBindingMapOutputWithContext(ctx context.Context) OutputDataBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputDataBindingMapOutput)
}

type OutputDataBindingOutput struct{ *pulumi.OutputState }

func (OutputDataBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputDataBinding)(nil)).Elem()
}

func (o OutputDataBindingOutput) ToOutputDataBindingOutput() OutputDataBindingOutput {
	return o
}

func (o OutputDataBindingOutput) ToOutputDataBindingOutputWithContext(ctx context.Context) OutputDataBindingOutput {
	return o
}

// ARM resource ID of the datastore where the data output will be stored.
func (o OutputDataBindingOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataBinding) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// Mechanism for data movement to datastore.
func (o OutputDataBindingOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataBinding) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Location of data inside the container process.
func (o OutputDataBindingOutput) PathOnCompute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataBinding) *string { return v.PathOnCompute }).(pulumi.StringPtrOutput)
}

// Path within the datastore to the data.
func (o OutputDataBindingOutput) PathOnDatastore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataBinding) *string { return v.PathOnDatastore }).(pulumi.StringPtrOutput)
}

type OutputDataBindingMapOutput struct{ *pulumi.OutputState }

func (OutputDataBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OutputDataBinding)(nil)).Elem()
}

func (o OutputDataBindingMapOutput) ToOutputDataBindingMapOutput() OutputDataBindingMapOutput {
	return o
}

func (o OutputDataBindingMapOutput) ToOutputDataBindingMapOutputWithContext(ctx context.Context) OutputDataBindingMapOutput {
	return o
}

func (o OutputDataBindingMapOutput) MapIndex(k pulumi.StringInput) OutputDataBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) OutputDataBinding {
		return vs[0].(map[string]OutputDataBinding)[vs[1].(string)]
	}).(OutputDataBindingOutput)
}

type OutputDataBindingResponse struct {
	// ARM resource ID of the datastore where the data output will be stored.
	DatastoreId *string `pulumi:"datastoreId"`
	// Mechanism for data movement to datastore.
	Mode *string `pulumi:"mode"`
	// Location of data inside the container process.
	PathOnCompute *string `pulumi:"pathOnCompute"`
	// Path within the datastore to the data.
	PathOnDatastore *string `pulumi:"pathOnDatastore"`
}

// OutputDataBindingResponseInput is an input type that accepts OutputDataBindingResponseArgs and OutputDataBindingResponseOutput values.
// You can construct a concrete instance of `OutputDataBindingResponseInput` via:
//
//          OutputDataBindingResponseArgs{...}
type OutputDataBindingResponseInput interface {
	pulumi.Input

	ToOutputDataBindingResponseOutput() OutputDataBindingResponseOutput
	ToOutputDataBindingResponseOutputWithContext(context.Context) OutputDataBindingResponseOutput
}

type OutputDataBindingResponseArgs struct {
	// ARM resource ID of the datastore where the data output will be stored.
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	// Mechanism for data movement to datastore.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Location of data inside the container process.
	PathOnCompute pulumi.StringPtrInput `pulumi:"pathOnCompute"`
	// Path within the datastore to the data.
	PathOnDatastore pulumi.StringPtrInput `pulumi:"pathOnDatastore"`
}

func (OutputDataBindingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputDataBindingResponse)(nil)).Elem()
}

func (i OutputDataBindingResponseArgs) ToOutputDataBindingResponseOutput() OutputDataBindingResponseOutput {
	return i.ToOutputDataBindingResponseOutputWithContext(context.Background())
}

func (i OutputDataBindingResponseArgs) ToOutputDataBindingResponseOutputWithContext(ctx context.Context) OutputDataBindingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputDataBindingResponseOutput)
}

// OutputDataBindingResponseMapInput is an input type that accepts OutputDataBindingResponseMap and OutputDataBindingResponseMapOutput values.
// You can construct a concrete instance of `OutputDataBindingResponseMapInput` via:
//
//          OutputDataBindingResponseMap{ "key": OutputDataBindingResponseArgs{...} }
type OutputDataBindingResponseMapInput interface {
	pulumi.Input

	ToOutputDataBindingResponseMapOutput() OutputDataBindingResponseMapOutput
	ToOutputDataBindingResponseMapOutputWithContext(context.Context) OutputDataBindingResponseMapOutput
}

type OutputDataBindingResponseMap map[string]OutputDataBindingResponseInput

func (OutputDataBindingResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OutputDataBindingResponse)(nil)).Elem()
}

func (i OutputDataBindingResponseMap) ToOutputDataBindingResponseMapOutput() OutputDataBindingResponseMapOutput {
	return i.ToOutputDataBindingResponseMapOutputWithContext(context.Background())
}

func (i OutputDataBindingResponseMap) ToOutputDataBindingResponseMapOutputWithContext(ctx context.Context) OutputDataBindingResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputDataBindingResponseMapOutput)
}

type OutputDataBindingResponseOutput struct{ *pulumi.OutputState }

func (OutputDataBindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputDataBindingResponse)(nil)).Elem()
}

func (o OutputDataBindingResponseOutput) ToOutputDataBindingResponseOutput() OutputDataBindingResponseOutput {
	return o
}

func (o OutputDataBindingResponseOutput) ToOutputDataBindingResponseOutputWithContext(ctx context.Context) OutputDataBindingResponseOutput {
	return o
}

// ARM resource ID of the datastore where the data output will be stored.
func (o OutputDataBindingResponseOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataBindingResponse) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// Mechanism for data movement to datastore.
func (o OutputDataBindingResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataBindingResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Location of data inside the container process.
func (o OutputDataBindingResponseOutput) PathOnCompute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataBindingResponse) *string { return v.PathOnCompute }).(pulumi.StringPtrOutput)
}

// Path within the datastore to the data.
func (o OutputDataBindingResponseOutput) PathOnDatastore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataBindingResponse) *string { return v.PathOnDatastore }).(pulumi.StringPtrOutput)
}

type OutputDataBindingResponseMapOutput struct{ *pulumi.OutputState }

func (OutputDataBindingResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OutputDataBindingResponse)(nil)).Elem()
}

func (o OutputDataBindingResponseMapOutput) ToOutputDataBindingResponseMapOutput() OutputDataBindingResponseMapOutput {
	return o
}

func (o OutputDataBindingResponseMapOutput) ToOutputDataBindingResponseMapOutputWithContext(ctx context.Context) OutputDataBindingResponseMapOutput {
	return o
}

func (o OutputDataBindingResponseMapOutput) MapIndex(k pulumi.StringInput) OutputDataBindingResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) OutputDataBindingResponse {
		return vs[0].(map[string]OutputDataBindingResponse)[vs[1].(string)]
	}).(OutputDataBindingResponseOutput)
}

type OutputPathAssetReference struct {
	// ARM resource ID of the job.
	JobId *string `pulumi:"jobId"`
	// The path of the file/directory in the job output.
	Path *string `pulumi:"path"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'OutputPath'.
	ReferenceType string `pulumi:"referenceType"`
}

// OutputPathAssetReferenceInput is an input type that accepts OutputPathAssetReferenceArgs and OutputPathAssetReferenceOutput values.
// You can construct a concrete instance of `OutputPathAssetReferenceInput` via:
//
//          OutputPathAssetReferenceArgs{...}
type OutputPathAssetReferenceInput interface {
	pulumi.Input

	ToOutputPathAssetReferenceOutput() OutputPathAssetReferenceOutput
	ToOutputPathAssetReferenceOutputWithContext(context.Context) OutputPathAssetReferenceOutput
}

type OutputPathAssetReferenceArgs struct {
	// ARM resource ID of the job.
	JobId pulumi.StringPtrInput `pulumi:"jobId"`
	// The path of the file/directory in the job output.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'OutputPath'.
	ReferenceType pulumi.StringInput `pulumi:"referenceType"`
}

func (OutputPathAssetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputPathAssetReference)(nil)).Elem()
}

func (i OutputPathAssetReferenceArgs) ToOutputPathAssetReferenceOutput() OutputPathAssetReferenceOutput {
	return i.ToOutputPathAssetReferenceOutputWithContext(context.Background())
}

func (i OutputPathAssetReferenceArgs) ToOutputPathAssetReferenceOutputWithContext(ctx context.Context) OutputPathAssetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputPathAssetReferenceOutput)
}

type OutputPathAssetReferenceOutput struct{ *pulumi.OutputState }

func (OutputPathAssetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputPathAssetReference)(nil)).Elem()
}

func (o OutputPathAssetReferenceOutput) ToOutputPathAssetReferenceOutput() OutputPathAssetReferenceOutput {
	return o
}

func (o OutputPathAssetReferenceOutput) ToOutputPathAssetReferenceOutputWithContext(ctx context.Context) OutputPathAssetReferenceOutput {
	return o
}

// ARM resource ID of the job.
func (o OutputPathAssetReferenceOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputPathAssetReference) *string { return v.JobId }).(pulumi.StringPtrOutput)
}

// The path of the file/directory in the job output.
func (o OutputPathAssetReferenceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputPathAssetReference) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'OutputPath'.
func (o OutputPathAssetReferenceOutput) ReferenceType() pulumi.StringOutput {
	return o.ApplyT(func(v OutputPathAssetReference) string { return v.ReferenceType }).(pulumi.StringOutput)
}

type OutputPathAssetReferenceResponse struct {
	// ARM resource ID of the job.
	JobId *string `pulumi:"jobId"`
	// The path of the file/directory in the job output.
	Path *string `pulumi:"path"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'OutputPath'.
	ReferenceType string `pulumi:"referenceType"`
}

// OutputPathAssetReferenceResponseInput is an input type that accepts OutputPathAssetReferenceResponseArgs and OutputPathAssetReferenceResponseOutput values.
// You can construct a concrete instance of `OutputPathAssetReferenceResponseInput` via:
//
//          OutputPathAssetReferenceResponseArgs{...}
type OutputPathAssetReferenceResponseInput interface {
	pulumi.Input

	ToOutputPathAssetReferenceResponseOutput() OutputPathAssetReferenceResponseOutput
	ToOutputPathAssetReferenceResponseOutputWithContext(context.Context) OutputPathAssetReferenceResponseOutput
}

type OutputPathAssetReferenceResponseArgs struct {
	// ARM resource ID of the job.
	JobId pulumi.StringPtrInput `pulumi:"jobId"`
	// The path of the file/directory in the job output.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'OutputPath'.
	ReferenceType pulumi.StringInput `pulumi:"referenceType"`
}

func (OutputPathAssetReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputPathAssetReferenceResponse)(nil)).Elem()
}

func (i OutputPathAssetReferenceResponseArgs) ToOutputPathAssetReferenceResponseOutput() OutputPathAssetReferenceResponseOutput {
	return i.ToOutputPathAssetReferenceResponseOutputWithContext(context.Background())
}

func (i OutputPathAssetReferenceResponseArgs) ToOutputPathAssetReferenceResponseOutputWithContext(ctx context.Context) OutputPathAssetReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputPathAssetReferenceResponseOutput)
}

type OutputPathAssetReferenceResponseOutput struct{ *pulumi.OutputState }

func (OutputPathAssetReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputPathAssetReferenceResponse)(nil)).Elem()
}

func (o OutputPathAssetReferenceResponseOutput) ToOutputPathAssetReferenceResponseOutput() OutputPathAssetReferenceResponseOutput {
	return o
}

func (o OutputPathAssetReferenceResponseOutput) ToOutputPathAssetReferenceResponseOutputWithContext(ctx context.Context) OutputPathAssetReferenceResponseOutput {
	return o
}

// ARM resource ID of the job.
func (o OutputPathAssetReferenceResponseOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputPathAssetReferenceResponse) *string { return v.JobId }).(pulumi.StringPtrOutput)
}

// The path of the file/directory in the job output.
func (o OutputPathAssetReferenceResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputPathAssetReferenceResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'OutputPath'.
func (o OutputPathAssetReferenceResponseOutput) ReferenceType() pulumi.StringOutput {
	return o.ApplyT(func(v OutputPathAssetReferenceResponse) string { return v.ReferenceType }).(pulumi.StringOutput)
}

type PasswordResponse struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// PasswordResponseInput is an input type that accepts PasswordResponseArgs and PasswordResponseOutput values.
// You can construct a concrete instance of `PasswordResponseInput` via:
//
//          PasswordResponseArgs{...}
type PasswordResponseInput interface {
	pulumi.Input

	ToPasswordResponseOutput() PasswordResponseOutput
	ToPasswordResponseOutputWithContext(context.Context) PasswordResponseOutput
}

type PasswordResponseArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (PasswordResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PasswordResponse)(nil)).Elem()
}

func (i PasswordResponseArgs) ToPasswordResponseOutput() PasswordResponseOutput {
	return i.ToPasswordResponseOutputWithContext(context.Background())
}

func (i PasswordResponseArgs) ToPasswordResponseOutputWithContext(ctx context.Context) PasswordResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PasswordResponseOutput)
}

// PasswordResponseArrayInput is an input type that accepts PasswordResponseArray and PasswordResponseArrayOutput values.
// You can construct a concrete instance of `PasswordResponseArrayInput` via:
//
//          PasswordResponseArray{ PasswordResponseArgs{...} }
type PasswordResponseArrayInput interface {
	pulumi.Input

	ToPasswordResponseArrayOutput() PasswordResponseArrayOutput
	ToPasswordResponseArrayOutputWithContext(context.Context) PasswordResponseArrayOutput
}

type PasswordResponseArray []PasswordResponseInput

func (PasswordResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PasswordResponse)(nil)).Elem()
}

func (i PasswordResponseArray) ToPasswordResponseArrayOutput() PasswordResponseArrayOutput {
	return i.ToPasswordResponseArrayOutputWithContext(context.Background())
}

func (i PasswordResponseArray) ToPasswordResponseArrayOutputWithContext(ctx context.Context) PasswordResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PasswordResponseArrayOutput)
}

type PasswordResponseOutput struct{ *pulumi.OutputState }

func (PasswordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PasswordResponse)(nil)).Elem()
}

func (o PasswordResponseOutput) ToPasswordResponseOutput() PasswordResponseOutput {
	return o
}

func (o PasswordResponseOutput) ToPasswordResponseOutputWithContext(ctx context.Context) PasswordResponseOutput {
	return o
}

func (o PasswordResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PasswordResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o PasswordResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PasswordResponse) string { return v.Value }).(pulumi.StringOutput)
}

type PasswordResponseArrayOutput struct{ *pulumi.OutputState }

func (PasswordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PasswordResponse)(nil)).Elem()
}

func (o PasswordResponseArrayOutput) ToPasswordResponseArrayOutput() PasswordResponseArrayOutput {
	return o
}

func (o PasswordResponseArrayOutput) ToPasswordResponseArrayOutputWithContext(ctx context.Context) PasswordResponseArrayOutput {
	return o
}

func (o PasswordResponseArrayOutput) Index(i pulumi.IntInput) PasswordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PasswordResponse {
		return vs[0].([]PasswordResponse)[vs[1].(int)]
	}).(PasswordResponseOutput)
}

type PersonalComputeInstanceSettings struct {
	// A user explicitly assigned to a personal compute instance.
	AssignedUser *AssignedUser `pulumi:"assignedUser"`
}

// PersonalComputeInstanceSettingsInput is an input type that accepts PersonalComputeInstanceSettingsArgs and PersonalComputeInstanceSettingsOutput values.
// You can construct a concrete instance of `PersonalComputeInstanceSettingsInput` via:
//
//          PersonalComputeInstanceSettingsArgs{...}
type PersonalComputeInstanceSettingsInput interface {
	pulumi.Input

	ToPersonalComputeInstanceSettingsOutput() PersonalComputeInstanceSettingsOutput
	ToPersonalComputeInstanceSettingsOutputWithContext(context.Context) PersonalComputeInstanceSettingsOutput
}

type PersonalComputeInstanceSettingsArgs struct {
	// A user explicitly assigned to a personal compute instance.
	AssignedUser AssignedUserPtrInput `pulumi:"assignedUser"`
}

func (PersonalComputeInstanceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PersonalComputeInstanceSettings)(nil)).Elem()
}

func (i PersonalComputeInstanceSettingsArgs) ToPersonalComputeInstanceSettingsOutput() PersonalComputeInstanceSettingsOutput {
	return i.ToPersonalComputeInstanceSettingsOutputWithContext(context.Background())
}

func (i PersonalComputeInstanceSettingsArgs) ToPersonalComputeInstanceSettingsOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersonalComputeInstanceSettingsOutput)
}

func (i PersonalComputeInstanceSettingsArgs) ToPersonalComputeInstanceSettingsPtrOutput() PersonalComputeInstanceSettingsPtrOutput {
	return i.ToPersonalComputeInstanceSettingsPtrOutputWithContext(context.Background())
}

func (i PersonalComputeInstanceSettingsArgs) ToPersonalComputeInstanceSettingsPtrOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersonalComputeInstanceSettingsOutput).ToPersonalComputeInstanceSettingsPtrOutputWithContext(ctx)
}

// PersonalComputeInstanceSettingsPtrInput is an input type that accepts PersonalComputeInstanceSettingsArgs, PersonalComputeInstanceSettingsPtr and PersonalComputeInstanceSettingsPtrOutput values.
// You can construct a concrete instance of `PersonalComputeInstanceSettingsPtrInput` via:
//
//          PersonalComputeInstanceSettingsArgs{...}
//
//  or:
//
//          nil
type PersonalComputeInstanceSettingsPtrInput interface {
	pulumi.Input

	ToPersonalComputeInstanceSettingsPtrOutput() PersonalComputeInstanceSettingsPtrOutput
	ToPersonalComputeInstanceSettingsPtrOutputWithContext(context.Context) PersonalComputeInstanceSettingsPtrOutput
}

type personalComputeInstanceSettingsPtrType PersonalComputeInstanceSettingsArgs

func PersonalComputeInstanceSettingsPtr(v *PersonalComputeInstanceSettingsArgs) PersonalComputeInstanceSettingsPtrInput {
	return (*personalComputeInstanceSettingsPtrType)(v)
}

func (*personalComputeInstanceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PersonalComputeInstanceSettings)(nil)).Elem()
}

func (i *personalComputeInstanceSettingsPtrType) ToPersonalComputeInstanceSettingsPtrOutput() PersonalComputeInstanceSettingsPtrOutput {
	return i.ToPersonalComputeInstanceSettingsPtrOutputWithContext(context.Background())
}

func (i *personalComputeInstanceSettingsPtrType) ToPersonalComputeInstanceSettingsPtrOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersonalComputeInstanceSettingsPtrOutput)
}

type PersonalComputeInstanceSettingsOutput struct{ *pulumi.OutputState }

func (PersonalComputeInstanceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PersonalComputeInstanceSettings)(nil)).Elem()
}

func (o PersonalComputeInstanceSettingsOutput) ToPersonalComputeInstanceSettingsOutput() PersonalComputeInstanceSettingsOutput {
	return o
}

func (o PersonalComputeInstanceSettingsOutput) ToPersonalComputeInstanceSettingsOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsOutput {
	return o
}

func (o PersonalComputeInstanceSettingsOutput) ToPersonalComputeInstanceSettingsPtrOutput() PersonalComputeInstanceSettingsPtrOutput {
	return o.ToPersonalComputeInstanceSettingsPtrOutputWithContext(context.Background())
}

func (o PersonalComputeInstanceSettingsOutput) ToPersonalComputeInstanceSettingsPtrOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PersonalComputeInstanceSettings) *PersonalComputeInstanceSettings {
		return &v
	}).(PersonalComputeInstanceSettingsPtrOutput)
}

// A user explicitly assigned to a personal compute instance.
func (o PersonalComputeInstanceSettingsOutput) AssignedUser() AssignedUserPtrOutput {
	return o.ApplyT(func(v PersonalComputeInstanceSettings) *AssignedUser { return v.AssignedUser }).(AssignedUserPtrOutput)
}

type PersonalComputeInstanceSettingsPtrOutput struct{ *pulumi.OutputState }

func (PersonalComputeInstanceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PersonalComputeInstanceSettings)(nil)).Elem()
}

func (o PersonalComputeInstanceSettingsPtrOutput) ToPersonalComputeInstanceSettingsPtrOutput() PersonalComputeInstanceSettingsPtrOutput {
	return o
}

func (o PersonalComputeInstanceSettingsPtrOutput) ToPersonalComputeInstanceSettingsPtrOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsPtrOutput {
	return o
}

func (o PersonalComputeInstanceSettingsPtrOutput) Elem() PersonalComputeInstanceSettingsOutput {
	return o.ApplyT(func(v *PersonalComputeInstanceSettings) PersonalComputeInstanceSettings {
		if v != nil {
			return *v
		}
		var ret PersonalComputeInstanceSettings
		return ret
	}).(PersonalComputeInstanceSettingsOutput)
}

// A user explicitly assigned to a personal compute instance.
func (o PersonalComputeInstanceSettingsPtrOutput) AssignedUser() AssignedUserPtrOutput {
	return o.ApplyT(func(v *PersonalComputeInstanceSettings) *AssignedUser {
		if v == nil {
			return nil
		}
		return v.AssignedUser
	}).(AssignedUserPtrOutput)
}

type PersonalComputeInstanceSettingsResponse struct {
	// A user explicitly assigned to a personal compute instance.
	AssignedUser *AssignedUserResponse `pulumi:"assignedUser"`
}

// PersonalComputeInstanceSettingsResponseInput is an input type that accepts PersonalComputeInstanceSettingsResponseArgs and PersonalComputeInstanceSettingsResponseOutput values.
// You can construct a concrete instance of `PersonalComputeInstanceSettingsResponseInput` via:
//
//          PersonalComputeInstanceSettingsResponseArgs{...}
type PersonalComputeInstanceSettingsResponseInput interface {
	pulumi.Input

	ToPersonalComputeInstanceSettingsResponseOutput() PersonalComputeInstanceSettingsResponseOutput
	ToPersonalComputeInstanceSettingsResponseOutputWithContext(context.Context) PersonalComputeInstanceSettingsResponseOutput
}

type PersonalComputeInstanceSettingsResponseArgs struct {
	// A user explicitly assigned to a personal compute instance.
	AssignedUser AssignedUserResponsePtrInput `pulumi:"assignedUser"`
}

func (PersonalComputeInstanceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PersonalComputeInstanceSettingsResponse)(nil)).Elem()
}

func (i PersonalComputeInstanceSettingsResponseArgs) ToPersonalComputeInstanceSettingsResponseOutput() PersonalComputeInstanceSettingsResponseOutput {
	return i.ToPersonalComputeInstanceSettingsResponseOutputWithContext(context.Background())
}

func (i PersonalComputeInstanceSettingsResponseArgs) ToPersonalComputeInstanceSettingsResponseOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersonalComputeInstanceSettingsResponseOutput)
}

func (i PersonalComputeInstanceSettingsResponseArgs) ToPersonalComputeInstanceSettingsResponsePtrOutput() PersonalComputeInstanceSettingsResponsePtrOutput {
	return i.ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(context.Background())
}

func (i PersonalComputeInstanceSettingsResponseArgs) ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersonalComputeInstanceSettingsResponseOutput).ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(ctx)
}

// PersonalComputeInstanceSettingsResponsePtrInput is an input type that accepts PersonalComputeInstanceSettingsResponseArgs, PersonalComputeInstanceSettingsResponsePtr and PersonalComputeInstanceSettingsResponsePtrOutput values.
// You can construct a concrete instance of `PersonalComputeInstanceSettingsResponsePtrInput` via:
//
//          PersonalComputeInstanceSettingsResponseArgs{...}
//
//  or:
//
//          nil
type PersonalComputeInstanceSettingsResponsePtrInput interface {
	pulumi.Input

	ToPersonalComputeInstanceSettingsResponsePtrOutput() PersonalComputeInstanceSettingsResponsePtrOutput
	ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(context.Context) PersonalComputeInstanceSettingsResponsePtrOutput
}

type personalComputeInstanceSettingsResponsePtrType PersonalComputeInstanceSettingsResponseArgs

func PersonalComputeInstanceSettingsResponsePtr(v *PersonalComputeInstanceSettingsResponseArgs) PersonalComputeInstanceSettingsResponsePtrInput {
	return (*personalComputeInstanceSettingsResponsePtrType)(v)
}

func (*personalComputeInstanceSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PersonalComputeInstanceSettingsResponse)(nil)).Elem()
}

func (i *personalComputeInstanceSettingsResponsePtrType) ToPersonalComputeInstanceSettingsResponsePtrOutput() PersonalComputeInstanceSettingsResponsePtrOutput {
	return i.ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *personalComputeInstanceSettingsResponsePtrType) ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersonalComputeInstanceSettingsResponsePtrOutput)
}

type PersonalComputeInstanceSettingsResponseOutput struct{ *pulumi.OutputState }

func (PersonalComputeInstanceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PersonalComputeInstanceSettingsResponse)(nil)).Elem()
}

func (o PersonalComputeInstanceSettingsResponseOutput) ToPersonalComputeInstanceSettingsResponseOutput() PersonalComputeInstanceSettingsResponseOutput {
	return o
}

func (o PersonalComputeInstanceSettingsResponseOutput) ToPersonalComputeInstanceSettingsResponseOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsResponseOutput {
	return o
}

func (o PersonalComputeInstanceSettingsResponseOutput) ToPersonalComputeInstanceSettingsResponsePtrOutput() PersonalComputeInstanceSettingsResponsePtrOutput {
	return o.ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(context.Background())
}

func (o PersonalComputeInstanceSettingsResponseOutput) ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PersonalComputeInstanceSettingsResponse) *PersonalComputeInstanceSettingsResponse {
		return &v
	}).(PersonalComputeInstanceSettingsResponsePtrOutput)
}

// A user explicitly assigned to a personal compute instance.
func (o PersonalComputeInstanceSettingsResponseOutput) AssignedUser() AssignedUserResponsePtrOutput {
	return o.ApplyT(func(v PersonalComputeInstanceSettingsResponse) *AssignedUserResponse { return v.AssignedUser }).(AssignedUserResponsePtrOutput)
}

type PersonalComputeInstanceSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PersonalComputeInstanceSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PersonalComputeInstanceSettingsResponse)(nil)).Elem()
}

func (o PersonalComputeInstanceSettingsResponsePtrOutput) ToPersonalComputeInstanceSettingsResponsePtrOutput() PersonalComputeInstanceSettingsResponsePtrOutput {
	return o
}

func (o PersonalComputeInstanceSettingsResponsePtrOutput) ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsResponsePtrOutput {
	return o
}

func (o PersonalComputeInstanceSettingsResponsePtrOutput) Elem() PersonalComputeInstanceSettingsResponseOutput {
	return o.ApplyT(func(v *PersonalComputeInstanceSettingsResponse) PersonalComputeInstanceSettingsResponse {
		if v != nil {
			return *v
		}
		var ret PersonalComputeInstanceSettingsResponse
		return ret
	}).(PersonalComputeInstanceSettingsResponseOutput)
}

// A user explicitly assigned to a personal compute instance.
func (o PersonalComputeInstanceSettingsResponsePtrOutput) AssignedUser() AssignedUserResponsePtrOutput {
	return o.ApplyT(func(v *PersonalComputeInstanceSettingsResponse) *AssignedUserResponse {
		if v == nil {
			return nil
		}
		return v.AssignedUser
	}).(AssignedUserResponsePtrOutput)
}

type PrivateEndpointConnectionResponse struct {
	// Specifies the resource ID.
	Id string `pulumi:"id"`
	// The identity of the resource.
	Identity *IdentityResponse `pulumi:"identity"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// Specifies the name of the resource.
	Name string `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The sku of the workspace.
	Sku *SkuResponse `pulumi:"sku"`
	// Read only system data
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Contains resource tags defined as key/value pairs.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the type of the resource.
	Type string `pulumi:"type"`
}

// PrivateEndpointConnectionResponseInput is an input type that accepts PrivateEndpointConnectionResponseArgs and PrivateEndpointConnectionResponseOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionResponseInput` via:
//
//          PrivateEndpointConnectionResponseArgs{...}
type PrivateEndpointConnectionResponseInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput
	ToPrivateEndpointConnectionResponseOutputWithContext(context.Context) PrivateEndpointConnectionResponseOutput
}

type PrivateEndpointConnectionResponseArgs struct {
	// Specifies the resource ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The identity of the resource.
	Identity IdentityResponsePtrInput `pulumi:"identity"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Specifies the name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint PrivateEndpointResponsePtrInput `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponseInput `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The sku of the workspace.
	Sku SkuResponsePtrInput `pulumi:"sku"`
	// Read only system data
	SystemData SystemDataResponseInput `pulumi:"systemData"`
	// Contains resource tags defined as key/value pairs.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Specifies the type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PrivateEndpointConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (i PrivateEndpointConnectionResponseArgs) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return i.ToPrivateEndpointConnectionResponseOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionResponseArgs) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionResponseOutput)
}

// PrivateEndpointConnectionResponseArrayInput is an input type that accepts PrivateEndpointConnectionResponseArray and PrivateEndpointConnectionResponseArrayOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionResponseArrayInput` via:
//
//          PrivateEndpointConnectionResponseArray{ PrivateEndpointConnectionResponseArgs{...} }
type PrivateEndpointConnectionResponseArrayInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput
	ToPrivateEndpointConnectionResponseArrayOutputWithContext(context.Context) PrivateEndpointConnectionResponseArrayOutput
}

type PrivateEndpointConnectionResponseArray []PrivateEndpointConnectionResponseInput

func (PrivateEndpointConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (i PrivateEndpointConnectionResponseArray) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return i.ToPrivateEndpointConnectionResponseArrayOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionResponseArray) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionResponseArrayOutput)
}

type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// Specifies the resource ID.
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The identity of the resource.
func (o PrivateEndpointConnectionResponseOutput) Identity() IdentityResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *IdentityResponse { return v.Identity }).(IdentityResponsePtrOutput)
}

// Specifies the location of the resource.
func (o PrivateEndpointConnectionResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Specifies the name of the resource.
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The resource of private end point.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The sku of the workspace.
func (o PrivateEndpointConnectionResponseOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// Read only system data
func (o PrivateEndpointConnectionResponseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Contains resource tags defined as key/value pairs.
func (o PrivateEndpointConnectionResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the type of the resource.
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

type PrivateEndpointResponse struct {
	// The ARM identifier for Private Endpoint
	Id string `pulumi:"id"`
	// The ARM identifier for Subnet resource that private endpoint links to
	SubnetArmId string `pulumi:"subnetArmId"`
}

// PrivateEndpointResponseInput is an input type that accepts PrivateEndpointResponseArgs and PrivateEndpointResponseOutput values.
// You can construct a concrete instance of `PrivateEndpointResponseInput` via:
//
//          PrivateEndpointResponseArgs{...}
type PrivateEndpointResponseInput interface {
	pulumi.Input

	ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput
	ToPrivateEndpointResponseOutputWithContext(context.Context) PrivateEndpointResponseOutput
}

type PrivateEndpointResponseArgs struct {
	// The ARM identifier for Private Endpoint
	Id pulumi.StringInput `pulumi:"id"`
	// The ARM identifier for Subnet resource that private endpoint links to
	SubnetArmId pulumi.StringInput `pulumi:"subnetArmId"`
}

func (PrivateEndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return i.ToPrivateEndpointResponseOutputWithContext(context.Background())
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponseOutput)
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return i.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponseOutput).ToPrivateEndpointResponsePtrOutputWithContext(ctx)
}

// PrivateEndpointResponsePtrInput is an input type that accepts PrivateEndpointResponseArgs, PrivateEndpointResponsePtr and PrivateEndpointResponsePtrOutput values.
// You can construct a concrete instance of `PrivateEndpointResponsePtrInput` via:
//
//          PrivateEndpointResponseArgs{...}
//
//  or:
//
//          nil
type PrivateEndpointResponsePtrInput interface {
	pulumi.Input

	ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput
	ToPrivateEndpointResponsePtrOutputWithContext(context.Context) PrivateEndpointResponsePtrOutput
}

type privateEndpointResponsePtrType PrivateEndpointResponseArgs

func PrivateEndpointResponsePtr(v *PrivateEndpointResponseArgs) PrivateEndpointResponsePtrInput {
	return (*privateEndpointResponsePtrType)(v)
}

func (*privateEndpointResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (i *privateEndpointResponsePtrType) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return i.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (i *privateEndpointResponsePtrType) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponsePtrOutput)
}

type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointResponse) *PrivateEndpointResponse {
		return &v
	}).(PrivateEndpointResponsePtrOutput)
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The ARM identifier for Subnet resource that private endpoint links to
func (o PrivateEndpointResponseOutput) SubnetArmId() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.SubnetArmId }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The ARM identifier for Subnet resource that private endpoint links to
func (o PrivateEndpointResponsePtrOutput) SubnetArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetArmId
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//          PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

type PrivateLinkServiceConnectionStateArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput).ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStatePtrInput is an input type that accepts PrivateLinkServiceConnectionStateArgs, PrivateLinkServiceConnectionStatePtr and PrivateLinkServiceConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStatePtrInput` via:
//
//          PrivateLinkServiceConnectionStateArgs{...}
//
//  or:
//
//          nil
type PrivateLinkServiceConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput
	ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStatePtrOutput
}

type privateLinkServiceConnectionStatePtrType PrivateLinkServiceConnectionStateArgs

func PrivateLinkServiceConnectionStatePtr(v *PrivateLinkServiceConnectionStateArgs) PrivateLinkServiceConnectionStatePtrInput {
	return (*privateLinkServiceConnectionStatePtrType)(v)
}

func (*privateLinkServiceConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStatePtrOutput)
}

type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServiceConnectionState) *PrivateLinkServiceConnectionState {
		return &v
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) Elem() PrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) PrivateLinkServiceConnectionState {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionState
		return ret
	}).(PrivateLinkServiceConnectionStateOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateResponseInput is an input type that accepts PrivateLinkServiceConnectionStateResponseArgs and PrivateLinkServiceConnectionStateResponseOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateResponseInput` via:
//
//          PrivateLinkServiceConnectionStateResponseArgs{...}
type PrivateLinkServiceConnectionStateResponseInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput
	ToPrivateLinkServiceConnectionStateResponseOutputWithContext(context.Context) PrivateLinkServiceConnectionStateResponseOutput
}

type PrivateLinkServiceConnectionStateResponseArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return i.ToPrivateLinkServiceConnectionStateResponseOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateResponseOutput)
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return i.ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateResponseOutput).ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStateResponsePtrInput is an input type that accepts PrivateLinkServiceConnectionStateResponseArgs, PrivateLinkServiceConnectionStateResponsePtr and PrivateLinkServiceConnectionStateResponsePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateResponsePtrInput` via:
//
//          PrivateLinkServiceConnectionStateResponseArgs{...}
//
//  or:
//
//          nil
type PrivateLinkServiceConnectionStateResponsePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput
	ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput
}

type privateLinkServiceConnectionStateResponsePtrType PrivateLinkServiceConnectionStateResponseArgs

func PrivateLinkServiceConnectionStateResponsePtr(v *PrivateLinkServiceConnectionStateResponseArgs) PrivateLinkServiceConnectionStateResponsePtrInput {
	return (*privateLinkServiceConnectionStateResponsePtrType)(v)
}

func (*privateLinkServiceConnectionStateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStateResponsePtrType) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return i.ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStateResponsePtrType) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServiceConnectionStateResponse) *PrivateLinkServiceConnectionStateResponse {
		return &v
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Elem() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) PrivateLinkServiceConnectionStateResponse {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionStateResponse
		return ret
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ProbeSettings struct {
	// The number of failures to allow before returning an unhealthy status.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The delay before the first probe in ISO 8601 format.
	InitialDelay *string `pulumi:"initialDelay"`
	// The length of time between probes in ISO 8601 format.
	Period *string `pulumi:"period"`
	// The number of successful probes before returning a healthy status.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// The probe timeout in ISO 8601 format.
	Timeout *string `pulumi:"timeout"`
}

// ProbeSettingsInput is an input type that accepts ProbeSettingsArgs and ProbeSettingsOutput values.
// You can construct a concrete instance of `ProbeSettingsInput` via:
//
//          ProbeSettingsArgs{...}
type ProbeSettingsInput interface {
	pulumi.Input

	ToProbeSettingsOutput() ProbeSettingsOutput
	ToProbeSettingsOutputWithContext(context.Context) ProbeSettingsOutput
}

type ProbeSettingsArgs struct {
	// The number of failures to allow before returning an unhealthy status.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The delay before the first probe in ISO 8601 format.
	InitialDelay pulumi.StringPtrInput `pulumi:"initialDelay"`
	// The length of time between probes in ISO 8601 format.
	Period pulumi.StringPtrInput `pulumi:"period"`
	// The number of successful probes before returning a healthy status.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// The probe timeout in ISO 8601 format.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (ProbeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeSettings)(nil)).Elem()
}

func (i ProbeSettingsArgs) ToProbeSettingsOutput() ProbeSettingsOutput {
	return i.ToProbeSettingsOutputWithContext(context.Background())
}

func (i ProbeSettingsArgs) ToProbeSettingsOutputWithContext(ctx context.Context) ProbeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeSettingsOutput)
}

func (i ProbeSettingsArgs) ToProbeSettingsPtrOutput() ProbeSettingsPtrOutput {
	return i.ToProbeSettingsPtrOutputWithContext(context.Background())
}

func (i ProbeSettingsArgs) ToProbeSettingsPtrOutputWithContext(ctx context.Context) ProbeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeSettingsOutput).ToProbeSettingsPtrOutputWithContext(ctx)
}

// ProbeSettingsPtrInput is an input type that accepts ProbeSettingsArgs, ProbeSettingsPtr and ProbeSettingsPtrOutput values.
// You can construct a concrete instance of `ProbeSettingsPtrInput` via:
//
//          ProbeSettingsArgs{...}
//
//  or:
//
//          nil
type ProbeSettingsPtrInput interface {
	pulumi.Input

	ToProbeSettingsPtrOutput() ProbeSettingsPtrOutput
	ToProbeSettingsPtrOutputWithContext(context.Context) ProbeSettingsPtrOutput
}

type probeSettingsPtrType ProbeSettingsArgs

func ProbeSettingsPtr(v *ProbeSettingsArgs) ProbeSettingsPtrInput {
	return (*probeSettingsPtrType)(v)
}

func (*probeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProbeSettings)(nil)).Elem()
}

func (i *probeSettingsPtrType) ToProbeSettingsPtrOutput() ProbeSettingsPtrOutput {
	return i.ToProbeSettingsPtrOutputWithContext(context.Background())
}

func (i *probeSettingsPtrType) ToProbeSettingsPtrOutputWithContext(ctx context.Context) ProbeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeSettingsPtrOutput)
}

type ProbeSettingsOutput struct{ *pulumi.OutputState }

func (ProbeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeSettings)(nil)).Elem()
}

func (o ProbeSettingsOutput) ToProbeSettingsOutput() ProbeSettingsOutput {
	return o
}

func (o ProbeSettingsOutput) ToProbeSettingsOutputWithContext(ctx context.Context) ProbeSettingsOutput {
	return o
}

func (o ProbeSettingsOutput) ToProbeSettingsPtrOutput() ProbeSettingsPtrOutput {
	return o.ToProbeSettingsPtrOutputWithContext(context.Background())
}

func (o ProbeSettingsOutput) ToProbeSettingsPtrOutputWithContext(ctx context.Context) ProbeSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProbeSettings) *ProbeSettings {
		return &v
	}).(ProbeSettingsPtrOutput)
}

// The number of failures to allow before returning an unhealthy status.
func (o ProbeSettingsOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeSettings) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The delay before the first probe in ISO 8601 format.
func (o ProbeSettingsOutput) InitialDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeSettings) *string { return v.InitialDelay }).(pulumi.StringPtrOutput)
}

// The length of time between probes in ISO 8601 format.
func (o ProbeSettingsOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeSettings) *string { return v.Period }).(pulumi.StringPtrOutput)
}

// The number of successful probes before returning a healthy status.
func (o ProbeSettingsOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeSettings) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// The probe timeout in ISO 8601 format.
func (o ProbeSettingsOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeSettings) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ProbeSettingsPtrOutput struct{ *pulumi.OutputState }

func (ProbeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProbeSettings)(nil)).Elem()
}

func (o ProbeSettingsPtrOutput) ToProbeSettingsPtrOutput() ProbeSettingsPtrOutput {
	return o
}

func (o ProbeSettingsPtrOutput) ToProbeSettingsPtrOutputWithContext(ctx context.Context) ProbeSettingsPtrOutput {
	return o
}

func (o ProbeSettingsPtrOutput) Elem() ProbeSettingsOutput {
	return o.ApplyT(func(v *ProbeSettings) ProbeSettings {
		if v != nil {
			return *v
		}
		var ret ProbeSettings
		return ret
	}).(ProbeSettingsOutput)
}

// The number of failures to allow before returning an unhealthy status.
func (o ProbeSettingsPtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbeSettings) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The delay before the first probe in ISO 8601 format.
func (o ProbeSettingsPtrOutput) InitialDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbeSettings) *string {
		if v == nil {
			return nil
		}
		return v.InitialDelay
	}).(pulumi.StringPtrOutput)
}

// The length of time between probes in ISO 8601 format.
func (o ProbeSettingsPtrOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbeSettings) *string {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.StringPtrOutput)
}

// The number of successful probes before returning a healthy status.
func (o ProbeSettingsPtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbeSettings) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// The probe timeout in ISO 8601 format.
func (o ProbeSettingsPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbeSettings) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

type ProbeSettingsResponse struct {
	// The number of failures to allow before returning an unhealthy status.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The delay before the first probe in ISO 8601 format.
	InitialDelay *string `pulumi:"initialDelay"`
	// The length of time between probes in ISO 8601 format.
	Period *string `pulumi:"period"`
	// The number of successful probes before returning a healthy status.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// The probe timeout in ISO 8601 format.
	Timeout *string `pulumi:"timeout"`
}

// ProbeSettingsResponseInput is an input type that accepts ProbeSettingsResponseArgs and ProbeSettingsResponseOutput values.
// You can construct a concrete instance of `ProbeSettingsResponseInput` via:
//
//          ProbeSettingsResponseArgs{...}
type ProbeSettingsResponseInput interface {
	pulumi.Input

	ToProbeSettingsResponseOutput() ProbeSettingsResponseOutput
	ToProbeSettingsResponseOutputWithContext(context.Context) ProbeSettingsResponseOutput
}

type ProbeSettingsResponseArgs struct {
	// The number of failures to allow before returning an unhealthy status.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The delay before the first probe in ISO 8601 format.
	InitialDelay pulumi.StringPtrInput `pulumi:"initialDelay"`
	// The length of time between probes in ISO 8601 format.
	Period pulumi.StringPtrInput `pulumi:"period"`
	// The number of successful probes before returning a healthy status.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// The probe timeout in ISO 8601 format.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (ProbeSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeSettingsResponse)(nil)).Elem()
}

func (i ProbeSettingsResponseArgs) ToProbeSettingsResponseOutput() ProbeSettingsResponseOutput {
	return i.ToProbeSettingsResponseOutputWithContext(context.Background())
}

func (i ProbeSettingsResponseArgs) ToProbeSettingsResponseOutputWithContext(ctx context.Context) ProbeSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeSettingsResponseOutput)
}

func (i ProbeSettingsResponseArgs) ToProbeSettingsResponsePtrOutput() ProbeSettingsResponsePtrOutput {
	return i.ToProbeSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ProbeSettingsResponseArgs) ToProbeSettingsResponsePtrOutputWithContext(ctx context.Context) ProbeSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeSettingsResponseOutput).ToProbeSettingsResponsePtrOutputWithContext(ctx)
}

// ProbeSettingsResponsePtrInput is an input type that accepts ProbeSettingsResponseArgs, ProbeSettingsResponsePtr and ProbeSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ProbeSettingsResponsePtrInput` via:
//
//          ProbeSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ProbeSettingsResponsePtrInput interface {
	pulumi.Input

	ToProbeSettingsResponsePtrOutput() ProbeSettingsResponsePtrOutput
	ToProbeSettingsResponsePtrOutputWithContext(context.Context) ProbeSettingsResponsePtrOutput
}

type probeSettingsResponsePtrType ProbeSettingsResponseArgs

func ProbeSettingsResponsePtr(v *ProbeSettingsResponseArgs) ProbeSettingsResponsePtrInput {
	return (*probeSettingsResponsePtrType)(v)
}

func (*probeSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProbeSettingsResponse)(nil)).Elem()
}

func (i *probeSettingsResponsePtrType) ToProbeSettingsResponsePtrOutput() ProbeSettingsResponsePtrOutput {
	return i.ToProbeSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *probeSettingsResponsePtrType) ToProbeSettingsResponsePtrOutputWithContext(ctx context.Context) ProbeSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeSettingsResponsePtrOutput)
}

type ProbeSettingsResponseOutput struct{ *pulumi.OutputState }

func (ProbeSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeSettingsResponse)(nil)).Elem()
}

func (o ProbeSettingsResponseOutput) ToProbeSettingsResponseOutput() ProbeSettingsResponseOutput {
	return o
}

func (o ProbeSettingsResponseOutput) ToProbeSettingsResponseOutputWithContext(ctx context.Context) ProbeSettingsResponseOutput {
	return o
}

func (o ProbeSettingsResponseOutput) ToProbeSettingsResponsePtrOutput() ProbeSettingsResponsePtrOutput {
	return o.ToProbeSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ProbeSettingsResponseOutput) ToProbeSettingsResponsePtrOutputWithContext(ctx context.Context) ProbeSettingsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProbeSettingsResponse) *ProbeSettingsResponse {
		return &v
	}).(ProbeSettingsResponsePtrOutput)
}

// The number of failures to allow before returning an unhealthy status.
func (o ProbeSettingsResponseOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeSettingsResponse) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The delay before the first probe in ISO 8601 format.
func (o ProbeSettingsResponseOutput) InitialDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeSettingsResponse) *string { return v.InitialDelay }).(pulumi.StringPtrOutput)
}

// The length of time between probes in ISO 8601 format.
func (o ProbeSettingsResponseOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeSettingsResponse) *string { return v.Period }).(pulumi.StringPtrOutput)
}

// The number of successful probes before returning a healthy status.
func (o ProbeSettingsResponseOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeSettingsResponse) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// The probe timeout in ISO 8601 format.
func (o ProbeSettingsResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeSettingsResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ProbeSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ProbeSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProbeSettingsResponse)(nil)).Elem()
}

func (o ProbeSettingsResponsePtrOutput) ToProbeSettingsResponsePtrOutput() ProbeSettingsResponsePtrOutput {
	return o
}

func (o ProbeSettingsResponsePtrOutput) ToProbeSettingsResponsePtrOutputWithContext(ctx context.Context) ProbeSettingsResponsePtrOutput {
	return o
}

func (o ProbeSettingsResponsePtrOutput) Elem() ProbeSettingsResponseOutput {
	return o.ApplyT(func(v *ProbeSettingsResponse) ProbeSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ProbeSettingsResponse
		return ret
	}).(ProbeSettingsResponseOutput)
}

// The number of failures to allow before returning an unhealthy status.
func (o ProbeSettingsResponsePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The delay before the first probe in ISO 8601 format.
func (o ProbeSettingsResponsePtrOutput) InitialDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InitialDelay
	}).(pulumi.StringPtrOutput)
}

// The length of time between probes in ISO 8601 format.
func (o ProbeSettingsResponsePtrOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.StringPtrOutput)
}

// The number of successful probes before returning a healthy status.
func (o ProbeSettingsResponsePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// The probe timeout in ISO 8601 format.
func (o ProbeSettingsResponsePtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

type ProgressMetricsResponse struct {
	// The completed datapoint count.
	CompletedDatapointCount float64 `pulumi:"completedDatapointCount"`
	// The time of last successful incremental dataset refresh in UTC.
	IncrementalDatasetLastRefreshTime string `pulumi:"incrementalDatasetLastRefreshTime"`
	// The skipped datapoint count.
	SkippedDatapointCount float64 `pulumi:"skippedDatapointCount"`
	// The total datapoint count.
	TotalDatapointCount float64 `pulumi:"totalDatapointCount"`
}

// ProgressMetricsResponseInput is an input type that accepts ProgressMetricsResponseArgs and ProgressMetricsResponseOutput values.
// You can construct a concrete instance of `ProgressMetricsResponseInput` via:
//
//          ProgressMetricsResponseArgs{...}
type ProgressMetricsResponseInput interface {
	pulumi.Input

	ToProgressMetricsResponseOutput() ProgressMetricsResponseOutput
	ToProgressMetricsResponseOutputWithContext(context.Context) ProgressMetricsResponseOutput
}

type ProgressMetricsResponseArgs struct {
	// The completed datapoint count.
	CompletedDatapointCount pulumi.Float64Input `pulumi:"completedDatapointCount"`
	// The time of last successful incremental dataset refresh in UTC.
	IncrementalDatasetLastRefreshTime pulumi.StringInput `pulumi:"incrementalDatasetLastRefreshTime"`
	// The skipped datapoint count.
	SkippedDatapointCount pulumi.Float64Input `pulumi:"skippedDatapointCount"`
	// The total datapoint count.
	TotalDatapointCount pulumi.Float64Input `pulumi:"totalDatapointCount"`
}

func (ProgressMetricsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProgressMetricsResponse)(nil)).Elem()
}

func (i ProgressMetricsResponseArgs) ToProgressMetricsResponseOutput() ProgressMetricsResponseOutput {
	return i.ToProgressMetricsResponseOutputWithContext(context.Background())
}

func (i ProgressMetricsResponseArgs) ToProgressMetricsResponseOutputWithContext(ctx context.Context) ProgressMetricsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProgressMetricsResponseOutput)
}

func (i ProgressMetricsResponseArgs) ToProgressMetricsResponsePtrOutput() ProgressMetricsResponsePtrOutput {
	return i.ToProgressMetricsResponsePtrOutputWithContext(context.Background())
}

func (i ProgressMetricsResponseArgs) ToProgressMetricsResponsePtrOutputWithContext(ctx context.Context) ProgressMetricsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProgressMetricsResponseOutput).ToProgressMetricsResponsePtrOutputWithContext(ctx)
}

// ProgressMetricsResponsePtrInput is an input type that accepts ProgressMetricsResponseArgs, ProgressMetricsResponsePtr and ProgressMetricsResponsePtrOutput values.
// You can construct a concrete instance of `ProgressMetricsResponsePtrInput` via:
//
//          ProgressMetricsResponseArgs{...}
//
//  or:
//
//          nil
type ProgressMetricsResponsePtrInput interface {
	pulumi.Input

	ToProgressMetricsResponsePtrOutput() ProgressMetricsResponsePtrOutput
	ToProgressMetricsResponsePtrOutputWithContext(context.Context) ProgressMetricsResponsePtrOutput
}

type progressMetricsResponsePtrType ProgressMetricsResponseArgs

func ProgressMetricsResponsePtr(v *ProgressMetricsResponseArgs) ProgressMetricsResponsePtrInput {
	return (*progressMetricsResponsePtrType)(v)
}

func (*progressMetricsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProgressMetricsResponse)(nil)).Elem()
}

func (i *progressMetricsResponsePtrType) ToProgressMetricsResponsePtrOutput() ProgressMetricsResponsePtrOutput {
	return i.ToProgressMetricsResponsePtrOutputWithContext(context.Background())
}

func (i *progressMetricsResponsePtrType) ToProgressMetricsResponsePtrOutputWithContext(ctx context.Context) ProgressMetricsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProgressMetricsResponsePtrOutput)
}

type ProgressMetricsResponseOutput struct{ *pulumi.OutputState }

func (ProgressMetricsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProgressMetricsResponse)(nil)).Elem()
}

func (o ProgressMetricsResponseOutput) ToProgressMetricsResponseOutput() ProgressMetricsResponseOutput {
	return o
}

func (o ProgressMetricsResponseOutput) ToProgressMetricsResponseOutputWithContext(ctx context.Context) ProgressMetricsResponseOutput {
	return o
}

func (o ProgressMetricsResponseOutput) ToProgressMetricsResponsePtrOutput() ProgressMetricsResponsePtrOutput {
	return o.ToProgressMetricsResponsePtrOutputWithContext(context.Background())
}

func (o ProgressMetricsResponseOutput) ToProgressMetricsResponsePtrOutputWithContext(ctx context.Context) ProgressMetricsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProgressMetricsResponse) *ProgressMetricsResponse {
		return &v
	}).(ProgressMetricsResponsePtrOutput)
}

// The completed datapoint count.
func (o ProgressMetricsResponseOutput) CompletedDatapointCount() pulumi.Float64Output {
	return o.ApplyT(func(v ProgressMetricsResponse) float64 { return v.CompletedDatapointCount }).(pulumi.Float64Output)
}

// The time of last successful incremental dataset refresh in UTC.
func (o ProgressMetricsResponseOutput) IncrementalDatasetLastRefreshTime() pulumi.StringOutput {
	return o.ApplyT(func(v ProgressMetricsResponse) string { return v.IncrementalDatasetLastRefreshTime }).(pulumi.StringOutput)
}

// The skipped datapoint count.
func (o ProgressMetricsResponseOutput) SkippedDatapointCount() pulumi.Float64Output {
	return o.ApplyT(func(v ProgressMetricsResponse) float64 { return v.SkippedDatapointCount }).(pulumi.Float64Output)
}

// The total datapoint count.
func (o ProgressMetricsResponseOutput) TotalDatapointCount() pulumi.Float64Output {
	return o.ApplyT(func(v ProgressMetricsResponse) float64 { return v.TotalDatapointCount }).(pulumi.Float64Output)
}

type ProgressMetricsResponsePtrOutput struct{ *pulumi.OutputState }

func (ProgressMetricsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProgressMetricsResponse)(nil)).Elem()
}

func (o ProgressMetricsResponsePtrOutput) ToProgressMetricsResponsePtrOutput() ProgressMetricsResponsePtrOutput {
	return o
}

func (o ProgressMetricsResponsePtrOutput) ToProgressMetricsResponsePtrOutputWithContext(ctx context.Context) ProgressMetricsResponsePtrOutput {
	return o
}

func (o ProgressMetricsResponsePtrOutput) Elem() ProgressMetricsResponseOutput {
	return o.ApplyT(func(v *ProgressMetricsResponse) ProgressMetricsResponse {
		if v != nil {
			return *v
		}
		var ret ProgressMetricsResponse
		return ret
	}).(ProgressMetricsResponseOutput)
}

// The completed datapoint count.
func (o ProgressMetricsResponsePtrOutput) CompletedDatapointCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ProgressMetricsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.CompletedDatapointCount
	}).(pulumi.Float64PtrOutput)
}

// The time of last successful incremental dataset refresh in UTC.
func (o ProgressMetricsResponsePtrOutput) IncrementalDatasetLastRefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProgressMetricsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IncrementalDatasetLastRefreshTime
	}).(pulumi.StringPtrOutput)
}

// The skipped datapoint count.
func (o ProgressMetricsResponsePtrOutput) SkippedDatapointCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ProgressMetricsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.SkippedDatapointCount
	}).(pulumi.Float64PtrOutput)
}

// The total datapoint count.
func (o ProgressMetricsResponsePtrOutput) TotalDatapointCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ProgressMetricsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.TotalDatapointCount
	}).(pulumi.Float64PtrOutput)
}

type PyTorch struct {
	// Enum to determine the job distribution type.
	// Expected value is 'PyTorch'.
	DistributionType string `pulumi:"distributionType"`
	// Total process count for the distributed job.
	ProcessCount *int `pulumi:"processCount"`
}

// PyTorchInput is an input type that accepts PyTorchArgs and PyTorchOutput values.
// You can construct a concrete instance of `PyTorchInput` via:
//
//          PyTorchArgs{...}
type PyTorchInput interface {
	pulumi.Input

	ToPyTorchOutput() PyTorchOutput
	ToPyTorchOutputWithContext(context.Context) PyTorchOutput
}

type PyTorchArgs struct {
	// Enum to determine the job distribution type.
	// Expected value is 'PyTorch'.
	DistributionType pulumi.StringInput `pulumi:"distributionType"`
	// Total process count for the distributed job.
	ProcessCount pulumi.IntPtrInput `pulumi:"processCount"`
}

func (PyTorchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PyTorch)(nil)).Elem()
}

func (i PyTorchArgs) ToPyTorchOutput() PyTorchOutput {
	return i.ToPyTorchOutputWithContext(context.Background())
}

func (i PyTorchArgs) ToPyTorchOutputWithContext(ctx context.Context) PyTorchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PyTorchOutput)
}

type PyTorchOutput struct{ *pulumi.OutputState }

func (PyTorchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PyTorch)(nil)).Elem()
}

func (o PyTorchOutput) ToPyTorchOutput() PyTorchOutput {
	return o
}

func (o PyTorchOutput) ToPyTorchOutputWithContext(ctx context.Context) PyTorchOutput {
	return o
}

// Enum to determine the job distribution type.
// Expected value is 'PyTorch'.
func (o PyTorchOutput) DistributionType() pulumi.StringOutput {
	return o.ApplyT(func(v PyTorch) string { return v.DistributionType }).(pulumi.StringOutput)
}

// Total process count for the distributed job.
func (o PyTorchOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PyTorch) *int { return v.ProcessCount }).(pulumi.IntPtrOutput)
}

type PyTorchResponse struct {
	// Enum to determine the job distribution type.
	// Expected value is 'PyTorch'.
	DistributionType string `pulumi:"distributionType"`
	// Total process count for the distributed job.
	ProcessCount *int `pulumi:"processCount"`
}

// PyTorchResponseInput is an input type that accepts PyTorchResponseArgs and PyTorchResponseOutput values.
// You can construct a concrete instance of `PyTorchResponseInput` via:
//
//          PyTorchResponseArgs{...}
type PyTorchResponseInput interface {
	pulumi.Input

	ToPyTorchResponseOutput() PyTorchResponseOutput
	ToPyTorchResponseOutputWithContext(context.Context) PyTorchResponseOutput
}

type PyTorchResponseArgs struct {
	// Enum to determine the job distribution type.
	// Expected value is 'PyTorch'.
	DistributionType pulumi.StringInput `pulumi:"distributionType"`
	// Total process count for the distributed job.
	ProcessCount pulumi.IntPtrInput `pulumi:"processCount"`
}

func (PyTorchResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PyTorchResponse)(nil)).Elem()
}

func (i PyTorchResponseArgs) ToPyTorchResponseOutput() PyTorchResponseOutput {
	return i.ToPyTorchResponseOutputWithContext(context.Background())
}

func (i PyTorchResponseArgs) ToPyTorchResponseOutputWithContext(ctx context.Context) PyTorchResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PyTorchResponseOutput)
}

type PyTorchResponseOutput struct{ *pulumi.OutputState }

func (PyTorchResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PyTorchResponse)(nil)).Elem()
}

func (o PyTorchResponseOutput) ToPyTorchResponseOutput() PyTorchResponseOutput {
	return o
}

func (o PyTorchResponseOutput) ToPyTorchResponseOutputWithContext(ctx context.Context) PyTorchResponseOutput {
	return o
}

// Enum to determine the job distribution type.
// Expected value is 'PyTorch'.
func (o PyTorchResponseOutput) DistributionType() pulumi.StringOutput {
	return o.ApplyT(func(v PyTorchResponse) string { return v.DistributionType }).(pulumi.StringOutput)
}

// Total process count for the distributed job.
func (o PyTorchResponseOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PyTorchResponse) *int { return v.ProcessCount }).(pulumi.IntPtrOutput)
}

type RCranPackage struct {
	// The package name.
	Name *string `pulumi:"name"`
	// The repository name.
	Repository *string `pulumi:"repository"`
}

// RCranPackageInput is an input type that accepts RCranPackageArgs and RCranPackageOutput values.
// You can construct a concrete instance of `RCranPackageInput` via:
//
//          RCranPackageArgs{...}
type RCranPackageInput interface {
	pulumi.Input

	ToRCranPackageOutput() RCranPackageOutput
	ToRCranPackageOutputWithContext(context.Context) RCranPackageOutput
}

type RCranPackageArgs struct {
	// The package name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The repository name.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
}

func (RCranPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RCranPackage)(nil)).Elem()
}

func (i RCranPackageArgs) ToRCranPackageOutput() RCranPackageOutput {
	return i.ToRCranPackageOutputWithContext(context.Background())
}

func (i RCranPackageArgs) ToRCranPackageOutputWithContext(ctx context.Context) RCranPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RCranPackageOutput)
}

// RCranPackageArrayInput is an input type that accepts RCranPackageArray and RCranPackageArrayOutput values.
// You can construct a concrete instance of `RCranPackageArrayInput` via:
//
//          RCranPackageArray{ RCranPackageArgs{...} }
type RCranPackageArrayInput interface {
	pulumi.Input

	ToRCranPackageArrayOutput() RCranPackageArrayOutput
	ToRCranPackageArrayOutputWithContext(context.Context) RCranPackageArrayOutput
}

type RCranPackageArray []RCranPackageInput

func (RCranPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RCranPackage)(nil)).Elem()
}

func (i RCranPackageArray) ToRCranPackageArrayOutput() RCranPackageArrayOutput {
	return i.ToRCranPackageArrayOutputWithContext(context.Background())
}

func (i RCranPackageArray) ToRCranPackageArrayOutputWithContext(ctx context.Context) RCranPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RCranPackageArrayOutput)
}

type RCranPackageOutput struct{ *pulumi.OutputState }

func (RCranPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RCranPackage)(nil)).Elem()
}

func (o RCranPackageOutput) ToRCranPackageOutput() RCranPackageOutput {
	return o
}

func (o RCranPackageOutput) ToRCranPackageOutputWithContext(ctx context.Context) RCranPackageOutput {
	return o
}

// The package name.
func (o RCranPackageOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RCranPackage) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The repository name.
func (o RCranPackageOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RCranPackage) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

type RCranPackageArrayOutput struct{ *pulumi.OutputState }

func (RCranPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RCranPackage)(nil)).Elem()
}

func (o RCranPackageArrayOutput) ToRCranPackageArrayOutput() RCranPackageArrayOutput {
	return o
}

func (o RCranPackageArrayOutput) ToRCranPackageArrayOutputWithContext(ctx context.Context) RCranPackageArrayOutput {
	return o
}

func (o RCranPackageArrayOutput) Index(i pulumi.IntInput) RCranPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RCranPackage {
		return vs[0].([]RCranPackage)[vs[1].(int)]
	}).(RCranPackageOutput)
}

type RCranPackageResponse struct {
	// The package name.
	Name *string `pulumi:"name"`
	// The repository name.
	Repository *string `pulumi:"repository"`
}

// RCranPackageResponseInput is an input type that accepts RCranPackageResponseArgs and RCranPackageResponseOutput values.
// You can construct a concrete instance of `RCranPackageResponseInput` via:
//
//          RCranPackageResponseArgs{...}
type RCranPackageResponseInput interface {
	pulumi.Input

	ToRCranPackageResponseOutput() RCranPackageResponseOutput
	ToRCranPackageResponseOutputWithContext(context.Context) RCranPackageResponseOutput
}

type RCranPackageResponseArgs struct {
	// The package name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The repository name.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
}

func (RCranPackageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RCranPackageResponse)(nil)).Elem()
}

func (i RCranPackageResponseArgs) ToRCranPackageResponseOutput() RCranPackageResponseOutput {
	return i.ToRCranPackageResponseOutputWithContext(context.Background())
}

func (i RCranPackageResponseArgs) ToRCranPackageResponseOutputWithContext(ctx context.Context) RCranPackageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RCranPackageResponseOutput)
}

// RCranPackageResponseArrayInput is an input type that accepts RCranPackageResponseArray and RCranPackageResponseArrayOutput values.
// You can construct a concrete instance of `RCranPackageResponseArrayInput` via:
//
//          RCranPackageResponseArray{ RCranPackageResponseArgs{...} }
type RCranPackageResponseArrayInput interface {
	pulumi.Input

	ToRCranPackageResponseArrayOutput() RCranPackageResponseArrayOutput
	ToRCranPackageResponseArrayOutputWithContext(context.Context) RCranPackageResponseArrayOutput
}

type RCranPackageResponseArray []RCranPackageResponseInput

func (RCranPackageResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RCranPackageResponse)(nil)).Elem()
}

func (i RCranPackageResponseArray) ToRCranPackageResponseArrayOutput() RCranPackageResponseArrayOutput {
	return i.ToRCranPackageResponseArrayOutputWithContext(context.Background())
}

func (i RCranPackageResponseArray) ToRCranPackageResponseArrayOutputWithContext(ctx context.Context) RCranPackageResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RCranPackageResponseArrayOutput)
}

type RCranPackageResponseOutput struct{ *pulumi.OutputState }

func (RCranPackageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RCranPackageResponse)(nil)).Elem()
}

func (o RCranPackageResponseOutput) ToRCranPackageResponseOutput() RCranPackageResponseOutput {
	return o
}

func (o RCranPackageResponseOutput) ToRCranPackageResponseOutputWithContext(ctx context.Context) RCranPackageResponseOutput {
	return o
}

// The package name.
func (o RCranPackageResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RCranPackageResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The repository name.
func (o RCranPackageResponseOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RCranPackageResponse) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

type RCranPackageResponseArrayOutput struct{ *pulumi.OutputState }

func (RCranPackageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RCranPackageResponse)(nil)).Elem()
}

func (o RCranPackageResponseArrayOutput) ToRCranPackageResponseArrayOutput() RCranPackageResponseArrayOutput {
	return o
}

func (o RCranPackageResponseArrayOutput) ToRCranPackageResponseArrayOutputWithContext(ctx context.Context) RCranPackageResponseArrayOutput {
	return o
}

func (o RCranPackageResponseArrayOutput) Index(i pulumi.IntInput) RCranPackageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RCranPackageResponse {
		return vs[0].([]RCranPackageResponse)[vs[1].(int)]
	}).(RCranPackageResponseOutput)
}

type RGitHubPackage struct {
	// Personal access token to install from a private repo
	AuthToken *string `pulumi:"authToken"`
	// Repository address in the format username/repo[/subdir][@ref|#pull].
	Repository *string `pulumi:"repository"`
}

// RGitHubPackageInput is an input type that accepts RGitHubPackageArgs and RGitHubPackageOutput values.
// You can construct a concrete instance of `RGitHubPackageInput` via:
//
//          RGitHubPackageArgs{...}
type RGitHubPackageInput interface {
	pulumi.Input

	ToRGitHubPackageOutput() RGitHubPackageOutput
	ToRGitHubPackageOutputWithContext(context.Context) RGitHubPackageOutput
}

type RGitHubPackageArgs struct {
	// Personal access token to install from a private repo
	AuthToken pulumi.StringPtrInput `pulumi:"authToken"`
	// Repository address in the format username/repo[/subdir][@ref|#pull].
	Repository pulumi.StringPtrInput `pulumi:"repository"`
}

func (RGitHubPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RGitHubPackage)(nil)).Elem()
}

func (i RGitHubPackageArgs) ToRGitHubPackageOutput() RGitHubPackageOutput {
	return i.ToRGitHubPackageOutputWithContext(context.Background())
}

func (i RGitHubPackageArgs) ToRGitHubPackageOutputWithContext(ctx context.Context) RGitHubPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RGitHubPackageOutput)
}

// RGitHubPackageArrayInput is an input type that accepts RGitHubPackageArray and RGitHubPackageArrayOutput values.
// You can construct a concrete instance of `RGitHubPackageArrayInput` via:
//
//          RGitHubPackageArray{ RGitHubPackageArgs{...} }
type RGitHubPackageArrayInput interface {
	pulumi.Input

	ToRGitHubPackageArrayOutput() RGitHubPackageArrayOutput
	ToRGitHubPackageArrayOutputWithContext(context.Context) RGitHubPackageArrayOutput
}

type RGitHubPackageArray []RGitHubPackageInput

func (RGitHubPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RGitHubPackage)(nil)).Elem()
}

func (i RGitHubPackageArray) ToRGitHubPackageArrayOutput() RGitHubPackageArrayOutput {
	return i.ToRGitHubPackageArrayOutputWithContext(context.Background())
}

func (i RGitHubPackageArray) ToRGitHubPackageArrayOutputWithContext(ctx context.Context) RGitHubPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RGitHubPackageArrayOutput)
}

type RGitHubPackageOutput struct{ *pulumi.OutputState }

func (RGitHubPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RGitHubPackage)(nil)).Elem()
}

func (o RGitHubPackageOutput) ToRGitHubPackageOutput() RGitHubPackageOutput {
	return o
}

func (o RGitHubPackageOutput) ToRGitHubPackageOutputWithContext(ctx context.Context) RGitHubPackageOutput {
	return o
}

// Personal access token to install from a private repo
func (o RGitHubPackageOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RGitHubPackage) *string { return v.AuthToken }).(pulumi.StringPtrOutput)
}

// Repository address in the format username/repo[/subdir][@ref|#pull].
func (o RGitHubPackageOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RGitHubPackage) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

type RGitHubPackageArrayOutput struct{ *pulumi.OutputState }

func (RGitHubPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RGitHubPackage)(nil)).Elem()
}

func (o RGitHubPackageArrayOutput) ToRGitHubPackageArrayOutput() RGitHubPackageArrayOutput {
	return o
}

func (o RGitHubPackageArrayOutput) ToRGitHubPackageArrayOutputWithContext(ctx context.Context) RGitHubPackageArrayOutput {
	return o
}

func (o RGitHubPackageArrayOutput) Index(i pulumi.IntInput) RGitHubPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RGitHubPackage {
		return vs[0].([]RGitHubPackage)[vs[1].(int)]
	}).(RGitHubPackageOutput)
}

type RGitHubPackageResponseResponse struct {
	// Repository address in the format username/repo[/subdir][@ref|#pull].
	Repository *string `pulumi:"repository"`
}

// RGitHubPackageResponseResponseInput is an input type that accepts RGitHubPackageResponseResponseArgs and RGitHubPackageResponseResponseOutput values.
// You can construct a concrete instance of `RGitHubPackageResponseResponseInput` via:
//
//          RGitHubPackageResponseResponseArgs{...}
type RGitHubPackageResponseResponseInput interface {
	pulumi.Input

	ToRGitHubPackageResponseResponseOutput() RGitHubPackageResponseResponseOutput
	ToRGitHubPackageResponseResponseOutputWithContext(context.Context) RGitHubPackageResponseResponseOutput
}

type RGitHubPackageResponseResponseArgs struct {
	// Repository address in the format username/repo[/subdir][@ref|#pull].
	Repository pulumi.StringPtrInput `pulumi:"repository"`
}

func (RGitHubPackageResponseResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RGitHubPackageResponseResponse)(nil)).Elem()
}

func (i RGitHubPackageResponseResponseArgs) ToRGitHubPackageResponseResponseOutput() RGitHubPackageResponseResponseOutput {
	return i.ToRGitHubPackageResponseResponseOutputWithContext(context.Background())
}

func (i RGitHubPackageResponseResponseArgs) ToRGitHubPackageResponseResponseOutputWithContext(ctx context.Context) RGitHubPackageResponseResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RGitHubPackageResponseResponseOutput)
}

// RGitHubPackageResponseResponseArrayInput is an input type that accepts RGitHubPackageResponseResponseArray and RGitHubPackageResponseResponseArrayOutput values.
// You can construct a concrete instance of `RGitHubPackageResponseResponseArrayInput` via:
//
//          RGitHubPackageResponseResponseArray{ RGitHubPackageResponseResponseArgs{...} }
type RGitHubPackageResponseResponseArrayInput interface {
	pulumi.Input

	ToRGitHubPackageResponseResponseArrayOutput() RGitHubPackageResponseResponseArrayOutput
	ToRGitHubPackageResponseResponseArrayOutputWithContext(context.Context) RGitHubPackageResponseResponseArrayOutput
}

type RGitHubPackageResponseResponseArray []RGitHubPackageResponseResponseInput

func (RGitHubPackageResponseResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RGitHubPackageResponseResponse)(nil)).Elem()
}

func (i RGitHubPackageResponseResponseArray) ToRGitHubPackageResponseResponseArrayOutput() RGitHubPackageResponseResponseArrayOutput {
	return i.ToRGitHubPackageResponseResponseArrayOutputWithContext(context.Background())
}

func (i RGitHubPackageResponseResponseArray) ToRGitHubPackageResponseResponseArrayOutputWithContext(ctx context.Context) RGitHubPackageResponseResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RGitHubPackageResponseResponseArrayOutput)
}

type RGitHubPackageResponseResponseOutput struct{ *pulumi.OutputState }

func (RGitHubPackageResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RGitHubPackageResponseResponse)(nil)).Elem()
}

func (o RGitHubPackageResponseResponseOutput) ToRGitHubPackageResponseResponseOutput() RGitHubPackageResponseResponseOutput {
	return o
}

func (o RGitHubPackageResponseResponseOutput) ToRGitHubPackageResponseResponseOutputWithContext(ctx context.Context) RGitHubPackageResponseResponseOutput {
	return o
}

// Repository address in the format username/repo[/subdir][@ref|#pull].
func (o RGitHubPackageResponseResponseOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RGitHubPackageResponseResponse) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

type RGitHubPackageResponseResponseArrayOutput struct{ *pulumi.OutputState }

func (RGitHubPackageResponseResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RGitHubPackageResponseResponse)(nil)).Elem()
}

func (o RGitHubPackageResponseResponseArrayOutput) ToRGitHubPackageResponseResponseArrayOutput() RGitHubPackageResponseResponseArrayOutput {
	return o
}

func (o RGitHubPackageResponseResponseArrayOutput) ToRGitHubPackageResponseResponseArrayOutputWithContext(ctx context.Context) RGitHubPackageResponseResponseArrayOutput {
	return o
}

func (o RGitHubPackageResponseResponseArrayOutput) Index(i pulumi.IntInput) RGitHubPackageResponseResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RGitHubPackageResponseResponse {
		return vs[0].([]RGitHubPackageResponseResponse)[vs[1].(int)]
	}).(RGitHubPackageResponseResponseOutput)
}

type RegistryListCredentialsResultResponse struct {
	Location  string             `pulumi:"location"`
	Passwords []PasswordResponse `pulumi:"passwords"`
	Username  string             `pulumi:"username"`
}

// RegistryListCredentialsResultResponseInput is an input type that accepts RegistryListCredentialsResultResponseArgs and RegistryListCredentialsResultResponseOutput values.
// You can construct a concrete instance of `RegistryListCredentialsResultResponseInput` via:
//
//          RegistryListCredentialsResultResponseArgs{...}
type RegistryListCredentialsResultResponseInput interface {
	pulumi.Input

	ToRegistryListCredentialsResultResponseOutput() RegistryListCredentialsResultResponseOutput
	ToRegistryListCredentialsResultResponseOutputWithContext(context.Context) RegistryListCredentialsResultResponseOutput
}

type RegistryListCredentialsResultResponseArgs struct {
	Location  pulumi.StringInput         `pulumi:"location"`
	Passwords PasswordResponseArrayInput `pulumi:"passwords"`
	Username  pulumi.StringInput         `pulumi:"username"`
}

func (RegistryListCredentialsResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryListCredentialsResultResponse)(nil)).Elem()
}

func (i RegistryListCredentialsResultResponseArgs) ToRegistryListCredentialsResultResponseOutput() RegistryListCredentialsResultResponseOutput {
	return i.ToRegistryListCredentialsResultResponseOutputWithContext(context.Background())
}

func (i RegistryListCredentialsResultResponseArgs) ToRegistryListCredentialsResultResponseOutputWithContext(ctx context.Context) RegistryListCredentialsResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryListCredentialsResultResponseOutput)
}

type RegistryListCredentialsResultResponseOutput struct{ *pulumi.OutputState }

func (RegistryListCredentialsResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryListCredentialsResultResponse)(nil)).Elem()
}

func (o RegistryListCredentialsResultResponseOutput) ToRegistryListCredentialsResultResponseOutput() RegistryListCredentialsResultResponseOutput {
	return o
}

func (o RegistryListCredentialsResultResponseOutput) ToRegistryListCredentialsResultResponseOutputWithContext(ctx context.Context) RegistryListCredentialsResultResponseOutput {
	return o
}

func (o RegistryListCredentialsResultResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryListCredentialsResultResponse) string { return v.Location }).(pulumi.StringOutput)
}

func (o RegistryListCredentialsResultResponseOutput) Passwords() PasswordResponseArrayOutput {
	return o.ApplyT(func(v RegistryListCredentialsResultResponse) []PasswordResponse { return v.Passwords }).(PasswordResponseArrayOutput)
}

func (o RegistryListCredentialsResultResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryListCredentialsResultResponse) string { return v.Username }).(pulumi.StringOutput)
}

type ResourceId struct {
	// The ID of the resource
	Id string `pulumi:"id"`
}

// ResourceIdInput is an input type that accepts ResourceIdArgs and ResourceIdOutput values.
// You can construct a concrete instance of `ResourceIdInput` via:
//
//          ResourceIdArgs{...}
type ResourceIdInput interface {
	pulumi.Input

	ToResourceIdOutput() ResourceIdOutput
	ToResourceIdOutputWithContext(context.Context) ResourceIdOutput
}

type ResourceIdArgs struct {
	// The ID of the resource
	Id pulumi.StringInput `pulumi:"id"`
}

func (ResourceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceId)(nil)).Elem()
}

func (i ResourceIdArgs) ToResourceIdOutput() ResourceIdOutput {
	return i.ToResourceIdOutputWithContext(context.Background())
}

func (i ResourceIdArgs) ToResourceIdOutputWithContext(ctx context.Context) ResourceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdOutput)
}

func (i ResourceIdArgs) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return i.ToResourceIdPtrOutputWithContext(context.Background())
}

func (i ResourceIdArgs) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdOutput).ToResourceIdPtrOutputWithContext(ctx)
}

// ResourceIdPtrInput is an input type that accepts ResourceIdArgs, ResourceIdPtr and ResourceIdPtrOutput values.
// You can construct a concrete instance of `ResourceIdPtrInput` via:
//
//          ResourceIdArgs{...}
//
//  or:
//
//          nil
type ResourceIdPtrInput interface {
	pulumi.Input

	ToResourceIdPtrOutput() ResourceIdPtrOutput
	ToResourceIdPtrOutputWithContext(context.Context) ResourceIdPtrOutput
}

type resourceIdPtrType ResourceIdArgs

func ResourceIdPtr(v *ResourceIdArgs) ResourceIdPtrInput {
	return (*resourceIdPtrType)(v)
}

func (*resourceIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceId)(nil)).Elem()
}

func (i *resourceIdPtrType) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return i.ToResourceIdPtrOutputWithContext(context.Background())
}

func (i *resourceIdPtrType) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdPtrOutput)
}

type ResourceIdOutput struct{ *pulumi.OutputState }

func (ResourceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceId)(nil)).Elem()
}

func (o ResourceIdOutput) ToResourceIdOutput() ResourceIdOutput {
	return o
}

func (o ResourceIdOutput) ToResourceIdOutputWithContext(ctx context.Context) ResourceIdOutput {
	return o
}

func (o ResourceIdOutput) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return o.ToResourceIdPtrOutputWithContext(context.Background())
}

func (o ResourceIdOutput) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceId) *ResourceId {
		return &v
	}).(ResourceIdPtrOutput)
}

// The ID of the resource
func (o ResourceIdOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceId) string { return v.Id }).(pulumi.StringOutput)
}

type ResourceIdPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceId)(nil)).Elem()
}

func (o ResourceIdPtrOutput) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return o
}

func (o ResourceIdPtrOutput) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return o
}

func (o ResourceIdPtrOutput) Elem() ResourceIdOutput {
	return o.ApplyT(func(v *ResourceId) ResourceId {
		if v != nil {
			return *v
		}
		var ret ResourceId
		return ret
	}).(ResourceIdOutput)
}

// The ID of the resource
func (o ResourceIdPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceId) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type ResourceIdResponse struct {
	// The ID of the resource
	Id string `pulumi:"id"`
}

// ResourceIdResponseInput is an input type that accepts ResourceIdResponseArgs and ResourceIdResponseOutput values.
// You can construct a concrete instance of `ResourceIdResponseInput` via:
//
//          ResourceIdResponseArgs{...}
type ResourceIdResponseInput interface {
	pulumi.Input

	ToResourceIdResponseOutput() ResourceIdResponseOutput
	ToResourceIdResponseOutputWithContext(context.Context) ResourceIdResponseOutput
}

type ResourceIdResponseArgs struct {
	// The ID of the resource
	Id pulumi.StringInput `pulumi:"id"`
}

func (ResourceIdResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdResponse)(nil)).Elem()
}

func (i ResourceIdResponseArgs) ToResourceIdResponseOutput() ResourceIdResponseOutput {
	return i.ToResourceIdResponseOutputWithContext(context.Background())
}

func (i ResourceIdResponseArgs) ToResourceIdResponseOutputWithContext(ctx context.Context) ResourceIdResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdResponseOutput)
}

func (i ResourceIdResponseArgs) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return i.ToResourceIdResponsePtrOutputWithContext(context.Background())
}

func (i ResourceIdResponseArgs) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdResponseOutput).ToResourceIdResponsePtrOutputWithContext(ctx)
}

// ResourceIdResponsePtrInput is an input type that accepts ResourceIdResponseArgs, ResourceIdResponsePtr and ResourceIdResponsePtrOutput values.
// You can construct a concrete instance of `ResourceIdResponsePtrInput` via:
//
//          ResourceIdResponseArgs{...}
//
//  or:
//
//          nil
type ResourceIdResponsePtrInput interface {
	pulumi.Input

	ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput
	ToResourceIdResponsePtrOutputWithContext(context.Context) ResourceIdResponsePtrOutput
}

type resourceIdResponsePtrType ResourceIdResponseArgs

func ResourceIdResponsePtr(v *ResourceIdResponseArgs) ResourceIdResponsePtrInput {
	return (*resourceIdResponsePtrType)(v)
}

func (*resourceIdResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdResponse)(nil)).Elem()
}

func (i *resourceIdResponsePtrType) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return i.ToResourceIdResponsePtrOutputWithContext(context.Background())
}

func (i *resourceIdResponsePtrType) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdResponsePtrOutput)
}

type ResourceIdResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdResponse)(nil)).Elem()
}

func (o ResourceIdResponseOutput) ToResourceIdResponseOutput() ResourceIdResponseOutput {
	return o
}

func (o ResourceIdResponseOutput) ToResourceIdResponseOutputWithContext(ctx context.Context) ResourceIdResponseOutput {
	return o
}

func (o ResourceIdResponseOutput) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return o.ToResourceIdResponsePtrOutputWithContext(context.Background())
}

func (o ResourceIdResponseOutput) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdResponse) *ResourceIdResponse {
		return &v
	}).(ResourceIdResponsePtrOutput)
}

// The ID of the resource
func (o ResourceIdResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdResponse) string { return v.Id }).(pulumi.StringOutput)
}

type ResourceIdResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdResponse)(nil)).Elem()
}

func (o ResourceIdResponsePtrOutput) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return o
}

func (o ResourceIdResponsePtrOutput) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return o
}

func (o ResourceIdResponsePtrOutput) Elem() ResourceIdResponseOutput {
	return o.ApplyT(func(v *ResourceIdResponse) ResourceIdResponse {
		if v != nil {
			return *v
		}
		var ret ResourceIdResponse
		return ret
	}).(ResourceIdResponseOutput)
}

// The ID of the resource
func (o ResourceIdResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type ResourceIdentity struct {
	// Defines values for a ResourceIdentity's type.
	Type *string `pulumi:"type"`
	// Dictionary of the user assigned identities, key is ARM resource ID of the UAI.
	UserAssignedIdentities map[string]UserAssignedIdentityMeta `pulumi:"userAssignedIdentities"`
}

// ResourceIdentityInput is an input type that accepts ResourceIdentityArgs and ResourceIdentityOutput values.
// You can construct a concrete instance of `ResourceIdentityInput` via:
//
//          ResourceIdentityArgs{...}
type ResourceIdentityInput interface {
	pulumi.Input

	ToResourceIdentityOutput() ResourceIdentityOutput
	ToResourceIdentityOutputWithContext(context.Context) ResourceIdentityOutput
}

type ResourceIdentityArgs struct {
	// Defines values for a ResourceIdentity's type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Dictionary of the user assigned identities, key is ARM resource ID of the UAI.
	UserAssignedIdentities UserAssignedIdentityMetaMapInput `pulumi:"userAssignedIdentities"`
}

func (ResourceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (i ResourceIdentityArgs) ToResourceIdentityOutput() ResourceIdentityOutput {
	return i.ToResourceIdentityOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput)
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput).ToResourceIdentityPtrOutputWithContext(ctx)
}

// ResourceIdentityPtrInput is an input type that accepts ResourceIdentityArgs, ResourceIdentityPtr and ResourceIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceIdentityPtrInput` via:
//
//          ResourceIdentityArgs{...}
//
//  or:
//
//          nil
type ResourceIdentityPtrInput interface {
	pulumi.Input

	ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput
	ToResourceIdentityPtrOutputWithContext(context.Context) ResourceIdentityPtrOutput
}

type resourceIdentityPtrType ResourceIdentityArgs

func ResourceIdentityPtr(v *ResourceIdentityArgs) ResourceIdentityPtrInput {
	return (*resourceIdentityPtrType)(v)
}

func (*resourceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityPtrOutput)
}

type ResourceIdentityOutput struct{ *pulumi.OutputState }

func (ResourceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityOutput) ToResourceIdentityOutput() ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentity) *ResourceIdentity {
		return &v
	}).(ResourceIdentityPtrOutput)
}

// Defines values for a ResourceIdentity's type.
func (o ResourceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Dictionary of the user assigned identities, key is ARM resource ID of the UAI.
func (o ResourceIdentityOutput) UserAssignedIdentities() UserAssignedIdentityMetaMapOutput {
	return o.ApplyT(func(v ResourceIdentity) map[string]UserAssignedIdentityMeta { return v.UserAssignedIdentities }).(UserAssignedIdentityMetaMapOutput)
}

type ResourceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) Elem() ResourceIdentityOutput {
	return o.ApplyT(func(v *ResourceIdentity) ResourceIdentity {
		if v != nil {
			return *v
		}
		var ret ResourceIdentity
		return ret
	}).(ResourceIdentityOutput)
}

// Defines values for a ResourceIdentity's type.
func (o ResourceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Dictionary of the user assigned identities, key is ARM resource ID of the UAI.
func (o ResourceIdentityPtrOutput) UserAssignedIdentities() UserAssignedIdentityMetaMapOutput {
	return o.ApplyT(func(v *ResourceIdentity) map[string]UserAssignedIdentityMeta {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityMetaMapOutput)
}

type ResourceIdentityResponse struct {
	// Client ID that is used when authenticating.
	PrincipalId string `pulumi:"principalId"`
	// AAD Tenant where this identity lives.
	TenantId string `pulumi:"tenantId"`
	// Defines values for a ResourceIdentity's type.
	Type *string `pulumi:"type"`
	// Dictionary of the user assigned identities, key is ARM resource ID of the UAI.
	UserAssignedIdentities map[string]UserAssignedIdentityMetaResponse `pulumi:"userAssignedIdentities"`
}

// ResourceIdentityResponseInput is an input type that accepts ResourceIdentityResponseArgs and ResourceIdentityResponseOutput values.
// You can construct a concrete instance of `ResourceIdentityResponseInput` via:
//
//          ResourceIdentityResponseArgs{...}
type ResourceIdentityResponseInput interface {
	pulumi.Input

	ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput
	ToResourceIdentityResponseOutputWithContext(context.Context) ResourceIdentityResponseOutput
}

type ResourceIdentityResponseArgs struct {
	// Client ID that is used when authenticating.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// AAD Tenant where this identity lives.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Defines values for a ResourceIdentity's type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Dictionary of the user assigned identities, key is ARM resource ID of the UAI.
	UserAssignedIdentities UserAssignedIdentityMetaResponseMapInput `pulumi:"userAssignedIdentities"`
}

func (ResourceIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return i.ToResourceIdentityResponseOutputWithContext(context.Background())
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponseOutput)
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return i.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponseOutput).ToResourceIdentityResponsePtrOutputWithContext(ctx)
}

// ResourceIdentityResponsePtrInput is an input type that accepts ResourceIdentityResponseArgs, ResourceIdentityResponsePtr and ResourceIdentityResponsePtrOutput values.
// You can construct a concrete instance of `ResourceIdentityResponsePtrInput` via:
//
//          ResourceIdentityResponseArgs{...}
//
//  or:
//
//          nil
type ResourceIdentityResponsePtrInput interface {
	pulumi.Input

	ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput
	ToResourceIdentityResponsePtrOutputWithContext(context.Context) ResourceIdentityResponsePtrOutput
}

type resourceIdentityResponsePtrType ResourceIdentityResponseArgs

func ResourceIdentityResponsePtr(v *ResourceIdentityResponseArgs) ResourceIdentityResponsePtrInput {
	return (*resourceIdentityResponsePtrType)(v)
}

func (*resourceIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (i *resourceIdentityResponsePtrType) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return i.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *resourceIdentityResponsePtrType) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponsePtrOutput)
}

type ResourceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentityResponse) *ResourceIdentityResponse {
		return &v
	}).(ResourceIdentityResponsePtrOutput)
}

// Client ID that is used when authenticating.
func (o ResourceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// AAD Tenant where this identity lives.
func (o ResourceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Defines values for a ResourceIdentity's type.
func (o ResourceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Dictionary of the user assigned identities, key is ARM resource ID of the UAI.
func (o ResourceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityMetaResponseMapOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) map[string]UserAssignedIdentityMetaResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityMetaResponseMapOutput)
}

type ResourceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) Elem() ResourceIdentityResponseOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) ResourceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityResponse
		return ret
	}).(ResourceIdentityResponseOutput)
}

// Client ID that is used when authenticating.
func (o ResourceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// AAD Tenant where this identity lives.
func (o ResourceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Defines values for a ResourceIdentity's type.
func (o ResourceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Dictionary of the user assigned identities, key is ARM resource ID of the UAI.
func (o ResourceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityMetaResponseMapOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) map[string]UserAssignedIdentityMetaResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityMetaResponseMapOutput)
}

type Route struct {
	// The path for the route.
	Path string `pulumi:"path"`
	// The port for the route.
	Port int `pulumi:"port"`
}

// RouteInput is an input type that accepts RouteArgs and RouteOutput values.
// You can construct a concrete instance of `RouteInput` via:
//
//          RouteArgs{...}
type RouteInput interface {
	pulumi.Input

	ToRouteOutput() RouteOutput
	ToRouteOutputWithContext(context.Context) RouteOutput
}

type RouteArgs struct {
	// The path for the route.
	Path pulumi.StringInput `pulumi:"path"`
	// The port for the route.
	Port pulumi.IntInput `pulumi:"port"`
}

func (RouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Route)(nil)).Elem()
}

func (i RouteArgs) ToRouteOutput() RouteOutput {
	return i.ToRouteOutputWithContext(context.Background())
}

func (i RouteArgs) ToRouteOutputWithContext(ctx context.Context) RouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteOutput)
}

func (i RouteArgs) ToRoutePtrOutput() RoutePtrOutput {
	return i.ToRoutePtrOutputWithContext(context.Background())
}

func (i RouteArgs) ToRoutePtrOutputWithContext(ctx context.Context) RoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteOutput).ToRoutePtrOutputWithContext(ctx)
}

// RoutePtrInput is an input type that accepts RouteArgs, RoutePtr and RoutePtrOutput values.
// You can construct a concrete instance of `RoutePtrInput` via:
//
//          RouteArgs{...}
//
//  or:
//
//          nil
type RoutePtrInput interface {
	pulumi.Input

	ToRoutePtrOutput() RoutePtrOutput
	ToRoutePtrOutputWithContext(context.Context) RoutePtrOutput
}

type routePtrType RouteArgs

func RoutePtr(v *RouteArgs) RoutePtrInput {
	return (*routePtrType)(v)
}

func (*routePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Route)(nil)).Elem()
}

func (i *routePtrType) ToRoutePtrOutput() RoutePtrOutput {
	return i.ToRoutePtrOutputWithContext(context.Background())
}

func (i *routePtrType) ToRoutePtrOutputWithContext(ctx context.Context) RoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePtrOutput)
}

type RouteOutput struct{ *pulumi.OutputState }

func (RouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Route)(nil)).Elem()
}

func (o RouteOutput) ToRouteOutput() RouteOutput {
	return o
}

func (o RouteOutput) ToRouteOutputWithContext(ctx context.Context) RouteOutput {
	return o
}

func (o RouteOutput) ToRoutePtrOutput() RoutePtrOutput {
	return o.ToRoutePtrOutputWithContext(context.Background())
}

func (o RouteOutput) ToRoutePtrOutputWithContext(ctx context.Context) RoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Route) *Route {
		return &v
	}).(RoutePtrOutput)
}

// The path for the route.
func (o RouteOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v Route) string { return v.Path }).(pulumi.StringOutput)
}

// The port for the route.
func (o RouteOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v Route) int { return v.Port }).(pulumi.IntOutput)
}

type RoutePtrOutput struct{ *pulumi.OutputState }

func (RoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Route)(nil)).Elem()
}

func (o RoutePtrOutput) ToRoutePtrOutput() RoutePtrOutput {
	return o
}

func (o RoutePtrOutput) ToRoutePtrOutputWithContext(ctx context.Context) RoutePtrOutput {
	return o
}

func (o RoutePtrOutput) Elem() RouteOutput {
	return o.ApplyT(func(v *Route) Route {
		if v != nil {
			return *v
		}
		var ret Route
		return ret
	}).(RouteOutput)
}

// The path for the route.
func (o RoutePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The port for the route.
func (o RoutePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Route) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type RouteResponse struct {
	// The path for the route.
	Path string `pulumi:"path"`
	// The port for the route.
	Port int `pulumi:"port"`
}

// RouteResponseInput is an input type that accepts RouteResponseArgs and RouteResponseOutput values.
// You can construct a concrete instance of `RouteResponseInput` via:
//
//          RouteResponseArgs{...}
type RouteResponseInput interface {
	pulumi.Input

	ToRouteResponseOutput() RouteResponseOutput
	ToRouteResponseOutputWithContext(context.Context) RouteResponseOutput
}

type RouteResponseArgs struct {
	// The path for the route.
	Path pulumi.StringInput `pulumi:"path"`
	// The port for the route.
	Port pulumi.IntInput `pulumi:"port"`
}

func (RouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil)).Elem()
}

func (i RouteResponseArgs) ToRouteResponseOutput() RouteResponseOutput {
	return i.ToRouteResponseOutputWithContext(context.Background())
}

func (i RouteResponseArgs) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteResponseOutput)
}

func (i RouteResponseArgs) ToRouteResponsePtrOutput() RouteResponsePtrOutput {
	return i.ToRouteResponsePtrOutputWithContext(context.Background())
}

func (i RouteResponseArgs) ToRouteResponsePtrOutputWithContext(ctx context.Context) RouteResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteResponseOutput).ToRouteResponsePtrOutputWithContext(ctx)
}

// RouteResponsePtrInput is an input type that accepts RouteResponseArgs, RouteResponsePtr and RouteResponsePtrOutput values.
// You can construct a concrete instance of `RouteResponsePtrInput` via:
//
//          RouteResponseArgs{...}
//
//  or:
//
//          nil
type RouteResponsePtrInput interface {
	pulumi.Input

	ToRouteResponsePtrOutput() RouteResponsePtrOutput
	ToRouteResponsePtrOutputWithContext(context.Context) RouteResponsePtrOutput
}

type routeResponsePtrType RouteResponseArgs

func RouteResponsePtr(v *RouteResponseArgs) RouteResponsePtrInput {
	return (*routeResponsePtrType)(v)
}

func (*routeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteResponse)(nil)).Elem()
}

func (i *routeResponsePtrType) ToRouteResponsePtrOutput() RouteResponsePtrOutput {
	return i.ToRouteResponsePtrOutputWithContext(context.Background())
}

func (i *routeResponsePtrType) ToRouteResponsePtrOutputWithContext(ctx context.Context) RouteResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteResponsePtrOutput)
}

type RouteResponseOutput struct{ *pulumi.OutputState }

func (RouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil)).Elem()
}

func (o RouteResponseOutput) ToRouteResponseOutput() RouteResponseOutput {
	return o
}

func (o RouteResponseOutput) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return o
}

func (o RouteResponseOutput) ToRouteResponsePtrOutput() RouteResponsePtrOutput {
	return o.ToRouteResponsePtrOutputWithContext(context.Background())
}

func (o RouteResponseOutput) ToRouteResponsePtrOutputWithContext(ctx context.Context) RouteResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteResponse) *RouteResponse {
		return &v
	}).(RouteResponsePtrOutput)
}

// The path for the route.
func (o RouteResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.Path }).(pulumi.StringOutput)
}

// The port for the route.
func (o RouteResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v RouteResponse) int { return v.Port }).(pulumi.IntOutput)
}

type RouteResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteResponse)(nil)).Elem()
}

func (o RouteResponsePtrOutput) ToRouteResponsePtrOutput() RouteResponsePtrOutput {
	return o
}

func (o RouteResponsePtrOutput) ToRouteResponsePtrOutputWithContext(ctx context.Context) RouteResponsePtrOutput {
	return o
}

func (o RouteResponsePtrOutput) Elem() RouteResponseOutput {
	return o.ApplyT(func(v *RouteResponse) RouteResponse {
		if v != nil {
			return *v
		}
		var ret RouteResponse
		return ret
	}).(RouteResponseOutput)
}

// The path for the route.
func (o RouteResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The port for the route.
func (o RouteResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type ScaleSettings struct {
	// Max number of nodes to use
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Min number of nodes to use
	MinNodeCount *int `pulumi:"minNodeCount"`
	// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
	NodeIdleTimeBeforeScaleDown *string `pulumi:"nodeIdleTimeBeforeScaleDown"`
}

// ScaleSettingsInput is an input type that accepts ScaleSettingsArgs and ScaleSettingsOutput values.
// You can construct a concrete instance of `ScaleSettingsInput` via:
//
//          ScaleSettingsArgs{...}
type ScaleSettingsInput interface {
	pulumi.Input

	ToScaleSettingsOutput() ScaleSettingsOutput
	ToScaleSettingsOutputWithContext(context.Context) ScaleSettingsOutput
}

type ScaleSettingsArgs struct {
	// Max number of nodes to use
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// Min number of nodes to use
	MinNodeCount pulumi.IntPtrInput `pulumi:"minNodeCount"`
	// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
	NodeIdleTimeBeforeScaleDown pulumi.StringPtrInput `pulumi:"nodeIdleTimeBeforeScaleDown"`
}

func (ScaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettings)(nil)).Elem()
}

func (i ScaleSettingsArgs) ToScaleSettingsOutput() ScaleSettingsOutput {
	return i.ToScaleSettingsOutputWithContext(context.Background())
}

func (i ScaleSettingsArgs) ToScaleSettingsOutputWithContext(ctx context.Context) ScaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsOutput)
}

func (i ScaleSettingsArgs) ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput {
	return i.ToScaleSettingsPtrOutputWithContext(context.Background())
}

func (i ScaleSettingsArgs) ToScaleSettingsPtrOutputWithContext(ctx context.Context) ScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsOutput).ToScaleSettingsPtrOutputWithContext(ctx)
}

// ScaleSettingsPtrInput is an input type that accepts ScaleSettingsArgs, ScaleSettingsPtr and ScaleSettingsPtrOutput values.
// You can construct a concrete instance of `ScaleSettingsPtrInput` via:
//
//          ScaleSettingsArgs{...}
//
//  or:
//
//          nil
type ScaleSettingsPtrInput interface {
	pulumi.Input

	ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput
	ToScaleSettingsPtrOutputWithContext(context.Context) ScaleSettingsPtrOutput
}

type scaleSettingsPtrType ScaleSettingsArgs

func ScaleSettingsPtr(v *ScaleSettingsArgs) ScaleSettingsPtrInput {
	return (*scaleSettingsPtrType)(v)
}

func (*scaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettings)(nil)).Elem()
}

func (i *scaleSettingsPtrType) ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput {
	return i.ToScaleSettingsPtrOutputWithContext(context.Background())
}

func (i *scaleSettingsPtrType) ToScaleSettingsPtrOutputWithContext(ctx context.Context) ScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsPtrOutput)
}

type ScaleSettingsOutput struct{ *pulumi.OutputState }

func (ScaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettings)(nil)).Elem()
}

func (o ScaleSettingsOutput) ToScaleSettingsOutput() ScaleSettingsOutput {
	return o
}

func (o ScaleSettingsOutput) ToScaleSettingsOutputWithContext(ctx context.Context) ScaleSettingsOutput {
	return o
}

func (o ScaleSettingsOutput) ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput {
	return o.ToScaleSettingsPtrOutputWithContext(context.Background())
}

func (o ScaleSettingsOutput) ToScaleSettingsPtrOutputWithContext(ctx context.Context) ScaleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScaleSettings) *ScaleSettings {
		return &v
	}).(ScaleSettingsPtrOutput)
}

// Max number of nodes to use
func (o ScaleSettingsOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ScaleSettings) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// Min number of nodes to use
func (o ScaleSettingsOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleSettings) *int { return v.MinNodeCount }).(pulumi.IntPtrOutput)
}

// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
func (o ScaleSettingsOutput) NodeIdleTimeBeforeScaleDown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSettings) *string { return v.NodeIdleTimeBeforeScaleDown }).(pulumi.StringPtrOutput)
}

type ScaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (ScaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettings)(nil)).Elem()
}

func (o ScaleSettingsPtrOutput) ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput {
	return o
}

func (o ScaleSettingsPtrOutput) ToScaleSettingsPtrOutputWithContext(ctx context.Context) ScaleSettingsPtrOutput {
	return o
}

func (o ScaleSettingsPtrOutput) Elem() ScaleSettingsOutput {
	return o.ApplyT(func(v *ScaleSettings) ScaleSettings {
		if v != nil {
			return *v
		}
		var ret ScaleSettings
		return ret
	}).(ScaleSettingsOutput)
}

// Max number of nodes to use
func (o ScaleSettingsPtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSettings) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// Min number of nodes to use
func (o ScaleSettingsPtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
func (o ScaleSettingsPtrOutput) NodeIdleTimeBeforeScaleDown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSettings) *string {
		if v == nil {
			return nil
		}
		return v.NodeIdleTimeBeforeScaleDown
	}).(pulumi.StringPtrOutput)
}

type ScaleSettingsResponse struct {
	// Max number of nodes to use
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Min number of nodes to use
	MinNodeCount *int `pulumi:"minNodeCount"`
	// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
	NodeIdleTimeBeforeScaleDown *string `pulumi:"nodeIdleTimeBeforeScaleDown"`
}

// ScaleSettingsResponseInput is an input type that accepts ScaleSettingsResponseArgs and ScaleSettingsResponseOutput values.
// You can construct a concrete instance of `ScaleSettingsResponseInput` via:
//
//          ScaleSettingsResponseArgs{...}
type ScaleSettingsResponseInput interface {
	pulumi.Input

	ToScaleSettingsResponseOutput() ScaleSettingsResponseOutput
	ToScaleSettingsResponseOutputWithContext(context.Context) ScaleSettingsResponseOutput
}

type ScaleSettingsResponseArgs struct {
	// Max number of nodes to use
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// Min number of nodes to use
	MinNodeCount pulumi.IntPtrInput `pulumi:"minNodeCount"`
	// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
	NodeIdleTimeBeforeScaleDown pulumi.StringPtrInput `pulumi:"nodeIdleTimeBeforeScaleDown"`
}

func (ScaleSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettingsResponse)(nil)).Elem()
}

func (i ScaleSettingsResponseArgs) ToScaleSettingsResponseOutput() ScaleSettingsResponseOutput {
	return i.ToScaleSettingsResponseOutputWithContext(context.Background())
}

func (i ScaleSettingsResponseArgs) ToScaleSettingsResponseOutputWithContext(ctx context.Context) ScaleSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsResponseOutput)
}

func (i ScaleSettingsResponseArgs) ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput {
	return i.ToScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ScaleSettingsResponseArgs) ToScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsResponseOutput).ToScaleSettingsResponsePtrOutputWithContext(ctx)
}

// ScaleSettingsResponsePtrInput is an input type that accepts ScaleSettingsResponseArgs, ScaleSettingsResponsePtr and ScaleSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ScaleSettingsResponsePtrInput` via:
//
//          ScaleSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ScaleSettingsResponsePtrInput interface {
	pulumi.Input

	ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput
	ToScaleSettingsResponsePtrOutputWithContext(context.Context) ScaleSettingsResponsePtrOutput
}

type scaleSettingsResponsePtrType ScaleSettingsResponseArgs

func ScaleSettingsResponsePtr(v *ScaleSettingsResponseArgs) ScaleSettingsResponsePtrInput {
	return (*scaleSettingsResponsePtrType)(v)
}

func (*scaleSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettingsResponse)(nil)).Elem()
}

func (i *scaleSettingsResponsePtrType) ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput {
	return i.ToScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *scaleSettingsResponsePtrType) ToScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsResponsePtrOutput)
}

type ScaleSettingsResponseOutput struct{ *pulumi.OutputState }

func (ScaleSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettingsResponse)(nil)).Elem()
}

func (o ScaleSettingsResponseOutput) ToScaleSettingsResponseOutput() ScaleSettingsResponseOutput {
	return o
}

func (o ScaleSettingsResponseOutput) ToScaleSettingsResponseOutputWithContext(ctx context.Context) ScaleSettingsResponseOutput {
	return o
}

func (o ScaleSettingsResponseOutput) ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput {
	return o.ToScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ScaleSettingsResponseOutput) ToScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScaleSettingsResponse) *ScaleSettingsResponse {
		return &v
	}).(ScaleSettingsResponsePtrOutput)
}

// Max number of nodes to use
func (o ScaleSettingsResponseOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ScaleSettingsResponse) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// Min number of nodes to use
func (o ScaleSettingsResponseOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleSettingsResponse) *int { return v.MinNodeCount }).(pulumi.IntPtrOutput)
}

// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
func (o ScaleSettingsResponseOutput) NodeIdleTimeBeforeScaleDown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSettingsResponse) *string { return v.NodeIdleTimeBeforeScaleDown }).(pulumi.StringPtrOutput)
}

type ScaleSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ScaleSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettingsResponse)(nil)).Elem()
}

func (o ScaleSettingsResponsePtrOutput) ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput {
	return o
}

func (o ScaleSettingsResponsePtrOutput) ToScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsResponsePtrOutput {
	return o
}

func (o ScaleSettingsResponsePtrOutput) Elem() ScaleSettingsResponseOutput {
	return o.ApplyT(func(v *ScaleSettingsResponse) ScaleSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ScaleSettingsResponse
		return ret
	}).(ScaleSettingsResponseOutput)
}

// Max number of nodes to use
func (o ScaleSettingsResponsePtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// Min number of nodes to use
func (o ScaleSettingsResponsePtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
func (o ScaleSettingsResponsePtrOutput) NodeIdleTimeBeforeScaleDown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.NodeIdleTimeBeforeScaleDown
	}).(pulumi.StringPtrOutput)
}

type ScriptReference struct {
	// Optional command line arguments passed to the script to run.
	ScriptArguments *string `pulumi:"scriptArguments"`
	// The location of scripts in the mounted volume.
	ScriptData *string `pulumi:"scriptData"`
	// The storage source of the script: inline, workspace.
	ScriptSource *string `pulumi:"scriptSource"`
	// Optional time period passed to timeout command.
	Timeout *string `pulumi:"timeout"`
}

// ScriptReferenceInput is an input type that accepts ScriptReferenceArgs and ScriptReferenceOutput values.
// You can construct a concrete instance of `ScriptReferenceInput` via:
//
//          ScriptReferenceArgs{...}
type ScriptReferenceInput interface {
	pulumi.Input

	ToScriptReferenceOutput() ScriptReferenceOutput
	ToScriptReferenceOutputWithContext(context.Context) ScriptReferenceOutput
}

type ScriptReferenceArgs struct {
	// Optional command line arguments passed to the script to run.
	ScriptArguments pulumi.StringPtrInput `pulumi:"scriptArguments"`
	// The location of scripts in the mounted volume.
	ScriptData pulumi.StringPtrInput `pulumi:"scriptData"`
	// The storage source of the script: inline, workspace.
	ScriptSource pulumi.StringPtrInput `pulumi:"scriptSource"`
	// Optional time period passed to timeout command.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (ScriptReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptReference)(nil)).Elem()
}

func (i ScriptReferenceArgs) ToScriptReferenceOutput() ScriptReferenceOutput {
	return i.ToScriptReferenceOutputWithContext(context.Background())
}

func (i ScriptReferenceArgs) ToScriptReferenceOutputWithContext(ctx context.Context) ScriptReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptReferenceOutput)
}

func (i ScriptReferenceArgs) ToScriptReferencePtrOutput() ScriptReferencePtrOutput {
	return i.ToScriptReferencePtrOutputWithContext(context.Background())
}

func (i ScriptReferenceArgs) ToScriptReferencePtrOutputWithContext(ctx context.Context) ScriptReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptReferenceOutput).ToScriptReferencePtrOutputWithContext(ctx)
}

// ScriptReferencePtrInput is an input type that accepts ScriptReferenceArgs, ScriptReferencePtr and ScriptReferencePtrOutput values.
// You can construct a concrete instance of `ScriptReferencePtrInput` via:
//
//          ScriptReferenceArgs{...}
//
//  or:
//
//          nil
type ScriptReferencePtrInput interface {
	pulumi.Input

	ToScriptReferencePtrOutput() ScriptReferencePtrOutput
	ToScriptReferencePtrOutputWithContext(context.Context) ScriptReferencePtrOutput
}

type scriptReferencePtrType ScriptReferenceArgs

func ScriptReferencePtr(v *ScriptReferenceArgs) ScriptReferencePtrInput {
	return (*scriptReferencePtrType)(v)
}

func (*scriptReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptReference)(nil)).Elem()
}

func (i *scriptReferencePtrType) ToScriptReferencePtrOutput() ScriptReferencePtrOutput {
	return i.ToScriptReferencePtrOutputWithContext(context.Background())
}

func (i *scriptReferencePtrType) ToScriptReferencePtrOutputWithContext(ctx context.Context) ScriptReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptReferencePtrOutput)
}

type ScriptReferenceOutput struct{ *pulumi.OutputState }

func (ScriptReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptReference)(nil)).Elem()
}

func (o ScriptReferenceOutput) ToScriptReferenceOutput() ScriptReferenceOutput {
	return o
}

func (o ScriptReferenceOutput) ToScriptReferenceOutputWithContext(ctx context.Context) ScriptReferenceOutput {
	return o
}

func (o ScriptReferenceOutput) ToScriptReferencePtrOutput() ScriptReferencePtrOutput {
	return o.ToScriptReferencePtrOutputWithContext(context.Background())
}

func (o ScriptReferenceOutput) ToScriptReferencePtrOutputWithContext(ctx context.Context) ScriptReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScriptReference) *ScriptReference {
		return &v
	}).(ScriptReferencePtrOutput)
}

// Optional command line arguments passed to the script to run.
func (o ScriptReferenceOutput) ScriptArguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptReference) *string { return v.ScriptArguments }).(pulumi.StringPtrOutput)
}

// The location of scripts in the mounted volume.
func (o ScriptReferenceOutput) ScriptData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptReference) *string { return v.ScriptData }).(pulumi.StringPtrOutput)
}

// The storage source of the script: inline, workspace.
func (o ScriptReferenceOutput) ScriptSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptReference) *string { return v.ScriptSource }).(pulumi.StringPtrOutput)
}

// Optional time period passed to timeout command.
func (o ScriptReferenceOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptReference) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ScriptReferencePtrOutput struct{ *pulumi.OutputState }

func (ScriptReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptReference)(nil)).Elem()
}

func (o ScriptReferencePtrOutput) ToScriptReferencePtrOutput() ScriptReferencePtrOutput {
	return o
}

func (o ScriptReferencePtrOutput) ToScriptReferencePtrOutputWithContext(ctx context.Context) ScriptReferencePtrOutput {
	return o
}

func (o ScriptReferencePtrOutput) Elem() ScriptReferenceOutput {
	return o.ApplyT(func(v *ScriptReference) ScriptReference {
		if v != nil {
			return *v
		}
		var ret ScriptReference
		return ret
	}).(ScriptReferenceOutput)
}

// Optional command line arguments passed to the script to run.
func (o ScriptReferencePtrOutput) ScriptArguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptReference) *string {
		if v == nil {
			return nil
		}
		return v.ScriptArguments
	}).(pulumi.StringPtrOutput)
}

// The location of scripts in the mounted volume.
func (o ScriptReferencePtrOutput) ScriptData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptReference) *string {
		if v == nil {
			return nil
		}
		return v.ScriptData
	}).(pulumi.StringPtrOutput)
}

// The storage source of the script: inline, workspace.
func (o ScriptReferencePtrOutput) ScriptSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptReference) *string {
		if v == nil {
			return nil
		}
		return v.ScriptSource
	}).(pulumi.StringPtrOutput)
}

// Optional time period passed to timeout command.
func (o ScriptReferencePtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptReference) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

type ScriptReferenceResponse struct {
	// Optional command line arguments passed to the script to run.
	ScriptArguments *string `pulumi:"scriptArguments"`
	// The location of scripts in the mounted volume.
	ScriptData *string `pulumi:"scriptData"`
	// The storage source of the script: inline, workspace.
	ScriptSource *string `pulumi:"scriptSource"`
	// Optional time period passed to timeout command.
	Timeout *string `pulumi:"timeout"`
}

// ScriptReferenceResponseInput is an input type that accepts ScriptReferenceResponseArgs and ScriptReferenceResponseOutput values.
// You can construct a concrete instance of `ScriptReferenceResponseInput` via:
//
//          ScriptReferenceResponseArgs{...}
type ScriptReferenceResponseInput interface {
	pulumi.Input

	ToScriptReferenceResponseOutput() ScriptReferenceResponseOutput
	ToScriptReferenceResponseOutputWithContext(context.Context) ScriptReferenceResponseOutput
}

type ScriptReferenceResponseArgs struct {
	// Optional command line arguments passed to the script to run.
	ScriptArguments pulumi.StringPtrInput `pulumi:"scriptArguments"`
	// The location of scripts in the mounted volume.
	ScriptData pulumi.StringPtrInput `pulumi:"scriptData"`
	// The storage source of the script: inline, workspace.
	ScriptSource pulumi.StringPtrInput `pulumi:"scriptSource"`
	// Optional time period passed to timeout command.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (ScriptReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptReferenceResponse)(nil)).Elem()
}

func (i ScriptReferenceResponseArgs) ToScriptReferenceResponseOutput() ScriptReferenceResponseOutput {
	return i.ToScriptReferenceResponseOutputWithContext(context.Background())
}

func (i ScriptReferenceResponseArgs) ToScriptReferenceResponseOutputWithContext(ctx context.Context) ScriptReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptReferenceResponseOutput)
}

func (i ScriptReferenceResponseArgs) ToScriptReferenceResponsePtrOutput() ScriptReferenceResponsePtrOutput {
	return i.ToScriptReferenceResponsePtrOutputWithContext(context.Background())
}

func (i ScriptReferenceResponseArgs) ToScriptReferenceResponsePtrOutputWithContext(ctx context.Context) ScriptReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptReferenceResponseOutput).ToScriptReferenceResponsePtrOutputWithContext(ctx)
}

// ScriptReferenceResponsePtrInput is an input type that accepts ScriptReferenceResponseArgs, ScriptReferenceResponsePtr and ScriptReferenceResponsePtrOutput values.
// You can construct a concrete instance of `ScriptReferenceResponsePtrInput` via:
//
//          ScriptReferenceResponseArgs{...}
//
//  or:
//
//          nil
type ScriptReferenceResponsePtrInput interface {
	pulumi.Input

	ToScriptReferenceResponsePtrOutput() ScriptReferenceResponsePtrOutput
	ToScriptReferenceResponsePtrOutputWithContext(context.Context) ScriptReferenceResponsePtrOutput
}

type scriptReferenceResponsePtrType ScriptReferenceResponseArgs

func ScriptReferenceResponsePtr(v *ScriptReferenceResponseArgs) ScriptReferenceResponsePtrInput {
	return (*scriptReferenceResponsePtrType)(v)
}

func (*scriptReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptReferenceResponse)(nil)).Elem()
}

func (i *scriptReferenceResponsePtrType) ToScriptReferenceResponsePtrOutput() ScriptReferenceResponsePtrOutput {
	return i.ToScriptReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *scriptReferenceResponsePtrType) ToScriptReferenceResponsePtrOutputWithContext(ctx context.Context) ScriptReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptReferenceResponsePtrOutput)
}

type ScriptReferenceResponseOutput struct{ *pulumi.OutputState }

func (ScriptReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptReferenceResponse)(nil)).Elem()
}

func (o ScriptReferenceResponseOutput) ToScriptReferenceResponseOutput() ScriptReferenceResponseOutput {
	return o
}

func (o ScriptReferenceResponseOutput) ToScriptReferenceResponseOutputWithContext(ctx context.Context) ScriptReferenceResponseOutput {
	return o
}

func (o ScriptReferenceResponseOutput) ToScriptReferenceResponsePtrOutput() ScriptReferenceResponsePtrOutput {
	return o.ToScriptReferenceResponsePtrOutputWithContext(context.Background())
}

func (o ScriptReferenceResponseOutput) ToScriptReferenceResponsePtrOutputWithContext(ctx context.Context) ScriptReferenceResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScriptReferenceResponse) *ScriptReferenceResponse {
		return &v
	}).(ScriptReferenceResponsePtrOutput)
}

// Optional command line arguments passed to the script to run.
func (o ScriptReferenceResponseOutput) ScriptArguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptReferenceResponse) *string { return v.ScriptArguments }).(pulumi.StringPtrOutput)
}

// The location of scripts in the mounted volume.
func (o ScriptReferenceResponseOutput) ScriptData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptReferenceResponse) *string { return v.ScriptData }).(pulumi.StringPtrOutput)
}

// The storage source of the script: inline, workspace.
func (o ScriptReferenceResponseOutput) ScriptSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptReferenceResponse) *string { return v.ScriptSource }).(pulumi.StringPtrOutput)
}

// Optional time period passed to timeout command.
func (o ScriptReferenceResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptReferenceResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ScriptReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ScriptReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptReferenceResponse)(nil)).Elem()
}

func (o ScriptReferenceResponsePtrOutput) ToScriptReferenceResponsePtrOutput() ScriptReferenceResponsePtrOutput {
	return o
}

func (o ScriptReferenceResponsePtrOutput) ToScriptReferenceResponsePtrOutputWithContext(ctx context.Context) ScriptReferenceResponsePtrOutput {
	return o
}

func (o ScriptReferenceResponsePtrOutput) Elem() ScriptReferenceResponseOutput {
	return o.ApplyT(func(v *ScriptReferenceResponse) ScriptReferenceResponse {
		if v != nil {
			return *v
		}
		var ret ScriptReferenceResponse
		return ret
	}).(ScriptReferenceResponseOutput)
}

// Optional command line arguments passed to the script to run.
func (o ScriptReferenceResponsePtrOutput) ScriptArguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScriptArguments
	}).(pulumi.StringPtrOutput)
}

// The location of scripts in the mounted volume.
func (o ScriptReferenceResponsePtrOutput) ScriptData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScriptData
	}).(pulumi.StringPtrOutput)
}

// The storage source of the script: inline, workspace.
func (o ScriptReferenceResponsePtrOutput) ScriptSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScriptSource
	}).(pulumi.StringPtrOutput)
}

// Optional time period passed to timeout command.
func (o ScriptReferenceResponsePtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

type ScriptsToExecute struct {
	// Script that's run only once during provision of the compute.
	CreationScript *ScriptReference `pulumi:"creationScript"`
	// Script that's run every time the machine starts.
	StartupScript *ScriptReference `pulumi:"startupScript"`
}

// ScriptsToExecuteInput is an input type that accepts ScriptsToExecuteArgs and ScriptsToExecuteOutput values.
// You can construct a concrete instance of `ScriptsToExecuteInput` via:
//
//          ScriptsToExecuteArgs{...}
type ScriptsToExecuteInput interface {
	pulumi.Input

	ToScriptsToExecuteOutput() ScriptsToExecuteOutput
	ToScriptsToExecuteOutputWithContext(context.Context) ScriptsToExecuteOutput
}

type ScriptsToExecuteArgs struct {
	// Script that's run only once during provision of the compute.
	CreationScript ScriptReferencePtrInput `pulumi:"creationScript"`
	// Script that's run every time the machine starts.
	StartupScript ScriptReferencePtrInput `pulumi:"startupScript"`
}

func (ScriptsToExecuteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptsToExecute)(nil)).Elem()
}

func (i ScriptsToExecuteArgs) ToScriptsToExecuteOutput() ScriptsToExecuteOutput {
	return i.ToScriptsToExecuteOutputWithContext(context.Background())
}

func (i ScriptsToExecuteArgs) ToScriptsToExecuteOutputWithContext(ctx context.Context) ScriptsToExecuteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptsToExecuteOutput)
}

func (i ScriptsToExecuteArgs) ToScriptsToExecutePtrOutput() ScriptsToExecutePtrOutput {
	return i.ToScriptsToExecutePtrOutputWithContext(context.Background())
}

func (i ScriptsToExecuteArgs) ToScriptsToExecutePtrOutputWithContext(ctx context.Context) ScriptsToExecutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptsToExecuteOutput).ToScriptsToExecutePtrOutputWithContext(ctx)
}

// ScriptsToExecutePtrInput is an input type that accepts ScriptsToExecuteArgs, ScriptsToExecutePtr and ScriptsToExecutePtrOutput values.
// You can construct a concrete instance of `ScriptsToExecutePtrInput` via:
//
//          ScriptsToExecuteArgs{...}
//
//  or:
//
//          nil
type ScriptsToExecutePtrInput interface {
	pulumi.Input

	ToScriptsToExecutePtrOutput() ScriptsToExecutePtrOutput
	ToScriptsToExecutePtrOutputWithContext(context.Context) ScriptsToExecutePtrOutput
}

type scriptsToExecutePtrType ScriptsToExecuteArgs

func ScriptsToExecutePtr(v *ScriptsToExecuteArgs) ScriptsToExecutePtrInput {
	return (*scriptsToExecutePtrType)(v)
}

func (*scriptsToExecutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptsToExecute)(nil)).Elem()
}

func (i *scriptsToExecutePtrType) ToScriptsToExecutePtrOutput() ScriptsToExecutePtrOutput {
	return i.ToScriptsToExecutePtrOutputWithContext(context.Background())
}

func (i *scriptsToExecutePtrType) ToScriptsToExecutePtrOutputWithContext(ctx context.Context) ScriptsToExecutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptsToExecutePtrOutput)
}

type ScriptsToExecuteOutput struct{ *pulumi.OutputState }

func (ScriptsToExecuteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptsToExecute)(nil)).Elem()
}

func (o ScriptsToExecuteOutput) ToScriptsToExecuteOutput() ScriptsToExecuteOutput {
	return o
}

func (o ScriptsToExecuteOutput) ToScriptsToExecuteOutputWithContext(ctx context.Context) ScriptsToExecuteOutput {
	return o
}

func (o ScriptsToExecuteOutput) ToScriptsToExecutePtrOutput() ScriptsToExecutePtrOutput {
	return o.ToScriptsToExecutePtrOutputWithContext(context.Background())
}

func (o ScriptsToExecuteOutput) ToScriptsToExecutePtrOutputWithContext(ctx context.Context) ScriptsToExecutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScriptsToExecute) *ScriptsToExecute {
		return &v
	}).(ScriptsToExecutePtrOutput)
}

// Script that's run only once during provision of the compute.
func (o ScriptsToExecuteOutput) CreationScript() ScriptReferencePtrOutput {
	return o.ApplyT(func(v ScriptsToExecute) *ScriptReference { return v.CreationScript }).(ScriptReferencePtrOutput)
}

// Script that's run every time the machine starts.
func (o ScriptsToExecuteOutput) StartupScript() ScriptReferencePtrOutput {
	return o.ApplyT(func(v ScriptsToExecute) *ScriptReference { return v.StartupScript }).(ScriptReferencePtrOutput)
}

type ScriptsToExecutePtrOutput struct{ *pulumi.OutputState }

func (ScriptsToExecutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptsToExecute)(nil)).Elem()
}

func (o ScriptsToExecutePtrOutput) ToScriptsToExecutePtrOutput() ScriptsToExecutePtrOutput {
	return o
}

func (o ScriptsToExecutePtrOutput) ToScriptsToExecutePtrOutputWithContext(ctx context.Context) ScriptsToExecutePtrOutput {
	return o
}

func (o ScriptsToExecutePtrOutput) Elem() ScriptsToExecuteOutput {
	return o.ApplyT(func(v *ScriptsToExecute) ScriptsToExecute {
		if v != nil {
			return *v
		}
		var ret ScriptsToExecute
		return ret
	}).(ScriptsToExecuteOutput)
}

// Script that's run only once during provision of the compute.
func (o ScriptsToExecutePtrOutput) CreationScript() ScriptReferencePtrOutput {
	return o.ApplyT(func(v *ScriptsToExecute) *ScriptReference {
		if v == nil {
			return nil
		}
		return v.CreationScript
	}).(ScriptReferencePtrOutput)
}

// Script that's run every time the machine starts.
func (o ScriptsToExecutePtrOutput) StartupScript() ScriptReferencePtrOutput {
	return o.ApplyT(func(v *ScriptsToExecute) *ScriptReference {
		if v == nil {
			return nil
		}
		return v.StartupScript
	}).(ScriptReferencePtrOutput)
}

type ScriptsToExecuteResponse struct {
	// Script that's run only once during provision of the compute.
	CreationScript *ScriptReferenceResponse `pulumi:"creationScript"`
	// Script that's run every time the machine starts.
	StartupScript *ScriptReferenceResponse `pulumi:"startupScript"`
}

// ScriptsToExecuteResponseInput is an input type that accepts ScriptsToExecuteResponseArgs and ScriptsToExecuteResponseOutput values.
// You can construct a concrete instance of `ScriptsToExecuteResponseInput` via:
//
//          ScriptsToExecuteResponseArgs{...}
type ScriptsToExecuteResponseInput interface {
	pulumi.Input

	ToScriptsToExecuteResponseOutput() ScriptsToExecuteResponseOutput
	ToScriptsToExecuteResponseOutputWithContext(context.Context) ScriptsToExecuteResponseOutput
}

type ScriptsToExecuteResponseArgs struct {
	// Script that's run only once during provision of the compute.
	CreationScript ScriptReferenceResponsePtrInput `pulumi:"creationScript"`
	// Script that's run every time the machine starts.
	StartupScript ScriptReferenceResponsePtrInput `pulumi:"startupScript"`
}

func (ScriptsToExecuteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptsToExecuteResponse)(nil)).Elem()
}

func (i ScriptsToExecuteResponseArgs) ToScriptsToExecuteResponseOutput() ScriptsToExecuteResponseOutput {
	return i.ToScriptsToExecuteResponseOutputWithContext(context.Background())
}

func (i ScriptsToExecuteResponseArgs) ToScriptsToExecuteResponseOutputWithContext(ctx context.Context) ScriptsToExecuteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptsToExecuteResponseOutput)
}

func (i ScriptsToExecuteResponseArgs) ToScriptsToExecuteResponsePtrOutput() ScriptsToExecuteResponsePtrOutput {
	return i.ToScriptsToExecuteResponsePtrOutputWithContext(context.Background())
}

func (i ScriptsToExecuteResponseArgs) ToScriptsToExecuteResponsePtrOutputWithContext(ctx context.Context) ScriptsToExecuteResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptsToExecuteResponseOutput).ToScriptsToExecuteResponsePtrOutputWithContext(ctx)
}

// ScriptsToExecuteResponsePtrInput is an input type that accepts ScriptsToExecuteResponseArgs, ScriptsToExecuteResponsePtr and ScriptsToExecuteResponsePtrOutput values.
// You can construct a concrete instance of `ScriptsToExecuteResponsePtrInput` via:
//
//          ScriptsToExecuteResponseArgs{...}
//
//  or:
//
//          nil
type ScriptsToExecuteResponsePtrInput interface {
	pulumi.Input

	ToScriptsToExecuteResponsePtrOutput() ScriptsToExecuteResponsePtrOutput
	ToScriptsToExecuteResponsePtrOutputWithContext(context.Context) ScriptsToExecuteResponsePtrOutput
}

type scriptsToExecuteResponsePtrType ScriptsToExecuteResponseArgs

func ScriptsToExecuteResponsePtr(v *ScriptsToExecuteResponseArgs) ScriptsToExecuteResponsePtrInput {
	return (*scriptsToExecuteResponsePtrType)(v)
}

func (*scriptsToExecuteResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptsToExecuteResponse)(nil)).Elem()
}

func (i *scriptsToExecuteResponsePtrType) ToScriptsToExecuteResponsePtrOutput() ScriptsToExecuteResponsePtrOutput {
	return i.ToScriptsToExecuteResponsePtrOutputWithContext(context.Background())
}

func (i *scriptsToExecuteResponsePtrType) ToScriptsToExecuteResponsePtrOutputWithContext(ctx context.Context) ScriptsToExecuteResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptsToExecuteResponsePtrOutput)
}

type ScriptsToExecuteResponseOutput struct{ *pulumi.OutputState }

func (ScriptsToExecuteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptsToExecuteResponse)(nil)).Elem()
}

func (o ScriptsToExecuteResponseOutput) ToScriptsToExecuteResponseOutput() ScriptsToExecuteResponseOutput {
	return o
}

func (o ScriptsToExecuteResponseOutput) ToScriptsToExecuteResponseOutputWithContext(ctx context.Context) ScriptsToExecuteResponseOutput {
	return o
}

func (o ScriptsToExecuteResponseOutput) ToScriptsToExecuteResponsePtrOutput() ScriptsToExecuteResponsePtrOutput {
	return o.ToScriptsToExecuteResponsePtrOutputWithContext(context.Background())
}

func (o ScriptsToExecuteResponseOutput) ToScriptsToExecuteResponsePtrOutputWithContext(ctx context.Context) ScriptsToExecuteResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScriptsToExecuteResponse) *ScriptsToExecuteResponse {
		return &v
	}).(ScriptsToExecuteResponsePtrOutput)
}

// Script that's run only once during provision of the compute.
func (o ScriptsToExecuteResponseOutput) CreationScript() ScriptReferenceResponsePtrOutput {
	return o.ApplyT(func(v ScriptsToExecuteResponse) *ScriptReferenceResponse { return v.CreationScript }).(ScriptReferenceResponsePtrOutput)
}

// Script that's run every time the machine starts.
func (o ScriptsToExecuteResponseOutput) StartupScript() ScriptReferenceResponsePtrOutput {
	return o.ApplyT(func(v ScriptsToExecuteResponse) *ScriptReferenceResponse { return v.StartupScript }).(ScriptReferenceResponsePtrOutput)
}

type ScriptsToExecuteResponsePtrOutput struct{ *pulumi.OutputState }

func (ScriptsToExecuteResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptsToExecuteResponse)(nil)).Elem()
}

func (o ScriptsToExecuteResponsePtrOutput) ToScriptsToExecuteResponsePtrOutput() ScriptsToExecuteResponsePtrOutput {
	return o
}

func (o ScriptsToExecuteResponsePtrOutput) ToScriptsToExecuteResponsePtrOutputWithContext(ctx context.Context) ScriptsToExecuteResponsePtrOutput {
	return o
}

func (o ScriptsToExecuteResponsePtrOutput) Elem() ScriptsToExecuteResponseOutput {
	return o.ApplyT(func(v *ScriptsToExecuteResponse) ScriptsToExecuteResponse {
		if v != nil {
			return *v
		}
		var ret ScriptsToExecuteResponse
		return ret
	}).(ScriptsToExecuteResponseOutput)
}

// Script that's run only once during provision of the compute.
func (o ScriptsToExecuteResponsePtrOutput) CreationScript() ScriptReferenceResponsePtrOutput {
	return o.ApplyT(func(v *ScriptsToExecuteResponse) *ScriptReferenceResponse {
		if v == nil {
			return nil
		}
		return v.CreationScript
	}).(ScriptReferenceResponsePtrOutput)
}

// Script that's run every time the machine starts.
func (o ScriptsToExecuteResponsePtrOutput) StartupScript() ScriptReferenceResponsePtrOutput {
	return o.ApplyT(func(v *ScriptsToExecuteResponse) *ScriptReferenceResponse {
		if v == nil {
			return nil
		}
		return v.StartupScript
	}).(ScriptReferenceResponsePtrOutput)
}

type ServiceManagedResourcesSettings struct {
	// The settings for the service managed cosmosdb account.
	CosmosDb *CosmosDbSettings `pulumi:"cosmosDb"`
}

// ServiceManagedResourcesSettingsInput is an input type that accepts ServiceManagedResourcesSettingsArgs and ServiceManagedResourcesSettingsOutput values.
// You can construct a concrete instance of `ServiceManagedResourcesSettingsInput` via:
//
//          ServiceManagedResourcesSettingsArgs{...}
type ServiceManagedResourcesSettingsInput interface {
	pulumi.Input

	ToServiceManagedResourcesSettingsOutput() ServiceManagedResourcesSettingsOutput
	ToServiceManagedResourcesSettingsOutputWithContext(context.Context) ServiceManagedResourcesSettingsOutput
}

type ServiceManagedResourcesSettingsArgs struct {
	// The settings for the service managed cosmosdb account.
	CosmosDb CosmosDbSettingsPtrInput `pulumi:"cosmosDb"`
}

func (ServiceManagedResourcesSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceManagedResourcesSettings)(nil)).Elem()
}

func (i ServiceManagedResourcesSettingsArgs) ToServiceManagedResourcesSettingsOutput() ServiceManagedResourcesSettingsOutput {
	return i.ToServiceManagedResourcesSettingsOutputWithContext(context.Background())
}

func (i ServiceManagedResourcesSettingsArgs) ToServiceManagedResourcesSettingsOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedResourcesSettingsOutput)
}

func (i ServiceManagedResourcesSettingsArgs) ToServiceManagedResourcesSettingsPtrOutput() ServiceManagedResourcesSettingsPtrOutput {
	return i.ToServiceManagedResourcesSettingsPtrOutputWithContext(context.Background())
}

func (i ServiceManagedResourcesSettingsArgs) ToServiceManagedResourcesSettingsPtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedResourcesSettingsOutput).ToServiceManagedResourcesSettingsPtrOutputWithContext(ctx)
}

// ServiceManagedResourcesSettingsPtrInput is an input type that accepts ServiceManagedResourcesSettingsArgs, ServiceManagedResourcesSettingsPtr and ServiceManagedResourcesSettingsPtrOutput values.
// You can construct a concrete instance of `ServiceManagedResourcesSettingsPtrInput` via:
//
//          ServiceManagedResourcesSettingsArgs{...}
//
//  or:
//
//          nil
type ServiceManagedResourcesSettingsPtrInput interface {
	pulumi.Input

	ToServiceManagedResourcesSettingsPtrOutput() ServiceManagedResourcesSettingsPtrOutput
	ToServiceManagedResourcesSettingsPtrOutputWithContext(context.Context) ServiceManagedResourcesSettingsPtrOutput
}

type serviceManagedResourcesSettingsPtrType ServiceManagedResourcesSettingsArgs

func ServiceManagedResourcesSettingsPtr(v *ServiceManagedResourcesSettingsArgs) ServiceManagedResourcesSettingsPtrInput {
	return (*serviceManagedResourcesSettingsPtrType)(v)
}

func (*serviceManagedResourcesSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceManagedResourcesSettings)(nil)).Elem()
}

func (i *serviceManagedResourcesSettingsPtrType) ToServiceManagedResourcesSettingsPtrOutput() ServiceManagedResourcesSettingsPtrOutput {
	return i.ToServiceManagedResourcesSettingsPtrOutputWithContext(context.Background())
}

func (i *serviceManagedResourcesSettingsPtrType) ToServiceManagedResourcesSettingsPtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedResourcesSettingsPtrOutput)
}

type ServiceManagedResourcesSettingsOutput struct{ *pulumi.OutputState }

func (ServiceManagedResourcesSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceManagedResourcesSettings)(nil)).Elem()
}

func (o ServiceManagedResourcesSettingsOutput) ToServiceManagedResourcesSettingsOutput() ServiceManagedResourcesSettingsOutput {
	return o
}

func (o ServiceManagedResourcesSettingsOutput) ToServiceManagedResourcesSettingsOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsOutput {
	return o
}

func (o ServiceManagedResourcesSettingsOutput) ToServiceManagedResourcesSettingsPtrOutput() ServiceManagedResourcesSettingsPtrOutput {
	return o.ToServiceManagedResourcesSettingsPtrOutputWithContext(context.Background())
}

func (o ServiceManagedResourcesSettingsOutput) ToServiceManagedResourcesSettingsPtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceManagedResourcesSettings) *ServiceManagedResourcesSettings {
		return &v
	}).(ServiceManagedResourcesSettingsPtrOutput)
}

// The settings for the service managed cosmosdb account.
func (o ServiceManagedResourcesSettingsOutput) CosmosDb() CosmosDbSettingsPtrOutput {
	return o.ApplyT(func(v ServiceManagedResourcesSettings) *CosmosDbSettings { return v.CosmosDb }).(CosmosDbSettingsPtrOutput)
}

type ServiceManagedResourcesSettingsPtrOutput struct{ *pulumi.OutputState }

func (ServiceManagedResourcesSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceManagedResourcesSettings)(nil)).Elem()
}

func (o ServiceManagedResourcesSettingsPtrOutput) ToServiceManagedResourcesSettingsPtrOutput() ServiceManagedResourcesSettingsPtrOutput {
	return o
}

func (o ServiceManagedResourcesSettingsPtrOutput) ToServiceManagedResourcesSettingsPtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsPtrOutput {
	return o
}

func (o ServiceManagedResourcesSettingsPtrOutput) Elem() ServiceManagedResourcesSettingsOutput {
	return o.ApplyT(func(v *ServiceManagedResourcesSettings) ServiceManagedResourcesSettings {
		if v != nil {
			return *v
		}
		var ret ServiceManagedResourcesSettings
		return ret
	}).(ServiceManagedResourcesSettingsOutput)
}

// The settings for the service managed cosmosdb account.
func (o ServiceManagedResourcesSettingsPtrOutput) CosmosDb() CosmosDbSettingsPtrOutput {
	return o.ApplyT(func(v *ServiceManagedResourcesSettings) *CosmosDbSettings {
		if v == nil {
			return nil
		}
		return v.CosmosDb
	}).(CosmosDbSettingsPtrOutput)
}

type ServiceManagedResourcesSettingsResponse struct {
	// The settings for the service managed cosmosdb account.
	CosmosDb *CosmosDbSettingsResponse `pulumi:"cosmosDb"`
}

// ServiceManagedResourcesSettingsResponseInput is an input type that accepts ServiceManagedResourcesSettingsResponseArgs and ServiceManagedResourcesSettingsResponseOutput values.
// You can construct a concrete instance of `ServiceManagedResourcesSettingsResponseInput` via:
//
//          ServiceManagedResourcesSettingsResponseArgs{...}
type ServiceManagedResourcesSettingsResponseInput interface {
	pulumi.Input

	ToServiceManagedResourcesSettingsResponseOutput() ServiceManagedResourcesSettingsResponseOutput
	ToServiceManagedResourcesSettingsResponseOutputWithContext(context.Context) ServiceManagedResourcesSettingsResponseOutput
}

type ServiceManagedResourcesSettingsResponseArgs struct {
	// The settings for the service managed cosmosdb account.
	CosmosDb CosmosDbSettingsResponsePtrInput `pulumi:"cosmosDb"`
}

func (ServiceManagedResourcesSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceManagedResourcesSettingsResponse)(nil)).Elem()
}

func (i ServiceManagedResourcesSettingsResponseArgs) ToServiceManagedResourcesSettingsResponseOutput() ServiceManagedResourcesSettingsResponseOutput {
	return i.ToServiceManagedResourcesSettingsResponseOutputWithContext(context.Background())
}

func (i ServiceManagedResourcesSettingsResponseArgs) ToServiceManagedResourcesSettingsResponseOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedResourcesSettingsResponseOutput)
}

func (i ServiceManagedResourcesSettingsResponseArgs) ToServiceManagedResourcesSettingsResponsePtrOutput() ServiceManagedResourcesSettingsResponsePtrOutput {
	return i.ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ServiceManagedResourcesSettingsResponseArgs) ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedResourcesSettingsResponseOutput).ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(ctx)
}

// ServiceManagedResourcesSettingsResponsePtrInput is an input type that accepts ServiceManagedResourcesSettingsResponseArgs, ServiceManagedResourcesSettingsResponsePtr and ServiceManagedResourcesSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ServiceManagedResourcesSettingsResponsePtrInput` via:
//
//          ServiceManagedResourcesSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ServiceManagedResourcesSettingsResponsePtrInput interface {
	pulumi.Input

	ToServiceManagedResourcesSettingsResponsePtrOutput() ServiceManagedResourcesSettingsResponsePtrOutput
	ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(context.Context) ServiceManagedResourcesSettingsResponsePtrOutput
}

type serviceManagedResourcesSettingsResponsePtrType ServiceManagedResourcesSettingsResponseArgs

func ServiceManagedResourcesSettingsResponsePtr(v *ServiceManagedResourcesSettingsResponseArgs) ServiceManagedResourcesSettingsResponsePtrInput {
	return (*serviceManagedResourcesSettingsResponsePtrType)(v)
}

func (*serviceManagedResourcesSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceManagedResourcesSettingsResponse)(nil)).Elem()
}

func (i *serviceManagedResourcesSettingsResponsePtrType) ToServiceManagedResourcesSettingsResponsePtrOutput() ServiceManagedResourcesSettingsResponsePtrOutput {
	return i.ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *serviceManagedResourcesSettingsResponsePtrType) ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedResourcesSettingsResponsePtrOutput)
}

type ServiceManagedResourcesSettingsResponseOutput struct{ *pulumi.OutputState }

func (ServiceManagedResourcesSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceManagedResourcesSettingsResponse)(nil)).Elem()
}

func (o ServiceManagedResourcesSettingsResponseOutput) ToServiceManagedResourcesSettingsResponseOutput() ServiceManagedResourcesSettingsResponseOutput {
	return o
}

func (o ServiceManagedResourcesSettingsResponseOutput) ToServiceManagedResourcesSettingsResponseOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsResponseOutput {
	return o
}

func (o ServiceManagedResourcesSettingsResponseOutput) ToServiceManagedResourcesSettingsResponsePtrOutput() ServiceManagedResourcesSettingsResponsePtrOutput {
	return o.ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ServiceManagedResourcesSettingsResponseOutput) ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceManagedResourcesSettingsResponse) *ServiceManagedResourcesSettingsResponse {
		return &v
	}).(ServiceManagedResourcesSettingsResponsePtrOutput)
}

// The settings for the service managed cosmosdb account.
func (o ServiceManagedResourcesSettingsResponseOutput) CosmosDb() CosmosDbSettingsResponsePtrOutput {
	return o.ApplyT(func(v ServiceManagedResourcesSettingsResponse) *CosmosDbSettingsResponse { return v.CosmosDb }).(CosmosDbSettingsResponsePtrOutput)
}

type ServiceManagedResourcesSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceManagedResourcesSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceManagedResourcesSettingsResponse)(nil)).Elem()
}

func (o ServiceManagedResourcesSettingsResponsePtrOutput) ToServiceManagedResourcesSettingsResponsePtrOutput() ServiceManagedResourcesSettingsResponsePtrOutput {
	return o
}

func (o ServiceManagedResourcesSettingsResponsePtrOutput) ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsResponsePtrOutput {
	return o
}

func (o ServiceManagedResourcesSettingsResponsePtrOutput) Elem() ServiceManagedResourcesSettingsResponseOutput {
	return o.ApplyT(func(v *ServiceManagedResourcesSettingsResponse) ServiceManagedResourcesSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ServiceManagedResourcesSettingsResponse
		return ret
	}).(ServiceManagedResourcesSettingsResponseOutput)
}

// The settings for the service managed cosmosdb account.
func (o ServiceManagedResourcesSettingsResponsePtrOutput) CosmosDb() CosmosDbSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ServiceManagedResourcesSettingsResponse) *CosmosDbSettingsResponse {
		if v == nil {
			return nil
		}
		return v.CosmosDb
	}).(CosmosDbSettingsResponsePtrOutput)
}

type ServiceResponseBaseResponseError struct {
	// The error response.
	Error ErrorResponseResponse `pulumi:"error"`
}

// ServiceResponseBaseResponseErrorInput is an input type that accepts ServiceResponseBaseResponseErrorArgs and ServiceResponseBaseResponseErrorOutput values.
// You can construct a concrete instance of `ServiceResponseBaseResponseErrorInput` via:
//
//          ServiceResponseBaseResponseErrorArgs{...}
type ServiceResponseBaseResponseErrorInput interface {
	pulumi.Input

	ToServiceResponseBaseResponseErrorOutput() ServiceResponseBaseResponseErrorOutput
	ToServiceResponseBaseResponseErrorOutputWithContext(context.Context) ServiceResponseBaseResponseErrorOutput
}

type ServiceResponseBaseResponseErrorArgs struct {
	// The error response.
	Error ErrorResponseResponseInput `pulumi:"error"`
}

func (ServiceResponseBaseResponseErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceResponseBaseResponseError)(nil)).Elem()
}

func (i ServiceResponseBaseResponseErrorArgs) ToServiceResponseBaseResponseErrorOutput() ServiceResponseBaseResponseErrorOutput {
	return i.ToServiceResponseBaseResponseErrorOutputWithContext(context.Background())
}

func (i ServiceResponseBaseResponseErrorArgs) ToServiceResponseBaseResponseErrorOutputWithContext(ctx context.Context) ServiceResponseBaseResponseErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceResponseBaseResponseErrorOutput)
}

type ServiceResponseBaseResponseErrorOutput struct{ *pulumi.OutputState }

func (ServiceResponseBaseResponseErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceResponseBaseResponseError)(nil)).Elem()
}

func (o ServiceResponseBaseResponseErrorOutput) ToServiceResponseBaseResponseErrorOutput() ServiceResponseBaseResponseErrorOutput {
	return o
}

func (o ServiceResponseBaseResponseErrorOutput) ToServiceResponseBaseResponseErrorOutputWithContext(ctx context.Context) ServiceResponseBaseResponseErrorOutput {
	return o
}

// The error response.
func (o ServiceResponseBaseResponseErrorOutput) Error() ErrorResponseResponseOutput {
	return o.ApplyT(func(v ServiceResponseBaseResponseError) ErrorResponseResponse { return v.Error }).(ErrorResponseResponseOutput)
}

type SetupScripts struct {
	// Customized setup scripts
	Scripts *ScriptsToExecute `pulumi:"scripts"`
}

// SetupScriptsInput is an input type that accepts SetupScriptsArgs and SetupScriptsOutput values.
// You can construct a concrete instance of `SetupScriptsInput` via:
//
//          SetupScriptsArgs{...}
type SetupScriptsInput interface {
	pulumi.Input

	ToSetupScriptsOutput() SetupScriptsOutput
	ToSetupScriptsOutputWithContext(context.Context) SetupScriptsOutput
}

type SetupScriptsArgs struct {
	// Customized setup scripts
	Scripts ScriptsToExecutePtrInput `pulumi:"scripts"`
}

func (SetupScriptsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SetupScripts)(nil)).Elem()
}

func (i SetupScriptsArgs) ToSetupScriptsOutput() SetupScriptsOutput {
	return i.ToSetupScriptsOutputWithContext(context.Background())
}

func (i SetupScriptsArgs) ToSetupScriptsOutputWithContext(ctx context.Context) SetupScriptsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupScriptsOutput)
}

func (i SetupScriptsArgs) ToSetupScriptsPtrOutput() SetupScriptsPtrOutput {
	return i.ToSetupScriptsPtrOutputWithContext(context.Background())
}

func (i SetupScriptsArgs) ToSetupScriptsPtrOutputWithContext(ctx context.Context) SetupScriptsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupScriptsOutput).ToSetupScriptsPtrOutputWithContext(ctx)
}

// SetupScriptsPtrInput is an input type that accepts SetupScriptsArgs, SetupScriptsPtr and SetupScriptsPtrOutput values.
// You can construct a concrete instance of `SetupScriptsPtrInput` via:
//
//          SetupScriptsArgs{...}
//
//  or:
//
//          nil
type SetupScriptsPtrInput interface {
	pulumi.Input

	ToSetupScriptsPtrOutput() SetupScriptsPtrOutput
	ToSetupScriptsPtrOutputWithContext(context.Context) SetupScriptsPtrOutput
}

type setupScriptsPtrType SetupScriptsArgs

func SetupScriptsPtr(v *SetupScriptsArgs) SetupScriptsPtrInput {
	return (*setupScriptsPtrType)(v)
}

func (*setupScriptsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SetupScripts)(nil)).Elem()
}

func (i *setupScriptsPtrType) ToSetupScriptsPtrOutput() SetupScriptsPtrOutput {
	return i.ToSetupScriptsPtrOutputWithContext(context.Background())
}

func (i *setupScriptsPtrType) ToSetupScriptsPtrOutputWithContext(ctx context.Context) SetupScriptsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupScriptsPtrOutput)
}

type SetupScriptsOutput struct{ *pulumi.OutputState }

func (SetupScriptsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SetupScripts)(nil)).Elem()
}

func (o SetupScriptsOutput) ToSetupScriptsOutput() SetupScriptsOutput {
	return o
}

func (o SetupScriptsOutput) ToSetupScriptsOutputWithContext(ctx context.Context) SetupScriptsOutput {
	return o
}

func (o SetupScriptsOutput) ToSetupScriptsPtrOutput() SetupScriptsPtrOutput {
	return o.ToSetupScriptsPtrOutputWithContext(context.Background())
}

func (o SetupScriptsOutput) ToSetupScriptsPtrOutputWithContext(ctx context.Context) SetupScriptsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SetupScripts) *SetupScripts {
		return &v
	}).(SetupScriptsPtrOutput)
}

// Customized setup scripts
func (o SetupScriptsOutput) Scripts() ScriptsToExecutePtrOutput {
	return o.ApplyT(func(v SetupScripts) *ScriptsToExecute { return v.Scripts }).(ScriptsToExecutePtrOutput)
}

type SetupScriptsPtrOutput struct{ *pulumi.OutputState }

func (SetupScriptsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SetupScripts)(nil)).Elem()
}

func (o SetupScriptsPtrOutput) ToSetupScriptsPtrOutput() SetupScriptsPtrOutput {
	return o
}

func (o SetupScriptsPtrOutput) ToSetupScriptsPtrOutputWithContext(ctx context.Context) SetupScriptsPtrOutput {
	return o
}

func (o SetupScriptsPtrOutput) Elem() SetupScriptsOutput {
	return o.ApplyT(func(v *SetupScripts) SetupScripts {
		if v != nil {
			return *v
		}
		var ret SetupScripts
		return ret
	}).(SetupScriptsOutput)
}

// Customized setup scripts
func (o SetupScriptsPtrOutput) Scripts() ScriptsToExecutePtrOutput {
	return o.ApplyT(func(v *SetupScripts) *ScriptsToExecute {
		if v == nil {
			return nil
		}
		return v.Scripts
	}).(ScriptsToExecutePtrOutput)
}

type SetupScriptsResponse struct {
	// Customized setup scripts
	Scripts *ScriptsToExecuteResponse `pulumi:"scripts"`
}

// SetupScriptsResponseInput is an input type that accepts SetupScriptsResponseArgs and SetupScriptsResponseOutput values.
// You can construct a concrete instance of `SetupScriptsResponseInput` via:
//
//          SetupScriptsResponseArgs{...}
type SetupScriptsResponseInput interface {
	pulumi.Input

	ToSetupScriptsResponseOutput() SetupScriptsResponseOutput
	ToSetupScriptsResponseOutputWithContext(context.Context) SetupScriptsResponseOutput
}

type SetupScriptsResponseArgs struct {
	// Customized setup scripts
	Scripts ScriptsToExecuteResponsePtrInput `pulumi:"scripts"`
}

func (SetupScriptsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SetupScriptsResponse)(nil)).Elem()
}

func (i SetupScriptsResponseArgs) ToSetupScriptsResponseOutput() SetupScriptsResponseOutput {
	return i.ToSetupScriptsResponseOutputWithContext(context.Background())
}

func (i SetupScriptsResponseArgs) ToSetupScriptsResponseOutputWithContext(ctx context.Context) SetupScriptsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupScriptsResponseOutput)
}

func (i SetupScriptsResponseArgs) ToSetupScriptsResponsePtrOutput() SetupScriptsResponsePtrOutput {
	return i.ToSetupScriptsResponsePtrOutputWithContext(context.Background())
}

func (i SetupScriptsResponseArgs) ToSetupScriptsResponsePtrOutputWithContext(ctx context.Context) SetupScriptsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupScriptsResponseOutput).ToSetupScriptsResponsePtrOutputWithContext(ctx)
}

// SetupScriptsResponsePtrInput is an input type that accepts SetupScriptsResponseArgs, SetupScriptsResponsePtr and SetupScriptsResponsePtrOutput values.
// You can construct a concrete instance of `SetupScriptsResponsePtrInput` via:
//
//          SetupScriptsResponseArgs{...}
//
//  or:
//
//          nil
type SetupScriptsResponsePtrInput interface {
	pulumi.Input

	ToSetupScriptsResponsePtrOutput() SetupScriptsResponsePtrOutput
	ToSetupScriptsResponsePtrOutputWithContext(context.Context) SetupScriptsResponsePtrOutput
}

type setupScriptsResponsePtrType SetupScriptsResponseArgs

func SetupScriptsResponsePtr(v *SetupScriptsResponseArgs) SetupScriptsResponsePtrInput {
	return (*setupScriptsResponsePtrType)(v)
}

func (*setupScriptsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SetupScriptsResponse)(nil)).Elem()
}

func (i *setupScriptsResponsePtrType) ToSetupScriptsResponsePtrOutput() SetupScriptsResponsePtrOutput {
	return i.ToSetupScriptsResponsePtrOutputWithContext(context.Background())
}

func (i *setupScriptsResponsePtrType) ToSetupScriptsResponsePtrOutputWithContext(ctx context.Context) SetupScriptsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupScriptsResponsePtrOutput)
}

type SetupScriptsResponseOutput struct{ *pulumi.OutputState }

func (SetupScriptsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SetupScriptsResponse)(nil)).Elem()
}

func (o SetupScriptsResponseOutput) ToSetupScriptsResponseOutput() SetupScriptsResponseOutput {
	return o
}

func (o SetupScriptsResponseOutput) ToSetupScriptsResponseOutputWithContext(ctx context.Context) SetupScriptsResponseOutput {
	return o
}

func (o SetupScriptsResponseOutput) ToSetupScriptsResponsePtrOutput() SetupScriptsResponsePtrOutput {
	return o.ToSetupScriptsResponsePtrOutputWithContext(context.Background())
}

func (o SetupScriptsResponseOutput) ToSetupScriptsResponsePtrOutputWithContext(ctx context.Context) SetupScriptsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SetupScriptsResponse) *SetupScriptsResponse {
		return &v
	}).(SetupScriptsResponsePtrOutput)
}

// Customized setup scripts
func (o SetupScriptsResponseOutput) Scripts() ScriptsToExecuteResponsePtrOutput {
	return o.ApplyT(func(v SetupScriptsResponse) *ScriptsToExecuteResponse { return v.Scripts }).(ScriptsToExecuteResponsePtrOutput)
}

type SetupScriptsResponsePtrOutput struct{ *pulumi.OutputState }

func (SetupScriptsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SetupScriptsResponse)(nil)).Elem()
}

func (o SetupScriptsResponsePtrOutput) ToSetupScriptsResponsePtrOutput() SetupScriptsResponsePtrOutput {
	return o
}

func (o SetupScriptsResponsePtrOutput) ToSetupScriptsResponsePtrOutputWithContext(ctx context.Context) SetupScriptsResponsePtrOutput {
	return o
}

func (o SetupScriptsResponsePtrOutput) Elem() SetupScriptsResponseOutput {
	return o.ApplyT(func(v *SetupScriptsResponse) SetupScriptsResponse {
		if v != nil {
			return *v
		}
		var ret SetupScriptsResponse
		return ret
	}).(SetupScriptsResponseOutput)
}

// Customized setup scripts
func (o SetupScriptsResponsePtrOutput) Scripts() ScriptsToExecuteResponsePtrOutput {
	return o.ApplyT(func(v *SetupScriptsResponse) *ScriptsToExecuteResponse {
		if v == nil {
			return nil
		}
		return v.Scripts
	}).(ScriptsToExecuteResponsePtrOutput)
}

type SharedPrivateLinkResource struct {
	// The private link resource group id.
	GroupId *string `pulumi:"groupId"`
	// Unique name of the private link.
	Name *string `pulumi:"name"`
	// The resource id that private link links to.
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Request message.
	RequestMessage *string `pulumi:"requestMessage"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// SharedPrivateLinkResourceInput is an input type that accepts SharedPrivateLinkResourceArgs and SharedPrivateLinkResourceOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceInput` via:
//
//          SharedPrivateLinkResourceArgs{...}
type SharedPrivateLinkResourceInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput
	ToSharedPrivateLinkResourceOutputWithContext(context.Context) SharedPrivateLinkResourceOutput
}

type SharedPrivateLinkResourceArgs struct {
	// The private link resource group id.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Unique name of the private link.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource id that private link links to.
	PrivateLinkResourceId pulumi.StringPtrInput `pulumi:"privateLinkResourceId"`
	// Request message.
	RequestMessage pulumi.StringPtrInput `pulumi:"requestMessage"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SharedPrivateLinkResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResource)(nil)).Elem()
}

func (i SharedPrivateLinkResourceArgs) ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput {
	return i.ToSharedPrivateLinkResourceOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceArgs) ToSharedPrivateLinkResourceOutputWithContext(ctx context.Context) SharedPrivateLinkResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceOutput)
}

// SharedPrivateLinkResourceArrayInput is an input type that accepts SharedPrivateLinkResourceArray and SharedPrivateLinkResourceArrayOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceArrayInput` via:
//
//          SharedPrivateLinkResourceArray{ SharedPrivateLinkResourceArgs{...} }
type SharedPrivateLinkResourceArrayInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceArrayOutput() SharedPrivateLinkResourceArrayOutput
	ToSharedPrivateLinkResourceArrayOutputWithContext(context.Context) SharedPrivateLinkResourceArrayOutput
}

type SharedPrivateLinkResourceArray []SharedPrivateLinkResourceInput

func (SharedPrivateLinkResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResource)(nil)).Elem()
}

func (i SharedPrivateLinkResourceArray) ToSharedPrivateLinkResourceArrayOutput() SharedPrivateLinkResourceArrayOutput {
	return i.ToSharedPrivateLinkResourceArrayOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceArray) ToSharedPrivateLinkResourceArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceArrayOutput)
}

type SharedPrivateLinkResourceOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResource)(nil)).Elem()
}

func (o SharedPrivateLinkResourceOutput) ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput {
	return o
}

func (o SharedPrivateLinkResourceOutput) ToSharedPrivateLinkResourceOutputWithContext(ctx context.Context) SharedPrivateLinkResourceOutput {
	return o
}

// The private link resource group id.
func (o SharedPrivateLinkResourceOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Unique name of the private link.
func (o SharedPrivateLinkResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource id that private link links to.
func (o SharedPrivateLinkResourceOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Request message.
func (o SharedPrivateLinkResourceOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o SharedPrivateLinkResourceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SharedPrivateLinkResourceArrayOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResource)(nil)).Elem()
}

func (o SharedPrivateLinkResourceArrayOutput) ToSharedPrivateLinkResourceArrayOutput() SharedPrivateLinkResourceArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceArrayOutput) ToSharedPrivateLinkResourceArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceArrayOutput) Index(i pulumi.IntInput) SharedPrivateLinkResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedPrivateLinkResource {
		return vs[0].([]SharedPrivateLinkResource)[vs[1].(int)]
	}).(SharedPrivateLinkResourceOutput)
}

type SharedPrivateLinkResourceResponse struct {
	// The private link resource group id.
	GroupId *string `pulumi:"groupId"`
	// Unique name of the private link.
	Name *string `pulumi:"name"`
	// The resource id that private link links to.
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Request message.
	RequestMessage *string `pulumi:"requestMessage"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// SharedPrivateLinkResourceResponseInput is an input type that accepts SharedPrivateLinkResourceResponseArgs and SharedPrivateLinkResourceResponseOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceResponseInput` via:
//
//          SharedPrivateLinkResourceResponseArgs{...}
type SharedPrivateLinkResourceResponseInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceResponseOutput() SharedPrivateLinkResourceResponseOutput
	ToSharedPrivateLinkResourceResponseOutputWithContext(context.Context) SharedPrivateLinkResourceResponseOutput
}

type SharedPrivateLinkResourceResponseArgs struct {
	// The private link resource group id.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Unique name of the private link.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource id that private link links to.
	PrivateLinkResourceId pulumi.StringPtrInput `pulumi:"privateLinkResourceId"`
	// Request message.
	RequestMessage pulumi.StringPtrInput `pulumi:"requestMessage"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SharedPrivateLinkResourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (i SharedPrivateLinkResourceResponseArgs) ToSharedPrivateLinkResourceResponseOutput() SharedPrivateLinkResourceResponseOutput {
	return i.ToSharedPrivateLinkResourceResponseOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceResponseArgs) ToSharedPrivateLinkResourceResponseOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceResponseOutput)
}

// SharedPrivateLinkResourceResponseArrayInput is an input type that accepts SharedPrivateLinkResourceResponseArray and SharedPrivateLinkResourceResponseArrayOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceResponseArrayInput` via:
//
//          SharedPrivateLinkResourceResponseArray{ SharedPrivateLinkResourceResponseArgs{...} }
type SharedPrivateLinkResourceResponseArrayInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceResponseArrayOutput() SharedPrivateLinkResourceResponseArrayOutput
	ToSharedPrivateLinkResourceResponseArrayOutputWithContext(context.Context) SharedPrivateLinkResourceResponseArrayOutput
}

type SharedPrivateLinkResourceResponseArray []SharedPrivateLinkResourceResponseInput

func (SharedPrivateLinkResourceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (i SharedPrivateLinkResourceResponseArray) ToSharedPrivateLinkResourceResponseArrayOutput() SharedPrivateLinkResourceResponseArrayOutput {
	return i.ToSharedPrivateLinkResourceResponseArrayOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceResponseArray) ToSharedPrivateLinkResourceResponseArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceResponseArrayOutput)
}

type SharedPrivateLinkResourceResponseOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourceResponseOutput) ToSharedPrivateLinkResourceResponseOutput() SharedPrivateLinkResourceResponseOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseOutput) ToSharedPrivateLinkResourceResponseOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseOutput {
	return o
}

// The private link resource group id.
func (o SharedPrivateLinkResourceResponseOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Unique name of the private link.
func (o SharedPrivateLinkResourceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource id that private link links to.
func (o SharedPrivateLinkResourceResponseOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Request message.
func (o SharedPrivateLinkResourceResponseOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o SharedPrivateLinkResourceResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SharedPrivateLinkResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourceResponseArrayOutput) ToSharedPrivateLinkResourceResponseArrayOutput() SharedPrivateLinkResourceResponseArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseArrayOutput) ToSharedPrivateLinkResourceResponseArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseArrayOutput) Index(i pulumi.IntInput) SharedPrivateLinkResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedPrivateLinkResourceResponse {
		return vs[0].([]SharedPrivateLinkResourceResponse)[vs[1].(int)]
	}).(SharedPrivateLinkResourceResponseOutput)
}

type Sku struct {
	// Name of the sku
	Name *string `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

type SkuArgs struct {
	// Name of the sku
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// Name of the sku
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// Name of the sku
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

type SkuResponse struct {
	// Name of the sku
	Name *string `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier *string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

type SkuResponseArgs struct {
	// Name of the sku
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// Name of the sku
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// Name of the sku
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

type SparkMavenPackage struct {
	Artifact *string `pulumi:"artifact"`
	Group    *string `pulumi:"group"`
	Version  *string `pulumi:"version"`
}

// SparkMavenPackageInput is an input type that accepts SparkMavenPackageArgs and SparkMavenPackageOutput values.
// You can construct a concrete instance of `SparkMavenPackageInput` via:
//
//          SparkMavenPackageArgs{...}
type SparkMavenPackageInput interface {
	pulumi.Input

	ToSparkMavenPackageOutput() SparkMavenPackageOutput
	ToSparkMavenPackageOutputWithContext(context.Context) SparkMavenPackageOutput
}

type SparkMavenPackageArgs struct {
	Artifact pulumi.StringPtrInput `pulumi:"artifact"`
	Group    pulumi.StringPtrInput `pulumi:"group"`
	Version  pulumi.StringPtrInput `pulumi:"version"`
}

func (SparkMavenPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkMavenPackage)(nil)).Elem()
}

func (i SparkMavenPackageArgs) ToSparkMavenPackageOutput() SparkMavenPackageOutput {
	return i.ToSparkMavenPackageOutputWithContext(context.Background())
}

func (i SparkMavenPackageArgs) ToSparkMavenPackageOutputWithContext(ctx context.Context) SparkMavenPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkMavenPackageOutput)
}

// SparkMavenPackageArrayInput is an input type that accepts SparkMavenPackageArray and SparkMavenPackageArrayOutput values.
// You can construct a concrete instance of `SparkMavenPackageArrayInput` via:
//
//          SparkMavenPackageArray{ SparkMavenPackageArgs{...} }
type SparkMavenPackageArrayInput interface {
	pulumi.Input

	ToSparkMavenPackageArrayOutput() SparkMavenPackageArrayOutput
	ToSparkMavenPackageArrayOutputWithContext(context.Context) SparkMavenPackageArrayOutput
}

type SparkMavenPackageArray []SparkMavenPackageInput

func (SparkMavenPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SparkMavenPackage)(nil)).Elem()
}

func (i SparkMavenPackageArray) ToSparkMavenPackageArrayOutput() SparkMavenPackageArrayOutput {
	return i.ToSparkMavenPackageArrayOutputWithContext(context.Background())
}

func (i SparkMavenPackageArray) ToSparkMavenPackageArrayOutputWithContext(ctx context.Context) SparkMavenPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkMavenPackageArrayOutput)
}

type SparkMavenPackageOutput struct{ *pulumi.OutputState }

func (SparkMavenPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkMavenPackage)(nil)).Elem()
}

func (o SparkMavenPackageOutput) ToSparkMavenPackageOutput() SparkMavenPackageOutput {
	return o
}

func (o SparkMavenPackageOutput) ToSparkMavenPackageOutputWithContext(ctx context.Context) SparkMavenPackageOutput {
	return o
}

func (o SparkMavenPackageOutput) Artifact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkMavenPackage) *string { return v.Artifact }).(pulumi.StringPtrOutput)
}

func (o SparkMavenPackageOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkMavenPackage) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o SparkMavenPackageOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkMavenPackage) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SparkMavenPackageArrayOutput struct{ *pulumi.OutputState }

func (SparkMavenPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SparkMavenPackage)(nil)).Elem()
}

func (o SparkMavenPackageArrayOutput) ToSparkMavenPackageArrayOutput() SparkMavenPackageArrayOutput {
	return o
}

func (o SparkMavenPackageArrayOutput) ToSparkMavenPackageArrayOutputWithContext(ctx context.Context) SparkMavenPackageArrayOutput {
	return o
}

func (o SparkMavenPackageArrayOutput) Index(i pulumi.IntInput) SparkMavenPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SparkMavenPackage {
		return vs[0].([]SparkMavenPackage)[vs[1].(int)]
	}).(SparkMavenPackageOutput)
}

type SparkMavenPackageResponse struct {
	Artifact *string `pulumi:"artifact"`
	Group    *string `pulumi:"group"`
	Version  *string `pulumi:"version"`
}

// SparkMavenPackageResponseInput is an input type that accepts SparkMavenPackageResponseArgs and SparkMavenPackageResponseOutput values.
// You can construct a concrete instance of `SparkMavenPackageResponseInput` via:
//
//          SparkMavenPackageResponseArgs{...}
type SparkMavenPackageResponseInput interface {
	pulumi.Input

	ToSparkMavenPackageResponseOutput() SparkMavenPackageResponseOutput
	ToSparkMavenPackageResponseOutputWithContext(context.Context) SparkMavenPackageResponseOutput
}

type SparkMavenPackageResponseArgs struct {
	Artifact pulumi.StringPtrInput `pulumi:"artifact"`
	Group    pulumi.StringPtrInput `pulumi:"group"`
	Version  pulumi.StringPtrInput `pulumi:"version"`
}

func (SparkMavenPackageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkMavenPackageResponse)(nil)).Elem()
}

func (i SparkMavenPackageResponseArgs) ToSparkMavenPackageResponseOutput() SparkMavenPackageResponseOutput {
	return i.ToSparkMavenPackageResponseOutputWithContext(context.Background())
}

func (i SparkMavenPackageResponseArgs) ToSparkMavenPackageResponseOutputWithContext(ctx context.Context) SparkMavenPackageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkMavenPackageResponseOutput)
}

// SparkMavenPackageResponseArrayInput is an input type that accepts SparkMavenPackageResponseArray and SparkMavenPackageResponseArrayOutput values.
// You can construct a concrete instance of `SparkMavenPackageResponseArrayInput` via:
//
//          SparkMavenPackageResponseArray{ SparkMavenPackageResponseArgs{...} }
type SparkMavenPackageResponseArrayInput interface {
	pulumi.Input

	ToSparkMavenPackageResponseArrayOutput() SparkMavenPackageResponseArrayOutput
	ToSparkMavenPackageResponseArrayOutputWithContext(context.Context) SparkMavenPackageResponseArrayOutput
}

type SparkMavenPackageResponseArray []SparkMavenPackageResponseInput

func (SparkMavenPackageResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SparkMavenPackageResponse)(nil)).Elem()
}

func (i SparkMavenPackageResponseArray) ToSparkMavenPackageResponseArrayOutput() SparkMavenPackageResponseArrayOutput {
	return i.ToSparkMavenPackageResponseArrayOutputWithContext(context.Background())
}

func (i SparkMavenPackageResponseArray) ToSparkMavenPackageResponseArrayOutputWithContext(ctx context.Context) SparkMavenPackageResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkMavenPackageResponseArrayOutput)
}

type SparkMavenPackageResponseOutput struct{ *pulumi.OutputState }

func (SparkMavenPackageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkMavenPackageResponse)(nil)).Elem()
}

func (o SparkMavenPackageResponseOutput) ToSparkMavenPackageResponseOutput() SparkMavenPackageResponseOutput {
	return o
}

func (o SparkMavenPackageResponseOutput) ToSparkMavenPackageResponseOutputWithContext(ctx context.Context) SparkMavenPackageResponseOutput {
	return o
}

func (o SparkMavenPackageResponseOutput) Artifact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkMavenPackageResponse) *string { return v.Artifact }).(pulumi.StringPtrOutput)
}

func (o SparkMavenPackageResponseOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkMavenPackageResponse) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o SparkMavenPackageResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkMavenPackageResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SparkMavenPackageResponseArrayOutput struct{ *pulumi.OutputState }

func (SparkMavenPackageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SparkMavenPackageResponse)(nil)).Elem()
}

func (o SparkMavenPackageResponseArrayOutput) ToSparkMavenPackageResponseArrayOutput() SparkMavenPackageResponseArrayOutput {
	return o
}

func (o SparkMavenPackageResponseArrayOutput) ToSparkMavenPackageResponseArrayOutputWithContext(ctx context.Context) SparkMavenPackageResponseArrayOutput {
	return o
}

func (o SparkMavenPackageResponseArrayOutput) Index(i pulumi.IntInput) SparkMavenPackageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SparkMavenPackageResponse {
		return vs[0].([]SparkMavenPackageResponse)[vs[1].(int)]
	}).(SparkMavenPackageResponseOutput)
}

type SslConfiguration struct {
	// Cert data
	Cert *string `pulumi:"cert"`
	// CNAME of the cert
	Cname *string `pulumi:"cname"`
	// Key data
	Key *string `pulumi:"key"`
	// Enable or disable ssl for scoring
	Status *string `pulumi:"status"`
}

// SslConfigurationInput is an input type that accepts SslConfigurationArgs and SslConfigurationOutput values.
// You can construct a concrete instance of `SslConfigurationInput` via:
//
//          SslConfigurationArgs{...}
type SslConfigurationInput interface {
	pulumi.Input

	ToSslConfigurationOutput() SslConfigurationOutput
	ToSslConfigurationOutputWithContext(context.Context) SslConfigurationOutput
}

type SslConfigurationArgs struct {
	// Cert data
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// CNAME of the cert
	Cname pulumi.StringPtrInput `pulumi:"cname"`
	// Key data
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Enable or disable ssl for scoring
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SslConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfiguration)(nil)).Elem()
}

func (i SslConfigurationArgs) ToSslConfigurationOutput() SslConfigurationOutput {
	return i.ToSslConfigurationOutputWithContext(context.Background())
}

func (i SslConfigurationArgs) ToSslConfigurationOutputWithContext(ctx context.Context) SslConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationOutput)
}

func (i SslConfigurationArgs) ToSslConfigurationPtrOutput() SslConfigurationPtrOutput {
	return i.ToSslConfigurationPtrOutputWithContext(context.Background())
}

func (i SslConfigurationArgs) ToSslConfigurationPtrOutputWithContext(ctx context.Context) SslConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationOutput).ToSslConfigurationPtrOutputWithContext(ctx)
}

// SslConfigurationPtrInput is an input type that accepts SslConfigurationArgs, SslConfigurationPtr and SslConfigurationPtrOutput values.
// You can construct a concrete instance of `SslConfigurationPtrInput` via:
//
//          SslConfigurationArgs{...}
//
//  or:
//
//          nil
type SslConfigurationPtrInput interface {
	pulumi.Input

	ToSslConfigurationPtrOutput() SslConfigurationPtrOutput
	ToSslConfigurationPtrOutputWithContext(context.Context) SslConfigurationPtrOutput
}

type sslConfigurationPtrType SslConfigurationArgs

func SslConfigurationPtr(v *SslConfigurationArgs) SslConfigurationPtrInput {
	return (*sslConfigurationPtrType)(v)
}

func (*sslConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfiguration)(nil)).Elem()
}

func (i *sslConfigurationPtrType) ToSslConfigurationPtrOutput() SslConfigurationPtrOutput {
	return i.ToSslConfigurationPtrOutputWithContext(context.Background())
}

func (i *sslConfigurationPtrType) ToSslConfigurationPtrOutputWithContext(ctx context.Context) SslConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationPtrOutput)
}

type SslConfigurationOutput struct{ *pulumi.OutputState }

func (SslConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfiguration)(nil)).Elem()
}

func (o SslConfigurationOutput) ToSslConfigurationOutput() SslConfigurationOutput {
	return o
}

func (o SslConfigurationOutput) ToSslConfigurationOutputWithContext(ctx context.Context) SslConfigurationOutput {
	return o
}

func (o SslConfigurationOutput) ToSslConfigurationPtrOutput() SslConfigurationPtrOutput {
	return o.ToSslConfigurationPtrOutputWithContext(context.Background())
}

func (o SslConfigurationOutput) ToSslConfigurationPtrOutputWithContext(ctx context.Context) SslConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslConfiguration) *SslConfiguration {
		return &v
	}).(SslConfigurationPtrOutput)
}

// Cert data
func (o SslConfigurationOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// CNAME of the cert
func (o SslConfigurationOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

// Key data
func (o SslConfigurationOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Enable or disable ssl for scoring
func (o SslConfigurationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SslConfigurationPtrOutput struct{ *pulumi.OutputState }

func (SslConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfiguration)(nil)).Elem()
}

func (o SslConfigurationPtrOutput) ToSslConfigurationPtrOutput() SslConfigurationPtrOutput {
	return o
}

func (o SslConfigurationPtrOutput) ToSslConfigurationPtrOutputWithContext(ctx context.Context) SslConfigurationPtrOutput {
	return o
}

func (o SslConfigurationPtrOutput) Elem() SslConfigurationOutput {
	return o.ApplyT(func(v *SslConfiguration) SslConfiguration {
		if v != nil {
			return *v
		}
		var ret SslConfiguration
		return ret
	}).(SslConfigurationOutput)
}

// Cert data
func (o SslConfigurationPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// CNAME of the cert
func (o SslConfigurationPtrOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Cname
	}).(pulumi.StringPtrOutput)
}

// Key data
func (o SslConfigurationPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Enable or disable ssl for scoring
func (o SslConfigurationPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type SslConfigurationResponse struct {
	// Cert data
	Cert *string `pulumi:"cert"`
	// CNAME of the cert
	Cname *string `pulumi:"cname"`
	// Key data
	Key *string `pulumi:"key"`
	// Enable or disable ssl for scoring
	Status *string `pulumi:"status"`
}

// SslConfigurationResponseInput is an input type that accepts SslConfigurationResponseArgs and SslConfigurationResponseOutput values.
// You can construct a concrete instance of `SslConfigurationResponseInput` via:
//
//          SslConfigurationResponseArgs{...}
type SslConfigurationResponseInput interface {
	pulumi.Input

	ToSslConfigurationResponseOutput() SslConfigurationResponseOutput
	ToSslConfigurationResponseOutputWithContext(context.Context) SslConfigurationResponseOutput
}

type SslConfigurationResponseArgs struct {
	// Cert data
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// CNAME of the cert
	Cname pulumi.StringPtrInput `pulumi:"cname"`
	// Key data
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Enable or disable ssl for scoring
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SslConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigurationResponse)(nil)).Elem()
}

func (i SslConfigurationResponseArgs) ToSslConfigurationResponseOutput() SslConfigurationResponseOutput {
	return i.ToSslConfigurationResponseOutputWithContext(context.Background())
}

func (i SslConfigurationResponseArgs) ToSslConfigurationResponseOutputWithContext(ctx context.Context) SslConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationResponseOutput)
}

func (i SslConfigurationResponseArgs) ToSslConfigurationResponsePtrOutput() SslConfigurationResponsePtrOutput {
	return i.ToSslConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i SslConfigurationResponseArgs) ToSslConfigurationResponsePtrOutputWithContext(ctx context.Context) SslConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationResponseOutput).ToSslConfigurationResponsePtrOutputWithContext(ctx)
}

// SslConfigurationResponsePtrInput is an input type that accepts SslConfigurationResponseArgs, SslConfigurationResponsePtr and SslConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `SslConfigurationResponsePtrInput` via:
//
//          SslConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type SslConfigurationResponsePtrInput interface {
	pulumi.Input

	ToSslConfigurationResponsePtrOutput() SslConfigurationResponsePtrOutput
	ToSslConfigurationResponsePtrOutputWithContext(context.Context) SslConfigurationResponsePtrOutput
}

type sslConfigurationResponsePtrType SslConfigurationResponseArgs

func SslConfigurationResponsePtr(v *SslConfigurationResponseArgs) SslConfigurationResponsePtrInput {
	return (*sslConfigurationResponsePtrType)(v)
}

func (*sslConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfigurationResponse)(nil)).Elem()
}

func (i *sslConfigurationResponsePtrType) ToSslConfigurationResponsePtrOutput() SslConfigurationResponsePtrOutput {
	return i.ToSslConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *sslConfigurationResponsePtrType) ToSslConfigurationResponsePtrOutputWithContext(ctx context.Context) SslConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationResponsePtrOutput)
}

type SslConfigurationResponseOutput struct{ *pulumi.OutputState }

func (SslConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigurationResponse)(nil)).Elem()
}

func (o SslConfigurationResponseOutput) ToSslConfigurationResponseOutput() SslConfigurationResponseOutput {
	return o
}

func (o SslConfigurationResponseOutput) ToSslConfigurationResponseOutputWithContext(ctx context.Context) SslConfigurationResponseOutput {
	return o
}

func (o SslConfigurationResponseOutput) ToSslConfigurationResponsePtrOutput() SslConfigurationResponsePtrOutput {
	return o.ToSslConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o SslConfigurationResponseOutput) ToSslConfigurationResponsePtrOutputWithContext(ctx context.Context) SslConfigurationResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslConfigurationResponse) *SslConfigurationResponse {
		return &v
	}).(SslConfigurationResponsePtrOutput)
}

// Cert data
func (o SslConfigurationResponseOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// CNAME of the cert
func (o SslConfigurationResponseOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

// Key data
func (o SslConfigurationResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Enable or disable ssl for scoring
func (o SslConfigurationResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SslConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (SslConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfigurationResponse)(nil)).Elem()
}

func (o SslConfigurationResponsePtrOutput) ToSslConfigurationResponsePtrOutput() SslConfigurationResponsePtrOutput {
	return o
}

func (o SslConfigurationResponsePtrOutput) ToSslConfigurationResponsePtrOutputWithContext(ctx context.Context) SslConfigurationResponsePtrOutput {
	return o
}

func (o SslConfigurationResponsePtrOutput) Elem() SslConfigurationResponseOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) SslConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret SslConfigurationResponse
		return ret
	}).(SslConfigurationResponseOutput)
}

// Cert data
func (o SslConfigurationResponsePtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// CNAME of the cert
func (o SslConfigurationResponsePtrOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cname
	}).(pulumi.StringPtrOutput)
}

// Key data
func (o SslConfigurationResponsePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Enable or disable ssl for scoring
func (o SslConfigurationResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type StatusMessageResponse struct {
	// Service-defined message code.
	Code string `pulumi:"code"`
	// Time in UTC at which the message was created.
	CreatedTimeUtc string `pulumi:"createdTimeUtc"`
	// Severity level of the status message.
	Level string `pulumi:"level"`
	// A human-readable representation of the message code.
	Message string `pulumi:"message"`
}

// StatusMessageResponseInput is an input type that accepts StatusMessageResponseArgs and StatusMessageResponseOutput values.
// You can construct a concrete instance of `StatusMessageResponseInput` via:
//
//          StatusMessageResponseArgs{...}
type StatusMessageResponseInput interface {
	pulumi.Input

	ToStatusMessageResponseOutput() StatusMessageResponseOutput
	ToStatusMessageResponseOutputWithContext(context.Context) StatusMessageResponseOutput
}

type StatusMessageResponseArgs struct {
	// Service-defined message code.
	Code pulumi.StringInput `pulumi:"code"`
	// Time in UTC at which the message was created.
	CreatedTimeUtc pulumi.StringInput `pulumi:"createdTimeUtc"`
	// Severity level of the status message.
	Level pulumi.StringInput `pulumi:"level"`
	// A human-readable representation of the message code.
	Message pulumi.StringInput `pulumi:"message"`
}

func (StatusMessageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusMessageResponse)(nil)).Elem()
}

func (i StatusMessageResponseArgs) ToStatusMessageResponseOutput() StatusMessageResponseOutput {
	return i.ToStatusMessageResponseOutputWithContext(context.Background())
}

func (i StatusMessageResponseArgs) ToStatusMessageResponseOutputWithContext(ctx context.Context) StatusMessageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusMessageResponseOutput)
}

// StatusMessageResponseArrayInput is an input type that accepts StatusMessageResponseArray and StatusMessageResponseArrayOutput values.
// You can construct a concrete instance of `StatusMessageResponseArrayInput` via:
//
//          StatusMessageResponseArray{ StatusMessageResponseArgs{...} }
type StatusMessageResponseArrayInput interface {
	pulumi.Input

	ToStatusMessageResponseArrayOutput() StatusMessageResponseArrayOutput
	ToStatusMessageResponseArrayOutputWithContext(context.Context) StatusMessageResponseArrayOutput
}

type StatusMessageResponseArray []StatusMessageResponseInput

func (StatusMessageResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusMessageResponse)(nil)).Elem()
}

func (i StatusMessageResponseArray) ToStatusMessageResponseArrayOutput() StatusMessageResponseArrayOutput {
	return i.ToStatusMessageResponseArrayOutputWithContext(context.Background())
}

func (i StatusMessageResponseArray) ToStatusMessageResponseArrayOutputWithContext(ctx context.Context) StatusMessageResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusMessageResponseArrayOutput)
}

type StatusMessageResponseOutput struct{ *pulumi.OutputState }

func (StatusMessageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusMessageResponse)(nil)).Elem()
}

func (o StatusMessageResponseOutput) ToStatusMessageResponseOutput() StatusMessageResponseOutput {
	return o
}

func (o StatusMessageResponseOutput) ToStatusMessageResponseOutputWithContext(ctx context.Context) StatusMessageResponseOutput {
	return o
}

// Service-defined message code.
func (o StatusMessageResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v StatusMessageResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Time in UTC at which the message was created.
func (o StatusMessageResponseOutput) CreatedTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v StatusMessageResponse) string { return v.CreatedTimeUtc }).(pulumi.StringOutput)
}

// Severity level of the status message.
func (o StatusMessageResponseOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v StatusMessageResponse) string { return v.Level }).(pulumi.StringOutput)
}

// A human-readable representation of the message code.
func (o StatusMessageResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v StatusMessageResponse) string { return v.Message }).(pulumi.StringOutput)
}

type StatusMessageResponseArrayOutput struct{ *pulumi.OutputState }

func (StatusMessageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusMessageResponse)(nil)).Elem()
}

func (o StatusMessageResponseArrayOutput) ToStatusMessageResponseArrayOutput() StatusMessageResponseArrayOutput {
	return o
}

func (o StatusMessageResponseArrayOutput) ToStatusMessageResponseArrayOutputWithContext(ctx context.Context) StatusMessageResponseArrayOutput {
	return o
}

func (o StatusMessageResponseArrayOutput) Index(i pulumi.IntInput) StatusMessageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusMessageResponse {
		return vs[0].([]StatusMessageResponse)[vs[1].(int)]
	}).(StatusMessageResponseOutput)
}

type SweepJob struct {
	// Type of the hyperparameter sampling algorithms
	Algorithm string `pulumi:"algorithm"`
	// Compute binding for the job.
	Compute ComputeConfiguration `pulumi:"compute"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Early termination policies enable canceling poor-performing runs before they complete.
	EarlyTermination interface{} `pulumi:"earlyTermination"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName *string `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity or null.
	// Defaults to AmlToken if null.
	Identity interface{} `pulumi:"identity"`
	// Enum to determine the type of job.
	// Expected value is 'Sweep'.
	JobType string `pulumi:"jobType"`
	// An upper bound on the number of trials performed in parallel.
	MaxConcurrentTrials *int `pulumi:"maxConcurrentTrials"`
	// An upper bound on the number of trials to perform.
	MaxTotalTrials *int `pulumi:"maxTotalTrials"`
	// Optimization objective.
	Objective Objective `pulumi:"objective"`
	// Job priority for scheduling policy. Only applies to AMLCompute.
	// Private preview feature and only available to users on the allow list.
	Priority *int `pulumi:"priority"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter
	SearchSpace map[string]interface{} `pulumi:"searchSpace"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
	// The total timeout in ISO 8601 format. Only supports duration with precision as low as Minutes.
	Timeout *string `pulumi:"timeout"`
	// Trial component definition.
	Trial *TrialComponent `pulumi:"trial"`
}

// SweepJobInput is an input type that accepts SweepJobArgs and SweepJobOutput values.
// You can construct a concrete instance of `SweepJobInput` via:
//
//          SweepJobArgs{...}
type SweepJobInput interface {
	pulumi.Input

	ToSweepJobOutput() SweepJobOutput
	ToSweepJobOutputWithContext(context.Context) SweepJobOutput
}

type SweepJobArgs struct {
	// Type of the hyperparameter sampling algorithms
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// Compute binding for the job.
	Compute ComputeConfigurationInput `pulumi:"compute"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Early termination policies enable canceling poor-performing runs before they complete.
	EarlyTermination pulumi.Input `pulumi:"earlyTermination"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName pulumi.StringPtrInput `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity or null.
	// Defaults to AmlToken if null.
	Identity pulumi.Input `pulumi:"identity"`
	// Enum to determine the type of job.
	// Expected value is 'Sweep'.
	JobType pulumi.StringInput `pulumi:"jobType"`
	// An upper bound on the number of trials performed in parallel.
	MaxConcurrentTrials pulumi.IntPtrInput `pulumi:"maxConcurrentTrials"`
	// An upper bound on the number of trials to perform.
	MaxTotalTrials pulumi.IntPtrInput `pulumi:"maxTotalTrials"`
	// Optimization objective.
	Objective ObjectiveInput `pulumi:"objective"`
	// Job priority for scheduling policy. Only applies to AMLCompute.
	// Private preview feature and only available to users on the allow list.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter
	SearchSpace pulumi.MapInput `pulumi:"searchSpace"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The total timeout in ISO 8601 format. Only supports duration with precision as low as Minutes.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
	// Trial component definition.
	Trial TrialComponentPtrInput `pulumi:"trial"`
}

func (SweepJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SweepJob)(nil)).Elem()
}

func (i SweepJobArgs) ToSweepJobOutput() SweepJobOutput {
	return i.ToSweepJobOutputWithContext(context.Background())
}

func (i SweepJobArgs) ToSweepJobOutputWithContext(ctx context.Context) SweepJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SweepJobOutput)
}

type SweepJobOutput struct{ *pulumi.OutputState }

func (SweepJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SweepJob)(nil)).Elem()
}

func (o SweepJobOutput) ToSweepJobOutput() SweepJobOutput {
	return o
}

func (o SweepJobOutput) ToSweepJobOutputWithContext(ctx context.Context) SweepJobOutput {
	return o
}

// Type of the hyperparameter sampling algorithms
func (o SweepJobOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v SweepJob) string { return v.Algorithm }).(pulumi.StringOutput)
}

// Compute binding for the job.
func (o SweepJobOutput) Compute() ComputeConfigurationOutput {
	return o.ApplyT(func(v SweepJob) ComputeConfiguration { return v.Compute }).(ComputeConfigurationOutput)
}

// The asset description text.
func (o SweepJobOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SweepJob) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Early termination policies enable canceling poor-performing runs before they complete.
func (o SweepJobOutput) EarlyTermination() pulumi.AnyOutput {
	return o.ApplyT(func(v SweepJob) interface{} { return v.EarlyTermination }).(pulumi.AnyOutput)
}

// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
func (o SweepJobOutput) ExperimentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SweepJob) *string { return v.ExperimentName }).(pulumi.StringPtrOutput)
}

// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity or null.
// Defaults to AmlToken if null.
func (o SweepJobOutput) Identity() pulumi.AnyOutput {
	return o.ApplyT(func(v SweepJob) interface{} { return v.Identity }).(pulumi.AnyOutput)
}

// Enum to determine the type of job.
// Expected value is 'Sweep'.
func (o SweepJobOutput) JobType() pulumi.StringOutput {
	return o.ApplyT(func(v SweepJob) string { return v.JobType }).(pulumi.StringOutput)
}

// An upper bound on the number of trials performed in parallel.
func (o SweepJobOutput) MaxConcurrentTrials() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SweepJob) *int { return v.MaxConcurrentTrials }).(pulumi.IntPtrOutput)
}

// An upper bound on the number of trials to perform.
func (o SweepJobOutput) MaxTotalTrials() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SweepJob) *int { return v.MaxTotalTrials }).(pulumi.IntPtrOutput)
}

// Optimization objective.
func (o SweepJobOutput) Objective() ObjectiveOutput {
	return o.ApplyT(func(v SweepJob) Objective { return v.Objective }).(ObjectiveOutput)
}

// Job priority for scheduling policy. Only applies to AMLCompute.
// Private preview feature and only available to users on the allow list.
func (o SweepJobOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SweepJob) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The asset property dictionary.
func (o SweepJobOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v SweepJob) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter
func (o SweepJobOutput) SearchSpace() pulumi.MapOutput {
	return o.ApplyT(func(v SweepJob) map[string]interface{} { return v.SearchSpace }).(pulumi.MapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o SweepJobOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SweepJob) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The total timeout in ISO 8601 format. Only supports duration with precision as low as Minutes.
func (o SweepJobOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SweepJob) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Trial component definition.
func (o SweepJobOutput) Trial() TrialComponentPtrOutput {
	return o.ApplyT(func(v SweepJob) *TrialComponent { return v.Trial }).(TrialComponentPtrOutput)
}

type SweepJobResponse struct {
	// Type of the hyperparameter sampling algorithms
	Algorithm string `pulumi:"algorithm"`
	// Compute binding for the job.
	Compute ComputeConfigurationResponse `pulumi:"compute"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Early termination policies enable canceling poor-performing runs before they complete.
	EarlyTermination interface{} `pulumi:"earlyTermination"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName *string `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity or null.
	// Defaults to AmlToken if null.
	Identity interface{} `pulumi:"identity"`
	// List of JobEndpoints.
	// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
	InteractionEndpoints map[string]JobEndpointResponse `pulumi:"interactionEndpoints"`
	// Enum to determine the type of job.
	// Expected value is 'Sweep'.
	JobType string `pulumi:"jobType"`
	// An upper bound on the number of trials performed in parallel.
	MaxConcurrentTrials *int `pulumi:"maxConcurrentTrials"`
	// An upper bound on the number of trials to perform.
	MaxTotalTrials *int `pulumi:"maxTotalTrials"`
	// Optimization objective.
	Objective ObjectiveResponse `pulumi:"objective"`
	// Location of the job output logs and artifacts.
	Output JobOutputResponse `pulumi:"output"`
	// Job priority for scheduling policy. Only applies to AMLCompute.
	// Private preview feature and only available to users on the allow list.
	Priority *int `pulumi:"priority"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Specifies the job provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter
	SearchSpace map[string]interface{} `pulumi:"searchSpace"`
	// The status of a job.
	Status string `pulumi:"status"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
	// The total timeout in ISO 8601 format. Only supports duration with precision as low as Minutes.
	Timeout *string `pulumi:"timeout"`
	// Trial component definition.
	Trial *TrialComponentResponse `pulumi:"trial"`
}

// SweepJobResponseInput is an input type that accepts SweepJobResponseArgs and SweepJobResponseOutput values.
// You can construct a concrete instance of `SweepJobResponseInput` via:
//
//          SweepJobResponseArgs{...}
type SweepJobResponseInput interface {
	pulumi.Input

	ToSweepJobResponseOutput() SweepJobResponseOutput
	ToSweepJobResponseOutputWithContext(context.Context) SweepJobResponseOutput
}

type SweepJobResponseArgs struct {
	// Type of the hyperparameter sampling algorithms
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// Compute binding for the job.
	Compute ComputeConfigurationResponseInput `pulumi:"compute"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Early termination policies enable canceling poor-performing runs before they complete.
	EarlyTermination pulumi.Input `pulumi:"earlyTermination"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName pulumi.StringPtrInput `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity or null.
	// Defaults to AmlToken if null.
	Identity pulumi.Input `pulumi:"identity"`
	// List of JobEndpoints.
	// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
	InteractionEndpoints JobEndpointResponseMapInput `pulumi:"interactionEndpoints"`
	// Enum to determine the type of job.
	// Expected value is 'Sweep'.
	JobType pulumi.StringInput `pulumi:"jobType"`
	// An upper bound on the number of trials performed in parallel.
	MaxConcurrentTrials pulumi.IntPtrInput `pulumi:"maxConcurrentTrials"`
	// An upper bound on the number of trials to perform.
	MaxTotalTrials pulumi.IntPtrInput `pulumi:"maxTotalTrials"`
	// Optimization objective.
	Objective ObjectiveResponseInput `pulumi:"objective"`
	// Location of the job output logs and artifacts.
	Output JobOutputResponseInput `pulumi:"output"`
	// Job priority for scheduling policy. Only applies to AMLCompute.
	// Private preview feature and only available to users on the allow list.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Specifies the job provisioning state.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter
	SearchSpace pulumi.MapInput `pulumi:"searchSpace"`
	// The status of a job.
	Status pulumi.StringInput `pulumi:"status"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The total timeout in ISO 8601 format. Only supports duration with precision as low as Minutes.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
	// Trial component definition.
	Trial TrialComponentResponsePtrInput `pulumi:"trial"`
}

func (SweepJobResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SweepJobResponse)(nil)).Elem()
}

func (i SweepJobResponseArgs) ToSweepJobResponseOutput() SweepJobResponseOutput {
	return i.ToSweepJobResponseOutputWithContext(context.Background())
}

func (i SweepJobResponseArgs) ToSweepJobResponseOutputWithContext(ctx context.Context) SweepJobResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SweepJobResponseOutput)
}

type SweepJobResponseOutput struct{ *pulumi.OutputState }

func (SweepJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SweepJobResponse)(nil)).Elem()
}

func (o SweepJobResponseOutput) ToSweepJobResponseOutput() SweepJobResponseOutput {
	return o
}

func (o SweepJobResponseOutput) ToSweepJobResponseOutputWithContext(ctx context.Context) SweepJobResponseOutput {
	return o
}

// Type of the hyperparameter sampling algorithms
func (o SweepJobResponseOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v SweepJobResponse) string { return v.Algorithm }).(pulumi.StringOutput)
}

// Compute binding for the job.
func (o SweepJobResponseOutput) Compute() ComputeConfigurationResponseOutput {
	return o.ApplyT(func(v SweepJobResponse) ComputeConfigurationResponse { return v.Compute }).(ComputeConfigurationResponseOutput)
}

// The asset description text.
func (o SweepJobResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SweepJobResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Early termination policies enable canceling poor-performing runs before they complete.
func (o SweepJobResponseOutput) EarlyTermination() pulumi.AnyOutput {
	return o.ApplyT(func(v SweepJobResponse) interface{} { return v.EarlyTermination }).(pulumi.AnyOutput)
}

// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
func (o SweepJobResponseOutput) ExperimentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SweepJobResponse) *string { return v.ExperimentName }).(pulumi.StringPtrOutput)
}

// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity or null.
// Defaults to AmlToken if null.
func (o SweepJobResponseOutput) Identity() pulumi.AnyOutput {
	return o.ApplyT(func(v SweepJobResponse) interface{} { return v.Identity }).(pulumi.AnyOutput)
}

// List of JobEndpoints.
// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
func (o SweepJobResponseOutput) InteractionEndpoints() JobEndpointResponseMapOutput {
	return o.ApplyT(func(v SweepJobResponse) map[string]JobEndpointResponse { return v.InteractionEndpoints }).(JobEndpointResponseMapOutput)
}

// Enum to determine the type of job.
// Expected value is 'Sweep'.
func (o SweepJobResponseOutput) JobType() pulumi.StringOutput {
	return o.ApplyT(func(v SweepJobResponse) string { return v.JobType }).(pulumi.StringOutput)
}

// An upper bound on the number of trials performed in parallel.
func (o SweepJobResponseOutput) MaxConcurrentTrials() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SweepJobResponse) *int { return v.MaxConcurrentTrials }).(pulumi.IntPtrOutput)
}

// An upper bound on the number of trials to perform.
func (o SweepJobResponseOutput) MaxTotalTrials() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SweepJobResponse) *int { return v.MaxTotalTrials }).(pulumi.IntPtrOutput)
}

// Optimization objective.
func (o SweepJobResponseOutput) Objective() ObjectiveResponseOutput {
	return o.ApplyT(func(v SweepJobResponse) ObjectiveResponse { return v.Objective }).(ObjectiveResponseOutput)
}

// Location of the job output logs and artifacts.
func (o SweepJobResponseOutput) Output() JobOutputResponseOutput {
	return o.ApplyT(func(v SweepJobResponse) JobOutputResponse { return v.Output }).(JobOutputResponseOutput)
}

// Job priority for scheduling policy. Only applies to AMLCompute.
// Private preview feature and only available to users on the allow list.
func (o SweepJobResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SweepJobResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The asset property dictionary.
func (o SweepJobResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v SweepJobResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Specifies the job provisioning state.
func (o SweepJobResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SweepJobResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter
func (o SweepJobResponseOutput) SearchSpace() pulumi.MapOutput {
	return o.ApplyT(func(v SweepJobResponse) map[string]interface{} { return v.SearchSpace }).(pulumi.MapOutput)
}

// The status of a job.
func (o SweepJobResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SweepJobResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o SweepJobResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SweepJobResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The total timeout in ISO 8601 format. Only supports duration with precision as low as Minutes.
func (o SweepJobResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SweepJobResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Trial component definition.
func (o SweepJobResponseOutput) Trial() TrialComponentResponsePtrOutput {
	return o.ApplyT(func(v SweepJobResponse) *TrialComponentResponse { return v.Trial }).(TrialComponentResponsePtrOutput)
}

type SystemDataResponse struct {
	// The timestamp of resource creation (UTC)
	CreatedAt *string `pulumi:"createdAt"`
	// An identifier for the identity that created the resource
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// An identifier for the identity that last modified the resource
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// SystemDataResponseInput is an input type that accepts SystemDataResponseArgs and SystemDataResponseOutput values.
// You can construct a concrete instance of `SystemDataResponseInput` via:
//
//          SystemDataResponseArgs{...}
type SystemDataResponseInput interface {
	pulumi.Input

	ToSystemDataResponseOutput() SystemDataResponseOutput
	ToSystemDataResponseOutputWithContext(context.Context) SystemDataResponseOutput
}

type SystemDataResponseArgs struct {
	// The timestamp of resource creation (UTC)
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// An identifier for the identity that created the resource
	CreatedBy pulumi.StringPtrInput `pulumi:"createdBy"`
	// The type of identity that created the resource
	CreatedByType pulumi.StringPtrInput `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt pulumi.StringPtrInput `pulumi:"lastModifiedAt"`
	// An identifier for the identity that last modified the resource
	LastModifiedBy pulumi.StringPtrInput `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource
	LastModifiedByType pulumi.StringPtrInput `pulumi:"lastModifiedByType"`
}

func (SystemDataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return i.ToSystemDataResponseOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput)
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput).ToSystemDataResponsePtrOutputWithContext(ctx)
}

// SystemDataResponsePtrInput is an input type that accepts SystemDataResponseArgs, SystemDataResponsePtr and SystemDataResponsePtrOutput values.
// You can construct a concrete instance of `SystemDataResponsePtrInput` via:
//
//          SystemDataResponseArgs{...}
//
//  or:
//
//          nil
type SystemDataResponsePtrInput interface {
	pulumi.Input

	ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput
	ToSystemDataResponsePtrOutputWithContext(context.Context) SystemDataResponsePtrOutput
}

type systemDataResponsePtrType SystemDataResponseArgs

func SystemDataResponsePtr(v *SystemDataResponseArgs) SystemDataResponsePtrInput {
	return (*systemDataResponsePtrType)(v)
}

func (*systemDataResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponsePtrOutput)
}

type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemDataResponse) *SystemDataResponse {
		return &v
	}).(SystemDataResponsePtrOutput)
}

// The timestamp of resource creation (UTC)
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// An identifier for the identity that created the resource
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// An identifier for the identity that last modified the resource
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

type SystemDataResponsePtrOutput struct{ *pulumi.OutputState }

func (SystemDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) Elem() SystemDataResponseOutput {
	return o.ApplyT(func(v *SystemDataResponse) SystemDataResponse {
		if v != nil {
			return *v
		}
		var ret SystemDataResponse
		return ret
	}).(SystemDataResponseOutput)
}

// The timestamp of resource creation (UTC)
func (o SystemDataResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// An identifier for the identity that created the resource
func (o SystemDataResponsePtrOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedBy
	}).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource
func (o SystemDataResponsePtrOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByType
	}).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponsePtrOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedAt
	}).(pulumi.StringPtrOutput)
}

// An identifier for the identity that last modified the resource
func (o SystemDataResponsePtrOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedBy
	}).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource
func (o SystemDataResponsePtrOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedByType
	}).(pulumi.StringPtrOutput)
}

type SystemServiceResponse struct {
	// Public IP address
	PublicIpAddress string `pulumi:"publicIpAddress"`
	// The type of this system service.
	SystemServiceType string `pulumi:"systemServiceType"`
	// The version for this type.
	Version string `pulumi:"version"`
}

// SystemServiceResponseInput is an input type that accepts SystemServiceResponseArgs and SystemServiceResponseOutput values.
// You can construct a concrete instance of `SystemServiceResponseInput` via:
//
//          SystemServiceResponseArgs{...}
type SystemServiceResponseInput interface {
	pulumi.Input

	ToSystemServiceResponseOutput() SystemServiceResponseOutput
	ToSystemServiceResponseOutputWithContext(context.Context) SystemServiceResponseOutput
}

type SystemServiceResponseArgs struct {
	// Public IP address
	PublicIpAddress pulumi.StringInput `pulumi:"publicIpAddress"`
	// The type of this system service.
	SystemServiceType pulumi.StringInput `pulumi:"systemServiceType"`
	// The version for this type.
	Version pulumi.StringInput `pulumi:"version"`
}

func (SystemServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemServiceResponse)(nil)).Elem()
}

func (i SystemServiceResponseArgs) ToSystemServiceResponseOutput() SystemServiceResponseOutput {
	return i.ToSystemServiceResponseOutputWithContext(context.Background())
}

func (i SystemServiceResponseArgs) ToSystemServiceResponseOutputWithContext(ctx context.Context) SystemServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemServiceResponseOutput)
}

// SystemServiceResponseArrayInput is an input type that accepts SystemServiceResponseArray and SystemServiceResponseArrayOutput values.
// You can construct a concrete instance of `SystemServiceResponseArrayInput` via:
//
//          SystemServiceResponseArray{ SystemServiceResponseArgs{...} }
type SystemServiceResponseArrayInput interface {
	pulumi.Input

	ToSystemServiceResponseArrayOutput() SystemServiceResponseArrayOutput
	ToSystemServiceResponseArrayOutputWithContext(context.Context) SystemServiceResponseArrayOutput
}

type SystemServiceResponseArray []SystemServiceResponseInput

func (SystemServiceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemServiceResponse)(nil)).Elem()
}

func (i SystemServiceResponseArray) ToSystemServiceResponseArrayOutput() SystemServiceResponseArrayOutput {
	return i.ToSystemServiceResponseArrayOutputWithContext(context.Background())
}

func (i SystemServiceResponseArray) ToSystemServiceResponseArrayOutputWithContext(ctx context.Context) SystemServiceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemServiceResponseArrayOutput)
}

type SystemServiceResponseOutput struct{ *pulumi.OutputState }

func (SystemServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemServiceResponse)(nil)).Elem()
}

func (o SystemServiceResponseOutput) ToSystemServiceResponseOutput() SystemServiceResponseOutput {
	return o
}

func (o SystemServiceResponseOutput) ToSystemServiceResponseOutputWithContext(ctx context.Context) SystemServiceResponseOutput {
	return o
}

// Public IP address
func (o SystemServiceResponseOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v SystemServiceResponse) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

// The type of this system service.
func (o SystemServiceResponseOutput) SystemServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v SystemServiceResponse) string { return v.SystemServiceType }).(pulumi.StringOutput)
}

// The version for this type.
func (o SystemServiceResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v SystemServiceResponse) string { return v.Version }).(pulumi.StringOutput)
}

type SystemServiceResponseArrayOutput struct{ *pulumi.OutputState }

func (SystemServiceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemServiceResponse)(nil)).Elem()
}

func (o SystemServiceResponseArrayOutput) ToSystemServiceResponseArrayOutput() SystemServiceResponseArrayOutput {
	return o
}

func (o SystemServiceResponseArrayOutput) ToSystemServiceResponseArrayOutputWithContext(ctx context.Context) SystemServiceResponseArrayOutput {
	return o
}

func (o SystemServiceResponseArrayOutput) Index(i pulumi.IntInput) SystemServiceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemServiceResponse {
		return vs[0].([]SystemServiceResponse)[vs[1].(int)]
	}).(SystemServiceResponseOutput)
}

type TensorFlow struct {
	// Enum to determine the job distribution type.
	// Expected value is 'TensorFlow'.
	DistributionType string `pulumi:"distributionType"`
	// Number of parameter server tasks.
	ParameterServerCount *int `pulumi:"parameterServerCount"`
	// Number of workers. Overwrites the node count in compute binding.
	WorkerCount *int `pulumi:"workerCount"`
}

// TensorFlowInput is an input type that accepts TensorFlowArgs and TensorFlowOutput values.
// You can construct a concrete instance of `TensorFlowInput` via:
//
//          TensorFlowArgs{...}
type TensorFlowInput interface {
	pulumi.Input

	ToTensorFlowOutput() TensorFlowOutput
	ToTensorFlowOutputWithContext(context.Context) TensorFlowOutput
}

type TensorFlowArgs struct {
	// Enum to determine the job distribution type.
	// Expected value is 'TensorFlow'.
	DistributionType pulumi.StringInput `pulumi:"distributionType"`
	// Number of parameter server tasks.
	ParameterServerCount pulumi.IntPtrInput `pulumi:"parameterServerCount"`
	// Number of workers. Overwrites the node count in compute binding.
	WorkerCount pulumi.IntPtrInput `pulumi:"workerCount"`
}

func (TensorFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TensorFlow)(nil)).Elem()
}

func (i TensorFlowArgs) ToTensorFlowOutput() TensorFlowOutput {
	return i.ToTensorFlowOutputWithContext(context.Background())
}

func (i TensorFlowArgs) ToTensorFlowOutputWithContext(ctx context.Context) TensorFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TensorFlowOutput)
}

type TensorFlowOutput struct{ *pulumi.OutputState }

func (TensorFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TensorFlow)(nil)).Elem()
}

func (o TensorFlowOutput) ToTensorFlowOutput() TensorFlowOutput {
	return o
}

func (o TensorFlowOutput) ToTensorFlowOutputWithContext(ctx context.Context) TensorFlowOutput {
	return o
}

// Enum to determine the job distribution type.
// Expected value is 'TensorFlow'.
func (o TensorFlowOutput) DistributionType() pulumi.StringOutput {
	return o.ApplyT(func(v TensorFlow) string { return v.DistributionType }).(pulumi.StringOutput)
}

// Number of parameter server tasks.
func (o TensorFlowOutput) ParameterServerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TensorFlow) *int { return v.ParameterServerCount }).(pulumi.IntPtrOutput)
}

// Number of workers. Overwrites the node count in compute binding.
func (o TensorFlowOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TensorFlow) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

type TensorFlowResponse struct {
	// Enum to determine the job distribution type.
	// Expected value is 'TensorFlow'.
	DistributionType string `pulumi:"distributionType"`
	// Number of parameter server tasks.
	ParameterServerCount *int `pulumi:"parameterServerCount"`
	// Number of workers. Overwrites the node count in compute binding.
	WorkerCount *int `pulumi:"workerCount"`
}

// TensorFlowResponseInput is an input type that accepts TensorFlowResponseArgs and TensorFlowResponseOutput values.
// You can construct a concrete instance of `TensorFlowResponseInput` via:
//
//          TensorFlowResponseArgs{...}
type TensorFlowResponseInput interface {
	pulumi.Input

	ToTensorFlowResponseOutput() TensorFlowResponseOutput
	ToTensorFlowResponseOutputWithContext(context.Context) TensorFlowResponseOutput
}

type TensorFlowResponseArgs struct {
	// Enum to determine the job distribution type.
	// Expected value is 'TensorFlow'.
	DistributionType pulumi.StringInput `pulumi:"distributionType"`
	// Number of parameter server tasks.
	ParameterServerCount pulumi.IntPtrInput `pulumi:"parameterServerCount"`
	// Number of workers. Overwrites the node count in compute binding.
	WorkerCount pulumi.IntPtrInput `pulumi:"workerCount"`
}

func (TensorFlowResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TensorFlowResponse)(nil)).Elem()
}

func (i TensorFlowResponseArgs) ToTensorFlowResponseOutput() TensorFlowResponseOutput {
	return i.ToTensorFlowResponseOutputWithContext(context.Background())
}

func (i TensorFlowResponseArgs) ToTensorFlowResponseOutputWithContext(ctx context.Context) TensorFlowResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TensorFlowResponseOutput)
}

type TensorFlowResponseOutput struct{ *pulumi.OutputState }

func (TensorFlowResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TensorFlowResponse)(nil)).Elem()
}

func (o TensorFlowResponseOutput) ToTensorFlowResponseOutput() TensorFlowResponseOutput {
	return o
}

func (o TensorFlowResponseOutput) ToTensorFlowResponseOutputWithContext(ctx context.Context) TensorFlowResponseOutput {
	return o
}

// Enum to determine the job distribution type.
// Expected value is 'TensorFlow'.
func (o TensorFlowResponseOutput) DistributionType() pulumi.StringOutput {
	return o.ApplyT(func(v TensorFlowResponse) string { return v.DistributionType }).(pulumi.StringOutput)
}

// Number of parameter server tasks.
func (o TensorFlowResponseOutput) ParameterServerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TensorFlowResponse) *int { return v.ParameterServerCount }).(pulumi.IntPtrOutput)
}

// Number of workers. Overwrites the node count in compute binding.
func (o TensorFlowResponseOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TensorFlowResponse) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

type TrialComponent struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// The command to execute on startup of the job. eg. "python train.py"
	Command string `pulumi:"command"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution interface{} `pulumi:"distribution"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Mapping of input data bindings used in the job.
	InputDataBindings map[string]InputDataBinding `pulumi:"inputDataBindings"`
	// Mapping of output data bindings used in the job.
	OutputDataBindings map[string]OutputDataBinding `pulumi:"outputDataBindings"`
	// The max run duration in ISO 8601 format, after which the trial component will be cancelled.
	// Only supports duration with precision as low as Seconds.
	Timeout *string `pulumi:"timeout"`
}

// TrialComponentInput is an input type that accepts TrialComponentArgs and TrialComponentOutput values.
// You can construct a concrete instance of `TrialComponentInput` via:
//
//          TrialComponentArgs{...}
type TrialComponentInput interface {
	pulumi.Input

	ToTrialComponentOutput() TrialComponentOutput
	ToTrialComponentOutputWithContext(context.Context) TrialComponentOutput
}

type TrialComponentArgs struct {
	// ARM resource ID of the code asset.
	CodeId pulumi.StringPtrInput `pulumi:"codeId"`
	// The command to execute on startup of the job. eg. "python train.py"
	Command pulumi.StringInput `pulumi:"command"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution pulumi.Input `pulumi:"distribution"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// Mapping of input data bindings used in the job.
	InputDataBindings InputDataBindingMapInput `pulumi:"inputDataBindings"`
	// Mapping of output data bindings used in the job.
	OutputDataBindings OutputDataBindingMapInput `pulumi:"outputDataBindings"`
	// The max run duration in ISO 8601 format, after which the trial component will be cancelled.
	// Only supports duration with precision as low as Seconds.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (TrialComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrialComponent)(nil)).Elem()
}

func (i TrialComponentArgs) ToTrialComponentOutput() TrialComponentOutput {
	return i.ToTrialComponentOutputWithContext(context.Background())
}

func (i TrialComponentArgs) ToTrialComponentOutputWithContext(ctx context.Context) TrialComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrialComponentOutput)
}

func (i TrialComponentArgs) ToTrialComponentPtrOutput() TrialComponentPtrOutput {
	return i.ToTrialComponentPtrOutputWithContext(context.Background())
}

func (i TrialComponentArgs) ToTrialComponentPtrOutputWithContext(ctx context.Context) TrialComponentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrialComponentOutput).ToTrialComponentPtrOutputWithContext(ctx)
}

// TrialComponentPtrInput is an input type that accepts TrialComponentArgs, TrialComponentPtr and TrialComponentPtrOutput values.
// You can construct a concrete instance of `TrialComponentPtrInput` via:
//
//          TrialComponentArgs{...}
//
//  or:
//
//          nil
type TrialComponentPtrInput interface {
	pulumi.Input

	ToTrialComponentPtrOutput() TrialComponentPtrOutput
	ToTrialComponentPtrOutputWithContext(context.Context) TrialComponentPtrOutput
}

type trialComponentPtrType TrialComponentArgs

func TrialComponentPtr(v *TrialComponentArgs) TrialComponentPtrInput {
	return (*trialComponentPtrType)(v)
}

func (*trialComponentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrialComponent)(nil)).Elem()
}

func (i *trialComponentPtrType) ToTrialComponentPtrOutput() TrialComponentPtrOutput {
	return i.ToTrialComponentPtrOutputWithContext(context.Background())
}

func (i *trialComponentPtrType) ToTrialComponentPtrOutputWithContext(ctx context.Context) TrialComponentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrialComponentPtrOutput)
}

type TrialComponentOutput struct{ *pulumi.OutputState }

func (TrialComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrialComponent)(nil)).Elem()
}

func (o TrialComponentOutput) ToTrialComponentOutput() TrialComponentOutput {
	return o
}

func (o TrialComponentOutput) ToTrialComponentOutputWithContext(ctx context.Context) TrialComponentOutput {
	return o
}

func (o TrialComponentOutput) ToTrialComponentPtrOutput() TrialComponentPtrOutput {
	return o.ToTrialComponentPtrOutputWithContext(context.Background())
}

func (o TrialComponentOutput) ToTrialComponentPtrOutputWithContext(ctx context.Context) TrialComponentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrialComponent) *TrialComponent {
		return &v
	}).(TrialComponentPtrOutput)
}

// ARM resource ID of the code asset.
func (o TrialComponentOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrialComponent) *string { return v.CodeId }).(pulumi.StringPtrOutput)
}

// The command to execute on startup of the job. eg. "python train.py"
func (o TrialComponentOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v TrialComponent) string { return v.Command }).(pulumi.StringOutput)
}

// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
func (o TrialComponentOutput) Distribution() pulumi.AnyOutput {
	return o.ApplyT(func(v TrialComponent) interface{} { return v.Distribution }).(pulumi.AnyOutput)
}

// The ARM resource ID of the Environment specification for the job.
func (o TrialComponentOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrialComponent) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables included in the job.
func (o TrialComponentOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v TrialComponent) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Mapping of input data bindings used in the job.
func (o TrialComponentOutput) InputDataBindings() InputDataBindingMapOutput {
	return o.ApplyT(func(v TrialComponent) map[string]InputDataBinding { return v.InputDataBindings }).(InputDataBindingMapOutput)
}

// Mapping of output data bindings used in the job.
func (o TrialComponentOutput) OutputDataBindings() OutputDataBindingMapOutput {
	return o.ApplyT(func(v TrialComponent) map[string]OutputDataBinding { return v.OutputDataBindings }).(OutputDataBindingMapOutput)
}

// The max run duration in ISO 8601 format, after which the trial component will be cancelled.
// Only supports duration with precision as low as Seconds.
func (o TrialComponentOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrialComponent) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type TrialComponentPtrOutput struct{ *pulumi.OutputState }

func (TrialComponentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrialComponent)(nil)).Elem()
}

func (o TrialComponentPtrOutput) ToTrialComponentPtrOutput() TrialComponentPtrOutput {
	return o
}

func (o TrialComponentPtrOutput) ToTrialComponentPtrOutputWithContext(ctx context.Context) TrialComponentPtrOutput {
	return o
}

func (o TrialComponentPtrOutput) Elem() TrialComponentOutput {
	return o.ApplyT(func(v *TrialComponent) TrialComponent {
		if v != nil {
			return *v
		}
		var ret TrialComponent
		return ret
	}).(TrialComponentOutput)
}

// ARM resource ID of the code asset.
func (o TrialComponentPtrOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrialComponent) *string {
		if v == nil {
			return nil
		}
		return v.CodeId
	}).(pulumi.StringPtrOutput)
}

// The command to execute on startup of the job. eg. "python train.py"
func (o TrialComponentPtrOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrialComponent) *string {
		if v == nil {
			return nil
		}
		return &v.Command
	}).(pulumi.StringPtrOutput)
}

// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
func (o TrialComponentPtrOutput) Distribution() pulumi.AnyOutput {
	return o.ApplyT(func(v *TrialComponent) interface{} {
		if v == nil {
			return nil
		}
		return v.Distribution
	}).(pulumi.AnyOutput)
}

// The ARM resource ID of the Environment specification for the job.
func (o TrialComponentPtrOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrialComponent) *string {
		if v == nil {
			return nil
		}
		return v.EnvironmentId
	}).(pulumi.StringPtrOutput)
}

// Environment variables included in the job.
func (o TrialComponentPtrOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TrialComponent) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// Mapping of input data bindings used in the job.
func (o TrialComponentPtrOutput) InputDataBindings() InputDataBindingMapOutput {
	return o.ApplyT(func(v *TrialComponent) map[string]InputDataBinding {
		if v == nil {
			return nil
		}
		return v.InputDataBindings
	}).(InputDataBindingMapOutput)
}

// Mapping of output data bindings used in the job.
func (o TrialComponentPtrOutput) OutputDataBindings() OutputDataBindingMapOutput {
	return o.ApplyT(func(v *TrialComponent) map[string]OutputDataBinding {
		if v == nil {
			return nil
		}
		return v.OutputDataBindings
	}).(OutputDataBindingMapOutput)
}

// The max run duration in ISO 8601 format, after which the trial component will be cancelled.
// Only supports duration with precision as low as Seconds.
func (o TrialComponentPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrialComponent) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

type TrialComponentResponse struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// The command to execute on startup of the job. eg. "python train.py"
	Command string `pulumi:"command"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution interface{} `pulumi:"distribution"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Mapping of input data bindings used in the job.
	InputDataBindings map[string]InputDataBindingResponse `pulumi:"inputDataBindings"`
	// Mapping of output data bindings used in the job.
	OutputDataBindings map[string]OutputDataBindingResponse `pulumi:"outputDataBindings"`
	// The max run duration in ISO 8601 format, after which the trial component will be cancelled.
	// Only supports duration with precision as low as Seconds.
	Timeout *string `pulumi:"timeout"`
}

// TrialComponentResponseInput is an input type that accepts TrialComponentResponseArgs and TrialComponentResponseOutput values.
// You can construct a concrete instance of `TrialComponentResponseInput` via:
//
//          TrialComponentResponseArgs{...}
type TrialComponentResponseInput interface {
	pulumi.Input

	ToTrialComponentResponseOutput() TrialComponentResponseOutput
	ToTrialComponentResponseOutputWithContext(context.Context) TrialComponentResponseOutput
}

type TrialComponentResponseArgs struct {
	// ARM resource ID of the code asset.
	CodeId pulumi.StringPtrInput `pulumi:"codeId"`
	// The command to execute on startup of the job. eg. "python train.py"
	Command pulumi.StringInput `pulumi:"command"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution pulumi.Input `pulumi:"distribution"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// Mapping of input data bindings used in the job.
	InputDataBindings InputDataBindingResponseMapInput `pulumi:"inputDataBindings"`
	// Mapping of output data bindings used in the job.
	OutputDataBindings OutputDataBindingResponseMapInput `pulumi:"outputDataBindings"`
	// The max run duration in ISO 8601 format, after which the trial component will be cancelled.
	// Only supports duration with precision as low as Seconds.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (TrialComponentResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrialComponentResponse)(nil)).Elem()
}

func (i TrialComponentResponseArgs) ToTrialComponentResponseOutput() TrialComponentResponseOutput {
	return i.ToTrialComponentResponseOutputWithContext(context.Background())
}

func (i TrialComponentResponseArgs) ToTrialComponentResponseOutputWithContext(ctx context.Context) TrialComponentResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrialComponentResponseOutput)
}

func (i TrialComponentResponseArgs) ToTrialComponentResponsePtrOutput() TrialComponentResponsePtrOutput {
	return i.ToTrialComponentResponsePtrOutputWithContext(context.Background())
}

func (i TrialComponentResponseArgs) ToTrialComponentResponsePtrOutputWithContext(ctx context.Context) TrialComponentResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrialComponentResponseOutput).ToTrialComponentResponsePtrOutputWithContext(ctx)
}

// TrialComponentResponsePtrInput is an input type that accepts TrialComponentResponseArgs, TrialComponentResponsePtr and TrialComponentResponsePtrOutput values.
// You can construct a concrete instance of `TrialComponentResponsePtrInput` via:
//
//          TrialComponentResponseArgs{...}
//
//  or:
//
//          nil
type TrialComponentResponsePtrInput interface {
	pulumi.Input

	ToTrialComponentResponsePtrOutput() TrialComponentResponsePtrOutput
	ToTrialComponentResponsePtrOutputWithContext(context.Context) TrialComponentResponsePtrOutput
}

type trialComponentResponsePtrType TrialComponentResponseArgs

func TrialComponentResponsePtr(v *TrialComponentResponseArgs) TrialComponentResponsePtrInput {
	return (*trialComponentResponsePtrType)(v)
}

func (*trialComponentResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrialComponentResponse)(nil)).Elem()
}

func (i *trialComponentResponsePtrType) ToTrialComponentResponsePtrOutput() TrialComponentResponsePtrOutput {
	return i.ToTrialComponentResponsePtrOutputWithContext(context.Background())
}

func (i *trialComponentResponsePtrType) ToTrialComponentResponsePtrOutputWithContext(ctx context.Context) TrialComponentResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrialComponentResponsePtrOutput)
}

type TrialComponentResponseOutput struct{ *pulumi.OutputState }

func (TrialComponentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrialComponentResponse)(nil)).Elem()
}

func (o TrialComponentResponseOutput) ToTrialComponentResponseOutput() TrialComponentResponseOutput {
	return o
}

func (o TrialComponentResponseOutput) ToTrialComponentResponseOutputWithContext(ctx context.Context) TrialComponentResponseOutput {
	return o
}

func (o TrialComponentResponseOutput) ToTrialComponentResponsePtrOutput() TrialComponentResponsePtrOutput {
	return o.ToTrialComponentResponsePtrOutputWithContext(context.Background())
}

func (o TrialComponentResponseOutput) ToTrialComponentResponsePtrOutputWithContext(ctx context.Context) TrialComponentResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrialComponentResponse) *TrialComponentResponse {
		return &v
	}).(TrialComponentResponsePtrOutput)
}

// ARM resource ID of the code asset.
func (o TrialComponentResponseOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrialComponentResponse) *string { return v.CodeId }).(pulumi.StringPtrOutput)
}

// The command to execute on startup of the job. eg. "python train.py"
func (o TrialComponentResponseOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v TrialComponentResponse) string { return v.Command }).(pulumi.StringOutput)
}

// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
func (o TrialComponentResponseOutput) Distribution() pulumi.AnyOutput {
	return o.ApplyT(func(v TrialComponentResponse) interface{} { return v.Distribution }).(pulumi.AnyOutput)
}

// The ARM resource ID of the Environment specification for the job.
func (o TrialComponentResponseOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrialComponentResponse) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables included in the job.
func (o TrialComponentResponseOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v TrialComponentResponse) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Mapping of input data bindings used in the job.
func (o TrialComponentResponseOutput) InputDataBindings() InputDataBindingResponseMapOutput {
	return o.ApplyT(func(v TrialComponentResponse) map[string]InputDataBindingResponse { return v.InputDataBindings }).(InputDataBindingResponseMapOutput)
}

// Mapping of output data bindings used in the job.
func (o TrialComponentResponseOutput) OutputDataBindings() OutputDataBindingResponseMapOutput {
	return o.ApplyT(func(v TrialComponentResponse) map[string]OutputDataBindingResponse { return v.OutputDataBindings }).(OutputDataBindingResponseMapOutput)
}

// The max run duration in ISO 8601 format, after which the trial component will be cancelled.
// Only supports duration with precision as low as Seconds.
func (o TrialComponentResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrialComponentResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type TrialComponentResponsePtrOutput struct{ *pulumi.OutputState }

func (TrialComponentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrialComponentResponse)(nil)).Elem()
}

func (o TrialComponentResponsePtrOutput) ToTrialComponentResponsePtrOutput() TrialComponentResponsePtrOutput {
	return o
}

func (o TrialComponentResponsePtrOutput) ToTrialComponentResponsePtrOutputWithContext(ctx context.Context) TrialComponentResponsePtrOutput {
	return o
}

func (o TrialComponentResponsePtrOutput) Elem() TrialComponentResponseOutput {
	return o.ApplyT(func(v *TrialComponentResponse) TrialComponentResponse {
		if v != nil {
			return *v
		}
		var ret TrialComponentResponse
		return ret
	}).(TrialComponentResponseOutput)
}

// ARM resource ID of the code asset.
func (o TrialComponentResponsePtrOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrialComponentResponse) *string {
		if v == nil {
			return nil
		}
		return v.CodeId
	}).(pulumi.StringPtrOutput)
}

// The command to execute on startup of the job. eg. "python train.py"
func (o TrialComponentResponsePtrOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrialComponentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Command
	}).(pulumi.StringPtrOutput)
}

// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
func (o TrialComponentResponsePtrOutput) Distribution() pulumi.AnyOutput {
	return o.ApplyT(func(v *TrialComponentResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Distribution
	}).(pulumi.AnyOutput)
}

// The ARM resource ID of the Environment specification for the job.
func (o TrialComponentResponsePtrOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrialComponentResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnvironmentId
	}).(pulumi.StringPtrOutput)
}

// Environment variables included in the job.
func (o TrialComponentResponsePtrOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TrialComponentResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// Mapping of input data bindings used in the job.
func (o TrialComponentResponsePtrOutput) InputDataBindings() InputDataBindingResponseMapOutput {
	return o.ApplyT(func(v *TrialComponentResponse) map[string]InputDataBindingResponse {
		if v == nil {
			return nil
		}
		return v.InputDataBindings
	}).(InputDataBindingResponseMapOutput)
}

// Mapping of output data bindings used in the job.
func (o TrialComponentResponsePtrOutput) OutputDataBindings() OutputDataBindingResponseMapOutput {
	return o.ApplyT(func(v *TrialComponentResponse) map[string]OutputDataBindingResponse {
		if v == nil {
			return nil
		}
		return v.OutputDataBindings
	}).(OutputDataBindingResponseMapOutput)
}

// The max run duration in ISO 8601 format, after which the trial component will be cancelled.
// Only supports duration with precision as low as Seconds.
func (o TrialComponentResponsePtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrialComponentResponse) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

type TruncationSelectionPolicy struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'TruncationSelection'.
	PolicyType string `pulumi:"policyType"`
	// The percentage of runs to cancel at each evaluation interval.
	TruncationPercentage *int `pulumi:"truncationPercentage"`
}

// TruncationSelectionPolicyInput is an input type that accepts TruncationSelectionPolicyArgs and TruncationSelectionPolicyOutput values.
// You can construct a concrete instance of `TruncationSelectionPolicyInput` via:
//
//          TruncationSelectionPolicyArgs{...}
type TruncationSelectionPolicyInput interface {
	pulumi.Input

	ToTruncationSelectionPolicyOutput() TruncationSelectionPolicyOutput
	ToTruncationSelectionPolicyOutputWithContext(context.Context) TruncationSelectionPolicyOutput
}

type TruncationSelectionPolicyArgs struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation pulumi.IntPtrInput `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval pulumi.IntPtrInput `pulumi:"evaluationInterval"`
	// Expected value is 'TruncationSelection'.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// The percentage of runs to cancel at each evaluation interval.
	TruncationPercentage pulumi.IntPtrInput `pulumi:"truncationPercentage"`
}

func (TruncationSelectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TruncationSelectionPolicy)(nil)).Elem()
}

func (i TruncationSelectionPolicyArgs) ToTruncationSelectionPolicyOutput() TruncationSelectionPolicyOutput {
	return i.ToTruncationSelectionPolicyOutputWithContext(context.Background())
}

func (i TruncationSelectionPolicyArgs) ToTruncationSelectionPolicyOutputWithContext(ctx context.Context) TruncationSelectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TruncationSelectionPolicyOutput)
}

type TruncationSelectionPolicyOutput struct{ *pulumi.OutputState }

func (TruncationSelectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TruncationSelectionPolicy)(nil)).Elem()
}

func (o TruncationSelectionPolicyOutput) ToTruncationSelectionPolicyOutput() TruncationSelectionPolicyOutput {
	return o
}

func (o TruncationSelectionPolicyOutput) ToTruncationSelectionPolicyOutputWithContext(ctx context.Context) TruncationSelectionPolicyOutput {
	return o
}

// Number of intervals by which to delay the first evaluation.
func (o TruncationSelectionPolicyOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicy) *int { return v.DelayEvaluation }).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o TruncationSelectionPolicyOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicy) *int { return v.EvaluationInterval }).(pulumi.IntPtrOutput)
}

// Expected value is 'TruncationSelection'.
func (o TruncationSelectionPolicyOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v TruncationSelectionPolicy) string { return v.PolicyType }).(pulumi.StringOutput)
}

// The percentage of runs to cancel at each evaluation interval.
func (o TruncationSelectionPolicyOutput) TruncationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicy) *int { return v.TruncationPercentage }).(pulumi.IntPtrOutput)
}

type TruncationSelectionPolicyResponse struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'TruncationSelection'.
	PolicyType string `pulumi:"policyType"`
	// The percentage of runs to cancel at each evaluation interval.
	TruncationPercentage *int `pulumi:"truncationPercentage"`
}

// TruncationSelectionPolicyResponseInput is an input type that accepts TruncationSelectionPolicyResponseArgs and TruncationSelectionPolicyResponseOutput values.
// You can construct a concrete instance of `TruncationSelectionPolicyResponseInput` via:
//
//          TruncationSelectionPolicyResponseArgs{...}
type TruncationSelectionPolicyResponseInput interface {
	pulumi.Input

	ToTruncationSelectionPolicyResponseOutput() TruncationSelectionPolicyResponseOutput
	ToTruncationSelectionPolicyResponseOutputWithContext(context.Context) TruncationSelectionPolicyResponseOutput
}

type TruncationSelectionPolicyResponseArgs struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation pulumi.IntPtrInput `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval pulumi.IntPtrInput `pulumi:"evaluationInterval"`
	// Expected value is 'TruncationSelection'.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// The percentage of runs to cancel at each evaluation interval.
	TruncationPercentage pulumi.IntPtrInput `pulumi:"truncationPercentage"`
}

func (TruncationSelectionPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TruncationSelectionPolicyResponse)(nil)).Elem()
}

func (i TruncationSelectionPolicyResponseArgs) ToTruncationSelectionPolicyResponseOutput() TruncationSelectionPolicyResponseOutput {
	return i.ToTruncationSelectionPolicyResponseOutputWithContext(context.Background())
}

func (i TruncationSelectionPolicyResponseArgs) ToTruncationSelectionPolicyResponseOutputWithContext(ctx context.Context) TruncationSelectionPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TruncationSelectionPolicyResponseOutput)
}

type TruncationSelectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (TruncationSelectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TruncationSelectionPolicyResponse)(nil)).Elem()
}

func (o TruncationSelectionPolicyResponseOutput) ToTruncationSelectionPolicyResponseOutput() TruncationSelectionPolicyResponseOutput {
	return o
}

func (o TruncationSelectionPolicyResponseOutput) ToTruncationSelectionPolicyResponseOutputWithContext(ctx context.Context) TruncationSelectionPolicyResponseOutput {
	return o
}

// Number of intervals by which to delay the first evaluation.
func (o TruncationSelectionPolicyResponseOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicyResponse) *int { return v.DelayEvaluation }).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o TruncationSelectionPolicyResponseOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicyResponse) *int { return v.EvaluationInterval }).(pulumi.IntPtrOutput)
}

// Expected value is 'TruncationSelection'.
func (o TruncationSelectionPolicyResponseOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v TruncationSelectionPolicyResponse) string { return v.PolicyType }).(pulumi.StringOutput)
}

// The percentage of runs to cancel at each evaluation interval.
func (o TruncationSelectionPolicyResponseOutput) TruncationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicyResponse) *int { return v.TruncationPercentage }).(pulumi.IntPtrOutput)
}

type UserAccountCredentials struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName string `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword *string `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey *string `pulumi:"adminUserSshPublicKey"`
}

// UserAccountCredentialsInput is an input type that accepts UserAccountCredentialsArgs and UserAccountCredentialsOutput values.
// You can construct a concrete instance of `UserAccountCredentialsInput` via:
//
//          UserAccountCredentialsArgs{...}
type UserAccountCredentialsInput interface {
	pulumi.Input

	ToUserAccountCredentialsOutput() UserAccountCredentialsOutput
	ToUserAccountCredentialsOutputWithContext(context.Context) UserAccountCredentialsOutput
}

type UserAccountCredentialsArgs struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName pulumi.StringInput `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword pulumi.StringPtrInput `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey pulumi.StringPtrInput `pulumi:"adminUserSshPublicKey"`
}

func (UserAccountCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountCredentials)(nil)).Elem()
}

func (i UserAccountCredentialsArgs) ToUserAccountCredentialsOutput() UserAccountCredentialsOutput {
	return i.ToUserAccountCredentialsOutputWithContext(context.Background())
}

func (i UserAccountCredentialsArgs) ToUserAccountCredentialsOutputWithContext(ctx context.Context) UserAccountCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsOutput)
}

func (i UserAccountCredentialsArgs) ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput {
	return i.ToUserAccountCredentialsPtrOutputWithContext(context.Background())
}

func (i UserAccountCredentialsArgs) ToUserAccountCredentialsPtrOutputWithContext(ctx context.Context) UserAccountCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsOutput).ToUserAccountCredentialsPtrOutputWithContext(ctx)
}

// UserAccountCredentialsPtrInput is an input type that accepts UserAccountCredentialsArgs, UserAccountCredentialsPtr and UserAccountCredentialsPtrOutput values.
// You can construct a concrete instance of `UserAccountCredentialsPtrInput` via:
//
//          UserAccountCredentialsArgs{...}
//
//  or:
//
//          nil
type UserAccountCredentialsPtrInput interface {
	pulumi.Input

	ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput
	ToUserAccountCredentialsPtrOutputWithContext(context.Context) UserAccountCredentialsPtrOutput
}

type userAccountCredentialsPtrType UserAccountCredentialsArgs

func UserAccountCredentialsPtr(v *UserAccountCredentialsArgs) UserAccountCredentialsPtrInput {
	return (*userAccountCredentialsPtrType)(v)
}

func (*userAccountCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountCredentials)(nil)).Elem()
}

func (i *userAccountCredentialsPtrType) ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput {
	return i.ToUserAccountCredentialsPtrOutputWithContext(context.Background())
}

func (i *userAccountCredentialsPtrType) ToUserAccountCredentialsPtrOutputWithContext(ctx context.Context) UserAccountCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsPtrOutput)
}

type UserAccountCredentialsOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountCredentials)(nil)).Elem()
}

func (o UserAccountCredentialsOutput) ToUserAccountCredentialsOutput() UserAccountCredentialsOutput {
	return o
}

func (o UserAccountCredentialsOutput) ToUserAccountCredentialsOutputWithContext(ctx context.Context) UserAccountCredentialsOutput {
	return o
}

func (o UserAccountCredentialsOutput) ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput {
	return o.ToUserAccountCredentialsPtrOutputWithContext(context.Background())
}

func (o UserAccountCredentialsOutput) ToUserAccountCredentialsPtrOutputWithContext(ctx context.Context) UserAccountCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserAccountCredentials) *UserAccountCredentials {
		return &v
	}).(UserAccountCredentialsPtrOutput)
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsOutput) AdminUserName() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccountCredentials) string { return v.AdminUserName }).(pulumi.StringOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentials) *string { return v.AdminUserPassword }).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentials) *string { return v.AdminUserSshPublicKey }).(pulumi.StringPtrOutput)
}

type UserAccountCredentialsPtrOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountCredentials)(nil)).Elem()
}

func (o UserAccountCredentialsPtrOutput) ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput {
	return o
}

func (o UserAccountCredentialsPtrOutput) ToUserAccountCredentialsPtrOutputWithContext(ctx context.Context) UserAccountCredentialsPtrOutput {
	return o
}

func (o UserAccountCredentialsPtrOutput) Elem() UserAccountCredentialsOutput {
	return o.ApplyT(func(v *UserAccountCredentials) UserAccountCredentials {
		if v != nil {
			return *v
		}
		var ret UserAccountCredentials
		return ret
	}).(UserAccountCredentialsOutput)
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsPtrOutput) AdminUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUserName
	}).(pulumi.StringPtrOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsPtrOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserPassword
	}).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsPtrOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserSshPublicKey
	}).(pulumi.StringPtrOutput)
}

type UserAccountCredentialsResponse struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName string `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword *string `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey *string `pulumi:"adminUserSshPublicKey"`
}

// UserAccountCredentialsResponseInput is an input type that accepts UserAccountCredentialsResponseArgs and UserAccountCredentialsResponseOutput values.
// You can construct a concrete instance of `UserAccountCredentialsResponseInput` via:
//
//          UserAccountCredentialsResponseArgs{...}
type UserAccountCredentialsResponseInput interface {
	pulumi.Input

	ToUserAccountCredentialsResponseOutput() UserAccountCredentialsResponseOutput
	ToUserAccountCredentialsResponseOutputWithContext(context.Context) UserAccountCredentialsResponseOutput
}

type UserAccountCredentialsResponseArgs struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName pulumi.StringInput `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword pulumi.StringPtrInput `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey pulumi.StringPtrInput `pulumi:"adminUserSshPublicKey"`
}

func (UserAccountCredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountCredentialsResponse)(nil)).Elem()
}

func (i UserAccountCredentialsResponseArgs) ToUserAccountCredentialsResponseOutput() UserAccountCredentialsResponseOutput {
	return i.ToUserAccountCredentialsResponseOutputWithContext(context.Background())
}

func (i UserAccountCredentialsResponseArgs) ToUserAccountCredentialsResponseOutputWithContext(ctx context.Context) UserAccountCredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsResponseOutput)
}

func (i UserAccountCredentialsResponseArgs) ToUserAccountCredentialsResponsePtrOutput() UserAccountCredentialsResponsePtrOutput {
	return i.ToUserAccountCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i UserAccountCredentialsResponseArgs) ToUserAccountCredentialsResponsePtrOutputWithContext(ctx context.Context) UserAccountCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsResponseOutput).ToUserAccountCredentialsResponsePtrOutputWithContext(ctx)
}

// UserAccountCredentialsResponsePtrInput is an input type that accepts UserAccountCredentialsResponseArgs, UserAccountCredentialsResponsePtr and UserAccountCredentialsResponsePtrOutput values.
// You can construct a concrete instance of `UserAccountCredentialsResponsePtrInput` via:
//
//          UserAccountCredentialsResponseArgs{...}
//
//  or:
//
//          nil
type UserAccountCredentialsResponsePtrInput interface {
	pulumi.Input

	ToUserAccountCredentialsResponsePtrOutput() UserAccountCredentialsResponsePtrOutput
	ToUserAccountCredentialsResponsePtrOutputWithContext(context.Context) UserAccountCredentialsResponsePtrOutput
}

type userAccountCredentialsResponsePtrType UserAccountCredentialsResponseArgs

func UserAccountCredentialsResponsePtr(v *UserAccountCredentialsResponseArgs) UserAccountCredentialsResponsePtrInput {
	return (*userAccountCredentialsResponsePtrType)(v)
}

func (*userAccountCredentialsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountCredentialsResponse)(nil)).Elem()
}

func (i *userAccountCredentialsResponsePtrType) ToUserAccountCredentialsResponsePtrOutput() UserAccountCredentialsResponsePtrOutput {
	return i.ToUserAccountCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i *userAccountCredentialsResponsePtrType) ToUserAccountCredentialsResponsePtrOutputWithContext(ctx context.Context) UserAccountCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsResponsePtrOutput)
}

type UserAccountCredentialsResponseOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountCredentialsResponse)(nil)).Elem()
}

func (o UserAccountCredentialsResponseOutput) ToUserAccountCredentialsResponseOutput() UserAccountCredentialsResponseOutput {
	return o
}

func (o UserAccountCredentialsResponseOutput) ToUserAccountCredentialsResponseOutputWithContext(ctx context.Context) UserAccountCredentialsResponseOutput {
	return o
}

func (o UserAccountCredentialsResponseOutput) ToUserAccountCredentialsResponsePtrOutput() UserAccountCredentialsResponsePtrOutput {
	return o.ToUserAccountCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o UserAccountCredentialsResponseOutput) ToUserAccountCredentialsResponsePtrOutputWithContext(ctx context.Context) UserAccountCredentialsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserAccountCredentialsResponse) *UserAccountCredentialsResponse {
		return &v
	}).(UserAccountCredentialsResponsePtrOutput)
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsResponseOutput) AdminUserName() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccountCredentialsResponse) string { return v.AdminUserName }).(pulumi.StringOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsResponseOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentialsResponse) *string { return v.AdminUserPassword }).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsResponseOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentialsResponse) *string { return v.AdminUserSshPublicKey }).(pulumi.StringPtrOutput)
}

type UserAccountCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountCredentialsResponse)(nil)).Elem()
}

func (o UserAccountCredentialsResponsePtrOutput) ToUserAccountCredentialsResponsePtrOutput() UserAccountCredentialsResponsePtrOutput {
	return o
}

func (o UserAccountCredentialsResponsePtrOutput) ToUserAccountCredentialsResponsePtrOutputWithContext(ctx context.Context) UserAccountCredentialsResponsePtrOutput {
	return o
}

func (o UserAccountCredentialsResponsePtrOutput) Elem() UserAccountCredentialsResponseOutput {
	return o.ApplyT(func(v *UserAccountCredentialsResponse) UserAccountCredentialsResponse {
		if v != nil {
			return *v
		}
		var ret UserAccountCredentialsResponse
		return ret
	}).(UserAccountCredentialsResponseOutput)
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsResponsePtrOutput) AdminUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUserName
	}).(pulumi.StringPtrOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsResponsePtrOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserPassword
	}).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsResponsePtrOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserSshPublicKey
	}).(pulumi.StringPtrOutput)
}

type UserAssignedIdentityMeta struct {
	// Aka application ID, a unique identifier generated by Azure AD that is tied to an application and service principal during its initial provisioning.
	ClientId *string `pulumi:"clientId"`
	// The object ID of the service principal object for your managed identity that is used to grant role-based access to an Azure resource.
	PrincipalId *string `pulumi:"principalId"`
}

// UserAssignedIdentityMetaInput is an input type that accepts UserAssignedIdentityMetaArgs and UserAssignedIdentityMetaOutput values.
// You can construct a concrete instance of `UserAssignedIdentityMetaInput` via:
//
//          UserAssignedIdentityMetaArgs{...}
type UserAssignedIdentityMetaInput interface {
	pulumi.Input

	ToUserAssignedIdentityMetaOutput() UserAssignedIdentityMetaOutput
	ToUserAssignedIdentityMetaOutputWithContext(context.Context) UserAssignedIdentityMetaOutput
}

type UserAssignedIdentityMetaArgs struct {
	// Aka application ID, a unique identifier generated by Azure AD that is tied to an application and service principal during its initial provisioning.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The object ID of the service principal object for your managed identity that is used to grant role-based access to an Azure resource.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
}

func (UserAssignedIdentityMetaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityMeta)(nil)).Elem()
}

func (i UserAssignedIdentityMetaArgs) ToUserAssignedIdentityMetaOutput() UserAssignedIdentityMetaOutput {
	return i.ToUserAssignedIdentityMetaOutputWithContext(context.Background())
}

func (i UserAssignedIdentityMetaArgs) ToUserAssignedIdentityMetaOutputWithContext(ctx context.Context) UserAssignedIdentityMetaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityMetaOutput)
}

// UserAssignedIdentityMetaMapInput is an input type that accepts UserAssignedIdentityMetaMap and UserAssignedIdentityMetaMapOutput values.
// You can construct a concrete instance of `UserAssignedIdentityMetaMapInput` via:
//
//          UserAssignedIdentityMetaMap{ "key": UserAssignedIdentityMetaArgs{...} }
type UserAssignedIdentityMetaMapInput interface {
	pulumi.Input

	ToUserAssignedIdentityMetaMapOutput() UserAssignedIdentityMetaMapOutput
	ToUserAssignedIdentityMetaMapOutputWithContext(context.Context) UserAssignedIdentityMetaMapOutput
}

type UserAssignedIdentityMetaMap map[string]UserAssignedIdentityMetaInput

func (UserAssignedIdentityMetaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityMeta)(nil)).Elem()
}

func (i UserAssignedIdentityMetaMap) ToUserAssignedIdentityMetaMapOutput() UserAssignedIdentityMetaMapOutput {
	return i.ToUserAssignedIdentityMetaMapOutputWithContext(context.Background())
}

func (i UserAssignedIdentityMetaMap) ToUserAssignedIdentityMetaMapOutputWithContext(ctx context.Context) UserAssignedIdentityMetaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityMetaMapOutput)
}

type UserAssignedIdentityMetaOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityMetaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityMeta)(nil)).Elem()
}

func (o UserAssignedIdentityMetaOutput) ToUserAssignedIdentityMetaOutput() UserAssignedIdentityMetaOutput {
	return o
}

func (o UserAssignedIdentityMetaOutput) ToUserAssignedIdentityMetaOutputWithContext(ctx context.Context) UserAssignedIdentityMetaOutput {
	return o
}

// Aka application ID, a unique identifier generated by Azure AD that is tied to an application and service principal during its initial provisioning.
func (o UserAssignedIdentityMetaOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityMeta) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The object ID of the service principal object for your managed identity that is used to grant role-based access to an Azure resource.
func (o UserAssignedIdentityMetaOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityMeta) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type UserAssignedIdentityMetaMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityMetaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityMeta)(nil)).Elem()
}

func (o UserAssignedIdentityMetaMapOutput) ToUserAssignedIdentityMetaMapOutput() UserAssignedIdentityMetaMapOutput {
	return o
}

func (o UserAssignedIdentityMetaMapOutput) ToUserAssignedIdentityMetaMapOutputWithContext(ctx context.Context) UserAssignedIdentityMetaMapOutput {
	return o
}

func (o UserAssignedIdentityMetaMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityMetaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityMeta {
		return vs[0].(map[string]UserAssignedIdentityMeta)[vs[1].(string)]
	}).(UserAssignedIdentityMetaOutput)
}

type UserAssignedIdentityMetaResponse struct {
	// Aka application ID, a unique identifier generated by Azure AD that is tied to an application and service principal during its initial provisioning.
	ClientId *string `pulumi:"clientId"`
	// The object ID of the service principal object for your managed identity that is used to grant role-based access to an Azure resource.
	PrincipalId *string `pulumi:"principalId"`
}

// UserAssignedIdentityMetaResponseInput is an input type that accepts UserAssignedIdentityMetaResponseArgs and UserAssignedIdentityMetaResponseOutput values.
// You can construct a concrete instance of `UserAssignedIdentityMetaResponseInput` via:
//
//          UserAssignedIdentityMetaResponseArgs{...}
type UserAssignedIdentityMetaResponseInput interface {
	pulumi.Input

	ToUserAssignedIdentityMetaResponseOutput() UserAssignedIdentityMetaResponseOutput
	ToUserAssignedIdentityMetaResponseOutputWithContext(context.Context) UserAssignedIdentityMetaResponseOutput
}

type UserAssignedIdentityMetaResponseArgs struct {
	// Aka application ID, a unique identifier generated by Azure AD that is tied to an application and service principal during its initial provisioning.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The object ID of the service principal object for your managed identity that is used to grant role-based access to an Azure resource.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
}

func (UserAssignedIdentityMetaResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityMetaResponse)(nil)).Elem()
}

func (i UserAssignedIdentityMetaResponseArgs) ToUserAssignedIdentityMetaResponseOutput() UserAssignedIdentityMetaResponseOutput {
	return i.ToUserAssignedIdentityMetaResponseOutputWithContext(context.Background())
}

func (i UserAssignedIdentityMetaResponseArgs) ToUserAssignedIdentityMetaResponseOutputWithContext(ctx context.Context) UserAssignedIdentityMetaResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityMetaResponseOutput)
}

// UserAssignedIdentityMetaResponseMapInput is an input type that accepts UserAssignedIdentityMetaResponseMap and UserAssignedIdentityMetaResponseMapOutput values.
// You can construct a concrete instance of `UserAssignedIdentityMetaResponseMapInput` via:
//
//          UserAssignedIdentityMetaResponseMap{ "key": UserAssignedIdentityMetaResponseArgs{...} }
type UserAssignedIdentityMetaResponseMapInput interface {
	pulumi.Input

	ToUserAssignedIdentityMetaResponseMapOutput() UserAssignedIdentityMetaResponseMapOutput
	ToUserAssignedIdentityMetaResponseMapOutputWithContext(context.Context) UserAssignedIdentityMetaResponseMapOutput
}

type UserAssignedIdentityMetaResponseMap map[string]UserAssignedIdentityMetaResponseInput

func (UserAssignedIdentityMetaResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityMetaResponse)(nil)).Elem()
}

func (i UserAssignedIdentityMetaResponseMap) ToUserAssignedIdentityMetaResponseMapOutput() UserAssignedIdentityMetaResponseMapOutput {
	return i.ToUserAssignedIdentityMetaResponseMapOutputWithContext(context.Background())
}

func (i UserAssignedIdentityMetaResponseMap) ToUserAssignedIdentityMetaResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityMetaResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityMetaResponseMapOutput)
}

type UserAssignedIdentityMetaResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityMetaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityMetaResponse)(nil)).Elem()
}

func (o UserAssignedIdentityMetaResponseOutput) ToUserAssignedIdentityMetaResponseOutput() UserAssignedIdentityMetaResponseOutput {
	return o
}

func (o UserAssignedIdentityMetaResponseOutput) ToUserAssignedIdentityMetaResponseOutputWithContext(ctx context.Context) UserAssignedIdentityMetaResponseOutput {
	return o
}

// Aka application ID, a unique identifier generated by Azure AD that is tied to an application and service principal during its initial provisioning.
func (o UserAssignedIdentityMetaResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityMetaResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The object ID of the service principal object for your managed identity that is used to grant role-based access to an Azure resource.
func (o UserAssignedIdentityMetaResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityMetaResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type UserAssignedIdentityMetaResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityMetaResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityMetaResponse)(nil)).Elem()
}

func (o UserAssignedIdentityMetaResponseMapOutput) ToUserAssignedIdentityMetaResponseMapOutput() UserAssignedIdentityMetaResponseMapOutput {
	return o
}

func (o UserAssignedIdentityMetaResponseMapOutput) ToUserAssignedIdentityMetaResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityMetaResponseMapOutput {
	return o
}

func (o UserAssignedIdentityMetaResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityMetaResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityMetaResponse {
		return vs[0].(map[string]UserAssignedIdentityMetaResponse)[vs[1].(string)]
	}).(UserAssignedIdentityMetaResponseOutput)
}

type UserAssignedIdentityResponse struct {
	// The clientId(aka appId) of the user assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the user assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the user assigned identity.
	TenantId string `pulumi:"tenantId"`
}

// UserAssignedIdentityResponseInput is an input type that accepts UserAssignedIdentityResponseArgs and UserAssignedIdentityResponseOutput values.
// You can construct a concrete instance of `UserAssignedIdentityResponseInput` via:
//
//          UserAssignedIdentityResponseArgs{...}
type UserAssignedIdentityResponseInput interface {
	pulumi.Input

	ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput
	ToUserAssignedIdentityResponseOutputWithContext(context.Context) UserAssignedIdentityResponseOutput
}

type UserAssignedIdentityResponseArgs struct {
	// The clientId(aka appId) of the user assigned identity.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The principal ID of the user assigned identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant ID of the user assigned identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (UserAssignedIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (i UserAssignedIdentityResponseArgs) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return i.ToUserAssignedIdentityResponseOutputWithContext(context.Background())
}

func (i UserAssignedIdentityResponseArgs) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityResponseOutput)
}

// UserAssignedIdentityResponseMapInput is an input type that accepts UserAssignedIdentityResponseMap and UserAssignedIdentityResponseMapOutput values.
// You can construct a concrete instance of `UserAssignedIdentityResponseMapInput` via:
//
//          UserAssignedIdentityResponseMap{ "key": UserAssignedIdentityResponseArgs{...} }
type UserAssignedIdentityResponseMapInput interface {
	pulumi.Input

	ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput
	ToUserAssignedIdentityResponseMapOutputWithContext(context.Context) UserAssignedIdentityResponseMapOutput
}

type UserAssignedIdentityResponseMap map[string]UserAssignedIdentityResponseInput

func (UserAssignedIdentityResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (i UserAssignedIdentityResponseMap) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return i.ToUserAssignedIdentityResponseMapOutputWithContext(context.Background())
}

func (i UserAssignedIdentityResponseMap) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityResponseMapOutput)
}

type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The clientId(aka appId) of the user assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the user assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the user assigned identity.
func (o UserAssignedIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

type UserInfoResponse struct {
	// A user alternate sec id. This represents the user in a different identity provider system Eg.1:live.com:puid
	UserAltSecId *string `pulumi:"userAltSecId"`
	// A user identity provider. Eg live.com
	UserIdp *string `pulumi:"userIdp"`
	// The issuer which issued the token for this user.
	UserIss *string `pulumi:"userIss"`
	//  A user's full name or a service principal's app ID.
	UserName *string `pulumi:"userName"`
	// A user or service principal's object ID..
	UserObjectId *string `pulumi:"userObjectId"`
	// A user or service principal's PuID.
	UserPuId *string `pulumi:"userPuId"`
	// A user or service principal's tenant ID.
	UserTenantId *string `pulumi:"userTenantId"`
}

// UserInfoResponseInput is an input type that accepts UserInfoResponseArgs and UserInfoResponseOutput values.
// You can construct a concrete instance of `UserInfoResponseInput` via:
//
//          UserInfoResponseArgs{...}
type UserInfoResponseInput interface {
	pulumi.Input

	ToUserInfoResponseOutput() UserInfoResponseOutput
	ToUserInfoResponseOutputWithContext(context.Context) UserInfoResponseOutput
}

type UserInfoResponseArgs struct {
	// A user alternate sec id. This represents the user in a different identity provider system Eg.1:live.com:puid
	UserAltSecId pulumi.StringPtrInput `pulumi:"userAltSecId"`
	// A user identity provider. Eg live.com
	UserIdp pulumi.StringPtrInput `pulumi:"userIdp"`
	// The issuer which issued the token for this user.
	UserIss pulumi.StringPtrInput `pulumi:"userIss"`
	//  A user's full name or a service principal's app ID.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
	// A user or service principal's object ID..
	UserObjectId pulumi.StringPtrInput `pulumi:"userObjectId"`
	// A user or service principal's PuID.
	UserPuId pulumi.StringPtrInput `pulumi:"userPuId"`
	// A user or service principal's tenant ID.
	UserTenantId pulumi.StringPtrInput `pulumi:"userTenantId"`
}

func (UserInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfoResponse)(nil)).Elem()
}

func (i UserInfoResponseArgs) ToUserInfoResponseOutput() UserInfoResponseOutput {
	return i.ToUserInfoResponseOutputWithContext(context.Background())
}

func (i UserInfoResponseArgs) ToUserInfoResponseOutputWithContext(ctx context.Context) UserInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoResponseOutput)
}

func (i UserInfoResponseArgs) ToUserInfoResponsePtrOutput() UserInfoResponsePtrOutput {
	return i.ToUserInfoResponsePtrOutputWithContext(context.Background())
}

func (i UserInfoResponseArgs) ToUserInfoResponsePtrOutputWithContext(ctx context.Context) UserInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoResponseOutput).ToUserInfoResponsePtrOutputWithContext(ctx)
}

// UserInfoResponsePtrInput is an input type that accepts UserInfoResponseArgs, UserInfoResponsePtr and UserInfoResponsePtrOutput values.
// You can construct a concrete instance of `UserInfoResponsePtrInput` via:
//
//          UserInfoResponseArgs{...}
//
//  or:
//
//          nil
type UserInfoResponsePtrInput interface {
	pulumi.Input

	ToUserInfoResponsePtrOutput() UserInfoResponsePtrOutput
	ToUserInfoResponsePtrOutputWithContext(context.Context) UserInfoResponsePtrOutput
}

type userInfoResponsePtrType UserInfoResponseArgs

func UserInfoResponsePtr(v *UserInfoResponseArgs) UserInfoResponsePtrInput {
	return (*userInfoResponsePtrType)(v)
}

func (*userInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserInfoResponse)(nil)).Elem()
}

func (i *userInfoResponsePtrType) ToUserInfoResponsePtrOutput() UserInfoResponsePtrOutput {
	return i.ToUserInfoResponsePtrOutputWithContext(context.Background())
}

func (i *userInfoResponsePtrType) ToUserInfoResponsePtrOutputWithContext(ctx context.Context) UserInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoResponsePtrOutput)
}

type UserInfoResponseOutput struct{ *pulumi.OutputState }

func (UserInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfoResponse)(nil)).Elem()
}

func (o UserInfoResponseOutput) ToUserInfoResponseOutput() UserInfoResponseOutput {
	return o
}

func (o UserInfoResponseOutput) ToUserInfoResponseOutputWithContext(ctx context.Context) UserInfoResponseOutput {
	return o
}

func (o UserInfoResponseOutput) ToUserInfoResponsePtrOutput() UserInfoResponsePtrOutput {
	return o.ToUserInfoResponsePtrOutputWithContext(context.Background())
}

func (o UserInfoResponseOutput) ToUserInfoResponsePtrOutputWithContext(ctx context.Context) UserInfoResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserInfoResponse) *UserInfoResponse {
		return &v
	}).(UserInfoResponsePtrOutput)
}

// A user alternate sec id. This represents the user in a different identity provider system Eg.1:live.com:puid
func (o UserInfoResponseOutput) UserAltSecId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfoResponse) *string { return v.UserAltSecId }).(pulumi.StringPtrOutput)
}

// A user identity provider. Eg live.com
func (o UserInfoResponseOutput) UserIdp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfoResponse) *string { return v.UserIdp }).(pulumi.StringPtrOutput)
}

// The issuer which issued the token for this user.
func (o UserInfoResponseOutput) UserIss() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfoResponse) *string { return v.UserIss }).(pulumi.StringPtrOutput)
}

//  A user's full name or a service principal's app ID.
func (o UserInfoResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfoResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

// A user or service principal's object ID..
func (o UserInfoResponseOutput) UserObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfoResponse) *string { return v.UserObjectId }).(pulumi.StringPtrOutput)
}

// A user or service principal's PuID.
func (o UserInfoResponseOutput) UserPuId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfoResponse) *string { return v.UserPuId }).(pulumi.StringPtrOutput)
}

// A user or service principal's tenant ID.
func (o UserInfoResponseOutput) UserTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfoResponse) *string { return v.UserTenantId }).(pulumi.StringPtrOutput)
}

type UserInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (UserInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserInfoResponse)(nil)).Elem()
}

func (o UserInfoResponsePtrOutput) ToUserInfoResponsePtrOutput() UserInfoResponsePtrOutput {
	return o
}

func (o UserInfoResponsePtrOutput) ToUserInfoResponsePtrOutputWithContext(ctx context.Context) UserInfoResponsePtrOutput {
	return o
}

func (o UserInfoResponsePtrOutput) Elem() UserInfoResponseOutput {
	return o.ApplyT(func(v *UserInfoResponse) UserInfoResponse {
		if v != nil {
			return *v
		}
		var ret UserInfoResponse
		return ret
	}).(UserInfoResponseOutput)
}

// A user alternate sec id. This represents the user in a different identity provider system Eg.1:live.com:puid
func (o UserInfoResponsePtrOutput) UserAltSecId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserAltSecId
	}).(pulumi.StringPtrOutput)
}

// A user identity provider. Eg live.com
func (o UserInfoResponsePtrOutput) UserIdp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserIdp
	}).(pulumi.StringPtrOutput)
}

// The issuer which issued the token for this user.
func (o UserInfoResponsePtrOutput) UserIss() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserIss
	}).(pulumi.StringPtrOutput)
}

//  A user's full name or a service principal's app ID.
func (o UserInfoResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// A user or service principal's object ID..
func (o UserInfoResponsePtrOutput) UserObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserObjectId
	}).(pulumi.StringPtrOutput)
}

// A user or service principal's PuID.
func (o UserInfoResponsePtrOutput) UserPuId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserPuId
	}).(pulumi.StringPtrOutput)
}

// A user or service principal's tenant ID.
func (o UserInfoResponsePtrOutput) UserTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserTenantId
	}).(pulumi.StringPtrOutput)
}

type VirtualMachine struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string                   `pulumi:"description"`
	Properties  *VirtualMachineProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// VirtualMachineInput is an input type that accepts VirtualMachineArgs and VirtualMachineOutput values.
// You can construct a concrete instance of `VirtualMachineInput` via:
//
//          VirtualMachineArgs{...}
type VirtualMachineInput interface {
	pulumi.Input

	ToVirtualMachineOutput() VirtualMachineOutput
	ToVirtualMachineOutputWithContext(context.Context) VirtualMachineOutput
}

type VirtualMachineArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput            `pulumi:"description"`
	Properties  VirtualMachinePropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (VirtualMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachine)(nil)).Elem()
}

func (i VirtualMachineArgs) ToVirtualMachineOutput() VirtualMachineOutput {
	return i.ToVirtualMachineOutputWithContext(context.Background())
}

func (i VirtualMachineArgs) ToVirtualMachineOutputWithContext(ctx context.Context) VirtualMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOutput)
}

type VirtualMachineOutput struct{ *pulumi.OutputState }

func (VirtualMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachine)(nil)).Elem()
}

func (o VirtualMachineOutput) ToVirtualMachineOutput() VirtualMachineOutput {
	return o
}

func (o VirtualMachineOutput) ToVirtualMachineOutputWithContext(ctx context.Context) VirtualMachineOutput {
	return o
}

// Location for the underlying compute
func (o VirtualMachineOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'VirtualMachine'.
func (o VirtualMachineOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachine) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o VirtualMachineOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineOutput) Properties() VirtualMachinePropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *VirtualMachineProperties { return v.Properties }).(VirtualMachinePropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o VirtualMachineOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type VirtualMachineImage struct {
	// Virtual Machine image path
	Id string `pulumi:"id"`
}

// VirtualMachineImageInput is an input type that accepts VirtualMachineImageArgs and VirtualMachineImageOutput values.
// You can construct a concrete instance of `VirtualMachineImageInput` via:
//
//          VirtualMachineImageArgs{...}
type VirtualMachineImageInput interface {
	pulumi.Input

	ToVirtualMachineImageOutput() VirtualMachineImageOutput
	ToVirtualMachineImageOutputWithContext(context.Context) VirtualMachineImageOutput
}

type VirtualMachineImageArgs struct {
	// Virtual Machine image path
	Id pulumi.StringInput `pulumi:"id"`
}

func (VirtualMachineImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineImage)(nil)).Elem()
}

func (i VirtualMachineImageArgs) ToVirtualMachineImageOutput() VirtualMachineImageOutput {
	return i.ToVirtualMachineImageOutputWithContext(context.Background())
}

func (i VirtualMachineImageArgs) ToVirtualMachineImageOutputWithContext(ctx context.Context) VirtualMachineImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageOutput)
}

func (i VirtualMachineImageArgs) ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput {
	return i.ToVirtualMachineImagePtrOutputWithContext(context.Background())
}

func (i VirtualMachineImageArgs) ToVirtualMachineImagePtrOutputWithContext(ctx context.Context) VirtualMachineImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageOutput).ToVirtualMachineImagePtrOutputWithContext(ctx)
}

// VirtualMachineImagePtrInput is an input type that accepts VirtualMachineImageArgs, VirtualMachineImagePtr and VirtualMachineImagePtrOutput values.
// You can construct a concrete instance of `VirtualMachineImagePtrInput` via:
//
//          VirtualMachineImageArgs{...}
//
//  or:
//
//          nil
type VirtualMachineImagePtrInput interface {
	pulumi.Input

	ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput
	ToVirtualMachineImagePtrOutputWithContext(context.Context) VirtualMachineImagePtrOutput
}

type virtualMachineImagePtrType VirtualMachineImageArgs

func VirtualMachineImagePtr(v *VirtualMachineImageArgs) VirtualMachineImagePtrInput {
	return (*virtualMachineImagePtrType)(v)
}

func (*virtualMachineImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineImage)(nil)).Elem()
}

func (i *virtualMachineImagePtrType) ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput {
	return i.ToVirtualMachineImagePtrOutputWithContext(context.Background())
}

func (i *virtualMachineImagePtrType) ToVirtualMachineImagePtrOutputWithContext(ctx context.Context) VirtualMachineImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImagePtrOutput)
}

type VirtualMachineImageOutput struct{ *pulumi.OutputState }

func (VirtualMachineImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineImage)(nil)).Elem()
}

func (o VirtualMachineImageOutput) ToVirtualMachineImageOutput() VirtualMachineImageOutput {
	return o
}

func (o VirtualMachineImageOutput) ToVirtualMachineImageOutputWithContext(ctx context.Context) VirtualMachineImageOutput {
	return o
}

func (o VirtualMachineImageOutput) ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput {
	return o.ToVirtualMachineImagePtrOutputWithContext(context.Background())
}

func (o VirtualMachineImageOutput) ToVirtualMachineImagePtrOutputWithContext(ctx context.Context) VirtualMachineImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineImage) *VirtualMachineImage {
		return &v
	}).(VirtualMachineImagePtrOutput)
}

// Virtual Machine image path
func (o VirtualMachineImageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineImage) string { return v.Id }).(pulumi.StringOutput)
}

type VirtualMachineImagePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineImage)(nil)).Elem()
}

func (o VirtualMachineImagePtrOutput) ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput {
	return o
}

func (o VirtualMachineImagePtrOutput) ToVirtualMachineImagePtrOutputWithContext(ctx context.Context) VirtualMachineImagePtrOutput {
	return o
}

func (o VirtualMachineImagePtrOutput) Elem() VirtualMachineImageOutput {
	return o.ApplyT(func(v *VirtualMachineImage) VirtualMachineImage {
		if v != nil {
			return *v
		}
		var ret VirtualMachineImage
		return ret
	}).(VirtualMachineImageOutput)
}

// Virtual Machine image path
func (o VirtualMachineImagePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineImage) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineImageResponse struct {
	// Virtual Machine image path
	Id string `pulumi:"id"`
}

// VirtualMachineImageResponseInput is an input type that accepts VirtualMachineImageResponseArgs and VirtualMachineImageResponseOutput values.
// You can construct a concrete instance of `VirtualMachineImageResponseInput` via:
//
//          VirtualMachineImageResponseArgs{...}
type VirtualMachineImageResponseInput interface {
	pulumi.Input

	ToVirtualMachineImageResponseOutput() VirtualMachineImageResponseOutput
	ToVirtualMachineImageResponseOutputWithContext(context.Context) VirtualMachineImageResponseOutput
}

type VirtualMachineImageResponseArgs struct {
	// Virtual Machine image path
	Id pulumi.StringInput `pulumi:"id"`
}

func (VirtualMachineImageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineImageResponse)(nil)).Elem()
}

func (i VirtualMachineImageResponseArgs) ToVirtualMachineImageResponseOutput() VirtualMachineImageResponseOutput {
	return i.ToVirtualMachineImageResponseOutputWithContext(context.Background())
}

func (i VirtualMachineImageResponseArgs) ToVirtualMachineImageResponseOutputWithContext(ctx context.Context) VirtualMachineImageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageResponseOutput)
}

func (i VirtualMachineImageResponseArgs) ToVirtualMachineImageResponsePtrOutput() VirtualMachineImageResponsePtrOutput {
	return i.ToVirtualMachineImageResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineImageResponseArgs) ToVirtualMachineImageResponsePtrOutputWithContext(ctx context.Context) VirtualMachineImageResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageResponseOutput).ToVirtualMachineImageResponsePtrOutputWithContext(ctx)
}

// VirtualMachineImageResponsePtrInput is an input type that accepts VirtualMachineImageResponseArgs, VirtualMachineImageResponsePtr and VirtualMachineImageResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineImageResponsePtrInput` via:
//
//          VirtualMachineImageResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineImageResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineImageResponsePtrOutput() VirtualMachineImageResponsePtrOutput
	ToVirtualMachineImageResponsePtrOutputWithContext(context.Context) VirtualMachineImageResponsePtrOutput
}

type virtualMachineImageResponsePtrType VirtualMachineImageResponseArgs

func VirtualMachineImageResponsePtr(v *VirtualMachineImageResponseArgs) VirtualMachineImageResponsePtrInput {
	return (*virtualMachineImageResponsePtrType)(v)
}

func (*virtualMachineImageResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineImageResponse)(nil)).Elem()
}

func (i *virtualMachineImageResponsePtrType) ToVirtualMachineImageResponsePtrOutput() VirtualMachineImageResponsePtrOutput {
	return i.ToVirtualMachineImageResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineImageResponsePtrType) ToVirtualMachineImageResponsePtrOutputWithContext(ctx context.Context) VirtualMachineImageResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageResponsePtrOutput)
}

type VirtualMachineImageResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineImageResponse)(nil)).Elem()
}

func (o VirtualMachineImageResponseOutput) ToVirtualMachineImageResponseOutput() VirtualMachineImageResponseOutput {
	return o
}

func (o VirtualMachineImageResponseOutput) ToVirtualMachineImageResponseOutputWithContext(ctx context.Context) VirtualMachineImageResponseOutput {
	return o
}

func (o VirtualMachineImageResponseOutput) ToVirtualMachineImageResponsePtrOutput() VirtualMachineImageResponsePtrOutput {
	return o.ToVirtualMachineImageResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineImageResponseOutput) ToVirtualMachineImageResponsePtrOutputWithContext(ctx context.Context) VirtualMachineImageResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineImageResponse) *VirtualMachineImageResponse {
		return &v
	}).(VirtualMachineImageResponsePtrOutput)
}

// Virtual Machine image path
func (o VirtualMachineImageResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineImageResponse) string { return v.Id }).(pulumi.StringOutput)
}

type VirtualMachineImageResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineImageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineImageResponse)(nil)).Elem()
}

func (o VirtualMachineImageResponsePtrOutput) ToVirtualMachineImageResponsePtrOutput() VirtualMachineImageResponsePtrOutput {
	return o
}

func (o VirtualMachineImageResponsePtrOutput) ToVirtualMachineImageResponsePtrOutputWithContext(ctx context.Context) VirtualMachineImageResponsePtrOutput {
	return o
}

func (o VirtualMachineImageResponsePtrOutput) Elem() VirtualMachineImageResponseOutput {
	return o.ApplyT(func(v *VirtualMachineImageResponse) VirtualMachineImageResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineImageResponse
		return ret
	}).(VirtualMachineImageResponseOutput)
}

// Virtual Machine image path
func (o VirtualMachineImageResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineImageResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineProperties struct {
	// Public IP address of the virtual machine.
	Address *string `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount *VirtualMachineSshCredentials `pulumi:"administratorAccount"`
	// Port open for ssh connections.
	SshPort *int `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize *string `pulumi:"virtualMachineSize"`
}

// VirtualMachinePropertiesInput is an input type that accepts VirtualMachinePropertiesArgs and VirtualMachinePropertiesOutput values.
// You can construct a concrete instance of `VirtualMachinePropertiesInput` via:
//
//          VirtualMachinePropertiesArgs{...}
type VirtualMachinePropertiesInput interface {
	pulumi.Input

	ToVirtualMachinePropertiesOutput() VirtualMachinePropertiesOutput
	ToVirtualMachinePropertiesOutputWithContext(context.Context) VirtualMachinePropertiesOutput
}

type VirtualMachinePropertiesArgs struct {
	// Public IP address of the virtual machine.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount VirtualMachineSshCredentialsPtrInput `pulumi:"administratorAccount"`
	// Port open for ssh connections.
	SshPort pulumi.IntPtrInput `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize pulumi.StringPtrInput `pulumi:"virtualMachineSize"`
}

func (VirtualMachinePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineProperties)(nil)).Elem()
}

func (i VirtualMachinePropertiesArgs) ToVirtualMachinePropertiesOutput() VirtualMachinePropertiesOutput {
	return i.ToVirtualMachinePropertiesOutputWithContext(context.Background())
}

func (i VirtualMachinePropertiesArgs) ToVirtualMachinePropertiesOutputWithContext(ctx context.Context) VirtualMachinePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachinePropertiesOutput)
}

func (i VirtualMachinePropertiesArgs) ToVirtualMachinePropertiesPtrOutput() VirtualMachinePropertiesPtrOutput {
	return i.ToVirtualMachinePropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualMachinePropertiesArgs) ToVirtualMachinePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachinePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachinePropertiesOutput).ToVirtualMachinePropertiesPtrOutputWithContext(ctx)
}

// VirtualMachinePropertiesPtrInput is an input type that accepts VirtualMachinePropertiesArgs, VirtualMachinePropertiesPtr and VirtualMachinePropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualMachinePropertiesPtrInput` via:
//
//          VirtualMachinePropertiesArgs{...}
//
//  or:
//
//          nil
type VirtualMachinePropertiesPtrInput interface {
	pulumi.Input

	ToVirtualMachinePropertiesPtrOutput() VirtualMachinePropertiesPtrOutput
	ToVirtualMachinePropertiesPtrOutputWithContext(context.Context) VirtualMachinePropertiesPtrOutput
}

type virtualMachinePropertiesPtrType VirtualMachinePropertiesArgs

func VirtualMachinePropertiesPtr(v *VirtualMachinePropertiesArgs) VirtualMachinePropertiesPtrInput {
	return (*virtualMachinePropertiesPtrType)(v)
}

func (*virtualMachinePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineProperties)(nil)).Elem()
}

func (i *virtualMachinePropertiesPtrType) ToVirtualMachinePropertiesPtrOutput() VirtualMachinePropertiesPtrOutput {
	return i.ToVirtualMachinePropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualMachinePropertiesPtrType) ToVirtualMachinePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachinePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachinePropertiesPtrOutput)
}

type VirtualMachinePropertiesOutput struct{ *pulumi.OutputState }

func (VirtualMachinePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineProperties)(nil)).Elem()
}

func (o VirtualMachinePropertiesOutput) ToVirtualMachinePropertiesOutput() VirtualMachinePropertiesOutput {
	return o
}

func (o VirtualMachinePropertiesOutput) ToVirtualMachinePropertiesOutputWithContext(ctx context.Context) VirtualMachinePropertiesOutput {
	return o
}

func (o VirtualMachinePropertiesOutput) ToVirtualMachinePropertiesPtrOutput() VirtualMachinePropertiesPtrOutput {
	return o.ToVirtualMachinePropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualMachinePropertiesOutput) ToVirtualMachinePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachinePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineProperties) *VirtualMachineProperties {
		return &v
	}).(VirtualMachinePropertiesPtrOutput)
}

// Public IP address of the virtual machine.
func (o VirtualMachinePropertiesOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineProperties) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachinePropertiesOutput) AdministratorAccount() VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyT(func(v VirtualMachineProperties) *VirtualMachineSshCredentials { return v.AdministratorAccount }).(VirtualMachineSshCredentialsPtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachinePropertiesOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineProperties) *int { return v.SshPort }).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachinePropertiesOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineProperties) *string { return v.VirtualMachineSize }).(pulumi.StringPtrOutput)
}

type VirtualMachinePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachinePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineProperties)(nil)).Elem()
}

func (o VirtualMachinePropertiesPtrOutput) ToVirtualMachinePropertiesPtrOutput() VirtualMachinePropertiesPtrOutput {
	return o
}

func (o VirtualMachinePropertiesPtrOutput) ToVirtualMachinePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachinePropertiesPtrOutput {
	return o
}

func (o VirtualMachinePropertiesPtrOutput) Elem() VirtualMachinePropertiesOutput {
	return o.ApplyT(func(v *VirtualMachineProperties) VirtualMachineProperties {
		if v != nil {
			return *v
		}
		var ret VirtualMachineProperties
		return ret
	}).(VirtualMachinePropertiesOutput)
}

// Public IP address of the virtual machine.
func (o VirtualMachinePropertiesPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineProperties) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachinePropertiesPtrOutput) AdministratorAccount() VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyT(func(v *VirtualMachineProperties) *VirtualMachineSshCredentials {
		if v == nil {
			return nil
		}
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsPtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachinePropertiesPtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineProperties) *int {
		if v == nil {
			return nil
		}
		return v.SshPort
	}).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachinePropertiesPtrOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineProperties) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineSize
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool                              `pulumi:"isAttachedCompute"`
	Properties        *VirtualMachineResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// VirtualMachineResponseInput is an input type that accepts VirtualMachineResponseArgs and VirtualMachineResponseOutput values.
// You can construct a concrete instance of `VirtualMachineResponseInput` via:
//
//          VirtualMachineResponseArgs{...}
type VirtualMachineResponseInput interface {
	pulumi.Input

	ToVirtualMachineResponseOutput() VirtualMachineResponseOutput
	ToVirtualMachineResponseOutputWithContext(context.Context) VirtualMachineResponseOutput
}

type VirtualMachineResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput                         `pulumi:"isAttachedCompute"`
	Properties        VirtualMachineResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (VirtualMachineResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResponse)(nil)).Elem()
}

func (i VirtualMachineResponseArgs) ToVirtualMachineResponseOutput() VirtualMachineResponseOutput {
	return i.ToVirtualMachineResponseOutputWithContext(context.Background())
}

func (i VirtualMachineResponseArgs) ToVirtualMachineResponseOutputWithContext(ctx context.Context) VirtualMachineResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineResponseOutput)
}

type VirtualMachineResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResponse)(nil)).Elem()
}

func (o VirtualMachineResponseOutput) ToVirtualMachineResponseOutput() VirtualMachineResponseOutput {
	return o
}

func (o VirtualMachineResponseOutput) ToVirtualMachineResponseOutputWithContext(ctx context.Context) VirtualMachineResponseOutput {
	return o
}

// Location for the underlying compute
func (o VirtualMachineResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'VirtualMachine'.
func (o VirtualMachineResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o VirtualMachineResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o VirtualMachineResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualMachineResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

func (o VirtualMachineResponseOutput) Properties() VirtualMachineResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *VirtualMachineResponseProperties { return v.Properties }).(VirtualMachineResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o VirtualMachineResponseOutput) ProvisioningErrors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineResponse) []MachineLearningServiceErrorResponse { return v.ProvisioningErrors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o VirtualMachineResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o VirtualMachineResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type VirtualMachineResponseProperties struct {
	// Public IP address of the virtual machine.
	Address *string `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount *VirtualMachineSshCredentialsResponse `pulumi:"administratorAccount"`
	// Port open for ssh connections.
	SshPort *int `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize *string `pulumi:"virtualMachineSize"`
}

// VirtualMachineResponsePropertiesInput is an input type that accepts VirtualMachineResponsePropertiesArgs and VirtualMachineResponsePropertiesOutput values.
// You can construct a concrete instance of `VirtualMachineResponsePropertiesInput` via:
//
//          VirtualMachineResponsePropertiesArgs{...}
type VirtualMachineResponsePropertiesInput interface {
	pulumi.Input

	ToVirtualMachineResponsePropertiesOutput() VirtualMachineResponsePropertiesOutput
	ToVirtualMachineResponsePropertiesOutputWithContext(context.Context) VirtualMachineResponsePropertiesOutput
}

type VirtualMachineResponsePropertiesArgs struct {
	// Public IP address of the virtual machine.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount VirtualMachineSshCredentialsResponsePtrInput `pulumi:"administratorAccount"`
	// Port open for ssh connections.
	SshPort pulumi.IntPtrInput `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize pulumi.StringPtrInput `pulumi:"virtualMachineSize"`
}

func (VirtualMachineResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResponseProperties)(nil)).Elem()
}

func (i VirtualMachineResponsePropertiesArgs) ToVirtualMachineResponsePropertiesOutput() VirtualMachineResponsePropertiesOutput {
	return i.ToVirtualMachineResponsePropertiesOutputWithContext(context.Background())
}

func (i VirtualMachineResponsePropertiesArgs) ToVirtualMachineResponsePropertiesOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineResponsePropertiesOutput)
}

func (i VirtualMachineResponsePropertiesArgs) ToVirtualMachineResponsePropertiesPtrOutput() VirtualMachineResponsePropertiesPtrOutput {
	return i.ToVirtualMachineResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualMachineResponsePropertiesArgs) ToVirtualMachineResponsePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineResponsePropertiesOutput).ToVirtualMachineResponsePropertiesPtrOutputWithContext(ctx)
}

// VirtualMachineResponsePropertiesPtrInput is an input type that accepts VirtualMachineResponsePropertiesArgs, VirtualMachineResponsePropertiesPtr and VirtualMachineResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualMachineResponsePropertiesPtrInput` via:
//
//          VirtualMachineResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type VirtualMachineResponsePropertiesPtrInput interface {
	pulumi.Input

	ToVirtualMachineResponsePropertiesPtrOutput() VirtualMachineResponsePropertiesPtrOutput
	ToVirtualMachineResponsePropertiesPtrOutputWithContext(context.Context) VirtualMachineResponsePropertiesPtrOutput
}

type virtualMachineResponsePropertiesPtrType VirtualMachineResponsePropertiesArgs

func VirtualMachineResponsePropertiesPtr(v *VirtualMachineResponsePropertiesArgs) VirtualMachineResponsePropertiesPtrInput {
	return (*virtualMachineResponsePropertiesPtrType)(v)
}

func (*virtualMachineResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineResponseProperties)(nil)).Elem()
}

func (i *virtualMachineResponsePropertiesPtrType) ToVirtualMachineResponsePropertiesPtrOutput() VirtualMachineResponsePropertiesPtrOutput {
	return i.ToVirtualMachineResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualMachineResponsePropertiesPtrType) ToVirtualMachineResponsePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineResponsePropertiesPtrOutput)
}

type VirtualMachineResponsePropertiesOutput struct{ *pulumi.OutputState }

func (VirtualMachineResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResponseProperties)(nil)).Elem()
}

func (o VirtualMachineResponsePropertiesOutput) ToVirtualMachineResponsePropertiesOutput() VirtualMachineResponsePropertiesOutput {
	return o
}

func (o VirtualMachineResponsePropertiesOutput) ToVirtualMachineResponsePropertiesOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesOutput {
	return o
}

func (o VirtualMachineResponsePropertiesOutput) ToVirtualMachineResponsePropertiesPtrOutput() VirtualMachineResponsePropertiesPtrOutput {
	return o.ToVirtualMachineResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualMachineResponsePropertiesOutput) ToVirtualMachineResponsePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineResponseProperties) *VirtualMachineResponseProperties {
		return &v
	}).(VirtualMachineResponsePropertiesPtrOutput)
}

// Public IP address of the virtual machine.
func (o VirtualMachineResponsePropertiesOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponseProperties) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachineResponsePropertiesOutput) AdministratorAccount() VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineResponseProperties) *VirtualMachineSshCredentialsResponse {
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachineResponsePropertiesOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponseProperties) *int { return v.SshPort }).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachineResponsePropertiesOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponseProperties) *string { return v.VirtualMachineSize }).(pulumi.StringPtrOutput)
}

type VirtualMachineResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineResponseProperties)(nil)).Elem()
}

func (o VirtualMachineResponsePropertiesPtrOutput) ToVirtualMachineResponsePropertiesPtrOutput() VirtualMachineResponsePropertiesPtrOutput {
	return o
}

func (o VirtualMachineResponsePropertiesPtrOutput) ToVirtualMachineResponsePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesPtrOutput {
	return o
}

func (o VirtualMachineResponsePropertiesPtrOutput) Elem() VirtualMachineResponsePropertiesOutput {
	return o.ApplyT(func(v *VirtualMachineResponseProperties) VirtualMachineResponseProperties {
		if v != nil {
			return *v
		}
		var ret VirtualMachineResponseProperties
		return ret
	}).(VirtualMachineResponsePropertiesOutput)
}

// Public IP address of the virtual machine.
func (o VirtualMachineResponsePropertiesPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachineResponsePropertiesPtrOutput) AdministratorAccount() VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineResponseProperties) *VirtualMachineSshCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachineResponsePropertiesPtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.SshPort
	}).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachineResponsePropertiesPtrOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineSize
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineSshCredentials struct {
	// Password of admin account
	Password *string `pulumi:"password"`
	// Private key data
	PrivateKeyData *string `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData *string `pulumi:"publicKeyData"`
	// Username of admin account
	Username *string `pulumi:"username"`
}

// VirtualMachineSshCredentialsInput is an input type that accepts VirtualMachineSshCredentialsArgs and VirtualMachineSshCredentialsOutput values.
// You can construct a concrete instance of `VirtualMachineSshCredentialsInput` via:
//
//          VirtualMachineSshCredentialsArgs{...}
type VirtualMachineSshCredentialsInput interface {
	pulumi.Input

	ToVirtualMachineSshCredentialsOutput() VirtualMachineSshCredentialsOutput
	ToVirtualMachineSshCredentialsOutputWithContext(context.Context) VirtualMachineSshCredentialsOutput
}

type VirtualMachineSshCredentialsArgs struct {
	// Password of admin account
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Private key data
	PrivateKeyData pulumi.StringPtrInput `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData pulumi.StringPtrInput `pulumi:"publicKeyData"`
	// Username of admin account
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (VirtualMachineSshCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSshCredentials)(nil)).Elem()
}

func (i VirtualMachineSshCredentialsArgs) ToVirtualMachineSshCredentialsOutput() VirtualMachineSshCredentialsOutput {
	return i.ToVirtualMachineSshCredentialsOutputWithContext(context.Background())
}

func (i VirtualMachineSshCredentialsArgs) ToVirtualMachineSshCredentialsOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsOutput)
}

func (i VirtualMachineSshCredentialsArgs) ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput {
	return i.ToVirtualMachineSshCredentialsPtrOutputWithContext(context.Background())
}

func (i VirtualMachineSshCredentialsArgs) ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsOutput).ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx)
}

// VirtualMachineSshCredentialsPtrInput is an input type that accepts VirtualMachineSshCredentialsArgs, VirtualMachineSshCredentialsPtr and VirtualMachineSshCredentialsPtrOutput values.
// You can construct a concrete instance of `VirtualMachineSshCredentialsPtrInput` via:
//
//          VirtualMachineSshCredentialsArgs{...}
//
//  or:
//
//          nil
type VirtualMachineSshCredentialsPtrInput interface {
	pulumi.Input

	ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput
	ToVirtualMachineSshCredentialsPtrOutputWithContext(context.Context) VirtualMachineSshCredentialsPtrOutput
}

type virtualMachineSshCredentialsPtrType VirtualMachineSshCredentialsArgs

func VirtualMachineSshCredentialsPtr(v *VirtualMachineSshCredentialsArgs) VirtualMachineSshCredentialsPtrInput {
	return (*virtualMachineSshCredentialsPtrType)(v)
}

func (*virtualMachineSshCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSshCredentials)(nil)).Elem()
}

func (i *virtualMachineSshCredentialsPtrType) ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput {
	return i.ToVirtualMachineSshCredentialsPtrOutputWithContext(context.Background())
}

func (i *virtualMachineSshCredentialsPtrType) ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsPtrOutput)
}

type VirtualMachineSshCredentialsOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSshCredentials)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsOutput) ToVirtualMachineSshCredentialsOutput() VirtualMachineSshCredentialsOutput {
	return o
}

func (o VirtualMachineSshCredentialsOutput) ToVirtualMachineSshCredentialsOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsOutput {
	return o
}

func (o VirtualMachineSshCredentialsOutput) ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput {
	return o.ToVirtualMachineSshCredentialsPtrOutputWithContext(context.Background())
}

func (o VirtualMachineSshCredentialsOutput) ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineSshCredentials) *VirtualMachineSshCredentials {
		return &v
	}).(VirtualMachineSshCredentialsPtrOutput)
}

// Password of admin account
func (o VirtualMachineSshCredentialsOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *string { return v.PrivateKeyData }).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *string { return v.PublicKeyData }).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type VirtualMachineSshCredentialsPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSshCredentials)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsPtrOutput) ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsPtrOutput) ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsPtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsPtrOutput) Elem() VirtualMachineSshCredentialsOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) VirtualMachineSshCredentials {
		if v != nil {
			return *v
		}
		var ret VirtualMachineSshCredentials
		return ret
	}).(VirtualMachineSshCredentialsOutput)
}

// Password of admin account
func (o VirtualMachineSshCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsPtrOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyData
	}).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsPtrOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) *string {
		if v == nil {
			return nil
		}
		return v.PublicKeyData
	}).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineSshCredentialsResponse struct {
	// Password of admin account
	Password *string `pulumi:"password"`
	// Private key data
	PrivateKeyData *string `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData *string `pulumi:"publicKeyData"`
	// Username of admin account
	Username *string `pulumi:"username"`
}

// VirtualMachineSshCredentialsResponseInput is an input type that accepts VirtualMachineSshCredentialsResponseArgs and VirtualMachineSshCredentialsResponseOutput values.
// You can construct a concrete instance of `VirtualMachineSshCredentialsResponseInput` via:
//
//          VirtualMachineSshCredentialsResponseArgs{...}
type VirtualMachineSshCredentialsResponseInput interface {
	pulumi.Input

	ToVirtualMachineSshCredentialsResponseOutput() VirtualMachineSshCredentialsResponseOutput
	ToVirtualMachineSshCredentialsResponseOutputWithContext(context.Context) VirtualMachineSshCredentialsResponseOutput
}

type VirtualMachineSshCredentialsResponseArgs struct {
	// Password of admin account
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Private key data
	PrivateKeyData pulumi.StringPtrInput `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData pulumi.StringPtrInput `pulumi:"publicKeyData"`
	// Username of admin account
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (VirtualMachineSshCredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSshCredentialsResponse)(nil)).Elem()
}

func (i VirtualMachineSshCredentialsResponseArgs) ToVirtualMachineSshCredentialsResponseOutput() VirtualMachineSshCredentialsResponseOutput {
	return i.ToVirtualMachineSshCredentialsResponseOutputWithContext(context.Background())
}

func (i VirtualMachineSshCredentialsResponseArgs) ToVirtualMachineSshCredentialsResponseOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsResponseOutput)
}

func (i VirtualMachineSshCredentialsResponseArgs) ToVirtualMachineSshCredentialsResponsePtrOutput() VirtualMachineSshCredentialsResponsePtrOutput {
	return i.ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineSshCredentialsResponseArgs) ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsResponseOutput).ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(ctx)
}

// VirtualMachineSshCredentialsResponsePtrInput is an input type that accepts VirtualMachineSshCredentialsResponseArgs, VirtualMachineSshCredentialsResponsePtr and VirtualMachineSshCredentialsResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineSshCredentialsResponsePtrInput` via:
//
//          VirtualMachineSshCredentialsResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineSshCredentialsResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineSshCredentialsResponsePtrOutput() VirtualMachineSshCredentialsResponsePtrOutput
	ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(context.Context) VirtualMachineSshCredentialsResponsePtrOutput
}

type virtualMachineSshCredentialsResponsePtrType VirtualMachineSshCredentialsResponseArgs

func VirtualMachineSshCredentialsResponsePtr(v *VirtualMachineSshCredentialsResponseArgs) VirtualMachineSshCredentialsResponsePtrInput {
	return (*virtualMachineSshCredentialsResponsePtrType)(v)
}

func (*virtualMachineSshCredentialsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSshCredentialsResponse)(nil)).Elem()
}

func (i *virtualMachineSshCredentialsResponsePtrType) ToVirtualMachineSshCredentialsResponsePtrOutput() VirtualMachineSshCredentialsResponsePtrOutput {
	return i.ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineSshCredentialsResponsePtrType) ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsResponsePtrOutput)
}

type VirtualMachineSshCredentialsResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSshCredentialsResponse)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsResponseOutput) ToVirtualMachineSshCredentialsResponseOutput() VirtualMachineSshCredentialsResponseOutput {
	return o
}

func (o VirtualMachineSshCredentialsResponseOutput) ToVirtualMachineSshCredentialsResponseOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponseOutput {
	return o
}

func (o VirtualMachineSshCredentialsResponseOutput) ToVirtualMachineSshCredentialsResponsePtrOutput() VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineSshCredentialsResponseOutput) ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineSshCredentialsResponse) *VirtualMachineSshCredentialsResponse {
		return &v
	}).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Password of admin account
func (o VirtualMachineSshCredentialsResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsResponseOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *string { return v.PrivateKeyData }).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsResponseOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *string { return v.PublicKeyData }).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type VirtualMachineSshCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSshCredentialsResponse)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsResponsePtrOutput) ToVirtualMachineSshCredentialsResponsePtrOutput() VirtualMachineSshCredentialsResponsePtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsResponsePtrOutput) ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponsePtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsResponsePtrOutput) Elem() VirtualMachineSshCredentialsResponseOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) VirtualMachineSshCredentialsResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineSshCredentialsResponse
		return ret
	}).(VirtualMachineSshCredentialsResponseOutput)
}

// Password of admin account
func (o VirtualMachineSshCredentialsResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsResponsePtrOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyData
	}).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsResponsePtrOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicKeyData
	}).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ACIServiceCreateRequestDataCollectionOutput{})
	pulumi.RegisterOutputType(ACIServiceCreateRequestDataCollectionPtrOutput{})
	pulumi.RegisterOutputType(ACIServiceCreateRequestEncryptionPropertiesOutput{})
	pulumi.RegisterOutputType(ACIServiceCreateRequestEncryptionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ACIServiceCreateRequestVnetConfigurationOutput{})
	pulumi.RegisterOutputType(ACIServiceCreateRequestVnetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseDataCollectionOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseDataCollectionPtrOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseEncryptionPropertiesOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseEncryptionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseEnvironmentImageRequestOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseEnvironmentImageRequestPtrOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseVnetConfigurationOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseVnetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AKSOutput{})
	pulumi.RegisterOutputType(AKSPropertiesOutput{})
	pulumi.RegisterOutputType(AKSPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AKSReplicaStatusResponseErrorOutput{})
	pulumi.RegisterOutputType(AKSReplicaStatusResponseErrorPtrOutput{})
	pulumi.RegisterOutputType(AKSResponseOutput{})
	pulumi.RegisterOutputType(AKSResponsePropertiesOutput{})
	pulumi.RegisterOutputType(AKSResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AKSServiceCreateRequestAutoScalerOutput{})
	pulumi.RegisterOutputType(AKSServiceCreateRequestAutoScalerPtrOutput{})
	pulumi.RegisterOutputType(AKSServiceCreateRequestDataCollectionOutput{})
	pulumi.RegisterOutputType(AKSServiceCreateRequestDataCollectionPtrOutput{})
	pulumi.RegisterOutputType(AKSServiceCreateRequestLivenessProbeRequirementsOutput{})
	pulumi.RegisterOutputType(AKSServiceCreateRequestLivenessProbeRequirementsPtrOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseAutoScalerOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseAutoScalerPtrOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseDataCollectionOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseDataCollectionPtrOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseDeploymentStatusOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseEnvironmentImageRequestOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseEnvironmentImageRequestPtrOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseLivenessProbeRequirementsOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput{})
	pulumi.RegisterOutputType(AKSVariantResponseResponseOutput{})
	pulumi.RegisterOutputType(AksNetworkingConfigurationOutput{})
	pulumi.RegisterOutputType(AksNetworkingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AksNetworkingConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AksNetworkingConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(AmlComputeOutput{})
	pulumi.RegisterOutputType(AmlComputeNodeInformationResponseOutput{})
	pulumi.RegisterOutputType(AmlComputeNodeInformationResponseArrayOutput{})
	pulumi.RegisterOutputType(AmlComputePropertiesOutput{})
	pulumi.RegisterOutputType(AmlComputePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AmlComputeResponseOutput{})
	pulumi.RegisterOutputType(AmlComputeResponsePropertiesOutput{})
	pulumi.RegisterOutputType(AmlComputeResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AmlTokenOutput{})
	pulumi.RegisterOutputType(AmlTokenResponseOutput{})
	pulumi.RegisterOutputType(AssignedUserOutput{})
	pulumi.RegisterOutputType(AssignedUserPtrOutput{})
	pulumi.RegisterOutputType(AssignedUserResponseOutput{})
	pulumi.RegisterOutputType(AssignedUserResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoScaleSettingsOutput{})
	pulumi.RegisterOutputType(AutoScaleSettingsResponseOutput{})
	pulumi.RegisterOutputType(AzureDataLakeSectionResponseOutput{})
	pulumi.RegisterOutputType(AzureDataLakeSectionResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureMySqlSectionResponseOutput{})
	pulumi.RegisterOutputType(AzureMySqlSectionResponsePtrOutput{})
	pulumi.RegisterOutputType(AzurePostgreSqlSectionResponseOutput{})
	pulumi.RegisterOutputType(AzurePostgreSqlSectionResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureSqlDatabaseSectionResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlDatabaseSectionResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureStorageSectionResponseOutput{})
	pulumi.RegisterOutputType(AzureStorageSectionResponsePtrOutput{})
	pulumi.RegisterOutputType(BanditPolicyOutput{})
	pulumi.RegisterOutputType(BanditPolicyResponseOutput{})
	pulumi.RegisterOutputType(BatchDeploymentTypeOutput{})
	pulumi.RegisterOutputType(BatchDeploymentTypePtrOutput{})
	pulumi.RegisterOutputType(BatchDeploymentResponseOutput{})
	pulumi.RegisterOutputType(BatchDeploymentResponsePtrOutput{})
	pulumi.RegisterOutputType(BatchEndpointTypeOutput{})
	pulumi.RegisterOutputType(BatchEndpointTypePtrOutput{})
	pulumi.RegisterOutputType(BatchEndpointResponseOutput{})
	pulumi.RegisterOutputType(BatchEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(BatchOutputConfigurationOutput{})
	pulumi.RegisterOutputType(BatchOutputConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BatchOutputConfigurationResponseOutput{})
	pulumi.RegisterOutputType(BatchOutputConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(BatchRetrySettingsOutput{})
	pulumi.RegisterOutputType(BatchRetrySettingsPtrOutput{})
	pulumi.RegisterOutputType(BatchRetrySettingsResponseOutput{})
	pulumi.RegisterOutputType(BatchRetrySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ClientCredentialsResponseOutput{})
	pulumi.RegisterOutputType(ClientCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(CodeConfigurationOutput{})
	pulumi.RegisterOutputType(CodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(CodeConfigurationResponseOutput{})
	pulumi.RegisterOutputType(CodeConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(CodeContainerTypeOutput{})
	pulumi.RegisterOutputType(CodeContainerTypePtrOutput{})
	pulumi.RegisterOutputType(CodeContainerResponseOutput{})
	pulumi.RegisterOutputType(CodeContainerResponsePtrOutput{})
	pulumi.RegisterOutputType(CodeVersionTypeOutput{})
	pulumi.RegisterOutputType(CodeVersionTypePtrOutput{})
	pulumi.RegisterOutputType(CodeVersionResponseOutput{})
	pulumi.RegisterOutputType(CodeVersionResponsePtrOutput{})
	pulumi.RegisterOutputType(CommandJobOutput{})
	pulumi.RegisterOutputType(CommandJobResponseOutput{})
	pulumi.RegisterOutputType(ComputeBindingOutput{})
	pulumi.RegisterOutputType(ComputeBindingPtrOutput{})
	pulumi.RegisterOutputType(ComputeBindingResponseOutput{})
	pulumi.RegisterOutputType(ComputeBindingResponsePtrOutput{})
	pulumi.RegisterOutputType(ComputeConfigurationOutput{})
	pulumi.RegisterOutputType(ComputeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ComputeConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ComputeConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceOutput{})
	pulumi.RegisterOutputType(ComputeInstanceApplicationResponseOutput{})
	pulumi.RegisterOutputType(ComputeInstanceApplicationResponseArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceConnectivityEndpointsResponseOutput{})
	pulumi.RegisterOutputType(ComputeInstanceConnectivityEndpointsResponsePtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceCreatedByResponseOutput{})
	pulumi.RegisterOutputType(ComputeInstanceCreatedByResponsePtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceLastOperationResponseOutput{})
	pulumi.RegisterOutputType(ComputeInstanceLastOperationResponsePtrOutput{})
	pulumi.RegisterOutputType(ComputeInstancePropertiesOutput{})
	pulumi.RegisterOutputType(ComputeInstancePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceResponseOutput{})
	pulumi.RegisterOutputType(ComputeInstanceResponsePropertiesOutput{})
	pulumi.RegisterOutputType(ComputeInstanceResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceSshSettingsOutput{})
	pulumi.RegisterOutputType(ComputeInstanceSshSettingsPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceSshSettingsResponseOutput{})
	pulumi.RegisterOutputType(ComputeInstanceSshSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerResourceRequirementsOutput{})
	pulumi.RegisterOutputType(ContainerResourceRequirementsPtrOutput{})
	pulumi.RegisterOutputType(ContainerResourceRequirementsResponseOutput{})
	pulumi.RegisterOutputType(ContainerResourceRequirementsResponsePtrOutput{})
	pulumi.RegisterOutputType(CosmosDbSettingsOutput{})
	pulumi.RegisterOutputType(CosmosDbSettingsPtrOutput{})
	pulumi.RegisterOutputType(CosmosDbSettingsResponseOutput{})
	pulumi.RegisterOutputType(CosmosDbSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(CreateServiceRequestEnvironmentImageRequestOutput{})
	pulumi.RegisterOutputType(CreateServiceRequestEnvironmentImageRequestPtrOutput{})
	pulumi.RegisterOutputType(CreateServiceRequestKeysOutput{})
	pulumi.RegisterOutputType(CreateServiceRequestKeysPtrOutput{})
	pulumi.RegisterOutputType(DataContainerTypeOutput{})
	pulumi.RegisterOutputType(DataContainerTypePtrOutput{})
	pulumi.RegisterOutputType(DataContainerResponseOutput{})
	pulumi.RegisterOutputType(DataContainerResponsePtrOutput{})
	pulumi.RegisterOutputType(DataFactoryOutput{})
	pulumi.RegisterOutputType(DataFactoryResponseOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsPropertiesOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsResponseOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsResponsePropertiesOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataPathAssetReferenceOutput{})
	pulumi.RegisterOutputType(DataPathAssetReferenceResponseOutput{})
	pulumi.RegisterOutputType(DataVersionTypeOutput{})
	pulumi.RegisterOutputType(DataVersionTypePtrOutput{})
	pulumi.RegisterOutputType(DataVersionResponseOutput{})
	pulumi.RegisterOutputType(DataVersionResponsePtrOutput{})
	pulumi.RegisterOutputType(DatabricksOutput{})
	pulumi.RegisterOutputType(DatabricksPropertiesOutput{})
	pulumi.RegisterOutputType(DatabricksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DatabricksResponseOutput{})
	pulumi.RegisterOutputType(DatabricksResponsePropertiesOutput{})
	pulumi.RegisterOutputType(DatabricksResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DatasetCreateRequestDataPathOutput{})
	pulumi.RegisterOutputType(DatasetCreateRequestDataPathPtrOutput{})
	pulumi.RegisterOutputType(DatasetCreateRequestParametersOutput{})
	pulumi.RegisterOutputType(DatasetCreateRequestParametersPtrOutput{})
	pulumi.RegisterOutputType(DatasetCreateRequestPathOutput{})
	pulumi.RegisterOutputType(DatasetCreateRequestPathPtrOutput{})
	pulumi.RegisterOutputType(DatasetCreateRequestQueryOutput{})
	pulumi.RegisterOutputType(DatasetCreateRequestQueryPtrOutput{})
	pulumi.RegisterOutputType(DatasetCreateRequestRegistrationOutput{})
	pulumi.RegisterOutputType(DatasetCreateRequestRegistrationPtrOutput{})
	pulumi.RegisterOutputType(DatasetCreateRequestTimeSeriesOutput{})
	pulumi.RegisterOutputType(DatasetCreateRequestTimeSeriesPtrOutput{})
	pulumi.RegisterOutputType(DatasetReferenceOutput{})
	pulumi.RegisterOutputType(DatasetReferenceArrayOutput{})
	pulumi.RegisterOutputType(DatasetReferenceResponseOutput{})
	pulumi.RegisterOutputType(DatasetReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(DatasetResponseOutput{})
	pulumi.RegisterOutputType(DatasetResponsePtrOutput{})
	pulumi.RegisterOutputType(DatasetResponseDataPathOutput{})
	pulumi.RegisterOutputType(DatasetResponseDataPathPtrOutput{})
	pulumi.RegisterOutputType(DatasetResponseLatestOutput{})
	pulumi.RegisterOutputType(DatasetResponseLatestPtrOutput{})
	pulumi.RegisterOutputType(DatasetResponseSqlDataPathOutput{})
	pulumi.RegisterOutputType(DatasetResponseSqlDataPathPtrOutput{})
	pulumi.RegisterOutputType(DatasetStateResponseOutput{})
	pulumi.RegisterOutputType(DatasetStateResponsePtrOutput{})
	pulumi.RegisterOutputType(DatasetStateResponseDeprecatedByOutput{})
	pulumi.RegisterOutputType(DatasetStateResponseDeprecatedByPtrOutput{})
	pulumi.RegisterOutputType(DatastoreResponseOutput{})
	pulumi.RegisterOutputType(DatastoreResponsePtrOutput{})
	pulumi.RegisterOutputType(DockerBuildOutput{})
	pulumi.RegisterOutputType(DockerBuildResponseOutput{})
	pulumi.RegisterOutputType(DockerImageOutput{})
	pulumi.RegisterOutputType(DockerImagePlatformOutput{})
	pulumi.RegisterOutputType(DockerImagePlatformPtrOutput{})
	pulumi.RegisterOutputType(DockerImagePlatformResponseOutput{})
	pulumi.RegisterOutputType(DockerImagePlatformResponsePtrOutput{})
	pulumi.RegisterOutputType(DockerImageResponseOutput{})
	pulumi.RegisterOutputType(EncryptionPropertyOutput{})
	pulumi.RegisterOutputType(EncryptionPropertyPtrOutput{})
	pulumi.RegisterOutputType(EncryptionPropertyResponseOutput{})
	pulumi.RegisterOutputType(EncryptionPropertyResponsePtrOutput{})
	pulumi.RegisterOutputType(EndpointAuthKeysOutput{})
	pulumi.RegisterOutputType(EndpointAuthKeysPtrOutput{})
	pulumi.RegisterOutputType(EndpointAuthKeysResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentContainerTypeOutput{})
	pulumi.RegisterOutputType(EnvironmentContainerTypePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentContainerResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentContainerResponsePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentImageRequestEnvironmentOutput{})
	pulumi.RegisterOutputType(EnvironmentImageRequestEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentImageRequestEnvironmentReferenceOutput{})
	pulumi.RegisterOutputType(EnvironmentImageRequestEnvironmentReferencePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentImageResponseResponseEnvironmentOutput{})
	pulumi.RegisterOutputType(EnvironmentImageResponseResponseEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentImageResponseResponseEnvironmentReferenceOutput{})
	pulumi.RegisterOutputType(EnvironmentImageResponseResponseEnvironmentReferencePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentSpecificationVersionTypeOutput{})
	pulumi.RegisterOutputType(EnvironmentSpecificationVersionTypePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentSpecificationVersionResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentSpecificationVersionResponsePtrOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(ErrorResponseResponseOutput{})
	pulumi.RegisterOutputType(ErrorResponseResponsePtrOutput{})
	pulumi.RegisterOutputType(FlavorDataOutput{})
	pulumi.RegisterOutputType(FlavorDataMapOutput{})
	pulumi.RegisterOutputType(FlavorDataResponseOutput{})
	pulumi.RegisterOutputType(FlavorDataResponseMapOutput{})
	pulumi.RegisterOutputType(GlusterFsSectionResponseOutput{})
	pulumi.RegisterOutputType(GlusterFsSectionResponsePtrOutput{})
	pulumi.RegisterOutputType(HDInsightOutput{})
	pulumi.RegisterOutputType(HDInsightPropertiesOutput{})
	pulumi.RegisterOutputType(HDInsightPropertiesPtrOutput{})
	pulumi.RegisterOutputType(HDInsightResponseOutput{})
	pulumi.RegisterOutputType(HDInsightResponsePropertiesOutput{})
	pulumi.RegisterOutputType(HDInsightResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(IdAssetReferenceOutput{})
	pulumi.RegisterOutputType(IdAssetReferenceResponseOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityForCmkOutput{})
	pulumi.RegisterOutputType(IdentityForCmkPtrOutput{})
	pulumi.RegisterOutputType(IdentityForCmkResponseOutput{})
	pulumi.RegisterOutputType(IdentityForCmkResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ImageAssetOutput{})
	pulumi.RegisterOutputType(ImageAssetArrayOutput{})
	pulumi.RegisterOutputType(ImageAssetResponseOutput{})
	pulumi.RegisterOutputType(ImageAssetResponseArrayOutput{})
	pulumi.RegisterOutputType(InferenceContainerPropertiesOutput{})
	pulumi.RegisterOutputType(InferenceContainerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(InferenceContainerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(InferenceContainerPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(InputDataBindingOutput{})
	pulumi.RegisterOutputType(InputDataBindingMapOutput{})
	pulumi.RegisterOutputType(InputDataBindingResponseOutput{})
	pulumi.RegisterOutputType(InputDataBindingResponseMapOutput{})
	pulumi.RegisterOutputType(JobEndpointResponseOutput{})
	pulumi.RegisterOutputType(JobEndpointResponseMapOutput{})
	pulumi.RegisterOutputType(JobOutputResponseOutput{})
	pulumi.RegisterOutputType(K8sOnlineDeploymentOutput{})
	pulumi.RegisterOutputType(K8sOnlineDeploymentResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LabelCategoryOutput{})
	pulumi.RegisterOutputType(LabelCategoryMapOutput{})
	pulumi.RegisterOutputType(LabelCategoryResponseOutput{})
	pulumi.RegisterOutputType(LabelCategoryResponseMapOutput{})
	pulumi.RegisterOutputType(LabelClassOutput{})
	pulumi.RegisterOutputType(LabelClassMapOutput{})
	pulumi.RegisterOutputType(LabelClassResponseOutput{})
	pulumi.RegisterOutputType(LabelClassResponseMapOutput{})
	pulumi.RegisterOutputType(LabelingDatasetConfigurationOutput{})
	pulumi.RegisterOutputType(LabelingDatasetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(LabelingDatasetConfigurationResponseOutput{})
	pulumi.RegisterOutputType(LabelingDatasetConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(LabelingJobImagePropertiesOutput{})
	pulumi.RegisterOutputType(LabelingJobImagePropertiesPtrOutput{})
	pulumi.RegisterOutputType(LabelingJobImagePropertiesResponseOutput{})
	pulumi.RegisterOutputType(LabelingJobImagePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LabelingJobInstructionsOutput{})
	pulumi.RegisterOutputType(LabelingJobInstructionsPtrOutput{})
	pulumi.RegisterOutputType(LabelingJobInstructionsResponseOutput{})
	pulumi.RegisterOutputType(LabelingJobInstructionsResponsePtrOutput{})
	pulumi.RegisterOutputType(LabelingJobPropertiesOutput{})
	pulumi.RegisterOutputType(LabelingJobPropertiesPtrOutput{})
	pulumi.RegisterOutputType(LabelingJobPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LabelingJobPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LinkedInfoResponseOutput{})
	pulumi.RegisterOutputType(LinkedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(LinkedServicePropsOutput{})
	pulumi.RegisterOutputType(LinkedServicePropsPtrOutput{})
	pulumi.RegisterOutputType(LinkedServicePropsResponseOutput{})
	pulumi.RegisterOutputType(LinkedServicePropsResponsePtrOutput{})
	pulumi.RegisterOutputType(LinkedWorkspacePropsOutput{})
	pulumi.RegisterOutputType(LinkedWorkspacePropsPtrOutput{})
	pulumi.RegisterOutputType(LinkedWorkspacePropsResponseOutput{})
	pulumi.RegisterOutputType(LinkedWorkspacePropsResponsePtrOutput{})
	pulumi.RegisterOutputType(ListNotebookKeysResultResponseOutput{})
	pulumi.RegisterOutputType(MLAssistConfigurationOutput{})
	pulumi.RegisterOutputType(MLAssistConfigurationPtrOutput{})
	pulumi.RegisterOutputType(MLAssistConfigurationResponseOutput{})
	pulumi.RegisterOutputType(MLAssistConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(MachineLearningServiceErrorResponseOutput{})
	pulumi.RegisterOutputType(MachineLearningServiceErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedIdentityOutput{})
	pulumi.RegisterOutputType(ManagedIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedOnlineDeploymentOutput{})
	pulumi.RegisterOutputType(ManagedOnlineDeploymentResponseOutput{})
	pulumi.RegisterOutputType(ManualScaleSettingsOutput{})
	pulumi.RegisterOutputType(ManualScaleSettingsResponseOutput{})
	pulumi.RegisterOutputType(MedianStoppingPolicyOutput{})
	pulumi.RegisterOutputType(MedianStoppingPolicyResponseOutput{})
	pulumi.RegisterOutputType(ModelOutput{})
	pulumi.RegisterOutputType(ModelArrayOutput{})
	pulumi.RegisterOutputType(ModelContainerTypeOutput{})
	pulumi.RegisterOutputType(ModelContainerTypePtrOutput{})
	pulumi.RegisterOutputType(ModelContainerResponseOutput{})
	pulumi.RegisterOutputType(ModelContainerResponsePtrOutput{})
	pulumi.RegisterOutputType(ModelDockerSectionBaseImageRegistryOutput{})
	pulumi.RegisterOutputType(ModelDockerSectionBaseImageRegistryPtrOutput{})
	pulumi.RegisterOutputType(ModelDockerSectionResponseResponseBaseImageRegistryOutput{})
	pulumi.RegisterOutputType(ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionDockerOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionDockerPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionPythonOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionPythonPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionROutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionRPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseResponseDockerOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseResponseDockerPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseResponsePythonOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseResponsePythonPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseResponseROutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseResponseRPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseResponseSparkOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseResponseSparkPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionSparkOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionSparkPtrOutput{})
	pulumi.RegisterOutputType(ModelResponseOutput{})
	pulumi.RegisterOutputType(ModelResponseArrayOutput{})
	pulumi.RegisterOutputType(ModelVersionTypeOutput{})
	pulumi.RegisterOutputType(ModelVersionTypePtrOutput{})
	pulumi.RegisterOutputType(ModelVersionResponseOutput{})
	pulumi.RegisterOutputType(ModelVersionResponsePtrOutput{})
	pulumi.RegisterOutputType(MpiOutput{})
	pulumi.RegisterOutputType(MpiResponseOutput{})
	pulumi.RegisterOutputType(NodeStateCountsResponseOutput{})
	pulumi.RegisterOutputType(NodeStateCountsResponsePtrOutput{})
	pulumi.RegisterOutputType(NotebookPreparationErrorResponseOutput{})
	pulumi.RegisterOutputType(NotebookPreparationErrorResponsePtrOutput{})
	pulumi.RegisterOutputType(NotebookResourceInfoResponseOutput{})
	pulumi.RegisterOutputType(NotebookResourceInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(ObjectiveOutput{})
	pulumi.RegisterOutputType(ObjectiveResponseOutput{})
	pulumi.RegisterOutputType(OnlineEndpointTypeOutput{})
	pulumi.RegisterOutputType(OnlineEndpointTypePtrOutput{})
	pulumi.RegisterOutputType(OnlineEndpointResponseOutput{})
	pulumi.RegisterOutputType(OnlineEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(OnlineRequestSettingsOutput{})
	pulumi.RegisterOutputType(OnlineRequestSettingsPtrOutput{})
	pulumi.RegisterOutputType(OnlineRequestSettingsResponseOutput{})
	pulumi.RegisterOutputType(OnlineRequestSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(OutputDataBindingOutput{})
	pulumi.RegisterOutputType(OutputDataBindingMapOutput{})
	pulumi.RegisterOutputType(OutputDataBindingResponseOutput{})
	pulumi.RegisterOutputType(OutputDataBindingResponseMapOutput{})
	pulumi.RegisterOutputType(OutputPathAssetReferenceOutput{})
	pulumi.RegisterOutputType(OutputPathAssetReferenceResponseOutput{})
	pulumi.RegisterOutputType(PasswordResponseOutput{})
	pulumi.RegisterOutputType(PasswordResponseArrayOutput{})
	pulumi.RegisterOutputType(PersonalComputeInstanceSettingsOutput{})
	pulumi.RegisterOutputType(PersonalComputeInstanceSettingsPtrOutput{})
	pulumi.RegisterOutputType(PersonalComputeInstanceSettingsResponseOutput{})
	pulumi.RegisterOutputType(PersonalComputeInstanceSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(ProbeSettingsOutput{})
	pulumi.RegisterOutputType(ProbeSettingsPtrOutput{})
	pulumi.RegisterOutputType(ProbeSettingsResponseOutput{})
	pulumi.RegisterOutputType(ProbeSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ProgressMetricsResponseOutput{})
	pulumi.RegisterOutputType(ProgressMetricsResponsePtrOutput{})
	pulumi.RegisterOutputType(PyTorchOutput{})
	pulumi.RegisterOutputType(PyTorchResponseOutput{})
	pulumi.RegisterOutputType(RCranPackageOutput{})
	pulumi.RegisterOutputType(RCranPackageArrayOutput{})
	pulumi.RegisterOutputType(RCranPackageResponseOutput{})
	pulumi.RegisterOutputType(RCranPackageResponseArrayOutput{})
	pulumi.RegisterOutputType(RGitHubPackageOutput{})
	pulumi.RegisterOutputType(RGitHubPackageArrayOutput{})
	pulumi.RegisterOutputType(RGitHubPackageResponseResponseOutput{})
	pulumi.RegisterOutputType(RGitHubPackageResponseResponseArrayOutput{})
	pulumi.RegisterOutputType(RegistryListCredentialsResultResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdOutput{})
	pulumi.RegisterOutputType(ResourceIdPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityOutput{})
	pulumi.RegisterOutputType(ResourceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteOutput{})
	pulumi.RegisterOutputType(RoutePtrOutput{})
	pulumi.RegisterOutputType(RouteResponseOutput{})
	pulumi.RegisterOutputType(RouteResponsePtrOutput{})
	pulumi.RegisterOutputType(ScaleSettingsOutput{})
	pulumi.RegisterOutputType(ScaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(ScaleSettingsResponseOutput{})
	pulumi.RegisterOutputType(ScaleSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ScriptReferenceOutput{})
	pulumi.RegisterOutputType(ScriptReferencePtrOutput{})
	pulumi.RegisterOutputType(ScriptReferenceResponseOutput{})
	pulumi.RegisterOutputType(ScriptReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ScriptsToExecuteOutput{})
	pulumi.RegisterOutputType(ScriptsToExecutePtrOutput{})
	pulumi.RegisterOutputType(ScriptsToExecuteResponseOutput{})
	pulumi.RegisterOutputType(ScriptsToExecuteResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceManagedResourcesSettingsOutput{})
	pulumi.RegisterOutputType(ServiceManagedResourcesSettingsPtrOutput{})
	pulumi.RegisterOutputType(ServiceManagedResourcesSettingsResponseOutput{})
	pulumi.RegisterOutputType(ServiceManagedResourcesSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceResponseBaseResponseErrorOutput{})
	pulumi.RegisterOutputType(SetupScriptsOutput{})
	pulumi.RegisterOutputType(SetupScriptsPtrOutput{})
	pulumi.RegisterOutputType(SetupScriptsResponseOutput{})
	pulumi.RegisterOutputType(SetupScriptsResponsePtrOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceArrayOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceResponseOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SparkMavenPackageOutput{})
	pulumi.RegisterOutputType(SparkMavenPackageArrayOutput{})
	pulumi.RegisterOutputType(SparkMavenPackageResponseOutput{})
	pulumi.RegisterOutputType(SparkMavenPackageResponseArrayOutput{})
	pulumi.RegisterOutputType(SslConfigurationOutput{})
	pulumi.RegisterOutputType(SslConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SslConfigurationResponseOutput{})
	pulumi.RegisterOutputType(SslConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(StatusMessageResponseOutput{})
	pulumi.RegisterOutputType(StatusMessageResponseArrayOutput{})
	pulumi.RegisterOutputType(SweepJobOutput{})
	pulumi.RegisterOutputType(SweepJobResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemServiceResponseOutput{})
	pulumi.RegisterOutputType(SystemServiceResponseArrayOutput{})
	pulumi.RegisterOutputType(TensorFlowOutput{})
	pulumi.RegisterOutputType(TensorFlowResponseOutput{})
	pulumi.RegisterOutputType(TrialComponentOutput{})
	pulumi.RegisterOutputType(TrialComponentPtrOutput{})
	pulumi.RegisterOutputType(TrialComponentResponseOutput{})
	pulumi.RegisterOutputType(TrialComponentResponsePtrOutput{})
	pulumi.RegisterOutputType(TruncationSelectionPolicyOutput{})
	pulumi.RegisterOutputType(TruncationSelectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsPtrOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsResponseOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityMetaOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityMetaMapOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityMetaResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityMetaResponseMapOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(UserInfoResponseOutput{})
	pulumi.RegisterOutputType(UserInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineOutput{})
	pulumi.RegisterOutputType(VirtualMachineImageOutput{})
	pulumi.RegisterOutputType(VirtualMachineImagePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineImageResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineImageResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachinePropertiesOutput{})
	pulumi.RegisterOutputType(VirtualMachinePropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineResponsePropertiesOutput{})
	pulumi.RegisterOutputType(VirtualMachineResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsResponsePtrOutput{})
}
