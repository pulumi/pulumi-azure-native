// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package machinelearningservices

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Machine Learning compute object wrapped into ARM resource envelope.
// API Version: 2021-01-01.
type MachineLearningCompute struct {
	pulumi.CustomResourceState

	// The identity of the resource.
	Identity IdentityResponsePtrOutput `pulumi:"identity"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Specifies the name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Compute properties
	Properties pulumi.AnyOutput `pulumi:"properties"`
	// The sku of the workspace.
	Sku SkuResponsePtrOutput `pulumi:"sku"`
	// Read only system data
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Contains resource tags defined as key/value pairs.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMachineLearningCompute registers a new resource with the given unique name, arguments, and options.
func NewMachineLearningCompute(ctx *pulumi.Context,
	name string, args *MachineLearningComputeArgs, opts ...pulumi.ResourceOption) (*MachineLearningCompute, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20180301preview:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20181119:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20190501:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20190601:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20191101:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20200101:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20200218preview:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20200301:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20200401:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20200501preview:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20200515preview:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20200601:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20200801:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20200901preview:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20210101:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20210301preview:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20210401:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20210701:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20220101preview:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20220201preview:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20220501:MachineLearningCompute"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20220601preview:MachineLearningCompute"),
		},
	})
	opts = append(opts, aliases)
	var resource MachineLearningCompute
	err := ctx.RegisterResource("azure-native:machinelearningservices:MachineLearningCompute", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMachineLearningCompute gets an existing MachineLearningCompute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMachineLearningCompute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MachineLearningComputeState, opts ...pulumi.ResourceOption) (*MachineLearningCompute, error) {
	var resource MachineLearningCompute
	err := ctx.ReadResource("azure-native:machinelearningservices:MachineLearningCompute", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MachineLearningCompute resources.
type machineLearningComputeState struct {
}

type MachineLearningComputeState struct {
}

func (MachineLearningComputeState) ElementType() reflect.Type {
	return reflect.TypeOf((*machineLearningComputeState)(nil)).Elem()
}

type machineLearningComputeArgs struct {
	// Name of the Azure Machine Learning compute.
	ComputeName *string `pulumi:"computeName"`
	// The identity of the resource.
	Identity *Identity `pulumi:"identity"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// Compute properties
	Properties interface{} `pulumi:"properties"`
	// Name of the resource group in which workspace is located.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The sku of the workspace.
	Sku *Sku `pulumi:"sku"`
	// Contains resource tags defined as key/value pairs.
	Tags map[string]string `pulumi:"tags"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a MachineLearningCompute resource.
type MachineLearningComputeArgs struct {
	// Name of the Azure Machine Learning compute.
	ComputeName pulumi.StringPtrInput
	// The identity of the resource.
	Identity IdentityPtrInput
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput
	// Compute properties
	Properties pulumi.Input
	// Name of the resource group in which workspace is located.
	ResourceGroupName pulumi.StringInput
	// The sku of the workspace.
	Sku SkuPtrInput
	// Contains resource tags defined as key/value pairs.
	Tags pulumi.StringMapInput
	// Name of Azure Machine Learning workspace.
	WorkspaceName pulumi.StringInput
}

func (MachineLearningComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*machineLearningComputeArgs)(nil)).Elem()
}

type MachineLearningComputeInput interface {
	pulumi.Input

	ToMachineLearningComputeOutput() MachineLearningComputeOutput
	ToMachineLearningComputeOutputWithContext(ctx context.Context) MachineLearningComputeOutput
}

func (*MachineLearningCompute) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineLearningCompute)(nil)).Elem()
}

func (i *MachineLearningCompute) ToMachineLearningComputeOutput() MachineLearningComputeOutput {
	return i.ToMachineLearningComputeOutputWithContext(context.Background())
}

func (i *MachineLearningCompute) ToMachineLearningComputeOutputWithContext(ctx context.Context) MachineLearningComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineLearningComputeOutput)
}

type MachineLearningComputeOutput struct{ *pulumi.OutputState }

func (MachineLearningComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineLearningCompute)(nil)).Elem()
}

func (o MachineLearningComputeOutput) ToMachineLearningComputeOutput() MachineLearningComputeOutput {
	return o
}

func (o MachineLearningComputeOutput) ToMachineLearningComputeOutputWithContext(ctx context.Context) MachineLearningComputeOutput {
	return o
}

// The identity of the resource.
func (o MachineLearningComputeOutput) Identity() IdentityResponsePtrOutput {
	return o.ApplyT(func(v *MachineLearningCompute) IdentityResponsePtrOutput { return v.Identity }).(IdentityResponsePtrOutput)
}

// Specifies the location of the resource.
func (o MachineLearningComputeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineLearningCompute) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Specifies the name of the resource.
func (o MachineLearningComputeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MachineLearningCompute) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Compute properties
func (o MachineLearningComputeOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v *MachineLearningCompute) pulumi.AnyOutput { return v.Properties }).(pulumi.AnyOutput)
}

// The sku of the workspace.
func (o MachineLearningComputeOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v *MachineLearningCompute) SkuResponsePtrOutput { return v.Sku }).(SkuResponsePtrOutput)
}

// Read only system data
func (o MachineLearningComputeOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *MachineLearningCompute) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Contains resource tags defined as key/value pairs.
func (o MachineLearningComputeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MachineLearningCompute) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the type of the resource.
func (o MachineLearningComputeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *MachineLearningCompute) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(MachineLearningComputeOutput{})
}
