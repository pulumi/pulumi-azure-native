// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210701

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Machine Learning compute based on AKS.
type AKS struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AKS'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// AKS properties
	Properties *AKSProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// AKSInput is an input type that accepts AKSArgs and AKSOutput values.
// You can construct a concrete instance of `AKSInput` via:
//
//          AKSArgs{...}
type AKSInput interface {
	pulumi.Input

	ToAKSOutput() AKSOutput
	ToAKSOutputWithContext(context.Context) AKSOutput
}

// A Machine Learning compute based on AKS.
type AKSArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AKS'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// AKS properties
	Properties AKSPropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (AKSArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKS)(nil)).Elem()
}

func (i AKSArgs) ToAKSOutput() AKSOutput {
	return i.ToAKSOutputWithContext(context.Background())
}

func (i AKSArgs) ToAKSOutputWithContext(ctx context.Context) AKSOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSOutput)
}

// A Machine Learning compute based on AKS.
type AKSOutput struct{ *pulumi.OutputState }

func (AKSOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKS)(nil)).Elem()
}

func (o AKSOutput) ToAKSOutput() AKSOutput {
	return o
}

func (o AKSOutput) ToAKSOutputWithContext(ctx context.Context) AKSOutput {
	return o
}

// Location for the underlying compute
func (o AKSOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKS) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'AKS'.
func (o AKSOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AKS) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o AKSOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKS) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o AKSOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKS) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// AKS properties
func (o AKSOutput) Properties() AKSPropertiesPtrOutput {
	return o.ApplyT(func(v AKS) *AKSProperties { return v.Properties }).(AKSPropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o AKSOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKS) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// AKS properties
type AKSProperties struct {
	// Number of agents
	AgentCount *int `pulumi:"agentCount"`
	// Agent virtual machine size
	AgentVmSize *string `pulumi:"agentVmSize"`
	// AKS networking configuration for vnet
	AksNetworkingConfiguration *AksNetworkingConfiguration `pulumi:"aksNetworkingConfiguration"`
	// Cluster full qualified domain name
	ClusterFqdn *string `pulumi:"clusterFqdn"`
	// Intended usage of the cluster
	ClusterPurpose *string `pulumi:"clusterPurpose"`
	// Load Balancer Subnet
	LoadBalancerSubnet *string `pulumi:"loadBalancerSubnet"`
	// Load Balancer Type
	LoadBalancerType *string `pulumi:"loadBalancerType"`
	// SSL configuration
	SslConfiguration *SslConfiguration `pulumi:"sslConfiguration"`
}

// AKSPropertiesInput is an input type that accepts AKSPropertiesArgs and AKSPropertiesOutput values.
// You can construct a concrete instance of `AKSPropertiesInput` via:
//
//          AKSPropertiesArgs{...}
type AKSPropertiesInput interface {
	pulumi.Input

	ToAKSPropertiesOutput() AKSPropertiesOutput
	ToAKSPropertiesOutputWithContext(context.Context) AKSPropertiesOutput
}

// AKS properties
type AKSPropertiesArgs struct {
	// Number of agents
	AgentCount pulumi.IntPtrInput `pulumi:"agentCount"`
	// Agent virtual machine size
	AgentVmSize pulumi.StringPtrInput `pulumi:"agentVmSize"`
	// AKS networking configuration for vnet
	AksNetworkingConfiguration AksNetworkingConfigurationPtrInput `pulumi:"aksNetworkingConfiguration"`
	// Cluster full qualified domain name
	ClusterFqdn pulumi.StringPtrInput `pulumi:"clusterFqdn"`
	// Intended usage of the cluster
	ClusterPurpose pulumi.StringPtrInput `pulumi:"clusterPurpose"`
	// Load Balancer Subnet
	LoadBalancerSubnet pulumi.StringPtrInput `pulumi:"loadBalancerSubnet"`
	// Load Balancer Type
	LoadBalancerType pulumi.StringPtrInput `pulumi:"loadBalancerType"`
	// SSL configuration
	SslConfiguration SslConfigurationPtrInput `pulumi:"sslConfiguration"`
}

func (AKSPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSProperties)(nil)).Elem()
}

func (i AKSPropertiesArgs) ToAKSPropertiesOutput() AKSPropertiesOutput {
	return i.ToAKSPropertiesOutputWithContext(context.Background())
}

func (i AKSPropertiesArgs) ToAKSPropertiesOutputWithContext(ctx context.Context) AKSPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSPropertiesOutput)
}

func (i AKSPropertiesArgs) ToAKSPropertiesPtrOutput() AKSPropertiesPtrOutput {
	return i.ToAKSPropertiesPtrOutputWithContext(context.Background())
}

func (i AKSPropertiesArgs) ToAKSPropertiesPtrOutputWithContext(ctx context.Context) AKSPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSPropertiesOutput).ToAKSPropertiesPtrOutputWithContext(ctx)
}

// AKSPropertiesPtrInput is an input type that accepts AKSPropertiesArgs, AKSPropertiesPtr and AKSPropertiesPtrOutput values.
// You can construct a concrete instance of `AKSPropertiesPtrInput` via:
//
//          AKSPropertiesArgs{...}
//
//  or:
//
//          nil
type AKSPropertiesPtrInput interface {
	pulumi.Input

	ToAKSPropertiesPtrOutput() AKSPropertiesPtrOutput
	ToAKSPropertiesPtrOutputWithContext(context.Context) AKSPropertiesPtrOutput
}

type akspropertiesPtrType AKSPropertiesArgs

func AKSPropertiesPtr(v *AKSPropertiesArgs) AKSPropertiesPtrInput {
	return (*akspropertiesPtrType)(v)
}

func (*akspropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSProperties)(nil)).Elem()
}

func (i *akspropertiesPtrType) ToAKSPropertiesPtrOutput() AKSPropertiesPtrOutput {
	return i.ToAKSPropertiesPtrOutputWithContext(context.Background())
}

func (i *akspropertiesPtrType) ToAKSPropertiesPtrOutputWithContext(ctx context.Context) AKSPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSPropertiesPtrOutput)
}

// AKS properties
type AKSPropertiesOutput struct{ *pulumi.OutputState }

func (AKSPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSProperties)(nil)).Elem()
}

func (o AKSPropertiesOutput) ToAKSPropertiesOutput() AKSPropertiesOutput {
	return o
}

func (o AKSPropertiesOutput) ToAKSPropertiesOutputWithContext(ctx context.Context) AKSPropertiesOutput {
	return o
}

func (o AKSPropertiesOutput) ToAKSPropertiesPtrOutput() AKSPropertiesPtrOutput {
	return o.ToAKSPropertiesPtrOutputWithContext(context.Background())
}

func (o AKSPropertiesOutput) ToAKSPropertiesPtrOutputWithContext(ctx context.Context) AKSPropertiesPtrOutput {
	return o.ApplyT(func(v AKSProperties) *AKSProperties {
		return &v
	}).(AKSPropertiesPtrOutput)
}

// Number of agents
func (o AKSPropertiesOutput) AgentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSProperties) *int { return v.AgentCount }).(pulumi.IntPtrOutput)
}

// Agent virtual machine size
func (o AKSPropertiesOutput) AgentVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSProperties) *string { return v.AgentVmSize }).(pulumi.StringPtrOutput)
}

// AKS networking configuration for vnet
func (o AKSPropertiesOutput) AksNetworkingConfiguration() AksNetworkingConfigurationPtrOutput {
	return o.ApplyT(func(v AKSProperties) *AksNetworkingConfiguration { return v.AksNetworkingConfiguration }).(AksNetworkingConfigurationPtrOutput)
}

// Cluster full qualified domain name
func (o AKSPropertiesOutput) ClusterFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSProperties) *string { return v.ClusterFqdn }).(pulumi.StringPtrOutput)
}

// Intended usage of the cluster
func (o AKSPropertiesOutput) ClusterPurpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSProperties) *string { return v.ClusterPurpose }).(pulumi.StringPtrOutput)
}

// Load Balancer Subnet
func (o AKSPropertiesOutput) LoadBalancerSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSProperties) *string { return v.LoadBalancerSubnet }).(pulumi.StringPtrOutput)
}

// Load Balancer Type
func (o AKSPropertiesOutput) LoadBalancerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSProperties) *string { return v.LoadBalancerType }).(pulumi.StringPtrOutput)
}

// SSL configuration
func (o AKSPropertiesOutput) SslConfiguration() SslConfigurationPtrOutput {
	return o.ApplyT(func(v AKSProperties) *SslConfiguration { return v.SslConfiguration }).(SslConfigurationPtrOutput)
}

type AKSPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AKSPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSProperties)(nil)).Elem()
}

func (o AKSPropertiesPtrOutput) ToAKSPropertiesPtrOutput() AKSPropertiesPtrOutput {
	return o
}

func (o AKSPropertiesPtrOutput) ToAKSPropertiesPtrOutputWithContext(ctx context.Context) AKSPropertiesPtrOutput {
	return o
}

func (o AKSPropertiesPtrOutput) Elem() AKSPropertiesOutput {
	return o.ApplyT(func(v *AKSProperties) AKSProperties { return *v }).(AKSPropertiesOutput)
}

// Number of agents
func (o AKSPropertiesPtrOutput) AgentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *int {
		if v == nil {
			return nil
		}
		return v.AgentCount
	}).(pulumi.IntPtrOutput)
}

// Agent virtual machine size
func (o AKSPropertiesPtrOutput) AgentVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *string {
		if v == nil {
			return nil
		}
		return v.AgentVmSize
	}).(pulumi.StringPtrOutput)
}

// AKS networking configuration for vnet
func (o AKSPropertiesPtrOutput) AksNetworkingConfiguration() AksNetworkingConfigurationPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *AksNetworkingConfiguration {
		if v == nil {
			return nil
		}
		return v.AksNetworkingConfiguration
	}).(AksNetworkingConfigurationPtrOutput)
}

// Cluster full qualified domain name
func (o AKSPropertiesPtrOutput) ClusterFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClusterFqdn
	}).(pulumi.StringPtrOutput)
}

// Intended usage of the cluster
func (o AKSPropertiesPtrOutput) ClusterPurpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClusterPurpose
	}).(pulumi.StringPtrOutput)
}

// Load Balancer Subnet
func (o AKSPropertiesPtrOutput) LoadBalancerSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerSubnet
	}).(pulumi.StringPtrOutput)
}

// Load Balancer Type
func (o AKSPropertiesPtrOutput) LoadBalancerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerType
	}).(pulumi.StringPtrOutput)
}

// SSL configuration
func (o AKSPropertiesPtrOutput) SslConfiguration() SslConfigurationPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *SslConfiguration {
		if v == nil {
			return nil
		}
		return v.SslConfiguration
	}).(SslConfigurationPtrOutput)
}

// A Machine Learning compute based on AKS.
type AKSResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AKS'.
	ComputeType string `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// AKS properties
	Properties *AKSResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []ErrorResponseResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// AKSResponseInput is an input type that accepts AKSResponseArgs and AKSResponseOutput values.
// You can construct a concrete instance of `AKSResponseInput` via:
//
//          AKSResponseArgs{...}
type AKSResponseInput interface {
	pulumi.Input

	ToAKSResponseOutput() AKSResponseOutput
	ToAKSResponseOutputWithContext(context.Context) AKSResponseOutput
}

// A Machine Learning compute based on AKS.
type AKSResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AKS'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn pulumi.StringInput `pulumi:"modifiedOn"`
	// AKS properties
	Properties AKSResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors ErrorResponseResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (AKSResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSResponse)(nil)).Elem()
}

func (i AKSResponseArgs) ToAKSResponseOutput() AKSResponseOutput {
	return i.ToAKSResponseOutputWithContext(context.Background())
}

func (i AKSResponseArgs) ToAKSResponseOutputWithContext(ctx context.Context) AKSResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSResponseOutput)
}

// A Machine Learning compute based on AKS.
type AKSResponseOutput struct{ *pulumi.OutputState }

func (AKSResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSResponse)(nil)).Elem()
}

func (o AKSResponseOutput) ToAKSResponseOutput() AKSResponseOutput {
	return o
}

func (o AKSResponseOutput) ToAKSResponseOutputWithContext(ctx context.Context) AKSResponseOutput {
	return o
}

// Location for the underlying compute
func (o AKSResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'AKS'.
func (o AKSResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AKSResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The time at which the compute was created.
func (o AKSResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v AKSResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o AKSResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o AKSResponseOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSResponse) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o AKSResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v AKSResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The time at which the compute was last modified.
func (o AKSResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v AKSResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// AKS properties
func (o AKSResponseOutput) Properties() AKSResponsePropertiesPtrOutput {
	return o.ApplyT(func(v AKSResponse) *AKSResponseProperties { return v.Properties }).(AKSResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o AKSResponseOutput) ProvisioningErrors() ErrorResponseResponseArrayOutput {
	return o.ApplyT(func(v AKSResponse) []ErrorResponseResponse { return v.ProvisioningErrors }).(ErrorResponseResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o AKSResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AKSResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o AKSResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// AKS properties
type AKSResponseProperties struct {
	// Number of agents
	AgentCount *int `pulumi:"agentCount"`
	// Agent virtual machine size
	AgentVmSize *string `pulumi:"agentVmSize"`
	// AKS networking configuration for vnet
	AksNetworkingConfiguration *AksNetworkingConfigurationResponse `pulumi:"aksNetworkingConfiguration"`
	// Cluster full qualified domain name
	ClusterFqdn *string `pulumi:"clusterFqdn"`
	// Intended usage of the cluster
	ClusterPurpose *string `pulumi:"clusterPurpose"`
	// Load Balancer Subnet
	LoadBalancerSubnet *string `pulumi:"loadBalancerSubnet"`
	// Load Balancer Type
	LoadBalancerType *string `pulumi:"loadBalancerType"`
	// SSL configuration
	SslConfiguration *SslConfigurationResponse `pulumi:"sslConfiguration"`
	// System services
	SystemServices []SystemServiceResponse `pulumi:"systemServices"`
}

// AKSResponsePropertiesInput is an input type that accepts AKSResponsePropertiesArgs and AKSResponsePropertiesOutput values.
// You can construct a concrete instance of `AKSResponsePropertiesInput` via:
//
//          AKSResponsePropertiesArgs{...}
type AKSResponsePropertiesInput interface {
	pulumi.Input

	ToAKSResponsePropertiesOutput() AKSResponsePropertiesOutput
	ToAKSResponsePropertiesOutputWithContext(context.Context) AKSResponsePropertiesOutput
}

// AKS properties
type AKSResponsePropertiesArgs struct {
	// Number of agents
	AgentCount pulumi.IntPtrInput `pulumi:"agentCount"`
	// Agent virtual machine size
	AgentVmSize pulumi.StringPtrInput `pulumi:"agentVmSize"`
	// AKS networking configuration for vnet
	AksNetworkingConfiguration AksNetworkingConfigurationResponsePtrInput `pulumi:"aksNetworkingConfiguration"`
	// Cluster full qualified domain name
	ClusterFqdn pulumi.StringPtrInput `pulumi:"clusterFqdn"`
	// Intended usage of the cluster
	ClusterPurpose pulumi.StringPtrInput `pulumi:"clusterPurpose"`
	// Load Balancer Subnet
	LoadBalancerSubnet pulumi.StringPtrInput `pulumi:"loadBalancerSubnet"`
	// Load Balancer Type
	LoadBalancerType pulumi.StringPtrInput `pulumi:"loadBalancerType"`
	// SSL configuration
	SslConfiguration SslConfigurationResponsePtrInput `pulumi:"sslConfiguration"`
	// System services
	SystemServices SystemServiceResponseArrayInput `pulumi:"systemServices"`
}

func (AKSResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSResponseProperties)(nil)).Elem()
}

func (i AKSResponsePropertiesArgs) ToAKSResponsePropertiesOutput() AKSResponsePropertiesOutput {
	return i.ToAKSResponsePropertiesOutputWithContext(context.Background())
}

func (i AKSResponsePropertiesArgs) ToAKSResponsePropertiesOutputWithContext(ctx context.Context) AKSResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSResponsePropertiesOutput)
}

func (i AKSResponsePropertiesArgs) ToAKSResponsePropertiesPtrOutput() AKSResponsePropertiesPtrOutput {
	return i.ToAKSResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i AKSResponsePropertiesArgs) ToAKSResponsePropertiesPtrOutputWithContext(ctx context.Context) AKSResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSResponsePropertiesOutput).ToAKSResponsePropertiesPtrOutputWithContext(ctx)
}

// AKSResponsePropertiesPtrInput is an input type that accepts AKSResponsePropertiesArgs, AKSResponsePropertiesPtr and AKSResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `AKSResponsePropertiesPtrInput` via:
//
//          AKSResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type AKSResponsePropertiesPtrInput interface {
	pulumi.Input

	ToAKSResponsePropertiesPtrOutput() AKSResponsePropertiesPtrOutput
	ToAKSResponsePropertiesPtrOutputWithContext(context.Context) AKSResponsePropertiesPtrOutput
}

type aksresponsePropertiesPtrType AKSResponsePropertiesArgs

func AKSResponsePropertiesPtr(v *AKSResponsePropertiesArgs) AKSResponsePropertiesPtrInput {
	return (*aksresponsePropertiesPtrType)(v)
}

func (*aksresponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSResponseProperties)(nil)).Elem()
}

func (i *aksresponsePropertiesPtrType) ToAKSResponsePropertiesPtrOutput() AKSResponsePropertiesPtrOutput {
	return i.ToAKSResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *aksresponsePropertiesPtrType) ToAKSResponsePropertiesPtrOutputWithContext(ctx context.Context) AKSResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSResponsePropertiesPtrOutput)
}

// AKS properties
type AKSResponsePropertiesOutput struct{ *pulumi.OutputState }

func (AKSResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSResponseProperties)(nil)).Elem()
}

func (o AKSResponsePropertiesOutput) ToAKSResponsePropertiesOutput() AKSResponsePropertiesOutput {
	return o
}

func (o AKSResponsePropertiesOutput) ToAKSResponsePropertiesOutputWithContext(ctx context.Context) AKSResponsePropertiesOutput {
	return o
}

func (o AKSResponsePropertiesOutput) ToAKSResponsePropertiesPtrOutput() AKSResponsePropertiesPtrOutput {
	return o.ToAKSResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o AKSResponsePropertiesOutput) ToAKSResponsePropertiesPtrOutputWithContext(ctx context.Context) AKSResponsePropertiesPtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *AKSResponseProperties {
		return &v
	}).(AKSResponsePropertiesPtrOutput)
}

// Number of agents
func (o AKSResponsePropertiesOutput) AgentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *int { return v.AgentCount }).(pulumi.IntPtrOutput)
}

// Agent virtual machine size
func (o AKSResponsePropertiesOutput) AgentVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *string { return v.AgentVmSize }).(pulumi.StringPtrOutput)
}

// AKS networking configuration for vnet
func (o AKSResponsePropertiesOutput) AksNetworkingConfiguration() AksNetworkingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *AksNetworkingConfigurationResponse { return v.AksNetworkingConfiguration }).(AksNetworkingConfigurationResponsePtrOutput)
}

// Cluster full qualified domain name
func (o AKSResponsePropertiesOutput) ClusterFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *string { return v.ClusterFqdn }).(pulumi.StringPtrOutput)
}

// Intended usage of the cluster
func (o AKSResponsePropertiesOutput) ClusterPurpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *string { return v.ClusterPurpose }).(pulumi.StringPtrOutput)
}

// Load Balancer Subnet
func (o AKSResponsePropertiesOutput) LoadBalancerSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *string { return v.LoadBalancerSubnet }).(pulumi.StringPtrOutput)
}

// Load Balancer Type
func (o AKSResponsePropertiesOutput) LoadBalancerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *string { return v.LoadBalancerType }).(pulumi.StringPtrOutput)
}

// SSL configuration
func (o AKSResponsePropertiesOutput) SslConfiguration() SslConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *SslConfigurationResponse { return v.SslConfiguration }).(SslConfigurationResponsePtrOutput)
}

// System services
func (o AKSResponsePropertiesOutput) SystemServices() SystemServiceResponseArrayOutput {
	return o.ApplyT(func(v AKSResponseProperties) []SystemServiceResponse { return v.SystemServices }).(SystemServiceResponseArrayOutput)
}

type AKSResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AKSResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSResponseProperties)(nil)).Elem()
}

func (o AKSResponsePropertiesPtrOutput) ToAKSResponsePropertiesPtrOutput() AKSResponsePropertiesPtrOutput {
	return o
}

func (o AKSResponsePropertiesPtrOutput) ToAKSResponsePropertiesPtrOutputWithContext(ctx context.Context) AKSResponsePropertiesPtrOutput {
	return o
}

func (o AKSResponsePropertiesPtrOutput) Elem() AKSResponsePropertiesOutput {
	return o.ApplyT(func(v *AKSResponseProperties) AKSResponseProperties { return *v }).(AKSResponsePropertiesOutput)
}

// Number of agents
func (o AKSResponsePropertiesPtrOutput) AgentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.AgentCount
	}).(pulumi.IntPtrOutput)
}

// Agent virtual machine size
func (o AKSResponsePropertiesPtrOutput) AgentVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.AgentVmSize
	}).(pulumi.StringPtrOutput)
}

// AKS networking configuration for vnet
func (o AKSResponsePropertiesPtrOutput) AksNetworkingConfiguration() AksNetworkingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *AksNetworkingConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.AksNetworkingConfiguration
	}).(AksNetworkingConfigurationResponsePtrOutput)
}

// Cluster full qualified domain name
func (o AKSResponsePropertiesPtrOutput) ClusterFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClusterFqdn
	}).(pulumi.StringPtrOutput)
}

// Intended usage of the cluster
func (o AKSResponsePropertiesPtrOutput) ClusterPurpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClusterPurpose
	}).(pulumi.StringPtrOutput)
}

// Load Balancer Subnet
func (o AKSResponsePropertiesPtrOutput) LoadBalancerSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerSubnet
	}).(pulumi.StringPtrOutput)
}

// Load Balancer Type
func (o AKSResponsePropertiesPtrOutput) LoadBalancerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerType
	}).(pulumi.StringPtrOutput)
}

// SSL configuration
func (o AKSResponsePropertiesPtrOutput) SslConfiguration() SslConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *SslConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.SslConfiguration
	}).(SslConfigurationResponsePtrOutput)
}

// System services
func (o AKSResponsePropertiesPtrOutput) SystemServices() SystemServiceResponseArrayOutput {
	return o.ApplyT(func(v *AKSResponseProperties) []SystemServiceResponse {
		if v == nil {
			return nil
		}
		return v.SystemServices
	}).(SystemServiceResponseArrayOutput)
}

// Advance configuration for AKS networking
type AksNetworkingConfiguration struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP *string `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr *string `pulumi:"dockerBridgeCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr *string `pulumi:"serviceCidr"`
	// Virtual network subnet resource ID the compute nodes belong to
	SubnetId *string `pulumi:"subnetId"`
}

// AksNetworkingConfigurationInput is an input type that accepts AksNetworkingConfigurationArgs and AksNetworkingConfigurationOutput values.
// You can construct a concrete instance of `AksNetworkingConfigurationInput` via:
//
//          AksNetworkingConfigurationArgs{...}
type AksNetworkingConfigurationInput interface {
	pulumi.Input

	ToAksNetworkingConfigurationOutput() AksNetworkingConfigurationOutput
	ToAksNetworkingConfigurationOutputWithContext(context.Context) AksNetworkingConfigurationOutput
}

// Advance configuration for AKS networking
type AksNetworkingConfigurationArgs struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP pulumi.StringPtrInput `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr pulumi.StringPtrInput `pulumi:"dockerBridgeCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr pulumi.StringPtrInput `pulumi:"serviceCidr"`
	// Virtual network subnet resource ID the compute nodes belong to
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (AksNetworkingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AksNetworkingConfiguration)(nil)).Elem()
}

func (i AksNetworkingConfigurationArgs) ToAksNetworkingConfigurationOutput() AksNetworkingConfigurationOutput {
	return i.ToAksNetworkingConfigurationOutputWithContext(context.Background())
}

func (i AksNetworkingConfigurationArgs) ToAksNetworkingConfigurationOutputWithContext(ctx context.Context) AksNetworkingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationOutput)
}

func (i AksNetworkingConfigurationArgs) ToAksNetworkingConfigurationPtrOutput() AksNetworkingConfigurationPtrOutput {
	return i.ToAksNetworkingConfigurationPtrOutputWithContext(context.Background())
}

func (i AksNetworkingConfigurationArgs) ToAksNetworkingConfigurationPtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationOutput).ToAksNetworkingConfigurationPtrOutputWithContext(ctx)
}

// AksNetworkingConfigurationPtrInput is an input type that accepts AksNetworkingConfigurationArgs, AksNetworkingConfigurationPtr and AksNetworkingConfigurationPtrOutput values.
// You can construct a concrete instance of `AksNetworkingConfigurationPtrInput` via:
//
//          AksNetworkingConfigurationArgs{...}
//
//  or:
//
//          nil
type AksNetworkingConfigurationPtrInput interface {
	pulumi.Input

	ToAksNetworkingConfigurationPtrOutput() AksNetworkingConfigurationPtrOutput
	ToAksNetworkingConfigurationPtrOutputWithContext(context.Context) AksNetworkingConfigurationPtrOutput
}

type aksNetworkingConfigurationPtrType AksNetworkingConfigurationArgs

func AksNetworkingConfigurationPtr(v *AksNetworkingConfigurationArgs) AksNetworkingConfigurationPtrInput {
	return (*aksNetworkingConfigurationPtrType)(v)
}

func (*aksNetworkingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AksNetworkingConfiguration)(nil)).Elem()
}

func (i *aksNetworkingConfigurationPtrType) ToAksNetworkingConfigurationPtrOutput() AksNetworkingConfigurationPtrOutput {
	return i.ToAksNetworkingConfigurationPtrOutputWithContext(context.Background())
}

func (i *aksNetworkingConfigurationPtrType) ToAksNetworkingConfigurationPtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationPtrOutput)
}

// Advance configuration for AKS networking
type AksNetworkingConfigurationOutput struct{ *pulumi.OutputState }

func (AksNetworkingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AksNetworkingConfiguration)(nil)).Elem()
}

func (o AksNetworkingConfigurationOutput) ToAksNetworkingConfigurationOutput() AksNetworkingConfigurationOutput {
	return o
}

func (o AksNetworkingConfigurationOutput) ToAksNetworkingConfigurationOutputWithContext(ctx context.Context) AksNetworkingConfigurationOutput {
	return o
}

func (o AksNetworkingConfigurationOutput) ToAksNetworkingConfigurationPtrOutput() AksNetworkingConfigurationPtrOutput {
	return o.ToAksNetworkingConfigurationPtrOutputWithContext(context.Background())
}

func (o AksNetworkingConfigurationOutput) ToAksNetworkingConfigurationPtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfiguration) *AksNetworkingConfiguration {
		return &v
	}).(AksNetworkingConfigurationPtrOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o AksNetworkingConfigurationOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfiguration) *string { return v.DnsServiceIP }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o AksNetworkingConfigurationOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfiguration) *string { return v.DockerBridgeCidr }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o AksNetworkingConfigurationOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfiguration) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to
func (o AksNetworkingConfigurationOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfiguration) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type AksNetworkingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AksNetworkingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AksNetworkingConfiguration)(nil)).Elem()
}

func (o AksNetworkingConfigurationPtrOutput) ToAksNetworkingConfigurationPtrOutput() AksNetworkingConfigurationPtrOutput {
	return o
}

func (o AksNetworkingConfigurationPtrOutput) ToAksNetworkingConfigurationPtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationPtrOutput {
	return o
}

func (o AksNetworkingConfigurationPtrOutput) Elem() AksNetworkingConfigurationOutput {
	return o.ApplyT(func(v *AksNetworkingConfiguration) AksNetworkingConfiguration { return *v }).(AksNetworkingConfigurationOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o AksNetworkingConfigurationPtrOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DnsServiceIP
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o AksNetworkingConfigurationPtrOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DockerBridgeCidr
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o AksNetworkingConfigurationPtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to
func (o AksNetworkingConfigurationPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// Advance configuration for AKS networking
type AksNetworkingConfigurationResponse struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP *string `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr *string `pulumi:"dockerBridgeCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr *string `pulumi:"serviceCidr"`
	// Virtual network subnet resource ID the compute nodes belong to
	SubnetId *string `pulumi:"subnetId"`
}

// AksNetworkingConfigurationResponseInput is an input type that accepts AksNetworkingConfigurationResponseArgs and AksNetworkingConfigurationResponseOutput values.
// You can construct a concrete instance of `AksNetworkingConfigurationResponseInput` via:
//
//          AksNetworkingConfigurationResponseArgs{...}
type AksNetworkingConfigurationResponseInput interface {
	pulumi.Input

	ToAksNetworkingConfigurationResponseOutput() AksNetworkingConfigurationResponseOutput
	ToAksNetworkingConfigurationResponseOutputWithContext(context.Context) AksNetworkingConfigurationResponseOutput
}

// Advance configuration for AKS networking
type AksNetworkingConfigurationResponseArgs struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP pulumi.StringPtrInput `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr pulumi.StringPtrInput `pulumi:"dockerBridgeCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr pulumi.StringPtrInput `pulumi:"serviceCidr"`
	// Virtual network subnet resource ID the compute nodes belong to
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (AksNetworkingConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AksNetworkingConfigurationResponse)(nil)).Elem()
}

func (i AksNetworkingConfigurationResponseArgs) ToAksNetworkingConfigurationResponseOutput() AksNetworkingConfigurationResponseOutput {
	return i.ToAksNetworkingConfigurationResponseOutputWithContext(context.Background())
}

func (i AksNetworkingConfigurationResponseArgs) ToAksNetworkingConfigurationResponseOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationResponseOutput)
}

func (i AksNetworkingConfigurationResponseArgs) ToAksNetworkingConfigurationResponsePtrOutput() AksNetworkingConfigurationResponsePtrOutput {
	return i.ToAksNetworkingConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i AksNetworkingConfigurationResponseArgs) ToAksNetworkingConfigurationResponsePtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationResponseOutput).ToAksNetworkingConfigurationResponsePtrOutputWithContext(ctx)
}

// AksNetworkingConfigurationResponsePtrInput is an input type that accepts AksNetworkingConfigurationResponseArgs, AksNetworkingConfigurationResponsePtr and AksNetworkingConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `AksNetworkingConfigurationResponsePtrInput` via:
//
//          AksNetworkingConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type AksNetworkingConfigurationResponsePtrInput interface {
	pulumi.Input

	ToAksNetworkingConfigurationResponsePtrOutput() AksNetworkingConfigurationResponsePtrOutput
	ToAksNetworkingConfigurationResponsePtrOutputWithContext(context.Context) AksNetworkingConfigurationResponsePtrOutput
}

type aksNetworkingConfigurationResponsePtrType AksNetworkingConfigurationResponseArgs

func AksNetworkingConfigurationResponsePtr(v *AksNetworkingConfigurationResponseArgs) AksNetworkingConfigurationResponsePtrInput {
	return (*aksNetworkingConfigurationResponsePtrType)(v)
}

func (*aksNetworkingConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AksNetworkingConfigurationResponse)(nil)).Elem()
}

func (i *aksNetworkingConfigurationResponsePtrType) ToAksNetworkingConfigurationResponsePtrOutput() AksNetworkingConfigurationResponsePtrOutput {
	return i.ToAksNetworkingConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *aksNetworkingConfigurationResponsePtrType) ToAksNetworkingConfigurationResponsePtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationResponsePtrOutput)
}

// Advance configuration for AKS networking
type AksNetworkingConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AksNetworkingConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AksNetworkingConfigurationResponse)(nil)).Elem()
}

func (o AksNetworkingConfigurationResponseOutput) ToAksNetworkingConfigurationResponseOutput() AksNetworkingConfigurationResponseOutput {
	return o
}

func (o AksNetworkingConfigurationResponseOutput) ToAksNetworkingConfigurationResponseOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponseOutput {
	return o
}

func (o AksNetworkingConfigurationResponseOutput) ToAksNetworkingConfigurationResponsePtrOutput() AksNetworkingConfigurationResponsePtrOutput {
	return o.ToAksNetworkingConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o AksNetworkingConfigurationResponseOutput) ToAksNetworkingConfigurationResponsePtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationResponse) *AksNetworkingConfigurationResponse {
		return &v
	}).(AksNetworkingConfigurationResponsePtrOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o AksNetworkingConfigurationResponseOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationResponse) *string { return v.DnsServiceIP }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o AksNetworkingConfigurationResponseOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationResponse) *string { return v.DockerBridgeCidr }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o AksNetworkingConfigurationResponseOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationResponse) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to
func (o AksNetworkingConfigurationResponseOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationResponse) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type AksNetworkingConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (AksNetworkingConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AksNetworkingConfigurationResponse)(nil)).Elem()
}

func (o AksNetworkingConfigurationResponsePtrOutput) ToAksNetworkingConfigurationResponsePtrOutput() AksNetworkingConfigurationResponsePtrOutput {
	return o
}

func (o AksNetworkingConfigurationResponsePtrOutput) ToAksNetworkingConfigurationResponsePtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponsePtrOutput {
	return o
}

func (o AksNetworkingConfigurationResponsePtrOutput) Elem() AksNetworkingConfigurationResponseOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationResponse) AksNetworkingConfigurationResponse { return *v }).(AksNetworkingConfigurationResponseOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o AksNetworkingConfigurationResponsePtrOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.DnsServiceIP
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o AksNetworkingConfigurationResponsePtrOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.DockerBridgeCidr
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o AksNetworkingConfigurationResponsePtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to
func (o AksNetworkingConfigurationResponsePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// An Azure Machine Learning compute.
type AmlCompute struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AmlCompute'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Properties of AmlCompute
	Properties *AmlComputeProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// AmlComputeInput is an input type that accepts AmlComputeArgs and AmlComputeOutput values.
// You can construct a concrete instance of `AmlComputeInput` via:
//
//          AmlComputeArgs{...}
type AmlComputeInput interface {
	pulumi.Input

	ToAmlComputeOutput() AmlComputeOutput
	ToAmlComputeOutputWithContext(context.Context) AmlComputeOutput
}

// An Azure Machine Learning compute.
type AmlComputeArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AmlCompute'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// Properties of AmlCompute
	Properties AmlComputePropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (AmlComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlCompute)(nil)).Elem()
}

func (i AmlComputeArgs) ToAmlComputeOutput() AmlComputeOutput {
	return i.ToAmlComputeOutputWithContext(context.Background())
}

func (i AmlComputeArgs) ToAmlComputeOutputWithContext(ctx context.Context) AmlComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeOutput)
}

// An Azure Machine Learning compute.
type AmlComputeOutput struct{ *pulumi.OutputState }

func (AmlComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlCompute)(nil)).Elem()
}

func (o AmlComputeOutput) ToAmlComputeOutput() AmlComputeOutput {
	return o
}

func (o AmlComputeOutput) ToAmlComputeOutputWithContext(ctx context.Context) AmlComputeOutput {
	return o
}

// Location for the underlying compute
func (o AmlComputeOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlCompute) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'AmlCompute'.
func (o AmlComputeOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AmlCompute) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o AmlComputeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlCompute) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o AmlComputeOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmlCompute) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// Properties of AmlCompute
func (o AmlComputeOutput) Properties() AmlComputePropertiesPtrOutput {
	return o.ApplyT(func(v AmlCompute) *AmlComputeProperties { return v.Properties }).(AmlComputePropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o AmlComputeOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlCompute) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Compute node information related to a AmlCompute.
type AmlComputeNodeInformationResponse struct {
	// ID of the compute node.
	NodeId string `pulumi:"nodeId"`
	// State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted.
	NodeState string `pulumi:"nodeState"`
	// SSH port number of the node.
	Port float64 `pulumi:"port"`
	// Private IP address of the compute node.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// Public IP address of the compute node.
	PublicIpAddress string `pulumi:"publicIpAddress"`
	// ID of the Experiment running on the node, if any else null.
	RunId string `pulumi:"runId"`
}

// AmlComputeNodeInformationResponseInput is an input type that accepts AmlComputeNodeInformationResponseArgs and AmlComputeNodeInformationResponseOutput values.
// You can construct a concrete instance of `AmlComputeNodeInformationResponseInput` via:
//
//          AmlComputeNodeInformationResponseArgs{...}
type AmlComputeNodeInformationResponseInput interface {
	pulumi.Input

	ToAmlComputeNodeInformationResponseOutput() AmlComputeNodeInformationResponseOutput
	ToAmlComputeNodeInformationResponseOutputWithContext(context.Context) AmlComputeNodeInformationResponseOutput
}

// Compute node information related to a AmlCompute.
type AmlComputeNodeInformationResponseArgs struct {
	// ID of the compute node.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted.
	NodeState pulumi.StringInput `pulumi:"nodeState"`
	// SSH port number of the node.
	Port pulumi.Float64Input `pulumi:"port"`
	// Private IP address of the compute node.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// Public IP address of the compute node.
	PublicIpAddress pulumi.StringInput `pulumi:"publicIpAddress"`
	// ID of the Experiment running on the node, if any else null.
	RunId pulumi.StringInput `pulumi:"runId"`
}

func (AmlComputeNodeInformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeNodeInformationResponse)(nil)).Elem()
}

func (i AmlComputeNodeInformationResponseArgs) ToAmlComputeNodeInformationResponseOutput() AmlComputeNodeInformationResponseOutput {
	return i.ToAmlComputeNodeInformationResponseOutputWithContext(context.Background())
}

func (i AmlComputeNodeInformationResponseArgs) ToAmlComputeNodeInformationResponseOutputWithContext(ctx context.Context) AmlComputeNodeInformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeNodeInformationResponseOutput)
}

// AmlComputeNodeInformationResponseArrayInput is an input type that accepts AmlComputeNodeInformationResponseArray and AmlComputeNodeInformationResponseArrayOutput values.
// You can construct a concrete instance of `AmlComputeNodeInformationResponseArrayInput` via:
//
//          AmlComputeNodeInformationResponseArray{ AmlComputeNodeInformationResponseArgs{...} }
type AmlComputeNodeInformationResponseArrayInput interface {
	pulumi.Input

	ToAmlComputeNodeInformationResponseArrayOutput() AmlComputeNodeInformationResponseArrayOutput
	ToAmlComputeNodeInformationResponseArrayOutputWithContext(context.Context) AmlComputeNodeInformationResponseArrayOutput
}

type AmlComputeNodeInformationResponseArray []AmlComputeNodeInformationResponseInput

func (AmlComputeNodeInformationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmlComputeNodeInformationResponse)(nil)).Elem()
}

func (i AmlComputeNodeInformationResponseArray) ToAmlComputeNodeInformationResponseArrayOutput() AmlComputeNodeInformationResponseArrayOutput {
	return i.ToAmlComputeNodeInformationResponseArrayOutputWithContext(context.Background())
}

func (i AmlComputeNodeInformationResponseArray) ToAmlComputeNodeInformationResponseArrayOutputWithContext(ctx context.Context) AmlComputeNodeInformationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeNodeInformationResponseArrayOutput)
}

// Compute node information related to a AmlCompute.
type AmlComputeNodeInformationResponseOutput struct{ *pulumi.OutputState }

func (AmlComputeNodeInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeNodeInformationResponse)(nil)).Elem()
}

func (o AmlComputeNodeInformationResponseOutput) ToAmlComputeNodeInformationResponseOutput() AmlComputeNodeInformationResponseOutput {
	return o
}

func (o AmlComputeNodeInformationResponseOutput) ToAmlComputeNodeInformationResponseOutputWithContext(ctx context.Context) AmlComputeNodeInformationResponseOutput {
	return o
}

// ID of the compute node.
func (o AmlComputeNodeInformationResponseOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeNodeInformationResponse) string { return v.NodeId }).(pulumi.StringOutput)
}

// State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted.
func (o AmlComputeNodeInformationResponseOutput) NodeState() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeNodeInformationResponse) string { return v.NodeState }).(pulumi.StringOutput)
}

// SSH port number of the node.
func (o AmlComputeNodeInformationResponseOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v AmlComputeNodeInformationResponse) float64 { return v.Port }).(pulumi.Float64Output)
}

// Private IP address of the compute node.
func (o AmlComputeNodeInformationResponseOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeNodeInformationResponse) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// Public IP address of the compute node.
func (o AmlComputeNodeInformationResponseOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeNodeInformationResponse) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

// ID of the Experiment running on the node, if any else null.
func (o AmlComputeNodeInformationResponseOutput) RunId() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeNodeInformationResponse) string { return v.RunId }).(pulumi.StringOutput)
}

type AmlComputeNodeInformationResponseArrayOutput struct{ *pulumi.OutputState }

func (AmlComputeNodeInformationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmlComputeNodeInformationResponse)(nil)).Elem()
}

func (o AmlComputeNodeInformationResponseArrayOutput) ToAmlComputeNodeInformationResponseArrayOutput() AmlComputeNodeInformationResponseArrayOutput {
	return o
}

func (o AmlComputeNodeInformationResponseArrayOutput) ToAmlComputeNodeInformationResponseArrayOutputWithContext(ctx context.Context) AmlComputeNodeInformationResponseArrayOutput {
	return o
}

func (o AmlComputeNodeInformationResponseArrayOutput) Index(i pulumi.IntInput) AmlComputeNodeInformationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmlComputeNodeInformationResponse {
		return vs[0].([]AmlComputeNodeInformationResponse)[vs[1].(int)]
	}).(AmlComputeNodeInformationResponseOutput)
}

// AML Compute properties
type AmlComputeProperties struct {
	// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
	EnableNodePublicIp *bool `pulumi:"enableNodePublicIp"`
	// Network is isolated or not
	IsolatedNetwork *bool `pulumi:"isolatedNetwork"`
	// Compute OS Type
	OsType *string `pulumi:"osType"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
	RemoteLoginPortPublicAccess *string `pulumi:"remoteLoginPortPublicAccess"`
	// Scale settings for AML Compute
	ScaleSettings *ScaleSettings `pulumi:"scaleSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet *ResourceId `pulumi:"subnet"`
	// Credentials for an administrator user account that will be created on each compute node.
	UserAccountCredentials *UserAccountCredentials `pulumi:"userAccountCredentials"`
	// Virtual Machine image for AML Compute - windows only
	VirtualMachineImage *VirtualMachineImage `pulumi:"virtualMachineImage"`
	// Virtual Machine priority
	VmPriority *string `pulumi:"vmPriority"`
	// Virtual Machine Size
	VmSize *string `pulumi:"vmSize"`
}

// AmlComputePropertiesInput is an input type that accepts AmlComputePropertiesArgs and AmlComputePropertiesOutput values.
// You can construct a concrete instance of `AmlComputePropertiesInput` via:
//
//          AmlComputePropertiesArgs{...}
type AmlComputePropertiesInput interface {
	pulumi.Input

	ToAmlComputePropertiesOutput() AmlComputePropertiesOutput
	ToAmlComputePropertiesOutputWithContext(context.Context) AmlComputePropertiesOutput
}

// AML Compute properties
type AmlComputePropertiesArgs struct {
	// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
	EnableNodePublicIp pulumi.BoolPtrInput `pulumi:"enableNodePublicIp"`
	// Network is isolated or not
	IsolatedNetwork pulumi.BoolPtrInput `pulumi:"isolatedNetwork"`
	// Compute OS Type
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
	RemoteLoginPortPublicAccess pulumi.StringPtrInput `pulumi:"remoteLoginPortPublicAccess"`
	// Scale settings for AML Compute
	ScaleSettings ScaleSettingsPtrInput `pulumi:"scaleSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet ResourceIdPtrInput `pulumi:"subnet"`
	// Credentials for an administrator user account that will be created on each compute node.
	UserAccountCredentials UserAccountCredentialsPtrInput `pulumi:"userAccountCredentials"`
	// Virtual Machine image for AML Compute - windows only
	VirtualMachineImage VirtualMachineImagePtrInput `pulumi:"virtualMachineImage"`
	// Virtual Machine priority
	VmPriority pulumi.StringPtrInput `pulumi:"vmPriority"`
	// Virtual Machine Size
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (AmlComputePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeProperties)(nil)).Elem()
}

func (i AmlComputePropertiesArgs) ToAmlComputePropertiesOutput() AmlComputePropertiesOutput {
	return i.ToAmlComputePropertiesOutputWithContext(context.Background())
}

func (i AmlComputePropertiesArgs) ToAmlComputePropertiesOutputWithContext(ctx context.Context) AmlComputePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputePropertiesOutput)
}

func (i AmlComputePropertiesArgs) ToAmlComputePropertiesPtrOutput() AmlComputePropertiesPtrOutput {
	return i.ToAmlComputePropertiesPtrOutputWithContext(context.Background())
}

func (i AmlComputePropertiesArgs) ToAmlComputePropertiesPtrOutputWithContext(ctx context.Context) AmlComputePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputePropertiesOutput).ToAmlComputePropertiesPtrOutputWithContext(ctx)
}

// AmlComputePropertiesPtrInput is an input type that accepts AmlComputePropertiesArgs, AmlComputePropertiesPtr and AmlComputePropertiesPtrOutput values.
// You can construct a concrete instance of `AmlComputePropertiesPtrInput` via:
//
//          AmlComputePropertiesArgs{...}
//
//  or:
//
//          nil
type AmlComputePropertiesPtrInput interface {
	pulumi.Input

	ToAmlComputePropertiesPtrOutput() AmlComputePropertiesPtrOutput
	ToAmlComputePropertiesPtrOutputWithContext(context.Context) AmlComputePropertiesPtrOutput
}

type amlComputePropertiesPtrType AmlComputePropertiesArgs

func AmlComputePropertiesPtr(v *AmlComputePropertiesArgs) AmlComputePropertiesPtrInput {
	return (*amlComputePropertiesPtrType)(v)
}

func (*amlComputePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlComputeProperties)(nil)).Elem()
}

func (i *amlComputePropertiesPtrType) ToAmlComputePropertiesPtrOutput() AmlComputePropertiesPtrOutput {
	return i.ToAmlComputePropertiesPtrOutputWithContext(context.Background())
}

func (i *amlComputePropertiesPtrType) ToAmlComputePropertiesPtrOutputWithContext(ctx context.Context) AmlComputePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputePropertiesPtrOutput)
}

// AML Compute properties
type AmlComputePropertiesOutput struct{ *pulumi.OutputState }

func (AmlComputePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeProperties)(nil)).Elem()
}

func (o AmlComputePropertiesOutput) ToAmlComputePropertiesOutput() AmlComputePropertiesOutput {
	return o
}

func (o AmlComputePropertiesOutput) ToAmlComputePropertiesOutputWithContext(ctx context.Context) AmlComputePropertiesOutput {
	return o
}

func (o AmlComputePropertiesOutput) ToAmlComputePropertiesPtrOutput() AmlComputePropertiesPtrOutput {
	return o.ToAmlComputePropertiesPtrOutputWithContext(context.Background())
}

func (o AmlComputePropertiesOutput) ToAmlComputePropertiesPtrOutputWithContext(ctx context.Context) AmlComputePropertiesPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *AmlComputeProperties {
		return &v
	}).(AmlComputePropertiesPtrOutput)
}

// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
func (o AmlComputePropertiesOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *bool { return v.EnableNodePublicIp }).(pulumi.BoolPtrOutput)
}

// Network is isolated or not
func (o AmlComputePropertiesOutput) IsolatedNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *bool { return v.IsolatedNetwork }).(pulumi.BoolPtrOutput)
}

// Compute OS Type
func (o AmlComputePropertiesOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
func (o AmlComputePropertiesOutput) RemoteLoginPortPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *string { return v.RemoteLoginPortPublicAccess }).(pulumi.StringPtrOutput)
}

// Scale settings for AML Compute
func (o AmlComputePropertiesOutput) ScaleSettings() ScaleSettingsPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *ScaleSettings { return v.ScaleSettings }).(ScaleSettingsPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o AmlComputePropertiesOutput) Subnet() ResourceIdPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *ResourceId { return v.Subnet }).(ResourceIdPtrOutput)
}

// Credentials for an administrator user account that will be created on each compute node.
func (o AmlComputePropertiesOutput) UserAccountCredentials() UserAccountCredentialsPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *UserAccountCredentials { return v.UserAccountCredentials }).(UserAccountCredentialsPtrOutput)
}

// Virtual Machine image for AML Compute - windows only
func (o AmlComputePropertiesOutput) VirtualMachineImage() VirtualMachineImagePtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *VirtualMachineImage { return v.VirtualMachineImage }).(VirtualMachineImagePtrOutput)
}

// Virtual Machine priority
func (o AmlComputePropertiesOutput) VmPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *string { return v.VmPriority }).(pulumi.StringPtrOutput)
}

// Virtual Machine Size
func (o AmlComputePropertiesOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type AmlComputePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AmlComputePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlComputeProperties)(nil)).Elem()
}

func (o AmlComputePropertiesPtrOutput) ToAmlComputePropertiesPtrOutput() AmlComputePropertiesPtrOutput {
	return o
}

func (o AmlComputePropertiesPtrOutput) ToAmlComputePropertiesPtrOutputWithContext(ctx context.Context) AmlComputePropertiesPtrOutput {
	return o
}

func (o AmlComputePropertiesPtrOutput) Elem() AmlComputePropertiesOutput {
	return o.ApplyT(func(v *AmlComputeProperties) AmlComputeProperties { return *v }).(AmlComputePropertiesOutput)
}

// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
func (o AmlComputePropertiesPtrOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNodePublicIp
	}).(pulumi.BoolPtrOutput)
}

// Network is isolated or not
func (o AmlComputePropertiesPtrOutput) IsolatedNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsolatedNetwork
	}).(pulumi.BoolPtrOutput)
}

// Compute OS Type
func (o AmlComputePropertiesPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
func (o AmlComputePropertiesPtrOutput) RemoteLoginPortPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *string {
		if v == nil {
			return nil
		}
		return v.RemoteLoginPortPublicAccess
	}).(pulumi.StringPtrOutput)
}

// Scale settings for AML Compute
func (o AmlComputePropertiesPtrOutput) ScaleSettings() ScaleSettingsPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *ScaleSettings {
		if v == nil {
			return nil
		}
		return v.ScaleSettings
	}).(ScaleSettingsPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o AmlComputePropertiesPtrOutput) Subnet() ResourceIdPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *ResourceId {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(ResourceIdPtrOutput)
}

// Credentials for an administrator user account that will be created on each compute node.
func (o AmlComputePropertiesPtrOutput) UserAccountCredentials() UserAccountCredentialsPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *UserAccountCredentials {
		if v == nil {
			return nil
		}
		return v.UserAccountCredentials
	}).(UserAccountCredentialsPtrOutput)
}

// Virtual Machine image for AML Compute - windows only
func (o AmlComputePropertiesPtrOutput) VirtualMachineImage() VirtualMachineImagePtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *VirtualMachineImage {
		if v == nil {
			return nil
		}
		return v.VirtualMachineImage
	}).(VirtualMachineImagePtrOutput)
}

// Virtual Machine priority
func (o AmlComputePropertiesPtrOutput) VmPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *string {
		if v == nil {
			return nil
		}
		return v.VmPriority
	}).(pulumi.StringPtrOutput)
}

// Virtual Machine Size
func (o AmlComputePropertiesPtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// AML Compute properties
type AmlComputePropertiesResponse struct {
	// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
	AllocationState string `pulumi:"allocationState"`
	// The time at which the compute entered its current allocation state.
	AllocationStateTransitionTime string `pulumi:"allocationStateTransitionTime"`
	// The number of compute nodes currently assigned to the compute.
	CurrentNodeCount int `pulumi:"currentNodeCount"`
	// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
	EnableNodePublicIp *bool `pulumi:"enableNodePublicIp"`
	// Collection of errors encountered by various compute nodes during node setup.
	Errors []ErrorResponseResponse `pulumi:"errors"`
	// Network is isolated or not
	IsolatedNetwork *bool `pulumi:"isolatedNetwork"`
	// Counts of various node states on the compute.
	NodeStateCounts NodeStateCountsResponse `pulumi:"nodeStateCounts"`
	// Compute OS Type
	OsType *string `pulumi:"osType"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
	RemoteLoginPortPublicAccess *string `pulumi:"remoteLoginPortPublicAccess"`
	// Scale settings for AML Compute
	ScaleSettings *ScaleSettingsResponse `pulumi:"scaleSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet *ResourceIdResponse `pulumi:"subnet"`
	// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
	TargetNodeCount int `pulumi:"targetNodeCount"`
	// Credentials for an administrator user account that will be created on each compute node.
	UserAccountCredentials *UserAccountCredentialsResponse `pulumi:"userAccountCredentials"`
	// Virtual Machine image for AML Compute - windows only
	VirtualMachineImage *VirtualMachineImageResponse `pulumi:"virtualMachineImage"`
	// Virtual Machine priority
	VmPriority *string `pulumi:"vmPriority"`
	// Virtual Machine Size
	VmSize *string `pulumi:"vmSize"`
}

// AmlComputePropertiesResponseInput is an input type that accepts AmlComputePropertiesResponseArgs and AmlComputePropertiesResponseOutput values.
// You can construct a concrete instance of `AmlComputePropertiesResponseInput` via:
//
//          AmlComputePropertiesResponseArgs{...}
type AmlComputePropertiesResponseInput interface {
	pulumi.Input

	ToAmlComputePropertiesResponseOutput() AmlComputePropertiesResponseOutput
	ToAmlComputePropertiesResponseOutputWithContext(context.Context) AmlComputePropertiesResponseOutput
}

// AML Compute properties
type AmlComputePropertiesResponseArgs struct {
	// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
	AllocationState pulumi.StringInput `pulumi:"allocationState"`
	// The time at which the compute entered its current allocation state.
	AllocationStateTransitionTime pulumi.StringInput `pulumi:"allocationStateTransitionTime"`
	// The number of compute nodes currently assigned to the compute.
	CurrentNodeCount pulumi.IntInput `pulumi:"currentNodeCount"`
	// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
	EnableNodePublicIp pulumi.BoolPtrInput `pulumi:"enableNodePublicIp"`
	// Collection of errors encountered by various compute nodes during node setup.
	Errors ErrorResponseResponseArrayInput `pulumi:"errors"`
	// Network is isolated or not
	IsolatedNetwork pulumi.BoolPtrInput `pulumi:"isolatedNetwork"`
	// Counts of various node states on the compute.
	NodeStateCounts NodeStateCountsResponseInput `pulumi:"nodeStateCounts"`
	// Compute OS Type
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
	RemoteLoginPortPublicAccess pulumi.StringPtrInput `pulumi:"remoteLoginPortPublicAccess"`
	// Scale settings for AML Compute
	ScaleSettings ScaleSettingsResponsePtrInput `pulumi:"scaleSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet ResourceIdResponsePtrInput `pulumi:"subnet"`
	// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
	TargetNodeCount pulumi.IntInput `pulumi:"targetNodeCount"`
	// Credentials for an administrator user account that will be created on each compute node.
	UserAccountCredentials UserAccountCredentialsResponsePtrInput `pulumi:"userAccountCredentials"`
	// Virtual Machine image for AML Compute - windows only
	VirtualMachineImage VirtualMachineImageResponsePtrInput `pulumi:"virtualMachineImage"`
	// Virtual Machine priority
	VmPriority pulumi.StringPtrInput `pulumi:"vmPriority"`
	// Virtual Machine Size
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (AmlComputePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputePropertiesResponse)(nil)).Elem()
}

func (i AmlComputePropertiesResponseArgs) ToAmlComputePropertiesResponseOutput() AmlComputePropertiesResponseOutput {
	return i.ToAmlComputePropertiesResponseOutputWithContext(context.Background())
}

func (i AmlComputePropertiesResponseArgs) ToAmlComputePropertiesResponseOutputWithContext(ctx context.Context) AmlComputePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputePropertiesResponseOutput)
}

func (i AmlComputePropertiesResponseArgs) ToAmlComputePropertiesResponsePtrOutput() AmlComputePropertiesResponsePtrOutput {
	return i.ToAmlComputePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AmlComputePropertiesResponseArgs) ToAmlComputePropertiesResponsePtrOutputWithContext(ctx context.Context) AmlComputePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputePropertiesResponseOutput).ToAmlComputePropertiesResponsePtrOutputWithContext(ctx)
}

// AmlComputePropertiesResponsePtrInput is an input type that accepts AmlComputePropertiesResponseArgs, AmlComputePropertiesResponsePtr and AmlComputePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AmlComputePropertiesResponsePtrInput` via:
//
//          AmlComputePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AmlComputePropertiesResponsePtrInput interface {
	pulumi.Input

	ToAmlComputePropertiesResponsePtrOutput() AmlComputePropertiesResponsePtrOutput
	ToAmlComputePropertiesResponsePtrOutputWithContext(context.Context) AmlComputePropertiesResponsePtrOutput
}

type amlComputePropertiesResponsePtrType AmlComputePropertiesResponseArgs

func AmlComputePropertiesResponsePtr(v *AmlComputePropertiesResponseArgs) AmlComputePropertiesResponsePtrInput {
	return (*amlComputePropertiesResponsePtrType)(v)
}

func (*amlComputePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlComputePropertiesResponse)(nil)).Elem()
}

func (i *amlComputePropertiesResponsePtrType) ToAmlComputePropertiesResponsePtrOutput() AmlComputePropertiesResponsePtrOutput {
	return i.ToAmlComputePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *amlComputePropertiesResponsePtrType) ToAmlComputePropertiesResponsePtrOutputWithContext(ctx context.Context) AmlComputePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputePropertiesResponsePtrOutput)
}

// AML Compute properties
type AmlComputePropertiesResponseOutput struct{ *pulumi.OutputState }

func (AmlComputePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputePropertiesResponse)(nil)).Elem()
}

func (o AmlComputePropertiesResponseOutput) ToAmlComputePropertiesResponseOutput() AmlComputePropertiesResponseOutput {
	return o
}

func (o AmlComputePropertiesResponseOutput) ToAmlComputePropertiesResponseOutputWithContext(ctx context.Context) AmlComputePropertiesResponseOutput {
	return o
}

func (o AmlComputePropertiesResponseOutput) ToAmlComputePropertiesResponsePtrOutput() AmlComputePropertiesResponsePtrOutput {
	return o.ToAmlComputePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AmlComputePropertiesResponseOutput) ToAmlComputePropertiesResponsePtrOutputWithContext(ctx context.Context) AmlComputePropertiesResponsePtrOutput {
	return o.ApplyT(func(v AmlComputePropertiesResponse) *AmlComputePropertiesResponse {
		return &v
	}).(AmlComputePropertiesResponsePtrOutput)
}

// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
func (o AmlComputePropertiesResponseOutput) AllocationState() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputePropertiesResponse) string { return v.AllocationState }).(pulumi.StringOutput)
}

// The time at which the compute entered its current allocation state.
func (o AmlComputePropertiesResponseOutput) AllocationStateTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputePropertiesResponse) string { return v.AllocationStateTransitionTime }).(pulumi.StringOutput)
}

// The number of compute nodes currently assigned to the compute.
func (o AmlComputePropertiesResponseOutput) CurrentNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AmlComputePropertiesResponse) int { return v.CurrentNodeCount }).(pulumi.IntOutput)
}

// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
func (o AmlComputePropertiesResponseOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmlComputePropertiesResponse) *bool { return v.EnableNodePublicIp }).(pulumi.BoolPtrOutput)
}

// Collection of errors encountered by various compute nodes during node setup.
func (o AmlComputePropertiesResponseOutput) Errors() ErrorResponseResponseArrayOutput {
	return o.ApplyT(func(v AmlComputePropertiesResponse) []ErrorResponseResponse { return v.Errors }).(ErrorResponseResponseArrayOutput)
}

// Network is isolated or not
func (o AmlComputePropertiesResponseOutput) IsolatedNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmlComputePropertiesResponse) *bool { return v.IsolatedNetwork }).(pulumi.BoolPtrOutput)
}

// Counts of various node states on the compute.
func (o AmlComputePropertiesResponseOutput) NodeStateCounts() NodeStateCountsResponseOutput {
	return o.ApplyT(func(v AmlComputePropertiesResponse) NodeStateCountsResponse { return v.NodeStateCounts }).(NodeStateCountsResponseOutput)
}

// Compute OS Type
func (o AmlComputePropertiesResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputePropertiesResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
func (o AmlComputePropertiesResponseOutput) RemoteLoginPortPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputePropertiesResponse) *string { return v.RemoteLoginPortPublicAccess }).(pulumi.StringPtrOutput)
}

// Scale settings for AML Compute
func (o AmlComputePropertiesResponseOutput) ScaleSettings() ScaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v AmlComputePropertiesResponse) *ScaleSettingsResponse { return v.ScaleSettings }).(ScaleSettingsResponsePtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o AmlComputePropertiesResponseOutput) Subnet() ResourceIdResponsePtrOutput {
	return o.ApplyT(func(v AmlComputePropertiesResponse) *ResourceIdResponse { return v.Subnet }).(ResourceIdResponsePtrOutput)
}

// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
func (o AmlComputePropertiesResponseOutput) TargetNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AmlComputePropertiesResponse) int { return v.TargetNodeCount }).(pulumi.IntOutput)
}

// Credentials for an administrator user account that will be created on each compute node.
func (o AmlComputePropertiesResponseOutput) UserAccountCredentials() UserAccountCredentialsResponsePtrOutput {
	return o.ApplyT(func(v AmlComputePropertiesResponse) *UserAccountCredentialsResponse { return v.UserAccountCredentials }).(UserAccountCredentialsResponsePtrOutput)
}

// Virtual Machine image for AML Compute - windows only
func (o AmlComputePropertiesResponseOutput) VirtualMachineImage() VirtualMachineImageResponsePtrOutput {
	return o.ApplyT(func(v AmlComputePropertiesResponse) *VirtualMachineImageResponse { return v.VirtualMachineImage }).(VirtualMachineImageResponsePtrOutput)
}

// Virtual Machine priority
func (o AmlComputePropertiesResponseOutput) VmPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputePropertiesResponse) *string { return v.VmPriority }).(pulumi.StringPtrOutput)
}

// Virtual Machine Size
func (o AmlComputePropertiesResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputePropertiesResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type AmlComputePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AmlComputePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlComputePropertiesResponse)(nil)).Elem()
}

func (o AmlComputePropertiesResponsePtrOutput) ToAmlComputePropertiesResponsePtrOutput() AmlComputePropertiesResponsePtrOutput {
	return o
}

func (o AmlComputePropertiesResponsePtrOutput) ToAmlComputePropertiesResponsePtrOutputWithContext(ctx context.Context) AmlComputePropertiesResponsePtrOutput {
	return o
}

func (o AmlComputePropertiesResponsePtrOutput) Elem() AmlComputePropertiesResponseOutput {
	return o.ApplyT(func(v *AmlComputePropertiesResponse) AmlComputePropertiesResponse { return *v }).(AmlComputePropertiesResponseOutput)
}

// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
func (o AmlComputePropertiesResponsePtrOutput) AllocationState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AllocationState
	}).(pulumi.StringPtrOutput)
}

// The time at which the compute entered its current allocation state.
func (o AmlComputePropertiesResponsePtrOutput) AllocationStateTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AllocationStateTransitionTime
	}).(pulumi.StringPtrOutput)
}

// The number of compute nodes currently assigned to the compute.
func (o AmlComputePropertiesResponsePtrOutput) CurrentNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AmlComputePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.CurrentNodeCount
	}).(pulumi.IntPtrOutput)
}

// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
func (o AmlComputePropertiesResponsePtrOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmlComputePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNodePublicIp
	}).(pulumi.BoolPtrOutput)
}

// Collection of errors encountered by various compute nodes during node setup.
func (o AmlComputePropertiesResponsePtrOutput) Errors() ErrorResponseResponseArrayOutput {
	return o.ApplyT(func(v *AmlComputePropertiesResponse) []ErrorResponseResponse {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(ErrorResponseResponseArrayOutput)
}

// Network is isolated or not
func (o AmlComputePropertiesResponsePtrOutput) IsolatedNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmlComputePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsolatedNetwork
	}).(pulumi.BoolPtrOutput)
}

// Counts of various node states on the compute.
func (o AmlComputePropertiesResponsePtrOutput) NodeStateCounts() NodeStateCountsResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputePropertiesResponse) *NodeStateCountsResponse {
		if v == nil {
			return nil
		}
		return &v.NodeStateCounts
	}).(NodeStateCountsResponsePtrOutput)
}

// Compute OS Type
func (o AmlComputePropertiesResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
func (o AmlComputePropertiesResponsePtrOutput) RemoteLoginPortPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RemoteLoginPortPublicAccess
	}).(pulumi.StringPtrOutput)
}

// Scale settings for AML Compute
func (o AmlComputePropertiesResponsePtrOutput) ScaleSettings() ScaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputePropertiesResponse) *ScaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.ScaleSettings
	}).(ScaleSettingsResponsePtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o AmlComputePropertiesResponsePtrOutput) Subnet() ResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputePropertiesResponse) *ResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(ResourceIdResponsePtrOutput)
}

// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
func (o AmlComputePropertiesResponsePtrOutput) TargetNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AmlComputePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TargetNodeCount
	}).(pulumi.IntPtrOutput)
}

// Credentials for an administrator user account that will be created on each compute node.
func (o AmlComputePropertiesResponsePtrOutput) UserAccountCredentials() UserAccountCredentialsResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputePropertiesResponse) *UserAccountCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.UserAccountCredentials
	}).(UserAccountCredentialsResponsePtrOutput)
}

// Virtual Machine image for AML Compute - windows only
func (o AmlComputePropertiesResponsePtrOutput) VirtualMachineImage() VirtualMachineImageResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputePropertiesResponse) *VirtualMachineImageResponse {
		if v == nil {
			return nil
		}
		return v.VirtualMachineImage
	}).(VirtualMachineImageResponsePtrOutput)
}

// Virtual Machine priority
func (o AmlComputePropertiesResponsePtrOutput) VmPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmPriority
	}).(pulumi.StringPtrOutput)
}

// Virtual Machine Size
func (o AmlComputePropertiesResponsePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// An Azure Machine Learning compute.
type AmlComputeResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AmlCompute'.
	ComputeType string `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// Properties of AmlCompute
	Properties *AmlComputePropertiesResponse `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []ErrorResponseResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// AmlComputeResponseInput is an input type that accepts AmlComputeResponseArgs and AmlComputeResponseOutput values.
// You can construct a concrete instance of `AmlComputeResponseInput` via:
//
//          AmlComputeResponseArgs{...}
type AmlComputeResponseInput interface {
	pulumi.Input

	ToAmlComputeResponseOutput() AmlComputeResponseOutput
	ToAmlComputeResponseOutputWithContext(context.Context) AmlComputeResponseOutput
}

// An Azure Machine Learning compute.
type AmlComputeResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AmlCompute'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn pulumi.StringInput `pulumi:"modifiedOn"`
	// Properties of AmlCompute
	Properties AmlComputePropertiesResponsePtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors ErrorResponseResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (AmlComputeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeResponse)(nil)).Elem()
}

func (i AmlComputeResponseArgs) ToAmlComputeResponseOutput() AmlComputeResponseOutput {
	return i.ToAmlComputeResponseOutputWithContext(context.Background())
}

func (i AmlComputeResponseArgs) ToAmlComputeResponseOutputWithContext(ctx context.Context) AmlComputeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeResponseOutput)
}

// An Azure Machine Learning compute.
type AmlComputeResponseOutput struct{ *pulumi.OutputState }

func (AmlComputeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeResponse)(nil)).Elem()
}

func (o AmlComputeResponseOutput) ToAmlComputeResponseOutput() AmlComputeResponseOutput {
	return o
}

func (o AmlComputeResponseOutput) ToAmlComputeResponseOutputWithContext(ctx context.Context) AmlComputeResponseOutput {
	return o
}

// Location for the underlying compute
func (o AmlComputeResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'AmlCompute'.
func (o AmlComputeResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The time at which the compute was created.
func (o AmlComputeResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o AmlComputeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o AmlComputeResponseOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmlComputeResponse) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o AmlComputeResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v AmlComputeResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The time at which the compute was last modified.
func (o AmlComputeResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// Properties of AmlCompute
func (o AmlComputeResponseOutput) Properties() AmlComputePropertiesResponsePtrOutput {
	return o.ApplyT(func(v AmlComputeResponse) *AmlComputePropertiesResponse { return v.Properties }).(AmlComputePropertiesResponsePtrOutput)
}

// Errors during provisioning
func (o AmlComputeResponseOutput) ProvisioningErrors() ErrorResponseResponseArrayOutput {
	return o.ApplyT(func(v AmlComputeResponse) []ErrorResponseResponse { return v.ProvisioningErrors }).(ErrorResponseResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o AmlComputeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o AmlComputeResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// A user that can be assigned to a compute instance.
type AssignedUser struct {
	// User’s AAD Object Id.
	ObjectId string `pulumi:"objectId"`
	// User’s AAD Tenant Id.
	TenantId string `pulumi:"tenantId"`
}

// AssignedUserInput is an input type that accepts AssignedUserArgs and AssignedUserOutput values.
// You can construct a concrete instance of `AssignedUserInput` via:
//
//          AssignedUserArgs{...}
type AssignedUserInput interface {
	pulumi.Input

	ToAssignedUserOutput() AssignedUserOutput
	ToAssignedUserOutputWithContext(context.Context) AssignedUserOutput
}

// A user that can be assigned to a compute instance.
type AssignedUserArgs struct {
	// User’s AAD Object Id.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// User’s AAD Tenant Id.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (AssignedUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AssignedUser)(nil)).Elem()
}

func (i AssignedUserArgs) ToAssignedUserOutput() AssignedUserOutput {
	return i.ToAssignedUserOutputWithContext(context.Background())
}

func (i AssignedUserArgs) ToAssignedUserOutputWithContext(ctx context.Context) AssignedUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignedUserOutput)
}

func (i AssignedUserArgs) ToAssignedUserPtrOutput() AssignedUserPtrOutput {
	return i.ToAssignedUserPtrOutputWithContext(context.Background())
}

func (i AssignedUserArgs) ToAssignedUserPtrOutputWithContext(ctx context.Context) AssignedUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignedUserOutput).ToAssignedUserPtrOutputWithContext(ctx)
}

// AssignedUserPtrInput is an input type that accepts AssignedUserArgs, AssignedUserPtr and AssignedUserPtrOutput values.
// You can construct a concrete instance of `AssignedUserPtrInput` via:
//
//          AssignedUserArgs{...}
//
//  or:
//
//          nil
type AssignedUserPtrInput interface {
	pulumi.Input

	ToAssignedUserPtrOutput() AssignedUserPtrOutput
	ToAssignedUserPtrOutputWithContext(context.Context) AssignedUserPtrOutput
}

type assignedUserPtrType AssignedUserArgs

func AssignedUserPtr(v *AssignedUserArgs) AssignedUserPtrInput {
	return (*assignedUserPtrType)(v)
}

func (*assignedUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AssignedUser)(nil)).Elem()
}

func (i *assignedUserPtrType) ToAssignedUserPtrOutput() AssignedUserPtrOutput {
	return i.ToAssignedUserPtrOutputWithContext(context.Background())
}

func (i *assignedUserPtrType) ToAssignedUserPtrOutputWithContext(ctx context.Context) AssignedUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignedUserPtrOutput)
}

// A user that can be assigned to a compute instance.
type AssignedUserOutput struct{ *pulumi.OutputState }

func (AssignedUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssignedUser)(nil)).Elem()
}

func (o AssignedUserOutput) ToAssignedUserOutput() AssignedUserOutput {
	return o
}

func (o AssignedUserOutput) ToAssignedUserOutputWithContext(ctx context.Context) AssignedUserOutput {
	return o
}

func (o AssignedUserOutput) ToAssignedUserPtrOutput() AssignedUserPtrOutput {
	return o.ToAssignedUserPtrOutputWithContext(context.Background())
}

func (o AssignedUserOutput) ToAssignedUserPtrOutputWithContext(ctx context.Context) AssignedUserPtrOutput {
	return o.ApplyT(func(v AssignedUser) *AssignedUser {
		return &v
	}).(AssignedUserPtrOutput)
}

// User’s AAD Object Id.
func (o AssignedUserOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v AssignedUser) string { return v.ObjectId }).(pulumi.StringOutput)
}

// User’s AAD Tenant Id.
func (o AssignedUserOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v AssignedUser) string { return v.TenantId }).(pulumi.StringOutput)
}

type AssignedUserPtrOutput struct{ *pulumi.OutputState }

func (AssignedUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssignedUser)(nil)).Elem()
}

func (o AssignedUserPtrOutput) ToAssignedUserPtrOutput() AssignedUserPtrOutput {
	return o
}

func (o AssignedUserPtrOutput) ToAssignedUserPtrOutputWithContext(ctx context.Context) AssignedUserPtrOutput {
	return o
}

func (o AssignedUserPtrOutput) Elem() AssignedUserOutput {
	return o.ApplyT(func(v *AssignedUser) AssignedUser { return *v }).(AssignedUserOutput)
}

// User’s AAD Object Id.
func (o AssignedUserPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssignedUser) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// User’s AAD Tenant Id.
func (o AssignedUserPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssignedUser) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// A user that can be assigned to a compute instance.
type AssignedUserResponse struct {
	// User’s AAD Object Id.
	ObjectId string `pulumi:"objectId"`
	// User’s AAD Tenant Id.
	TenantId string `pulumi:"tenantId"`
}

// AssignedUserResponseInput is an input type that accepts AssignedUserResponseArgs and AssignedUserResponseOutput values.
// You can construct a concrete instance of `AssignedUserResponseInput` via:
//
//          AssignedUserResponseArgs{...}
type AssignedUserResponseInput interface {
	pulumi.Input

	ToAssignedUserResponseOutput() AssignedUserResponseOutput
	ToAssignedUserResponseOutputWithContext(context.Context) AssignedUserResponseOutput
}

// A user that can be assigned to a compute instance.
type AssignedUserResponseArgs struct {
	// User’s AAD Object Id.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// User’s AAD Tenant Id.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (AssignedUserResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AssignedUserResponse)(nil)).Elem()
}

func (i AssignedUserResponseArgs) ToAssignedUserResponseOutput() AssignedUserResponseOutput {
	return i.ToAssignedUserResponseOutputWithContext(context.Background())
}

func (i AssignedUserResponseArgs) ToAssignedUserResponseOutputWithContext(ctx context.Context) AssignedUserResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignedUserResponseOutput)
}

func (i AssignedUserResponseArgs) ToAssignedUserResponsePtrOutput() AssignedUserResponsePtrOutput {
	return i.ToAssignedUserResponsePtrOutputWithContext(context.Background())
}

func (i AssignedUserResponseArgs) ToAssignedUserResponsePtrOutputWithContext(ctx context.Context) AssignedUserResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignedUserResponseOutput).ToAssignedUserResponsePtrOutputWithContext(ctx)
}

// AssignedUserResponsePtrInput is an input type that accepts AssignedUserResponseArgs, AssignedUserResponsePtr and AssignedUserResponsePtrOutput values.
// You can construct a concrete instance of `AssignedUserResponsePtrInput` via:
//
//          AssignedUserResponseArgs{...}
//
//  or:
//
//          nil
type AssignedUserResponsePtrInput interface {
	pulumi.Input

	ToAssignedUserResponsePtrOutput() AssignedUserResponsePtrOutput
	ToAssignedUserResponsePtrOutputWithContext(context.Context) AssignedUserResponsePtrOutput
}

type assignedUserResponsePtrType AssignedUserResponseArgs

func AssignedUserResponsePtr(v *AssignedUserResponseArgs) AssignedUserResponsePtrInput {
	return (*assignedUserResponsePtrType)(v)
}

func (*assignedUserResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AssignedUserResponse)(nil)).Elem()
}

func (i *assignedUserResponsePtrType) ToAssignedUserResponsePtrOutput() AssignedUserResponsePtrOutput {
	return i.ToAssignedUserResponsePtrOutputWithContext(context.Background())
}

func (i *assignedUserResponsePtrType) ToAssignedUserResponsePtrOutputWithContext(ctx context.Context) AssignedUserResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignedUserResponsePtrOutput)
}

// A user that can be assigned to a compute instance.
type AssignedUserResponseOutput struct{ *pulumi.OutputState }

func (AssignedUserResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssignedUserResponse)(nil)).Elem()
}

func (o AssignedUserResponseOutput) ToAssignedUserResponseOutput() AssignedUserResponseOutput {
	return o
}

func (o AssignedUserResponseOutput) ToAssignedUserResponseOutputWithContext(ctx context.Context) AssignedUserResponseOutput {
	return o
}

func (o AssignedUserResponseOutput) ToAssignedUserResponsePtrOutput() AssignedUserResponsePtrOutput {
	return o.ToAssignedUserResponsePtrOutputWithContext(context.Background())
}

func (o AssignedUserResponseOutput) ToAssignedUserResponsePtrOutputWithContext(ctx context.Context) AssignedUserResponsePtrOutput {
	return o.ApplyT(func(v AssignedUserResponse) *AssignedUserResponse {
		return &v
	}).(AssignedUserResponsePtrOutput)
}

// User’s AAD Object Id.
func (o AssignedUserResponseOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v AssignedUserResponse) string { return v.ObjectId }).(pulumi.StringOutput)
}

// User’s AAD Tenant Id.
func (o AssignedUserResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v AssignedUserResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

type AssignedUserResponsePtrOutput struct{ *pulumi.OutputState }

func (AssignedUserResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssignedUserResponse)(nil)).Elem()
}

func (o AssignedUserResponsePtrOutput) ToAssignedUserResponsePtrOutput() AssignedUserResponsePtrOutput {
	return o
}

func (o AssignedUserResponsePtrOutput) ToAssignedUserResponsePtrOutputWithContext(ctx context.Context) AssignedUserResponsePtrOutput {
	return o
}

func (o AssignedUserResponsePtrOutput) Elem() AssignedUserResponseOutput {
	return o.ApplyT(func(v *AssignedUserResponse) AssignedUserResponse { return *v }).(AssignedUserResponseOutput)
}

// User’s AAD Object Id.
func (o AssignedUserResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssignedUserResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// User’s AAD Tenant Id.
func (o AssignedUserResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssignedUserResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Auto pause properties
type AutoPauseProperties struct {
	DelayInMinutes *int  `pulumi:"delayInMinutes"`
	Enabled        *bool `pulumi:"enabled"`
}

// AutoPausePropertiesInput is an input type that accepts AutoPausePropertiesArgs and AutoPausePropertiesOutput values.
// You can construct a concrete instance of `AutoPausePropertiesInput` via:
//
//          AutoPausePropertiesArgs{...}
type AutoPausePropertiesInput interface {
	pulumi.Input

	ToAutoPausePropertiesOutput() AutoPausePropertiesOutput
	ToAutoPausePropertiesOutputWithContext(context.Context) AutoPausePropertiesOutput
}

// Auto pause properties
type AutoPausePropertiesArgs struct {
	DelayInMinutes pulumi.IntPtrInput  `pulumi:"delayInMinutes"`
	Enabled        pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (AutoPausePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoPauseProperties)(nil)).Elem()
}

func (i AutoPausePropertiesArgs) ToAutoPausePropertiesOutput() AutoPausePropertiesOutput {
	return i.ToAutoPausePropertiesOutputWithContext(context.Background())
}

func (i AutoPausePropertiesArgs) ToAutoPausePropertiesOutputWithContext(ctx context.Context) AutoPausePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoPausePropertiesOutput)
}

func (i AutoPausePropertiesArgs) ToAutoPausePropertiesPtrOutput() AutoPausePropertiesPtrOutput {
	return i.ToAutoPausePropertiesPtrOutputWithContext(context.Background())
}

func (i AutoPausePropertiesArgs) ToAutoPausePropertiesPtrOutputWithContext(ctx context.Context) AutoPausePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoPausePropertiesOutput).ToAutoPausePropertiesPtrOutputWithContext(ctx)
}

// AutoPausePropertiesPtrInput is an input type that accepts AutoPausePropertiesArgs, AutoPausePropertiesPtr and AutoPausePropertiesPtrOutput values.
// You can construct a concrete instance of `AutoPausePropertiesPtrInput` via:
//
//          AutoPausePropertiesArgs{...}
//
//  or:
//
//          nil
type AutoPausePropertiesPtrInput interface {
	pulumi.Input

	ToAutoPausePropertiesPtrOutput() AutoPausePropertiesPtrOutput
	ToAutoPausePropertiesPtrOutputWithContext(context.Context) AutoPausePropertiesPtrOutput
}

type autoPausePropertiesPtrType AutoPausePropertiesArgs

func AutoPausePropertiesPtr(v *AutoPausePropertiesArgs) AutoPausePropertiesPtrInput {
	return (*autoPausePropertiesPtrType)(v)
}

func (*autoPausePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoPauseProperties)(nil)).Elem()
}

func (i *autoPausePropertiesPtrType) ToAutoPausePropertiesPtrOutput() AutoPausePropertiesPtrOutput {
	return i.ToAutoPausePropertiesPtrOutputWithContext(context.Background())
}

func (i *autoPausePropertiesPtrType) ToAutoPausePropertiesPtrOutputWithContext(ctx context.Context) AutoPausePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoPausePropertiesPtrOutput)
}

// Auto pause properties
type AutoPausePropertiesOutput struct{ *pulumi.OutputState }

func (AutoPausePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoPauseProperties)(nil)).Elem()
}

func (o AutoPausePropertiesOutput) ToAutoPausePropertiesOutput() AutoPausePropertiesOutput {
	return o
}

func (o AutoPausePropertiesOutput) ToAutoPausePropertiesOutputWithContext(ctx context.Context) AutoPausePropertiesOutput {
	return o
}

func (o AutoPausePropertiesOutput) ToAutoPausePropertiesPtrOutput() AutoPausePropertiesPtrOutput {
	return o.ToAutoPausePropertiesPtrOutputWithContext(context.Background())
}

func (o AutoPausePropertiesOutput) ToAutoPausePropertiesPtrOutputWithContext(ctx context.Context) AutoPausePropertiesPtrOutput {
	return o.ApplyT(func(v AutoPauseProperties) *AutoPauseProperties {
		return &v
	}).(AutoPausePropertiesPtrOutput)
}
func (o AutoPausePropertiesOutput) DelayInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoPauseProperties) *int { return v.DelayInMinutes }).(pulumi.IntPtrOutput)
}

func (o AutoPausePropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoPauseProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type AutoPausePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AutoPausePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoPauseProperties)(nil)).Elem()
}

func (o AutoPausePropertiesPtrOutput) ToAutoPausePropertiesPtrOutput() AutoPausePropertiesPtrOutput {
	return o
}

func (o AutoPausePropertiesPtrOutput) ToAutoPausePropertiesPtrOutputWithContext(ctx context.Context) AutoPausePropertiesPtrOutput {
	return o
}

func (o AutoPausePropertiesPtrOutput) Elem() AutoPausePropertiesOutput {
	return o.ApplyT(func(v *AutoPauseProperties) AutoPauseProperties { return *v }).(AutoPausePropertiesOutput)
}

func (o AutoPausePropertiesPtrOutput) DelayInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoPauseProperties) *int {
		if v == nil {
			return nil
		}
		return v.DelayInMinutes
	}).(pulumi.IntPtrOutput)
}

func (o AutoPausePropertiesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoPauseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Auto pause properties
type AutoPausePropertiesResponse struct {
	DelayInMinutes *int  `pulumi:"delayInMinutes"`
	Enabled        *bool `pulumi:"enabled"`
}

// AutoPausePropertiesResponseInput is an input type that accepts AutoPausePropertiesResponseArgs and AutoPausePropertiesResponseOutput values.
// You can construct a concrete instance of `AutoPausePropertiesResponseInput` via:
//
//          AutoPausePropertiesResponseArgs{...}
type AutoPausePropertiesResponseInput interface {
	pulumi.Input

	ToAutoPausePropertiesResponseOutput() AutoPausePropertiesResponseOutput
	ToAutoPausePropertiesResponseOutputWithContext(context.Context) AutoPausePropertiesResponseOutput
}

// Auto pause properties
type AutoPausePropertiesResponseArgs struct {
	DelayInMinutes pulumi.IntPtrInput  `pulumi:"delayInMinutes"`
	Enabled        pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (AutoPausePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoPausePropertiesResponse)(nil)).Elem()
}

func (i AutoPausePropertiesResponseArgs) ToAutoPausePropertiesResponseOutput() AutoPausePropertiesResponseOutput {
	return i.ToAutoPausePropertiesResponseOutputWithContext(context.Background())
}

func (i AutoPausePropertiesResponseArgs) ToAutoPausePropertiesResponseOutputWithContext(ctx context.Context) AutoPausePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoPausePropertiesResponseOutput)
}

func (i AutoPausePropertiesResponseArgs) ToAutoPausePropertiesResponsePtrOutput() AutoPausePropertiesResponsePtrOutput {
	return i.ToAutoPausePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AutoPausePropertiesResponseArgs) ToAutoPausePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoPausePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoPausePropertiesResponseOutput).ToAutoPausePropertiesResponsePtrOutputWithContext(ctx)
}

// AutoPausePropertiesResponsePtrInput is an input type that accepts AutoPausePropertiesResponseArgs, AutoPausePropertiesResponsePtr and AutoPausePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AutoPausePropertiesResponsePtrInput` via:
//
//          AutoPausePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AutoPausePropertiesResponsePtrInput interface {
	pulumi.Input

	ToAutoPausePropertiesResponsePtrOutput() AutoPausePropertiesResponsePtrOutput
	ToAutoPausePropertiesResponsePtrOutputWithContext(context.Context) AutoPausePropertiesResponsePtrOutput
}

type autoPausePropertiesResponsePtrType AutoPausePropertiesResponseArgs

func AutoPausePropertiesResponsePtr(v *AutoPausePropertiesResponseArgs) AutoPausePropertiesResponsePtrInput {
	return (*autoPausePropertiesResponsePtrType)(v)
}

func (*autoPausePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoPausePropertiesResponse)(nil)).Elem()
}

func (i *autoPausePropertiesResponsePtrType) ToAutoPausePropertiesResponsePtrOutput() AutoPausePropertiesResponsePtrOutput {
	return i.ToAutoPausePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *autoPausePropertiesResponsePtrType) ToAutoPausePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoPausePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoPausePropertiesResponsePtrOutput)
}

// Auto pause properties
type AutoPausePropertiesResponseOutput struct{ *pulumi.OutputState }

func (AutoPausePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoPausePropertiesResponse)(nil)).Elem()
}

func (o AutoPausePropertiesResponseOutput) ToAutoPausePropertiesResponseOutput() AutoPausePropertiesResponseOutput {
	return o
}

func (o AutoPausePropertiesResponseOutput) ToAutoPausePropertiesResponseOutputWithContext(ctx context.Context) AutoPausePropertiesResponseOutput {
	return o
}

func (o AutoPausePropertiesResponseOutput) ToAutoPausePropertiesResponsePtrOutput() AutoPausePropertiesResponsePtrOutput {
	return o.ToAutoPausePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AutoPausePropertiesResponseOutput) ToAutoPausePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoPausePropertiesResponsePtrOutput {
	return o.ApplyT(func(v AutoPausePropertiesResponse) *AutoPausePropertiesResponse {
		return &v
	}).(AutoPausePropertiesResponsePtrOutput)
}
func (o AutoPausePropertiesResponseOutput) DelayInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoPausePropertiesResponse) *int { return v.DelayInMinutes }).(pulumi.IntPtrOutput)
}

func (o AutoPausePropertiesResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoPausePropertiesResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type AutoPausePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoPausePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoPausePropertiesResponse)(nil)).Elem()
}

func (o AutoPausePropertiesResponsePtrOutput) ToAutoPausePropertiesResponsePtrOutput() AutoPausePropertiesResponsePtrOutput {
	return o
}

func (o AutoPausePropertiesResponsePtrOutput) ToAutoPausePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoPausePropertiesResponsePtrOutput {
	return o
}

func (o AutoPausePropertiesResponsePtrOutput) Elem() AutoPausePropertiesResponseOutput {
	return o.ApplyT(func(v *AutoPausePropertiesResponse) AutoPausePropertiesResponse { return *v }).(AutoPausePropertiesResponseOutput)
}

func (o AutoPausePropertiesResponsePtrOutput) DelayInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoPausePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.DelayInMinutes
	}).(pulumi.IntPtrOutput)
}

func (o AutoPausePropertiesResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoPausePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Auto scale properties
type AutoScaleProperties struct {
	Enabled      *bool `pulumi:"enabled"`
	MaxNodeCount *int  `pulumi:"maxNodeCount"`
	MinNodeCount *int  `pulumi:"minNodeCount"`
}

// AutoScalePropertiesInput is an input type that accepts AutoScalePropertiesArgs and AutoScalePropertiesOutput values.
// You can construct a concrete instance of `AutoScalePropertiesInput` via:
//
//          AutoScalePropertiesArgs{...}
type AutoScalePropertiesInput interface {
	pulumi.Input

	ToAutoScalePropertiesOutput() AutoScalePropertiesOutput
	ToAutoScalePropertiesOutputWithContext(context.Context) AutoScalePropertiesOutput
}

// Auto scale properties
type AutoScalePropertiesArgs struct {
	Enabled      pulumi.BoolPtrInput `pulumi:"enabled"`
	MaxNodeCount pulumi.IntPtrInput  `pulumi:"maxNodeCount"`
	MinNodeCount pulumi.IntPtrInput  `pulumi:"minNodeCount"`
}

func (AutoScalePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleProperties)(nil)).Elem()
}

func (i AutoScalePropertiesArgs) ToAutoScalePropertiesOutput() AutoScalePropertiesOutput {
	return i.ToAutoScalePropertiesOutputWithContext(context.Background())
}

func (i AutoScalePropertiesArgs) ToAutoScalePropertiesOutputWithContext(ctx context.Context) AutoScalePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalePropertiesOutput)
}

func (i AutoScalePropertiesArgs) ToAutoScalePropertiesPtrOutput() AutoScalePropertiesPtrOutput {
	return i.ToAutoScalePropertiesPtrOutputWithContext(context.Background())
}

func (i AutoScalePropertiesArgs) ToAutoScalePropertiesPtrOutputWithContext(ctx context.Context) AutoScalePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalePropertiesOutput).ToAutoScalePropertiesPtrOutputWithContext(ctx)
}

// AutoScalePropertiesPtrInput is an input type that accepts AutoScalePropertiesArgs, AutoScalePropertiesPtr and AutoScalePropertiesPtrOutput values.
// You can construct a concrete instance of `AutoScalePropertiesPtrInput` via:
//
//          AutoScalePropertiesArgs{...}
//
//  or:
//
//          nil
type AutoScalePropertiesPtrInput interface {
	pulumi.Input

	ToAutoScalePropertiesPtrOutput() AutoScalePropertiesPtrOutput
	ToAutoScalePropertiesPtrOutputWithContext(context.Context) AutoScalePropertiesPtrOutput
}

type autoScalePropertiesPtrType AutoScalePropertiesArgs

func AutoScalePropertiesPtr(v *AutoScalePropertiesArgs) AutoScalePropertiesPtrInput {
	return (*autoScalePropertiesPtrType)(v)
}

func (*autoScalePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScaleProperties)(nil)).Elem()
}

func (i *autoScalePropertiesPtrType) ToAutoScalePropertiesPtrOutput() AutoScalePropertiesPtrOutput {
	return i.ToAutoScalePropertiesPtrOutputWithContext(context.Background())
}

func (i *autoScalePropertiesPtrType) ToAutoScalePropertiesPtrOutputWithContext(ctx context.Context) AutoScalePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalePropertiesPtrOutput)
}

// Auto scale properties
type AutoScalePropertiesOutput struct{ *pulumi.OutputState }

func (AutoScalePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleProperties)(nil)).Elem()
}

func (o AutoScalePropertiesOutput) ToAutoScalePropertiesOutput() AutoScalePropertiesOutput {
	return o
}

func (o AutoScalePropertiesOutput) ToAutoScalePropertiesOutputWithContext(ctx context.Context) AutoScalePropertiesOutput {
	return o
}

func (o AutoScalePropertiesOutput) ToAutoScalePropertiesPtrOutput() AutoScalePropertiesPtrOutput {
	return o.ToAutoScalePropertiesPtrOutputWithContext(context.Background())
}

func (o AutoScalePropertiesOutput) ToAutoScalePropertiesPtrOutputWithContext(ctx context.Context) AutoScalePropertiesPtrOutput {
	return o.ApplyT(func(v AutoScaleProperties) *AutoScaleProperties {
		return &v
	}).(AutoScalePropertiesPtrOutput)
}
func (o AutoScalePropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoScaleProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o AutoScalePropertiesOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleProperties) *int { return v.MaxNodeCount }).(pulumi.IntPtrOutput)
}

func (o AutoScalePropertiesOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleProperties) *int { return v.MinNodeCount }).(pulumi.IntPtrOutput)
}

type AutoScalePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AutoScalePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScaleProperties)(nil)).Elem()
}

func (o AutoScalePropertiesPtrOutput) ToAutoScalePropertiesPtrOutput() AutoScalePropertiesPtrOutput {
	return o
}

func (o AutoScalePropertiesPtrOutput) ToAutoScalePropertiesPtrOutputWithContext(ctx context.Context) AutoScalePropertiesPtrOutput {
	return o
}

func (o AutoScalePropertiesPtrOutput) Elem() AutoScalePropertiesOutput {
	return o.ApplyT(func(v *AutoScaleProperties) AutoScaleProperties { return *v }).(AutoScalePropertiesOutput)
}

func (o AutoScalePropertiesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoScaleProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o AutoScalePropertiesPtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

func (o AutoScalePropertiesPtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleProperties) *int {
		if v == nil {
			return nil
		}
		return v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

// Auto scale properties
type AutoScalePropertiesResponse struct {
	Enabled      *bool `pulumi:"enabled"`
	MaxNodeCount *int  `pulumi:"maxNodeCount"`
	MinNodeCount *int  `pulumi:"minNodeCount"`
}

// AutoScalePropertiesResponseInput is an input type that accepts AutoScalePropertiesResponseArgs and AutoScalePropertiesResponseOutput values.
// You can construct a concrete instance of `AutoScalePropertiesResponseInput` via:
//
//          AutoScalePropertiesResponseArgs{...}
type AutoScalePropertiesResponseInput interface {
	pulumi.Input

	ToAutoScalePropertiesResponseOutput() AutoScalePropertiesResponseOutput
	ToAutoScalePropertiesResponseOutputWithContext(context.Context) AutoScalePropertiesResponseOutput
}

// Auto scale properties
type AutoScalePropertiesResponseArgs struct {
	Enabled      pulumi.BoolPtrInput `pulumi:"enabled"`
	MaxNodeCount pulumi.IntPtrInput  `pulumi:"maxNodeCount"`
	MinNodeCount pulumi.IntPtrInput  `pulumi:"minNodeCount"`
}

func (AutoScalePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScalePropertiesResponse)(nil)).Elem()
}

func (i AutoScalePropertiesResponseArgs) ToAutoScalePropertiesResponseOutput() AutoScalePropertiesResponseOutput {
	return i.ToAutoScalePropertiesResponseOutputWithContext(context.Background())
}

func (i AutoScalePropertiesResponseArgs) ToAutoScalePropertiesResponseOutputWithContext(ctx context.Context) AutoScalePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalePropertiesResponseOutput)
}

func (i AutoScalePropertiesResponseArgs) ToAutoScalePropertiesResponsePtrOutput() AutoScalePropertiesResponsePtrOutput {
	return i.ToAutoScalePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AutoScalePropertiesResponseArgs) ToAutoScalePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoScalePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalePropertiesResponseOutput).ToAutoScalePropertiesResponsePtrOutputWithContext(ctx)
}

// AutoScalePropertiesResponsePtrInput is an input type that accepts AutoScalePropertiesResponseArgs, AutoScalePropertiesResponsePtr and AutoScalePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AutoScalePropertiesResponsePtrInput` via:
//
//          AutoScalePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AutoScalePropertiesResponsePtrInput interface {
	pulumi.Input

	ToAutoScalePropertiesResponsePtrOutput() AutoScalePropertiesResponsePtrOutput
	ToAutoScalePropertiesResponsePtrOutputWithContext(context.Context) AutoScalePropertiesResponsePtrOutput
}

type autoScalePropertiesResponsePtrType AutoScalePropertiesResponseArgs

func AutoScalePropertiesResponsePtr(v *AutoScalePropertiesResponseArgs) AutoScalePropertiesResponsePtrInput {
	return (*autoScalePropertiesResponsePtrType)(v)
}

func (*autoScalePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScalePropertiesResponse)(nil)).Elem()
}

func (i *autoScalePropertiesResponsePtrType) ToAutoScalePropertiesResponsePtrOutput() AutoScalePropertiesResponsePtrOutput {
	return i.ToAutoScalePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *autoScalePropertiesResponsePtrType) ToAutoScalePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoScalePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalePropertiesResponsePtrOutput)
}

// Auto scale properties
type AutoScalePropertiesResponseOutput struct{ *pulumi.OutputState }

func (AutoScalePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScalePropertiesResponse)(nil)).Elem()
}

func (o AutoScalePropertiesResponseOutput) ToAutoScalePropertiesResponseOutput() AutoScalePropertiesResponseOutput {
	return o
}

func (o AutoScalePropertiesResponseOutput) ToAutoScalePropertiesResponseOutputWithContext(ctx context.Context) AutoScalePropertiesResponseOutput {
	return o
}

func (o AutoScalePropertiesResponseOutput) ToAutoScalePropertiesResponsePtrOutput() AutoScalePropertiesResponsePtrOutput {
	return o.ToAutoScalePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AutoScalePropertiesResponseOutput) ToAutoScalePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoScalePropertiesResponsePtrOutput {
	return o.ApplyT(func(v AutoScalePropertiesResponse) *AutoScalePropertiesResponse {
		return &v
	}).(AutoScalePropertiesResponsePtrOutput)
}
func (o AutoScalePropertiesResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoScalePropertiesResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o AutoScalePropertiesResponseOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScalePropertiesResponse) *int { return v.MaxNodeCount }).(pulumi.IntPtrOutput)
}

func (o AutoScalePropertiesResponseOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScalePropertiesResponse) *int { return v.MinNodeCount }).(pulumi.IntPtrOutput)
}

type AutoScalePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoScalePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScalePropertiesResponse)(nil)).Elem()
}

func (o AutoScalePropertiesResponsePtrOutput) ToAutoScalePropertiesResponsePtrOutput() AutoScalePropertiesResponsePtrOutput {
	return o
}

func (o AutoScalePropertiesResponsePtrOutput) ToAutoScalePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoScalePropertiesResponsePtrOutput {
	return o
}

func (o AutoScalePropertiesResponsePtrOutput) Elem() AutoScalePropertiesResponseOutput {
	return o.ApplyT(func(v *AutoScalePropertiesResponse) AutoScalePropertiesResponse { return *v }).(AutoScalePropertiesResponseOutput)
}

func (o AutoScalePropertiesResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoScalePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o AutoScalePropertiesResponsePtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScalePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

func (o AutoScalePropertiesResponsePtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScalePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

// An Azure Machine Learning compute instance.
type ComputeInstance struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'ComputeInstance'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Properties of ComputeInstance
	Properties *ComputeInstanceProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// ComputeInstanceInput is an input type that accepts ComputeInstanceArgs and ComputeInstanceOutput values.
// You can construct a concrete instance of `ComputeInstanceInput` via:
//
//          ComputeInstanceArgs{...}
type ComputeInstanceInput interface {
	pulumi.Input

	ToComputeInstanceOutput() ComputeInstanceOutput
	ToComputeInstanceOutputWithContext(context.Context) ComputeInstanceOutput
}

// An Azure Machine Learning compute instance.
type ComputeInstanceArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'ComputeInstance'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// Properties of ComputeInstance
	Properties ComputeInstancePropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ComputeInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstance)(nil)).Elem()
}

func (i ComputeInstanceArgs) ToComputeInstanceOutput() ComputeInstanceOutput {
	return i.ToComputeInstanceOutputWithContext(context.Background())
}

func (i ComputeInstanceArgs) ToComputeInstanceOutputWithContext(ctx context.Context) ComputeInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceOutput)
}

// An Azure Machine Learning compute instance.
type ComputeInstanceOutput struct{ *pulumi.OutputState }

func (ComputeInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstance)(nil)).Elem()
}

func (o ComputeInstanceOutput) ToComputeInstanceOutput() ComputeInstanceOutput {
	return o
}

func (o ComputeInstanceOutput) ToComputeInstanceOutputWithContext(ctx context.Context) ComputeInstanceOutput {
	return o
}

// Location for the underlying compute
func (o ComputeInstanceOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstance) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'ComputeInstance'.
func (o ComputeInstanceOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstance) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o ComputeInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstance) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o ComputeInstanceOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstance) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// Properties of ComputeInstance
func (o ComputeInstanceOutput) Properties() ComputeInstancePropertiesPtrOutput {
	return o.ApplyT(func(v ComputeInstance) *ComputeInstanceProperties { return v.Properties }).(ComputeInstancePropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o ComputeInstanceOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstance) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Defines an Aml Instance application and its connectivity endpoint URI.
type ComputeInstanceApplicationResponse struct {
	// Name of the ComputeInstance application.
	DisplayName *string `pulumi:"displayName"`
	// Application' endpoint URI.
	EndpointUri *string `pulumi:"endpointUri"`
}

// ComputeInstanceApplicationResponseInput is an input type that accepts ComputeInstanceApplicationResponseArgs and ComputeInstanceApplicationResponseOutput values.
// You can construct a concrete instance of `ComputeInstanceApplicationResponseInput` via:
//
//          ComputeInstanceApplicationResponseArgs{...}
type ComputeInstanceApplicationResponseInput interface {
	pulumi.Input

	ToComputeInstanceApplicationResponseOutput() ComputeInstanceApplicationResponseOutput
	ToComputeInstanceApplicationResponseOutputWithContext(context.Context) ComputeInstanceApplicationResponseOutput
}

// Defines an Aml Instance application and its connectivity endpoint URI.
type ComputeInstanceApplicationResponseArgs struct {
	// Name of the ComputeInstance application.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Application' endpoint URI.
	EndpointUri pulumi.StringPtrInput `pulumi:"endpointUri"`
}

func (ComputeInstanceApplicationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceApplicationResponse)(nil)).Elem()
}

func (i ComputeInstanceApplicationResponseArgs) ToComputeInstanceApplicationResponseOutput() ComputeInstanceApplicationResponseOutput {
	return i.ToComputeInstanceApplicationResponseOutputWithContext(context.Background())
}

func (i ComputeInstanceApplicationResponseArgs) ToComputeInstanceApplicationResponseOutputWithContext(ctx context.Context) ComputeInstanceApplicationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceApplicationResponseOutput)
}

// ComputeInstanceApplicationResponseArrayInput is an input type that accepts ComputeInstanceApplicationResponseArray and ComputeInstanceApplicationResponseArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceApplicationResponseArrayInput` via:
//
//          ComputeInstanceApplicationResponseArray{ ComputeInstanceApplicationResponseArgs{...} }
type ComputeInstanceApplicationResponseArrayInput interface {
	pulumi.Input

	ToComputeInstanceApplicationResponseArrayOutput() ComputeInstanceApplicationResponseArrayOutput
	ToComputeInstanceApplicationResponseArrayOutputWithContext(context.Context) ComputeInstanceApplicationResponseArrayOutput
}

type ComputeInstanceApplicationResponseArray []ComputeInstanceApplicationResponseInput

func (ComputeInstanceApplicationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceApplicationResponse)(nil)).Elem()
}

func (i ComputeInstanceApplicationResponseArray) ToComputeInstanceApplicationResponseArrayOutput() ComputeInstanceApplicationResponseArrayOutput {
	return i.ToComputeInstanceApplicationResponseArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceApplicationResponseArray) ToComputeInstanceApplicationResponseArrayOutputWithContext(ctx context.Context) ComputeInstanceApplicationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceApplicationResponseArrayOutput)
}

// Defines an Aml Instance application and its connectivity endpoint URI.
type ComputeInstanceApplicationResponseOutput struct{ *pulumi.OutputState }

func (ComputeInstanceApplicationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceApplicationResponse)(nil)).Elem()
}

func (o ComputeInstanceApplicationResponseOutput) ToComputeInstanceApplicationResponseOutput() ComputeInstanceApplicationResponseOutput {
	return o
}

func (o ComputeInstanceApplicationResponseOutput) ToComputeInstanceApplicationResponseOutputWithContext(ctx context.Context) ComputeInstanceApplicationResponseOutput {
	return o
}

// Name of the ComputeInstance application.
func (o ComputeInstanceApplicationResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceApplicationResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Application' endpoint URI.
func (o ComputeInstanceApplicationResponseOutput) EndpointUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceApplicationResponse) *string { return v.EndpointUri }).(pulumi.StringPtrOutput)
}

type ComputeInstanceApplicationResponseArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceApplicationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeInstanceApplicationResponse)(nil)).Elem()
}

func (o ComputeInstanceApplicationResponseArrayOutput) ToComputeInstanceApplicationResponseArrayOutput() ComputeInstanceApplicationResponseArrayOutput {
	return o
}

func (o ComputeInstanceApplicationResponseArrayOutput) ToComputeInstanceApplicationResponseArrayOutputWithContext(ctx context.Context) ComputeInstanceApplicationResponseArrayOutput {
	return o
}

func (o ComputeInstanceApplicationResponseArrayOutput) Index(i pulumi.IntInput) ComputeInstanceApplicationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeInstanceApplicationResponse {
		return vs[0].([]ComputeInstanceApplicationResponse)[vs[1].(int)]
	}).(ComputeInstanceApplicationResponseOutput)
}

// Defines all connectivity endpoints and properties for an ComputeInstance.
type ComputeInstanceConnectivityEndpointsResponse struct {
	// Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is deployed).
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// Public IP Address of this ComputeInstance.
	PublicIpAddress string `pulumi:"publicIpAddress"`
}

// ComputeInstanceConnectivityEndpointsResponseInput is an input type that accepts ComputeInstanceConnectivityEndpointsResponseArgs and ComputeInstanceConnectivityEndpointsResponseOutput values.
// You can construct a concrete instance of `ComputeInstanceConnectivityEndpointsResponseInput` via:
//
//          ComputeInstanceConnectivityEndpointsResponseArgs{...}
type ComputeInstanceConnectivityEndpointsResponseInput interface {
	pulumi.Input

	ToComputeInstanceConnectivityEndpointsResponseOutput() ComputeInstanceConnectivityEndpointsResponseOutput
	ToComputeInstanceConnectivityEndpointsResponseOutputWithContext(context.Context) ComputeInstanceConnectivityEndpointsResponseOutput
}

// Defines all connectivity endpoints and properties for an ComputeInstance.
type ComputeInstanceConnectivityEndpointsResponseArgs struct {
	// Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is deployed).
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// Public IP Address of this ComputeInstance.
	PublicIpAddress pulumi.StringInput `pulumi:"publicIpAddress"`
}

func (ComputeInstanceConnectivityEndpointsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceConnectivityEndpointsResponse)(nil)).Elem()
}

func (i ComputeInstanceConnectivityEndpointsResponseArgs) ToComputeInstanceConnectivityEndpointsResponseOutput() ComputeInstanceConnectivityEndpointsResponseOutput {
	return i.ToComputeInstanceConnectivityEndpointsResponseOutputWithContext(context.Background())
}

func (i ComputeInstanceConnectivityEndpointsResponseArgs) ToComputeInstanceConnectivityEndpointsResponseOutputWithContext(ctx context.Context) ComputeInstanceConnectivityEndpointsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceConnectivityEndpointsResponseOutput)
}

func (i ComputeInstanceConnectivityEndpointsResponseArgs) ToComputeInstanceConnectivityEndpointsResponsePtrOutput() ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return i.ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(context.Background())
}

func (i ComputeInstanceConnectivityEndpointsResponseArgs) ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceConnectivityEndpointsResponseOutput).ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(ctx)
}

// ComputeInstanceConnectivityEndpointsResponsePtrInput is an input type that accepts ComputeInstanceConnectivityEndpointsResponseArgs, ComputeInstanceConnectivityEndpointsResponsePtr and ComputeInstanceConnectivityEndpointsResponsePtrOutput values.
// You can construct a concrete instance of `ComputeInstanceConnectivityEndpointsResponsePtrInput` via:
//
//          ComputeInstanceConnectivityEndpointsResponseArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceConnectivityEndpointsResponsePtrInput interface {
	pulumi.Input

	ToComputeInstanceConnectivityEndpointsResponsePtrOutput() ComputeInstanceConnectivityEndpointsResponsePtrOutput
	ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(context.Context) ComputeInstanceConnectivityEndpointsResponsePtrOutput
}

type computeInstanceConnectivityEndpointsResponsePtrType ComputeInstanceConnectivityEndpointsResponseArgs

func ComputeInstanceConnectivityEndpointsResponsePtr(v *ComputeInstanceConnectivityEndpointsResponseArgs) ComputeInstanceConnectivityEndpointsResponsePtrInput {
	return (*computeInstanceConnectivityEndpointsResponsePtrType)(v)
}

func (*computeInstanceConnectivityEndpointsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceConnectivityEndpointsResponse)(nil)).Elem()
}

func (i *computeInstanceConnectivityEndpointsResponsePtrType) ToComputeInstanceConnectivityEndpointsResponsePtrOutput() ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return i.ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(context.Background())
}

func (i *computeInstanceConnectivityEndpointsResponsePtrType) ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceConnectivityEndpointsResponsePtrOutput)
}

// Defines all connectivity endpoints and properties for an ComputeInstance.
type ComputeInstanceConnectivityEndpointsResponseOutput struct{ *pulumi.OutputState }

func (ComputeInstanceConnectivityEndpointsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceConnectivityEndpointsResponse)(nil)).Elem()
}

func (o ComputeInstanceConnectivityEndpointsResponseOutput) ToComputeInstanceConnectivityEndpointsResponseOutput() ComputeInstanceConnectivityEndpointsResponseOutput {
	return o
}

func (o ComputeInstanceConnectivityEndpointsResponseOutput) ToComputeInstanceConnectivityEndpointsResponseOutputWithContext(ctx context.Context) ComputeInstanceConnectivityEndpointsResponseOutput {
	return o
}

func (o ComputeInstanceConnectivityEndpointsResponseOutput) ToComputeInstanceConnectivityEndpointsResponsePtrOutput() ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return o.ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(context.Background())
}

func (o ComputeInstanceConnectivityEndpointsResponseOutput) ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return o.ApplyT(func(v ComputeInstanceConnectivityEndpointsResponse) *ComputeInstanceConnectivityEndpointsResponse {
		return &v
	}).(ComputeInstanceConnectivityEndpointsResponsePtrOutput)
}

// Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is deployed).
func (o ComputeInstanceConnectivityEndpointsResponseOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceConnectivityEndpointsResponse) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// Public IP Address of this ComputeInstance.
func (o ComputeInstanceConnectivityEndpointsResponseOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceConnectivityEndpointsResponse) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

type ComputeInstanceConnectivityEndpointsResponsePtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceConnectivityEndpointsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceConnectivityEndpointsResponse)(nil)).Elem()
}

func (o ComputeInstanceConnectivityEndpointsResponsePtrOutput) ToComputeInstanceConnectivityEndpointsResponsePtrOutput() ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return o
}

func (o ComputeInstanceConnectivityEndpointsResponsePtrOutput) ToComputeInstanceConnectivityEndpointsResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return o
}

func (o ComputeInstanceConnectivityEndpointsResponsePtrOutput) Elem() ComputeInstanceConnectivityEndpointsResponseOutput {
	return o.ApplyT(func(v *ComputeInstanceConnectivityEndpointsResponse) ComputeInstanceConnectivityEndpointsResponse {
		return *v
	}).(ComputeInstanceConnectivityEndpointsResponseOutput)
}

// Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is deployed).
func (o ComputeInstanceConnectivityEndpointsResponsePtrOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceConnectivityEndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateIpAddress
	}).(pulumi.StringPtrOutput)
}

// Public IP Address of this ComputeInstance.
func (o ComputeInstanceConnectivityEndpointsResponsePtrOutput) PublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceConnectivityEndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PublicIpAddress
	}).(pulumi.StringPtrOutput)
}

// Describes information on user who created this ComputeInstance.
type ComputeInstanceCreatedByResponse struct {
	// Uniquely identifies the user within his/her organization.
	UserId string `pulumi:"userId"`
	// Name of the user.
	UserName string `pulumi:"userName"`
	// Uniquely identifies user' Azure Active Directory organization.
	UserOrgId string `pulumi:"userOrgId"`
}

// ComputeInstanceCreatedByResponseInput is an input type that accepts ComputeInstanceCreatedByResponseArgs and ComputeInstanceCreatedByResponseOutput values.
// You can construct a concrete instance of `ComputeInstanceCreatedByResponseInput` via:
//
//          ComputeInstanceCreatedByResponseArgs{...}
type ComputeInstanceCreatedByResponseInput interface {
	pulumi.Input

	ToComputeInstanceCreatedByResponseOutput() ComputeInstanceCreatedByResponseOutput
	ToComputeInstanceCreatedByResponseOutputWithContext(context.Context) ComputeInstanceCreatedByResponseOutput
}

// Describes information on user who created this ComputeInstance.
type ComputeInstanceCreatedByResponseArgs struct {
	// Uniquely identifies the user within his/her organization.
	UserId pulumi.StringInput `pulumi:"userId"`
	// Name of the user.
	UserName pulumi.StringInput `pulumi:"userName"`
	// Uniquely identifies user' Azure Active Directory organization.
	UserOrgId pulumi.StringInput `pulumi:"userOrgId"`
}

func (ComputeInstanceCreatedByResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceCreatedByResponse)(nil)).Elem()
}

func (i ComputeInstanceCreatedByResponseArgs) ToComputeInstanceCreatedByResponseOutput() ComputeInstanceCreatedByResponseOutput {
	return i.ToComputeInstanceCreatedByResponseOutputWithContext(context.Background())
}

func (i ComputeInstanceCreatedByResponseArgs) ToComputeInstanceCreatedByResponseOutputWithContext(ctx context.Context) ComputeInstanceCreatedByResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceCreatedByResponseOutput)
}

func (i ComputeInstanceCreatedByResponseArgs) ToComputeInstanceCreatedByResponsePtrOutput() ComputeInstanceCreatedByResponsePtrOutput {
	return i.ToComputeInstanceCreatedByResponsePtrOutputWithContext(context.Background())
}

func (i ComputeInstanceCreatedByResponseArgs) ToComputeInstanceCreatedByResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceCreatedByResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceCreatedByResponseOutput).ToComputeInstanceCreatedByResponsePtrOutputWithContext(ctx)
}

// ComputeInstanceCreatedByResponsePtrInput is an input type that accepts ComputeInstanceCreatedByResponseArgs, ComputeInstanceCreatedByResponsePtr and ComputeInstanceCreatedByResponsePtrOutput values.
// You can construct a concrete instance of `ComputeInstanceCreatedByResponsePtrInput` via:
//
//          ComputeInstanceCreatedByResponseArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceCreatedByResponsePtrInput interface {
	pulumi.Input

	ToComputeInstanceCreatedByResponsePtrOutput() ComputeInstanceCreatedByResponsePtrOutput
	ToComputeInstanceCreatedByResponsePtrOutputWithContext(context.Context) ComputeInstanceCreatedByResponsePtrOutput
}

type computeInstanceCreatedByResponsePtrType ComputeInstanceCreatedByResponseArgs

func ComputeInstanceCreatedByResponsePtr(v *ComputeInstanceCreatedByResponseArgs) ComputeInstanceCreatedByResponsePtrInput {
	return (*computeInstanceCreatedByResponsePtrType)(v)
}

func (*computeInstanceCreatedByResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceCreatedByResponse)(nil)).Elem()
}

func (i *computeInstanceCreatedByResponsePtrType) ToComputeInstanceCreatedByResponsePtrOutput() ComputeInstanceCreatedByResponsePtrOutput {
	return i.ToComputeInstanceCreatedByResponsePtrOutputWithContext(context.Background())
}

func (i *computeInstanceCreatedByResponsePtrType) ToComputeInstanceCreatedByResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceCreatedByResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceCreatedByResponsePtrOutput)
}

// Describes information on user who created this ComputeInstance.
type ComputeInstanceCreatedByResponseOutput struct{ *pulumi.OutputState }

func (ComputeInstanceCreatedByResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceCreatedByResponse)(nil)).Elem()
}

func (o ComputeInstanceCreatedByResponseOutput) ToComputeInstanceCreatedByResponseOutput() ComputeInstanceCreatedByResponseOutput {
	return o
}

func (o ComputeInstanceCreatedByResponseOutput) ToComputeInstanceCreatedByResponseOutputWithContext(ctx context.Context) ComputeInstanceCreatedByResponseOutput {
	return o
}

func (o ComputeInstanceCreatedByResponseOutput) ToComputeInstanceCreatedByResponsePtrOutput() ComputeInstanceCreatedByResponsePtrOutput {
	return o.ToComputeInstanceCreatedByResponsePtrOutputWithContext(context.Background())
}

func (o ComputeInstanceCreatedByResponseOutput) ToComputeInstanceCreatedByResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceCreatedByResponsePtrOutput {
	return o.ApplyT(func(v ComputeInstanceCreatedByResponse) *ComputeInstanceCreatedByResponse {
		return &v
	}).(ComputeInstanceCreatedByResponsePtrOutput)
}

// Uniquely identifies the user within his/her organization.
func (o ComputeInstanceCreatedByResponseOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceCreatedByResponse) string { return v.UserId }).(pulumi.StringOutput)
}

// Name of the user.
func (o ComputeInstanceCreatedByResponseOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceCreatedByResponse) string { return v.UserName }).(pulumi.StringOutput)
}

// Uniquely identifies user' Azure Active Directory organization.
func (o ComputeInstanceCreatedByResponseOutput) UserOrgId() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceCreatedByResponse) string { return v.UserOrgId }).(pulumi.StringOutput)
}

type ComputeInstanceCreatedByResponsePtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceCreatedByResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceCreatedByResponse)(nil)).Elem()
}

func (o ComputeInstanceCreatedByResponsePtrOutput) ToComputeInstanceCreatedByResponsePtrOutput() ComputeInstanceCreatedByResponsePtrOutput {
	return o
}

func (o ComputeInstanceCreatedByResponsePtrOutput) ToComputeInstanceCreatedByResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceCreatedByResponsePtrOutput {
	return o
}

func (o ComputeInstanceCreatedByResponsePtrOutput) Elem() ComputeInstanceCreatedByResponseOutput {
	return o.ApplyT(func(v *ComputeInstanceCreatedByResponse) ComputeInstanceCreatedByResponse { return *v }).(ComputeInstanceCreatedByResponseOutput)
}

// Uniquely identifies the user within his/her organization.
func (o ComputeInstanceCreatedByResponsePtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceCreatedByResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserId
	}).(pulumi.StringPtrOutput)
}

// Name of the user.
func (o ComputeInstanceCreatedByResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceCreatedByResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

// Uniquely identifies user' Azure Active Directory organization.
func (o ComputeInstanceCreatedByResponsePtrOutput) UserOrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceCreatedByResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserOrgId
	}).(pulumi.StringPtrOutput)
}

// The last operation on ComputeInstance.
type ComputeInstanceLastOperationResponse struct {
	// Name of the last operation.
	OperationName *string `pulumi:"operationName"`
	// Operation status.
	OperationStatus *string `pulumi:"operationStatus"`
	// Time of the last operation.
	OperationTime *string `pulumi:"operationTime"`
}

// ComputeInstanceLastOperationResponseInput is an input type that accepts ComputeInstanceLastOperationResponseArgs and ComputeInstanceLastOperationResponseOutput values.
// You can construct a concrete instance of `ComputeInstanceLastOperationResponseInput` via:
//
//          ComputeInstanceLastOperationResponseArgs{...}
type ComputeInstanceLastOperationResponseInput interface {
	pulumi.Input

	ToComputeInstanceLastOperationResponseOutput() ComputeInstanceLastOperationResponseOutput
	ToComputeInstanceLastOperationResponseOutputWithContext(context.Context) ComputeInstanceLastOperationResponseOutput
}

// The last operation on ComputeInstance.
type ComputeInstanceLastOperationResponseArgs struct {
	// Name of the last operation.
	OperationName pulumi.StringPtrInput `pulumi:"operationName"`
	// Operation status.
	OperationStatus pulumi.StringPtrInput `pulumi:"operationStatus"`
	// Time of the last operation.
	OperationTime pulumi.StringPtrInput `pulumi:"operationTime"`
}

func (ComputeInstanceLastOperationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceLastOperationResponse)(nil)).Elem()
}

func (i ComputeInstanceLastOperationResponseArgs) ToComputeInstanceLastOperationResponseOutput() ComputeInstanceLastOperationResponseOutput {
	return i.ToComputeInstanceLastOperationResponseOutputWithContext(context.Background())
}

func (i ComputeInstanceLastOperationResponseArgs) ToComputeInstanceLastOperationResponseOutputWithContext(ctx context.Context) ComputeInstanceLastOperationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceLastOperationResponseOutput)
}

func (i ComputeInstanceLastOperationResponseArgs) ToComputeInstanceLastOperationResponsePtrOutput() ComputeInstanceLastOperationResponsePtrOutput {
	return i.ToComputeInstanceLastOperationResponsePtrOutputWithContext(context.Background())
}

func (i ComputeInstanceLastOperationResponseArgs) ToComputeInstanceLastOperationResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceLastOperationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceLastOperationResponseOutput).ToComputeInstanceLastOperationResponsePtrOutputWithContext(ctx)
}

// ComputeInstanceLastOperationResponsePtrInput is an input type that accepts ComputeInstanceLastOperationResponseArgs, ComputeInstanceLastOperationResponsePtr and ComputeInstanceLastOperationResponsePtrOutput values.
// You can construct a concrete instance of `ComputeInstanceLastOperationResponsePtrInput` via:
//
//          ComputeInstanceLastOperationResponseArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceLastOperationResponsePtrInput interface {
	pulumi.Input

	ToComputeInstanceLastOperationResponsePtrOutput() ComputeInstanceLastOperationResponsePtrOutput
	ToComputeInstanceLastOperationResponsePtrOutputWithContext(context.Context) ComputeInstanceLastOperationResponsePtrOutput
}

type computeInstanceLastOperationResponsePtrType ComputeInstanceLastOperationResponseArgs

func ComputeInstanceLastOperationResponsePtr(v *ComputeInstanceLastOperationResponseArgs) ComputeInstanceLastOperationResponsePtrInput {
	return (*computeInstanceLastOperationResponsePtrType)(v)
}

func (*computeInstanceLastOperationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceLastOperationResponse)(nil)).Elem()
}

func (i *computeInstanceLastOperationResponsePtrType) ToComputeInstanceLastOperationResponsePtrOutput() ComputeInstanceLastOperationResponsePtrOutput {
	return i.ToComputeInstanceLastOperationResponsePtrOutputWithContext(context.Background())
}

func (i *computeInstanceLastOperationResponsePtrType) ToComputeInstanceLastOperationResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceLastOperationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceLastOperationResponsePtrOutput)
}

// The last operation on ComputeInstance.
type ComputeInstanceLastOperationResponseOutput struct{ *pulumi.OutputState }

func (ComputeInstanceLastOperationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceLastOperationResponse)(nil)).Elem()
}

func (o ComputeInstanceLastOperationResponseOutput) ToComputeInstanceLastOperationResponseOutput() ComputeInstanceLastOperationResponseOutput {
	return o
}

func (o ComputeInstanceLastOperationResponseOutput) ToComputeInstanceLastOperationResponseOutputWithContext(ctx context.Context) ComputeInstanceLastOperationResponseOutput {
	return o
}

func (o ComputeInstanceLastOperationResponseOutput) ToComputeInstanceLastOperationResponsePtrOutput() ComputeInstanceLastOperationResponsePtrOutput {
	return o.ToComputeInstanceLastOperationResponsePtrOutputWithContext(context.Background())
}

func (o ComputeInstanceLastOperationResponseOutput) ToComputeInstanceLastOperationResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceLastOperationResponsePtrOutput {
	return o.ApplyT(func(v ComputeInstanceLastOperationResponse) *ComputeInstanceLastOperationResponse {
		return &v
	}).(ComputeInstanceLastOperationResponsePtrOutput)
}

// Name of the last operation.
func (o ComputeInstanceLastOperationResponseOutput) OperationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceLastOperationResponse) *string { return v.OperationName }).(pulumi.StringPtrOutput)
}

// Operation status.
func (o ComputeInstanceLastOperationResponseOutput) OperationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceLastOperationResponse) *string { return v.OperationStatus }).(pulumi.StringPtrOutput)
}

// Time of the last operation.
func (o ComputeInstanceLastOperationResponseOutput) OperationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceLastOperationResponse) *string { return v.OperationTime }).(pulumi.StringPtrOutput)
}

type ComputeInstanceLastOperationResponsePtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceLastOperationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceLastOperationResponse)(nil)).Elem()
}

func (o ComputeInstanceLastOperationResponsePtrOutput) ToComputeInstanceLastOperationResponsePtrOutput() ComputeInstanceLastOperationResponsePtrOutput {
	return o
}

func (o ComputeInstanceLastOperationResponsePtrOutput) ToComputeInstanceLastOperationResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceLastOperationResponsePtrOutput {
	return o
}

func (o ComputeInstanceLastOperationResponsePtrOutput) Elem() ComputeInstanceLastOperationResponseOutput {
	return o.ApplyT(func(v *ComputeInstanceLastOperationResponse) ComputeInstanceLastOperationResponse { return *v }).(ComputeInstanceLastOperationResponseOutput)
}

// Name of the last operation.
func (o ComputeInstanceLastOperationResponsePtrOutput) OperationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceLastOperationResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperationName
	}).(pulumi.StringPtrOutput)
}

// Operation status.
func (o ComputeInstanceLastOperationResponsePtrOutput) OperationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceLastOperationResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperationStatus
	}).(pulumi.StringPtrOutput)
}

// Time of the last operation.
func (o ComputeInstanceLastOperationResponsePtrOutput) OperationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceLastOperationResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperationTime
	}).(pulumi.StringPtrOutput)
}

// Compute Instance properties
type ComputeInstanceProperties struct {
	// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
	ApplicationSharingPolicy *string `pulumi:"applicationSharingPolicy"`
	// The Compute Instance Authorization type. Available values are personal (default).
	ComputeInstanceAuthorizationType *string `pulumi:"computeInstanceAuthorizationType"`
	// Settings for a personal compute instance.
	PersonalComputeInstanceSettings *PersonalComputeInstanceSettings `pulumi:"personalComputeInstanceSettings"`
	// Details of customized scripts to execute for setting up the cluster.
	SetupScripts *SetupScripts `pulumi:"setupScripts"`
	// Specifies policy and settings for SSH access.
	SshSettings *ComputeInstanceSshSettings `pulumi:"sshSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet *ResourceId `pulumi:"subnet"`
	// Virtual Machine Size
	VmSize *string `pulumi:"vmSize"`
}

// ComputeInstancePropertiesInput is an input type that accepts ComputeInstancePropertiesArgs and ComputeInstancePropertiesOutput values.
// You can construct a concrete instance of `ComputeInstancePropertiesInput` via:
//
//          ComputeInstancePropertiesArgs{...}
type ComputeInstancePropertiesInput interface {
	pulumi.Input

	ToComputeInstancePropertiesOutput() ComputeInstancePropertiesOutput
	ToComputeInstancePropertiesOutputWithContext(context.Context) ComputeInstancePropertiesOutput
}

// Compute Instance properties
type ComputeInstancePropertiesArgs struct {
	// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
	ApplicationSharingPolicy pulumi.StringPtrInput `pulumi:"applicationSharingPolicy"`
	// The Compute Instance Authorization type. Available values are personal (default).
	ComputeInstanceAuthorizationType pulumi.StringPtrInput `pulumi:"computeInstanceAuthorizationType"`
	// Settings for a personal compute instance.
	PersonalComputeInstanceSettings PersonalComputeInstanceSettingsPtrInput `pulumi:"personalComputeInstanceSettings"`
	// Details of customized scripts to execute for setting up the cluster.
	SetupScripts SetupScriptsPtrInput `pulumi:"setupScripts"`
	// Specifies policy and settings for SSH access.
	SshSettings ComputeInstanceSshSettingsPtrInput `pulumi:"sshSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet ResourceIdPtrInput `pulumi:"subnet"`
	// Virtual Machine Size
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (ComputeInstancePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceProperties)(nil)).Elem()
}

func (i ComputeInstancePropertiesArgs) ToComputeInstancePropertiesOutput() ComputeInstancePropertiesOutput {
	return i.ToComputeInstancePropertiesOutputWithContext(context.Background())
}

func (i ComputeInstancePropertiesArgs) ToComputeInstancePropertiesOutputWithContext(ctx context.Context) ComputeInstancePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstancePropertiesOutput)
}

func (i ComputeInstancePropertiesArgs) ToComputeInstancePropertiesPtrOutput() ComputeInstancePropertiesPtrOutput {
	return i.ToComputeInstancePropertiesPtrOutputWithContext(context.Background())
}

func (i ComputeInstancePropertiesArgs) ToComputeInstancePropertiesPtrOutputWithContext(ctx context.Context) ComputeInstancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstancePropertiesOutput).ToComputeInstancePropertiesPtrOutputWithContext(ctx)
}

// ComputeInstancePropertiesPtrInput is an input type that accepts ComputeInstancePropertiesArgs, ComputeInstancePropertiesPtr and ComputeInstancePropertiesPtrOutput values.
// You can construct a concrete instance of `ComputeInstancePropertiesPtrInput` via:
//
//          ComputeInstancePropertiesArgs{...}
//
//  or:
//
//          nil
type ComputeInstancePropertiesPtrInput interface {
	pulumi.Input

	ToComputeInstancePropertiesPtrOutput() ComputeInstancePropertiesPtrOutput
	ToComputeInstancePropertiesPtrOutputWithContext(context.Context) ComputeInstancePropertiesPtrOutput
}

type computeInstancePropertiesPtrType ComputeInstancePropertiesArgs

func ComputeInstancePropertiesPtr(v *ComputeInstancePropertiesArgs) ComputeInstancePropertiesPtrInput {
	return (*computeInstancePropertiesPtrType)(v)
}

func (*computeInstancePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceProperties)(nil)).Elem()
}

func (i *computeInstancePropertiesPtrType) ToComputeInstancePropertiesPtrOutput() ComputeInstancePropertiesPtrOutput {
	return i.ToComputeInstancePropertiesPtrOutputWithContext(context.Background())
}

func (i *computeInstancePropertiesPtrType) ToComputeInstancePropertiesPtrOutputWithContext(ctx context.Context) ComputeInstancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstancePropertiesPtrOutput)
}

// Compute Instance properties
type ComputeInstancePropertiesOutput struct{ *pulumi.OutputState }

func (ComputeInstancePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceProperties)(nil)).Elem()
}

func (o ComputeInstancePropertiesOutput) ToComputeInstancePropertiesOutput() ComputeInstancePropertiesOutput {
	return o
}

func (o ComputeInstancePropertiesOutput) ToComputeInstancePropertiesOutputWithContext(ctx context.Context) ComputeInstancePropertiesOutput {
	return o
}

func (o ComputeInstancePropertiesOutput) ToComputeInstancePropertiesPtrOutput() ComputeInstancePropertiesPtrOutput {
	return o.ToComputeInstancePropertiesPtrOutputWithContext(context.Background())
}

func (o ComputeInstancePropertiesOutput) ToComputeInstancePropertiesPtrOutputWithContext(ctx context.Context) ComputeInstancePropertiesPtrOutput {
	return o.ApplyT(func(v ComputeInstanceProperties) *ComputeInstanceProperties {
		return &v
	}).(ComputeInstancePropertiesPtrOutput)
}

// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
func (o ComputeInstancePropertiesOutput) ApplicationSharingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceProperties) *string { return v.ApplicationSharingPolicy }).(pulumi.StringPtrOutput)
}

// The Compute Instance Authorization type. Available values are personal (default).
func (o ComputeInstancePropertiesOutput) ComputeInstanceAuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceProperties) *string { return v.ComputeInstanceAuthorizationType }).(pulumi.StringPtrOutput)
}

// Settings for a personal compute instance.
func (o ComputeInstancePropertiesOutput) PersonalComputeInstanceSettings() PersonalComputeInstanceSettingsPtrOutput {
	return o.ApplyT(func(v ComputeInstanceProperties) *PersonalComputeInstanceSettings {
		return v.PersonalComputeInstanceSettings
	}).(PersonalComputeInstanceSettingsPtrOutput)
}

// Details of customized scripts to execute for setting up the cluster.
func (o ComputeInstancePropertiesOutput) SetupScripts() SetupScriptsPtrOutput {
	return o.ApplyT(func(v ComputeInstanceProperties) *SetupScripts { return v.SetupScripts }).(SetupScriptsPtrOutput)
}

// Specifies policy and settings for SSH access.
func (o ComputeInstancePropertiesOutput) SshSettings() ComputeInstanceSshSettingsPtrOutput {
	return o.ApplyT(func(v ComputeInstanceProperties) *ComputeInstanceSshSettings { return v.SshSettings }).(ComputeInstanceSshSettingsPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o ComputeInstancePropertiesOutput) Subnet() ResourceIdPtrOutput {
	return o.ApplyT(func(v ComputeInstanceProperties) *ResourceId { return v.Subnet }).(ResourceIdPtrOutput)
}

// Virtual Machine Size
func (o ComputeInstancePropertiesOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceProperties) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type ComputeInstancePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstancePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceProperties)(nil)).Elem()
}

func (o ComputeInstancePropertiesPtrOutput) ToComputeInstancePropertiesPtrOutput() ComputeInstancePropertiesPtrOutput {
	return o
}

func (o ComputeInstancePropertiesPtrOutput) ToComputeInstancePropertiesPtrOutputWithContext(ctx context.Context) ComputeInstancePropertiesPtrOutput {
	return o
}

func (o ComputeInstancePropertiesPtrOutput) Elem() ComputeInstancePropertiesOutput {
	return o.ApplyT(func(v *ComputeInstanceProperties) ComputeInstanceProperties { return *v }).(ComputeInstancePropertiesOutput)
}

// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
func (o ComputeInstancePropertiesPtrOutput) ApplicationSharingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationSharingPolicy
	}).(pulumi.StringPtrOutput)
}

// The Compute Instance Authorization type. Available values are personal (default).
func (o ComputeInstancePropertiesPtrOutput) ComputeInstanceAuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ComputeInstanceAuthorizationType
	}).(pulumi.StringPtrOutput)
}

// Settings for a personal compute instance.
func (o ComputeInstancePropertiesPtrOutput) PersonalComputeInstanceSettings() PersonalComputeInstanceSettingsPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceProperties) *PersonalComputeInstanceSettings {
		if v == nil {
			return nil
		}
		return v.PersonalComputeInstanceSettings
	}).(PersonalComputeInstanceSettingsPtrOutput)
}

// Details of customized scripts to execute for setting up the cluster.
func (o ComputeInstancePropertiesPtrOutput) SetupScripts() SetupScriptsPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceProperties) *SetupScripts {
		if v == nil {
			return nil
		}
		return v.SetupScripts
	}).(SetupScriptsPtrOutput)
}

// Specifies policy and settings for SSH access.
func (o ComputeInstancePropertiesPtrOutput) SshSettings() ComputeInstanceSshSettingsPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceProperties) *ComputeInstanceSshSettings {
		if v == nil {
			return nil
		}
		return v.SshSettings
	}).(ComputeInstanceSshSettingsPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o ComputeInstancePropertiesPtrOutput) Subnet() ResourceIdPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceProperties) *ResourceId {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(ResourceIdPtrOutput)
}

// Virtual Machine Size
func (o ComputeInstancePropertiesPtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// Compute Instance properties
type ComputeInstancePropertiesResponse struct {
	// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
	ApplicationSharingPolicy *string `pulumi:"applicationSharingPolicy"`
	// Describes available applications and their endpoints on this ComputeInstance.
	Applications []ComputeInstanceApplicationResponse `pulumi:"applications"`
	// The Compute Instance Authorization type. Available values are personal (default).
	ComputeInstanceAuthorizationType *string `pulumi:"computeInstanceAuthorizationType"`
	// Describes all connectivity endpoints available for this ComputeInstance.
	ConnectivityEndpoints ComputeInstanceConnectivityEndpointsResponse `pulumi:"connectivityEndpoints"`
	// Describes information on user who created this ComputeInstance.
	CreatedBy ComputeInstanceCreatedByResponse `pulumi:"createdBy"`
	// Collection of errors encountered on this ComputeInstance.
	Errors []ErrorResponseResponse `pulumi:"errors"`
	// The last operation on ComputeInstance.
	LastOperation ComputeInstanceLastOperationResponse `pulumi:"lastOperation"`
	// Settings for a personal compute instance.
	PersonalComputeInstanceSettings *PersonalComputeInstanceSettingsResponse `pulumi:"personalComputeInstanceSettings"`
	// Details of customized scripts to execute for setting up the cluster.
	SetupScripts *SetupScriptsResponse `pulumi:"setupScripts"`
	// Specifies policy and settings for SSH access.
	SshSettings *ComputeInstanceSshSettingsResponse `pulumi:"sshSettings"`
	// The current state of this ComputeInstance.
	State string `pulumi:"state"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet *ResourceIdResponse `pulumi:"subnet"`
	// Virtual Machine Size
	VmSize *string `pulumi:"vmSize"`
}

// ComputeInstancePropertiesResponseInput is an input type that accepts ComputeInstancePropertiesResponseArgs and ComputeInstancePropertiesResponseOutput values.
// You can construct a concrete instance of `ComputeInstancePropertiesResponseInput` via:
//
//          ComputeInstancePropertiesResponseArgs{...}
type ComputeInstancePropertiesResponseInput interface {
	pulumi.Input

	ToComputeInstancePropertiesResponseOutput() ComputeInstancePropertiesResponseOutput
	ToComputeInstancePropertiesResponseOutputWithContext(context.Context) ComputeInstancePropertiesResponseOutput
}

// Compute Instance properties
type ComputeInstancePropertiesResponseArgs struct {
	// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
	ApplicationSharingPolicy pulumi.StringPtrInput `pulumi:"applicationSharingPolicy"`
	// Describes available applications and their endpoints on this ComputeInstance.
	Applications ComputeInstanceApplicationResponseArrayInput `pulumi:"applications"`
	// The Compute Instance Authorization type. Available values are personal (default).
	ComputeInstanceAuthorizationType pulumi.StringPtrInput `pulumi:"computeInstanceAuthorizationType"`
	// Describes all connectivity endpoints available for this ComputeInstance.
	ConnectivityEndpoints ComputeInstanceConnectivityEndpointsResponseInput `pulumi:"connectivityEndpoints"`
	// Describes information on user who created this ComputeInstance.
	CreatedBy ComputeInstanceCreatedByResponseInput `pulumi:"createdBy"`
	// Collection of errors encountered on this ComputeInstance.
	Errors ErrorResponseResponseArrayInput `pulumi:"errors"`
	// The last operation on ComputeInstance.
	LastOperation ComputeInstanceLastOperationResponseInput `pulumi:"lastOperation"`
	// Settings for a personal compute instance.
	PersonalComputeInstanceSettings PersonalComputeInstanceSettingsResponsePtrInput `pulumi:"personalComputeInstanceSettings"`
	// Details of customized scripts to execute for setting up the cluster.
	SetupScripts SetupScriptsResponsePtrInput `pulumi:"setupScripts"`
	// Specifies policy and settings for SSH access.
	SshSettings ComputeInstanceSshSettingsResponsePtrInput `pulumi:"sshSettings"`
	// The current state of this ComputeInstance.
	State pulumi.StringInput `pulumi:"state"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet ResourceIdResponsePtrInput `pulumi:"subnet"`
	// Virtual Machine Size
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (ComputeInstancePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstancePropertiesResponse)(nil)).Elem()
}

func (i ComputeInstancePropertiesResponseArgs) ToComputeInstancePropertiesResponseOutput() ComputeInstancePropertiesResponseOutput {
	return i.ToComputeInstancePropertiesResponseOutputWithContext(context.Background())
}

func (i ComputeInstancePropertiesResponseArgs) ToComputeInstancePropertiesResponseOutputWithContext(ctx context.Context) ComputeInstancePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstancePropertiesResponseOutput)
}

func (i ComputeInstancePropertiesResponseArgs) ToComputeInstancePropertiesResponsePtrOutput() ComputeInstancePropertiesResponsePtrOutput {
	return i.ToComputeInstancePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ComputeInstancePropertiesResponseArgs) ToComputeInstancePropertiesResponsePtrOutputWithContext(ctx context.Context) ComputeInstancePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstancePropertiesResponseOutput).ToComputeInstancePropertiesResponsePtrOutputWithContext(ctx)
}

// ComputeInstancePropertiesResponsePtrInput is an input type that accepts ComputeInstancePropertiesResponseArgs, ComputeInstancePropertiesResponsePtr and ComputeInstancePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ComputeInstancePropertiesResponsePtrInput` via:
//
//          ComputeInstancePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ComputeInstancePropertiesResponsePtrInput interface {
	pulumi.Input

	ToComputeInstancePropertiesResponsePtrOutput() ComputeInstancePropertiesResponsePtrOutput
	ToComputeInstancePropertiesResponsePtrOutputWithContext(context.Context) ComputeInstancePropertiesResponsePtrOutput
}

type computeInstancePropertiesResponsePtrType ComputeInstancePropertiesResponseArgs

func ComputeInstancePropertiesResponsePtr(v *ComputeInstancePropertiesResponseArgs) ComputeInstancePropertiesResponsePtrInput {
	return (*computeInstancePropertiesResponsePtrType)(v)
}

func (*computeInstancePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstancePropertiesResponse)(nil)).Elem()
}

func (i *computeInstancePropertiesResponsePtrType) ToComputeInstancePropertiesResponsePtrOutput() ComputeInstancePropertiesResponsePtrOutput {
	return i.ToComputeInstancePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *computeInstancePropertiesResponsePtrType) ToComputeInstancePropertiesResponsePtrOutputWithContext(ctx context.Context) ComputeInstancePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstancePropertiesResponsePtrOutput)
}

// Compute Instance properties
type ComputeInstancePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ComputeInstancePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstancePropertiesResponse)(nil)).Elem()
}

func (o ComputeInstancePropertiesResponseOutput) ToComputeInstancePropertiesResponseOutput() ComputeInstancePropertiesResponseOutput {
	return o
}

func (o ComputeInstancePropertiesResponseOutput) ToComputeInstancePropertiesResponseOutputWithContext(ctx context.Context) ComputeInstancePropertiesResponseOutput {
	return o
}

func (o ComputeInstancePropertiesResponseOutput) ToComputeInstancePropertiesResponsePtrOutput() ComputeInstancePropertiesResponsePtrOutput {
	return o.ToComputeInstancePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ComputeInstancePropertiesResponseOutput) ToComputeInstancePropertiesResponsePtrOutputWithContext(ctx context.Context) ComputeInstancePropertiesResponsePtrOutput {
	return o.ApplyT(func(v ComputeInstancePropertiesResponse) *ComputeInstancePropertiesResponse {
		return &v
	}).(ComputeInstancePropertiesResponsePtrOutput)
}

// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
func (o ComputeInstancePropertiesResponseOutput) ApplicationSharingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstancePropertiesResponse) *string { return v.ApplicationSharingPolicy }).(pulumi.StringPtrOutput)
}

// Describes available applications and their endpoints on this ComputeInstance.
func (o ComputeInstancePropertiesResponseOutput) Applications() ComputeInstanceApplicationResponseArrayOutput {
	return o.ApplyT(func(v ComputeInstancePropertiesResponse) []ComputeInstanceApplicationResponse { return v.Applications }).(ComputeInstanceApplicationResponseArrayOutput)
}

// The Compute Instance Authorization type. Available values are personal (default).
func (o ComputeInstancePropertiesResponseOutput) ComputeInstanceAuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstancePropertiesResponse) *string { return v.ComputeInstanceAuthorizationType }).(pulumi.StringPtrOutput)
}

// Describes all connectivity endpoints available for this ComputeInstance.
func (o ComputeInstancePropertiesResponseOutput) ConnectivityEndpoints() ComputeInstanceConnectivityEndpointsResponseOutput {
	return o.ApplyT(func(v ComputeInstancePropertiesResponse) ComputeInstanceConnectivityEndpointsResponse {
		return v.ConnectivityEndpoints
	}).(ComputeInstanceConnectivityEndpointsResponseOutput)
}

// Describes information on user who created this ComputeInstance.
func (o ComputeInstancePropertiesResponseOutput) CreatedBy() ComputeInstanceCreatedByResponseOutput {
	return o.ApplyT(func(v ComputeInstancePropertiesResponse) ComputeInstanceCreatedByResponse { return v.CreatedBy }).(ComputeInstanceCreatedByResponseOutput)
}

// Collection of errors encountered on this ComputeInstance.
func (o ComputeInstancePropertiesResponseOutput) Errors() ErrorResponseResponseArrayOutput {
	return o.ApplyT(func(v ComputeInstancePropertiesResponse) []ErrorResponseResponse { return v.Errors }).(ErrorResponseResponseArrayOutput)
}

// The last operation on ComputeInstance.
func (o ComputeInstancePropertiesResponseOutput) LastOperation() ComputeInstanceLastOperationResponseOutput {
	return o.ApplyT(func(v ComputeInstancePropertiesResponse) ComputeInstanceLastOperationResponse { return v.LastOperation }).(ComputeInstanceLastOperationResponseOutput)
}

// Settings for a personal compute instance.
func (o ComputeInstancePropertiesResponseOutput) PersonalComputeInstanceSettings() PersonalComputeInstanceSettingsResponsePtrOutput {
	return o.ApplyT(func(v ComputeInstancePropertiesResponse) *PersonalComputeInstanceSettingsResponse {
		return v.PersonalComputeInstanceSettings
	}).(PersonalComputeInstanceSettingsResponsePtrOutput)
}

// Details of customized scripts to execute for setting up the cluster.
func (o ComputeInstancePropertiesResponseOutput) SetupScripts() SetupScriptsResponsePtrOutput {
	return o.ApplyT(func(v ComputeInstancePropertiesResponse) *SetupScriptsResponse { return v.SetupScripts }).(SetupScriptsResponsePtrOutput)
}

// Specifies policy and settings for SSH access.
func (o ComputeInstancePropertiesResponseOutput) SshSettings() ComputeInstanceSshSettingsResponsePtrOutput {
	return o.ApplyT(func(v ComputeInstancePropertiesResponse) *ComputeInstanceSshSettingsResponse { return v.SshSettings }).(ComputeInstanceSshSettingsResponsePtrOutput)
}

// The current state of this ComputeInstance.
func (o ComputeInstancePropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstancePropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o ComputeInstancePropertiesResponseOutput) Subnet() ResourceIdResponsePtrOutput {
	return o.ApplyT(func(v ComputeInstancePropertiesResponse) *ResourceIdResponse { return v.Subnet }).(ResourceIdResponsePtrOutput)
}

// Virtual Machine Size
func (o ComputeInstancePropertiesResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstancePropertiesResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type ComputeInstancePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ComputeInstancePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstancePropertiesResponse)(nil)).Elem()
}

func (o ComputeInstancePropertiesResponsePtrOutput) ToComputeInstancePropertiesResponsePtrOutput() ComputeInstancePropertiesResponsePtrOutput {
	return o
}

func (o ComputeInstancePropertiesResponsePtrOutput) ToComputeInstancePropertiesResponsePtrOutputWithContext(ctx context.Context) ComputeInstancePropertiesResponsePtrOutput {
	return o
}

func (o ComputeInstancePropertiesResponsePtrOutput) Elem() ComputeInstancePropertiesResponseOutput {
	return o.ApplyT(func(v *ComputeInstancePropertiesResponse) ComputeInstancePropertiesResponse { return *v }).(ComputeInstancePropertiesResponseOutput)
}

// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
func (o ComputeInstancePropertiesResponsePtrOutput) ApplicationSharingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstancePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationSharingPolicy
	}).(pulumi.StringPtrOutput)
}

// Describes available applications and their endpoints on this ComputeInstance.
func (o ComputeInstancePropertiesResponsePtrOutput) Applications() ComputeInstanceApplicationResponseArrayOutput {
	return o.ApplyT(func(v *ComputeInstancePropertiesResponse) []ComputeInstanceApplicationResponse {
		if v == nil {
			return nil
		}
		return v.Applications
	}).(ComputeInstanceApplicationResponseArrayOutput)
}

// The Compute Instance Authorization type. Available values are personal (default).
func (o ComputeInstancePropertiesResponsePtrOutput) ComputeInstanceAuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstancePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ComputeInstanceAuthorizationType
	}).(pulumi.StringPtrOutput)
}

// Describes all connectivity endpoints available for this ComputeInstance.
func (o ComputeInstancePropertiesResponsePtrOutput) ConnectivityEndpoints() ComputeInstanceConnectivityEndpointsResponsePtrOutput {
	return o.ApplyT(func(v *ComputeInstancePropertiesResponse) *ComputeInstanceConnectivityEndpointsResponse {
		if v == nil {
			return nil
		}
		return &v.ConnectivityEndpoints
	}).(ComputeInstanceConnectivityEndpointsResponsePtrOutput)
}

// Describes information on user who created this ComputeInstance.
func (o ComputeInstancePropertiesResponsePtrOutput) CreatedBy() ComputeInstanceCreatedByResponsePtrOutput {
	return o.ApplyT(func(v *ComputeInstancePropertiesResponse) *ComputeInstanceCreatedByResponse {
		if v == nil {
			return nil
		}
		return &v.CreatedBy
	}).(ComputeInstanceCreatedByResponsePtrOutput)
}

// Collection of errors encountered on this ComputeInstance.
func (o ComputeInstancePropertiesResponsePtrOutput) Errors() ErrorResponseResponseArrayOutput {
	return o.ApplyT(func(v *ComputeInstancePropertiesResponse) []ErrorResponseResponse {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(ErrorResponseResponseArrayOutput)
}

// The last operation on ComputeInstance.
func (o ComputeInstancePropertiesResponsePtrOutput) LastOperation() ComputeInstanceLastOperationResponsePtrOutput {
	return o.ApplyT(func(v *ComputeInstancePropertiesResponse) *ComputeInstanceLastOperationResponse {
		if v == nil {
			return nil
		}
		return &v.LastOperation
	}).(ComputeInstanceLastOperationResponsePtrOutput)
}

// Settings for a personal compute instance.
func (o ComputeInstancePropertiesResponsePtrOutput) PersonalComputeInstanceSettings() PersonalComputeInstanceSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ComputeInstancePropertiesResponse) *PersonalComputeInstanceSettingsResponse {
		if v == nil {
			return nil
		}
		return v.PersonalComputeInstanceSettings
	}).(PersonalComputeInstanceSettingsResponsePtrOutput)
}

// Details of customized scripts to execute for setting up the cluster.
func (o ComputeInstancePropertiesResponsePtrOutput) SetupScripts() SetupScriptsResponsePtrOutput {
	return o.ApplyT(func(v *ComputeInstancePropertiesResponse) *SetupScriptsResponse {
		if v == nil {
			return nil
		}
		return v.SetupScripts
	}).(SetupScriptsResponsePtrOutput)
}

// Specifies policy and settings for SSH access.
func (o ComputeInstancePropertiesResponsePtrOutput) SshSettings() ComputeInstanceSshSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ComputeInstancePropertiesResponse) *ComputeInstanceSshSettingsResponse {
		if v == nil {
			return nil
		}
		return v.SshSettings
	}).(ComputeInstanceSshSettingsResponsePtrOutput)
}

// The current state of this ComputeInstance.
func (o ComputeInstancePropertiesResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstancePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o ComputeInstancePropertiesResponsePtrOutput) Subnet() ResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *ComputeInstancePropertiesResponse) *ResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(ResourceIdResponsePtrOutput)
}

// Virtual Machine Size
func (o ComputeInstancePropertiesResponsePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstancePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// An Azure Machine Learning compute instance.
type ComputeInstanceResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'ComputeInstance'.
	ComputeType string `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// Properties of ComputeInstance
	Properties *ComputeInstancePropertiesResponse `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []ErrorResponseResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// ComputeInstanceResponseInput is an input type that accepts ComputeInstanceResponseArgs and ComputeInstanceResponseOutput values.
// You can construct a concrete instance of `ComputeInstanceResponseInput` via:
//
//          ComputeInstanceResponseArgs{...}
type ComputeInstanceResponseInput interface {
	pulumi.Input

	ToComputeInstanceResponseOutput() ComputeInstanceResponseOutput
	ToComputeInstanceResponseOutputWithContext(context.Context) ComputeInstanceResponseOutput
}

// An Azure Machine Learning compute instance.
type ComputeInstanceResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'ComputeInstance'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn pulumi.StringInput `pulumi:"modifiedOn"`
	// Properties of ComputeInstance
	Properties ComputeInstancePropertiesResponsePtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors ErrorResponseResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ComputeInstanceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceResponse)(nil)).Elem()
}

func (i ComputeInstanceResponseArgs) ToComputeInstanceResponseOutput() ComputeInstanceResponseOutput {
	return i.ToComputeInstanceResponseOutputWithContext(context.Background())
}

func (i ComputeInstanceResponseArgs) ToComputeInstanceResponseOutputWithContext(ctx context.Context) ComputeInstanceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceResponseOutput)
}

// An Azure Machine Learning compute instance.
type ComputeInstanceResponseOutput struct{ *pulumi.OutputState }

func (ComputeInstanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceResponse)(nil)).Elem()
}

func (o ComputeInstanceResponseOutput) ToComputeInstanceResponseOutput() ComputeInstanceResponseOutput {
	return o
}

func (o ComputeInstanceResponseOutput) ToComputeInstanceResponseOutputWithContext(ctx context.Context) ComputeInstanceResponseOutput {
	return o
}

// Location for the underlying compute
func (o ComputeInstanceResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'ComputeInstance'.
func (o ComputeInstanceResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The time at which the compute was created.
func (o ComputeInstanceResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o ComputeInstanceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o ComputeInstanceResponseOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o ComputeInstanceResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The time at which the compute was last modified.
func (o ComputeInstanceResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// Properties of ComputeInstance
func (o ComputeInstanceResponseOutput) Properties() ComputeInstancePropertiesResponsePtrOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) *ComputeInstancePropertiesResponse { return v.Properties }).(ComputeInstancePropertiesResponsePtrOutput)
}

// Errors during provisioning
func (o ComputeInstanceResponseOutput) ProvisioningErrors() ErrorResponseResponseArrayOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) []ErrorResponseResponse { return v.ProvisioningErrors }).(ErrorResponseResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o ComputeInstanceResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o ComputeInstanceResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Specifies policy and settings for SSH access.
type ComputeInstanceSshSettings struct {
	// Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
	AdminPublicKey *string `pulumi:"adminPublicKey"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
	SshPublicAccess *string `pulumi:"sshPublicAccess"`
}

// ComputeInstanceSshSettingsInput is an input type that accepts ComputeInstanceSshSettingsArgs and ComputeInstanceSshSettingsOutput values.
// You can construct a concrete instance of `ComputeInstanceSshSettingsInput` via:
//
//          ComputeInstanceSshSettingsArgs{...}
type ComputeInstanceSshSettingsInput interface {
	pulumi.Input

	ToComputeInstanceSshSettingsOutput() ComputeInstanceSshSettingsOutput
	ToComputeInstanceSshSettingsOutputWithContext(context.Context) ComputeInstanceSshSettingsOutput
}

// Specifies policy and settings for SSH access.
type ComputeInstanceSshSettingsArgs struct {
	// Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
	AdminPublicKey pulumi.StringPtrInput `pulumi:"adminPublicKey"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
	SshPublicAccess pulumi.StringPtrInput `pulumi:"sshPublicAccess"`
}

func (ComputeInstanceSshSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceSshSettings)(nil)).Elem()
}

func (i ComputeInstanceSshSettingsArgs) ToComputeInstanceSshSettingsOutput() ComputeInstanceSshSettingsOutput {
	return i.ToComputeInstanceSshSettingsOutputWithContext(context.Background())
}

func (i ComputeInstanceSshSettingsArgs) ToComputeInstanceSshSettingsOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSshSettingsOutput)
}

func (i ComputeInstanceSshSettingsArgs) ToComputeInstanceSshSettingsPtrOutput() ComputeInstanceSshSettingsPtrOutput {
	return i.ToComputeInstanceSshSettingsPtrOutputWithContext(context.Background())
}

func (i ComputeInstanceSshSettingsArgs) ToComputeInstanceSshSettingsPtrOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSshSettingsOutput).ToComputeInstanceSshSettingsPtrOutputWithContext(ctx)
}

// ComputeInstanceSshSettingsPtrInput is an input type that accepts ComputeInstanceSshSettingsArgs, ComputeInstanceSshSettingsPtr and ComputeInstanceSshSettingsPtrOutput values.
// You can construct a concrete instance of `ComputeInstanceSshSettingsPtrInput` via:
//
//          ComputeInstanceSshSettingsArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceSshSettingsPtrInput interface {
	pulumi.Input

	ToComputeInstanceSshSettingsPtrOutput() ComputeInstanceSshSettingsPtrOutput
	ToComputeInstanceSshSettingsPtrOutputWithContext(context.Context) ComputeInstanceSshSettingsPtrOutput
}

type computeInstanceSshSettingsPtrType ComputeInstanceSshSettingsArgs

func ComputeInstanceSshSettingsPtr(v *ComputeInstanceSshSettingsArgs) ComputeInstanceSshSettingsPtrInput {
	return (*computeInstanceSshSettingsPtrType)(v)
}

func (*computeInstanceSshSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceSshSettings)(nil)).Elem()
}

func (i *computeInstanceSshSettingsPtrType) ToComputeInstanceSshSettingsPtrOutput() ComputeInstanceSshSettingsPtrOutput {
	return i.ToComputeInstanceSshSettingsPtrOutputWithContext(context.Background())
}

func (i *computeInstanceSshSettingsPtrType) ToComputeInstanceSshSettingsPtrOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSshSettingsPtrOutput)
}

// Specifies policy and settings for SSH access.
type ComputeInstanceSshSettingsOutput struct{ *pulumi.OutputState }

func (ComputeInstanceSshSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceSshSettings)(nil)).Elem()
}

func (o ComputeInstanceSshSettingsOutput) ToComputeInstanceSshSettingsOutput() ComputeInstanceSshSettingsOutput {
	return o
}

func (o ComputeInstanceSshSettingsOutput) ToComputeInstanceSshSettingsOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsOutput {
	return o
}

func (o ComputeInstanceSshSettingsOutput) ToComputeInstanceSshSettingsPtrOutput() ComputeInstanceSshSettingsPtrOutput {
	return o.ToComputeInstanceSshSettingsPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceSshSettingsOutput) ToComputeInstanceSshSettingsPtrOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSshSettings) *ComputeInstanceSshSettings {
		return &v
	}).(ComputeInstanceSshSettingsPtrOutput)
}

// Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
func (o ComputeInstanceSshSettingsOutput) AdminPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSshSettings) *string { return v.AdminPublicKey }).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
func (o ComputeInstanceSshSettingsOutput) SshPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSshSettings) *string { return v.SshPublicAccess }).(pulumi.StringPtrOutput)
}

type ComputeInstanceSshSettingsPtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceSshSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceSshSettings)(nil)).Elem()
}

func (o ComputeInstanceSshSettingsPtrOutput) ToComputeInstanceSshSettingsPtrOutput() ComputeInstanceSshSettingsPtrOutput {
	return o
}

func (o ComputeInstanceSshSettingsPtrOutput) ToComputeInstanceSshSettingsPtrOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsPtrOutput {
	return o
}

func (o ComputeInstanceSshSettingsPtrOutput) Elem() ComputeInstanceSshSettingsOutput {
	return o.ApplyT(func(v *ComputeInstanceSshSettings) ComputeInstanceSshSettings { return *v }).(ComputeInstanceSshSettingsOutput)
}

// Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
func (o ComputeInstanceSshSettingsPtrOutput) AdminPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceSshSettings) *string {
		if v == nil {
			return nil
		}
		return v.AdminPublicKey
	}).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
func (o ComputeInstanceSshSettingsPtrOutput) SshPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceSshSettings) *string {
		if v == nil {
			return nil
		}
		return v.SshPublicAccess
	}).(pulumi.StringPtrOutput)
}

// Specifies policy and settings for SSH access.
type ComputeInstanceSshSettingsResponse struct {
	// Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
	AdminPublicKey *string `pulumi:"adminPublicKey"`
	// Describes the admin user name.
	AdminUserName string `pulumi:"adminUserName"`
	// Describes the port for connecting through SSH.
	SshPort int `pulumi:"sshPort"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
	SshPublicAccess *string `pulumi:"sshPublicAccess"`
}

// ComputeInstanceSshSettingsResponseInput is an input type that accepts ComputeInstanceSshSettingsResponseArgs and ComputeInstanceSshSettingsResponseOutput values.
// You can construct a concrete instance of `ComputeInstanceSshSettingsResponseInput` via:
//
//          ComputeInstanceSshSettingsResponseArgs{...}
type ComputeInstanceSshSettingsResponseInput interface {
	pulumi.Input

	ToComputeInstanceSshSettingsResponseOutput() ComputeInstanceSshSettingsResponseOutput
	ToComputeInstanceSshSettingsResponseOutputWithContext(context.Context) ComputeInstanceSshSettingsResponseOutput
}

// Specifies policy and settings for SSH access.
type ComputeInstanceSshSettingsResponseArgs struct {
	// Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
	AdminPublicKey pulumi.StringPtrInput `pulumi:"adminPublicKey"`
	// Describes the admin user name.
	AdminUserName pulumi.StringInput `pulumi:"adminUserName"`
	// Describes the port for connecting through SSH.
	SshPort pulumi.IntInput `pulumi:"sshPort"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
	SshPublicAccess pulumi.StringPtrInput `pulumi:"sshPublicAccess"`
}

func (ComputeInstanceSshSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceSshSettingsResponse)(nil)).Elem()
}

func (i ComputeInstanceSshSettingsResponseArgs) ToComputeInstanceSshSettingsResponseOutput() ComputeInstanceSshSettingsResponseOutput {
	return i.ToComputeInstanceSshSettingsResponseOutputWithContext(context.Background())
}

func (i ComputeInstanceSshSettingsResponseArgs) ToComputeInstanceSshSettingsResponseOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSshSettingsResponseOutput)
}

func (i ComputeInstanceSshSettingsResponseArgs) ToComputeInstanceSshSettingsResponsePtrOutput() ComputeInstanceSshSettingsResponsePtrOutput {
	return i.ToComputeInstanceSshSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ComputeInstanceSshSettingsResponseArgs) ToComputeInstanceSshSettingsResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSshSettingsResponseOutput).ToComputeInstanceSshSettingsResponsePtrOutputWithContext(ctx)
}

// ComputeInstanceSshSettingsResponsePtrInput is an input type that accepts ComputeInstanceSshSettingsResponseArgs, ComputeInstanceSshSettingsResponsePtr and ComputeInstanceSshSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ComputeInstanceSshSettingsResponsePtrInput` via:
//
//          ComputeInstanceSshSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ComputeInstanceSshSettingsResponsePtrInput interface {
	pulumi.Input

	ToComputeInstanceSshSettingsResponsePtrOutput() ComputeInstanceSshSettingsResponsePtrOutput
	ToComputeInstanceSshSettingsResponsePtrOutputWithContext(context.Context) ComputeInstanceSshSettingsResponsePtrOutput
}

type computeInstanceSshSettingsResponsePtrType ComputeInstanceSshSettingsResponseArgs

func ComputeInstanceSshSettingsResponsePtr(v *ComputeInstanceSshSettingsResponseArgs) ComputeInstanceSshSettingsResponsePtrInput {
	return (*computeInstanceSshSettingsResponsePtrType)(v)
}

func (*computeInstanceSshSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceSshSettingsResponse)(nil)).Elem()
}

func (i *computeInstanceSshSettingsResponsePtrType) ToComputeInstanceSshSettingsResponsePtrOutput() ComputeInstanceSshSettingsResponsePtrOutput {
	return i.ToComputeInstanceSshSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *computeInstanceSshSettingsResponsePtrType) ToComputeInstanceSshSettingsResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSshSettingsResponsePtrOutput)
}

// Specifies policy and settings for SSH access.
type ComputeInstanceSshSettingsResponseOutput struct{ *pulumi.OutputState }

func (ComputeInstanceSshSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceSshSettingsResponse)(nil)).Elem()
}

func (o ComputeInstanceSshSettingsResponseOutput) ToComputeInstanceSshSettingsResponseOutput() ComputeInstanceSshSettingsResponseOutput {
	return o
}

func (o ComputeInstanceSshSettingsResponseOutput) ToComputeInstanceSshSettingsResponseOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsResponseOutput {
	return o
}

func (o ComputeInstanceSshSettingsResponseOutput) ToComputeInstanceSshSettingsResponsePtrOutput() ComputeInstanceSshSettingsResponsePtrOutput {
	return o.ToComputeInstanceSshSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ComputeInstanceSshSettingsResponseOutput) ToComputeInstanceSshSettingsResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsResponsePtrOutput {
	return o.ApplyT(func(v ComputeInstanceSshSettingsResponse) *ComputeInstanceSshSettingsResponse {
		return &v
	}).(ComputeInstanceSshSettingsResponsePtrOutput)
}

// Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
func (o ComputeInstanceSshSettingsResponseOutput) AdminPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSshSettingsResponse) *string { return v.AdminPublicKey }).(pulumi.StringPtrOutput)
}

// Describes the admin user name.
func (o ComputeInstanceSshSettingsResponseOutput) AdminUserName() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeInstanceSshSettingsResponse) string { return v.AdminUserName }).(pulumi.StringOutput)
}

// Describes the port for connecting through SSH.
func (o ComputeInstanceSshSettingsResponseOutput) SshPort() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeInstanceSshSettingsResponse) int { return v.SshPort }).(pulumi.IntOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
func (o ComputeInstanceSshSettingsResponseOutput) SshPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeInstanceSshSettingsResponse) *string { return v.SshPublicAccess }).(pulumi.StringPtrOutput)
}

type ComputeInstanceSshSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceSshSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceSshSettingsResponse)(nil)).Elem()
}

func (o ComputeInstanceSshSettingsResponsePtrOutput) ToComputeInstanceSshSettingsResponsePtrOutput() ComputeInstanceSshSettingsResponsePtrOutput {
	return o
}

func (o ComputeInstanceSshSettingsResponsePtrOutput) ToComputeInstanceSshSettingsResponsePtrOutputWithContext(ctx context.Context) ComputeInstanceSshSettingsResponsePtrOutput {
	return o
}

func (o ComputeInstanceSshSettingsResponsePtrOutput) Elem() ComputeInstanceSshSettingsResponseOutput {
	return o.ApplyT(func(v *ComputeInstanceSshSettingsResponse) ComputeInstanceSshSettingsResponse { return *v }).(ComputeInstanceSshSettingsResponseOutput)
}

// Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.
func (o ComputeInstanceSshSettingsResponsePtrOutput) AdminPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceSshSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminPublicKey
	}).(pulumi.StringPtrOutput)
}

// Describes the admin user name.
func (o ComputeInstanceSshSettingsResponsePtrOutput) AdminUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceSshSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUserName
	}).(pulumi.StringPtrOutput)
}

// Describes the port for connecting through SSH.
func (o ComputeInstanceSshSettingsResponsePtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceSshSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.SshPort
	}).(pulumi.IntPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
func (o ComputeInstanceSshSettingsResponsePtrOutput) SshPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceSshSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SshPublicAccess
	}).(pulumi.StringPtrOutput)
}

type CosmosDbSettings struct {
	// The throughput of the collections in cosmosdb database
	CollectionsThroughput *int `pulumi:"collectionsThroughput"`
}

// CosmosDbSettingsInput is an input type that accepts CosmosDbSettingsArgs and CosmosDbSettingsOutput values.
// You can construct a concrete instance of `CosmosDbSettingsInput` via:
//
//          CosmosDbSettingsArgs{...}
type CosmosDbSettingsInput interface {
	pulumi.Input

	ToCosmosDbSettingsOutput() CosmosDbSettingsOutput
	ToCosmosDbSettingsOutputWithContext(context.Context) CosmosDbSettingsOutput
}

type CosmosDbSettingsArgs struct {
	// The throughput of the collections in cosmosdb database
	CollectionsThroughput pulumi.IntPtrInput `pulumi:"collectionsThroughput"`
}

func (CosmosDbSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosmosDbSettings)(nil)).Elem()
}

func (i CosmosDbSettingsArgs) ToCosmosDbSettingsOutput() CosmosDbSettingsOutput {
	return i.ToCosmosDbSettingsOutputWithContext(context.Background())
}

func (i CosmosDbSettingsArgs) ToCosmosDbSettingsOutputWithContext(ctx context.Context) CosmosDbSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosmosDbSettingsOutput)
}

func (i CosmosDbSettingsArgs) ToCosmosDbSettingsPtrOutput() CosmosDbSettingsPtrOutput {
	return i.ToCosmosDbSettingsPtrOutputWithContext(context.Background())
}

func (i CosmosDbSettingsArgs) ToCosmosDbSettingsPtrOutputWithContext(ctx context.Context) CosmosDbSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosmosDbSettingsOutput).ToCosmosDbSettingsPtrOutputWithContext(ctx)
}

// CosmosDbSettingsPtrInput is an input type that accepts CosmosDbSettingsArgs, CosmosDbSettingsPtr and CosmosDbSettingsPtrOutput values.
// You can construct a concrete instance of `CosmosDbSettingsPtrInput` via:
//
//          CosmosDbSettingsArgs{...}
//
//  or:
//
//          nil
type CosmosDbSettingsPtrInput interface {
	pulumi.Input

	ToCosmosDbSettingsPtrOutput() CosmosDbSettingsPtrOutput
	ToCosmosDbSettingsPtrOutputWithContext(context.Context) CosmosDbSettingsPtrOutput
}

type cosmosDbSettingsPtrType CosmosDbSettingsArgs

func CosmosDbSettingsPtr(v *CosmosDbSettingsArgs) CosmosDbSettingsPtrInput {
	return (*cosmosDbSettingsPtrType)(v)
}

func (*cosmosDbSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CosmosDbSettings)(nil)).Elem()
}

func (i *cosmosDbSettingsPtrType) ToCosmosDbSettingsPtrOutput() CosmosDbSettingsPtrOutput {
	return i.ToCosmosDbSettingsPtrOutputWithContext(context.Background())
}

func (i *cosmosDbSettingsPtrType) ToCosmosDbSettingsPtrOutputWithContext(ctx context.Context) CosmosDbSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosmosDbSettingsPtrOutput)
}

type CosmosDbSettingsOutput struct{ *pulumi.OutputState }

func (CosmosDbSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosmosDbSettings)(nil)).Elem()
}

func (o CosmosDbSettingsOutput) ToCosmosDbSettingsOutput() CosmosDbSettingsOutput {
	return o
}

func (o CosmosDbSettingsOutput) ToCosmosDbSettingsOutputWithContext(ctx context.Context) CosmosDbSettingsOutput {
	return o
}

func (o CosmosDbSettingsOutput) ToCosmosDbSettingsPtrOutput() CosmosDbSettingsPtrOutput {
	return o.ToCosmosDbSettingsPtrOutputWithContext(context.Background())
}

func (o CosmosDbSettingsOutput) ToCosmosDbSettingsPtrOutputWithContext(ctx context.Context) CosmosDbSettingsPtrOutput {
	return o.ApplyT(func(v CosmosDbSettings) *CosmosDbSettings {
		return &v
	}).(CosmosDbSettingsPtrOutput)
}

// The throughput of the collections in cosmosdb database
func (o CosmosDbSettingsOutput) CollectionsThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CosmosDbSettings) *int { return v.CollectionsThroughput }).(pulumi.IntPtrOutput)
}

type CosmosDbSettingsPtrOutput struct{ *pulumi.OutputState }

func (CosmosDbSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CosmosDbSettings)(nil)).Elem()
}

func (o CosmosDbSettingsPtrOutput) ToCosmosDbSettingsPtrOutput() CosmosDbSettingsPtrOutput {
	return o
}

func (o CosmosDbSettingsPtrOutput) ToCosmosDbSettingsPtrOutputWithContext(ctx context.Context) CosmosDbSettingsPtrOutput {
	return o
}

func (o CosmosDbSettingsPtrOutput) Elem() CosmosDbSettingsOutput {
	return o.ApplyT(func(v *CosmosDbSettings) CosmosDbSettings { return *v }).(CosmosDbSettingsOutput)
}

// The throughput of the collections in cosmosdb database
func (o CosmosDbSettingsPtrOutput) CollectionsThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CosmosDbSettings) *int {
		if v == nil {
			return nil
		}
		return v.CollectionsThroughput
	}).(pulumi.IntPtrOutput)
}

type CosmosDbSettingsResponse struct {
	// The throughput of the collections in cosmosdb database
	CollectionsThroughput *int `pulumi:"collectionsThroughput"`
}

// CosmosDbSettingsResponseInput is an input type that accepts CosmosDbSettingsResponseArgs and CosmosDbSettingsResponseOutput values.
// You can construct a concrete instance of `CosmosDbSettingsResponseInput` via:
//
//          CosmosDbSettingsResponseArgs{...}
type CosmosDbSettingsResponseInput interface {
	pulumi.Input

	ToCosmosDbSettingsResponseOutput() CosmosDbSettingsResponseOutput
	ToCosmosDbSettingsResponseOutputWithContext(context.Context) CosmosDbSettingsResponseOutput
}

type CosmosDbSettingsResponseArgs struct {
	// The throughput of the collections in cosmosdb database
	CollectionsThroughput pulumi.IntPtrInput `pulumi:"collectionsThroughput"`
}

func (CosmosDbSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosmosDbSettingsResponse)(nil)).Elem()
}

func (i CosmosDbSettingsResponseArgs) ToCosmosDbSettingsResponseOutput() CosmosDbSettingsResponseOutput {
	return i.ToCosmosDbSettingsResponseOutputWithContext(context.Background())
}

func (i CosmosDbSettingsResponseArgs) ToCosmosDbSettingsResponseOutputWithContext(ctx context.Context) CosmosDbSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosmosDbSettingsResponseOutput)
}

func (i CosmosDbSettingsResponseArgs) ToCosmosDbSettingsResponsePtrOutput() CosmosDbSettingsResponsePtrOutput {
	return i.ToCosmosDbSettingsResponsePtrOutputWithContext(context.Background())
}

func (i CosmosDbSettingsResponseArgs) ToCosmosDbSettingsResponsePtrOutputWithContext(ctx context.Context) CosmosDbSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosmosDbSettingsResponseOutput).ToCosmosDbSettingsResponsePtrOutputWithContext(ctx)
}

// CosmosDbSettingsResponsePtrInput is an input type that accepts CosmosDbSettingsResponseArgs, CosmosDbSettingsResponsePtr and CosmosDbSettingsResponsePtrOutput values.
// You can construct a concrete instance of `CosmosDbSettingsResponsePtrInput` via:
//
//          CosmosDbSettingsResponseArgs{...}
//
//  or:
//
//          nil
type CosmosDbSettingsResponsePtrInput interface {
	pulumi.Input

	ToCosmosDbSettingsResponsePtrOutput() CosmosDbSettingsResponsePtrOutput
	ToCosmosDbSettingsResponsePtrOutputWithContext(context.Context) CosmosDbSettingsResponsePtrOutput
}

type cosmosDbSettingsResponsePtrType CosmosDbSettingsResponseArgs

func CosmosDbSettingsResponsePtr(v *CosmosDbSettingsResponseArgs) CosmosDbSettingsResponsePtrInput {
	return (*cosmosDbSettingsResponsePtrType)(v)
}

func (*cosmosDbSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CosmosDbSettingsResponse)(nil)).Elem()
}

func (i *cosmosDbSettingsResponsePtrType) ToCosmosDbSettingsResponsePtrOutput() CosmosDbSettingsResponsePtrOutput {
	return i.ToCosmosDbSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *cosmosDbSettingsResponsePtrType) ToCosmosDbSettingsResponsePtrOutputWithContext(ctx context.Context) CosmosDbSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosmosDbSettingsResponsePtrOutput)
}

type CosmosDbSettingsResponseOutput struct{ *pulumi.OutputState }

func (CosmosDbSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosmosDbSettingsResponse)(nil)).Elem()
}

func (o CosmosDbSettingsResponseOutput) ToCosmosDbSettingsResponseOutput() CosmosDbSettingsResponseOutput {
	return o
}

func (o CosmosDbSettingsResponseOutput) ToCosmosDbSettingsResponseOutputWithContext(ctx context.Context) CosmosDbSettingsResponseOutput {
	return o
}

func (o CosmosDbSettingsResponseOutput) ToCosmosDbSettingsResponsePtrOutput() CosmosDbSettingsResponsePtrOutput {
	return o.ToCosmosDbSettingsResponsePtrOutputWithContext(context.Background())
}

func (o CosmosDbSettingsResponseOutput) ToCosmosDbSettingsResponsePtrOutputWithContext(ctx context.Context) CosmosDbSettingsResponsePtrOutput {
	return o.ApplyT(func(v CosmosDbSettingsResponse) *CosmosDbSettingsResponse {
		return &v
	}).(CosmosDbSettingsResponsePtrOutput)
}

// The throughput of the collections in cosmosdb database
func (o CosmosDbSettingsResponseOutput) CollectionsThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CosmosDbSettingsResponse) *int { return v.CollectionsThroughput }).(pulumi.IntPtrOutput)
}

type CosmosDbSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (CosmosDbSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CosmosDbSettingsResponse)(nil)).Elem()
}

func (o CosmosDbSettingsResponsePtrOutput) ToCosmosDbSettingsResponsePtrOutput() CosmosDbSettingsResponsePtrOutput {
	return o
}

func (o CosmosDbSettingsResponsePtrOutput) ToCosmosDbSettingsResponsePtrOutputWithContext(ctx context.Context) CosmosDbSettingsResponsePtrOutput {
	return o
}

func (o CosmosDbSettingsResponsePtrOutput) Elem() CosmosDbSettingsResponseOutput {
	return o.ApplyT(func(v *CosmosDbSettingsResponse) CosmosDbSettingsResponse { return *v }).(CosmosDbSettingsResponseOutput)
}

// The throughput of the collections in cosmosdb database
func (o CosmosDbSettingsResponsePtrOutput) CollectionsThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CosmosDbSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.CollectionsThroughput
	}).(pulumi.IntPtrOutput)
}

// A DataFactory compute.
type DataFactory struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataFactory'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DataFactoryInput is an input type that accepts DataFactoryArgs and DataFactoryOutput values.
// You can construct a concrete instance of `DataFactoryInput` via:
//
//          DataFactoryArgs{...}
type DataFactoryInput interface {
	pulumi.Input

	ToDataFactoryOutput() DataFactoryOutput
	ToDataFactoryOutputWithContext(context.Context) DataFactoryOutput
}

// A DataFactory compute.
type DataFactoryArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataFactory'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DataFactoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFactory)(nil)).Elem()
}

func (i DataFactoryArgs) ToDataFactoryOutput() DataFactoryOutput {
	return i.ToDataFactoryOutputWithContext(context.Background())
}

func (i DataFactoryArgs) ToDataFactoryOutputWithContext(ctx context.Context) DataFactoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFactoryOutput)
}

// A DataFactory compute.
type DataFactoryOutput struct{ *pulumi.OutputState }

func (DataFactoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFactory)(nil)).Elem()
}

func (o DataFactoryOutput) ToDataFactoryOutput() DataFactoryOutput {
	return o
}

func (o DataFactoryOutput) ToDataFactoryOutputWithContext(ctx context.Context) DataFactoryOutput {
	return o
}

// Location for the underlying compute
func (o DataFactoryOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactory) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'DataFactory'.
func (o DataFactoryOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataFactory) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DataFactoryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactory) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o DataFactoryOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataFactory) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// ARM resource id of the underlying compute
func (o DataFactoryOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactory) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// A DataFactory compute.
type DataFactoryResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataFactory'.
	ComputeType string `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// Errors during provisioning
	ProvisioningErrors []ErrorResponseResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DataFactoryResponseInput is an input type that accepts DataFactoryResponseArgs and DataFactoryResponseOutput values.
// You can construct a concrete instance of `DataFactoryResponseInput` via:
//
//          DataFactoryResponseArgs{...}
type DataFactoryResponseInput interface {
	pulumi.Input

	ToDataFactoryResponseOutput() DataFactoryResponseOutput
	ToDataFactoryResponseOutputWithContext(context.Context) DataFactoryResponseOutput
}

// A DataFactory compute.
type DataFactoryResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataFactory'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn pulumi.StringInput `pulumi:"modifiedOn"`
	// Errors during provisioning
	ProvisioningErrors ErrorResponseResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DataFactoryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFactoryResponse)(nil)).Elem()
}

func (i DataFactoryResponseArgs) ToDataFactoryResponseOutput() DataFactoryResponseOutput {
	return i.ToDataFactoryResponseOutputWithContext(context.Background())
}

func (i DataFactoryResponseArgs) ToDataFactoryResponseOutputWithContext(ctx context.Context) DataFactoryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFactoryResponseOutput)
}

// A DataFactory compute.
type DataFactoryResponseOutput struct{ *pulumi.OutputState }

func (DataFactoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFactoryResponse)(nil)).Elem()
}

func (o DataFactoryResponseOutput) ToDataFactoryResponseOutput() DataFactoryResponseOutput {
	return o
}

func (o DataFactoryResponseOutput) ToDataFactoryResponseOutputWithContext(ctx context.Context) DataFactoryResponseOutput {
	return o
}

// Location for the underlying compute
func (o DataFactoryResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactoryResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'DataFactory'.
func (o DataFactoryResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataFactoryResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The time at which the compute was created.
func (o DataFactoryResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataFactoryResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DataFactoryResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactoryResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o DataFactoryResponseOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataFactoryResponse) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o DataFactoryResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v DataFactoryResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The time at which the compute was last modified.
func (o DataFactoryResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataFactoryResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// Errors during provisioning
func (o DataFactoryResponseOutput) ProvisioningErrors() ErrorResponseResponseArrayOutput {
	return o.ApplyT(func(v DataFactoryResponse) []ErrorResponseResponse { return v.ProvisioningErrors }).(ErrorResponseResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o DataFactoryResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DataFactoryResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o DataFactoryResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactoryResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// A DataLakeAnalytics compute.
type DataLakeAnalytics struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataLakeAnalytics'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool                        `pulumi:"disableLocalAuth"`
	Properties       *DataLakeAnalyticsProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DataLakeAnalyticsInput is an input type that accepts DataLakeAnalyticsArgs and DataLakeAnalyticsOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsInput` via:
//
//          DataLakeAnalyticsArgs{...}
type DataLakeAnalyticsInput interface {
	pulumi.Input

	ToDataLakeAnalyticsOutput() DataLakeAnalyticsOutput
	ToDataLakeAnalyticsOutputWithContext(context.Context) DataLakeAnalyticsOutput
}

// A DataLakeAnalytics compute.
type DataLakeAnalyticsArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataLakeAnalytics'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput                 `pulumi:"disableLocalAuth"`
	Properties       DataLakeAnalyticsPropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DataLakeAnalyticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalytics)(nil)).Elem()
}

func (i DataLakeAnalyticsArgs) ToDataLakeAnalyticsOutput() DataLakeAnalyticsOutput {
	return i.ToDataLakeAnalyticsOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsArgs) ToDataLakeAnalyticsOutputWithContext(ctx context.Context) DataLakeAnalyticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsOutput)
}

// A DataLakeAnalytics compute.
type DataLakeAnalyticsOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalytics)(nil)).Elem()
}

func (o DataLakeAnalyticsOutput) ToDataLakeAnalyticsOutput() DataLakeAnalyticsOutput {
	return o
}

func (o DataLakeAnalyticsOutput) ToDataLakeAnalyticsOutputWithContext(ctx context.Context) DataLakeAnalyticsOutput {
	return o
}

// Location for the underlying compute
func (o DataLakeAnalyticsOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalytics) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'DataLakeAnalytics'.
func (o DataLakeAnalyticsOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalytics) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DataLakeAnalyticsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalytics) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o DataLakeAnalyticsOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataLakeAnalytics) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

func (o DataLakeAnalyticsOutput) Properties() DataLakeAnalyticsPropertiesPtrOutput {
	return o.ApplyT(func(v DataLakeAnalytics) *DataLakeAnalyticsProperties { return v.Properties }).(DataLakeAnalyticsPropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o DataLakeAnalyticsOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalytics) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type DataLakeAnalyticsProperties struct {
	// DataLake Store Account Name
	DataLakeStoreAccountName *string `pulumi:"dataLakeStoreAccountName"`
}

// DataLakeAnalyticsPropertiesInput is an input type that accepts DataLakeAnalyticsPropertiesArgs and DataLakeAnalyticsPropertiesOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsPropertiesInput` via:
//
//          DataLakeAnalyticsPropertiesArgs{...}
type DataLakeAnalyticsPropertiesInput interface {
	pulumi.Input

	ToDataLakeAnalyticsPropertiesOutput() DataLakeAnalyticsPropertiesOutput
	ToDataLakeAnalyticsPropertiesOutputWithContext(context.Context) DataLakeAnalyticsPropertiesOutput
}

type DataLakeAnalyticsPropertiesArgs struct {
	// DataLake Store Account Name
	DataLakeStoreAccountName pulumi.StringPtrInput `pulumi:"dataLakeStoreAccountName"`
}

func (DataLakeAnalyticsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsProperties)(nil)).Elem()
}

func (i DataLakeAnalyticsPropertiesArgs) ToDataLakeAnalyticsPropertiesOutput() DataLakeAnalyticsPropertiesOutput {
	return i.ToDataLakeAnalyticsPropertiesOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsPropertiesArgs) ToDataLakeAnalyticsPropertiesOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsPropertiesOutput)
}

func (i DataLakeAnalyticsPropertiesArgs) ToDataLakeAnalyticsPropertiesPtrOutput() DataLakeAnalyticsPropertiesPtrOutput {
	return i.ToDataLakeAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsPropertiesArgs) ToDataLakeAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsPropertiesOutput).ToDataLakeAnalyticsPropertiesPtrOutputWithContext(ctx)
}

// DataLakeAnalyticsPropertiesPtrInput is an input type that accepts DataLakeAnalyticsPropertiesArgs, DataLakeAnalyticsPropertiesPtr and DataLakeAnalyticsPropertiesPtrOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsPropertiesPtrInput` via:
//
//          DataLakeAnalyticsPropertiesArgs{...}
//
//  or:
//
//          nil
type DataLakeAnalyticsPropertiesPtrInput interface {
	pulumi.Input

	ToDataLakeAnalyticsPropertiesPtrOutput() DataLakeAnalyticsPropertiesPtrOutput
	ToDataLakeAnalyticsPropertiesPtrOutputWithContext(context.Context) DataLakeAnalyticsPropertiesPtrOutput
}

type dataLakeAnalyticsPropertiesPtrType DataLakeAnalyticsPropertiesArgs

func DataLakeAnalyticsPropertiesPtr(v *DataLakeAnalyticsPropertiesArgs) DataLakeAnalyticsPropertiesPtrInput {
	return (*dataLakeAnalyticsPropertiesPtrType)(v)
}

func (*dataLakeAnalyticsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAnalyticsProperties)(nil)).Elem()
}

func (i *dataLakeAnalyticsPropertiesPtrType) ToDataLakeAnalyticsPropertiesPtrOutput() DataLakeAnalyticsPropertiesPtrOutput {
	return i.ToDataLakeAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (i *dataLakeAnalyticsPropertiesPtrType) ToDataLakeAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsPropertiesPtrOutput)
}

type DataLakeAnalyticsPropertiesOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsProperties)(nil)).Elem()
}

func (o DataLakeAnalyticsPropertiesOutput) ToDataLakeAnalyticsPropertiesOutput() DataLakeAnalyticsPropertiesOutput {
	return o
}

func (o DataLakeAnalyticsPropertiesOutput) ToDataLakeAnalyticsPropertiesOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesOutput {
	return o
}

func (o DataLakeAnalyticsPropertiesOutput) ToDataLakeAnalyticsPropertiesPtrOutput() DataLakeAnalyticsPropertiesPtrOutput {
	return o.ToDataLakeAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (o DataLakeAnalyticsPropertiesOutput) ToDataLakeAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsProperties) *DataLakeAnalyticsProperties {
		return &v
	}).(DataLakeAnalyticsPropertiesPtrOutput)
}

// DataLake Store Account Name
func (o DataLakeAnalyticsPropertiesOutput) DataLakeStoreAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsProperties) *string { return v.DataLakeStoreAccountName }).(pulumi.StringPtrOutput)
}

type DataLakeAnalyticsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAnalyticsProperties)(nil)).Elem()
}

func (o DataLakeAnalyticsPropertiesPtrOutput) ToDataLakeAnalyticsPropertiesPtrOutput() DataLakeAnalyticsPropertiesPtrOutput {
	return o
}

func (o DataLakeAnalyticsPropertiesPtrOutput) ToDataLakeAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesPtrOutput {
	return o
}

func (o DataLakeAnalyticsPropertiesPtrOutput) Elem() DataLakeAnalyticsPropertiesOutput {
	return o.ApplyT(func(v *DataLakeAnalyticsProperties) DataLakeAnalyticsProperties { return *v }).(DataLakeAnalyticsPropertiesOutput)
}

// DataLake Store Account Name
func (o DataLakeAnalyticsPropertiesPtrOutput) DataLakeStoreAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAnalyticsProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataLakeStoreAccountName
	}).(pulumi.StringPtrOutput)
}

// A DataLakeAnalytics compute.
type DataLakeAnalyticsResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataLakeAnalytics'.
	ComputeType string `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn string                               `pulumi:"modifiedOn"`
	Properties *DataLakeAnalyticsResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []ErrorResponseResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DataLakeAnalyticsResponseInput is an input type that accepts DataLakeAnalyticsResponseArgs and DataLakeAnalyticsResponseOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsResponseInput` via:
//
//          DataLakeAnalyticsResponseArgs{...}
type DataLakeAnalyticsResponseInput interface {
	pulumi.Input

	ToDataLakeAnalyticsResponseOutput() DataLakeAnalyticsResponseOutput
	ToDataLakeAnalyticsResponseOutputWithContext(context.Context) DataLakeAnalyticsResponseOutput
}

// A DataLakeAnalytics compute.
type DataLakeAnalyticsResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataLakeAnalytics'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn pulumi.StringInput                          `pulumi:"modifiedOn"`
	Properties DataLakeAnalyticsResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors ErrorResponseResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DataLakeAnalyticsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsResponse)(nil)).Elem()
}

func (i DataLakeAnalyticsResponseArgs) ToDataLakeAnalyticsResponseOutput() DataLakeAnalyticsResponseOutput {
	return i.ToDataLakeAnalyticsResponseOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsResponseArgs) ToDataLakeAnalyticsResponseOutputWithContext(ctx context.Context) DataLakeAnalyticsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsResponseOutput)
}

// A DataLakeAnalytics compute.
type DataLakeAnalyticsResponseOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsResponse)(nil)).Elem()
}

func (o DataLakeAnalyticsResponseOutput) ToDataLakeAnalyticsResponseOutput() DataLakeAnalyticsResponseOutput {
	return o
}

func (o DataLakeAnalyticsResponseOutput) ToDataLakeAnalyticsResponseOutputWithContext(ctx context.Context) DataLakeAnalyticsResponseOutput {
	return o
}

// Location for the underlying compute
func (o DataLakeAnalyticsResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'DataLakeAnalytics'.
func (o DataLakeAnalyticsResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The time at which the compute was created.
func (o DataLakeAnalyticsResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DataLakeAnalyticsResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o DataLakeAnalyticsResponseOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o DataLakeAnalyticsResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The time at which the compute was last modified.
func (o DataLakeAnalyticsResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

func (o DataLakeAnalyticsResponseOutput) Properties() DataLakeAnalyticsResponsePropertiesPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) *DataLakeAnalyticsResponseProperties { return v.Properties }).(DataLakeAnalyticsResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o DataLakeAnalyticsResponseOutput) ProvisioningErrors() ErrorResponseResponseArrayOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) []ErrorResponseResponse { return v.ProvisioningErrors }).(ErrorResponseResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o DataLakeAnalyticsResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o DataLakeAnalyticsResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type DataLakeAnalyticsResponseProperties struct {
	// DataLake Store Account Name
	DataLakeStoreAccountName *string `pulumi:"dataLakeStoreAccountName"`
}

// DataLakeAnalyticsResponsePropertiesInput is an input type that accepts DataLakeAnalyticsResponsePropertiesArgs and DataLakeAnalyticsResponsePropertiesOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsResponsePropertiesInput` via:
//
//          DataLakeAnalyticsResponsePropertiesArgs{...}
type DataLakeAnalyticsResponsePropertiesInput interface {
	pulumi.Input

	ToDataLakeAnalyticsResponsePropertiesOutput() DataLakeAnalyticsResponsePropertiesOutput
	ToDataLakeAnalyticsResponsePropertiesOutputWithContext(context.Context) DataLakeAnalyticsResponsePropertiesOutput
}

type DataLakeAnalyticsResponsePropertiesArgs struct {
	// DataLake Store Account Name
	DataLakeStoreAccountName pulumi.StringPtrInput `pulumi:"dataLakeStoreAccountName"`
}

func (DataLakeAnalyticsResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsResponseProperties)(nil)).Elem()
}

func (i DataLakeAnalyticsResponsePropertiesArgs) ToDataLakeAnalyticsResponsePropertiesOutput() DataLakeAnalyticsResponsePropertiesOutput {
	return i.ToDataLakeAnalyticsResponsePropertiesOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsResponsePropertiesArgs) ToDataLakeAnalyticsResponsePropertiesOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsResponsePropertiesOutput)
}

func (i DataLakeAnalyticsResponsePropertiesArgs) ToDataLakeAnalyticsResponsePropertiesPtrOutput() DataLakeAnalyticsResponsePropertiesPtrOutput {
	return i.ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsResponsePropertiesArgs) ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsResponsePropertiesOutput).ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(ctx)
}

// DataLakeAnalyticsResponsePropertiesPtrInput is an input type that accepts DataLakeAnalyticsResponsePropertiesArgs, DataLakeAnalyticsResponsePropertiesPtr and DataLakeAnalyticsResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsResponsePropertiesPtrInput` via:
//
//          DataLakeAnalyticsResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type DataLakeAnalyticsResponsePropertiesPtrInput interface {
	pulumi.Input

	ToDataLakeAnalyticsResponsePropertiesPtrOutput() DataLakeAnalyticsResponsePropertiesPtrOutput
	ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(context.Context) DataLakeAnalyticsResponsePropertiesPtrOutput
}

type dataLakeAnalyticsResponsePropertiesPtrType DataLakeAnalyticsResponsePropertiesArgs

func DataLakeAnalyticsResponsePropertiesPtr(v *DataLakeAnalyticsResponsePropertiesArgs) DataLakeAnalyticsResponsePropertiesPtrInput {
	return (*dataLakeAnalyticsResponsePropertiesPtrType)(v)
}

func (*dataLakeAnalyticsResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAnalyticsResponseProperties)(nil)).Elem()
}

func (i *dataLakeAnalyticsResponsePropertiesPtrType) ToDataLakeAnalyticsResponsePropertiesPtrOutput() DataLakeAnalyticsResponsePropertiesPtrOutput {
	return i.ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *dataLakeAnalyticsResponsePropertiesPtrType) ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsResponsePropertiesPtrOutput)
}

type DataLakeAnalyticsResponsePropertiesOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsResponseProperties)(nil)).Elem()
}

func (o DataLakeAnalyticsResponsePropertiesOutput) ToDataLakeAnalyticsResponsePropertiesOutput() DataLakeAnalyticsResponsePropertiesOutput {
	return o
}

func (o DataLakeAnalyticsResponsePropertiesOutput) ToDataLakeAnalyticsResponsePropertiesOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesOutput {
	return o
}

func (o DataLakeAnalyticsResponsePropertiesOutput) ToDataLakeAnalyticsResponsePropertiesPtrOutput() DataLakeAnalyticsResponsePropertiesPtrOutput {
	return o.ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o DataLakeAnalyticsResponsePropertiesOutput) ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponseProperties) *DataLakeAnalyticsResponseProperties {
		return &v
	}).(DataLakeAnalyticsResponsePropertiesPtrOutput)
}

// DataLake Store Account Name
func (o DataLakeAnalyticsResponsePropertiesOutput) DataLakeStoreAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponseProperties) *string { return v.DataLakeStoreAccountName }).(pulumi.StringPtrOutput)
}

type DataLakeAnalyticsResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAnalyticsResponseProperties)(nil)).Elem()
}

func (o DataLakeAnalyticsResponsePropertiesPtrOutput) ToDataLakeAnalyticsResponsePropertiesPtrOutput() DataLakeAnalyticsResponsePropertiesPtrOutput {
	return o
}

func (o DataLakeAnalyticsResponsePropertiesPtrOutput) ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesPtrOutput {
	return o
}

func (o DataLakeAnalyticsResponsePropertiesPtrOutput) Elem() DataLakeAnalyticsResponsePropertiesOutput {
	return o.ApplyT(func(v *DataLakeAnalyticsResponseProperties) DataLakeAnalyticsResponseProperties { return *v }).(DataLakeAnalyticsResponsePropertiesOutput)
}

// DataLake Store Account Name
func (o DataLakeAnalyticsResponsePropertiesPtrOutput) DataLakeStoreAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAnalyticsResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataLakeStoreAccountName
	}).(pulumi.StringPtrOutput)
}

// A DataFactory compute.
type Databricks struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Databricks'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Properties of Databricks
	Properties *DatabricksProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DatabricksInput is an input type that accepts DatabricksArgs and DatabricksOutput values.
// You can construct a concrete instance of `DatabricksInput` via:
//
//          DatabricksArgs{...}
type DatabricksInput interface {
	pulumi.Input

	ToDatabricksOutput() DatabricksOutput
	ToDatabricksOutputWithContext(context.Context) DatabricksOutput
}

// A DataFactory compute.
type DatabricksArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Databricks'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// Properties of Databricks
	Properties DatabricksPropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DatabricksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Databricks)(nil)).Elem()
}

func (i DatabricksArgs) ToDatabricksOutput() DatabricksOutput {
	return i.ToDatabricksOutputWithContext(context.Background())
}

func (i DatabricksArgs) ToDatabricksOutputWithContext(ctx context.Context) DatabricksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksOutput)
}

// A DataFactory compute.
type DatabricksOutput struct{ *pulumi.OutputState }

func (DatabricksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Databricks)(nil)).Elem()
}

func (o DatabricksOutput) ToDatabricksOutput() DatabricksOutput {
	return o
}

func (o DatabricksOutput) ToDatabricksOutputWithContext(ctx context.Context) DatabricksOutput {
	return o
}

// Location for the underlying compute
func (o DatabricksOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Databricks) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'Databricks'.
func (o DatabricksOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v Databricks) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DatabricksOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Databricks) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o DatabricksOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Databricks) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// Properties of Databricks
func (o DatabricksOutput) Properties() DatabricksPropertiesPtrOutput {
	return o.ApplyT(func(v Databricks) *DatabricksProperties { return v.Properties }).(DatabricksPropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o DatabricksOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Databricks) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Properties of Databricks
type DatabricksProperties struct {
	// Databricks access token
	DatabricksAccessToken *string `pulumi:"databricksAccessToken"`
	// Workspace Url
	WorkspaceUrl *string `pulumi:"workspaceUrl"`
}

// DatabricksPropertiesInput is an input type that accepts DatabricksPropertiesArgs and DatabricksPropertiesOutput values.
// You can construct a concrete instance of `DatabricksPropertiesInput` via:
//
//          DatabricksPropertiesArgs{...}
type DatabricksPropertiesInput interface {
	pulumi.Input

	ToDatabricksPropertiesOutput() DatabricksPropertiesOutput
	ToDatabricksPropertiesOutputWithContext(context.Context) DatabricksPropertiesOutput
}

// Properties of Databricks
type DatabricksPropertiesArgs struct {
	// Databricks access token
	DatabricksAccessToken pulumi.StringPtrInput `pulumi:"databricksAccessToken"`
	// Workspace Url
	WorkspaceUrl pulumi.StringPtrInput `pulumi:"workspaceUrl"`
}

func (DatabricksPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksProperties)(nil)).Elem()
}

func (i DatabricksPropertiesArgs) ToDatabricksPropertiesOutput() DatabricksPropertiesOutput {
	return i.ToDatabricksPropertiesOutputWithContext(context.Background())
}

func (i DatabricksPropertiesArgs) ToDatabricksPropertiesOutputWithContext(ctx context.Context) DatabricksPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksPropertiesOutput)
}

func (i DatabricksPropertiesArgs) ToDatabricksPropertiesPtrOutput() DatabricksPropertiesPtrOutput {
	return i.ToDatabricksPropertiesPtrOutputWithContext(context.Background())
}

func (i DatabricksPropertiesArgs) ToDatabricksPropertiesPtrOutputWithContext(ctx context.Context) DatabricksPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksPropertiesOutput).ToDatabricksPropertiesPtrOutputWithContext(ctx)
}

// DatabricksPropertiesPtrInput is an input type that accepts DatabricksPropertiesArgs, DatabricksPropertiesPtr and DatabricksPropertiesPtrOutput values.
// You can construct a concrete instance of `DatabricksPropertiesPtrInput` via:
//
//          DatabricksPropertiesArgs{...}
//
//  or:
//
//          nil
type DatabricksPropertiesPtrInput interface {
	pulumi.Input

	ToDatabricksPropertiesPtrOutput() DatabricksPropertiesPtrOutput
	ToDatabricksPropertiesPtrOutputWithContext(context.Context) DatabricksPropertiesPtrOutput
}

type databricksPropertiesPtrType DatabricksPropertiesArgs

func DatabricksPropertiesPtr(v *DatabricksPropertiesArgs) DatabricksPropertiesPtrInput {
	return (*databricksPropertiesPtrType)(v)
}

func (*databricksPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabricksProperties)(nil)).Elem()
}

func (i *databricksPropertiesPtrType) ToDatabricksPropertiesPtrOutput() DatabricksPropertiesPtrOutput {
	return i.ToDatabricksPropertiesPtrOutputWithContext(context.Background())
}

func (i *databricksPropertiesPtrType) ToDatabricksPropertiesPtrOutputWithContext(ctx context.Context) DatabricksPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksPropertiesPtrOutput)
}

// Properties of Databricks
type DatabricksPropertiesOutput struct{ *pulumi.OutputState }

func (DatabricksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksProperties)(nil)).Elem()
}

func (o DatabricksPropertiesOutput) ToDatabricksPropertiesOutput() DatabricksPropertiesOutput {
	return o
}

func (o DatabricksPropertiesOutput) ToDatabricksPropertiesOutputWithContext(ctx context.Context) DatabricksPropertiesOutput {
	return o
}

func (o DatabricksPropertiesOutput) ToDatabricksPropertiesPtrOutput() DatabricksPropertiesPtrOutput {
	return o.ToDatabricksPropertiesPtrOutputWithContext(context.Background())
}

func (o DatabricksPropertiesOutput) ToDatabricksPropertiesPtrOutputWithContext(ctx context.Context) DatabricksPropertiesPtrOutput {
	return o.ApplyT(func(v DatabricksProperties) *DatabricksProperties {
		return &v
	}).(DatabricksPropertiesPtrOutput)
}

// Databricks access token
func (o DatabricksPropertiesOutput) DatabricksAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksProperties) *string { return v.DatabricksAccessToken }).(pulumi.StringPtrOutput)
}

// Workspace Url
func (o DatabricksPropertiesOutput) WorkspaceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksProperties) *string { return v.WorkspaceUrl }).(pulumi.StringPtrOutput)
}

type DatabricksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DatabricksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabricksProperties)(nil)).Elem()
}

func (o DatabricksPropertiesPtrOutput) ToDatabricksPropertiesPtrOutput() DatabricksPropertiesPtrOutput {
	return o
}

func (o DatabricksPropertiesPtrOutput) ToDatabricksPropertiesPtrOutputWithContext(ctx context.Context) DatabricksPropertiesPtrOutput {
	return o
}

func (o DatabricksPropertiesPtrOutput) Elem() DatabricksPropertiesOutput {
	return o.ApplyT(func(v *DatabricksProperties) DatabricksProperties { return *v }).(DatabricksPropertiesOutput)
}

// Databricks access token
func (o DatabricksPropertiesPtrOutput) DatabricksAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabricksProperties) *string {
		if v == nil {
			return nil
		}
		return v.DatabricksAccessToken
	}).(pulumi.StringPtrOutput)
}

// Workspace Url
func (o DatabricksPropertiesPtrOutput) WorkspaceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabricksProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceUrl
	}).(pulumi.StringPtrOutput)
}

// Properties of Databricks
type DatabricksPropertiesResponse struct {
	// Databricks access token
	DatabricksAccessToken *string `pulumi:"databricksAccessToken"`
	// Workspace Url
	WorkspaceUrl *string `pulumi:"workspaceUrl"`
}

// DatabricksPropertiesResponseInput is an input type that accepts DatabricksPropertiesResponseArgs and DatabricksPropertiesResponseOutput values.
// You can construct a concrete instance of `DatabricksPropertiesResponseInput` via:
//
//          DatabricksPropertiesResponseArgs{...}
type DatabricksPropertiesResponseInput interface {
	pulumi.Input

	ToDatabricksPropertiesResponseOutput() DatabricksPropertiesResponseOutput
	ToDatabricksPropertiesResponseOutputWithContext(context.Context) DatabricksPropertiesResponseOutput
}

// Properties of Databricks
type DatabricksPropertiesResponseArgs struct {
	// Databricks access token
	DatabricksAccessToken pulumi.StringPtrInput `pulumi:"databricksAccessToken"`
	// Workspace Url
	WorkspaceUrl pulumi.StringPtrInput `pulumi:"workspaceUrl"`
}

func (DatabricksPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksPropertiesResponse)(nil)).Elem()
}

func (i DatabricksPropertiesResponseArgs) ToDatabricksPropertiesResponseOutput() DatabricksPropertiesResponseOutput {
	return i.ToDatabricksPropertiesResponseOutputWithContext(context.Background())
}

func (i DatabricksPropertiesResponseArgs) ToDatabricksPropertiesResponseOutputWithContext(ctx context.Context) DatabricksPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksPropertiesResponseOutput)
}

func (i DatabricksPropertiesResponseArgs) ToDatabricksPropertiesResponsePtrOutput() DatabricksPropertiesResponsePtrOutput {
	return i.ToDatabricksPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i DatabricksPropertiesResponseArgs) ToDatabricksPropertiesResponsePtrOutputWithContext(ctx context.Context) DatabricksPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksPropertiesResponseOutput).ToDatabricksPropertiesResponsePtrOutputWithContext(ctx)
}

// DatabricksPropertiesResponsePtrInput is an input type that accepts DatabricksPropertiesResponseArgs, DatabricksPropertiesResponsePtr and DatabricksPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `DatabricksPropertiesResponsePtrInput` via:
//
//          DatabricksPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type DatabricksPropertiesResponsePtrInput interface {
	pulumi.Input

	ToDatabricksPropertiesResponsePtrOutput() DatabricksPropertiesResponsePtrOutput
	ToDatabricksPropertiesResponsePtrOutputWithContext(context.Context) DatabricksPropertiesResponsePtrOutput
}

type databricksPropertiesResponsePtrType DatabricksPropertiesResponseArgs

func DatabricksPropertiesResponsePtr(v *DatabricksPropertiesResponseArgs) DatabricksPropertiesResponsePtrInput {
	return (*databricksPropertiesResponsePtrType)(v)
}

func (*databricksPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabricksPropertiesResponse)(nil)).Elem()
}

func (i *databricksPropertiesResponsePtrType) ToDatabricksPropertiesResponsePtrOutput() DatabricksPropertiesResponsePtrOutput {
	return i.ToDatabricksPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *databricksPropertiesResponsePtrType) ToDatabricksPropertiesResponsePtrOutputWithContext(ctx context.Context) DatabricksPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksPropertiesResponsePtrOutput)
}

// Properties of Databricks
type DatabricksPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DatabricksPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksPropertiesResponse)(nil)).Elem()
}

func (o DatabricksPropertiesResponseOutput) ToDatabricksPropertiesResponseOutput() DatabricksPropertiesResponseOutput {
	return o
}

func (o DatabricksPropertiesResponseOutput) ToDatabricksPropertiesResponseOutputWithContext(ctx context.Context) DatabricksPropertiesResponseOutput {
	return o
}

func (o DatabricksPropertiesResponseOutput) ToDatabricksPropertiesResponsePtrOutput() DatabricksPropertiesResponsePtrOutput {
	return o.ToDatabricksPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o DatabricksPropertiesResponseOutput) ToDatabricksPropertiesResponsePtrOutputWithContext(ctx context.Context) DatabricksPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DatabricksPropertiesResponse) *DatabricksPropertiesResponse {
		return &v
	}).(DatabricksPropertiesResponsePtrOutput)
}

// Databricks access token
func (o DatabricksPropertiesResponseOutput) DatabricksAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksPropertiesResponse) *string { return v.DatabricksAccessToken }).(pulumi.StringPtrOutput)
}

// Workspace Url
func (o DatabricksPropertiesResponseOutput) WorkspaceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksPropertiesResponse) *string { return v.WorkspaceUrl }).(pulumi.StringPtrOutput)
}

type DatabricksPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DatabricksPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabricksPropertiesResponse)(nil)).Elem()
}

func (o DatabricksPropertiesResponsePtrOutput) ToDatabricksPropertiesResponsePtrOutput() DatabricksPropertiesResponsePtrOutput {
	return o
}

func (o DatabricksPropertiesResponsePtrOutput) ToDatabricksPropertiesResponsePtrOutputWithContext(ctx context.Context) DatabricksPropertiesResponsePtrOutput {
	return o
}

func (o DatabricksPropertiesResponsePtrOutput) Elem() DatabricksPropertiesResponseOutput {
	return o.ApplyT(func(v *DatabricksPropertiesResponse) DatabricksPropertiesResponse { return *v }).(DatabricksPropertiesResponseOutput)
}

// Databricks access token
func (o DatabricksPropertiesResponsePtrOutput) DatabricksAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabricksPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatabricksAccessToken
	}).(pulumi.StringPtrOutput)
}

// Workspace Url
func (o DatabricksPropertiesResponsePtrOutput) WorkspaceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabricksPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceUrl
	}).(pulumi.StringPtrOutput)
}

// A DataFactory compute.
type DatabricksResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Databricks'.
	ComputeType string `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// Properties of Databricks
	Properties *DatabricksPropertiesResponse `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []ErrorResponseResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DatabricksResponseInput is an input type that accepts DatabricksResponseArgs and DatabricksResponseOutput values.
// You can construct a concrete instance of `DatabricksResponseInput` via:
//
//          DatabricksResponseArgs{...}
type DatabricksResponseInput interface {
	pulumi.Input

	ToDatabricksResponseOutput() DatabricksResponseOutput
	ToDatabricksResponseOutputWithContext(context.Context) DatabricksResponseOutput
}

// A DataFactory compute.
type DatabricksResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Databricks'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn pulumi.StringInput `pulumi:"modifiedOn"`
	// Properties of Databricks
	Properties DatabricksPropertiesResponsePtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors ErrorResponseResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DatabricksResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksResponse)(nil)).Elem()
}

func (i DatabricksResponseArgs) ToDatabricksResponseOutput() DatabricksResponseOutput {
	return i.ToDatabricksResponseOutputWithContext(context.Background())
}

func (i DatabricksResponseArgs) ToDatabricksResponseOutputWithContext(ctx context.Context) DatabricksResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksResponseOutput)
}

// A DataFactory compute.
type DatabricksResponseOutput struct{ *pulumi.OutputState }

func (DatabricksResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksResponse)(nil)).Elem()
}

func (o DatabricksResponseOutput) ToDatabricksResponseOutput() DatabricksResponseOutput {
	return o
}

func (o DatabricksResponseOutput) ToDatabricksResponseOutputWithContext(ctx context.Context) DatabricksResponseOutput {
	return o
}

// Location for the underlying compute
func (o DatabricksResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'Databricks'.
func (o DatabricksResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The time at which the compute was created.
func (o DatabricksResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DatabricksResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o DatabricksResponseOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabricksResponse) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o DatabricksResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v DatabricksResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The time at which the compute was last modified.
func (o DatabricksResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// Properties of Databricks
func (o DatabricksResponseOutput) Properties() DatabricksPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DatabricksResponse) *DatabricksPropertiesResponse { return v.Properties }).(DatabricksPropertiesResponsePtrOutput)
}

// Errors during provisioning
func (o DatabricksResponseOutput) ProvisioningErrors() ErrorResponseResponseArrayOutput {
	return o.ApplyT(func(v DatabricksResponse) []ErrorResponseResponse { return v.ProvisioningErrors }).(ErrorResponseResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o DatabricksResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o DatabricksResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type EncryptionProperty struct {
	// The identity that will be used to access the key vault for encryption at rest.
	Identity *IdentityForCmk `pulumi:"identity"`
	// Customer Key vault properties.
	KeyVaultProperties KeyVaultProperties `pulumi:"keyVaultProperties"`
	// Indicates whether or not the encryption is enabled for the workspace.
	Status string `pulumi:"status"`
}

// EncryptionPropertyInput is an input type that accepts EncryptionPropertyArgs and EncryptionPropertyOutput values.
// You can construct a concrete instance of `EncryptionPropertyInput` via:
//
//          EncryptionPropertyArgs{...}
type EncryptionPropertyInput interface {
	pulumi.Input

	ToEncryptionPropertyOutput() EncryptionPropertyOutput
	ToEncryptionPropertyOutputWithContext(context.Context) EncryptionPropertyOutput
}

type EncryptionPropertyArgs struct {
	// The identity that will be used to access the key vault for encryption at rest.
	Identity IdentityForCmkPtrInput `pulumi:"identity"`
	// Customer Key vault properties.
	KeyVaultProperties KeyVaultPropertiesInput `pulumi:"keyVaultProperties"`
	// Indicates whether or not the encryption is enabled for the workspace.
	Status pulumi.StringInput `pulumi:"status"`
}

func (EncryptionPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionProperty)(nil)).Elem()
}

func (i EncryptionPropertyArgs) ToEncryptionPropertyOutput() EncryptionPropertyOutput {
	return i.ToEncryptionPropertyOutputWithContext(context.Background())
}

func (i EncryptionPropertyArgs) ToEncryptionPropertyOutputWithContext(ctx context.Context) EncryptionPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyOutput)
}

func (i EncryptionPropertyArgs) ToEncryptionPropertyPtrOutput() EncryptionPropertyPtrOutput {
	return i.ToEncryptionPropertyPtrOutputWithContext(context.Background())
}

func (i EncryptionPropertyArgs) ToEncryptionPropertyPtrOutputWithContext(ctx context.Context) EncryptionPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyOutput).ToEncryptionPropertyPtrOutputWithContext(ctx)
}

// EncryptionPropertyPtrInput is an input type that accepts EncryptionPropertyArgs, EncryptionPropertyPtr and EncryptionPropertyPtrOutput values.
// You can construct a concrete instance of `EncryptionPropertyPtrInput` via:
//
//          EncryptionPropertyArgs{...}
//
//  or:
//
//          nil
type EncryptionPropertyPtrInput interface {
	pulumi.Input

	ToEncryptionPropertyPtrOutput() EncryptionPropertyPtrOutput
	ToEncryptionPropertyPtrOutputWithContext(context.Context) EncryptionPropertyPtrOutput
}

type encryptionPropertyPtrType EncryptionPropertyArgs

func EncryptionPropertyPtr(v *EncryptionPropertyArgs) EncryptionPropertyPtrInput {
	return (*encryptionPropertyPtrType)(v)
}

func (*encryptionPropertyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionProperty)(nil)).Elem()
}

func (i *encryptionPropertyPtrType) ToEncryptionPropertyPtrOutput() EncryptionPropertyPtrOutput {
	return i.ToEncryptionPropertyPtrOutputWithContext(context.Background())
}

func (i *encryptionPropertyPtrType) ToEncryptionPropertyPtrOutputWithContext(ctx context.Context) EncryptionPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyPtrOutput)
}

type EncryptionPropertyOutput struct{ *pulumi.OutputState }

func (EncryptionPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionProperty)(nil)).Elem()
}

func (o EncryptionPropertyOutput) ToEncryptionPropertyOutput() EncryptionPropertyOutput {
	return o
}

func (o EncryptionPropertyOutput) ToEncryptionPropertyOutputWithContext(ctx context.Context) EncryptionPropertyOutput {
	return o
}

func (o EncryptionPropertyOutput) ToEncryptionPropertyPtrOutput() EncryptionPropertyPtrOutput {
	return o.ToEncryptionPropertyPtrOutputWithContext(context.Background())
}

func (o EncryptionPropertyOutput) ToEncryptionPropertyPtrOutputWithContext(ctx context.Context) EncryptionPropertyPtrOutput {
	return o.ApplyT(func(v EncryptionProperty) *EncryptionProperty {
		return &v
	}).(EncryptionPropertyPtrOutput)
}

// The identity that will be used to access the key vault for encryption at rest.
func (o EncryptionPropertyOutput) Identity() IdentityForCmkPtrOutput {
	return o.ApplyT(func(v EncryptionProperty) *IdentityForCmk { return v.Identity }).(IdentityForCmkPtrOutput)
}

// Customer Key vault properties.
func (o EncryptionPropertyOutput) KeyVaultProperties() KeyVaultPropertiesOutput {
	return o.ApplyT(func(v EncryptionProperty) KeyVaultProperties { return v.KeyVaultProperties }).(KeyVaultPropertiesOutput)
}

// Indicates whether or not the encryption is enabled for the workspace.
func (o EncryptionPropertyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionProperty) string { return v.Status }).(pulumi.StringOutput)
}

type EncryptionPropertyPtrOutput struct{ *pulumi.OutputState }

func (EncryptionPropertyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionProperty)(nil)).Elem()
}

func (o EncryptionPropertyPtrOutput) ToEncryptionPropertyPtrOutput() EncryptionPropertyPtrOutput {
	return o
}

func (o EncryptionPropertyPtrOutput) ToEncryptionPropertyPtrOutputWithContext(ctx context.Context) EncryptionPropertyPtrOutput {
	return o
}

func (o EncryptionPropertyPtrOutput) Elem() EncryptionPropertyOutput {
	return o.ApplyT(func(v *EncryptionProperty) EncryptionProperty { return *v }).(EncryptionPropertyOutput)
}

// The identity that will be used to access the key vault for encryption at rest.
func (o EncryptionPropertyPtrOutput) Identity() IdentityForCmkPtrOutput {
	return o.ApplyT(func(v *EncryptionProperty) *IdentityForCmk {
		if v == nil {
			return nil
		}
		return v.Identity
	}).(IdentityForCmkPtrOutput)
}

// Customer Key vault properties.
func (o EncryptionPropertyPtrOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v *EncryptionProperty) *KeyVaultProperties {
		if v == nil {
			return nil
		}
		return &v.KeyVaultProperties
	}).(KeyVaultPropertiesPtrOutput)
}

// Indicates whether or not the encryption is enabled for the workspace.
func (o EncryptionPropertyPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionProperty) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

type EncryptionPropertyResponse struct {
	// The identity that will be used to access the key vault for encryption at rest.
	Identity *IdentityForCmkResponse `pulumi:"identity"`
	// Customer Key vault properties.
	KeyVaultProperties KeyVaultPropertiesResponse `pulumi:"keyVaultProperties"`
	// Indicates whether or not the encryption is enabled for the workspace.
	Status string `pulumi:"status"`
}

// EncryptionPropertyResponseInput is an input type that accepts EncryptionPropertyResponseArgs and EncryptionPropertyResponseOutput values.
// You can construct a concrete instance of `EncryptionPropertyResponseInput` via:
//
//          EncryptionPropertyResponseArgs{...}
type EncryptionPropertyResponseInput interface {
	pulumi.Input

	ToEncryptionPropertyResponseOutput() EncryptionPropertyResponseOutput
	ToEncryptionPropertyResponseOutputWithContext(context.Context) EncryptionPropertyResponseOutput
}

type EncryptionPropertyResponseArgs struct {
	// The identity that will be used to access the key vault for encryption at rest.
	Identity IdentityForCmkResponsePtrInput `pulumi:"identity"`
	// Customer Key vault properties.
	KeyVaultProperties KeyVaultPropertiesResponseInput `pulumi:"keyVaultProperties"`
	// Indicates whether or not the encryption is enabled for the workspace.
	Status pulumi.StringInput `pulumi:"status"`
}

func (EncryptionPropertyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPropertyResponse)(nil)).Elem()
}

func (i EncryptionPropertyResponseArgs) ToEncryptionPropertyResponseOutput() EncryptionPropertyResponseOutput {
	return i.ToEncryptionPropertyResponseOutputWithContext(context.Background())
}

func (i EncryptionPropertyResponseArgs) ToEncryptionPropertyResponseOutputWithContext(ctx context.Context) EncryptionPropertyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyResponseOutput)
}

func (i EncryptionPropertyResponseArgs) ToEncryptionPropertyResponsePtrOutput() EncryptionPropertyResponsePtrOutput {
	return i.ToEncryptionPropertyResponsePtrOutputWithContext(context.Background())
}

func (i EncryptionPropertyResponseArgs) ToEncryptionPropertyResponsePtrOutputWithContext(ctx context.Context) EncryptionPropertyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyResponseOutput).ToEncryptionPropertyResponsePtrOutputWithContext(ctx)
}

// EncryptionPropertyResponsePtrInput is an input type that accepts EncryptionPropertyResponseArgs, EncryptionPropertyResponsePtr and EncryptionPropertyResponsePtrOutput values.
// You can construct a concrete instance of `EncryptionPropertyResponsePtrInput` via:
//
//          EncryptionPropertyResponseArgs{...}
//
//  or:
//
//          nil
type EncryptionPropertyResponsePtrInput interface {
	pulumi.Input

	ToEncryptionPropertyResponsePtrOutput() EncryptionPropertyResponsePtrOutput
	ToEncryptionPropertyResponsePtrOutputWithContext(context.Context) EncryptionPropertyResponsePtrOutput
}

type encryptionPropertyResponsePtrType EncryptionPropertyResponseArgs

func EncryptionPropertyResponsePtr(v *EncryptionPropertyResponseArgs) EncryptionPropertyResponsePtrInput {
	return (*encryptionPropertyResponsePtrType)(v)
}

func (*encryptionPropertyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPropertyResponse)(nil)).Elem()
}

func (i *encryptionPropertyResponsePtrType) ToEncryptionPropertyResponsePtrOutput() EncryptionPropertyResponsePtrOutput {
	return i.ToEncryptionPropertyResponsePtrOutputWithContext(context.Background())
}

func (i *encryptionPropertyResponsePtrType) ToEncryptionPropertyResponsePtrOutputWithContext(ctx context.Context) EncryptionPropertyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyResponsePtrOutput)
}

type EncryptionPropertyResponseOutput struct{ *pulumi.OutputState }

func (EncryptionPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPropertyResponse)(nil)).Elem()
}

func (o EncryptionPropertyResponseOutput) ToEncryptionPropertyResponseOutput() EncryptionPropertyResponseOutput {
	return o
}

func (o EncryptionPropertyResponseOutput) ToEncryptionPropertyResponseOutputWithContext(ctx context.Context) EncryptionPropertyResponseOutput {
	return o
}

func (o EncryptionPropertyResponseOutput) ToEncryptionPropertyResponsePtrOutput() EncryptionPropertyResponsePtrOutput {
	return o.ToEncryptionPropertyResponsePtrOutputWithContext(context.Background())
}

func (o EncryptionPropertyResponseOutput) ToEncryptionPropertyResponsePtrOutputWithContext(ctx context.Context) EncryptionPropertyResponsePtrOutput {
	return o.ApplyT(func(v EncryptionPropertyResponse) *EncryptionPropertyResponse {
		return &v
	}).(EncryptionPropertyResponsePtrOutput)
}

// The identity that will be used to access the key vault for encryption at rest.
func (o EncryptionPropertyResponseOutput) Identity() IdentityForCmkResponsePtrOutput {
	return o.ApplyT(func(v EncryptionPropertyResponse) *IdentityForCmkResponse { return v.Identity }).(IdentityForCmkResponsePtrOutput)
}

// Customer Key vault properties.
func (o EncryptionPropertyResponseOutput) KeyVaultProperties() KeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v EncryptionPropertyResponse) KeyVaultPropertiesResponse { return v.KeyVaultProperties }).(KeyVaultPropertiesResponseOutput)
}

// Indicates whether or not the encryption is enabled for the workspace.
func (o EncryptionPropertyResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionPropertyResponse) string { return v.Status }).(pulumi.StringOutput)
}

type EncryptionPropertyResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionPropertyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPropertyResponse)(nil)).Elem()
}

func (o EncryptionPropertyResponsePtrOutput) ToEncryptionPropertyResponsePtrOutput() EncryptionPropertyResponsePtrOutput {
	return o
}

func (o EncryptionPropertyResponsePtrOutput) ToEncryptionPropertyResponsePtrOutputWithContext(ctx context.Context) EncryptionPropertyResponsePtrOutput {
	return o
}

func (o EncryptionPropertyResponsePtrOutput) Elem() EncryptionPropertyResponseOutput {
	return o.ApplyT(func(v *EncryptionPropertyResponse) EncryptionPropertyResponse { return *v }).(EncryptionPropertyResponseOutput)
}

// The identity that will be used to access the key vault for encryption at rest.
func (o EncryptionPropertyResponsePtrOutput) Identity() IdentityForCmkResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionPropertyResponse) *IdentityForCmkResponse {
		if v == nil {
			return nil
		}
		return v.Identity
	}).(IdentityForCmkResponsePtrOutput)
}

// Customer Key vault properties.
func (o EncryptionPropertyResponsePtrOutput) KeyVaultProperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionPropertyResponse) *KeyVaultPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.KeyVaultProperties
	}).(KeyVaultPropertiesResponsePtrOutput)
}

// Indicates whether or not the encryption is enabled for the workspace.
func (o EncryptionPropertyResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionPropertyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The resource management error additional info.
type ErrorAdditionalInfoResponse struct {
	// The additional info.
	Info interface{} `pulumi:"info"`
	// The additional info type.
	Type string `pulumi:"type"`
}

// ErrorAdditionalInfoResponseInput is an input type that accepts ErrorAdditionalInfoResponseArgs and ErrorAdditionalInfoResponseOutput values.
// You can construct a concrete instance of `ErrorAdditionalInfoResponseInput` via:
//
//          ErrorAdditionalInfoResponseArgs{...}
type ErrorAdditionalInfoResponseInput interface {
	pulumi.Input

	ToErrorAdditionalInfoResponseOutput() ErrorAdditionalInfoResponseOutput
	ToErrorAdditionalInfoResponseOutputWithContext(context.Context) ErrorAdditionalInfoResponseOutput
}

// The resource management error additional info.
type ErrorAdditionalInfoResponseArgs struct {
	// The additional info.
	Info pulumi.Input `pulumi:"info"`
	// The additional info type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ErrorAdditionalInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorAdditionalInfoResponse)(nil)).Elem()
}

func (i ErrorAdditionalInfoResponseArgs) ToErrorAdditionalInfoResponseOutput() ErrorAdditionalInfoResponseOutput {
	return i.ToErrorAdditionalInfoResponseOutputWithContext(context.Background())
}

func (i ErrorAdditionalInfoResponseArgs) ToErrorAdditionalInfoResponseOutputWithContext(ctx context.Context) ErrorAdditionalInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorAdditionalInfoResponseOutput)
}

// ErrorAdditionalInfoResponseArrayInput is an input type that accepts ErrorAdditionalInfoResponseArray and ErrorAdditionalInfoResponseArrayOutput values.
// You can construct a concrete instance of `ErrorAdditionalInfoResponseArrayInput` via:
//
//          ErrorAdditionalInfoResponseArray{ ErrorAdditionalInfoResponseArgs{...} }
type ErrorAdditionalInfoResponseArrayInput interface {
	pulumi.Input

	ToErrorAdditionalInfoResponseArrayOutput() ErrorAdditionalInfoResponseArrayOutput
	ToErrorAdditionalInfoResponseArrayOutputWithContext(context.Context) ErrorAdditionalInfoResponseArrayOutput
}

type ErrorAdditionalInfoResponseArray []ErrorAdditionalInfoResponseInput

func (ErrorAdditionalInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorAdditionalInfoResponse)(nil)).Elem()
}

func (i ErrorAdditionalInfoResponseArray) ToErrorAdditionalInfoResponseArrayOutput() ErrorAdditionalInfoResponseArrayOutput {
	return i.ToErrorAdditionalInfoResponseArrayOutputWithContext(context.Background())
}

func (i ErrorAdditionalInfoResponseArray) ToErrorAdditionalInfoResponseArrayOutputWithContext(ctx context.Context) ErrorAdditionalInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorAdditionalInfoResponseArrayOutput)
}

// The resource management error additional info.
type ErrorAdditionalInfoResponseOutput struct{ *pulumi.OutputState }

func (ErrorAdditionalInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorAdditionalInfoResponse)(nil)).Elem()
}

func (o ErrorAdditionalInfoResponseOutput) ToErrorAdditionalInfoResponseOutput() ErrorAdditionalInfoResponseOutput {
	return o
}

func (o ErrorAdditionalInfoResponseOutput) ToErrorAdditionalInfoResponseOutputWithContext(ctx context.Context) ErrorAdditionalInfoResponseOutput {
	return o
}

// The additional info.
func (o ErrorAdditionalInfoResponseOutput) Info() pulumi.AnyOutput {
	return o.ApplyT(func(v ErrorAdditionalInfoResponse) interface{} { return v.Info }).(pulumi.AnyOutput)
}

// The additional info type.
func (o ErrorAdditionalInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorAdditionalInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ErrorAdditionalInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorAdditionalInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorAdditionalInfoResponse)(nil)).Elem()
}

func (o ErrorAdditionalInfoResponseArrayOutput) ToErrorAdditionalInfoResponseArrayOutput() ErrorAdditionalInfoResponseArrayOutput {
	return o
}

func (o ErrorAdditionalInfoResponseArrayOutput) ToErrorAdditionalInfoResponseArrayOutputWithContext(ctx context.Context) ErrorAdditionalInfoResponseArrayOutput {
	return o
}

func (o ErrorAdditionalInfoResponseArrayOutput) Index(i pulumi.IntInput) ErrorAdditionalInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorAdditionalInfoResponse {
		return vs[0].([]ErrorAdditionalInfoResponse)[vs[1].(int)]
	}).(ErrorAdditionalInfoResponseOutput)
}

// The error detail.
type ErrorDetailResponse struct {
	// The error additional info.
	AdditionalInfo []ErrorAdditionalInfoResponse `pulumi:"additionalInfo"`
	// The error code.
	Code string `pulumi:"code"`
	// The error details.
	Details []ErrorDetailResponse `pulumi:"details"`
	// The error message.
	Message string `pulumi:"message"`
	// The error target.
	Target string `pulumi:"target"`
}

// ErrorDetailResponseInput is an input type that accepts ErrorDetailResponseArgs and ErrorDetailResponseOutput values.
// You can construct a concrete instance of `ErrorDetailResponseInput` via:
//
//          ErrorDetailResponseArgs{...}
type ErrorDetailResponseInput interface {
	pulumi.Input

	ToErrorDetailResponseOutput() ErrorDetailResponseOutput
	ToErrorDetailResponseOutputWithContext(context.Context) ErrorDetailResponseOutput
}

// The error detail.
type ErrorDetailResponseArgs struct {
	// The error additional info.
	AdditionalInfo ErrorAdditionalInfoResponseArrayInput `pulumi:"additionalInfo"`
	// The error code.
	Code pulumi.StringInput `pulumi:"code"`
	// The error details.
	Details ErrorDetailResponseArrayInput `pulumi:"details"`
	// The error message.
	Message pulumi.StringInput `pulumi:"message"`
	// The error target.
	Target pulumi.StringInput `pulumi:"target"`
}

func (ErrorDetailResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailResponse)(nil)).Elem()
}

func (i ErrorDetailResponseArgs) ToErrorDetailResponseOutput() ErrorDetailResponseOutput {
	return i.ToErrorDetailResponseOutputWithContext(context.Background())
}

func (i ErrorDetailResponseArgs) ToErrorDetailResponseOutputWithContext(ctx context.Context) ErrorDetailResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorDetailResponseOutput)
}

func (i ErrorDetailResponseArgs) ToErrorDetailResponsePtrOutput() ErrorDetailResponsePtrOutput {
	return i.ToErrorDetailResponsePtrOutputWithContext(context.Background())
}

func (i ErrorDetailResponseArgs) ToErrorDetailResponsePtrOutputWithContext(ctx context.Context) ErrorDetailResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorDetailResponseOutput).ToErrorDetailResponsePtrOutputWithContext(ctx)
}

// ErrorDetailResponsePtrInput is an input type that accepts ErrorDetailResponseArgs, ErrorDetailResponsePtr and ErrorDetailResponsePtrOutput values.
// You can construct a concrete instance of `ErrorDetailResponsePtrInput` via:
//
//          ErrorDetailResponseArgs{...}
//
//  or:
//
//          nil
type ErrorDetailResponsePtrInput interface {
	pulumi.Input

	ToErrorDetailResponsePtrOutput() ErrorDetailResponsePtrOutput
	ToErrorDetailResponsePtrOutputWithContext(context.Context) ErrorDetailResponsePtrOutput
}

type errorDetailResponsePtrType ErrorDetailResponseArgs

func ErrorDetailResponsePtr(v *ErrorDetailResponseArgs) ErrorDetailResponsePtrInput {
	return (*errorDetailResponsePtrType)(v)
}

func (*errorDetailResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorDetailResponse)(nil)).Elem()
}

func (i *errorDetailResponsePtrType) ToErrorDetailResponsePtrOutput() ErrorDetailResponsePtrOutput {
	return i.ToErrorDetailResponsePtrOutputWithContext(context.Background())
}

func (i *errorDetailResponsePtrType) ToErrorDetailResponsePtrOutputWithContext(ctx context.Context) ErrorDetailResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorDetailResponsePtrOutput)
}

// ErrorDetailResponseArrayInput is an input type that accepts ErrorDetailResponseArray and ErrorDetailResponseArrayOutput values.
// You can construct a concrete instance of `ErrorDetailResponseArrayInput` via:
//
//          ErrorDetailResponseArray{ ErrorDetailResponseArgs{...} }
type ErrorDetailResponseArrayInput interface {
	pulumi.Input

	ToErrorDetailResponseArrayOutput() ErrorDetailResponseArrayOutput
	ToErrorDetailResponseArrayOutputWithContext(context.Context) ErrorDetailResponseArrayOutput
}

type ErrorDetailResponseArray []ErrorDetailResponseInput

func (ErrorDetailResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorDetailResponse)(nil)).Elem()
}

func (i ErrorDetailResponseArray) ToErrorDetailResponseArrayOutput() ErrorDetailResponseArrayOutput {
	return i.ToErrorDetailResponseArrayOutputWithContext(context.Background())
}

func (i ErrorDetailResponseArray) ToErrorDetailResponseArrayOutputWithContext(ctx context.Context) ErrorDetailResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorDetailResponseArrayOutput)
}

// The error detail.
type ErrorDetailResponseOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutput() ErrorDetailResponseOutput {
	return o
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutputWithContext(ctx context.Context) ErrorDetailResponseOutput {
	return o
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponsePtrOutput() ErrorDetailResponsePtrOutput {
	return o.ToErrorDetailResponsePtrOutputWithContext(context.Background())
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponsePtrOutputWithContext(ctx context.Context) ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v ErrorDetailResponse) *ErrorDetailResponse {
		return &v
	}).(ErrorDetailResponsePtrOutput)
}

// The error additional info.
func (o ErrorDetailResponseOutput) AdditionalInfo() ErrorAdditionalInfoResponseArrayOutput {
	return o.ApplyT(func(v ErrorDetailResponse) []ErrorAdditionalInfoResponse { return v.AdditionalInfo }).(ErrorAdditionalInfoResponseArrayOutput)
}

// The error code.
func (o ErrorDetailResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Code }).(pulumi.StringOutput)
}

// The error details.
func (o ErrorDetailResponseOutput) Details() ErrorDetailResponseArrayOutput {
	return o.ApplyT(func(v ErrorDetailResponse) []ErrorDetailResponse { return v.Details }).(ErrorDetailResponseArrayOutput)
}

// The error message.
func (o ErrorDetailResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The error target.
func (o ErrorDetailResponseOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Target }).(pulumi.StringOutput)
}

type ErrorDetailResponsePtrOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponsePtrOutput) ToErrorDetailResponsePtrOutput() ErrorDetailResponsePtrOutput {
	return o
}

func (o ErrorDetailResponsePtrOutput) ToErrorDetailResponsePtrOutputWithContext(ctx context.Context) ErrorDetailResponsePtrOutput {
	return o
}

func (o ErrorDetailResponsePtrOutput) Elem() ErrorDetailResponseOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) ErrorDetailResponse { return *v }).(ErrorDetailResponseOutput)
}

// The error additional info.
func (o ErrorDetailResponsePtrOutput) AdditionalInfo() ErrorAdditionalInfoResponseArrayOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) []ErrorAdditionalInfoResponse {
		if v == nil {
			return nil
		}
		return v.AdditionalInfo
	}).(ErrorAdditionalInfoResponseArrayOutput)
}

// The error code.
func (o ErrorDetailResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// The error details.
func (o ErrorDetailResponsePtrOutput) Details() ErrorDetailResponseArrayOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) []ErrorDetailResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(ErrorDetailResponseArrayOutput)
}

// The error message.
func (o ErrorDetailResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// The error target.
func (o ErrorDetailResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(pulumi.StringPtrOutput)
}

type ErrorDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseArrayOutput) ToErrorDetailResponseArrayOutput() ErrorDetailResponseArrayOutput {
	return o
}

func (o ErrorDetailResponseArrayOutput) ToErrorDetailResponseArrayOutputWithContext(ctx context.Context) ErrorDetailResponseArrayOutput {
	return o
}

func (o ErrorDetailResponseArrayOutput) Index(i pulumi.IntInput) ErrorDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorDetailResponse {
		return vs[0].([]ErrorDetailResponse)[vs[1].(int)]
	}).(ErrorDetailResponseOutput)
}

// Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
type ErrorResponseResponse struct {
	// The error object.
	Error *ErrorDetailResponse `pulumi:"error"`
}

// ErrorResponseResponseInput is an input type that accepts ErrorResponseResponseArgs and ErrorResponseResponseOutput values.
// You can construct a concrete instance of `ErrorResponseResponseInput` via:
//
//          ErrorResponseResponseArgs{...}
type ErrorResponseResponseInput interface {
	pulumi.Input

	ToErrorResponseResponseOutput() ErrorResponseResponseOutput
	ToErrorResponseResponseOutputWithContext(context.Context) ErrorResponseResponseOutput
}

// Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
type ErrorResponseResponseArgs struct {
	// The error object.
	Error ErrorDetailResponsePtrInput `pulumi:"error"`
}

func (ErrorResponseResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponseResponse)(nil)).Elem()
}

func (i ErrorResponseResponseArgs) ToErrorResponseResponseOutput() ErrorResponseResponseOutput {
	return i.ToErrorResponseResponseOutputWithContext(context.Background())
}

func (i ErrorResponseResponseArgs) ToErrorResponseResponseOutputWithContext(ctx context.Context) ErrorResponseResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorResponseResponseOutput)
}

// ErrorResponseResponseArrayInput is an input type that accepts ErrorResponseResponseArray and ErrorResponseResponseArrayOutput values.
// You can construct a concrete instance of `ErrorResponseResponseArrayInput` via:
//
//          ErrorResponseResponseArray{ ErrorResponseResponseArgs{...} }
type ErrorResponseResponseArrayInput interface {
	pulumi.Input

	ToErrorResponseResponseArrayOutput() ErrorResponseResponseArrayOutput
	ToErrorResponseResponseArrayOutputWithContext(context.Context) ErrorResponseResponseArrayOutput
}

type ErrorResponseResponseArray []ErrorResponseResponseInput

func (ErrorResponseResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorResponseResponse)(nil)).Elem()
}

func (i ErrorResponseResponseArray) ToErrorResponseResponseArrayOutput() ErrorResponseResponseArrayOutput {
	return i.ToErrorResponseResponseArrayOutputWithContext(context.Background())
}

func (i ErrorResponseResponseArray) ToErrorResponseResponseArrayOutputWithContext(ctx context.Context) ErrorResponseResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorResponseResponseArrayOutput)
}

// Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
type ErrorResponseResponseOutput struct{ *pulumi.OutputState }

func (ErrorResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponseResponse)(nil)).Elem()
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponseOutput() ErrorResponseResponseOutput {
	return o
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponseOutputWithContext(ctx context.Context) ErrorResponseResponseOutput {
	return o
}

// The error object.
func (o ErrorResponseResponseOutput) Error() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v ErrorResponseResponse) *ErrorDetailResponse { return v.Error }).(ErrorDetailResponsePtrOutput)
}

type ErrorResponseResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorResponseResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorResponseResponse)(nil)).Elem()
}

func (o ErrorResponseResponseArrayOutput) ToErrorResponseResponseArrayOutput() ErrorResponseResponseArrayOutput {
	return o
}

func (o ErrorResponseResponseArrayOutput) ToErrorResponseResponseArrayOutputWithContext(ctx context.Context) ErrorResponseResponseArrayOutput {
	return o
}

func (o ErrorResponseResponseArrayOutput) Index(i pulumi.IntInput) ErrorResponseResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorResponseResponse {
		return vs[0].([]ErrorResponseResponse)[vs[1].(int)]
	}).(ErrorResponseResponseOutput)
}

// A HDInsight compute.
type HDInsight struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'HDInsight'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// HDInsight compute properties
	Properties *HDInsightProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// HDInsightInput is an input type that accepts HDInsightArgs and HDInsightOutput values.
// You can construct a concrete instance of `HDInsightInput` via:
//
//          HDInsightArgs{...}
type HDInsightInput interface {
	pulumi.Input

	ToHDInsightOutput() HDInsightOutput
	ToHDInsightOutputWithContext(context.Context) HDInsightOutput
}

// A HDInsight compute.
type HDInsightArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'HDInsight'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// HDInsight compute properties
	Properties HDInsightPropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (HDInsightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsight)(nil)).Elem()
}

func (i HDInsightArgs) ToHDInsightOutput() HDInsightOutput {
	return i.ToHDInsightOutputWithContext(context.Background())
}

func (i HDInsightArgs) ToHDInsightOutputWithContext(ctx context.Context) HDInsightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightOutput)
}

// A HDInsight compute.
type HDInsightOutput struct{ *pulumi.OutputState }

func (HDInsightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsight)(nil)).Elem()
}

func (o HDInsightOutput) ToHDInsightOutput() HDInsightOutput {
	return o
}

func (o HDInsightOutput) ToHDInsightOutputWithContext(ctx context.Context) HDInsightOutput {
	return o
}

// Location for the underlying compute
func (o HDInsightOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsight) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'HDInsight'.
func (o HDInsightOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsight) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o HDInsightOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsight) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o HDInsightOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HDInsight) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// HDInsight compute properties
func (o HDInsightOutput) Properties() HDInsightPropertiesPtrOutput {
	return o.ApplyT(func(v HDInsight) *HDInsightProperties { return v.Properties }).(HDInsightPropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o HDInsightOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsight) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// HDInsight compute properties
type HDInsightProperties struct {
	// Public IP address of the master node of the cluster.
	Address *string `pulumi:"address"`
	// Admin credentials for master node of the cluster
	AdministratorAccount *VirtualMachineSshCredentials `pulumi:"administratorAccount"`
	// Port open for ssh connections on the master node of the cluster.
	SshPort *int `pulumi:"sshPort"`
}

// HDInsightPropertiesInput is an input type that accepts HDInsightPropertiesArgs and HDInsightPropertiesOutput values.
// You can construct a concrete instance of `HDInsightPropertiesInput` via:
//
//          HDInsightPropertiesArgs{...}
type HDInsightPropertiesInput interface {
	pulumi.Input

	ToHDInsightPropertiesOutput() HDInsightPropertiesOutput
	ToHDInsightPropertiesOutputWithContext(context.Context) HDInsightPropertiesOutput
}

// HDInsight compute properties
type HDInsightPropertiesArgs struct {
	// Public IP address of the master node of the cluster.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Admin credentials for master node of the cluster
	AdministratorAccount VirtualMachineSshCredentialsPtrInput `pulumi:"administratorAccount"`
	// Port open for ssh connections on the master node of the cluster.
	SshPort pulumi.IntPtrInput `pulumi:"sshPort"`
}

func (HDInsightPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightProperties)(nil)).Elem()
}

func (i HDInsightPropertiesArgs) ToHDInsightPropertiesOutput() HDInsightPropertiesOutput {
	return i.ToHDInsightPropertiesOutputWithContext(context.Background())
}

func (i HDInsightPropertiesArgs) ToHDInsightPropertiesOutputWithContext(ctx context.Context) HDInsightPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightPropertiesOutput)
}

func (i HDInsightPropertiesArgs) ToHDInsightPropertiesPtrOutput() HDInsightPropertiesPtrOutput {
	return i.ToHDInsightPropertiesPtrOutputWithContext(context.Background())
}

func (i HDInsightPropertiesArgs) ToHDInsightPropertiesPtrOutputWithContext(ctx context.Context) HDInsightPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightPropertiesOutput).ToHDInsightPropertiesPtrOutputWithContext(ctx)
}

// HDInsightPropertiesPtrInput is an input type that accepts HDInsightPropertiesArgs, HDInsightPropertiesPtr and HDInsightPropertiesPtrOutput values.
// You can construct a concrete instance of `HDInsightPropertiesPtrInput` via:
//
//          HDInsightPropertiesArgs{...}
//
//  or:
//
//          nil
type HDInsightPropertiesPtrInput interface {
	pulumi.Input

	ToHDInsightPropertiesPtrOutput() HDInsightPropertiesPtrOutput
	ToHDInsightPropertiesPtrOutputWithContext(context.Context) HDInsightPropertiesPtrOutput
}

type hdinsightPropertiesPtrType HDInsightPropertiesArgs

func HDInsightPropertiesPtr(v *HDInsightPropertiesArgs) HDInsightPropertiesPtrInput {
	return (*hdinsightPropertiesPtrType)(v)
}

func (*hdinsightPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HDInsightProperties)(nil)).Elem()
}

func (i *hdinsightPropertiesPtrType) ToHDInsightPropertiesPtrOutput() HDInsightPropertiesPtrOutput {
	return i.ToHDInsightPropertiesPtrOutputWithContext(context.Background())
}

func (i *hdinsightPropertiesPtrType) ToHDInsightPropertiesPtrOutputWithContext(ctx context.Context) HDInsightPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightPropertiesPtrOutput)
}

// HDInsight compute properties
type HDInsightPropertiesOutput struct{ *pulumi.OutputState }

func (HDInsightPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightProperties)(nil)).Elem()
}

func (o HDInsightPropertiesOutput) ToHDInsightPropertiesOutput() HDInsightPropertiesOutput {
	return o
}

func (o HDInsightPropertiesOutput) ToHDInsightPropertiesOutputWithContext(ctx context.Context) HDInsightPropertiesOutput {
	return o
}

func (o HDInsightPropertiesOutput) ToHDInsightPropertiesPtrOutput() HDInsightPropertiesPtrOutput {
	return o.ToHDInsightPropertiesPtrOutputWithContext(context.Background())
}

func (o HDInsightPropertiesOutput) ToHDInsightPropertiesPtrOutputWithContext(ctx context.Context) HDInsightPropertiesPtrOutput {
	return o.ApplyT(func(v HDInsightProperties) *HDInsightProperties {
		return &v
	}).(HDInsightPropertiesPtrOutput)
}

// Public IP address of the master node of the cluster.
func (o HDInsightPropertiesOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightProperties) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Admin credentials for master node of the cluster
func (o HDInsightPropertiesOutput) AdministratorAccount() VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyT(func(v HDInsightProperties) *VirtualMachineSshCredentials { return v.AdministratorAccount }).(VirtualMachineSshCredentialsPtrOutput)
}

// Port open for ssh connections on the master node of the cluster.
func (o HDInsightPropertiesOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HDInsightProperties) *int { return v.SshPort }).(pulumi.IntPtrOutput)
}

type HDInsightPropertiesPtrOutput struct{ *pulumi.OutputState }

func (HDInsightPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HDInsightProperties)(nil)).Elem()
}

func (o HDInsightPropertiesPtrOutput) ToHDInsightPropertiesPtrOutput() HDInsightPropertiesPtrOutput {
	return o
}

func (o HDInsightPropertiesPtrOutput) ToHDInsightPropertiesPtrOutputWithContext(ctx context.Context) HDInsightPropertiesPtrOutput {
	return o
}

func (o HDInsightPropertiesPtrOutput) Elem() HDInsightPropertiesOutput {
	return o.ApplyT(func(v *HDInsightProperties) HDInsightProperties { return *v }).(HDInsightPropertiesOutput)
}

// Public IP address of the master node of the cluster.
func (o HDInsightPropertiesPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HDInsightProperties) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for master node of the cluster
func (o HDInsightPropertiesPtrOutput) AdministratorAccount() VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyT(func(v *HDInsightProperties) *VirtualMachineSshCredentials {
		if v == nil {
			return nil
		}
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsPtrOutput)
}

// Port open for ssh connections on the master node of the cluster.
func (o HDInsightPropertiesPtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HDInsightProperties) *int {
		if v == nil {
			return nil
		}
		return v.SshPort
	}).(pulumi.IntPtrOutput)
}

// HDInsight compute properties
type HDInsightPropertiesResponse struct {
	// Public IP address of the master node of the cluster.
	Address *string `pulumi:"address"`
	// Admin credentials for master node of the cluster
	AdministratorAccount *VirtualMachineSshCredentialsResponse `pulumi:"administratorAccount"`
	// Port open for ssh connections on the master node of the cluster.
	SshPort *int `pulumi:"sshPort"`
}

// HDInsightPropertiesResponseInput is an input type that accepts HDInsightPropertiesResponseArgs and HDInsightPropertiesResponseOutput values.
// You can construct a concrete instance of `HDInsightPropertiesResponseInput` via:
//
//          HDInsightPropertiesResponseArgs{...}
type HDInsightPropertiesResponseInput interface {
	pulumi.Input

	ToHDInsightPropertiesResponseOutput() HDInsightPropertiesResponseOutput
	ToHDInsightPropertiesResponseOutputWithContext(context.Context) HDInsightPropertiesResponseOutput
}

// HDInsight compute properties
type HDInsightPropertiesResponseArgs struct {
	// Public IP address of the master node of the cluster.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Admin credentials for master node of the cluster
	AdministratorAccount VirtualMachineSshCredentialsResponsePtrInput `pulumi:"administratorAccount"`
	// Port open for ssh connections on the master node of the cluster.
	SshPort pulumi.IntPtrInput `pulumi:"sshPort"`
}

func (HDInsightPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightPropertiesResponse)(nil)).Elem()
}

func (i HDInsightPropertiesResponseArgs) ToHDInsightPropertiesResponseOutput() HDInsightPropertiesResponseOutput {
	return i.ToHDInsightPropertiesResponseOutputWithContext(context.Background())
}

func (i HDInsightPropertiesResponseArgs) ToHDInsightPropertiesResponseOutputWithContext(ctx context.Context) HDInsightPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightPropertiesResponseOutput)
}

func (i HDInsightPropertiesResponseArgs) ToHDInsightPropertiesResponsePtrOutput() HDInsightPropertiesResponsePtrOutput {
	return i.ToHDInsightPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i HDInsightPropertiesResponseArgs) ToHDInsightPropertiesResponsePtrOutputWithContext(ctx context.Context) HDInsightPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightPropertiesResponseOutput).ToHDInsightPropertiesResponsePtrOutputWithContext(ctx)
}

// HDInsightPropertiesResponsePtrInput is an input type that accepts HDInsightPropertiesResponseArgs, HDInsightPropertiesResponsePtr and HDInsightPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `HDInsightPropertiesResponsePtrInput` via:
//
//          HDInsightPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type HDInsightPropertiesResponsePtrInput interface {
	pulumi.Input

	ToHDInsightPropertiesResponsePtrOutput() HDInsightPropertiesResponsePtrOutput
	ToHDInsightPropertiesResponsePtrOutputWithContext(context.Context) HDInsightPropertiesResponsePtrOutput
}

type hdinsightPropertiesResponsePtrType HDInsightPropertiesResponseArgs

func HDInsightPropertiesResponsePtr(v *HDInsightPropertiesResponseArgs) HDInsightPropertiesResponsePtrInput {
	return (*hdinsightPropertiesResponsePtrType)(v)
}

func (*hdinsightPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HDInsightPropertiesResponse)(nil)).Elem()
}

func (i *hdinsightPropertiesResponsePtrType) ToHDInsightPropertiesResponsePtrOutput() HDInsightPropertiesResponsePtrOutput {
	return i.ToHDInsightPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *hdinsightPropertiesResponsePtrType) ToHDInsightPropertiesResponsePtrOutputWithContext(ctx context.Context) HDInsightPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightPropertiesResponsePtrOutput)
}

// HDInsight compute properties
type HDInsightPropertiesResponseOutput struct{ *pulumi.OutputState }

func (HDInsightPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightPropertiesResponse)(nil)).Elem()
}

func (o HDInsightPropertiesResponseOutput) ToHDInsightPropertiesResponseOutput() HDInsightPropertiesResponseOutput {
	return o
}

func (o HDInsightPropertiesResponseOutput) ToHDInsightPropertiesResponseOutputWithContext(ctx context.Context) HDInsightPropertiesResponseOutput {
	return o
}

func (o HDInsightPropertiesResponseOutput) ToHDInsightPropertiesResponsePtrOutput() HDInsightPropertiesResponsePtrOutput {
	return o.ToHDInsightPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o HDInsightPropertiesResponseOutput) ToHDInsightPropertiesResponsePtrOutputWithContext(ctx context.Context) HDInsightPropertiesResponsePtrOutput {
	return o.ApplyT(func(v HDInsightPropertiesResponse) *HDInsightPropertiesResponse {
		return &v
	}).(HDInsightPropertiesResponsePtrOutput)
}

// Public IP address of the master node of the cluster.
func (o HDInsightPropertiesResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightPropertiesResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Admin credentials for master node of the cluster
func (o HDInsightPropertiesResponseOutput) AdministratorAccount() VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ApplyT(func(v HDInsightPropertiesResponse) *VirtualMachineSshCredentialsResponse {
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Port open for ssh connections on the master node of the cluster.
func (o HDInsightPropertiesResponseOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HDInsightPropertiesResponse) *int { return v.SshPort }).(pulumi.IntPtrOutput)
}

type HDInsightPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (HDInsightPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HDInsightPropertiesResponse)(nil)).Elem()
}

func (o HDInsightPropertiesResponsePtrOutput) ToHDInsightPropertiesResponsePtrOutput() HDInsightPropertiesResponsePtrOutput {
	return o
}

func (o HDInsightPropertiesResponsePtrOutput) ToHDInsightPropertiesResponsePtrOutputWithContext(ctx context.Context) HDInsightPropertiesResponsePtrOutput {
	return o
}

func (o HDInsightPropertiesResponsePtrOutput) Elem() HDInsightPropertiesResponseOutput {
	return o.ApplyT(func(v *HDInsightPropertiesResponse) HDInsightPropertiesResponse { return *v }).(HDInsightPropertiesResponseOutput)
}

// Public IP address of the master node of the cluster.
func (o HDInsightPropertiesResponsePtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HDInsightPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for master node of the cluster
func (o HDInsightPropertiesResponsePtrOutput) AdministratorAccount() VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ApplyT(func(v *HDInsightPropertiesResponse) *VirtualMachineSshCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Port open for ssh connections on the master node of the cluster.
func (o HDInsightPropertiesResponsePtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HDInsightPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.SshPort
	}).(pulumi.IntPtrOutput)
}

// A HDInsight compute.
type HDInsightResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'HDInsight'.
	ComputeType string `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// HDInsight compute properties
	Properties *HDInsightPropertiesResponse `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []ErrorResponseResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// HDInsightResponseInput is an input type that accepts HDInsightResponseArgs and HDInsightResponseOutput values.
// You can construct a concrete instance of `HDInsightResponseInput` via:
//
//          HDInsightResponseArgs{...}
type HDInsightResponseInput interface {
	pulumi.Input

	ToHDInsightResponseOutput() HDInsightResponseOutput
	ToHDInsightResponseOutputWithContext(context.Context) HDInsightResponseOutput
}

// A HDInsight compute.
type HDInsightResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'HDInsight'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn pulumi.StringInput `pulumi:"modifiedOn"`
	// HDInsight compute properties
	Properties HDInsightPropertiesResponsePtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors ErrorResponseResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (HDInsightResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightResponse)(nil)).Elem()
}

func (i HDInsightResponseArgs) ToHDInsightResponseOutput() HDInsightResponseOutput {
	return i.ToHDInsightResponseOutputWithContext(context.Background())
}

func (i HDInsightResponseArgs) ToHDInsightResponseOutputWithContext(ctx context.Context) HDInsightResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightResponseOutput)
}

// A HDInsight compute.
type HDInsightResponseOutput struct{ *pulumi.OutputState }

func (HDInsightResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightResponse)(nil)).Elem()
}

func (o HDInsightResponseOutput) ToHDInsightResponseOutput() HDInsightResponseOutput {
	return o
}

func (o HDInsightResponseOutput) ToHDInsightResponseOutputWithContext(ctx context.Context) HDInsightResponseOutput {
	return o
}

// Location for the underlying compute
func (o HDInsightResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'HDInsight'.
func (o HDInsightResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The time at which the compute was created.
func (o HDInsightResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o HDInsightResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o HDInsightResponseOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HDInsightResponse) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o HDInsightResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v HDInsightResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The time at which the compute was last modified.
func (o HDInsightResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// HDInsight compute properties
func (o HDInsightResponseOutput) Properties() HDInsightPropertiesResponsePtrOutput {
	return o.ApplyT(func(v HDInsightResponse) *HDInsightPropertiesResponse { return v.Properties }).(HDInsightPropertiesResponsePtrOutput)
}

// Errors during provisioning
func (o HDInsightResponseOutput) ProvisioningErrors() ErrorResponseResponseArrayOutput {
	return o.ApplyT(func(v HDInsightResponse) []ErrorResponseResponse { return v.ProvisioningErrors }).(ErrorResponseResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o HDInsightResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o HDInsightResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type Identity struct {
	// The identity type.
	Type *string `pulumi:"type"`
	// The user assigned identities associated with the resource.
	UserAssignedIdentities map[string]interface{} `pulumi:"userAssignedIdentities"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//          IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Identity for the resource.
type IdentityArgs struct {
	// The identity type.
	Type *ResourceIdentityType `pulumi:"type"`
	// The user assigned identities associated with the resource.
	UserAssignedIdentities pulumi.MapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//          IdentityArgs{...}
//
//  or:
//
//          nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Identity for the resource.
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyT(func(v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// The identity type.
func (o IdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Identity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The user assigned identities associated with the resource.
func (o IdentityOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v Identity) map[string]interface{} { return v.UserAssignedIdentities }).(pulumi.MapOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity { return *v }).(IdentityOutput)
}

// The identity type.
func (o IdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The user assigned identities associated with the resource.
func (o IdentityPtrOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v *Identity) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.MapOutput)
}

// Identity that will be used to access key vault for encryption at rest
type IdentityForCmk struct {
	// The ArmId of the user assigned identity that will be used to access the customer managed key vault
	UserAssignedIdentity *string `pulumi:"userAssignedIdentity"`
}

// IdentityForCmkInput is an input type that accepts IdentityForCmkArgs and IdentityForCmkOutput values.
// You can construct a concrete instance of `IdentityForCmkInput` via:
//
//          IdentityForCmkArgs{...}
type IdentityForCmkInput interface {
	pulumi.Input

	ToIdentityForCmkOutput() IdentityForCmkOutput
	ToIdentityForCmkOutputWithContext(context.Context) IdentityForCmkOutput
}

// Identity that will be used to access key vault for encryption at rest
type IdentityForCmkArgs struct {
	// The ArmId of the user assigned identity that will be used to access the customer managed key vault
	UserAssignedIdentity pulumi.StringPtrInput `pulumi:"userAssignedIdentity"`
}

func (IdentityForCmkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityForCmk)(nil)).Elem()
}

func (i IdentityForCmkArgs) ToIdentityForCmkOutput() IdentityForCmkOutput {
	return i.ToIdentityForCmkOutputWithContext(context.Background())
}

func (i IdentityForCmkArgs) ToIdentityForCmkOutputWithContext(ctx context.Context) IdentityForCmkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityForCmkOutput)
}

func (i IdentityForCmkArgs) ToIdentityForCmkPtrOutput() IdentityForCmkPtrOutput {
	return i.ToIdentityForCmkPtrOutputWithContext(context.Background())
}

func (i IdentityForCmkArgs) ToIdentityForCmkPtrOutputWithContext(ctx context.Context) IdentityForCmkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityForCmkOutput).ToIdentityForCmkPtrOutputWithContext(ctx)
}

// IdentityForCmkPtrInput is an input type that accepts IdentityForCmkArgs, IdentityForCmkPtr and IdentityForCmkPtrOutput values.
// You can construct a concrete instance of `IdentityForCmkPtrInput` via:
//
//          IdentityForCmkArgs{...}
//
//  or:
//
//          nil
type IdentityForCmkPtrInput interface {
	pulumi.Input

	ToIdentityForCmkPtrOutput() IdentityForCmkPtrOutput
	ToIdentityForCmkPtrOutputWithContext(context.Context) IdentityForCmkPtrOutput
}

type identityForCmkPtrType IdentityForCmkArgs

func IdentityForCmkPtr(v *IdentityForCmkArgs) IdentityForCmkPtrInput {
	return (*identityForCmkPtrType)(v)
}

func (*identityForCmkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityForCmk)(nil)).Elem()
}

func (i *identityForCmkPtrType) ToIdentityForCmkPtrOutput() IdentityForCmkPtrOutput {
	return i.ToIdentityForCmkPtrOutputWithContext(context.Background())
}

func (i *identityForCmkPtrType) ToIdentityForCmkPtrOutputWithContext(ctx context.Context) IdentityForCmkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityForCmkPtrOutput)
}

// Identity that will be used to access key vault for encryption at rest
type IdentityForCmkOutput struct{ *pulumi.OutputState }

func (IdentityForCmkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityForCmk)(nil)).Elem()
}

func (o IdentityForCmkOutput) ToIdentityForCmkOutput() IdentityForCmkOutput {
	return o
}

func (o IdentityForCmkOutput) ToIdentityForCmkOutputWithContext(ctx context.Context) IdentityForCmkOutput {
	return o
}

func (o IdentityForCmkOutput) ToIdentityForCmkPtrOutput() IdentityForCmkPtrOutput {
	return o.ToIdentityForCmkPtrOutputWithContext(context.Background())
}

func (o IdentityForCmkOutput) ToIdentityForCmkPtrOutputWithContext(ctx context.Context) IdentityForCmkPtrOutput {
	return o.ApplyT(func(v IdentityForCmk) *IdentityForCmk {
		return &v
	}).(IdentityForCmkPtrOutput)
}

// The ArmId of the user assigned identity that will be used to access the customer managed key vault
func (o IdentityForCmkOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityForCmk) *string { return v.UserAssignedIdentity }).(pulumi.StringPtrOutput)
}

type IdentityForCmkPtrOutput struct{ *pulumi.OutputState }

func (IdentityForCmkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityForCmk)(nil)).Elem()
}

func (o IdentityForCmkPtrOutput) ToIdentityForCmkPtrOutput() IdentityForCmkPtrOutput {
	return o
}

func (o IdentityForCmkPtrOutput) ToIdentityForCmkPtrOutputWithContext(ctx context.Context) IdentityForCmkPtrOutput {
	return o
}

func (o IdentityForCmkPtrOutput) Elem() IdentityForCmkOutput {
	return o.ApplyT(func(v *IdentityForCmk) IdentityForCmk { return *v }).(IdentityForCmkOutput)
}

// The ArmId of the user assigned identity that will be used to access the customer managed key vault
func (o IdentityForCmkPtrOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityForCmk) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

// Identity that will be used to access key vault for encryption at rest
type IdentityForCmkResponse struct {
	// The ArmId of the user assigned identity that will be used to access the customer managed key vault
	UserAssignedIdentity *string `pulumi:"userAssignedIdentity"`
}

// IdentityForCmkResponseInput is an input type that accepts IdentityForCmkResponseArgs and IdentityForCmkResponseOutput values.
// You can construct a concrete instance of `IdentityForCmkResponseInput` via:
//
//          IdentityForCmkResponseArgs{...}
type IdentityForCmkResponseInput interface {
	pulumi.Input

	ToIdentityForCmkResponseOutput() IdentityForCmkResponseOutput
	ToIdentityForCmkResponseOutputWithContext(context.Context) IdentityForCmkResponseOutput
}

// Identity that will be used to access key vault for encryption at rest
type IdentityForCmkResponseArgs struct {
	// The ArmId of the user assigned identity that will be used to access the customer managed key vault
	UserAssignedIdentity pulumi.StringPtrInput `pulumi:"userAssignedIdentity"`
}

func (IdentityForCmkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityForCmkResponse)(nil)).Elem()
}

func (i IdentityForCmkResponseArgs) ToIdentityForCmkResponseOutput() IdentityForCmkResponseOutput {
	return i.ToIdentityForCmkResponseOutputWithContext(context.Background())
}

func (i IdentityForCmkResponseArgs) ToIdentityForCmkResponseOutputWithContext(ctx context.Context) IdentityForCmkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityForCmkResponseOutput)
}

func (i IdentityForCmkResponseArgs) ToIdentityForCmkResponsePtrOutput() IdentityForCmkResponsePtrOutput {
	return i.ToIdentityForCmkResponsePtrOutputWithContext(context.Background())
}

func (i IdentityForCmkResponseArgs) ToIdentityForCmkResponsePtrOutputWithContext(ctx context.Context) IdentityForCmkResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityForCmkResponseOutput).ToIdentityForCmkResponsePtrOutputWithContext(ctx)
}

// IdentityForCmkResponsePtrInput is an input type that accepts IdentityForCmkResponseArgs, IdentityForCmkResponsePtr and IdentityForCmkResponsePtrOutput values.
// You can construct a concrete instance of `IdentityForCmkResponsePtrInput` via:
//
//          IdentityForCmkResponseArgs{...}
//
//  or:
//
//          nil
type IdentityForCmkResponsePtrInput interface {
	pulumi.Input

	ToIdentityForCmkResponsePtrOutput() IdentityForCmkResponsePtrOutput
	ToIdentityForCmkResponsePtrOutputWithContext(context.Context) IdentityForCmkResponsePtrOutput
}

type identityForCmkResponsePtrType IdentityForCmkResponseArgs

func IdentityForCmkResponsePtr(v *IdentityForCmkResponseArgs) IdentityForCmkResponsePtrInput {
	return (*identityForCmkResponsePtrType)(v)
}

func (*identityForCmkResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityForCmkResponse)(nil)).Elem()
}

func (i *identityForCmkResponsePtrType) ToIdentityForCmkResponsePtrOutput() IdentityForCmkResponsePtrOutput {
	return i.ToIdentityForCmkResponsePtrOutputWithContext(context.Background())
}

func (i *identityForCmkResponsePtrType) ToIdentityForCmkResponsePtrOutputWithContext(ctx context.Context) IdentityForCmkResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityForCmkResponsePtrOutput)
}

// Identity that will be used to access key vault for encryption at rest
type IdentityForCmkResponseOutput struct{ *pulumi.OutputState }

func (IdentityForCmkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityForCmkResponse)(nil)).Elem()
}

func (o IdentityForCmkResponseOutput) ToIdentityForCmkResponseOutput() IdentityForCmkResponseOutput {
	return o
}

func (o IdentityForCmkResponseOutput) ToIdentityForCmkResponseOutputWithContext(ctx context.Context) IdentityForCmkResponseOutput {
	return o
}

func (o IdentityForCmkResponseOutput) ToIdentityForCmkResponsePtrOutput() IdentityForCmkResponsePtrOutput {
	return o.ToIdentityForCmkResponsePtrOutputWithContext(context.Background())
}

func (o IdentityForCmkResponseOutput) ToIdentityForCmkResponsePtrOutputWithContext(ctx context.Context) IdentityForCmkResponsePtrOutput {
	return o.ApplyT(func(v IdentityForCmkResponse) *IdentityForCmkResponse {
		return &v
	}).(IdentityForCmkResponsePtrOutput)
}

// The ArmId of the user assigned identity that will be used to access the customer managed key vault
func (o IdentityForCmkResponseOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityForCmkResponse) *string { return v.UserAssignedIdentity }).(pulumi.StringPtrOutput)
}

type IdentityForCmkResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityForCmkResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityForCmkResponse)(nil)).Elem()
}

func (o IdentityForCmkResponsePtrOutput) ToIdentityForCmkResponsePtrOutput() IdentityForCmkResponsePtrOutput {
	return o
}

func (o IdentityForCmkResponsePtrOutput) ToIdentityForCmkResponsePtrOutputWithContext(ctx context.Context) IdentityForCmkResponsePtrOutput {
	return o
}

func (o IdentityForCmkResponsePtrOutput) Elem() IdentityForCmkResponseOutput {
	return o.ApplyT(func(v *IdentityForCmkResponse) IdentityForCmkResponse { return *v }).(IdentityForCmkResponseOutput)
}

// The ArmId of the user assigned identity that will be used to access the customer managed key vault
func (o IdentityForCmkResponsePtrOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityForCmkResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type IdentityResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
	// The user assigned identities associated with the resource.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// IdentityResponseInput is an input type that accepts IdentityResponseArgs and IdentityResponseOutput values.
// You can construct a concrete instance of `IdentityResponseInput` via:
//
//          IdentityResponseArgs{...}
type IdentityResponseInput interface {
	pulumi.Input

	ToIdentityResponseOutput() IdentityResponseOutput
	ToIdentityResponseOutputWithContext(context.Context) IdentityResponseOutput
}

// Identity for the resource.
type IdentityResponseArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The user assigned identities associated with the resource.
	UserAssignedIdentities UserAssignedIdentityResponseMapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (i IdentityResponseArgs) ToIdentityResponseOutput() IdentityResponseOutput {
	return i.ToIdentityResponseOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput)
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput).ToIdentityResponsePtrOutputWithContext(ctx)
}

// IdentityResponsePtrInput is an input type that accepts IdentityResponseArgs, IdentityResponsePtr and IdentityResponsePtrOutput values.
// You can construct a concrete instance of `IdentityResponsePtrInput` via:
//
//          IdentityResponseArgs{...}
//
//  or:
//
//          nil
type IdentityResponsePtrInput interface {
	pulumi.Input

	ToIdentityResponsePtrOutput() IdentityResponsePtrOutput
	ToIdentityResponsePtrOutputWithContext(context.Context) IdentityResponsePtrOutput
}

type identityResponsePtrType IdentityResponseArgs

func IdentityResponsePtr(v *IdentityResponseArgs) IdentityResponsePtrInput {
	return (*identityResponsePtrType)(v)
}

func (*identityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponsePtrOutput)
}

// Identity for the resource.
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o.ApplyT(func(v IdentityResponse) *IdentityResponse {
		return &v
	}).(IdentityResponsePtrOutput)
}

// The principal ID of resource identity.
func (o IdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type.
func (o IdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The user assigned identities associated with the resource.
func (o IdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v IdentityResponse) map[string]UserAssignedIdentityResponse { return v.UserAssignedIdentities }).(UserAssignedIdentityResponseMapOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse { return *v }).(IdentityResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The user assigned identities associated with the resource.
func (o IdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *IdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Instance type schema.
type InstanceTypeSchema struct {
	// Node Selector
	NodeSelector map[string]string `pulumi:"nodeSelector"`
	// Resource requests/limits for this instance type
	Resources *InstanceTypeSchemaResources `pulumi:"resources"`
}

// InstanceTypeSchemaInput is an input type that accepts InstanceTypeSchemaArgs and InstanceTypeSchemaOutput values.
// You can construct a concrete instance of `InstanceTypeSchemaInput` via:
//
//          InstanceTypeSchemaArgs{...}
type InstanceTypeSchemaInput interface {
	pulumi.Input

	ToInstanceTypeSchemaOutput() InstanceTypeSchemaOutput
	ToInstanceTypeSchemaOutputWithContext(context.Context) InstanceTypeSchemaOutput
}

// Instance type schema.
type InstanceTypeSchemaArgs struct {
	// Node Selector
	NodeSelector pulumi.StringMapInput `pulumi:"nodeSelector"`
	// Resource requests/limits for this instance type
	Resources InstanceTypeSchemaResourcesPtrInput `pulumi:"resources"`
}

func (InstanceTypeSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTypeSchema)(nil)).Elem()
}

func (i InstanceTypeSchemaArgs) ToInstanceTypeSchemaOutput() InstanceTypeSchemaOutput {
	return i.ToInstanceTypeSchemaOutputWithContext(context.Background())
}

func (i InstanceTypeSchemaArgs) ToInstanceTypeSchemaOutputWithContext(ctx context.Context) InstanceTypeSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTypeSchemaOutput)
}

// InstanceTypeSchemaMapInput is an input type that accepts InstanceTypeSchemaMap and InstanceTypeSchemaMapOutput values.
// You can construct a concrete instance of `InstanceTypeSchemaMapInput` via:
//
//          InstanceTypeSchemaMap{ "key": InstanceTypeSchemaArgs{...} }
type InstanceTypeSchemaMapInput interface {
	pulumi.Input

	ToInstanceTypeSchemaMapOutput() InstanceTypeSchemaMapOutput
	ToInstanceTypeSchemaMapOutputWithContext(context.Context) InstanceTypeSchemaMapOutput
}

type InstanceTypeSchemaMap map[string]InstanceTypeSchemaInput

func (InstanceTypeSchemaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]InstanceTypeSchema)(nil)).Elem()
}

func (i InstanceTypeSchemaMap) ToInstanceTypeSchemaMapOutput() InstanceTypeSchemaMapOutput {
	return i.ToInstanceTypeSchemaMapOutputWithContext(context.Background())
}

func (i InstanceTypeSchemaMap) ToInstanceTypeSchemaMapOutputWithContext(ctx context.Context) InstanceTypeSchemaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTypeSchemaMapOutput)
}

// Instance type schema.
type InstanceTypeSchemaOutput struct{ *pulumi.OutputState }

func (InstanceTypeSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTypeSchema)(nil)).Elem()
}

func (o InstanceTypeSchemaOutput) ToInstanceTypeSchemaOutput() InstanceTypeSchemaOutput {
	return o
}

func (o InstanceTypeSchemaOutput) ToInstanceTypeSchemaOutputWithContext(ctx context.Context) InstanceTypeSchemaOutput {
	return o
}

// Node Selector
func (o InstanceTypeSchemaOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func(v InstanceTypeSchema) map[string]string { return v.NodeSelector }).(pulumi.StringMapOutput)
}

// Resource requests/limits for this instance type
func (o InstanceTypeSchemaOutput) Resources() InstanceTypeSchemaResourcesPtrOutput {
	return o.ApplyT(func(v InstanceTypeSchema) *InstanceTypeSchemaResources { return v.Resources }).(InstanceTypeSchemaResourcesPtrOutput)
}

type InstanceTypeSchemaMapOutput struct{ *pulumi.OutputState }

func (InstanceTypeSchemaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]InstanceTypeSchema)(nil)).Elem()
}

func (o InstanceTypeSchemaMapOutput) ToInstanceTypeSchemaMapOutput() InstanceTypeSchemaMapOutput {
	return o
}

func (o InstanceTypeSchemaMapOutput) ToInstanceTypeSchemaMapOutputWithContext(ctx context.Context) InstanceTypeSchemaMapOutput {
	return o
}

func (o InstanceTypeSchemaMapOutput) MapIndex(k pulumi.StringInput) InstanceTypeSchemaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) InstanceTypeSchema {
		return vs[0].(map[string]InstanceTypeSchema)[vs[1].(string)]
	}).(InstanceTypeSchemaOutput)
}

// Resource requests/limits for this instance type
type InstanceTypeSchemaResources struct {
	// Resource limits for this instance type
	Limits map[string]string `pulumi:"limits"`
	// Resource requests for this instance type
	Requests map[string]string `pulumi:"requests"`
}

// InstanceTypeSchemaResourcesInput is an input type that accepts InstanceTypeSchemaResourcesArgs and InstanceTypeSchemaResourcesOutput values.
// You can construct a concrete instance of `InstanceTypeSchemaResourcesInput` via:
//
//          InstanceTypeSchemaResourcesArgs{...}
type InstanceTypeSchemaResourcesInput interface {
	pulumi.Input

	ToInstanceTypeSchemaResourcesOutput() InstanceTypeSchemaResourcesOutput
	ToInstanceTypeSchemaResourcesOutputWithContext(context.Context) InstanceTypeSchemaResourcesOutput
}

// Resource requests/limits for this instance type
type InstanceTypeSchemaResourcesArgs struct {
	// Resource limits for this instance type
	Limits pulumi.StringMapInput `pulumi:"limits"`
	// Resource requests for this instance type
	Requests pulumi.StringMapInput `pulumi:"requests"`
}

func (InstanceTypeSchemaResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTypeSchemaResources)(nil)).Elem()
}

func (i InstanceTypeSchemaResourcesArgs) ToInstanceTypeSchemaResourcesOutput() InstanceTypeSchemaResourcesOutput {
	return i.ToInstanceTypeSchemaResourcesOutputWithContext(context.Background())
}

func (i InstanceTypeSchemaResourcesArgs) ToInstanceTypeSchemaResourcesOutputWithContext(ctx context.Context) InstanceTypeSchemaResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTypeSchemaResourcesOutput)
}

func (i InstanceTypeSchemaResourcesArgs) ToInstanceTypeSchemaResourcesPtrOutput() InstanceTypeSchemaResourcesPtrOutput {
	return i.ToInstanceTypeSchemaResourcesPtrOutputWithContext(context.Background())
}

func (i InstanceTypeSchemaResourcesArgs) ToInstanceTypeSchemaResourcesPtrOutputWithContext(ctx context.Context) InstanceTypeSchemaResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTypeSchemaResourcesOutput).ToInstanceTypeSchemaResourcesPtrOutputWithContext(ctx)
}

// InstanceTypeSchemaResourcesPtrInput is an input type that accepts InstanceTypeSchemaResourcesArgs, InstanceTypeSchemaResourcesPtr and InstanceTypeSchemaResourcesPtrOutput values.
// You can construct a concrete instance of `InstanceTypeSchemaResourcesPtrInput` via:
//
//          InstanceTypeSchemaResourcesArgs{...}
//
//  or:
//
//          nil
type InstanceTypeSchemaResourcesPtrInput interface {
	pulumi.Input

	ToInstanceTypeSchemaResourcesPtrOutput() InstanceTypeSchemaResourcesPtrOutput
	ToInstanceTypeSchemaResourcesPtrOutputWithContext(context.Context) InstanceTypeSchemaResourcesPtrOutput
}

type instanceTypeSchemaResourcesPtrType InstanceTypeSchemaResourcesArgs

func InstanceTypeSchemaResourcesPtr(v *InstanceTypeSchemaResourcesArgs) InstanceTypeSchemaResourcesPtrInput {
	return (*instanceTypeSchemaResourcesPtrType)(v)
}

func (*instanceTypeSchemaResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceTypeSchemaResources)(nil)).Elem()
}

func (i *instanceTypeSchemaResourcesPtrType) ToInstanceTypeSchemaResourcesPtrOutput() InstanceTypeSchemaResourcesPtrOutput {
	return i.ToInstanceTypeSchemaResourcesPtrOutputWithContext(context.Background())
}

func (i *instanceTypeSchemaResourcesPtrType) ToInstanceTypeSchemaResourcesPtrOutputWithContext(ctx context.Context) InstanceTypeSchemaResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTypeSchemaResourcesPtrOutput)
}

// Resource requests/limits for this instance type
type InstanceTypeSchemaResourcesOutput struct{ *pulumi.OutputState }

func (InstanceTypeSchemaResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTypeSchemaResources)(nil)).Elem()
}

func (o InstanceTypeSchemaResourcesOutput) ToInstanceTypeSchemaResourcesOutput() InstanceTypeSchemaResourcesOutput {
	return o
}

func (o InstanceTypeSchemaResourcesOutput) ToInstanceTypeSchemaResourcesOutputWithContext(ctx context.Context) InstanceTypeSchemaResourcesOutput {
	return o
}

func (o InstanceTypeSchemaResourcesOutput) ToInstanceTypeSchemaResourcesPtrOutput() InstanceTypeSchemaResourcesPtrOutput {
	return o.ToInstanceTypeSchemaResourcesPtrOutputWithContext(context.Background())
}

func (o InstanceTypeSchemaResourcesOutput) ToInstanceTypeSchemaResourcesPtrOutputWithContext(ctx context.Context) InstanceTypeSchemaResourcesPtrOutput {
	return o.ApplyT(func(v InstanceTypeSchemaResources) *InstanceTypeSchemaResources {
		return &v
	}).(InstanceTypeSchemaResourcesPtrOutput)
}

// Resource limits for this instance type
func (o InstanceTypeSchemaResourcesOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v InstanceTypeSchemaResources) map[string]string { return v.Limits }).(pulumi.StringMapOutput)
}

// Resource requests for this instance type
func (o InstanceTypeSchemaResourcesOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v InstanceTypeSchemaResources) map[string]string { return v.Requests }).(pulumi.StringMapOutput)
}

type InstanceTypeSchemaResourcesPtrOutput struct{ *pulumi.OutputState }

func (InstanceTypeSchemaResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceTypeSchemaResources)(nil)).Elem()
}

func (o InstanceTypeSchemaResourcesPtrOutput) ToInstanceTypeSchemaResourcesPtrOutput() InstanceTypeSchemaResourcesPtrOutput {
	return o
}

func (o InstanceTypeSchemaResourcesPtrOutput) ToInstanceTypeSchemaResourcesPtrOutputWithContext(ctx context.Context) InstanceTypeSchemaResourcesPtrOutput {
	return o
}

func (o InstanceTypeSchemaResourcesPtrOutput) Elem() InstanceTypeSchemaResourcesOutput {
	return o.ApplyT(func(v *InstanceTypeSchemaResources) InstanceTypeSchemaResources { return *v }).(InstanceTypeSchemaResourcesOutput)
}

// Resource limits for this instance type
func (o InstanceTypeSchemaResourcesPtrOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InstanceTypeSchemaResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.StringMapOutput)
}

// Resource requests for this instance type
func (o InstanceTypeSchemaResourcesPtrOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InstanceTypeSchemaResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.StringMapOutput)
}

// Instance type schema.
type InstanceTypeSchemaResponse struct {
	// Node Selector
	NodeSelector map[string]string `pulumi:"nodeSelector"`
	// Resource requests/limits for this instance type
	Resources *InstanceTypeSchemaResponseResources `pulumi:"resources"`
}

// InstanceTypeSchemaResponseInput is an input type that accepts InstanceTypeSchemaResponseArgs and InstanceTypeSchemaResponseOutput values.
// You can construct a concrete instance of `InstanceTypeSchemaResponseInput` via:
//
//          InstanceTypeSchemaResponseArgs{...}
type InstanceTypeSchemaResponseInput interface {
	pulumi.Input

	ToInstanceTypeSchemaResponseOutput() InstanceTypeSchemaResponseOutput
	ToInstanceTypeSchemaResponseOutputWithContext(context.Context) InstanceTypeSchemaResponseOutput
}

// Instance type schema.
type InstanceTypeSchemaResponseArgs struct {
	// Node Selector
	NodeSelector pulumi.StringMapInput `pulumi:"nodeSelector"`
	// Resource requests/limits for this instance type
	Resources InstanceTypeSchemaResponseResourcesPtrInput `pulumi:"resources"`
}

func (InstanceTypeSchemaResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTypeSchemaResponse)(nil)).Elem()
}

func (i InstanceTypeSchemaResponseArgs) ToInstanceTypeSchemaResponseOutput() InstanceTypeSchemaResponseOutput {
	return i.ToInstanceTypeSchemaResponseOutputWithContext(context.Background())
}

func (i InstanceTypeSchemaResponseArgs) ToInstanceTypeSchemaResponseOutputWithContext(ctx context.Context) InstanceTypeSchemaResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTypeSchemaResponseOutput)
}

// InstanceTypeSchemaResponseMapInput is an input type that accepts InstanceTypeSchemaResponseMap and InstanceTypeSchemaResponseMapOutput values.
// You can construct a concrete instance of `InstanceTypeSchemaResponseMapInput` via:
//
//          InstanceTypeSchemaResponseMap{ "key": InstanceTypeSchemaResponseArgs{...} }
type InstanceTypeSchemaResponseMapInput interface {
	pulumi.Input

	ToInstanceTypeSchemaResponseMapOutput() InstanceTypeSchemaResponseMapOutput
	ToInstanceTypeSchemaResponseMapOutputWithContext(context.Context) InstanceTypeSchemaResponseMapOutput
}

type InstanceTypeSchemaResponseMap map[string]InstanceTypeSchemaResponseInput

func (InstanceTypeSchemaResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]InstanceTypeSchemaResponse)(nil)).Elem()
}

func (i InstanceTypeSchemaResponseMap) ToInstanceTypeSchemaResponseMapOutput() InstanceTypeSchemaResponseMapOutput {
	return i.ToInstanceTypeSchemaResponseMapOutputWithContext(context.Background())
}

func (i InstanceTypeSchemaResponseMap) ToInstanceTypeSchemaResponseMapOutputWithContext(ctx context.Context) InstanceTypeSchemaResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTypeSchemaResponseMapOutput)
}

// Instance type schema.
type InstanceTypeSchemaResponseOutput struct{ *pulumi.OutputState }

func (InstanceTypeSchemaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTypeSchemaResponse)(nil)).Elem()
}

func (o InstanceTypeSchemaResponseOutput) ToInstanceTypeSchemaResponseOutput() InstanceTypeSchemaResponseOutput {
	return o
}

func (o InstanceTypeSchemaResponseOutput) ToInstanceTypeSchemaResponseOutputWithContext(ctx context.Context) InstanceTypeSchemaResponseOutput {
	return o
}

// Node Selector
func (o InstanceTypeSchemaResponseOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func(v InstanceTypeSchemaResponse) map[string]string { return v.NodeSelector }).(pulumi.StringMapOutput)
}

// Resource requests/limits for this instance type
func (o InstanceTypeSchemaResponseOutput) Resources() InstanceTypeSchemaResponseResourcesPtrOutput {
	return o.ApplyT(func(v InstanceTypeSchemaResponse) *InstanceTypeSchemaResponseResources { return v.Resources }).(InstanceTypeSchemaResponseResourcesPtrOutput)
}

type InstanceTypeSchemaResponseMapOutput struct{ *pulumi.OutputState }

func (InstanceTypeSchemaResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]InstanceTypeSchemaResponse)(nil)).Elem()
}

func (o InstanceTypeSchemaResponseMapOutput) ToInstanceTypeSchemaResponseMapOutput() InstanceTypeSchemaResponseMapOutput {
	return o
}

func (o InstanceTypeSchemaResponseMapOutput) ToInstanceTypeSchemaResponseMapOutputWithContext(ctx context.Context) InstanceTypeSchemaResponseMapOutput {
	return o
}

func (o InstanceTypeSchemaResponseMapOutput) MapIndex(k pulumi.StringInput) InstanceTypeSchemaResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) InstanceTypeSchemaResponse {
		return vs[0].(map[string]InstanceTypeSchemaResponse)[vs[1].(string)]
	}).(InstanceTypeSchemaResponseOutput)
}

// Resource requests/limits for this instance type
type InstanceTypeSchemaResponseResources struct {
	// Resource limits for this instance type
	Limits map[string]string `pulumi:"limits"`
	// Resource requests for this instance type
	Requests map[string]string `pulumi:"requests"`
}

// InstanceTypeSchemaResponseResourcesInput is an input type that accepts InstanceTypeSchemaResponseResourcesArgs and InstanceTypeSchemaResponseResourcesOutput values.
// You can construct a concrete instance of `InstanceTypeSchemaResponseResourcesInput` via:
//
//          InstanceTypeSchemaResponseResourcesArgs{...}
type InstanceTypeSchemaResponseResourcesInput interface {
	pulumi.Input

	ToInstanceTypeSchemaResponseResourcesOutput() InstanceTypeSchemaResponseResourcesOutput
	ToInstanceTypeSchemaResponseResourcesOutputWithContext(context.Context) InstanceTypeSchemaResponseResourcesOutput
}

// Resource requests/limits for this instance type
type InstanceTypeSchemaResponseResourcesArgs struct {
	// Resource limits for this instance type
	Limits pulumi.StringMapInput `pulumi:"limits"`
	// Resource requests for this instance type
	Requests pulumi.StringMapInput `pulumi:"requests"`
}

func (InstanceTypeSchemaResponseResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTypeSchemaResponseResources)(nil)).Elem()
}

func (i InstanceTypeSchemaResponseResourcesArgs) ToInstanceTypeSchemaResponseResourcesOutput() InstanceTypeSchemaResponseResourcesOutput {
	return i.ToInstanceTypeSchemaResponseResourcesOutputWithContext(context.Background())
}

func (i InstanceTypeSchemaResponseResourcesArgs) ToInstanceTypeSchemaResponseResourcesOutputWithContext(ctx context.Context) InstanceTypeSchemaResponseResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTypeSchemaResponseResourcesOutput)
}

func (i InstanceTypeSchemaResponseResourcesArgs) ToInstanceTypeSchemaResponseResourcesPtrOutput() InstanceTypeSchemaResponseResourcesPtrOutput {
	return i.ToInstanceTypeSchemaResponseResourcesPtrOutputWithContext(context.Background())
}

func (i InstanceTypeSchemaResponseResourcesArgs) ToInstanceTypeSchemaResponseResourcesPtrOutputWithContext(ctx context.Context) InstanceTypeSchemaResponseResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTypeSchemaResponseResourcesOutput).ToInstanceTypeSchemaResponseResourcesPtrOutputWithContext(ctx)
}

// InstanceTypeSchemaResponseResourcesPtrInput is an input type that accepts InstanceTypeSchemaResponseResourcesArgs, InstanceTypeSchemaResponseResourcesPtr and InstanceTypeSchemaResponseResourcesPtrOutput values.
// You can construct a concrete instance of `InstanceTypeSchemaResponseResourcesPtrInput` via:
//
//          InstanceTypeSchemaResponseResourcesArgs{...}
//
//  or:
//
//          nil
type InstanceTypeSchemaResponseResourcesPtrInput interface {
	pulumi.Input

	ToInstanceTypeSchemaResponseResourcesPtrOutput() InstanceTypeSchemaResponseResourcesPtrOutput
	ToInstanceTypeSchemaResponseResourcesPtrOutputWithContext(context.Context) InstanceTypeSchemaResponseResourcesPtrOutput
}

type instanceTypeSchemaResponseResourcesPtrType InstanceTypeSchemaResponseResourcesArgs

func InstanceTypeSchemaResponseResourcesPtr(v *InstanceTypeSchemaResponseResourcesArgs) InstanceTypeSchemaResponseResourcesPtrInput {
	return (*instanceTypeSchemaResponseResourcesPtrType)(v)
}

func (*instanceTypeSchemaResponseResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceTypeSchemaResponseResources)(nil)).Elem()
}

func (i *instanceTypeSchemaResponseResourcesPtrType) ToInstanceTypeSchemaResponseResourcesPtrOutput() InstanceTypeSchemaResponseResourcesPtrOutput {
	return i.ToInstanceTypeSchemaResponseResourcesPtrOutputWithContext(context.Background())
}

func (i *instanceTypeSchemaResponseResourcesPtrType) ToInstanceTypeSchemaResponseResourcesPtrOutputWithContext(ctx context.Context) InstanceTypeSchemaResponseResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTypeSchemaResponseResourcesPtrOutput)
}

// Resource requests/limits for this instance type
type InstanceTypeSchemaResponseResourcesOutput struct{ *pulumi.OutputState }

func (InstanceTypeSchemaResponseResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTypeSchemaResponseResources)(nil)).Elem()
}

func (o InstanceTypeSchemaResponseResourcesOutput) ToInstanceTypeSchemaResponseResourcesOutput() InstanceTypeSchemaResponseResourcesOutput {
	return o
}

func (o InstanceTypeSchemaResponseResourcesOutput) ToInstanceTypeSchemaResponseResourcesOutputWithContext(ctx context.Context) InstanceTypeSchemaResponseResourcesOutput {
	return o
}

func (o InstanceTypeSchemaResponseResourcesOutput) ToInstanceTypeSchemaResponseResourcesPtrOutput() InstanceTypeSchemaResponseResourcesPtrOutput {
	return o.ToInstanceTypeSchemaResponseResourcesPtrOutputWithContext(context.Background())
}

func (o InstanceTypeSchemaResponseResourcesOutput) ToInstanceTypeSchemaResponseResourcesPtrOutputWithContext(ctx context.Context) InstanceTypeSchemaResponseResourcesPtrOutput {
	return o.ApplyT(func(v InstanceTypeSchemaResponseResources) *InstanceTypeSchemaResponseResources {
		return &v
	}).(InstanceTypeSchemaResponseResourcesPtrOutput)
}

// Resource limits for this instance type
func (o InstanceTypeSchemaResponseResourcesOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v InstanceTypeSchemaResponseResources) map[string]string { return v.Limits }).(pulumi.StringMapOutput)
}

// Resource requests for this instance type
func (o InstanceTypeSchemaResponseResourcesOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v InstanceTypeSchemaResponseResources) map[string]string { return v.Requests }).(pulumi.StringMapOutput)
}

type InstanceTypeSchemaResponseResourcesPtrOutput struct{ *pulumi.OutputState }

func (InstanceTypeSchemaResponseResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceTypeSchemaResponseResources)(nil)).Elem()
}

func (o InstanceTypeSchemaResponseResourcesPtrOutput) ToInstanceTypeSchemaResponseResourcesPtrOutput() InstanceTypeSchemaResponseResourcesPtrOutput {
	return o
}

func (o InstanceTypeSchemaResponseResourcesPtrOutput) ToInstanceTypeSchemaResponseResourcesPtrOutputWithContext(ctx context.Context) InstanceTypeSchemaResponseResourcesPtrOutput {
	return o
}

func (o InstanceTypeSchemaResponseResourcesPtrOutput) Elem() InstanceTypeSchemaResponseResourcesOutput {
	return o.ApplyT(func(v *InstanceTypeSchemaResponseResources) InstanceTypeSchemaResponseResources { return *v }).(InstanceTypeSchemaResponseResourcesOutput)
}

// Resource limits for this instance type
func (o InstanceTypeSchemaResponseResourcesPtrOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InstanceTypeSchemaResponseResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.StringMapOutput)
}

// Resource requests for this instance type
func (o InstanceTypeSchemaResponseResourcesPtrOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InstanceTypeSchemaResponseResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.StringMapOutput)
}

type KeyVaultProperties struct {
	// For future use - The client id of the identity which will be used to access key vault.
	IdentityClientId *string `pulumi:"identityClientId"`
	// Key vault uri to access the encryption key.
	KeyIdentifier string `pulumi:"keyIdentifier"`
	// The ArmId of the keyVault where the customer owned encryption key is present.
	KeyVaultArmId string `pulumi:"keyVaultArmId"`
}

// KeyVaultPropertiesInput is an input type that accepts KeyVaultPropertiesArgs and KeyVaultPropertiesOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesInput` via:
//
//          KeyVaultPropertiesArgs{...}
type KeyVaultPropertiesInput interface {
	pulumi.Input

	ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput
	ToKeyVaultPropertiesOutputWithContext(context.Context) KeyVaultPropertiesOutput
}

type KeyVaultPropertiesArgs struct {
	// For future use - The client id of the identity which will be used to access key vault.
	IdentityClientId pulumi.StringPtrInput `pulumi:"identityClientId"`
	// Key vault uri to access the encryption key.
	KeyIdentifier pulumi.StringInput `pulumi:"keyIdentifier"`
	// The ArmId of the keyVault where the customer owned encryption key is present.
	KeyVaultArmId pulumi.StringInput `pulumi:"keyVaultArmId"`
}

func (KeyVaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return i.ToKeyVaultPropertiesOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput)
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput).ToKeyVaultPropertiesPtrOutputWithContext(ctx)
}

// KeyVaultPropertiesPtrInput is an input type that accepts KeyVaultPropertiesArgs, KeyVaultPropertiesPtr and KeyVaultPropertiesPtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesPtrInput` via:
//
//          KeyVaultPropertiesArgs{...}
//
//  or:
//
//          nil
type KeyVaultPropertiesPtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput
	ToKeyVaultPropertiesPtrOutputWithContext(context.Context) KeyVaultPropertiesPtrOutput
}

type keyVaultPropertiesPtrType KeyVaultPropertiesArgs

func KeyVaultPropertiesPtr(v *KeyVaultPropertiesArgs) KeyVaultPropertiesPtrInput {
	return (*keyVaultPropertiesPtrType)(v)
}

func (*keyVaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesPtrOutput)
}

type KeyVaultPropertiesOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *KeyVaultProperties {
		return &v
	}).(KeyVaultPropertiesPtrOutput)
}

// For future use - The client id of the identity which will be used to access key vault.
func (o KeyVaultPropertiesOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// Key vault uri to access the encryption key.
func (o KeyVaultPropertiesOutput) KeyIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultProperties) string { return v.KeyIdentifier }).(pulumi.StringOutput)
}

// The ArmId of the keyVault where the customer owned encryption key is present.
func (o KeyVaultPropertiesOutput) KeyVaultArmId() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultProperties) string { return v.KeyVaultArmId }).(pulumi.StringOutput)
}

type KeyVaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) Elem() KeyVaultPropertiesOutput {
	return o.ApplyT(func(v *KeyVaultProperties) KeyVaultProperties { return *v }).(KeyVaultPropertiesOutput)
}

// For future use - The client id of the identity which will be used to access key vault.
func (o KeyVaultPropertiesPtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// Key vault uri to access the encryption key.
func (o KeyVaultPropertiesPtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// The ArmId of the keyVault where the customer owned encryption key is present.
func (o KeyVaultPropertiesPtrOutput) KeyVaultArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultArmId
	}).(pulumi.StringPtrOutput)
}

type KeyVaultPropertiesResponse struct {
	// For future use - The client id of the identity which will be used to access key vault.
	IdentityClientId *string `pulumi:"identityClientId"`
	// Key vault uri to access the encryption key.
	KeyIdentifier string `pulumi:"keyIdentifier"`
	// The ArmId of the keyVault where the customer owned encryption key is present.
	KeyVaultArmId string `pulumi:"keyVaultArmId"`
}

// KeyVaultPropertiesResponseInput is an input type that accepts KeyVaultPropertiesResponseArgs and KeyVaultPropertiesResponseOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesResponseInput` via:
//
//          KeyVaultPropertiesResponseArgs{...}
type KeyVaultPropertiesResponseInput interface {
	pulumi.Input

	ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput
	ToKeyVaultPropertiesResponseOutputWithContext(context.Context) KeyVaultPropertiesResponseOutput
}

type KeyVaultPropertiesResponseArgs struct {
	// For future use - The client id of the identity which will be used to access key vault.
	IdentityClientId pulumi.StringPtrInput `pulumi:"identityClientId"`
	// Key vault uri to access the encryption key.
	KeyIdentifier pulumi.StringInput `pulumi:"keyIdentifier"`
	// The ArmId of the keyVault where the customer owned encryption key is present.
	KeyVaultArmId pulumi.StringInput `pulumi:"keyVaultArmId"`
}

func (KeyVaultPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return i.ToKeyVaultPropertiesResponseOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponseOutput)
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return i.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponseOutput).ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx)
}

// KeyVaultPropertiesResponsePtrInput is an input type that accepts KeyVaultPropertiesResponseArgs, KeyVaultPropertiesResponsePtr and KeyVaultPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesResponsePtrInput` via:
//
//          KeyVaultPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type KeyVaultPropertiesResponsePtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput
	ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Context) KeyVaultPropertiesResponsePtrOutput
}

type keyVaultPropertiesResponsePtrType KeyVaultPropertiesResponseArgs

func KeyVaultPropertiesResponsePtr(v *KeyVaultPropertiesResponseArgs) KeyVaultPropertiesResponsePtrInput {
	return (*keyVaultPropertiesResponsePtrType)(v)
}

func (*keyVaultPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (i *keyVaultPropertiesResponsePtrType) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return i.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesResponsePtrType) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponsePtrOutput)
}

type KeyVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *KeyVaultPropertiesResponse {
		return &v
	}).(KeyVaultPropertiesResponsePtrOutput)
}

// For future use - The client id of the identity which will be used to access key vault.
func (o KeyVaultPropertiesResponseOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// Key vault uri to access the encryption key.
func (o KeyVaultPropertiesResponseOutput) KeyIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) string { return v.KeyIdentifier }).(pulumi.StringOutput)
}

// The ArmId of the keyVault where the customer owned encryption key is present.
func (o KeyVaultPropertiesResponseOutput) KeyVaultArmId() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) string { return v.KeyVaultArmId }).(pulumi.StringOutput)
}

type KeyVaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) Elem() KeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) KeyVaultPropertiesResponse { return *v }).(KeyVaultPropertiesResponseOutput)
}

// For future use - The client id of the identity which will be used to access key vault.
func (o KeyVaultPropertiesResponsePtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// Key vault uri to access the encryption key.
func (o KeyVaultPropertiesResponsePtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// The ArmId of the keyVault where the customer owned encryption key is present.
func (o KeyVaultPropertiesResponsePtrOutput) KeyVaultArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultArmId
	}).(pulumi.StringPtrOutput)
}

// A Machine Learning compute based on Kubernetes Compute.
type Kubernetes struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Kubernetes'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Properties of Kubernetes
	Properties *KubernetesProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// KubernetesInput is an input type that accepts KubernetesArgs and KubernetesOutput values.
// You can construct a concrete instance of `KubernetesInput` via:
//
//          KubernetesArgs{...}
type KubernetesInput interface {
	pulumi.Input

	ToKubernetesOutput() KubernetesOutput
	ToKubernetesOutputWithContext(context.Context) KubernetesOutput
}

// A Machine Learning compute based on Kubernetes Compute.
type KubernetesArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Kubernetes'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// Properties of Kubernetes
	Properties KubernetesPropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (KubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Kubernetes)(nil)).Elem()
}

func (i KubernetesArgs) ToKubernetesOutput() KubernetesOutput {
	return i.ToKubernetesOutputWithContext(context.Background())
}

func (i KubernetesArgs) ToKubernetesOutputWithContext(ctx context.Context) KubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesOutput)
}

// A Machine Learning compute based on Kubernetes Compute.
type KubernetesOutput struct{ *pulumi.OutputState }

func (KubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Kubernetes)(nil)).Elem()
}

func (o KubernetesOutput) ToKubernetesOutput() KubernetesOutput {
	return o
}

func (o KubernetesOutput) ToKubernetesOutputWithContext(ctx context.Context) KubernetesOutput {
	return o
}

// Location for the underlying compute
func (o KubernetesOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'Kubernetes'.
func (o KubernetesOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v Kubernetes) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o KubernetesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o KubernetesOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Kubernetes) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// Properties of Kubernetes
func (o KubernetesOutput) Properties() KubernetesPropertiesPtrOutput {
	return o.ApplyT(func(v Kubernetes) *KubernetesProperties { return v.Properties }).(KubernetesPropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o KubernetesOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Kubernetes properties
type KubernetesProperties struct {
	// Default instance type
	DefaultInstanceType *string `pulumi:"defaultInstanceType"`
	// Extension instance release train.
	ExtensionInstanceReleaseTrain *string `pulumi:"extensionInstanceReleaseTrain"`
	// Extension principal-id.
	ExtensionPrincipalId *string `pulumi:"extensionPrincipalId"`
	// Instance Type Schema
	InstanceTypes map[string]InstanceTypeSchema `pulumi:"instanceTypes"`
	// Compute namespace
	Namespace *string `pulumi:"namespace"`
	// Relay connection string.
	RelayConnectionString *string `pulumi:"relayConnectionString"`
	// ServiceBus connection string.
	ServiceBusConnectionString *string `pulumi:"serviceBusConnectionString"`
	// VC name.
	VcName *string `pulumi:"vcName"`
}

// KubernetesPropertiesInput is an input type that accepts KubernetesPropertiesArgs and KubernetesPropertiesOutput values.
// You can construct a concrete instance of `KubernetesPropertiesInput` via:
//
//          KubernetesPropertiesArgs{...}
type KubernetesPropertiesInput interface {
	pulumi.Input

	ToKubernetesPropertiesOutput() KubernetesPropertiesOutput
	ToKubernetesPropertiesOutputWithContext(context.Context) KubernetesPropertiesOutput
}

// Kubernetes properties
type KubernetesPropertiesArgs struct {
	// Default instance type
	DefaultInstanceType pulumi.StringPtrInput `pulumi:"defaultInstanceType"`
	// Extension instance release train.
	ExtensionInstanceReleaseTrain pulumi.StringPtrInput `pulumi:"extensionInstanceReleaseTrain"`
	// Extension principal-id.
	ExtensionPrincipalId pulumi.StringPtrInput `pulumi:"extensionPrincipalId"`
	// Instance Type Schema
	InstanceTypes InstanceTypeSchemaMapInput `pulumi:"instanceTypes"`
	// Compute namespace
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Relay connection string.
	RelayConnectionString pulumi.StringPtrInput `pulumi:"relayConnectionString"`
	// ServiceBus connection string.
	ServiceBusConnectionString pulumi.StringPtrInput `pulumi:"serviceBusConnectionString"`
	// VC name.
	VcName pulumi.StringPtrInput `pulumi:"vcName"`
}

func (KubernetesPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesProperties)(nil)).Elem()
}

func (i KubernetesPropertiesArgs) ToKubernetesPropertiesOutput() KubernetesPropertiesOutput {
	return i.ToKubernetesPropertiesOutputWithContext(context.Background())
}

func (i KubernetesPropertiesArgs) ToKubernetesPropertiesOutputWithContext(ctx context.Context) KubernetesPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesPropertiesOutput)
}

func (i KubernetesPropertiesArgs) ToKubernetesPropertiesPtrOutput() KubernetesPropertiesPtrOutput {
	return i.ToKubernetesPropertiesPtrOutputWithContext(context.Background())
}

func (i KubernetesPropertiesArgs) ToKubernetesPropertiesPtrOutputWithContext(ctx context.Context) KubernetesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesPropertiesOutput).ToKubernetesPropertiesPtrOutputWithContext(ctx)
}

// KubernetesPropertiesPtrInput is an input type that accepts KubernetesPropertiesArgs, KubernetesPropertiesPtr and KubernetesPropertiesPtrOutput values.
// You can construct a concrete instance of `KubernetesPropertiesPtrInput` via:
//
//          KubernetesPropertiesArgs{...}
//
//  or:
//
//          nil
type KubernetesPropertiesPtrInput interface {
	pulumi.Input

	ToKubernetesPropertiesPtrOutput() KubernetesPropertiesPtrOutput
	ToKubernetesPropertiesPtrOutputWithContext(context.Context) KubernetesPropertiesPtrOutput
}

type kubernetesPropertiesPtrType KubernetesPropertiesArgs

func KubernetesPropertiesPtr(v *KubernetesPropertiesArgs) KubernetesPropertiesPtrInput {
	return (*kubernetesPropertiesPtrType)(v)
}

func (*kubernetesPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesProperties)(nil)).Elem()
}

func (i *kubernetesPropertiesPtrType) ToKubernetesPropertiesPtrOutput() KubernetesPropertiesPtrOutput {
	return i.ToKubernetesPropertiesPtrOutputWithContext(context.Background())
}

func (i *kubernetesPropertiesPtrType) ToKubernetesPropertiesPtrOutputWithContext(ctx context.Context) KubernetesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesPropertiesPtrOutput)
}

// Kubernetes properties
type KubernetesPropertiesOutput struct{ *pulumi.OutputState }

func (KubernetesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesProperties)(nil)).Elem()
}

func (o KubernetesPropertiesOutput) ToKubernetesPropertiesOutput() KubernetesPropertiesOutput {
	return o
}

func (o KubernetesPropertiesOutput) ToKubernetesPropertiesOutputWithContext(ctx context.Context) KubernetesPropertiesOutput {
	return o
}

func (o KubernetesPropertiesOutput) ToKubernetesPropertiesPtrOutput() KubernetesPropertiesPtrOutput {
	return o.ToKubernetesPropertiesPtrOutputWithContext(context.Background())
}

func (o KubernetesPropertiesOutput) ToKubernetesPropertiesPtrOutputWithContext(ctx context.Context) KubernetesPropertiesPtrOutput {
	return o.ApplyT(func(v KubernetesProperties) *KubernetesProperties {
		return &v
	}).(KubernetesPropertiesPtrOutput)
}

// Default instance type
func (o KubernetesPropertiesOutput) DefaultInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesProperties) *string { return v.DefaultInstanceType }).(pulumi.StringPtrOutput)
}

// Extension instance release train.
func (o KubernetesPropertiesOutput) ExtensionInstanceReleaseTrain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesProperties) *string { return v.ExtensionInstanceReleaseTrain }).(pulumi.StringPtrOutput)
}

// Extension principal-id.
func (o KubernetesPropertiesOutput) ExtensionPrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesProperties) *string { return v.ExtensionPrincipalId }).(pulumi.StringPtrOutput)
}

// Instance Type Schema
func (o KubernetesPropertiesOutput) InstanceTypes() InstanceTypeSchemaMapOutput {
	return o.ApplyT(func(v KubernetesProperties) map[string]InstanceTypeSchema { return v.InstanceTypes }).(InstanceTypeSchemaMapOutput)
}

// Compute namespace
func (o KubernetesPropertiesOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesProperties) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Relay connection string.
func (o KubernetesPropertiesOutput) RelayConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesProperties) *string { return v.RelayConnectionString }).(pulumi.StringPtrOutput)
}

// ServiceBus connection string.
func (o KubernetesPropertiesOutput) ServiceBusConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesProperties) *string { return v.ServiceBusConnectionString }).(pulumi.StringPtrOutput)
}

// VC name.
func (o KubernetesPropertiesOutput) VcName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesProperties) *string { return v.VcName }).(pulumi.StringPtrOutput)
}

type KubernetesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (KubernetesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesProperties)(nil)).Elem()
}

func (o KubernetesPropertiesPtrOutput) ToKubernetesPropertiesPtrOutput() KubernetesPropertiesPtrOutput {
	return o
}

func (o KubernetesPropertiesPtrOutput) ToKubernetesPropertiesPtrOutputWithContext(ctx context.Context) KubernetesPropertiesPtrOutput {
	return o
}

func (o KubernetesPropertiesPtrOutput) Elem() KubernetesPropertiesOutput {
	return o.ApplyT(func(v *KubernetesProperties) KubernetesProperties { return *v }).(KubernetesPropertiesOutput)
}

// Default instance type
func (o KubernetesPropertiesPtrOutput) DefaultInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesProperties) *string {
		if v == nil {
			return nil
		}
		return v.DefaultInstanceType
	}).(pulumi.StringPtrOutput)
}

// Extension instance release train.
func (o KubernetesPropertiesPtrOutput) ExtensionInstanceReleaseTrain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesProperties) *string {
		if v == nil {
			return nil
		}
		return v.ExtensionInstanceReleaseTrain
	}).(pulumi.StringPtrOutput)
}

// Extension principal-id.
func (o KubernetesPropertiesPtrOutput) ExtensionPrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesProperties) *string {
		if v == nil {
			return nil
		}
		return v.ExtensionPrincipalId
	}).(pulumi.StringPtrOutput)
}

// Instance Type Schema
func (o KubernetesPropertiesPtrOutput) InstanceTypes() InstanceTypeSchemaMapOutput {
	return o.ApplyT(func(v *KubernetesProperties) map[string]InstanceTypeSchema {
		if v == nil {
			return nil
		}
		return v.InstanceTypes
	}).(InstanceTypeSchemaMapOutput)
}

// Compute namespace
func (o KubernetesPropertiesPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesProperties) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Relay connection string.
func (o KubernetesPropertiesPtrOutput) RelayConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesProperties) *string {
		if v == nil {
			return nil
		}
		return v.RelayConnectionString
	}).(pulumi.StringPtrOutput)
}

// ServiceBus connection string.
func (o KubernetesPropertiesPtrOutput) ServiceBusConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceBusConnectionString
	}).(pulumi.StringPtrOutput)
}

// VC name.
func (o KubernetesPropertiesPtrOutput) VcName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesProperties) *string {
		if v == nil {
			return nil
		}
		return v.VcName
	}).(pulumi.StringPtrOutput)
}

// Kubernetes properties
type KubernetesPropertiesResponse struct {
	// Default instance type
	DefaultInstanceType *string `pulumi:"defaultInstanceType"`
	// Extension instance release train.
	ExtensionInstanceReleaseTrain *string `pulumi:"extensionInstanceReleaseTrain"`
	// Extension principal-id.
	ExtensionPrincipalId *string `pulumi:"extensionPrincipalId"`
	// Instance Type Schema
	InstanceTypes map[string]InstanceTypeSchemaResponse `pulumi:"instanceTypes"`
	// Compute namespace
	Namespace *string `pulumi:"namespace"`
	// Relay connection string.
	RelayConnectionString *string `pulumi:"relayConnectionString"`
	// ServiceBus connection string.
	ServiceBusConnectionString *string `pulumi:"serviceBusConnectionString"`
	// VC name.
	VcName *string `pulumi:"vcName"`
}

// KubernetesPropertiesResponseInput is an input type that accepts KubernetesPropertiesResponseArgs and KubernetesPropertiesResponseOutput values.
// You can construct a concrete instance of `KubernetesPropertiesResponseInput` via:
//
//          KubernetesPropertiesResponseArgs{...}
type KubernetesPropertiesResponseInput interface {
	pulumi.Input

	ToKubernetesPropertiesResponseOutput() KubernetesPropertiesResponseOutput
	ToKubernetesPropertiesResponseOutputWithContext(context.Context) KubernetesPropertiesResponseOutput
}

// Kubernetes properties
type KubernetesPropertiesResponseArgs struct {
	// Default instance type
	DefaultInstanceType pulumi.StringPtrInput `pulumi:"defaultInstanceType"`
	// Extension instance release train.
	ExtensionInstanceReleaseTrain pulumi.StringPtrInput `pulumi:"extensionInstanceReleaseTrain"`
	// Extension principal-id.
	ExtensionPrincipalId pulumi.StringPtrInput `pulumi:"extensionPrincipalId"`
	// Instance Type Schema
	InstanceTypes InstanceTypeSchemaResponseMapInput `pulumi:"instanceTypes"`
	// Compute namespace
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Relay connection string.
	RelayConnectionString pulumi.StringPtrInput `pulumi:"relayConnectionString"`
	// ServiceBus connection string.
	ServiceBusConnectionString pulumi.StringPtrInput `pulumi:"serviceBusConnectionString"`
	// VC name.
	VcName pulumi.StringPtrInput `pulumi:"vcName"`
}

func (KubernetesPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesPropertiesResponse)(nil)).Elem()
}

func (i KubernetesPropertiesResponseArgs) ToKubernetesPropertiesResponseOutput() KubernetesPropertiesResponseOutput {
	return i.ToKubernetesPropertiesResponseOutputWithContext(context.Background())
}

func (i KubernetesPropertiesResponseArgs) ToKubernetesPropertiesResponseOutputWithContext(ctx context.Context) KubernetesPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesPropertiesResponseOutput)
}

func (i KubernetesPropertiesResponseArgs) ToKubernetesPropertiesResponsePtrOutput() KubernetesPropertiesResponsePtrOutput {
	return i.ToKubernetesPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i KubernetesPropertiesResponseArgs) ToKubernetesPropertiesResponsePtrOutputWithContext(ctx context.Context) KubernetesPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesPropertiesResponseOutput).ToKubernetesPropertiesResponsePtrOutputWithContext(ctx)
}

// KubernetesPropertiesResponsePtrInput is an input type that accepts KubernetesPropertiesResponseArgs, KubernetesPropertiesResponsePtr and KubernetesPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `KubernetesPropertiesResponsePtrInput` via:
//
//          KubernetesPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type KubernetesPropertiesResponsePtrInput interface {
	pulumi.Input

	ToKubernetesPropertiesResponsePtrOutput() KubernetesPropertiesResponsePtrOutput
	ToKubernetesPropertiesResponsePtrOutputWithContext(context.Context) KubernetesPropertiesResponsePtrOutput
}

type kubernetesPropertiesResponsePtrType KubernetesPropertiesResponseArgs

func KubernetesPropertiesResponsePtr(v *KubernetesPropertiesResponseArgs) KubernetesPropertiesResponsePtrInput {
	return (*kubernetesPropertiesResponsePtrType)(v)
}

func (*kubernetesPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesPropertiesResponse)(nil)).Elem()
}

func (i *kubernetesPropertiesResponsePtrType) ToKubernetesPropertiesResponsePtrOutput() KubernetesPropertiesResponsePtrOutput {
	return i.ToKubernetesPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *kubernetesPropertiesResponsePtrType) ToKubernetesPropertiesResponsePtrOutputWithContext(ctx context.Context) KubernetesPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesPropertiesResponsePtrOutput)
}

// Kubernetes properties
type KubernetesPropertiesResponseOutput struct{ *pulumi.OutputState }

func (KubernetesPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesPropertiesResponse)(nil)).Elem()
}

func (o KubernetesPropertiesResponseOutput) ToKubernetesPropertiesResponseOutput() KubernetesPropertiesResponseOutput {
	return o
}

func (o KubernetesPropertiesResponseOutput) ToKubernetesPropertiesResponseOutputWithContext(ctx context.Context) KubernetesPropertiesResponseOutput {
	return o
}

func (o KubernetesPropertiesResponseOutput) ToKubernetesPropertiesResponsePtrOutput() KubernetesPropertiesResponsePtrOutput {
	return o.ToKubernetesPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o KubernetesPropertiesResponseOutput) ToKubernetesPropertiesResponsePtrOutputWithContext(ctx context.Context) KubernetesPropertiesResponsePtrOutput {
	return o.ApplyT(func(v KubernetesPropertiesResponse) *KubernetesPropertiesResponse {
		return &v
	}).(KubernetesPropertiesResponsePtrOutput)
}

// Default instance type
func (o KubernetesPropertiesResponseOutput) DefaultInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesPropertiesResponse) *string { return v.DefaultInstanceType }).(pulumi.StringPtrOutput)
}

// Extension instance release train.
func (o KubernetesPropertiesResponseOutput) ExtensionInstanceReleaseTrain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesPropertiesResponse) *string { return v.ExtensionInstanceReleaseTrain }).(pulumi.StringPtrOutput)
}

// Extension principal-id.
func (o KubernetesPropertiesResponseOutput) ExtensionPrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesPropertiesResponse) *string { return v.ExtensionPrincipalId }).(pulumi.StringPtrOutput)
}

// Instance Type Schema
func (o KubernetesPropertiesResponseOutput) InstanceTypes() InstanceTypeSchemaResponseMapOutput {
	return o.ApplyT(func(v KubernetesPropertiesResponse) map[string]InstanceTypeSchemaResponse { return v.InstanceTypes }).(InstanceTypeSchemaResponseMapOutput)
}

// Compute namespace
func (o KubernetesPropertiesResponseOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesPropertiesResponse) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Relay connection string.
func (o KubernetesPropertiesResponseOutput) RelayConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesPropertiesResponse) *string { return v.RelayConnectionString }).(pulumi.StringPtrOutput)
}

// ServiceBus connection string.
func (o KubernetesPropertiesResponseOutput) ServiceBusConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesPropertiesResponse) *string { return v.ServiceBusConnectionString }).(pulumi.StringPtrOutput)
}

// VC name.
func (o KubernetesPropertiesResponseOutput) VcName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesPropertiesResponse) *string { return v.VcName }).(pulumi.StringPtrOutput)
}

type KubernetesPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (KubernetesPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesPropertiesResponse)(nil)).Elem()
}

func (o KubernetesPropertiesResponsePtrOutput) ToKubernetesPropertiesResponsePtrOutput() KubernetesPropertiesResponsePtrOutput {
	return o
}

func (o KubernetesPropertiesResponsePtrOutput) ToKubernetesPropertiesResponsePtrOutputWithContext(ctx context.Context) KubernetesPropertiesResponsePtrOutput {
	return o
}

func (o KubernetesPropertiesResponsePtrOutput) Elem() KubernetesPropertiesResponseOutput {
	return o.ApplyT(func(v *KubernetesPropertiesResponse) KubernetesPropertiesResponse { return *v }).(KubernetesPropertiesResponseOutput)
}

// Default instance type
func (o KubernetesPropertiesResponsePtrOutput) DefaultInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultInstanceType
	}).(pulumi.StringPtrOutput)
}

// Extension instance release train.
func (o KubernetesPropertiesResponsePtrOutput) ExtensionInstanceReleaseTrain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExtensionInstanceReleaseTrain
	}).(pulumi.StringPtrOutput)
}

// Extension principal-id.
func (o KubernetesPropertiesResponsePtrOutput) ExtensionPrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExtensionPrincipalId
	}).(pulumi.StringPtrOutput)
}

// Instance Type Schema
func (o KubernetesPropertiesResponsePtrOutput) InstanceTypes() InstanceTypeSchemaResponseMapOutput {
	return o.ApplyT(func(v *KubernetesPropertiesResponse) map[string]InstanceTypeSchemaResponse {
		if v == nil {
			return nil
		}
		return v.InstanceTypes
	}).(InstanceTypeSchemaResponseMapOutput)
}

// Compute namespace
func (o KubernetesPropertiesResponsePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Relay connection string.
func (o KubernetesPropertiesResponsePtrOutput) RelayConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RelayConnectionString
	}).(pulumi.StringPtrOutput)
}

// ServiceBus connection string.
func (o KubernetesPropertiesResponsePtrOutput) ServiceBusConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceBusConnectionString
	}).(pulumi.StringPtrOutput)
}

// VC name.
func (o KubernetesPropertiesResponsePtrOutput) VcName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.VcName
	}).(pulumi.StringPtrOutput)
}

// A Machine Learning compute based on Kubernetes Compute.
type KubernetesResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Kubernetes'.
	ComputeType string `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// Properties of Kubernetes
	Properties *KubernetesPropertiesResponse `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []ErrorResponseResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// KubernetesResponseInput is an input type that accepts KubernetesResponseArgs and KubernetesResponseOutput values.
// You can construct a concrete instance of `KubernetesResponseInput` via:
//
//          KubernetesResponseArgs{...}
type KubernetesResponseInput interface {
	pulumi.Input

	ToKubernetesResponseOutput() KubernetesResponseOutput
	ToKubernetesResponseOutputWithContext(context.Context) KubernetesResponseOutput
}

// A Machine Learning compute based on Kubernetes Compute.
type KubernetesResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Kubernetes'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn pulumi.StringInput `pulumi:"modifiedOn"`
	// Properties of Kubernetes
	Properties KubernetesPropertiesResponsePtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors ErrorResponseResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (KubernetesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesResponse)(nil)).Elem()
}

func (i KubernetesResponseArgs) ToKubernetesResponseOutput() KubernetesResponseOutput {
	return i.ToKubernetesResponseOutputWithContext(context.Background())
}

func (i KubernetesResponseArgs) ToKubernetesResponseOutputWithContext(ctx context.Context) KubernetesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesResponseOutput)
}

// A Machine Learning compute based on Kubernetes Compute.
type KubernetesResponseOutput struct{ *pulumi.OutputState }

func (KubernetesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesResponse)(nil)).Elem()
}

func (o KubernetesResponseOutput) ToKubernetesResponseOutput() KubernetesResponseOutput {
	return o
}

func (o KubernetesResponseOutput) ToKubernetesResponseOutputWithContext(ctx context.Context) KubernetesResponseOutput {
	return o
}

// Location for the underlying compute
func (o KubernetesResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'Kubernetes'.
func (o KubernetesResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The time at which the compute was created.
func (o KubernetesResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o KubernetesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o KubernetesResponseOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesResponse) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o KubernetesResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v KubernetesResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The time at which the compute was last modified.
func (o KubernetesResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// Properties of Kubernetes
func (o KubernetesResponseOutput) Properties() KubernetesPropertiesResponsePtrOutput {
	return o.ApplyT(func(v KubernetesResponse) *KubernetesPropertiesResponse { return v.Properties }).(KubernetesPropertiesResponsePtrOutput)
}

// Errors during provisioning
func (o KubernetesResponseOutput) ProvisioningErrors() ErrorResponseResponseArrayOutput {
	return o.ApplyT(func(v KubernetesResponse) []ErrorResponseResponse { return v.ProvisioningErrors }).(ErrorResponseResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o KubernetesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o KubernetesResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ListNotebookKeysResultResponse struct {
	PrimaryAccessKey   string `pulumi:"primaryAccessKey"`
	SecondaryAccessKey string `pulumi:"secondaryAccessKey"`
}

// ListNotebookKeysResultResponseInput is an input type that accepts ListNotebookKeysResultResponseArgs and ListNotebookKeysResultResponseOutput values.
// You can construct a concrete instance of `ListNotebookKeysResultResponseInput` via:
//
//          ListNotebookKeysResultResponseArgs{...}
type ListNotebookKeysResultResponseInput interface {
	pulumi.Input

	ToListNotebookKeysResultResponseOutput() ListNotebookKeysResultResponseOutput
	ToListNotebookKeysResultResponseOutputWithContext(context.Context) ListNotebookKeysResultResponseOutput
}

type ListNotebookKeysResultResponseArgs struct {
	PrimaryAccessKey   pulumi.StringInput `pulumi:"primaryAccessKey"`
	SecondaryAccessKey pulumi.StringInput `pulumi:"secondaryAccessKey"`
}

func (ListNotebookKeysResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListNotebookKeysResultResponse)(nil)).Elem()
}

func (i ListNotebookKeysResultResponseArgs) ToListNotebookKeysResultResponseOutput() ListNotebookKeysResultResponseOutput {
	return i.ToListNotebookKeysResultResponseOutputWithContext(context.Background())
}

func (i ListNotebookKeysResultResponseArgs) ToListNotebookKeysResultResponseOutputWithContext(ctx context.Context) ListNotebookKeysResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListNotebookKeysResultResponseOutput)
}

type ListNotebookKeysResultResponseOutput struct{ *pulumi.OutputState }

func (ListNotebookKeysResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListNotebookKeysResultResponse)(nil)).Elem()
}

func (o ListNotebookKeysResultResponseOutput) ToListNotebookKeysResultResponseOutput() ListNotebookKeysResultResponseOutput {
	return o
}

func (o ListNotebookKeysResultResponseOutput) ToListNotebookKeysResultResponseOutputWithContext(ctx context.Context) ListNotebookKeysResultResponseOutput {
	return o
}

func (o ListNotebookKeysResultResponseOutput) PrimaryAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v ListNotebookKeysResultResponse) string { return v.PrimaryAccessKey }).(pulumi.StringOutput)
}

func (o ListNotebookKeysResultResponseOutput) SecondaryAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v ListNotebookKeysResultResponse) string { return v.SecondaryAccessKey }).(pulumi.StringOutput)
}

// Counts of various compute node states on the amlCompute.
type NodeStateCountsResponse struct {
	// Number of compute nodes in idle state.
	IdleNodeCount int `pulumi:"idleNodeCount"`
	// Number of compute nodes which are leaving the amlCompute.
	LeavingNodeCount int `pulumi:"leavingNodeCount"`
	// Number of compute nodes which are in preempted state.
	PreemptedNodeCount int `pulumi:"preemptedNodeCount"`
	// Number of compute nodes which are being prepared.
	PreparingNodeCount int `pulumi:"preparingNodeCount"`
	// Number of compute nodes which are running jobs.
	RunningNodeCount int `pulumi:"runningNodeCount"`
	// Number of compute nodes which are in unusable state.
	UnusableNodeCount int `pulumi:"unusableNodeCount"`
}

// NodeStateCountsResponseInput is an input type that accepts NodeStateCountsResponseArgs and NodeStateCountsResponseOutput values.
// You can construct a concrete instance of `NodeStateCountsResponseInput` via:
//
//          NodeStateCountsResponseArgs{...}
type NodeStateCountsResponseInput interface {
	pulumi.Input

	ToNodeStateCountsResponseOutput() NodeStateCountsResponseOutput
	ToNodeStateCountsResponseOutputWithContext(context.Context) NodeStateCountsResponseOutput
}

// Counts of various compute node states on the amlCompute.
type NodeStateCountsResponseArgs struct {
	// Number of compute nodes in idle state.
	IdleNodeCount pulumi.IntInput `pulumi:"idleNodeCount"`
	// Number of compute nodes which are leaving the amlCompute.
	LeavingNodeCount pulumi.IntInput `pulumi:"leavingNodeCount"`
	// Number of compute nodes which are in preempted state.
	PreemptedNodeCount pulumi.IntInput `pulumi:"preemptedNodeCount"`
	// Number of compute nodes which are being prepared.
	PreparingNodeCount pulumi.IntInput `pulumi:"preparingNodeCount"`
	// Number of compute nodes which are running jobs.
	RunningNodeCount pulumi.IntInput `pulumi:"runningNodeCount"`
	// Number of compute nodes which are in unusable state.
	UnusableNodeCount pulumi.IntInput `pulumi:"unusableNodeCount"`
}

func (NodeStateCountsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeStateCountsResponse)(nil)).Elem()
}

func (i NodeStateCountsResponseArgs) ToNodeStateCountsResponseOutput() NodeStateCountsResponseOutput {
	return i.ToNodeStateCountsResponseOutputWithContext(context.Background())
}

func (i NodeStateCountsResponseArgs) ToNodeStateCountsResponseOutputWithContext(ctx context.Context) NodeStateCountsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStateCountsResponseOutput)
}

func (i NodeStateCountsResponseArgs) ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput {
	return i.ToNodeStateCountsResponsePtrOutputWithContext(context.Background())
}

func (i NodeStateCountsResponseArgs) ToNodeStateCountsResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStateCountsResponseOutput).ToNodeStateCountsResponsePtrOutputWithContext(ctx)
}

// NodeStateCountsResponsePtrInput is an input type that accepts NodeStateCountsResponseArgs, NodeStateCountsResponsePtr and NodeStateCountsResponsePtrOutput values.
// You can construct a concrete instance of `NodeStateCountsResponsePtrInput` via:
//
//          NodeStateCountsResponseArgs{...}
//
//  or:
//
//          nil
type NodeStateCountsResponsePtrInput interface {
	pulumi.Input

	ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput
	ToNodeStateCountsResponsePtrOutputWithContext(context.Context) NodeStateCountsResponsePtrOutput
}

type nodeStateCountsResponsePtrType NodeStateCountsResponseArgs

func NodeStateCountsResponsePtr(v *NodeStateCountsResponseArgs) NodeStateCountsResponsePtrInput {
	return (*nodeStateCountsResponsePtrType)(v)
}

func (*nodeStateCountsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeStateCountsResponse)(nil)).Elem()
}

func (i *nodeStateCountsResponsePtrType) ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput {
	return i.ToNodeStateCountsResponsePtrOutputWithContext(context.Background())
}

func (i *nodeStateCountsResponsePtrType) ToNodeStateCountsResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStateCountsResponsePtrOutput)
}

// Counts of various compute node states on the amlCompute.
type NodeStateCountsResponseOutput struct{ *pulumi.OutputState }

func (NodeStateCountsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeStateCountsResponse)(nil)).Elem()
}

func (o NodeStateCountsResponseOutput) ToNodeStateCountsResponseOutput() NodeStateCountsResponseOutput {
	return o
}

func (o NodeStateCountsResponseOutput) ToNodeStateCountsResponseOutputWithContext(ctx context.Context) NodeStateCountsResponseOutput {
	return o
}

func (o NodeStateCountsResponseOutput) ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput {
	return o.ToNodeStateCountsResponsePtrOutputWithContext(context.Background())
}

func (o NodeStateCountsResponseOutput) ToNodeStateCountsResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsResponsePtrOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) *NodeStateCountsResponse {
		return &v
	}).(NodeStateCountsResponsePtrOutput)
}

// Number of compute nodes in idle state.
func (o NodeStateCountsResponseOutput) IdleNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.IdleNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are leaving the amlCompute.
func (o NodeStateCountsResponseOutput) LeavingNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.LeavingNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are in preempted state.
func (o NodeStateCountsResponseOutput) PreemptedNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.PreemptedNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are being prepared.
func (o NodeStateCountsResponseOutput) PreparingNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.PreparingNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are running jobs.
func (o NodeStateCountsResponseOutput) RunningNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.RunningNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are in unusable state.
func (o NodeStateCountsResponseOutput) UnusableNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.UnusableNodeCount }).(pulumi.IntOutput)
}

type NodeStateCountsResponsePtrOutput struct{ *pulumi.OutputState }

func (NodeStateCountsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeStateCountsResponse)(nil)).Elem()
}

func (o NodeStateCountsResponsePtrOutput) ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput {
	return o
}

func (o NodeStateCountsResponsePtrOutput) ToNodeStateCountsResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsResponsePtrOutput {
	return o
}

func (o NodeStateCountsResponsePtrOutput) Elem() NodeStateCountsResponseOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) NodeStateCountsResponse { return *v }).(NodeStateCountsResponseOutput)
}

// Number of compute nodes in idle state.
func (o NodeStateCountsResponsePtrOutput) IdleNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.IdleNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are leaving the amlCompute.
func (o NodeStateCountsResponsePtrOutput) LeavingNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.LeavingNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are in preempted state.
func (o NodeStateCountsResponsePtrOutput) PreemptedNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.PreemptedNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are being prepared.
func (o NodeStateCountsResponsePtrOutput) PreparingNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.PreparingNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are running jobs.
func (o NodeStateCountsResponsePtrOutput) RunningNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.RunningNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are in unusable state.
func (o NodeStateCountsResponsePtrOutput) UnusableNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.UnusableNodeCount
	}).(pulumi.IntPtrOutput)
}

type NotebookPreparationErrorResponse struct {
	ErrorMessage *string `pulumi:"errorMessage"`
	StatusCode   *int    `pulumi:"statusCode"`
}

// NotebookPreparationErrorResponseInput is an input type that accepts NotebookPreparationErrorResponseArgs and NotebookPreparationErrorResponseOutput values.
// You can construct a concrete instance of `NotebookPreparationErrorResponseInput` via:
//
//          NotebookPreparationErrorResponseArgs{...}
type NotebookPreparationErrorResponseInput interface {
	pulumi.Input

	ToNotebookPreparationErrorResponseOutput() NotebookPreparationErrorResponseOutput
	ToNotebookPreparationErrorResponseOutputWithContext(context.Context) NotebookPreparationErrorResponseOutput
}

type NotebookPreparationErrorResponseArgs struct {
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
	StatusCode   pulumi.IntPtrInput    `pulumi:"statusCode"`
}

func (NotebookPreparationErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookPreparationErrorResponse)(nil)).Elem()
}

func (i NotebookPreparationErrorResponseArgs) ToNotebookPreparationErrorResponseOutput() NotebookPreparationErrorResponseOutput {
	return i.ToNotebookPreparationErrorResponseOutputWithContext(context.Background())
}

func (i NotebookPreparationErrorResponseArgs) ToNotebookPreparationErrorResponseOutputWithContext(ctx context.Context) NotebookPreparationErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookPreparationErrorResponseOutput)
}

func (i NotebookPreparationErrorResponseArgs) ToNotebookPreparationErrorResponsePtrOutput() NotebookPreparationErrorResponsePtrOutput {
	return i.ToNotebookPreparationErrorResponsePtrOutputWithContext(context.Background())
}

func (i NotebookPreparationErrorResponseArgs) ToNotebookPreparationErrorResponsePtrOutputWithContext(ctx context.Context) NotebookPreparationErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookPreparationErrorResponseOutput).ToNotebookPreparationErrorResponsePtrOutputWithContext(ctx)
}

// NotebookPreparationErrorResponsePtrInput is an input type that accepts NotebookPreparationErrorResponseArgs, NotebookPreparationErrorResponsePtr and NotebookPreparationErrorResponsePtrOutput values.
// You can construct a concrete instance of `NotebookPreparationErrorResponsePtrInput` via:
//
//          NotebookPreparationErrorResponseArgs{...}
//
//  or:
//
//          nil
type NotebookPreparationErrorResponsePtrInput interface {
	pulumi.Input

	ToNotebookPreparationErrorResponsePtrOutput() NotebookPreparationErrorResponsePtrOutput
	ToNotebookPreparationErrorResponsePtrOutputWithContext(context.Context) NotebookPreparationErrorResponsePtrOutput
}

type notebookPreparationErrorResponsePtrType NotebookPreparationErrorResponseArgs

func NotebookPreparationErrorResponsePtr(v *NotebookPreparationErrorResponseArgs) NotebookPreparationErrorResponsePtrInput {
	return (*notebookPreparationErrorResponsePtrType)(v)
}

func (*notebookPreparationErrorResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebookPreparationErrorResponse)(nil)).Elem()
}

func (i *notebookPreparationErrorResponsePtrType) ToNotebookPreparationErrorResponsePtrOutput() NotebookPreparationErrorResponsePtrOutput {
	return i.ToNotebookPreparationErrorResponsePtrOutputWithContext(context.Background())
}

func (i *notebookPreparationErrorResponsePtrType) ToNotebookPreparationErrorResponsePtrOutputWithContext(ctx context.Context) NotebookPreparationErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookPreparationErrorResponsePtrOutput)
}

type NotebookPreparationErrorResponseOutput struct{ *pulumi.OutputState }

func (NotebookPreparationErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookPreparationErrorResponse)(nil)).Elem()
}

func (o NotebookPreparationErrorResponseOutput) ToNotebookPreparationErrorResponseOutput() NotebookPreparationErrorResponseOutput {
	return o
}

func (o NotebookPreparationErrorResponseOutput) ToNotebookPreparationErrorResponseOutputWithContext(ctx context.Context) NotebookPreparationErrorResponseOutput {
	return o
}

func (o NotebookPreparationErrorResponseOutput) ToNotebookPreparationErrorResponsePtrOutput() NotebookPreparationErrorResponsePtrOutput {
	return o.ToNotebookPreparationErrorResponsePtrOutputWithContext(context.Background())
}

func (o NotebookPreparationErrorResponseOutput) ToNotebookPreparationErrorResponsePtrOutputWithContext(ctx context.Context) NotebookPreparationErrorResponsePtrOutput {
	return o.ApplyT(func(v NotebookPreparationErrorResponse) *NotebookPreparationErrorResponse {
		return &v
	}).(NotebookPreparationErrorResponsePtrOutput)
}
func (o NotebookPreparationErrorResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotebookPreparationErrorResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

func (o NotebookPreparationErrorResponseOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NotebookPreparationErrorResponse) *int { return v.StatusCode }).(pulumi.IntPtrOutput)
}

type NotebookPreparationErrorResponsePtrOutput struct{ *pulumi.OutputState }

func (NotebookPreparationErrorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebookPreparationErrorResponse)(nil)).Elem()
}

func (o NotebookPreparationErrorResponsePtrOutput) ToNotebookPreparationErrorResponsePtrOutput() NotebookPreparationErrorResponsePtrOutput {
	return o
}

func (o NotebookPreparationErrorResponsePtrOutput) ToNotebookPreparationErrorResponsePtrOutputWithContext(ctx context.Context) NotebookPreparationErrorResponsePtrOutput {
	return o
}

func (o NotebookPreparationErrorResponsePtrOutput) Elem() NotebookPreparationErrorResponseOutput {
	return o.ApplyT(func(v *NotebookPreparationErrorResponse) NotebookPreparationErrorResponse { return *v }).(NotebookPreparationErrorResponseOutput)
}

func (o NotebookPreparationErrorResponsePtrOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotebookPreparationErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

func (o NotebookPreparationErrorResponsePtrOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NotebookPreparationErrorResponse) *int {
		if v == nil {
			return nil
		}
		return v.StatusCode
	}).(pulumi.IntPtrOutput)
}

type NotebookResourceInfoResponse struct {
	Fqdn *string `pulumi:"fqdn"`
	// The error that occurs when preparing notebook.
	NotebookPreparationError *NotebookPreparationErrorResponse `pulumi:"notebookPreparationError"`
	// the data plane resourceId that used to initialize notebook component
	ResourceId *string `pulumi:"resourceId"`
}

// NotebookResourceInfoResponseInput is an input type that accepts NotebookResourceInfoResponseArgs and NotebookResourceInfoResponseOutput values.
// You can construct a concrete instance of `NotebookResourceInfoResponseInput` via:
//
//          NotebookResourceInfoResponseArgs{...}
type NotebookResourceInfoResponseInput interface {
	pulumi.Input

	ToNotebookResourceInfoResponseOutput() NotebookResourceInfoResponseOutput
	ToNotebookResourceInfoResponseOutputWithContext(context.Context) NotebookResourceInfoResponseOutput
}

type NotebookResourceInfoResponseArgs struct {
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The error that occurs when preparing notebook.
	NotebookPreparationError NotebookPreparationErrorResponsePtrInput `pulumi:"notebookPreparationError"`
	// the data plane resourceId that used to initialize notebook component
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (NotebookResourceInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookResourceInfoResponse)(nil)).Elem()
}

func (i NotebookResourceInfoResponseArgs) ToNotebookResourceInfoResponseOutput() NotebookResourceInfoResponseOutput {
	return i.ToNotebookResourceInfoResponseOutputWithContext(context.Background())
}

func (i NotebookResourceInfoResponseArgs) ToNotebookResourceInfoResponseOutputWithContext(ctx context.Context) NotebookResourceInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookResourceInfoResponseOutput)
}

func (i NotebookResourceInfoResponseArgs) ToNotebookResourceInfoResponsePtrOutput() NotebookResourceInfoResponsePtrOutput {
	return i.ToNotebookResourceInfoResponsePtrOutputWithContext(context.Background())
}

func (i NotebookResourceInfoResponseArgs) ToNotebookResourceInfoResponsePtrOutputWithContext(ctx context.Context) NotebookResourceInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookResourceInfoResponseOutput).ToNotebookResourceInfoResponsePtrOutputWithContext(ctx)
}

// NotebookResourceInfoResponsePtrInput is an input type that accepts NotebookResourceInfoResponseArgs, NotebookResourceInfoResponsePtr and NotebookResourceInfoResponsePtrOutput values.
// You can construct a concrete instance of `NotebookResourceInfoResponsePtrInput` via:
//
//          NotebookResourceInfoResponseArgs{...}
//
//  or:
//
//          nil
type NotebookResourceInfoResponsePtrInput interface {
	pulumi.Input

	ToNotebookResourceInfoResponsePtrOutput() NotebookResourceInfoResponsePtrOutput
	ToNotebookResourceInfoResponsePtrOutputWithContext(context.Context) NotebookResourceInfoResponsePtrOutput
}

type notebookResourceInfoResponsePtrType NotebookResourceInfoResponseArgs

func NotebookResourceInfoResponsePtr(v *NotebookResourceInfoResponseArgs) NotebookResourceInfoResponsePtrInput {
	return (*notebookResourceInfoResponsePtrType)(v)
}

func (*notebookResourceInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebookResourceInfoResponse)(nil)).Elem()
}

func (i *notebookResourceInfoResponsePtrType) ToNotebookResourceInfoResponsePtrOutput() NotebookResourceInfoResponsePtrOutput {
	return i.ToNotebookResourceInfoResponsePtrOutputWithContext(context.Background())
}

func (i *notebookResourceInfoResponsePtrType) ToNotebookResourceInfoResponsePtrOutputWithContext(ctx context.Context) NotebookResourceInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookResourceInfoResponsePtrOutput)
}

type NotebookResourceInfoResponseOutput struct{ *pulumi.OutputState }

func (NotebookResourceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookResourceInfoResponse)(nil)).Elem()
}

func (o NotebookResourceInfoResponseOutput) ToNotebookResourceInfoResponseOutput() NotebookResourceInfoResponseOutput {
	return o
}

func (o NotebookResourceInfoResponseOutput) ToNotebookResourceInfoResponseOutputWithContext(ctx context.Context) NotebookResourceInfoResponseOutput {
	return o
}

func (o NotebookResourceInfoResponseOutput) ToNotebookResourceInfoResponsePtrOutput() NotebookResourceInfoResponsePtrOutput {
	return o.ToNotebookResourceInfoResponsePtrOutputWithContext(context.Background())
}

func (o NotebookResourceInfoResponseOutput) ToNotebookResourceInfoResponsePtrOutputWithContext(ctx context.Context) NotebookResourceInfoResponsePtrOutput {
	return o.ApplyT(func(v NotebookResourceInfoResponse) *NotebookResourceInfoResponse {
		return &v
	}).(NotebookResourceInfoResponsePtrOutput)
}
func (o NotebookResourceInfoResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotebookResourceInfoResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The error that occurs when preparing notebook.
func (o NotebookResourceInfoResponseOutput) NotebookPreparationError() NotebookPreparationErrorResponsePtrOutput {
	return o.ApplyT(func(v NotebookResourceInfoResponse) *NotebookPreparationErrorResponse {
		return v.NotebookPreparationError
	}).(NotebookPreparationErrorResponsePtrOutput)
}

// the data plane resourceId that used to initialize notebook component
func (o NotebookResourceInfoResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotebookResourceInfoResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type NotebookResourceInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (NotebookResourceInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebookResourceInfoResponse)(nil)).Elem()
}

func (o NotebookResourceInfoResponsePtrOutput) ToNotebookResourceInfoResponsePtrOutput() NotebookResourceInfoResponsePtrOutput {
	return o
}

func (o NotebookResourceInfoResponsePtrOutput) ToNotebookResourceInfoResponsePtrOutputWithContext(ctx context.Context) NotebookResourceInfoResponsePtrOutput {
	return o
}

func (o NotebookResourceInfoResponsePtrOutput) Elem() NotebookResourceInfoResponseOutput {
	return o.ApplyT(func(v *NotebookResourceInfoResponse) NotebookResourceInfoResponse { return *v }).(NotebookResourceInfoResponseOutput)
}

func (o NotebookResourceInfoResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotebookResourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The error that occurs when preparing notebook.
func (o NotebookResourceInfoResponsePtrOutput) NotebookPreparationError() NotebookPreparationErrorResponsePtrOutput {
	return o.ApplyT(func(v *NotebookResourceInfoResponse) *NotebookPreparationErrorResponse {
		if v == nil {
			return nil
		}
		return v.NotebookPreparationError
	}).(NotebookPreparationErrorResponsePtrOutput)
}

// the data plane resourceId that used to initialize notebook component
func (o NotebookResourceInfoResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotebookResourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

type PasswordResponse struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// PasswordResponseInput is an input type that accepts PasswordResponseArgs and PasswordResponseOutput values.
// You can construct a concrete instance of `PasswordResponseInput` via:
//
//          PasswordResponseArgs{...}
type PasswordResponseInput interface {
	pulumi.Input

	ToPasswordResponseOutput() PasswordResponseOutput
	ToPasswordResponseOutputWithContext(context.Context) PasswordResponseOutput
}

type PasswordResponseArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (PasswordResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PasswordResponse)(nil)).Elem()
}

func (i PasswordResponseArgs) ToPasswordResponseOutput() PasswordResponseOutput {
	return i.ToPasswordResponseOutputWithContext(context.Background())
}

func (i PasswordResponseArgs) ToPasswordResponseOutputWithContext(ctx context.Context) PasswordResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PasswordResponseOutput)
}

// PasswordResponseArrayInput is an input type that accepts PasswordResponseArray and PasswordResponseArrayOutput values.
// You can construct a concrete instance of `PasswordResponseArrayInput` via:
//
//          PasswordResponseArray{ PasswordResponseArgs{...} }
type PasswordResponseArrayInput interface {
	pulumi.Input

	ToPasswordResponseArrayOutput() PasswordResponseArrayOutput
	ToPasswordResponseArrayOutputWithContext(context.Context) PasswordResponseArrayOutput
}

type PasswordResponseArray []PasswordResponseInput

func (PasswordResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PasswordResponse)(nil)).Elem()
}

func (i PasswordResponseArray) ToPasswordResponseArrayOutput() PasswordResponseArrayOutput {
	return i.ToPasswordResponseArrayOutputWithContext(context.Background())
}

func (i PasswordResponseArray) ToPasswordResponseArrayOutputWithContext(ctx context.Context) PasswordResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PasswordResponseArrayOutput)
}

type PasswordResponseOutput struct{ *pulumi.OutputState }

func (PasswordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PasswordResponse)(nil)).Elem()
}

func (o PasswordResponseOutput) ToPasswordResponseOutput() PasswordResponseOutput {
	return o
}

func (o PasswordResponseOutput) ToPasswordResponseOutputWithContext(ctx context.Context) PasswordResponseOutput {
	return o
}

func (o PasswordResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PasswordResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o PasswordResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PasswordResponse) string { return v.Value }).(pulumi.StringOutput)
}

type PasswordResponseArrayOutput struct{ *pulumi.OutputState }

func (PasswordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PasswordResponse)(nil)).Elem()
}

func (o PasswordResponseArrayOutput) ToPasswordResponseArrayOutput() PasswordResponseArrayOutput {
	return o
}

func (o PasswordResponseArrayOutput) ToPasswordResponseArrayOutputWithContext(ctx context.Context) PasswordResponseArrayOutput {
	return o
}

func (o PasswordResponseArrayOutput) Index(i pulumi.IntInput) PasswordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PasswordResponse {
		return vs[0].([]PasswordResponse)[vs[1].(int)]
	}).(PasswordResponseOutput)
}

// Settings for a personal compute instance.
type PersonalComputeInstanceSettings struct {
	// A user explicitly assigned to a personal compute instance.
	AssignedUser *AssignedUser `pulumi:"assignedUser"`
}

// PersonalComputeInstanceSettingsInput is an input type that accepts PersonalComputeInstanceSettingsArgs and PersonalComputeInstanceSettingsOutput values.
// You can construct a concrete instance of `PersonalComputeInstanceSettingsInput` via:
//
//          PersonalComputeInstanceSettingsArgs{...}
type PersonalComputeInstanceSettingsInput interface {
	pulumi.Input

	ToPersonalComputeInstanceSettingsOutput() PersonalComputeInstanceSettingsOutput
	ToPersonalComputeInstanceSettingsOutputWithContext(context.Context) PersonalComputeInstanceSettingsOutput
}

// Settings for a personal compute instance.
type PersonalComputeInstanceSettingsArgs struct {
	// A user explicitly assigned to a personal compute instance.
	AssignedUser AssignedUserPtrInput `pulumi:"assignedUser"`
}

func (PersonalComputeInstanceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PersonalComputeInstanceSettings)(nil)).Elem()
}

func (i PersonalComputeInstanceSettingsArgs) ToPersonalComputeInstanceSettingsOutput() PersonalComputeInstanceSettingsOutput {
	return i.ToPersonalComputeInstanceSettingsOutputWithContext(context.Background())
}

func (i PersonalComputeInstanceSettingsArgs) ToPersonalComputeInstanceSettingsOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersonalComputeInstanceSettingsOutput)
}

func (i PersonalComputeInstanceSettingsArgs) ToPersonalComputeInstanceSettingsPtrOutput() PersonalComputeInstanceSettingsPtrOutput {
	return i.ToPersonalComputeInstanceSettingsPtrOutputWithContext(context.Background())
}

func (i PersonalComputeInstanceSettingsArgs) ToPersonalComputeInstanceSettingsPtrOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersonalComputeInstanceSettingsOutput).ToPersonalComputeInstanceSettingsPtrOutputWithContext(ctx)
}

// PersonalComputeInstanceSettingsPtrInput is an input type that accepts PersonalComputeInstanceSettingsArgs, PersonalComputeInstanceSettingsPtr and PersonalComputeInstanceSettingsPtrOutput values.
// You can construct a concrete instance of `PersonalComputeInstanceSettingsPtrInput` via:
//
//          PersonalComputeInstanceSettingsArgs{...}
//
//  or:
//
//          nil
type PersonalComputeInstanceSettingsPtrInput interface {
	pulumi.Input

	ToPersonalComputeInstanceSettingsPtrOutput() PersonalComputeInstanceSettingsPtrOutput
	ToPersonalComputeInstanceSettingsPtrOutputWithContext(context.Context) PersonalComputeInstanceSettingsPtrOutput
}

type personalComputeInstanceSettingsPtrType PersonalComputeInstanceSettingsArgs

func PersonalComputeInstanceSettingsPtr(v *PersonalComputeInstanceSettingsArgs) PersonalComputeInstanceSettingsPtrInput {
	return (*personalComputeInstanceSettingsPtrType)(v)
}

func (*personalComputeInstanceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PersonalComputeInstanceSettings)(nil)).Elem()
}

func (i *personalComputeInstanceSettingsPtrType) ToPersonalComputeInstanceSettingsPtrOutput() PersonalComputeInstanceSettingsPtrOutput {
	return i.ToPersonalComputeInstanceSettingsPtrOutputWithContext(context.Background())
}

func (i *personalComputeInstanceSettingsPtrType) ToPersonalComputeInstanceSettingsPtrOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersonalComputeInstanceSettingsPtrOutput)
}

// Settings for a personal compute instance.
type PersonalComputeInstanceSettingsOutput struct{ *pulumi.OutputState }

func (PersonalComputeInstanceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PersonalComputeInstanceSettings)(nil)).Elem()
}

func (o PersonalComputeInstanceSettingsOutput) ToPersonalComputeInstanceSettingsOutput() PersonalComputeInstanceSettingsOutput {
	return o
}

func (o PersonalComputeInstanceSettingsOutput) ToPersonalComputeInstanceSettingsOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsOutput {
	return o
}

func (o PersonalComputeInstanceSettingsOutput) ToPersonalComputeInstanceSettingsPtrOutput() PersonalComputeInstanceSettingsPtrOutput {
	return o.ToPersonalComputeInstanceSettingsPtrOutputWithContext(context.Background())
}

func (o PersonalComputeInstanceSettingsOutput) ToPersonalComputeInstanceSettingsPtrOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsPtrOutput {
	return o.ApplyT(func(v PersonalComputeInstanceSettings) *PersonalComputeInstanceSettings {
		return &v
	}).(PersonalComputeInstanceSettingsPtrOutput)
}

// A user explicitly assigned to a personal compute instance.
func (o PersonalComputeInstanceSettingsOutput) AssignedUser() AssignedUserPtrOutput {
	return o.ApplyT(func(v PersonalComputeInstanceSettings) *AssignedUser { return v.AssignedUser }).(AssignedUserPtrOutput)
}

type PersonalComputeInstanceSettingsPtrOutput struct{ *pulumi.OutputState }

func (PersonalComputeInstanceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PersonalComputeInstanceSettings)(nil)).Elem()
}

func (o PersonalComputeInstanceSettingsPtrOutput) ToPersonalComputeInstanceSettingsPtrOutput() PersonalComputeInstanceSettingsPtrOutput {
	return o
}

func (o PersonalComputeInstanceSettingsPtrOutput) ToPersonalComputeInstanceSettingsPtrOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsPtrOutput {
	return o
}

func (o PersonalComputeInstanceSettingsPtrOutput) Elem() PersonalComputeInstanceSettingsOutput {
	return o.ApplyT(func(v *PersonalComputeInstanceSettings) PersonalComputeInstanceSettings { return *v }).(PersonalComputeInstanceSettingsOutput)
}

// A user explicitly assigned to a personal compute instance.
func (o PersonalComputeInstanceSettingsPtrOutput) AssignedUser() AssignedUserPtrOutput {
	return o.ApplyT(func(v *PersonalComputeInstanceSettings) *AssignedUser {
		if v == nil {
			return nil
		}
		return v.AssignedUser
	}).(AssignedUserPtrOutput)
}

// Settings for a personal compute instance.
type PersonalComputeInstanceSettingsResponse struct {
	// A user explicitly assigned to a personal compute instance.
	AssignedUser *AssignedUserResponse `pulumi:"assignedUser"`
}

// PersonalComputeInstanceSettingsResponseInput is an input type that accepts PersonalComputeInstanceSettingsResponseArgs and PersonalComputeInstanceSettingsResponseOutput values.
// You can construct a concrete instance of `PersonalComputeInstanceSettingsResponseInput` via:
//
//          PersonalComputeInstanceSettingsResponseArgs{...}
type PersonalComputeInstanceSettingsResponseInput interface {
	pulumi.Input

	ToPersonalComputeInstanceSettingsResponseOutput() PersonalComputeInstanceSettingsResponseOutput
	ToPersonalComputeInstanceSettingsResponseOutputWithContext(context.Context) PersonalComputeInstanceSettingsResponseOutput
}

// Settings for a personal compute instance.
type PersonalComputeInstanceSettingsResponseArgs struct {
	// A user explicitly assigned to a personal compute instance.
	AssignedUser AssignedUserResponsePtrInput `pulumi:"assignedUser"`
}

func (PersonalComputeInstanceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PersonalComputeInstanceSettingsResponse)(nil)).Elem()
}

func (i PersonalComputeInstanceSettingsResponseArgs) ToPersonalComputeInstanceSettingsResponseOutput() PersonalComputeInstanceSettingsResponseOutput {
	return i.ToPersonalComputeInstanceSettingsResponseOutputWithContext(context.Background())
}

func (i PersonalComputeInstanceSettingsResponseArgs) ToPersonalComputeInstanceSettingsResponseOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersonalComputeInstanceSettingsResponseOutput)
}

func (i PersonalComputeInstanceSettingsResponseArgs) ToPersonalComputeInstanceSettingsResponsePtrOutput() PersonalComputeInstanceSettingsResponsePtrOutput {
	return i.ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(context.Background())
}

func (i PersonalComputeInstanceSettingsResponseArgs) ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersonalComputeInstanceSettingsResponseOutput).ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(ctx)
}

// PersonalComputeInstanceSettingsResponsePtrInput is an input type that accepts PersonalComputeInstanceSettingsResponseArgs, PersonalComputeInstanceSettingsResponsePtr and PersonalComputeInstanceSettingsResponsePtrOutput values.
// You can construct a concrete instance of `PersonalComputeInstanceSettingsResponsePtrInput` via:
//
//          PersonalComputeInstanceSettingsResponseArgs{...}
//
//  or:
//
//          nil
type PersonalComputeInstanceSettingsResponsePtrInput interface {
	pulumi.Input

	ToPersonalComputeInstanceSettingsResponsePtrOutput() PersonalComputeInstanceSettingsResponsePtrOutput
	ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(context.Context) PersonalComputeInstanceSettingsResponsePtrOutput
}

type personalComputeInstanceSettingsResponsePtrType PersonalComputeInstanceSettingsResponseArgs

func PersonalComputeInstanceSettingsResponsePtr(v *PersonalComputeInstanceSettingsResponseArgs) PersonalComputeInstanceSettingsResponsePtrInput {
	return (*personalComputeInstanceSettingsResponsePtrType)(v)
}

func (*personalComputeInstanceSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PersonalComputeInstanceSettingsResponse)(nil)).Elem()
}

func (i *personalComputeInstanceSettingsResponsePtrType) ToPersonalComputeInstanceSettingsResponsePtrOutput() PersonalComputeInstanceSettingsResponsePtrOutput {
	return i.ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *personalComputeInstanceSettingsResponsePtrType) ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersonalComputeInstanceSettingsResponsePtrOutput)
}

// Settings for a personal compute instance.
type PersonalComputeInstanceSettingsResponseOutput struct{ *pulumi.OutputState }

func (PersonalComputeInstanceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PersonalComputeInstanceSettingsResponse)(nil)).Elem()
}

func (o PersonalComputeInstanceSettingsResponseOutput) ToPersonalComputeInstanceSettingsResponseOutput() PersonalComputeInstanceSettingsResponseOutput {
	return o
}

func (o PersonalComputeInstanceSettingsResponseOutput) ToPersonalComputeInstanceSettingsResponseOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsResponseOutput {
	return o
}

func (o PersonalComputeInstanceSettingsResponseOutput) ToPersonalComputeInstanceSettingsResponsePtrOutput() PersonalComputeInstanceSettingsResponsePtrOutput {
	return o.ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(context.Background())
}

func (o PersonalComputeInstanceSettingsResponseOutput) ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsResponsePtrOutput {
	return o.ApplyT(func(v PersonalComputeInstanceSettingsResponse) *PersonalComputeInstanceSettingsResponse {
		return &v
	}).(PersonalComputeInstanceSettingsResponsePtrOutput)
}

// A user explicitly assigned to a personal compute instance.
func (o PersonalComputeInstanceSettingsResponseOutput) AssignedUser() AssignedUserResponsePtrOutput {
	return o.ApplyT(func(v PersonalComputeInstanceSettingsResponse) *AssignedUserResponse { return v.AssignedUser }).(AssignedUserResponsePtrOutput)
}

type PersonalComputeInstanceSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PersonalComputeInstanceSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PersonalComputeInstanceSettingsResponse)(nil)).Elem()
}

func (o PersonalComputeInstanceSettingsResponsePtrOutput) ToPersonalComputeInstanceSettingsResponsePtrOutput() PersonalComputeInstanceSettingsResponsePtrOutput {
	return o
}

func (o PersonalComputeInstanceSettingsResponsePtrOutput) ToPersonalComputeInstanceSettingsResponsePtrOutputWithContext(ctx context.Context) PersonalComputeInstanceSettingsResponsePtrOutput {
	return o
}

func (o PersonalComputeInstanceSettingsResponsePtrOutput) Elem() PersonalComputeInstanceSettingsResponseOutput {
	return o.ApplyT(func(v *PersonalComputeInstanceSettingsResponse) PersonalComputeInstanceSettingsResponse { return *v }).(PersonalComputeInstanceSettingsResponseOutput)
}

// A user explicitly assigned to a personal compute instance.
func (o PersonalComputeInstanceSettingsResponsePtrOutput) AssignedUser() AssignedUserResponsePtrOutput {
	return o.ApplyT(func(v *PersonalComputeInstanceSettingsResponse) *AssignedUserResponse {
		if v == nil {
			return nil
		}
		return v.AssignedUser
	}).(AssignedUserResponsePtrOutput)
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponse struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The identity of the resource.
	Identity *IdentityResponse `pulumi:"identity"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The sku of the workspace.
	Sku *SkuResponse `pulumi:"sku"`
	// System data
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Contains resource tags defined as key/value pairs.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// PrivateEndpointConnectionResponseInput is an input type that accepts PrivateEndpointConnectionResponseArgs and PrivateEndpointConnectionResponseOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionResponseInput` via:
//
//          PrivateEndpointConnectionResponseArgs{...}
type PrivateEndpointConnectionResponseInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput
	ToPrivateEndpointConnectionResponseOutputWithContext(context.Context) PrivateEndpointConnectionResponseOutput
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponseArgs struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id pulumi.StringInput `pulumi:"id"`
	// The identity of the resource.
	Identity IdentityResponsePtrInput `pulumi:"identity"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint PrivateEndpointResponsePtrInput `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponseInput `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The sku of the workspace.
	Sku SkuResponsePtrInput `pulumi:"sku"`
	// System data
	SystemData SystemDataResponseInput `pulumi:"systemData"`
	// Contains resource tags defined as key/value pairs.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringInput `pulumi:"type"`
}

func (PrivateEndpointConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (i PrivateEndpointConnectionResponseArgs) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return i.ToPrivateEndpointConnectionResponseOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionResponseArgs) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionResponseOutput)
}

// PrivateEndpointConnectionResponseArrayInput is an input type that accepts PrivateEndpointConnectionResponseArray and PrivateEndpointConnectionResponseArrayOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionResponseArrayInput` via:
//
//          PrivateEndpointConnectionResponseArray{ PrivateEndpointConnectionResponseArgs{...} }
type PrivateEndpointConnectionResponseArrayInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput
	ToPrivateEndpointConnectionResponseArrayOutputWithContext(context.Context) PrivateEndpointConnectionResponseArrayOutput
}

type PrivateEndpointConnectionResponseArray []PrivateEndpointConnectionResponseInput

func (PrivateEndpointConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (i PrivateEndpointConnectionResponseArray) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return i.ToPrivateEndpointConnectionResponseArrayOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionResponseArray) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionResponseArrayOutput)
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The identity of the resource.
func (o PrivateEndpointConnectionResponseOutput) Identity() IdentityResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *IdentityResponse { return v.Identity }).(IdentityResponsePtrOutput)
}

// Specifies the location of the resource.
func (o PrivateEndpointConnectionResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The resource of private end point.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The sku of the workspace.
func (o PrivateEndpointConnectionResponseOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// System data
func (o PrivateEndpointConnectionResponseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Contains resource tags defined as key/value pairs.
func (o PrivateEndpointConnectionResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// The Private Endpoint resource.
type PrivateEndpointResponse struct {
	// The ARM identifier for Private Endpoint
	Id string `pulumi:"id"`
	// The ARM identifier for Subnet resource that private endpoint links to
	SubnetArmId string `pulumi:"subnetArmId"`
}

// PrivateEndpointResponseInput is an input type that accepts PrivateEndpointResponseArgs and PrivateEndpointResponseOutput values.
// You can construct a concrete instance of `PrivateEndpointResponseInput` via:
//
//          PrivateEndpointResponseArgs{...}
type PrivateEndpointResponseInput interface {
	pulumi.Input

	ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput
	ToPrivateEndpointResponseOutputWithContext(context.Context) PrivateEndpointResponseOutput
}

// The Private Endpoint resource.
type PrivateEndpointResponseArgs struct {
	// The ARM identifier for Private Endpoint
	Id pulumi.StringInput `pulumi:"id"`
	// The ARM identifier for Subnet resource that private endpoint links to
	SubnetArmId pulumi.StringInput `pulumi:"subnetArmId"`
}

func (PrivateEndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return i.ToPrivateEndpointResponseOutputWithContext(context.Background())
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponseOutput)
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return i.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponseOutput).ToPrivateEndpointResponsePtrOutputWithContext(ctx)
}

// PrivateEndpointResponsePtrInput is an input type that accepts PrivateEndpointResponseArgs, PrivateEndpointResponsePtr and PrivateEndpointResponsePtrOutput values.
// You can construct a concrete instance of `PrivateEndpointResponsePtrInput` via:
//
//          PrivateEndpointResponseArgs{...}
//
//  or:
//
//          nil
type PrivateEndpointResponsePtrInput interface {
	pulumi.Input

	ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput
	ToPrivateEndpointResponsePtrOutputWithContext(context.Context) PrivateEndpointResponsePtrOutput
}

type privateEndpointResponsePtrType PrivateEndpointResponseArgs

func PrivateEndpointResponsePtr(v *PrivateEndpointResponseArgs) PrivateEndpointResponsePtrInput {
	return (*privateEndpointResponsePtrType)(v)
}

func (*privateEndpointResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (i *privateEndpointResponsePtrType) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return i.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (i *privateEndpointResponsePtrType) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponsePtrOutput)
}

// The Private Endpoint resource.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *PrivateEndpointResponse {
		return &v
	}).(PrivateEndpointResponsePtrOutput)
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The ARM identifier for Subnet resource that private endpoint links to
func (o PrivateEndpointResponseOutput) SubnetArmId() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.SubnetArmId }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse { return *v }).(PrivateEndpointResponseOutput)
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The ARM identifier for Subnet resource that private endpoint links to
func (o PrivateEndpointResponsePtrOutput) SubnetArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetArmId
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//          PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput).ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStatePtrInput is an input type that accepts PrivateLinkServiceConnectionStateArgs, PrivateLinkServiceConnectionStatePtr and PrivateLinkServiceConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStatePtrInput` via:
//
//          PrivateLinkServiceConnectionStateArgs{...}
//
//  or:
//
//          nil
type PrivateLinkServiceConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput
	ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStatePtrOutput
}

type privateLinkServiceConnectionStatePtrType PrivateLinkServiceConnectionStateArgs

func PrivateLinkServiceConnectionStatePtr(v *PrivateLinkServiceConnectionStateArgs) PrivateLinkServiceConnectionStatePtrInput {
	return (*privateLinkServiceConnectionStatePtrType)(v)
}

func (*privateLinkServiceConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStatePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *PrivateLinkServiceConnectionState {
		return &v
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) Elem() PrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) PrivateLinkServiceConnectionState { return *v }).(PrivateLinkServiceConnectionStateOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateResponseInput is an input type that accepts PrivateLinkServiceConnectionStateResponseArgs and PrivateLinkServiceConnectionStateResponseOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateResponseInput` via:
//
//          PrivateLinkServiceConnectionStateResponseArgs{...}
type PrivateLinkServiceConnectionStateResponseInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput
	ToPrivateLinkServiceConnectionStateResponseOutputWithContext(context.Context) PrivateLinkServiceConnectionStateResponseOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return i.ToPrivateLinkServiceConnectionStateResponseOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateResponseOutput)
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return i.ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateResponseOutput).ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStateResponsePtrInput is an input type that accepts PrivateLinkServiceConnectionStateResponseArgs, PrivateLinkServiceConnectionStateResponsePtr and PrivateLinkServiceConnectionStateResponsePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateResponsePtrInput` via:
//
//          PrivateLinkServiceConnectionStateResponseArgs{...}
//
//  or:
//
//          nil
type PrivateLinkServiceConnectionStateResponsePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput
	ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput
}

type privateLinkServiceConnectionStateResponsePtrType PrivateLinkServiceConnectionStateResponseArgs

func PrivateLinkServiceConnectionStateResponsePtr(v *PrivateLinkServiceConnectionStateResponseArgs) PrivateLinkServiceConnectionStateResponsePtrInput {
	return (*privateLinkServiceConnectionStateResponsePtrType)(v)
}

func (*privateLinkServiceConnectionStateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStateResponsePtrType) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return i.ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStateResponsePtrType) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *PrivateLinkServiceConnectionStateResponse {
		return &v
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Elem() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) PrivateLinkServiceConnectionStateResponse {
		return *v
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type RegistryListCredentialsResultResponse struct {
	Location  string             `pulumi:"location"`
	Passwords []PasswordResponse `pulumi:"passwords"`
	Username  string             `pulumi:"username"`
}

// RegistryListCredentialsResultResponseInput is an input type that accepts RegistryListCredentialsResultResponseArgs and RegistryListCredentialsResultResponseOutput values.
// You can construct a concrete instance of `RegistryListCredentialsResultResponseInput` via:
//
//          RegistryListCredentialsResultResponseArgs{...}
type RegistryListCredentialsResultResponseInput interface {
	pulumi.Input

	ToRegistryListCredentialsResultResponseOutput() RegistryListCredentialsResultResponseOutput
	ToRegistryListCredentialsResultResponseOutputWithContext(context.Context) RegistryListCredentialsResultResponseOutput
}

type RegistryListCredentialsResultResponseArgs struct {
	Location  pulumi.StringInput         `pulumi:"location"`
	Passwords PasswordResponseArrayInput `pulumi:"passwords"`
	Username  pulumi.StringInput         `pulumi:"username"`
}

func (RegistryListCredentialsResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryListCredentialsResultResponse)(nil)).Elem()
}

func (i RegistryListCredentialsResultResponseArgs) ToRegistryListCredentialsResultResponseOutput() RegistryListCredentialsResultResponseOutput {
	return i.ToRegistryListCredentialsResultResponseOutputWithContext(context.Background())
}

func (i RegistryListCredentialsResultResponseArgs) ToRegistryListCredentialsResultResponseOutputWithContext(ctx context.Context) RegistryListCredentialsResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryListCredentialsResultResponseOutput)
}

type RegistryListCredentialsResultResponseOutput struct{ *pulumi.OutputState }

func (RegistryListCredentialsResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryListCredentialsResultResponse)(nil)).Elem()
}

func (o RegistryListCredentialsResultResponseOutput) ToRegistryListCredentialsResultResponseOutput() RegistryListCredentialsResultResponseOutput {
	return o
}

func (o RegistryListCredentialsResultResponseOutput) ToRegistryListCredentialsResultResponseOutputWithContext(ctx context.Context) RegistryListCredentialsResultResponseOutput {
	return o
}

func (o RegistryListCredentialsResultResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryListCredentialsResultResponse) string { return v.Location }).(pulumi.StringOutput)
}

func (o RegistryListCredentialsResultResponseOutput) Passwords() PasswordResponseArrayOutput {
	return o.ApplyT(func(v RegistryListCredentialsResultResponse) []PasswordResponse { return v.Passwords }).(PasswordResponseArrayOutput)
}

func (o RegistryListCredentialsResultResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryListCredentialsResultResponse) string { return v.Username }).(pulumi.StringOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceId struct {
	// The ID of the resource
	Id string `pulumi:"id"`
}

// ResourceIdInput is an input type that accepts ResourceIdArgs and ResourceIdOutput values.
// You can construct a concrete instance of `ResourceIdInput` via:
//
//          ResourceIdArgs{...}
type ResourceIdInput interface {
	pulumi.Input

	ToResourceIdOutput() ResourceIdOutput
	ToResourceIdOutputWithContext(context.Context) ResourceIdOutput
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdArgs struct {
	// The ID of the resource
	Id pulumi.StringInput `pulumi:"id"`
}

func (ResourceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceId)(nil)).Elem()
}

func (i ResourceIdArgs) ToResourceIdOutput() ResourceIdOutput {
	return i.ToResourceIdOutputWithContext(context.Background())
}

func (i ResourceIdArgs) ToResourceIdOutputWithContext(ctx context.Context) ResourceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdOutput)
}

func (i ResourceIdArgs) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return i.ToResourceIdPtrOutputWithContext(context.Background())
}

func (i ResourceIdArgs) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdOutput).ToResourceIdPtrOutputWithContext(ctx)
}

// ResourceIdPtrInput is an input type that accepts ResourceIdArgs, ResourceIdPtr and ResourceIdPtrOutput values.
// You can construct a concrete instance of `ResourceIdPtrInput` via:
//
//          ResourceIdArgs{...}
//
//  or:
//
//          nil
type ResourceIdPtrInput interface {
	pulumi.Input

	ToResourceIdPtrOutput() ResourceIdPtrOutput
	ToResourceIdPtrOutputWithContext(context.Context) ResourceIdPtrOutput
}

type resourceIdPtrType ResourceIdArgs

func ResourceIdPtr(v *ResourceIdArgs) ResourceIdPtrInput {
	return (*resourceIdPtrType)(v)
}

func (*resourceIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceId)(nil)).Elem()
}

func (i *resourceIdPtrType) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return i.ToResourceIdPtrOutputWithContext(context.Background())
}

func (i *resourceIdPtrType) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdPtrOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdOutput struct{ *pulumi.OutputState }

func (ResourceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceId)(nil)).Elem()
}

func (o ResourceIdOutput) ToResourceIdOutput() ResourceIdOutput {
	return o
}

func (o ResourceIdOutput) ToResourceIdOutputWithContext(ctx context.Context) ResourceIdOutput {
	return o
}

func (o ResourceIdOutput) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return o.ToResourceIdPtrOutputWithContext(context.Background())
}

func (o ResourceIdOutput) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return o.ApplyT(func(v ResourceId) *ResourceId {
		return &v
	}).(ResourceIdPtrOutput)
}

// The ID of the resource
func (o ResourceIdOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceId) string { return v.Id }).(pulumi.StringOutput)
}

type ResourceIdPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceId)(nil)).Elem()
}

func (o ResourceIdPtrOutput) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return o
}

func (o ResourceIdPtrOutput) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return o
}

func (o ResourceIdPtrOutput) Elem() ResourceIdOutput {
	return o.ApplyT(func(v *ResourceId) ResourceId { return *v }).(ResourceIdOutput)
}

// The ID of the resource
func (o ResourceIdPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceId) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdResponse struct {
	// The ID of the resource
	Id string `pulumi:"id"`
}

// ResourceIdResponseInput is an input type that accepts ResourceIdResponseArgs and ResourceIdResponseOutput values.
// You can construct a concrete instance of `ResourceIdResponseInput` via:
//
//          ResourceIdResponseArgs{...}
type ResourceIdResponseInput interface {
	pulumi.Input

	ToResourceIdResponseOutput() ResourceIdResponseOutput
	ToResourceIdResponseOutputWithContext(context.Context) ResourceIdResponseOutput
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdResponseArgs struct {
	// The ID of the resource
	Id pulumi.StringInput `pulumi:"id"`
}

func (ResourceIdResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdResponse)(nil)).Elem()
}

func (i ResourceIdResponseArgs) ToResourceIdResponseOutput() ResourceIdResponseOutput {
	return i.ToResourceIdResponseOutputWithContext(context.Background())
}

func (i ResourceIdResponseArgs) ToResourceIdResponseOutputWithContext(ctx context.Context) ResourceIdResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdResponseOutput)
}

func (i ResourceIdResponseArgs) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return i.ToResourceIdResponsePtrOutputWithContext(context.Background())
}

func (i ResourceIdResponseArgs) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdResponseOutput).ToResourceIdResponsePtrOutputWithContext(ctx)
}

// ResourceIdResponsePtrInput is an input type that accepts ResourceIdResponseArgs, ResourceIdResponsePtr and ResourceIdResponsePtrOutput values.
// You can construct a concrete instance of `ResourceIdResponsePtrInput` via:
//
//          ResourceIdResponseArgs{...}
//
//  or:
//
//          nil
type ResourceIdResponsePtrInput interface {
	pulumi.Input

	ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput
	ToResourceIdResponsePtrOutputWithContext(context.Context) ResourceIdResponsePtrOutput
}

type resourceIdResponsePtrType ResourceIdResponseArgs

func ResourceIdResponsePtr(v *ResourceIdResponseArgs) ResourceIdResponsePtrInput {
	return (*resourceIdResponsePtrType)(v)
}

func (*resourceIdResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdResponse)(nil)).Elem()
}

func (i *resourceIdResponsePtrType) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return i.ToResourceIdResponsePtrOutputWithContext(context.Background())
}

func (i *resourceIdResponsePtrType) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdResponsePtrOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdResponse)(nil)).Elem()
}

func (o ResourceIdResponseOutput) ToResourceIdResponseOutput() ResourceIdResponseOutput {
	return o
}

func (o ResourceIdResponseOutput) ToResourceIdResponseOutputWithContext(ctx context.Context) ResourceIdResponseOutput {
	return o
}

func (o ResourceIdResponseOutput) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return o.ToResourceIdResponsePtrOutputWithContext(context.Background())
}

func (o ResourceIdResponseOutput) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return o.ApplyT(func(v ResourceIdResponse) *ResourceIdResponse {
		return &v
	}).(ResourceIdResponsePtrOutput)
}

// The ID of the resource
func (o ResourceIdResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdResponse) string { return v.Id }).(pulumi.StringOutput)
}

type ResourceIdResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdResponse)(nil)).Elem()
}

func (o ResourceIdResponsePtrOutput) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return o
}

func (o ResourceIdResponsePtrOutput) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return o
}

func (o ResourceIdResponsePtrOutput) Elem() ResourceIdResponseOutput {
	return o.ApplyT(func(v *ResourceIdResponse) ResourceIdResponse { return *v }).(ResourceIdResponseOutput)
}

// The ID of the resource
func (o ResourceIdResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// scale settings for AML Compute
type ScaleSettings struct {
	// Max number of nodes to use
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Min number of nodes to use
	MinNodeCount *int `pulumi:"minNodeCount"`
	// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
	NodeIdleTimeBeforeScaleDown *string `pulumi:"nodeIdleTimeBeforeScaleDown"`
}

// ScaleSettingsInput is an input type that accepts ScaleSettingsArgs and ScaleSettingsOutput values.
// You can construct a concrete instance of `ScaleSettingsInput` via:
//
//          ScaleSettingsArgs{...}
type ScaleSettingsInput interface {
	pulumi.Input

	ToScaleSettingsOutput() ScaleSettingsOutput
	ToScaleSettingsOutputWithContext(context.Context) ScaleSettingsOutput
}

// scale settings for AML Compute
type ScaleSettingsArgs struct {
	// Max number of nodes to use
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// Min number of nodes to use
	MinNodeCount pulumi.IntPtrInput `pulumi:"minNodeCount"`
	// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
	NodeIdleTimeBeforeScaleDown pulumi.StringPtrInput `pulumi:"nodeIdleTimeBeforeScaleDown"`
}

func (ScaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettings)(nil)).Elem()
}

func (i ScaleSettingsArgs) ToScaleSettingsOutput() ScaleSettingsOutput {
	return i.ToScaleSettingsOutputWithContext(context.Background())
}

func (i ScaleSettingsArgs) ToScaleSettingsOutputWithContext(ctx context.Context) ScaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsOutput)
}

func (i ScaleSettingsArgs) ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput {
	return i.ToScaleSettingsPtrOutputWithContext(context.Background())
}

func (i ScaleSettingsArgs) ToScaleSettingsPtrOutputWithContext(ctx context.Context) ScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsOutput).ToScaleSettingsPtrOutputWithContext(ctx)
}

// ScaleSettingsPtrInput is an input type that accepts ScaleSettingsArgs, ScaleSettingsPtr and ScaleSettingsPtrOutput values.
// You can construct a concrete instance of `ScaleSettingsPtrInput` via:
//
//          ScaleSettingsArgs{...}
//
//  or:
//
//          nil
type ScaleSettingsPtrInput interface {
	pulumi.Input

	ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput
	ToScaleSettingsPtrOutputWithContext(context.Context) ScaleSettingsPtrOutput
}

type scaleSettingsPtrType ScaleSettingsArgs

func ScaleSettingsPtr(v *ScaleSettingsArgs) ScaleSettingsPtrInput {
	return (*scaleSettingsPtrType)(v)
}

func (*scaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettings)(nil)).Elem()
}

func (i *scaleSettingsPtrType) ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput {
	return i.ToScaleSettingsPtrOutputWithContext(context.Background())
}

func (i *scaleSettingsPtrType) ToScaleSettingsPtrOutputWithContext(ctx context.Context) ScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsPtrOutput)
}

// scale settings for AML Compute
type ScaleSettingsOutput struct{ *pulumi.OutputState }

func (ScaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettings)(nil)).Elem()
}

func (o ScaleSettingsOutput) ToScaleSettingsOutput() ScaleSettingsOutput {
	return o
}

func (o ScaleSettingsOutput) ToScaleSettingsOutputWithContext(ctx context.Context) ScaleSettingsOutput {
	return o
}

func (o ScaleSettingsOutput) ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput {
	return o.ToScaleSettingsPtrOutputWithContext(context.Background())
}

func (o ScaleSettingsOutput) ToScaleSettingsPtrOutputWithContext(ctx context.Context) ScaleSettingsPtrOutput {
	return o.ApplyT(func(v ScaleSettings) *ScaleSettings {
		return &v
	}).(ScaleSettingsPtrOutput)
}

// Max number of nodes to use
func (o ScaleSettingsOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ScaleSettings) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// Min number of nodes to use
func (o ScaleSettingsOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleSettings) *int { return v.MinNodeCount }).(pulumi.IntPtrOutput)
}

// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
func (o ScaleSettingsOutput) NodeIdleTimeBeforeScaleDown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSettings) *string { return v.NodeIdleTimeBeforeScaleDown }).(pulumi.StringPtrOutput)
}

type ScaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (ScaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettings)(nil)).Elem()
}

func (o ScaleSettingsPtrOutput) ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput {
	return o
}

func (o ScaleSettingsPtrOutput) ToScaleSettingsPtrOutputWithContext(ctx context.Context) ScaleSettingsPtrOutput {
	return o
}

func (o ScaleSettingsPtrOutput) Elem() ScaleSettingsOutput {
	return o.ApplyT(func(v *ScaleSettings) ScaleSettings { return *v }).(ScaleSettingsOutput)
}

// Max number of nodes to use
func (o ScaleSettingsPtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSettings) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// Min number of nodes to use
func (o ScaleSettingsPtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
func (o ScaleSettingsPtrOutput) NodeIdleTimeBeforeScaleDown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSettings) *string {
		if v == nil {
			return nil
		}
		return v.NodeIdleTimeBeforeScaleDown
	}).(pulumi.StringPtrOutput)
}

// scale settings for AML Compute
type ScaleSettingsResponse struct {
	// Max number of nodes to use
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Min number of nodes to use
	MinNodeCount *int `pulumi:"minNodeCount"`
	// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
	NodeIdleTimeBeforeScaleDown *string `pulumi:"nodeIdleTimeBeforeScaleDown"`
}

// ScaleSettingsResponseInput is an input type that accepts ScaleSettingsResponseArgs and ScaleSettingsResponseOutput values.
// You can construct a concrete instance of `ScaleSettingsResponseInput` via:
//
//          ScaleSettingsResponseArgs{...}
type ScaleSettingsResponseInput interface {
	pulumi.Input

	ToScaleSettingsResponseOutput() ScaleSettingsResponseOutput
	ToScaleSettingsResponseOutputWithContext(context.Context) ScaleSettingsResponseOutput
}

// scale settings for AML Compute
type ScaleSettingsResponseArgs struct {
	// Max number of nodes to use
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// Min number of nodes to use
	MinNodeCount pulumi.IntPtrInput `pulumi:"minNodeCount"`
	// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
	NodeIdleTimeBeforeScaleDown pulumi.StringPtrInput `pulumi:"nodeIdleTimeBeforeScaleDown"`
}

func (ScaleSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettingsResponse)(nil)).Elem()
}

func (i ScaleSettingsResponseArgs) ToScaleSettingsResponseOutput() ScaleSettingsResponseOutput {
	return i.ToScaleSettingsResponseOutputWithContext(context.Background())
}

func (i ScaleSettingsResponseArgs) ToScaleSettingsResponseOutputWithContext(ctx context.Context) ScaleSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsResponseOutput)
}

func (i ScaleSettingsResponseArgs) ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput {
	return i.ToScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ScaleSettingsResponseArgs) ToScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsResponseOutput).ToScaleSettingsResponsePtrOutputWithContext(ctx)
}

// ScaleSettingsResponsePtrInput is an input type that accepts ScaleSettingsResponseArgs, ScaleSettingsResponsePtr and ScaleSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ScaleSettingsResponsePtrInput` via:
//
//          ScaleSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ScaleSettingsResponsePtrInput interface {
	pulumi.Input

	ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput
	ToScaleSettingsResponsePtrOutputWithContext(context.Context) ScaleSettingsResponsePtrOutput
}

type scaleSettingsResponsePtrType ScaleSettingsResponseArgs

func ScaleSettingsResponsePtr(v *ScaleSettingsResponseArgs) ScaleSettingsResponsePtrInput {
	return (*scaleSettingsResponsePtrType)(v)
}

func (*scaleSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettingsResponse)(nil)).Elem()
}

func (i *scaleSettingsResponsePtrType) ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput {
	return i.ToScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *scaleSettingsResponsePtrType) ToScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsResponsePtrOutput)
}

// scale settings for AML Compute
type ScaleSettingsResponseOutput struct{ *pulumi.OutputState }

func (ScaleSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettingsResponse)(nil)).Elem()
}

func (o ScaleSettingsResponseOutput) ToScaleSettingsResponseOutput() ScaleSettingsResponseOutput {
	return o
}

func (o ScaleSettingsResponseOutput) ToScaleSettingsResponseOutputWithContext(ctx context.Context) ScaleSettingsResponseOutput {
	return o
}

func (o ScaleSettingsResponseOutput) ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput {
	return o.ToScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ScaleSettingsResponseOutput) ToScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v ScaleSettingsResponse) *ScaleSettingsResponse {
		return &v
	}).(ScaleSettingsResponsePtrOutput)
}

// Max number of nodes to use
func (o ScaleSettingsResponseOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ScaleSettingsResponse) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// Min number of nodes to use
func (o ScaleSettingsResponseOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleSettingsResponse) *int { return v.MinNodeCount }).(pulumi.IntPtrOutput)
}

// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
func (o ScaleSettingsResponseOutput) NodeIdleTimeBeforeScaleDown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSettingsResponse) *string { return v.NodeIdleTimeBeforeScaleDown }).(pulumi.StringPtrOutput)
}

type ScaleSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ScaleSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettingsResponse)(nil)).Elem()
}

func (o ScaleSettingsResponsePtrOutput) ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput {
	return o
}

func (o ScaleSettingsResponsePtrOutput) ToScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsResponsePtrOutput {
	return o
}

func (o ScaleSettingsResponsePtrOutput) Elem() ScaleSettingsResponseOutput {
	return o.ApplyT(func(v *ScaleSettingsResponse) ScaleSettingsResponse { return *v }).(ScaleSettingsResponseOutput)
}

// Max number of nodes to use
func (o ScaleSettingsResponsePtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// Min number of nodes to use
func (o ScaleSettingsResponsePtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
func (o ScaleSettingsResponsePtrOutput) NodeIdleTimeBeforeScaleDown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.NodeIdleTimeBeforeScaleDown
	}).(pulumi.StringPtrOutput)
}

// Script reference
type ScriptReference struct {
	// Optional command line arguments passed to the script to run.
	ScriptArguments *string `pulumi:"scriptArguments"`
	// The location of scripts in the mounted volume.
	ScriptData *string `pulumi:"scriptData"`
	// The storage source of the script: inline, workspace.
	ScriptSource *string `pulumi:"scriptSource"`
	// Optional time period passed to timeout command.
	Timeout *string `pulumi:"timeout"`
}

// ScriptReferenceInput is an input type that accepts ScriptReferenceArgs and ScriptReferenceOutput values.
// You can construct a concrete instance of `ScriptReferenceInput` via:
//
//          ScriptReferenceArgs{...}
type ScriptReferenceInput interface {
	pulumi.Input

	ToScriptReferenceOutput() ScriptReferenceOutput
	ToScriptReferenceOutputWithContext(context.Context) ScriptReferenceOutput
}

// Script reference
type ScriptReferenceArgs struct {
	// Optional command line arguments passed to the script to run.
	ScriptArguments pulumi.StringPtrInput `pulumi:"scriptArguments"`
	// The location of scripts in the mounted volume.
	ScriptData pulumi.StringPtrInput `pulumi:"scriptData"`
	// The storage source of the script: inline, workspace.
	ScriptSource pulumi.StringPtrInput `pulumi:"scriptSource"`
	// Optional time period passed to timeout command.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (ScriptReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptReference)(nil)).Elem()
}

func (i ScriptReferenceArgs) ToScriptReferenceOutput() ScriptReferenceOutput {
	return i.ToScriptReferenceOutputWithContext(context.Background())
}

func (i ScriptReferenceArgs) ToScriptReferenceOutputWithContext(ctx context.Context) ScriptReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptReferenceOutput)
}

func (i ScriptReferenceArgs) ToScriptReferencePtrOutput() ScriptReferencePtrOutput {
	return i.ToScriptReferencePtrOutputWithContext(context.Background())
}

func (i ScriptReferenceArgs) ToScriptReferencePtrOutputWithContext(ctx context.Context) ScriptReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptReferenceOutput).ToScriptReferencePtrOutputWithContext(ctx)
}

// ScriptReferencePtrInput is an input type that accepts ScriptReferenceArgs, ScriptReferencePtr and ScriptReferencePtrOutput values.
// You can construct a concrete instance of `ScriptReferencePtrInput` via:
//
//          ScriptReferenceArgs{...}
//
//  or:
//
//          nil
type ScriptReferencePtrInput interface {
	pulumi.Input

	ToScriptReferencePtrOutput() ScriptReferencePtrOutput
	ToScriptReferencePtrOutputWithContext(context.Context) ScriptReferencePtrOutput
}

type scriptReferencePtrType ScriptReferenceArgs

func ScriptReferencePtr(v *ScriptReferenceArgs) ScriptReferencePtrInput {
	return (*scriptReferencePtrType)(v)
}

func (*scriptReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptReference)(nil)).Elem()
}

func (i *scriptReferencePtrType) ToScriptReferencePtrOutput() ScriptReferencePtrOutput {
	return i.ToScriptReferencePtrOutputWithContext(context.Background())
}

func (i *scriptReferencePtrType) ToScriptReferencePtrOutputWithContext(ctx context.Context) ScriptReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptReferencePtrOutput)
}

// Script reference
type ScriptReferenceOutput struct{ *pulumi.OutputState }

func (ScriptReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptReference)(nil)).Elem()
}

func (o ScriptReferenceOutput) ToScriptReferenceOutput() ScriptReferenceOutput {
	return o
}

func (o ScriptReferenceOutput) ToScriptReferenceOutputWithContext(ctx context.Context) ScriptReferenceOutput {
	return o
}

func (o ScriptReferenceOutput) ToScriptReferencePtrOutput() ScriptReferencePtrOutput {
	return o.ToScriptReferencePtrOutputWithContext(context.Background())
}

func (o ScriptReferenceOutput) ToScriptReferencePtrOutputWithContext(ctx context.Context) ScriptReferencePtrOutput {
	return o.ApplyT(func(v ScriptReference) *ScriptReference {
		return &v
	}).(ScriptReferencePtrOutput)
}

// Optional command line arguments passed to the script to run.
func (o ScriptReferenceOutput) ScriptArguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptReference) *string { return v.ScriptArguments }).(pulumi.StringPtrOutput)
}

// The location of scripts in the mounted volume.
func (o ScriptReferenceOutput) ScriptData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptReference) *string { return v.ScriptData }).(pulumi.StringPtrOutput)
}

// The storage source of the script: inline, workspace.
func (o ScriptReferenceOutput) ScriptSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptReference) *string { return v.ScriptSource }).(pulumi.StringPtrOutput)
}

// Optional time period passed to timeout command.
func (o ScriptReferenceOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptReference) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ScriptReferencePtrOutput struct{ *pulumi.OutputState }

func (ScriptReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptReference)(nil)).Elem()
}

func (o ScriptReferencePtrOutput) ToScriptReferencePtrOutput() ScriptReferencePtrOutput {
	return o
}

func (o ScriptReferencePtrOutput) ToScriptReferencePtrOutputWithContext(ctx context.Context) ScriptReferencePtrOutput {
	return o
}

func (o ScriptReferencePtrOutput) Elem() ScriptReferenceOutput {
	return o.ApplyT(func(v *ScriptReference) ScriptReference { return *v }).(ScriptReferenceOutput)
}

// Optional command line arguments passed to the script to run.
func (o ScriptReferencePtrOutput) ScriptArguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptReference) *string {
		if v == nil {
			return nil
		}
		return v.ScriptArguments
	}).(pulumi.StringPtrOutput)
}

// The location of scripts in the mounted volume.
func (o ScriptReferencePtrOutput) ScriptData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptReference) *string {
		if v == nil {
			return nil
		}
		return v.ScriptData
	}).(pulumi.StringPtrOutput)
}

// The storage source of the script: inline, workspace.
func (o ScriptReferencePtrOutput) ScriptSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptReference) *string {
		if v == nil {
			return nil
		}
		return v.ScriptSource
	}).(pulumi.StringPtrOutput)
}

// Optional time period passed to timeout command.
func (o ScriptReferencePtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptReference) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Script reference
type ScriptReferenceResponse struct {
	// Optional command line arguments passed to the script to run.
	ScriptArguments *string `pulumi:"scriptArguments"`
	// The location of scripts in the mounted volume.
	ScriptData *string `pulumi:"scriptData"`
	// The storage source of the script: inline, workspace.
	ScriptSource *string `pulumi:"scriptSource"`
	// Optional time period passed to timeout command.
	Timeout *string `pulumi:"timeout"`
}

// ScriptReferenceResponseInput is an input type that accepts ScriptReferenceResponseArgs and ScriptReferenceResponseOutput values.
// You can construct a concrete instance of `ScriptReferenceResponseInput` via:
//
//          ScriptReferenceResponseArgs{...}
type ScriptReferenceResponseInput interface {
	pulumi.Input

	ToScriptReferenceResponseOutput() ScriptReferenceResponseOutput
	ToScriptReferenceResponseOutputWithContext(context.Context) ScriptReferenceResponseOutput
}

// Script reference
type ScriptReferenceResponseArgs struct {
	// Optional command line arguments passed to the script to run.
	ScriptArguments pulumi.StringPtrInput `pulumi:"scriptArguments"`
	// The location of scripts in the mounted volume.
	ScriptData pulumi.StringPtrInput `pulumi:"scriptData"`
	// The storage source of the script: inline, workspace.
	ScriptSource pulumi.StringPtrInput `pulumi:"scriptSource"`
	// Optional time period passed to timeout command.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (ScriptReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptReferenceResponse)(nil)).Elem()
}

func (i ScriptReferenceResponseArgs) ToScriptReferenceResponseOutput() ScriptReferenceResponseOutput {
	return i.ToScriptReferenceResponseOutputWithContext(context.Background())
}

func (i ScriptReferenceResponseArgs) ToScriptReferenceResponseOutputWithContext(ctx context.Context) ScriptReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptReferenceResponseOutput)
}

func (i ScriptReferenceResponseArgs) ToScriptReferenceResponsePtrOutput() ScriptReferenceResponsePtrOutput {
	return i.ToScriptReferenceResponsePtrOutputWithContext(context.Background())
}

func (i ScriptReferenceResponseArgs) ToScriptReferenceResponsePtrOutputWithContext(ctx context.Context) ScriptReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptReferenceResponseOutput).ToScriptReferenceResponsePtrOutputWithContext(ctx)
}

// ScriptReferenceResponsePtrInput is an input type that accepts ScriptReferenceResponseArgs, ScriptReferenceResponsePtr and ScriptReferenceResponsePtrOutput values.
// You can construct a concrete instance of `ScriptReferenceResponsePtrInput` via:
//
//          ScriptReferenceResponseArgs{...}
//
//  or:
//
//          nil
type ScriptReferenceResponsePtrInput interface {
	pulumi.Input

	ToScriptReferenceResponsePtrOutput() ScriptReferenceResponsePtrOutput
	ToScriptReferenceResponsePtrOutputWithContext(context.Context) ScriptReferenceResponsePtrOutput
}

type scriptReferenceResponsePtrType ScriptReferenceResponseArgs

func ScriptReferenceResponsePtr(v *ScriptReferenceResponseArgs) ScriptReferenceResponsePtrInput {
	return (*scriptReferenceResponsePtrType)(v)
}

func (*scriptReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptReferenceResponse)(nil)).Elem()
}

func (i *scriptReferenceResponsePtrType) ToScriptReferenceResponsePtrOutput() ScriptReferenceResponsePtrOutput {
	return i.ToScriptReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *scriptReferenceResponsePtrType) ToScriptReferenceResponsePtrOutputWithContext(ctx context.Context) ScriptReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptReferenceResponsePtrOutput)
}

// Script reference
type ScriptReferenceResponseOutput struct{ *pulumi.OutputState }

func (ScriptReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptReferenceResponse)(nil)).Elem()
}

func (o ScriptReferenceResponseOutput) ToScriptReferenceResponseOutput() ScriptReferenceResponseOutput {
	return o
}

func (o ScriptReferenceResponseOutput) ToScriptReferenceResponseOutputWithContext(ctx context.Context) ScriptReferenceResponseOutput {
	return o
}

func (o ScriptReferenceResponseOutput) ToScriptReferenceResponsePtrOutput() ScriptReferenceResponsePtrOutput {
	return o.ToScriptReferenceResponsePtrOutputWithContext(context.Background())
}

func (o ScriptReferenceResponseOutput) ToScriptReferenceResponsePtrOutputWithContext(ctx context.Context) ScriptReferenceResponsePtrOutput {
	return o.ApplyT(func(v ScriptReferenceResponse) *ScriptReferenceResponse {
		return &v
	}).(ScriptReferenceResponsePtrOutput)
}

// Optional command line arguments passed to the script to run.
func (o ScriptReferenceResponseOutput) ScriptArguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptReferenceResponse) *string { return v.ScriptArguments }).(pulumi.StringPtrOutput)
}

// The location of scripts in the mounted volume.
func (o ScriptReferenceResponseOutput) ScriptData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptReferenceResponse) *string { return v.ScriptData }).(pulumi.StringPtrOutput)
}

// The storage source of the script: inline, workspace.
func (o ScriptReferenceResponseOutput) ScriptSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptReferenceResponse) *string { return v.ScriptSource }).(pulumi.StringPtrOutput)
}

// Optional time period passed to timeout command.
func (o ScriptReferenceResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptReferenceResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ScriptReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ScriptReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptReferenceResponse)(nil)).Elem()
}

func (o ScriptReferenceResponsePtrOutput) ToScriptReferenceResponsePtrOutput() ScriptReferenceResponsePtrOutput {
	return o
}

func (o ScriptReferenceResponsePtrOutput) ToScriptReferenceResponsePtrOutputWithContext(ctx context.Context) ScriptReferenceResponsePtrOutput {
	return o
}

func (o ScriptReferenceResponsePtrOutput) Elem() ScriptReferenceResponseOutput {
	return o.ApplyT(func(v *ScriptReferenceResponse) ScriptReferenceResponse { return *v }).(ScriptReferenceResponseOutput)
}

// Optional command line arguments passed to the script to run.
func (o ScriptReferenceResponsePtrOutput) ScriptArguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScriptArguments
	}).(pulumi.StringPtrOutput)
}

// The location of scripts in the mounted volume.
func (o ScriptReferenceResponsePtrOutput) ScriptData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScriptData
	}).(pulumi.StringPtrOutput)
}

// The storage source of the script: inline, workspace.
func (o ScriptReferenceResponsePtrOutput) ScriptSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScriptSource
	}).(pulumi.StringPtrOutput)
}

// Optional time period passed to timeout command.
func (o ScriptReferenceResponsePtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Customized setup scripts
type ScriptsToExecute struct {
	// Script that's run only once during provision of the compute.
	CreationScript *ScriptReference `pulumi:"creationScript"`
	// Script that's run every time the machine starts.
	StartupScript *ScriptReference `pulumi:"startupScript"`
}

// ScriptsToExecuteInput is an input type that accepts ScriptsToExecuteArgs and ScriptsToExecuteOutput values.
// You can construct a concrete instance of `ScriptsToExecuteInput` via:
//
//          ScriptsToExecuteArgs{...}
type ScriptsToExecuteInput interface {
	pulumi.Input

	ToScriptsToExecuteOutput() ScriptsToExecuteOutput
	ToScriptsToExecuteOutputWithContext(context.Context) ScriptsToExecuteOutput
}

// Customized setup scripts
type ScriptsToExecuteArgs struct {
	// Script that's run only once during provision of the compute.
	CreationScript ScriptReferencePtrInput `pulumi:"creationScript"`
	// Script that's run every time the machine starts.
	StartupScript ScriptReferencePtrInput `pulumi:"startupScript"`
}

func (ScriptsToExecuteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptsToExecute)(nil)).Elem()
}

func (i ScriptsToExecuteArgs) ToScriptsToExecuteOutput() ScriptsToExecuteOutput {
	return i.ToScriptsToExecuteOutputWithContext(context.Background())
}

func (i ScriptsToExecuteArgs) ToScriptsToExecuteOutputWithContext(ctx context.Context) ScriptsToExecuteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptsToExecuteOutput)
}

func (i ScriptsToExecuteArgs) ToScriptsToExecutePtrOutput() ScriptsToExecutePtrOutput {
	return i.ToScriptsToExecutePtrOutputWithContext(context.Background())
}

func (i ScriptsToExecuteArgs) ToScriptsToExecutePtrOutputWithContext(ctx context.Context) ScriptsToExecutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptsToExecuteOutput).ToScriptsToExecutePtrOutputWithContext(ctx)
}

// ScriptsToExecutePtrInput is an input type that accepts ScriptsToExecuteArgs, ScriptsToExecutePtr and ScriptsToExecutePtrOutput values.
// You can construct a concrete instance of `ScriptsToExecutePtrInput` via:
//
//          ScriptsToExecuteArgs{...}
//
//  or:
//
//          nil
type ScriptsToExecutePtrInput interface {
	pulumi.Input

	ToScriptsToExecutePtrOutput() ScriptsToExecutePtrOutput
	ToScriptsToExecutePtrOutputWithContext(context.Context) ScriptsToExecutePtrOutput
}

type scriptsToExecutePtrType ScriptsToExecuteArgs

func ScriptsToExecutePtr(v *ScriptsToExecuteArgs) ScriptsToExecutePtrInput {
	return (*scriptsToExecutePtrType)(v)
}

func (*scriptsToExecutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptsToExecute)(nil)).Elem()
}

func (i *scriptsToExecutePtrType) ToScriptsToExecutePtrOutput() ScriptsToExecutePtrOutput {
	return i.ToScriptsToExecutePtrOutputWithContext(context.Background())
}

func (i *scriptsToExecutePtrType) ToScriptsToExecutePtrOutputWithContext(ctx context.Context) ScriptsToExecutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptsToExecutePtrOutput)
}

// Customized setup scripts
type ScriptsToExecuteOutput struct{ *pulumi.OutputState }

func (ScriptsToExecuteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptsToExecute)(nil)).Elem()
}

func (o ScriptsToExecuteOutput) ToScriptsToExecuteOutput() ScriptsToExecuteOutput {
	return o
}

func (o ScriptsToExecuteOutput) ToScriptsToExecuteOutputWithContext(ctx context.Context) ScriptsToExecuteOutput {
	return o
}

func (o ScriptsToExecuteOutput) ToScriptsToExecutePtrOutput() ScriptsToExecutePtrOutput {
	return o.ToScriptsToExecutePtrOutputWithContext(context.Background())
}

func (o ScriptsToExecuteOutput) ToScriptsToExecutePtrOutputWithContext(ctx context.Context) ScriptsToExecutePtrOutput {
	return o.ApplyT(func(v ScriptsToExecute) *ScriptsToExecute {
		return &v
	}).(ScriptsToExecutePtrOutput)
}

// Script that's run only once during provision of the compute.
func (o ScriptsToExecuteOutput) CreationScript() ScriptReferencePtrOutput {
	return o.ApplyT(func(v ScriptsToExecute) *ScriptReference { return v.CreationScript }).(ScriptReferencePtrOutput)
}

// Script that's run every time the machine starts.
func (o ScriptsToExecuteOutput) StartupScript() ScriptReferencePtrOutput {
	return o.ApplyT(func(v ScriptsToExecute) *ScriptReference { return v.StartupScript }).(ScriptReferencePtrOutput)
}

type ScriptsToExecutePtrOutput struct{ *pulumi.OutputState }

func (ScriptsToExecutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptsToExecute)(nil)).Elem()
}

func (o ScriptsToExecutePtrOutput) ToScriptsToExecutePtrOutput() ScriptsToExecutePtrOutput {
	return o
}

func (o ScriptsToExecutePtrOutput) ToScriptsToExecutePtrOutputWithContext(ctx context.Context) ScriptsToExecutePtrOutput {
	return o
}

func (o ScriptsToExecutePtrOutput) Elem() ScriptsToExecuteOutput {
	return o.ApplyT(func(v *ScriptsToExecute) ScriptsToExecute { return *v }).(ScriptsToExecuteOutput)
}

// Script that's run only once during provision of the compute.
func (o ScriptsToExecutePtrOutput) CreationScript() ScriptReferencePtrOutput {
	return o.ApplyT(func(v *ScriptsToExecute) *ScriptReference {
		if v == nil {
			return nil
		}
		return v.CreationScript
	}).(ScriptReferencePtrOutput)
}

// Script that's run every time the machine starts.
func (o ScriptsToExecutePtrOutput) StartupScript() ScriptReferencePtrOutput {
	return o.ApplyT(func(v *ScriptsToExecute) *ScriptReference {
		if v == nil {
			return nil
		}
		return v.StartupScript
	}).(ScriptReferencePtrOutput)
}

// Customized setup scripts
type ScriptsToExecuteResponse struct {
	// Script that's run only once during provision of the compute.
	CreationScript *ScriptReferenceResponse `pulumi:"creationScript"`
	// Script that's run every time the machine starts.
	StartupScript *ScriptReferenceResponse `pulumi:"startupScript"`
}

// ScriptsToExecuteResponseInput is an input type that accepts ScriptsToExecuteResponseArgs and ScriptsToExecuteResponseOutput values.
// You can construct a concrete instance of `ScriptsToExecuteResponseInput` via:
//
//          ScriptsToExecuteResponseArgs{...}
type ScriptsToExecuteResponseInput interface {
	pulumi.Input

	ToScriptsToExecuteResponseOutput() ScriptsToExecuteResponseOutput
	ToScriptsToExecuteResponseOutputWithContext(context.Context) ScriptsToExecuteResponseOutput
}

// Customized setup scripts
type ScriptsToExecuteResponseArgs struct {
	// Script that's run only once during provision of the compute.
	CreationScript ScriptReferenceResponsePtrInput `pulumi:"creationScript"`
	// Script that's run every time the machine starts.
	StartupScript ScriptReferenceResponsePtrInput `pulumi:"startupScript"`
}

func (ScriptsToExecuteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptsToExecuteResponse)(nil)).Elem()
}

func (i ScriptsToExecuteResponseArgs) ToScriptsToExecuteResponseOutput() ScriptsToExecuteResponseOutput {
	return i.ToScriptsToExecuteResponseOutputWithContext(context.Background())
}

func (i ScriptsToExecuteResponseArgs) ToScriptsToExecuteResponseOutputWithContext(ctx context.Context) ScriptsToExecuteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptsToExecuteResponseOutput)
}

func (i ScriptsToExecuteResponseArgs) ToScriptsToExecuteResponsePtrOutput() ScriptsToExecuteResponsePtrOutput {
	return i.ToScriptsToExecuteResponsePtrOutputWithContext(context.Background())
}

func (i ScriptsToExecuteResponseArgs) ToScriptsToExecuteResponsePtrOutputWithContext(ctx context.Context) ScriptsToExecuteResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptsToExecuteResponseOutput).ToScriptsToExecuteResponsePtrOutputWithContext(ctx)
}

// ScriptsToExecuteResponsePtrInput is an input type that accepts ScriptsToExecuteResponseArgs, ScriptsToExecuteResponsePtr and ScriptsToExecuteResponsePtrOutput values.
// You can construct a concrete instance of `ScriptsToExecuteResponsePtrInput` via:
//
//          ScriptsToExecuteResponseArgs{...}
//
//  or:
//
//          nil
type ScriptsToExecuteResponsePtrInput interface {
	pulumi.Input

	ToScriptsToExecuteResponsePtrOutput() ScriptsToExecuteResponsePtrOutput
	ToScriptsToExecuteResponsePtrOutputWithContext(context.Context) ScriptsToExecuteResponsePtrOutput
}

type scriptsToExecuteResponsePtrType ScriptsToExecuteResponseArgs

func ScriptsToExecuteResponsePtr(v *ScriptsToExecuteResponseArgs) ScriptsToExecuteResponsePtrInput {
	return (*scriptsToExecuteResponsePtrType)(v)
}

func (*scriptsToExecuteResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptsToExecuteResponse)(nil)).Elem()
}

func (i *scriptsToExecuteResponsePtrType) ToScriptsToExecuteResponsePtrOutput() ScriptsToExecuteResponsePtrOutput {
	return i.ToScriptsToExecuteResponsePtrOutputWithContext(context.Background())
}

func (i *scriptsToExecuteResponsePtrType) ToScriptsToExecuteResponsePtrOutputWithContext(ctx context.Context) ScriptsToExecuteResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptsToExecuteResponsePtrOutput)
}

// Customized setup scripts
type ScriptsToExecuteResponseOutput struct{ *pulumi.OutputState }

func (ScriptsToExecuteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptsToExecuteResponse)(nil)).Elem()
}

func (o ScriptsToExecuteResponseOutput) ToScriptsToExecuteResponseOutput() ScriptsToExecuteResponseOutput {
	return o
}

func (o ScriptsToExecuteResponseOutput) ToScriptsToExecuteResponseOutputWithContext(ctx context.Context) ScriptsToExecuteResponseOutput {
	return o
}

func (o ScriptsToExecuteResponseOutput) ToScriptsToExecuteResponsePtrOutput() ScriptsToExecuteResponsePtrOutput {
	return o.ToScriptsToExecuteResponsePtrOutputWithContext(context.Background())
}

func (o ScriptsToExecuteResponseOutput) ToScriptsToExecuteResponsePtrOutputWithContext(ctx context.Context) ScriptsToExecuteResponsePtrOutput {
	return o.ApplyT(func(v ScriptsToExecuteResponse) *ScriptsToExecuteResponse {
		return &v
	}).(ScriptsToExecuteResponsePtrOutput)
}

// Script that's run only once during provision of the compute.
func (o ScriptsToExecuteResponseOutput) CreationScript() ScriptReferenceResponsePtrOutput {
	return o.ApplyT(func(v ScriptsToExecuteResponse) *ScriptReferenceResponse { return v.CreationScript }).(ScriptReferenceResponsePtrOutput)
}

// Script that's run every time the machine starts.
func (o ScriptsToExecuteResponseOutput) StartupScript() ScriptReferenceResponsePtrOutput {
	return o.ApplyT(func(v ScriptsToExecuteResponse) *ScriptReferenceResponse { return v.StartupScript }).(ScriptReferenceResponsePtrOutput)
}

type ScriptsToExecuteResponsePtrOutput struct{ *pulumi.OutputState }

func (ScriptsToExecuteResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptsToExecuteResponse)(nil)).Elem()
}

func (o ScriptsToExecuteResponsePtrOutput) ToScriptsToExecuteResponsePtrOutput() ScriptsToExecuteResponsePtrOutput {
	return o
}

func (o ScriptsToExecuteResponsePtrOutput) ToScriptsToExecuteResponsePtrOutputWithContext(ctx context.Context) ScriptsToExecuteResponsePtrOutput {
	return o
}

func (o ScriptsToExecuteResponsePtrOutput) Elem() ScriptsToExecuteResponseOutput {
	return o.ApplyT(func(v *ScriptsToExecuteResponse) ScriptsToExecuteResponse { return *v }).(ScriptsToExecuteResponseOutput)
}

// Script that's run only once during provision of the compute.
func (o ScriptsToExecuteResponsePtrOutput) CreationScript() ScriptReferenceResponsePtrOutput {
	return o.ApplyT(func(v *ScriptsToExecuteResponse) *ScriptReferenceResponse {
		if v == nil {
			return nil
		}
		return v.CreationScript
	}).(ScriptReferenceResponsePtrOutput)
}

// Script that's run every time the machine starts.
func (o ScriptsToExecuteResponsePtrOutput) StartupScript() ScriptReferenceResponsePtrOutput {
	return o.ApplyT(func(v *ScriptsToExecuteResponse) *ScriptReferenceResponse {
		if v == nil {
			return nil
		}
		return v.StartupScript
	}).(ScriptReferenceResponsePtrOutput)
}

type ServiceManagedResourcesSettings struct {
	// The settings for the service managed cosmosdb account.
	CosmosDb *CosmosDbSettings `pulumi:"cosmosDb"`
}

// ServiceManagedResourcesSettingsInput is an input type that accepts ServiceManagedResourcesSettingsArgs and ServiceManagedResourcesSettingsOutput values.
// You can construct a concrete instance of `ServiceManagedResourcesSettingsInput` via:
//
//          ServiceManagedResourcesSettingsArgs{...}
type ServiceManagedResourcesSettingsInput interface {
	pulumi.Input

	ToServiceManagedResourcesSettingsOutput() ServiceManagedResourcesSettingsOutput
	ToServiceManagedResourcesSettingsOutputWithContext(context.Context) ServiceManagedResourcesSettingsOutput
}

type ServiceManagedResourcesSettingsArgs struct {
	// The settings for the service managed cosmosdb account.
	CosmosDb CosmosDbSettingsPtrInput `pulumi:"cosmosDb"`
}

func (ServiceManagedResourcesSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceManagedResourcesSettings)(nil)).Elem()
}

func (i ServiceManagedResourcesSettingsArgs) ToServiceManagedResourcesSettingsOutput() ServiceManagedResourcesSettingsOutput {
	return i.ToServiceManagedResourcesSettingsOutputWithContext(context.Background())
}

func (i ServiceManagedResourcesSettingsArgs) ToServiceManagedResourcesSettingsOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedResourcesSettingsOutput)
}

func (i ServiceManagedResourcesSettingsArgs) ToServiceManagedResourcesSettingsPtrOutput() ServiceManagedResourcesSettingsPtrOutput {
	return i.ToServiceManagedResourcesSettingsPtrOutputWithContext(context.Background())
}

func (i ServiceManagedResourcesSettingsArgs) ToServiceManagedResourcesSettingsPtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedResourcesSettingsOutput).ToServiceManagedResourcesSettingsPtrOutputWithContext(ctx)
}

// ServiceManagedResourcesSettingsPtrInput is an input type that accepts ServiceManagedResourcesSettingsArgs, ServiceManagedResourcesSettingsPtr and ServiceManagedResourcesSettingsPtrOutput values.
// You can construct a concrete instance of `ServiceManagedResourcesSettingsPtrInput` via:
//
//          ServiceManagedResourcesSettingsArgs{...}
//
//  or:
//
//          nil
type ServiceManagedResourcesSettingsPtrInput interface {
	pulumi.Input

	ToServiceManagedResourcesSettingsPtrOutput() ServiceManagedResourcesSettingsPtrOutput
	ToServiceManagedResourcesSettingsPtrOutputWithContext(context.Context) ServiceManagedResourcesSettingsPtrOutput
}

type serviceManagedResourcesSettingsPtrType ServiceManagedResourcesSettingsArgs

func ServiceManagedResourcesSettingsPtr(v *ServiceManagedResourcesSettingsArgs) ServiceManagedResourcesSettingsPtrInput {
	return (*serviceManagedResourcesSettingsPtrType)(v)
}

func (*serviceManagedResourcesSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceManagedResourcesSettings)(nil)).Elem()
}

func (i *serviceManagedResourcesSettingsPtrType) ToServiceManagedResourcesSettingsPtrOutput() ServiceManagedResourcesSettingsPtrOutput {
	return i.ToServiceManagedResourcesSettingsPtrOutputWithContext(context.Background())
}

func (i *serviceManagedResourcesSettingsPtrType) ToServiceManagedResourcesSettingsPtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedResourcesSettingsPtrOutput)
}

type ServiceManagedResourcesSettingsOutput struct{ *pulumi.OutputState }

func (ServiceManagedResourcesSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceManagedResourcesSettings)(nil)).Elem()
}

func (o ServiceManagedResourcesSettingsOutput) ToServiceManagedResourcesSettingsOutput() ServiceManagedResourcesSettingsOutput {
	return o
}

func (o ServiceManagedResourcesSettingsOutput) ToServiceManagedResourcesSettingsOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsOutput {
	return o
}

func (o ServiceManagedResourcesSettingsOutput) ToServiceManagedResourcesSettingsPtrOutput() ServiceManagedResourcesSettingsPtrOutput {
	return o.ToServiceManagedResourcesSettingsPtrOutputWithContext(context.Background())
}

func (o ServiceManagedResourcesSettingsOutput) ToServiceManagedResourcesSettingsPtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsPtrOutput {
	return o.ApplyT(func(v ServiceManagedResourcesSettings) *ServiceManagedResourcesSettings {
		return &v
	}).(ServiceManagedResourcesSettingsPtrOutput)
}

// The settings for the service managed cosmosdb account.
func (o ServiceManagedResourcesSettingsOutput) CosmosDb() CosmosDbSettingsPtrOutput {
	return o.ApplyT(func(v ServiceManagedResourcesSettings) *CosmosDbSettings { return v.CosmosDb }).(CosmosDbSettingsPtrOutput)
}

type ServiceManagedResourcesSettingsPtrOutput struct{ *pulumi.OutputState }

func (ServiceManagedResourcesSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceManagedResourcesSettings)(nil)).Elem()
}

func (o ServiceManagedResourcesSettingsPtrOutput) ToServiceManagedResourcesSettingsPtrOutput() ServiceManagedResourcesSettingsPtrOutput {
	return o
}

func (o ServiceManagedResourcesSettingsPtrOutput) ToServiceManagedResourcesSettingsPtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsPtrOutput {
	return o
}

func (o ServiceManagedResourcesSettingsPtrOutput) Elem() ServiceManagedResourcesSettingsOutput {
	return o.ApplyT(func(v *ServiceManagedResourcesSettings) ServiceManagedResourcesSettings { return *v }).(ServiceManagedResourcesSettingsOutput)
}

// The settings for the service managed cosmosdb account.
func (o ServiceManagedResourcesSettingsPtrOutput) CosmosDb() CosmosDbSettingsPtrOutput {
	return o.ApplyT(func(v *ServiceManagedResourcesSettings) *CosmosDbSettings {
		if v == nil {
			return nil
		}
		return v.CosmosDb
	}).(CosmosDbSettingsPtrOutput)
}

type ServiceManagedResourcesSettingsResponse struct {
	// The settings for the service managed cosmosdb account.
	CosmosDb *CosmosDbSettingsResponse `pulumi:"cosmosDb"`
}

// ServiceManagedResourcesSettingsResponseInput is an input type that accepts ServiceManagedResourcesSettingsResponseArgs and ServiceManagedResourcesSettingsResponseOutput values.
// You can construct a concrete instance of `ServiceManagedResourcesSettingsResponseInput` via:
//
//          ServiceManagedResourcesSettingsResponseArgs{...}
type ServiceManagedResourcesSettingsResponseInput interface {
	pulumi.Input

	ToServiceManagedResourcesSettingsResponseOutput() ServiceManagedResourcesSettingsResponseOutput
	ToServiceManagedResourcesSettingsResponseOutputWithContext(context.Context) ServiceManagedResourcesSettingsResponseOutput
}

type ServiceManagedResourcesSettingsResponseArgs struct {
	// The settings for the service managed cosmosdb account.
	CosmosDb CosmosDbSettingsResponsePtrInput `pulumi:"cosmosDb"`
}

func (ServiceManagedResourcesSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceManagedResourcesSettingsResponse)(nil)).Elem()
}

func (i ServiceManagedResourcesSettingsResponseArgs) ToServiceManagedResourcesSettingsResponseOutput() ServiceManagedResourcesSettingsResponseOutput {
	return i.ToServiceManagedResourcesSettingsResponseOutputWithContext(context.Background())
}

func (i ServiceManagedResourcesSettingsResponseArgs) ToServiceManagedResourcesSettingsResponseOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedResourcesSettingsResponseOutput)
}

func (i ServiceManagedResourcesSettingsResponseArgs) ToServiceManagedResourcesSettingsResponsePtrOutput() ServiceManagedResourcesSettingsResponsePtrOutput {
	return i.ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ServiceManagedResourcesSettingsResponseArgs) ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedResourcesSettingsResponseOutput).ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(ctx)
}

// ServiceManagedResourcesSettingsResponsePtrInput is an input type that accepts ServiceManagedResourcesSettingsResponseArgs, ServiceManagedResourcesSettingsResponsePtr and ServiceManagedResourcesSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ServiceManagedResourcesSettingsResponsePtrInput` via:
//
//          ServiceManagedResourcesSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ServiceManagedResourcesSettingsResponsePtrInput interface {
	pulumi.Input

	ToServiceManagedResourcesSettingsResponsePtrOutput() ServiceManagedResourcesSettingsResponsePtrOutput
	ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(context.Context) ServiceManagedResourcesSettingsResponsePtrOutput
}

type serviceManagedResourcesSettingsResponsePtrType ServiceManagedResourcesSettingsResponseArgs

func ServiceManagedResourcesSettingsResponsePtr(v *ServiceManagedResourcesSettingsResponseArgs) ServiceManagedResourcesSettingsResponsePtrInput {
	return (*serviceManagedResourcesSettingsResponsePtrType)(v)
}

func (*serviceManagedResourcesSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceManagedResourcesSettingsResponse)(nil)).Elem()
}

func (i *serviceManagedResourcesSettingsResponsePtrType) ToServiceManagedResourcesSettingsResponsePtrOutput() ServiceManagedResourcesSettingsResponsePtrOutput {
	return i.ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *serviceManagedResourcesSettingsResponsePtrType) ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedResourcesSettingsResponsePtrOutput)
}

type ServiceManagedResourcesSettingsResponseOutput struct{ *pulumi.OutputState }

func (ServiceManagedResourcesSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceManagedResourcesSettingsResponse)(nil)).Elem()
}

func (o ServiceManagedResourcesSettingsResponseOutput) ToServiceManagedResourcesSettingsResponseOutput() ServiceManagedResourcesSettingsResponseOutput {
	return o
}

func (o ServiceManagedResourcesSettingsResponseOutput) ToServiceManagedResourcesSettingsResponseOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsResponseOutput {
	return o
}

func (o ServiceManagedResourcesSettingsResponseOutput) ToServiceManagedResourcesSettingsResponsePtrOutput() ServiceManagedResourcesSettingsResponsePtrOutput {
	return o.ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ServiceManagedResourcesSettingsResponseOutput) ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsResponsePtrOutput {
	return o.ApplyT(func(v ServiceManagedResourcesSettingsResponse) *ServiceManagedResourcesSettingsResponse {
		return &v
	}).(ServiceManagedResourcesSettingsResponsePtrOutput)
}

// The settings for the service managed cosmosdb account.
func (o ServiceManagedResourcesSettingsResponseOutput) CosmosDb() CosmosDbSettingsResponsePtrOutput {
	return o.ApplyT(func(v ServiceManagedResourcesSettingsResponse) *CosmosDbSettingsResponse { return v.CosmosDb }).(CosmosDbSettingsResponsePtrOutput)
}

type ServiceManagedResourcesSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceManagedResourcesSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceManagedResourcesSettingsResponse)(nil)).Elem()
}

func (o ServiceManagedResourcesSettingsResponsePtrOutput) ToServiceManagedResourcesSettingsResponsePtrOutput() ServiceManagedResourcesSettingsResponsePtrOutput {
	return o
}

func (o ServiceManagedResourcesSettingsResponsePtrOutput) ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsResponsePtrOutput {
	return o
}

func (o ServiceManagedResourcesSettingsResponsePtrOutput) Elem() ServiceManagedResourcesSettingsResponseOutput {
	return o.ApplyT(func(v *ServiceManagedResourcesSettingsResponse) ServiceManagedResourcesSettingsResponse { return *v }).(ServiceManagedResourcesSettingsResponseOutput)
}

// The settings for the service managed cosmosdb account.
func (o ServiceManagedResourcesSettingsResponsePtrOutput) CosmosDb() CosmosDbSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ServiceManagedResourcesSettingsResponse) *CosmosDbSettingsResponse {
		if v == nil {
			return nil
		}
		return v.CosmosDb
	}).(CosmosDbSettingsResponsePtrOutput)
}

// Details of customized scripts to execute for setting up the cluster.
type SetupScripts struct {
	// Customized setup scripts
	Scripts *ScriptsToExecute `pulumi:"scripts"`
}

// SetupScriptsInput is an input type that accepts SetupScriptsArgs and SetupScriptsOutput values.
// You can construct a concrete instance of `SetupScriptsInput` via:
//
//          SetupScriptsArgs{...}
type SetupScriptsInput interface {
	pulumi.Input

	ToSetupScriptsOutput() SetupScriptsOutput
	ToSetupScriptsOutputWithContext(context.Context) SetupScriptsOutput
}

// Details of customized scripts to execute for setting up the cluster.
type SetupScriptsArgs struct {
	// Customized setup scripts
	Scripts ScriptsToExecutePtrInput `pulumi:"scripts"`
}

func (SetupScriptsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SetupScripts)(nil)).Elem()
}

func (i SetupScriptsArgs) ToSetupScriptsOutput() SetupScriptsOutput {
	return i.ToSetupScriptsOutputWithContext(context.Background())
}

func (i SetupScriptsArgs) ToSetupScriptsOutputWithContext(ctx context.Context) SetupScriptsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupScriptsOutput)
}

func (i SetupScriptsArgs) ToSetupScriptsPtrOutput() SetupScriptsPtrOutput {
	return i.ToSetupScriptsPtrOutputWithContext(context.Background())
}

func (i SetupScriptsArgs) ToSetupScriptsPtrOutputWithContext(ctx context.Context) SetupScriptsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupScriptsOutput).ToSetupScriptsPtrOutputWithContext(ctx)
}

// SetupScriptsPtrInput is an input type that accepts SetupScriptsArgs, SetupScriptsPtr and SetupScriptsPtrOutput values.
// You can construct a concrete instance of `SetupScriptsPtrInput` via:
//
//          SetupScriptsArgs{...}
//
//  or:
//
//          nil
type SetupScriptsPtrInput interface {
	pulumi.Input

	ToSetupScriptsPtrOutput() SetupScriptsPtrOutput
	ToSetupScriptsPtrOutputWithContext(context.Context) SetupScriptsPtrOutput
}

type setupScriptsPtrType SetupScriptsArgs

func SetupScriptsPtr(v *SetupScriptsArgs) SetupScriptsPtrInput {
	return (*setupScriptsPtrType)(v)
}

func (*setupScriptsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SetupScripts)(nil)).Elem()
}

func (i *setupScriptsPtrType) ToSetupScriptsPtrOutput() SetupScriptsPtrOutput {
	return i.ToSetupScriptsPtrOutputWithContext(context.Background())
}

func (i *setupScriptsPtrType) ToSetupScriptsPtrOutputWithContext(ctx context.Context) SetupScriptsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupScriptsPtrOutput)
}

// Details of customized scripts to execute for setting up the cluster.
type SetupScriptsOutput struct{ *pulumi.OutputState }

func (SetupScriptsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SetupScripts)(nil)).Elem()
}

func (o SetupScriptsOutput) ToSetupScriptsOutput() SetupScriptsOutput {
	return o
}

func (o SetupScriptsOutput) ToSetupScriptsOutputWithContext(ctx context.Context) SetupScriptsOutput {
	return o
}

func (o SetupScriptsOutput) ToSetupScriptsPtrOutput() SetupScriptsPtrOutput {
	return o.ToSetupScriptsPtrOutputWithContext(context.Background())
}

func (o SetupScriptsOutput) ToSetupScriptsPtrOutputWithContext(ctx context.Context) SetupScriptsPtrOutput {
	return o.ApplyT(func(v SetupScripts) *SetupScripts {
		return &v
	}).(SetupScriptsPtrOutput)
}

// Customized setup scripts
func (o SetupScriptsOutput) Scripts() ScriptsToExecutePtrOutput {
	return o.ApplyT(func(v SetupScripts) *ScriptsToExecute { return v.Scripts }).(ScriptsToExecutePtrOutput)
}

type SetupScriptsPtrOutput struct{ *pulumi.OutputState }

func (SetupScriptsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SetupScripts)(nil)).Elem()
}

func (o SetupScriptsPtrOutput) ToSetupScriptsPtrOutput() SetupScriptsPtrOutput {
	return o
}

func (o SetupScriptsPtrOutput) ToSetupScriptsPtrOutputWithContext(ctx context.Context) SetupScriptsPtrOutput {
	return o
}

func (o SetupScriptsPtrOutput) Elem() SetupScriptsOutput {
	return o.ApplyT(func(v *SetupScripts) SetupScripts { return *v }).(SetupScriptsOutput)
}

// Customized setup scripts
func (o SetupScriptsPtrOutput) Scripts() ScriptsToExecutePtrOutput {
	return o.ApplyT(func(v *SetupScripts) *ScriptsToExecute {
		if v == nil {
			return nil
		}
		return v.Scripts
	}).(ScriptsToExecutePtrOutput)
}

// Details of customized scripts to execute for setting up the cluster.
type SetupScriptsResponse struct {
	// Customized setup scripts
	Scripts *ScriptsToExecuteResponse `pulumi:"scripts"`
}

// SetupScriptsResponseInput is an input type that accepts SetupScriptsResponseArgs and SetupScriptsResponseOutput values.
// You can construct a concrete instance of `SetupScriptsResponseInput` via:
//
//          SetupScriptsResponseArgs{...}
type SetupScriptsResponseInput interface {
	pulumi.Input

	ToSetupScriptsResponseOutput() SetupScriptsResponseOutput
	ToSetupScriptsResponseOutputWithContext(context.Context) SetupScriptsResponseOutput
}

// Details of customized scripts to execute for setting up the cluster.
type SetupScriptsResponseArgs struct {
	// Customized setup scripts
	Scripts ScriptsToExecuteResponsePtrInput `pulumi:"scripts"`
}

func (SetupScriptsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SetupScriptsResponse)(nil)).Elem()
}

func (i SetupScriptsResponseArgs) ToSetupScriptsResponseOutput() SetupScriptsResponseOutput {
	return i.ToSetupScriptsResponseOutputWithContext(context.Background())
}

func (i SetupScriptsResponseArgs) ToSetupScriptsResponseOutputWithContext(ctx context.Context) SetupScriptsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupScriptsResponseOutput)
}

func (i SetupScriptsResponseArgs) ToSetupScriptsResponsePtrOutput() SetupScriptsResponsePtrOutput {
	return i.ToSetupScriptsResponsePtrOutputWithContext(context.Background())
}

func (i SetupScriptsResponseArgs) ToSetupScriptsResponsePtrOutputWithContext(ctx context.Context) SetupScriptsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupScriptsResponseOutput).ToSetupScriptsResponsePtrOutputWithContext(ctx)
}

// SetupScriptsResponsePtrInput is an input type that accepts SetupScriptsResponseArgs, SetupScriptsResponsePtr and SetupScriptsResponsePtrOutput values.
// You can construct a concrete instance of `SetupScriptsResponsePtrInput` via:
//
//          SetupScriptsResponseArgs{...}
//
//  or:
//
//          nil
type SetupScriptsResponsePtrInput interface {
	pulumi.Input

	ToSetupScriptsResponsePtrOutput() SetupScriptsResponsePtrOutput
	ToSetupScriptsResponsePtrOutputWithContext(context.Context) SetupScriptsResponsePtrOutput
}

type setupScriptsResponsePtrType SetupScriptsResponseArgs

func SetupScriptsResponsePtr(v *SetupScriptsResponseArgs) SetupScriptsResponsePtrInput {
	return (*setupScriptsResponsePtrType)(v)
}

func (*setupScriptsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SetupScriptsResponse)(nil)).Elem()
}

func (i *setupScriptsResponsePtrType) ToSetupScriptsResponsePtrOutput() SetupScriptsResponsePtrOutput {
	return i.ToSetupScriptsResponsePtrOutputWithContext(context.Background())
}

func (i *setupScriptsResponsePtrType) ToSetupScriptsResponsePtrOutputWithContext(ctx context.Context) SetupScriptsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupScriptsResponsePtrOutput)
}

// Details of customized scripts to execute for setting up the cluster.
type SetupScriptsResponseOutput struct{ *pulumi.OutputState }

func (SetupScriptsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SetupScriptsResponse)(nil)).Elem()
}

func (o SetupScriptsResponseOutput) ToSetupScriptsResponseOutput() SetupScriptsResponseOutput {
	return o
}

func (o SetupScriptsResponseOutput) ToSetupScriptsResponseOutputWithContext(ctx context.Context) SetupScriptsResponseOutput {
	return o
}

func (o SetupScriptsResponseOutput) ToSetupScriptsResponsePtrOutput() SetupScriptsResponsePtrOutput {
	return o.ToSetupScriptsResponsePtrOutputWithContext(context.Background())
}

func (o SetupScriptsResponseOutput) ToSetupScriptsResponsePtrOutputWithContext(ctx context.Context) SetupScriptsResponsePtrOutput {
	return o.ApplyT(func(v SetupScriptsResponse) *SetupScriptsResponse {
		return &v
	}).(SetupScriptsResponsePtrOutput)
}

// Customized setup scripts
func (o SetupScriptsResponseOutput) Scripts() ScriptsToExecuteResponsePtrOutput {
	return o.ApplyT(func(v SetupScriptsResponse) *ScriptsToExecuteResponse { return v.Scripts }).(ScriptsToExecuteResponsePtrOutput)
}

type SetupScriptsResponsePtrOutput struct{ *pulumi.OutputState }

func (SetupScriptsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SetupScriptsResponse)(nil)).Elem()
}

func (o SetupScriptsResponsePtrOutput) ToSetupScriptsResponsePtrOutput() SetupScriptsResponsePtrOutput {
	return o
}

func (o SetupScriptsResponsePtrOutput) ToSetupScriptsResponsePtrOutputWithContext(ctx context.Context) SetupScriptsResponsePtrOutput {
	return o
}

func (o SetupScriptsResponsePtrOutput) Elem() SetupScriptsResponseOutput {
	return o.ApplyT(func(v *SetupScriptsResponse) SetupScriptsResponse { return *v }).(SetupScriptsResponseOutput)
}

// Customized setup scripts
func (o SetupScriptsResponsePtrOutput) Scripts() ScriptsToExecuteResponsePtrOutput {
	return o.ApplyT(func(v *SetupScriptsResponse) *ScriptsToExecuteResponse {
		if v == nil {
			return nil
		}
		return v.Scripts
	}).(ScriptsToExecuteResponsePtrOutput)
}

type SharedPrivateLinkResource struct {
	// The private link resource group id.
	GroupId *string `pulumi:"groupId"`
	// Unique name of the private link.
	Name *string `pulumi:"name"`
	// The resource id that private link links to.
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Request message.
	RequestMessage *string `pulumi:"requestMessage"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// SharedPrivateLinkResourceInput is an input type that accepts SharedPrivateLinkResourceArgs and SharedPrivateLinkResourceOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceInput` via:
//
//          SharedPrivateLinkResourceArgs{...}
type SharedPrivateLinkResourceInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput
	ToSharedPrivateLinkResourceOutputWithContext(context.Context) SharedPrivateLinkResourceOutput
}

type SharedPrivateLinkResourceArgs struct {
	// The private link resource group id.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Unique name of the private link.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource id that private link links to.
	PrivateLinkResourceId pulumi.StringPtrInput `pulumi:"privateLinkResourceId"`
	// Request message.
	RequestMessage pulumi.StringPtrInput `pulumi:"requestMessage"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SharedPrivateLinkResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResource)(nil)).Elem()
}

func (i SharedPrivateLinkResourceArgs) ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput {
	return i.ToSharedPrivateLinkResourceOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceArgs) ToSharedPrivateLinkResourceOutputWithContext(ctx context.Context) SharedPrivateLinkResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceOutput)
}

// SharedPrivateLinkResourceArrayInput is an input type that accepts SharedPrivateLinkResourceArray and SharedPrivateLinkResourceArrayOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceArrayInput` via:
//
//          SharedPrivateLinkResourceArray{ SharedPrivateLinkResourceArgs{...} }
type SharedPrivateLinkResourceArrayInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceArrayOutput() SharedPrivateLinkResourceArrayOutput
	ToSharedPrivateLinkResourceArrayOutputWithContext(context.Context) SharedPrivateLinkResourceArrayOutput
}

type SharedPrivateLinkResourceArray []SharedPrivateLinkResourceInput

func (SharedPrivateLinkResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResource)(nil)).Elem()
}

func (i SharedPrivateLinkResourceArray) ToSharedPrivateLinkResourceArrayOutput() SharedPrivateLinkResourceArrayOutput {
	return i.ToSharedPrivateLinkResourceArrayOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceArray) ToSharedPrivateLinkResourceArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceArrayOutput)
}

type SharedPrivateLinkResourceOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResource)(nil)).Elem()
}

func (o SharedPrivateLinkResourceOutput) ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput {
	return o
}

func (o SharedPrivateLinkResourceOutput) ToSharedPrivateLinkResourceOutputWithContext(ctx context.Context) SharedPrivateLinkResourceOutput {
	return o
}

// The private link resource group id.
func (o SharedPrivateLinkResourceOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Unique name of the private link.
func (o SharedPrivateLinkResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource id that private link links to.
func (o SharedPrivateLinkResourceOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Request message.
func (o SharedPrivateLinkResourceOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o SharedPrivateLinkResourceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SharedPrivateLinkResourceArrayOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResource)(nil)).Elem()
}

func (o SharedPrivateLinkResourceArrayOutput) ToSharedPrivateLinkResourceArrayOutput() SharedPrivateLinkResourceArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceArrayOutput) ToSharedPrivateLinkResourceArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceArrayOutput) Index(i pulumi.IntInput) SharedPrivateLinkResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedPrivateLinkResource {
		return vs[0].([]SharedPrivateLinkResource)[vs[1].(int)]
	}).(SharedPrivateLinkResourceOutput)
}

type SharedPrivateLinkResourceResponse struct {
	// The private link resource group id.
	GroupId *string `pulumi:"groupId"`
	// Unique name of the private link.
	Name *string `pulumi:"name"`
	// The resource id that private link links to.
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Request message.
	RequestMessage *string `pulumi:"requestMessage"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// SharedPrivateLinkResourceResponseInput is an input type that accepts SharedPrivateLinkResourceResponseArgs and SharedPrivateLinkResourceResponseOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceResponseInput` via:
//
//          SharedPrivateLinkResourceResponseArgs{...}
type SharedPrivateLinkResourceResponseInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceResponseOutput() SharedPrivateLinkResourceResponseOutput
	ToSharedPrivateLinkResourceResponseOutputWithContext(context.Context) SharedPrivateLinkResourceResponseOutput
}

type SharedPrivateLinkResourceResponseArgs struct {
	// The private link resource group id.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Unique name of the private link.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource id that private link links to.
	PrivateLinkResourceId pulumi.StringPtrInput `pulumi:"privateLinkResourceId"`
	// Request message.
	RequestMessage pulumi.StringPtrInput `pulumi:"requestMessage"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SharedPrivateLinkResourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (i SharedPrivateLinkResourceResponseArgs) ToSharedPrivateLinkResourceResponseOutput() SharedPrivateLinkResourceResponseOutput {
	return i.ToSharedPrivateLinkResourceResponseOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceResponseArgs) ToSharedPrivateLinkResourceResponseOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceResponseOutput)
}

// SharedPrivateLinkResourceResponseArrayInput is an input type that accepts SharedPrivateLinkResourceResponseArray and SharedPrivateLinkResourceResponseArrayOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceResponseArrayInput` via:
//
//          SharedPrivateLinkResourceResponseArray{ SharedPrivateLinkResourceResponseArgs{...} }
type SharedPrivateLinkResourceResponseArrayInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceResponseArrayOutput() SharedPrivateLinkResourceResponseArrayOutput
	ToSharedPrivateLinkResourceResponseArrayOutputWithContext(context.Context) SharedPrivateLinkResourceResponseArrayOutput
}

type SharedPrivateLinkResourceResponseArray []SharedPrivateLinkResourceResponseInput

func (SharedPrivateLinkResourceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (i SharedPrivateLinkResourceResponseArray) ToSharedPrivateLinkResourceResponseArrayOutput() SharedPrivateLinkResourceResponseArrayOutput {
	return i.ToSharedPrivateLinkResourceResponseArrayOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceResponseArray) ToSharedPrivateLinkResourceResponseArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceResponseArrayOutput)
}

type SharedPrivateLinkResourceResponseOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourceResponseOutput) ToSharedPrivateLinkResourceResponseOutput() SharedPrivateLinkResourceResponseOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseOutput) ToSharedPrivateLinkResourceResponseOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseOutput {
	return o
}

// The private link resource group id.
func (o SharedPrivateLinkResourceResponseOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Unique name of the private link.
func (o SharedPrivateLinkResourceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource id that private link links to.
func (o SharedPrivateLinkResourceResponseOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Request message.
func (o SharedPrivateLinkResourceResponseOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o SharedPrivateLinkResourceResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SharedPrivateLinkResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourceResponseArrayOutput) ToSharedPrivateLinkResourceResponseArrayOutput() SharedPrivateLinkResourceResponseArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseArrayOutput) ToSharedPrivateLinkResourceResponseArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseArrayOutput) Index(i pulumi.IntInput) SharedPrivateLinkResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedPrivateLinkResourceResponse {
		return vs[0].([]SharedPrivateLinkResourceResponse)[vs[1].(int)]
	}).(SharedPrivateLinkResourceResponseOutput)
}

// Sku of the resource
type Sku struct {
	// Name of the sku
	Name *string `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Sku of the resource
type SkuArgs struct {
	// Name of the sku
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// Sku of the resource
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// Name of the sku
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// Name of the sku
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Sku of the resource
type SkuResponse struct {
	// Name of the sku
	Name *string `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier *string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// Sku of the resource
type SkuResponseArgs struct {
	// Name of the sku
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// Sku of the resource
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// Name of the sku
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// Name of the sku
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// The ssl configuration for scoring
type SslConfiguration struct {
	// Cert data
	Cert *string `pulumi:"cert"`
	// CNAME of the cert
	Cname *string `pulumi:"cname"`
	// Key data
	Key *string `pulumi:"key"`
	// Leaf domain label of public endpoint
	LeafDomainLabel *string `pulumi:"leafDomainLabel"`
	// Indicates whether to overwrite existing domain label.
	OverwriteExistingDomain *bool `pulumi:"overwriteExistingDomain"`
	// Enable or disable ssl for scoring
	Status *string `pulumi:"status"`
}

// SslConfigurationInput is an input type that accepts SslConfigurationArgs and SslConfigurationOutput values.
// You can construct a concrete instance of `SslConfigurationInput` via:
//
//          SslConfigurationArgs{...}
type SslConfigurationInput interface {
	pulumi.Input

	ToSslConfigurationOutput() SslConfigurationOutput
	ToSslConfigurationOutputWithContext(context.Context) SslConfigurationOutput
}

// The ssl configuration for scoring
type SslConfigurationArgs struct {
	// Cert data
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// CNAME of the cert
	Cname pulumi.StringPtrInput `pulumi:"cname"`
	// Key data
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Leaf domain label of public endpoint
	LeafDomainLabel pulumi.StringPtrInput `pulumi:"leafDomainLabel"`
	// Indicates whether to overwrite existing domain label.
	OverwriteExistingDomain pulumi.BoolPtrInput `pulumi:"overwriteExistingDomain"`
	// Enable or disable ssl for scoring
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SslConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfiguration)(nil)).Elem()
}

func (i SslConfigurationArgs) ToSslConfigurationOutput() SslConfigurationOutput {
	return i.ToSslConfigurationOutputWithContext(context.Background())
}

func (i SslConfigurationArgs) ToSslConfigurationOutputWithContext(ctx context.Context) SslConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationOutput)
}

func (i SslConfigurationArgs) ToSslConfigurationPtrOutput() SslConfigurationPtrOutput {
	return i.ToSslConfigurationPtrOutputWithContext(context.Background())
}

func (i SslConfigurationArgs) ToSslConfigurationPtrOutputWithContext(ctx context.Context) SslConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationOutput).ToSslConfigurationPtrOutputWithContext(ctx)
}

// SslConfigurationPtrInput is an input type that accepts SslConfigurationArgs, SslConfigurationPtr and SslConfigurationPtrOutput values.
// You can construct a concrete instance of `SslConfigurationPtrInput` via:
//
//          SslConfigurationArgs{...}
//
//  or:
//
//          nil
type SslConfigurationPtrInput interface {
	pulumi.Input

	ToSslConfigurationPtrOutput() SslConfigurationPtrOutput
	ToSslConfigurationPtrOutputWithContext(context.Context) SslConfigurationPtrOutput
}

type sslConfigurationPtrType SslConfigurationArgs

func SslConfigurationPtr(v *SslConfigurationArgs) SslConfigurationPtrInput {
	return (*sslConfigurationPtrType)(v)
}

func (*sslConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfiguration)(nil)).Elem()
}

func (i *sslConfigurationPtrType) ToSslConfigurationPtrOutput() SslConfigurationPtrOutput {
	return i.ToSslConfigurationPtrOutputWithContext(context.Background())
}

func (i *sslConfigurationPtrType) ToSslConfigurationPtrOutputWithContext(ctx context.Context) SslConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationPtrOutput)
}

// The ssl configuration for scoring
type SslConfigurationOutput struct{ *pulumi.OutputState }

func (SslConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfiguration)(nil)).Elem()
}

func (o SslConfigurationOutput) ToSslConfigurationOutput() SslConfigurationOutput {
	return o
}

func (o SslConfigurationOutput) ToSslConfigurationOutputWithContext(ctx context.Context) SslConfigurationOutput {
	return o
}

func (o SslConfigurationOutput) ToSslConfigurationPtrOutput() SslConfigurationPtrOutput {
	return o.ToSslConfigurationPtrOutputWithContext(context.Background())
}

func (o SslConfigurationOutput) ToSslConfigurationPtrOutputWithContext(ctx context.Context) SslConfigurationPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *SslConfiguration {
		return &v
	}).(SslConfigurationPtrOutput)
}

// Cert data
func (o SslConfigurationOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// CNAME of the cert
func (o SslConfigurationOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

// Key data
func (o SslConfigurationOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Leaf domain label of public endpoint
func (o SslConfigurationOutput) LeafDomainLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *string { return v.LeafDomainLabel }).(pulumi.StringPtrOutput)
}

// Indicates whether to overwrite existing domain label.
func (o SslConfigurationOutput) OverwriteExistingDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *bool { return v.OverwriteExistingDomain }).(pulumi.BoolPtrOutput)
}

// Enable or disable ssl for scoring
func (o SslConfigurationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SslConfigurationPtrOutput struct{ *pulumi.OutputState }

func (SslConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfiguration)(nil)).Elem()
}

func (o SslConfigurationPtrOutput) ToSslConfigurationPtrOutput() SslConfigurationPtrOutput {
	return o
}

func (o SslConfigurationPtrOutput) ToSslConfigurationPtrOutputWithContext(ctx context.Context) SslConfigurationPtrOutput {
	return o
}

func (o SslConfigurationPtrOutput) Elem() SslConfigurationOutput {
	return o.ApplyT(func(v *SslConfiguration) SslConfiguration { return *v }).(SslConfigurationOutput)
}

// Cert data
func (o SslConfigurationPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// CNAME of the cert
func (o SslConfigurationPtrOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Cname
	}).(pulumi.StringPtrOutput)
}

// Key data
func (o SslConfigurationPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Leaf domain label of public endpoint
func (o SslConfigurationPtrOutput) LeafDomainLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.LeafDomainLabel
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to overwrite existing domain label.
func (o SslConfigurationPtrOutput) OverwriteExistingDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SslConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.OverwriteExistingDomain
	}).(pulumi.BoolPtrOutput)
}

// Enable or disable ssl for scoring
func (o SslConfigurationPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The ssl configuration for scoring
type SslConfigurationResponse struct {
	// Cert data
	Cert *string `pulumi:"cert"`
	// CNAME of the cert
	Cname *string `pulumi:"cname"`
	// Key data
	Key *string `pulumi:"key"`
	// Leaf domain label of public endpoint
	LeafDomainLabel *string `pulumi:"leafDomainLabel"`
	// Indicates whether to overwrite existing domain label.
	OverwriteExistingDomain *bool `pulumi:"overwriteExistingDomain"`
	// Enable or disable ssl for scoring
	Status *string `pulumi:"status"`
}

// SslConfigurationResponseInput is an input type that accepts SslConfigurationResponseArgs and SslConfigurationResponseOutput values.
// You can construct a concrete instance of `SslConfigurationResponseInput` via:
//
//          SslConfigurationResponseArgs{...}
type SslConfigurationResponseInput interface {
	pulumi.Input

	ToSslConfigurationResponseOutput() SslConfigurationResponseOutput
	ToSslConfigurationResponseOutputWithContext(context.Context) SslConfigurationResponseOutput
}

// The ssl configuration for scoring
type SslConfigurationResponseArgs struct {
	// Cert data
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// CNAME of the cert
	Cname pulumi.StringPtrInput `pulumi:"cname"`
	// Key data
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Leaf domain label of public endpoint
	LeafDomainLabel pulumi.StringPtrInput `pulumi:"leafDomainLabel"`
	// Indicates whether to overwrite existing domain label.
	OverwriteExistingDomain pulumi.BoolPtrInput `pulumi:"overwriteExistingDomain"`
	// Enable or disable ssl for scoring
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SslConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigurationResponse)(nil)).Elem()
}

func (i SslConfigurationResponseArgs) ToSslConfigurationResponseOutput() SslConfigurationResponseOutput {
	return i.ToSslConfigurationResponseOutputWithContext(context.Background())
}

func (i SslConfigurationResponseArgs) ToSslConfigurationResponseOutputWithContext(ctx context.Context) SslConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationResponseOutput)
}

func (i SslConfigurationResponseArgs) ToSslConfigurationResponsePtrOutput() SslConfigurationResponsePtrOutput {
	return i.ToSslConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i SslConfigurationResponseArgs) ToSslConfigurationResponsePtrOutputWithContext(ctx context.Context) SslConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationResponseOutput).ToSslConfigurationResponsePtrOutputWithContext(ctx)
}

// SslConfigurationResponsePtrInput is an input type that accepts SslConfigurationResponseArgs, SslConfigurationResponsePtr and SslConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `SslConfigurationResponsePtrInput` via:
//
//          SslConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type SslConfigurationResponsePtrInput interface {
	pulumi.Input

	ToSslConfigurationResponsePtrOutput() SslConfigurationResponsePtrOutput
	ToSslConfigurationResponsePtrOutputWithContext(context.Context) SslConfigurationResponsePtrOutput
}

type sslConfigurationResponsePtrType SslConfigurationResponseArgs

func SslConfigurationResponsePtr(v *SslConfigurationResponseArgs) SslConfigurationResponsePtrInput {
	return (*sslConfigurationResponsePtrType)(v)
}

func (*sslConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfigurationResponse)(nil)).Elem()
}

func (i *sslConfigurationResponsePtrType) ToSslConfigurationResponsePtrOutput() SslConfigurationResponsePtrOutput {
	return i.ToSslConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *sslConfigurationResponsePtrType) ToSslConfigurationResponsePtrOutputWithContext(ctx context.Context) SslConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationResponsePtrOutput)
}

// The ssl configuration for scoring
type SslConfigurationResponseOutput struct{ *pulumi.OutputState }

func (SslConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigurationResponse)(nil)).Elem()
}

func (o SslConfigurationResponseOutput) ToSslConfigurationResponseOutput() SslConfigurationResponseOutput {
	return o
}

func (o SslConfigurationResponseOutput) ToSslConfigurationResponseOutputWithContext(ctx context.Context) SslConfigurationResponseOutput {
	return o
}

func (o SslConfigurationResponseOutput) ToSslConfigurationResponsePtrOutput() SslConfigurationResponsePtrOutput {
	return o.ToSslConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o SslConfigurationResponseOutput) ToSslConfigurationResponsePtrOutputWithContext(ctx context.Context) SslConfigurationResponsePtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *SslConfigurationResponse {
		return &v
	}).(SslConfigurationResponsePtrOutput)
}

// Cert data
func (o SslConfigurationResponseOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// CNAME of the cert
func (o SslConfigurationResponseOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

// Key data
func (o SslConfigurationResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Leaf domain label of public endpoint
func (o SslConfigurationResponseOutput) LeafDomainLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *string { return v.LeafDomainLabel }).(pulumi.StringPtrOutput)
}

// Indicates whether to overwrite existing domain label.
func (o SslConfigurationResponseOutput) OverwriteExistingDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *bool { return v.OverwriteExistingDomain }).(pulumi.BoolPtrOutput)
}

// Enable or disable ssl for scoring
func (o SslConfigurationResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SslConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (SslConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfigurationResponse)(nil)).Elem()
}

func (o SslConfigurationResponsePtrOutput) ToSslConfigurationResponsePtrOutput() SslConfigurationResponsePtrOutput {
	return o
}

func (o SslConfigurationResponsePtrOutput) ToSslConfigurationResponsePtrOutputWithContext(ctx context.Context) SslConfigurationResponsePtrOutput {
	return o
}

func (o SslConfigurationResponsePtrOutput) Elem() SslConfigurationResponseOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) SslConfigurationResponse { return *v }).(SslConfigurationResponseOutput)
}

// Cert data
func (o SslConfigurationResponsePtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// CNAME of the cert
func (o SslConfigurationResponsePtrOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cname
	}).(pulumi.StringPtrOutput)
}

// Key data
func (o SslConfigurationResponsePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Leaf domain label of public endpoint
func (o SslConfigurationResponsePtrOutput) LeafDomainLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.LeafDomainLabel
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to overwrite existing domain label.
func (o SslConfigurationResponsePtrOutput) OverwriteExistingDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.OverwriteExistingDomain
	}).(pulumi.BoolPtrOutput)
}

// Enable or disable ssl for scoring
func (o SslConfigurationResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// A SynapseSpark compute.
type SynapseSpark struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'SynapseSpark'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool                   `pulumi:"disableLocalAuth"`
	Properties       *SynapseSparkProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// SynapseSparkInput is an input type that accepts SynapseSparkArgs and SynapseSparkOutput values.
// You can construct a concrete instance of `SynapseSparkInput` via:
//
//          SynapseSparkArgs{...}
type SynapseSparkInput interface {
	pulumi.Input

	ToSynapseSparkOutput() SynapseSparkOutput
	ToSynapseSparkOutputWithContext(context.Context) SynapseSparkOutput
}

// A SynapseSpark compute.
type SynapseSparkArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'SynapseSpark'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput            `pulumi:"disableLocalAuth"`
	Properties       SynapseSparkPropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (SynapseSparkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SynapseSpark)(nil)).Elem()
}

func (i SynapseSparkArgs) ToSynapseSparkOutput() SynapseSparkOutput {
	return i.ToSynapseSparkOutputWithContext(context.Background())
}

func (i SynapseSparkArgs) ToSynapseSparkOutputWithContext(ctx context.Context) SynapseSparkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SynapseSparkOutput)
}

// A SynapseSpark compute.
type SynapseSparkOutput struct{ *pulumi.OutputState }

func (SynapseSparkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SynapseSpark)(nil)).Elem()
}

func (o SynapseSparkOutput) ToSynapseSparkOutput() SynapseSparkOutput {
	return o
}

func (o SynapseSparkOutput) ToSynapseSparkOutputWithContext(ctx context.Context) SynapseSparkOutput {
	return o
}

// Location for the underlying compute
func (o SynapseSparkOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSpark) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'SynapseSpark'.
func (o SynapseSparkOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v SynapseSpark) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o SynapseSparkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSpark) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o SynapseSparkOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SynapseSpark) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

func (o SynapseSparkOutput) Properties() SynapseSparkPropertiesPtrOutput {
	return o.ApplyT(func(v SynapseSpark) *SynapseSparkProperties { return v.Properties }).(SynapseSparkPropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o SynapseSparkOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSpark) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type SynapseSparkProperties struct {
	// Auto pause properties.
	AutoPauseProperties *AutoPauseProperties `pulumi:"autoPauseProperties"`
	// Auto scale properties.
	AutoScaleProperties *AutoScaleProperties `pulumi:"autoScaleProperties"`
	// The number of compute nodes currently assigned to the compute.
	NodeCount *int `pulumi:"nodeCount"`
	// Node size.
	NodeSize *string `pulumi:"nodeSize"`
	// Node size family.
	NodeSizeFamily *string `pulumi:"nodeSizeFamily"`
	// Pool name.
	PoolName *string `pulumi:"poolName"`
	// Name of the resource group in which workspace is located.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Spark version.
	SparkVersion *string `pulumi:"sparkVersion"`
	// Azure subscription identifier.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName *string `pulumi:"workspaceName"`
}

// SynapseSparkPropertiesInput is an input type that accepts SynapseSparkPropertiesArgs and SynapseSparkPropertiesOutput values.
// You can construct a concrete instance of `SynapseSparkPropertiesInput` via:
//
//          SynapseSparkPropertiesArgs{...}
type SynapseSparkPropertiesInput interface {
	pulumi.Input

	ToSynapseSparkPropertiesOutput() SynapseSparkPropertiesOutput
	ToSynapseSparkPropertiesOutputWithContext(context.Context) SynapseSparkPropertiesOutput
}

type SynapseSparkPropertiesArgs struct {
	// Auto pause properties.
	AutoPauseProperties AutoPausePropertiesPtrInput `pulumi:"autoPauseProperties"`
	// Auto scale properties.
	AutoScaleProperties AutoScalePropertiesPtrInput `pulumi:"autoScaleProperties"`
	// The number of compute nodes currently assigned to the compute.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
	// Node size.
	NodeSize pulumi.StringPtrInput `pulumi:"nodeSize"`
	// Node size family.
	NodeSizeFamily pulumi.StringPtrInput `pulumi:"nodeSizeFamily"`
	// Pool name.
	PoolName pulumi.StringPtrInput `pulumi:"poolName"`
	// Name of the resource group in which workspace is located.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Spark version.
	SparkVersion pulumi.StringPtrInput `pulumi:"sparkVersion"`
	// Azure subscription identifier.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName pulumi.StringPtrInput `pulumi:"workspaceName"`
}

func (SynapseSparkPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SynapseSparkProperties)(nil)).Elem()
}

func (i SynapseSparkPropertiesArgs) ToSynapseSparkPropertiesOutput() SynapseSparkPropertiesOutput {
	return i.ToSynapseSparkPropertiesOutputWithContext(context.Background())
}

func (i SynapseSparkPropertiesArgs) ToSynapseSparkPropertiesOutputWithContext(ctx context.Context) SynapseSparkPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SynapseSparkPropertiesOutput)
}

func (i SynapseSparkPropertiesArgs) ToSynapseSparkPropertiesPtrOutput() SynapseSparkPropertiesPtrOutput {
	return i.ToSynapseSparkPropertiesPtrOutputWithContext(context.Background())
}

func (i SynapseSparkPropertiesArgs) ToSynapseSparkPropertiesPtrOutputWithContext(ctx context.Context) SynapseSparkPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SynapseSparkPropertiesOutput).ToSynapseSparkPropertiesPtrOutputWithContext(ctx)
}

// SynapseSparkPropertiesPtrInput is an input type that accepts SynapseSparkPropertiesArgs, SynapseSparkPropertiesPtr and SynapseSparkPropertiesPtrOutput values.
// You can construct a concrete instance of `SynapseSparkPropertiesPtrInput` via:
//
//          SynapseSparkPropertiesArgs{...}
//
//  or:
//
//          nil
type SynapseSparkPropertiesPtrInput interface {
	pulumi.Input

	ToSynapseSparkPropertiesPtrOutput() SynapseSparkPropertiesPtrOutput
	ToSynapseSparkPropertiesPtrOutputWithContext(context.Context) SynapseSparkPropertiesPtrOutput
}

type synapseSparkPropertiesPtrType SynapseSparkPropertiesArgs

func SynapseSparkPropertiesPtr(v *SynapseSparkPropertiesArgs) SynapseSparkPropertiesPtrInput {
	return (*synapseSparkPropertiesPtrType)(v)
}

func (*synapseSparkPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SynapseSparkProperties)(nil)).Elem()
}

func (i *synapseSparkPropertiesPtrType) ToSynapseSparkPropertiesPtrOutput() SynapseSparkPropertiesPtrOutput {
	return i.ToSynapseSparkPropertiesPtrOutputWithContext(context.Background())
}

func (i *synapseSparkPropertiesPtrType) ToSynapseSparkPropertiesPtrOutputWithContext(ctx context.Context) SynapseSparkPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SynapseSparkPropertiesPtrOutput)
}

type SynapseSparkPropertiesOutput struct{ *pulumi.OutputState }

func (SynapseSparkPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SynapseSparkProperties)(nil)).Elem()
}

func (o SynapseSparkPropertiesOutput) ToSynapseSparkPropertiesOutput() SynapseSparkPropertiesOutput {
	return o
}

func (o SynapseSparkPropertiesOutput) ToSynapseSparkPropertiesOutputWithContext(ctx context.Context) SynapseSparkPropertiesOutput {
	return o
}

func (o SynapseSparkPropertiesOutput) ToSynapseSparkPropertiesPtrOutput() SynapseSparkPropertiesPtrOutput {
	return o.ToSynapseSparkPropertiesPtrOutputWithContext(context.Background())
}

func (o SynapseSparkPropertiesOutput) ToSynapseSparkPropertiesPtrOutputWithContext(ctx context.Context) SynapseSparkPropertiesPtrOutput {
	return o.ApplyT(func(v SynapseSparkProperties) *SynapseSparkProperties {
		return &v
	}).(SynapseSparkPropertiesPtrOutput)
}

// Auto pause properties.
func (o SynapseSparkPropertiesOutput) AutoPauseProperties() AutoPausePropertiesPtrOutput {
	return o.ApplyT(func(v SynapseSparkProperties) *AutoPauseProperties { return v.AutoPauseProperties }).(AutoPausePropertiesPtrOutput)
}

// Auto scale properties.
func (o SynapseSparkPropertiesOutput) AutoScaleProperties() AutoScalePropertiesPtrOutput {
	return o.ApplyT(func(v SynapseSparkProperties) *AutoScaleProperties { return v.AutoScaleProperties }).(AutoScalePropertiesPtrOutput)
}

// The number of compute nodes currently assigned to the compute.
func (o SynapseSparkPropertiesOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SynapseSparkProperties) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// Node size.
func (o SynapseSparkPropertiesOutput) NodeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSparkProperties) *string { return v.NodeSize }).(pulumi.StringPtrOutput)
}

// Node size family.
func (o SynapseSparkPropertiesOutput) NodeSizeFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSparkProperties) *string { return v.NodeSizeFamily }).(pulumi.StringPtrOutput)
}

// Pool name.
func (o SynapseSparkPropertiesOutput) PoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSparkProperties) *string { return v.PoolName }).(pulumi.StringPtrOutput)
}

// Name of the resource group in which workspace is located.
func (o SynapseSparkPropertiesOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSparkProperties) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Spark version.
func (o SynapseSparkPropertiesOutput) SparkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSparkProperties) *string { return v.SparkVersion }).(pulumi.StringPtrOutput)
}

// Azure subscription identifier.
func (o SynapseSparkPropertiesOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSparkProperties) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// Name of Azure Machine Learning workspace.
func (o SynapseSparkPropertiesOutput) WorkspaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSparkProperties) *string { return v.WorkspaceName }).(pulumi.StringPtrOutput)
}

type SynapseSparkPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SynapseSparkPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SynapseSparkProperties)(nil)).Elem()
}

func (o SynapseSparkPropertiesPtrOutput) ToSynapseSparkPropertiesPtrOutput() SynapseSparkPropertiesPtrOutput {
	return o
}

func (o SynapseSparkPropertiesPtrOutput) ToSynapseSparkPropertiesPtrOutputWithContext(ctx context.Context) SynapseSparkPropertiesPtrOutput {
	return o
}

func (o SynapseSparkPropertiesPtrOutput) Elem() SynapseSparkPropertiesOutput {
	return o.ApplyT(func(v *SynapseSparkProperties) SynapseSparkProperties { return *v }).(SynapseSparkPropertiesOutput)
}

// Auto pause properties.
func (o SynapseSparkPropertiesPtrOutput) AutoPauseProperties() AutoPausePropertiesPtrOutput {
	return o.ApplyT(func(v *SynapseSparkProperties) *AutoPauseProperties {
		if v == nil {
			return nil
		}
		return v.AutoPauseProperties
	}).(AutoPausePropertiesPtrOutput)
}

// Auto scale properties.
func (o SynapseSparkPropertiesPtrOutput) AutoScaleProperties() AutoScalePropertiesPtrOutput {
	return o.ApplyT(func(v *SynapseSparkProperties) *AutoScaleProperties {
		if v == nil {
			return nil
		}
		return v.AutoScaleProperties
	}).(AutoScalePropertiesPtrOutput)
}

// The number of compute nodes currently assigned to the compute.
func (o SynapseSparkPropertiesPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SynapseSparkProperties) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

// Node size.
func (o SynapseSparkPropertiesPtrOutput) NodeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SynapseSparkProperties) *string {
		if v == nil {
			return nil
		}
		return v.NodeSize
	}).(pulumi.StringPtrOutput)
}

// Node size family.
func (o SynapseSparkPropertiesPtrOutput) NodeSizeFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SynapseSparkProperties) *string {
		if v == nil {
			return nil
		}
		return v.NodeSizeFamily
	}).(pulumi.StringPtrOutput)
}

// Pool name.
func (o SynapseSparkPropertiesPtrOutput) PoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SynapseSparkProperties) *string {
		if v == nil {
			return nil
		}
		return v.PoolName
	}).(pulumi.StringPtrOutput)
}

// Name of the resource group in which workspace is located.
func (o SynapseSparkPropertiesPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SynapseSparkProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Spark version.
func (o SynapseSparkPropertiesPtrOutput) SparkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SynapseSparkProperties) *string {
		if v == nil {
			return nil
		}
		return v.SparkVersion
	}).(pulumi.StringPtrOutput)
}

// Azure subscription identifier.
func (o SynapseSparkPropertiesPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SynapseSparkProperties) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// Name of Azure Machine Learning workspace.
func (o SynapseSparkPropertiesPtrOutput) WorkspaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SynapseSparkProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceName
	}).(pulumi.StringPtrOutput)
}

// A SynapseSpark compute.
type SynapseSparkResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'SynapseSpark'.
	ComputeType string `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn string                          `pulumi:"modifiedOn"`
	Properties *SynapseSparkResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []ErrorResponseResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// SynapseSparkResponseInput is an input type that accepts SynapseSparkResponseArgs and SynapseSparkResponseOutput values.
// You can construct a concrete instance of `SynapseSparkResponseInput` via:
//
//          SynapseSparkResponseArgs{...}
type SynapseSparkResponseInput interface {
	pulumi.Input

	ToSynapseSparkResponseOutput() SynapseSparkResponseOutput
	ToSynapseSparkResponseOutputWithContext(context.Context) SynapseSparkResponseOutput
}

// A SynapseSpark compute.
type SynapseSparkResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'SynapseSpark'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn pulumi.StringInput                     `pulumi:"modifiedOn"`
	Properties SynapseSparkResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors ErrorResponseResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (SynapseSparkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SynapseSparkResponse)(nil)).Elem()
}

func (i SynapseSparkResponseArgs) ToSynapseSparkResponseOutput() SynapseSparkResponseOutput {
	return i.ToSynapseSparkResponseOutputWithContext(context.Background())
}

func (i SynapseSparkResponseArgs) ToSynapseSparkResponseOutputWithContext(ctx context.Context) SynapseSparkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SynapseSparkResponseOutput)
}

// A SynapseSpark compute.
type SynapseSparkResponseOutput struct{ *pulumi.OutputState }

func (SynapseSparkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SynapseSparkResponse)(nil)).Elem()
}

func (o SynapseSparkResponseOutput) ToSynapseSparkResponseOutput() SynapseSparkResponseOutput {
	return o
}

func (o SynapseSparkResponseOutput) ToSynapseSparkResponseOutputWithContext(ctx context.Context) SynapseSparkResponseOutput {
	return o
}

// Location for the underlying compute
func (o SynapseSparkResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSparkResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'SynapseSpark'.
func (o SynapseSparkResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v SynapseSparkResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The time at which the compute was created.
func (o SynapseSparkResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v SynapseSparkResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o SynapseSparkResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSparkResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o SynapseSparkResponseOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SynapseSparkResponse) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o SynapseSparkResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v SynapseSparkResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The time at which the compute was last modified.
func (o SynapseSparkResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v SynapseSparkResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

func (o SynapseSparkResponseOutput) Properties() SynapseSparkResponsePropertiesPtrOutput {
	return o.ApplyT(func(v SynapseSparkResponse) *SynapseSparkResponseProperties { return v.Properties }).(SynapseSparkResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o SynapseSparkResponseOutput) ProvisioningErrors() ErrorResponseResponseArrayOutput {
	return o.ApplyT(func(v SynapseSparkResponse) []ErrorResponseResponse { return v.ProvisioningErrors }).(ErrorResponseResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o SynapseSparkResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SynapseSparkResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o SynapseSparkResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSparkResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type SynapseSparkResponseProperties struct {
	// Auto pause properties.
	AutoPauseProperties *AutoPausePropertiesResponse `pulumi:"autoPauseProperties"`
	// Auto scale properties.
	AutoScaleProperties *AutoScalePropertiesResponse `pulumi:"autoScaleProperties"`
	// The number of compute nodes currently assigned to the compute.
	NodeCount *int `pulumi:"nodeCount"`
	// Node size.
	NodeSize *string `pulumi:"nodeSize"`
	// Node size family.
	NodeSizeFamily *string `pulumi:"nodeSizeFamily"`
	// Pool name.
	PoolName *string `pulumi:"poolName"`
	// Name of the resource group in which workspace is located.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Spark version.
	SparkVersion *string `pulumi:"sparkVersion"`
	// Azure subscription identifier.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName *string `pulumi:"workspaceName"`
}

// SynapseSparkResponsePropertiesInput is an input type that accepts SynapseSparkResponsePropertiesArgs and SynapseSparkResponsePropertiesOutput values.
// You can construct a concrete instance of `SynapseSparkResponsePropertiesInput` via:
//
//          SynapseSparkResponsePropertiesArgs{...}
type SynapseSparkResponsePropertiesInput interface {
	pulumi.Input

	ToSynapseSparkResponsePropertiesOutput() SynapseSparkResponsePropertiesOutput
	ToSynapseSparkResponsePropertiesOutputWithContext(context.Context) SynapseSparkResponsePropertiesOutput
}

type SynapseSparkResponsePropertiesArgs struct {
	// Auto pause properties.
	AutoPauseProperties AutoPausePropertiesResponsePtrInput `pulumi:"autoPauseProperties"`
	// Auto scale properties.
	AutoScaleProperties AutoScalePropertiesResponsePtrInput `pulumi:"autoScaleProperties"`
	// The number of compute nodes currently assigned to the compute.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
	// Node size.
	NodeSize pulumi.StringPtrInput `pulumi:"nodeSize"`
	// Node size family.
	NodeSizeFamily pulumi.StringPtrInput `pulumi:"nodeSizeFamily"`
	// Pool name.
	PoolName pulumi.StringPtrInput `pulumi:"poolName"`
	// Name of the resource group in which workspace is located.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Spark version.
	SparkVersion pulumi.StringPtrInput `pulumi:"sparkVersion"`
	// Azure subscription identifier.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName pulumi.StringPtrInput `pulumi:"workspaceName"`
}

func (SynapseSparkResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SynapseSparkResponseProperties)(nil)).Elem()
}

func (i SynapseSparkResponsePropertiesArgs) ToSynapseSparkResponsePropertiesOutput() SynapseSparkResponsePropertiesOutput {
	return i.ToSynapseSparkResponsePropertiesOutputWithContext(context.Background())
}

func (i SynapseSparkResponsePropertiesArgs) ToSynapseSparkResponsePropertiesOutputWithContext(ctx context.Context) SynapseSparkResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SynapseSparkResponsePropertiesOutput)
}

func (i SynapseSparkResponsePropertiesArgs) ToSynapseSparkResponsePropertiesPtrOutput() SynapseSparkResponsePropertiesPtrOutput {
	return i.ToSynapseSparkResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i SynapseSparkResponsePropertiesArgs) ToSynapseSparkResponsePropertiesPtrOutputWithContext(ctx context.Context) SynapseSparkResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SynapseSparkResponsePropertiesOutput).ToSynapseSparkResponsePropertiesPtrOutputWithContext(ctx)
}

// SynapseSparkResponsePropertiesPtrInput is an input type that accepts SynapseSparkResponsePropertiesArgs, SynapseSparkResponsePropertiesPtr and SynapseSparkResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `SynapseSparkResponsePropertiesPtrInput` via:
//
//          SynapseSparkResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type SynapseSparkResponsePropertiesPtrInput interface {
	pulumi.Input

	ToSynapseSparkResponsePropertiesPtrOutput() SynapseSparkResponsePropertiesPtrOutput
	ToSynapseSparkResponsePropertiesPtrOutputWithContext(context.Context) SynapseSparkResponsePropertiesPtrOutput
}

type synapseSparkResponsePropertiesPtrType SynapseSparkResponsePropertiesArgs

func SynapseSparkResponsePropertiesPtr(v *SynapseSparkResponsePropertiesArgs) SynapseSparkResponsePropertiesPtrInput {
	return (*synapseSparkResponsePropertiesPtrType)(v)
}

func (*synapseSparkResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SynapseSparkResponseProperties)(nil)).Elem()
}

func (i *synapseSparkResponsePropertiesPtrType) ToSynapseSparkResponsePropertiesPtrOutput() SynapseSparkResponsePropertiesPtrOutput {
	return i.ToSynapseSparkResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *synapseSparkResponsePropertiesPtrType) ToSynapseSparkResponsePropertiesPtrOutputWithContext(ctx context.Context) SynapseSparkResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SynapseSparkResponsePropertiesPtrOutput)
}

type SynapseSparkResponsePropertiesOutput struct{ *pulumi.OutputState }

func (SynapseSparkResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SynapseSparkResponseProperties)(nil)).Elem()
}

func (o SynapseSparkResponsePropertiesOutput) ToSynapseSparkResponsePropertiesOutput() SynapseSparkResponsePropertiesOutput {
	return o
}

func (o SynapseSparkResponsePropertiesOutput) ToSynapseSparkResponsePropertiesOutputWithContext(ctx context.Context) SynapseSparkResponsePropertiesOutput {
	return o
}

func (o SynapseSparkResponsePropertiesOutput) ToSynapseSparkResponsePropertiesPtrOutput() SynapseSparkResponsePropertiesPtrOutput {
	return o.ToSynapseSparkResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o SynapseSparkResponsePropertiesOutput) ToSynapseSparkResponsePropertiesPtrOutputWithContext(ctx context.Context) SynapseSparkResponsePropertiesPtrOutput {
	return o.ApplyT(func(v SynapseSparkResponseProperties) *SynapseSparkResponseProperties {
		return &v
	}).(SynapseSparkResponsePropertiesPtrOutput)
}

// Auto pause properties.
func (o SynapseSparkResponsePropertiesOutput) AutoPauseProperties() AutoPausePropertiesResponsePtrOutput {
	return o.ApplyT(func(v SynapseSparkResponseProperties) *AutoPausePropertiesResponse { return v.AutoPauseProperties }).(AutoPausePropertiesResponsePtrOutput)
}

// Auto scale properties.
func (o SynapseSparkResponsePropertiesOutput) AutoScaleProperties() AutoScalePropertiesResponsePtrOutput {
	return o.ApplyT(func(v SynapseSparkResponseProperties) *AutoScalePropertiesResponse { return v.AutoScaleProperties }).(AutoScalePropertiesResponsePtrOutput)
}

// The number of compute nodes currently assigned to the compute.
func (o SynapseSparkResponsePropertiesOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SynapseSparkResponseProperties) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// Node size.
func (o SynapseSparkResponsePropertiesOutput) NodeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSparkResponseProperties) *string { return v.NodeSize }).(pulumi.StringPtrOutput)
}

// Node size family.
func (o SynapseSparkResponsePropertiesOutput) NodeSizeFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSparkResponseProperties) *string { return v.NodeSizeFamily }).(pulumi.StringPtrOutput)
}

// Pool name.
func (o SynapseSparkResponsePropertiesOutput) PoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSparkResponseProperties) *string { return v.PoolName }).(pulumi.StringPtrOutput)
}

// Name of the resource group in which workspace is located.
func (o SynapseSparkResponsePropertiesOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSparkResponseProperties) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Spark version.
func (o SynapseSparkResponsePropertiesOutput) SparkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSparkResponseProperties) *string { return v.SparkVersion }).(pulumi.StringPtrOutput)
}

// Azure subscription identifier.
func (o SynapseSparkResponsePropertiesOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSparkResponseProperties) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// Name of Azure Machine Learning workspace.
func (o SynapseSparkResponsePropertiesOutput) WorkspaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SynapseSparkResponseProperties) *string { return v.WorkspaceName }).(pulumi.StringPtrOutput)
}

type SynapseSparkResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SynapseSparkResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SynapseSparkResponseProperties)(nil)).Elem()
}

func (o SynapseSparkResponsePropertiesPtrOutput) ToSynapseSparkResponsePropertiesPtrOutput() SynapseSparkResponsePropertiesPtrOutput {
	return o
}

func (o SynapseSparkResponsePropertiesPtrOutput) ToSynapseSparkResponsePropertiesPtrOutputWithContext(ctx context.Context) SynapseSparkResponsePropertiesPtrOutput {
	return o
}

func (o SynapseSparkResponsePropertiesPtrOutput) Elem() SynapseSparkResponsePropertiesOutput {
	return o.ApplyT(func(v *SynapseSparkResponseProperties) SynapseSparkResponseProperties { return *v }).(SynapseSparkResponsePropertiesOutput)
}

// Auto pause properties.
func (o SynapseSparkResponsePropertiesPtrOutput) AutoPauseProperties() AutoPausePropertiesResponsePtrOutput {
	return o.ApplyT(func(v *SynapseSparkResponseProperties) *AutoPausePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.AutoPauseProperties
	}).(AutoPausePropertiesResponsePtrOutput)
}

// Auto scale properties.
func (o SynapseSparkResponsePropertiesPtrOutput) AutoScaleProperties() AutoScalePropertiesResponsePtrOutput {
	return o.ApplyT(func(v *SynapseSparkResponseProperties) *AutoScalePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.AutoScaleProperties
	}).(AutoScalePropertiesResponsePtrOutput)
}

// The number of compute nodes currently assigned to the compute.
func (o SynapseSparkResponsePropertiesPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SynapseSparkResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

// Node size.
func (o SynapseSparkResponsePropertiesPtrOutput) NodeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SynapseSparkResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.NodeSize
	}).(pulumi.StringPtrOutput)
}

// Node size family.
func (o SynapseSparkResponsePropertiesPtrOutput) NodeSizeFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SynapseSparkResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.NodeSizeFamily
	}).(pulumi.StringPtrOutput)
}

// Pool name.
func (o SynapseSparkResponsePropertiesPtrOutput) PoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SynapseSparkResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.PoolName
	}).(pulumi.StringPtrOutput)
}

// Name of the resource group in which workspace is located.
func (o SynapseSparkResponsePropertiesPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SynapseSparkResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Spark version.
func (o SynapseSparkResponsePropertiesPtrOutput) SparkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SynapseSparkResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SparkVersion
	}).(pulumi.StringPtrOutput)
}

// Azure subscription identifier.
func (o SynapseSparkResponsePropertiesPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SynapseSparkResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// Name of Azure Machine Learning workspace.
func (o SynapseSparkResponsePropertiesPtrOutput) WorkspaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SynapseSparkResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceName
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// SystemDataResponseInput is an input type that accepts SystemDataResponseArgs and SystemDataResponseOutput values.
// You can construct a concrete instance of `SystemDataResponseInput` via:
//
//          SystemDataResponseArgs{...}
type SystemDataResponseInput interface {
	pulumi.Input

	ToSystemDataResponseOutput() SystemDataResponseOutput
	ToSystemDataResponseOutputWithContext(context.Context) SystemDataResponseOutput
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseArgs struct {
	// The timestamp of resource creation (UTC).
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy pulumi.StringPtrInput `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType pulumi.StringPtrInput `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt pulumi.StringPtrInput `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy pulumi.StringPtrInput `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType pulumi.StringPtrInput `pulumi:"lastModifiedByType"`
}

func (SystemDataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return i.ToSystemDataResponseOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput)
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput).ToSystemDataResponsePtrOutputWithContext(ctx)
}

// SystemDataResponsePtrInput is an input type that accepts SystemDataResponseArgs, SystemDataResponsePtr and SystemDataResponsePtrOutput values.
// You can construct a concrete instance of `SystemDataResponsePtrInput` via:
//
//          SystemDataResponseArgs{...}
//
//  or:
//
//          nil
type SystemDataResponsePtrInput interface {
	pulumi.Input

	ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput
	ToSystemDataResponsePtrOutputWithContext(context.Context) SystemDataResponsePtrOutput
}

type systemDataResponsePtrType SystemDataResponseArgs

func SystemDataResponsePtr(v *SystemDataResponseArgs) SystemDataResponsePtrInput {
	return (*systemDataResponsePtrType)(v)
}

func (*systemDataResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponsePtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *SystemDataResponse {
		return &v
	}).(SystemDataResponsePtrOutput)
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

type SystemDataResponsePtrOutput struct{ *pulumi.OutputState }

func (SystemDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) Elem() SystemDataResponseOutput {
	return o.ApplyT(func(v *SystemDataResponse) SystemDataResponse { return *v }).(SystemDataResponseOutput)
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponsePtrOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedBy
	}).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponsePtrOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByType
	}).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponsePtrOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedAt
	}).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponsePtrOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedBy
	}).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponsePtrOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedByType
	}).(pulumi.StringPtrOutput)
}

// A system service running on a compute.
type SystemServiceResponse struct {
	// Public IP address
	PublicIpAddress string `pulumi:"publicIpAddress"`
	// The type of this system service.
	SystemServiceType string `pulumi:"systemServiceType"`
	// The version for this type.
	Version string `pulumi:"version"`
}

// SystemServiceResponseInput is an input type that accepts SystemServiceResponseArgs and SystemServiceResponseOutput values.
// You can construct a concrete instance of `SystemServiceResponseInput` via:
//
//          SystemServiceResponseArgs{...}
type SystemServiceResponseInput interface {
	pulumi.Input

	ToSystemServiceResponseOutput() SystemServiceResponseOutput
	ToSystemServiceResponseOutputWithContext(context.Context) SystemServiceResponseOutput
}

// A system service running on a compute.
type SystemServiceResponseArgs struct {
	// Public IP address
	PublicIpAddress pulumi.StringInput `pulumi:"publicIpAddress"`
	// The type of this system service.
	SystemServiceType pulumi.StringInput `pulumi:"systemServiceType"`
	// The version for this type.
	Version pulumi.StringInput `pulumi:"version"`
}

func (SystemServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemServiceResponse)(nil)).Elem()
}

func (i SystemServiceResponseArgs) ToSystemServiceResponseOutput() SystemServiceResponseOutput {
	return i.ToSystemServiceResponseOutputWithContext(context.Background())
}

func (i SystemServiceResponseArgs) ToSystemServiceResponseOutputWithContext(ctx context.Context) SystemServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemServiceResponseOutput)
}

// SystemServiceResponseArrayInput is an input type that accepts SystemServiceResponseArray and SystemServiceResponseArrayOutput values.
// You can construct a concrete instance of `SystemServiceResponseArrayInput` via:
//
//          SystemServiceResponseArray{ SystemServiceResponseArgs{...} }
type SystemServiceResponseArrayInput interface {
	pulumi.Input

	ToSystemServiceResponseArrayOutput() SystemServiceResponseArrayOutput
	ToSystemServiceResponseArrayOutputWithContext(context.Context) SystemServiceResponseArrayOutput
}

type SystemServiceResponseArray []SystemServiceResponseInput

func (SystemServiceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemServiceResponse)(nil)).Elem()
}

func (i SystemServiceResponseArray) ToSystemServiceResponseArrayOutput() SystemServiceResponseArrayOutput {
	return i.ToSystemServiceResponseArrayOutputWithContext(context.Background())
}

func (i SystemServiceResponseArray) ToSystemServiceResponseArrayOutputWithContext(ctx context.Context) SystemServiceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemServiceResponseArrayOutput)
}

// A system service running on a compute.
type SystemServiceResponseOutput struct{ *pulumi.OutputState }

func (SystemServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemServiceResponse)(nil)).Elem()
}

func (o SystemServiceResponseOutput) ToSystemServiceResponseOutput() SystemServiceResponseOutput {
	return o
}

func (o SystemServiceResponseOutput) ToSystemServiceResponseOutputWithContext(ctx context.Context) SystemServiceResponseOutput {
	return o
}

// Public IP address
func (o SystemServiceResponseOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v SystemServiceResponse) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

// The type of this system service.
func (o SystemServiceResponseOutput) SystemServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v SystemServiceResponse) string { return v.SystemServiceType }).(pulumi.StringOutput)
}

// The version for this type.
func (o SystemServiceResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v SystemServiceResponse) string { return v.Version }).(pulumi.StringOutput)
}

type SystemServiceResponseArrayOutput struct{ *pulumi.OutputState }

func (SystemServiceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemServiceResponse)(nil)).Elem()
}

func (o SystemServiceResponseArrayOutput) ToSystemServiceResponseArrayOutput() SystemServiceResponseArrayOutput {
	return o
}

func (o SystemServiceResponseArrayOutput) ToSystemServiceResponseArrayOutputWithContext(ctx context.Context) SystemServiceResponseArrayOutput {
	return o
}

func (o SystemServiceResponseArrayOutput) Index(i pulumi.IntInput) SystemServiceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemServiceResponse {
		return vs[0].([]SystemServiceResponse)[vs[1].(int)]
	}).(SystemServiceResponseOutput)
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentials struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName string `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword *string `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey *string `pulumi:"adminUserSshPublicKey"`
}

// UserAccountCredentialsInput is an input type that accepts UserAccountCredentialsArgs and UserAccountCredentialsOutput values.
// You can construct a concrete instance of `UserAccountCredentialsInput` via:
//
//          UserAccountCredentialsArgs{...}
type UserAccountCredentialsInput interface {
	pulumi.Input

	ToUserAccountCredentialsOutput() UserAccountCredentialsOutput
	ToUserAccountCredentialsOutputWithContext(context.Context) UserAccountCredentialsOutput
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsArgs struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName pulumi.StringInput `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword pulumi.StringPtrInput `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey pulumi.StringPtrInput `pulumi:"adminUserSshPublicKey"`
}

func (UserAccountCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountCredentials)(nil)).Elem()
}

func (i UserAccountCredentialsArgs) ToUserAccountCredentialsOutput() UserAccountCredentialsOutput {
	return i.ToUserAccountCredentialsOutputWithContext(context.Background())
}

func (i UserAccountCredentialsArgs) ToUserAccountCredentialsOutputWithContext(ctx context.Context) UserAccountCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsOutput)
}

func (i UserAccountCredentialsArgs) ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput {
	return i.ToUserAccountCredentialsPtrOutputWithContext(context.Background())
}

func (i UserAccountCredentialsArgs) ToUserAccountCredentialsPtrOutputWithContext(ctx context.Context) UserAccountCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsOutput).ToUserAccountCredentialsPtrOutputWithContext(ctx)
}

// UserAccountCredentialsPtrInput is an input type that accepts UserAccountCredentialsArgs, UserAccountCredentialsPtr and UserAccountCredentialsPtrOutput values.
// You can construct a concrete instance of `UserAccountCredentialsPtrInput` via:
//
//          UserAccountCredentialsArgs{...}
//
//  or:
//
//          nil
type UserAccountCredentialsPtrInput interface {
	pulumi.Input

	ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput
	ToUserAccountCredentialsPtrOutputWithContext(context.Context) UserAccountCredentialsPtrOutput
}

type userAccountCredentialsPtrType UserAccountCredentialsArgs

func UserAccountCredentialsPtr(v *UserAccountCredentialsArgs) UserAccountCredentialsPtrInput {
	return (*userAccountCredentialsPtrType)(v)
}

func (*userAccountCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountCredentials)(nil)).Elem()
}

func (i *userAccountCredentialsPtrType) ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput {
	return i.ToUserAccountCredentialsPtrOutputWithContext(context.Background())
}

func (i *userAccountCredentialsPtrType) ToUserAccountCredentialsPtrOutputWithContext(ctx context.Context) UserAccountCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsPtrOutput)
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountCredentials)(nil)).Elem()
}

func (o UserAccountCredentialsOutput) ToUserAccountCredentialsOutput() UserAccountCredentialsOutput {
	return o
}

func (o UserAccountCredentialsOutput) ToUserAccountCredentialsOutputWithContext(ctx context.Context) UserAccountCredentialsOutput {
	return o
}

func (o UserAccountCredentialsOutput) ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput {
	return o.ToUserAccountCredentialsPtrOutputWithContext(context.Background())
}

func (o UserAccountCredentialsOutput) ToUserAccountCredentialsPtrOutputWithContext(ctx context.Context) UserAccountCredentialsPtrOutput {
	return o.ApplyT(func(v UserAccountCredentials) *UserAccountCredentials {
		return &v
	}).(UserAccountCredentialsPtrOutput)
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsOutput) AdminUserName() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccountCredentials) string { return v.AdminUserName }).(pulumi.StringOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentials) *string { return v.AdminUserPassword }).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentials) *string { return v.AdminUserSshPublicKey }).(pulumi.StringPtrOutput)
}

type UserAccountCredentialsPtrOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountCredentials)(nil)).Elem()
}

func (o UserAccountCredentialsPtrOutput) ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput {
	return o
}

func (o UserAccountCredentialsPtrOutput) ToUserAccountCredentialsPtrOutputWithContext(ctx context.Context) UserAccountCredentialsPtrOutput {
	return o
}

func (o UserAccountCredentialsPtrOutput) Elem() UserAccountCredentialsOutput {
	return o.ApplyT(func(v *UserAccountCredentials) UserAccountCredentials { return *v }).(UserAccountCredentialsOutput)
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsPtrOutput) AdminUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUserName
	}).(pulumi.StringPtrOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsPtrOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserPassword
	}).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsPtrOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserSshPublicKey
	}).(pulumi.StringPtrOutput)
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsResponse struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName string `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword *string `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey *string `pulumi:"adminUserSshPublicKey"`
}

// UserAccountCredentialsResponseInput is an input type that accepts UserAccountCredentialsResponseArgs and UserAccountCredentialsResponseOutput values.
// You can construct a concrete instance of `UserAccountCredentialsResponseInput` via:
//
//          UserAccountCredentialsResponseArgs{...}
type UserAccountCredentialsResponseInput interface {
	pulumi.Input

	ToUserAccountCredentialsResponseOutput() UserAccountCredentialsResponseOutput
	ToUserAccountCredentialsResponseOutputWithContext(context.Context) UserAccountCredentialsResponseOutput
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsResponseArgs struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName pulumi.StringInput `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword pulumi.StringPtrInput `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey pulumi.StringPtrInput `pulumi:"adminUserSshPublicKey"`
}

func (UserAccountCredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountCredentialsResponse)(nil)).Elem()
}

func (i UserAccountCredentialsResponseArgs) ToUserAccountCredentialsResponseOutput() UserAccountCredentialsResponseOutput {
	return i.ToUserAccountCredentialsResponseOutputWithContext(context.Background())
}

func (i UserAccountCredentialsResponseArgs) ToUserAccountCredentialsResponseOutputWithContext(ctx context.Context) UserAccountCredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsResponseOutput)
}

func (i UserAccountCredentialsResponseArgs) ToUserAccountCredentialsResponsePtrOutput() UserAccountCredentialsResponsePtrOutput {
	return i.ToUserAccountCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i UserAccountCredentialsResponseArgs) ToUserAccountCredentialsResponsePtrOutputWithContext(ctx context.Context) UserAccountCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsResponseOutput).ToUserAccountCredentialsResponsePtrOutputWithContext(ctx)
}

// UserAccountCredentialsResponsePtrInput is an input type that accepts UserAccountCredentialsResponseArgs, UserAccountCredentialsResponsePtr and UserAccountCredentialsResponsePtrOutput values.
// You can construct a concrete instance of `UserAccountCredentialsResponsePtrInput` via:
//
//          UserAccountCredentialsResponseArgs{...}
//
//  or:
//
//          nil
type UserAccountCredentialsResponsePtrInput interface {
	pulumi.Input

	ToUserAccountCredentialsResponsePtrOutput() UserAccountCredentialsResponsePtrOutput
	ToUserAccountCredentialsResponsePtrOutputWithContext(context.Context) UserAccountCredentialsResponsePtrOutput
}

type userAccountCredentialsResponsePtrType UserAccountCredentialsResponseArgs

func UserAccountCredentialsResponsePtr(v *UserAccountCredentialsResponseArgs) UserAccountCredentialsResponsePtrInput {
	return (*userAccountCredentialsResponsePtrType)(v)
}

func (*userAccountCredentialsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountCredentialsResponse)(nil)).Elem()
}

func (i *userAccountCredentialsResponsePtrType) ToUserAccountCredentialsResponsePtrOutput() UserAccountCredentialsResponsePtrOutput {
	return i.ToUserAccountCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i *userAccountCredentialsResponsePtrType) ToUserAccountCredentialsResponsePtrOutputWithContext(ctx context.Context) UserAccountCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsResponsePtrOutput)
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsResponseOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountCredentialsResponse)(nil)).Elem()
}

func (o UserAccountCredentialsResponseOutput) ToUserAccountCredentialsResponseOutput() UserAccountCredentialsResponseOutput {
	return o
}

func (o UserAccountCredentialsResponseOutput) ToUserAccountCredentialsResponseOutputWithContext(ctx context.Context) UserAccountCredentialsResponseOutput {
	return o
}

func (o UserAccountCredentialsResponseOutput) ToUserAccountCredentialsResponsePtrOutput() UserAccountCredentialsResponsePtrOutput {
	return o.ToUserAccountCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o UserAccountCredentialsResponseOutput) ToUserAccountCredentialsResponsePtrOutputWithContext(ctx context.Context) UserAccountCredentialsResponsePtrOutput {
	return o.ApplyT(func(v UserAccountCredentialsResponse) *UserAccountCredentialsResponse {
		return &v
	}).(UserAccountCredentialsResponsePtrOutput)
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsResponseOutput) AdminUserName() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccountCredentialsResponse) string { return v.AdminUserName }).(pulumi.StringOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsResponseOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentialsResponse) *string { return v.AdminUserPassword }).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsResponseOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentialsResponse) *string { return v.AdminUserSshPublicKey }).(pulumi.StringPtrOutput)
}

type UserAccountCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountCredentialsResponse)(nil)).Elem()
}

func (o UserAccountCredentialsResponsePtrOutput) ToUserAccountCredentialsResponsePtrOutput() UserAccountCredentialsResponsePtrOutput {
	return o
}

func (o UserAccountCredentialsResponsePtrOutput) ToUserAccountCredentialsResponsePtrOutputWithContext(ctx context.Context) UserAccountCredentialsResponsePtrOutput {
	return o
}

func (o UserAccountCredentialsResponsePtrOutput) Elem() UserAccountCredentialsResponseOutput {
	return o.ApplyT(func(v *UserAccountCredentialsResponse) UserAccountCredentialsResponse { return *v }).(UserAccountCredentialsResponseOutput)
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsResponsePtrOutput) AdminUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUserName
	}).(pulumi.StringPtrOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsResponsePtrOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserPassword
	}).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsResponsePtrOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserSshPublicKey
	}).(pulumi.StringPtrOutput)
}

// User Assigned Identity
type UserAssignedIdentityResponse struct {
	// The clientId(aka appId) of the user assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the user assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the user assigned identity.
	TenantId string `pulumi:"tenantId"`
}

// UserAssignedIdentityResponseInput is an input type that accepts UserAssignedIdentityResponseArgs and UserAssignedIdentityResponseOutput values.
// You can construct a concrete instance of `UserAssignedIdentityResponseInput` via:
//
//          UserAssignedIdentityResponseArgs{...}
type UserAssignedIdentityResponseInput interface {
	pulumi.Input

	ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput
	ToUserAssignedIdentityResponseOutputWithContext(context.Context) UserAssignedIdentityResponseOutput
}

// User Assigned Identity
type UserAssignedIdentityResponseArgs struct {
	// The clientId(aka appId) of the user assigned identity.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The principal ID of the user assigned identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant ID of the user assigned identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (UserAssignedIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (i UserAssignedIdentityResponseArgs) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return i.ToUserAssignedIdentityResponseOutputWithContext(context.Background())
}

func (i UserAssignedIdentityResponseArgs) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityResponseOutput)
}

// UserAssignedIdentityResponseMapInput is an input type that accepts UserAssignedIdentityResponseMap and UserAssignedIdentityResponseMapOutput values.
// You can construct a concrete instance of `UserAssignedIdentityResponseMapInput` via:
//
//          UserAssignedIdentityResponseMap{ "key": UserAssignedIdentityResponseArgs{...} }
type UserAssignedIdentityResponseMapInput interface {
	pulumi.Input

	ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput
	ToUserAssignedIdentityResponseMapOutputWithContext(context.Context) UserAssignedIdentityResponseMapOutput
}

type UserAssignedIdentityResponseMap map[string]UserAssignedIdentityResponseInput

func (UserAssignedIdentityResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (i UserAssignedIdentityResponseMap) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return i.ToUserAssignedIdentityResponseMapOutputWithContext(context.Background())
}

func (i UserAssignedIdentityResponseMap) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityResponseMapOutput)
}

// User Assigned Identity
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The clientId(aka appId) of the user assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the user assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the user assigned identity.
func (o UserAssignedIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachine struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool                     `pulumi:"disableLocalAuth"`
	Properties       *VirtualMachineProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// VirtualMachineInput is an input type that accepts VirtualMachineArgs and VirtualMachineOutput values.
// You can construct a concrete instance of `VirtualMachineInput` via:
//
//          VirtualMachineArgs{...}
type VirtualMachineInput interface {
	pulumi.Input

	ToVirtualMachineOutput() VirtualMachineOutput
	ToVirtualMachineOutputWithContext(context.Context) VirtualMachineOutput
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput              `pulumi:"disableLocalAuth"`
	Properties       VirtualMachinePropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (VirtualMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachine)(nil)).Elem()
}

func (i VirtualMachineArgs) ToVirtualMachineOutput() VirtualMachineOutput {
	return i.ToVirtualMachineOutputWithContext(context.Background())
}

func (i VirtualMachineArgs) ToVirtualMachineOutputWithContext(ctx context.Context) VirtualMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOutput)
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineOutput struct{ *pulumi.OutputState }

func (VirtualMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachine)(nil)).Elem()
}

func (o VirtualMachineOutput) ToVirtualMachineOutput() VirtualMachineOutput {
	return o
}

func (o VirtualMachineOutput) ToVirtualMachineOutputWithContext(ctx context.Context) VirtualMachineOutput {
	return o
}

// Location for the underlying compute
func (o VirtualMachineOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'VirtualMachine'.
func (o VirtualMachineOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachine) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o VirtualMachineOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o VirtualMachineOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

func (o VirtualMachineOutput) Properties() VirtualMachinePropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *VirtualMachineProperties { return v.Properties }).(VirtualMachinePropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o VirtualMachineOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImage struct {
	// Virtual Machine image path
	Id string `pulumi:"id"`
}

// VirtualMachineImageInput is an input type that accepts VirtualMachineImageArgs and VirtualMachineImageOutput values.
// You can construct a concrete instance of `VirtualMachineImageInput` via:
//
//          VirtualMachineImageArgs{...}
type VirtualMachineImageInput interface {
	pulumi.Input

	ToVirtualMachineImageOutput() VirtualMachineImageOutput
	ToVirtualMachineImageOutputWithContext(context.Context) VirtualMachineImageOutput
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageArgs struct {
	// Virtual Machine image path
	Id pulumi.StringInput `pulumi:"id"`
}

func (VirtualMachineImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineImage)(nil)).Elem()
}

func (i VirtualMachineImageArgs) ToVirtualMachineImageOutput() VirtualMachineImageOutput {
	return i.ToVirtualMachineImageOutputWithContext(context.Background())
}

func (i VirtualMachineImageArgs) ToVirtualMachineImageOutputWithContext(ctx context.Context) VirtualMachineImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageOutput)
}

func (i VirtualMachineImageArgs) ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput {
	return i.ToVirtualMachineImagePtrOutputWithContext(context.Background())
}

func (i VirtualMachineImageArgs) ToVirtualMachineImagePtrOutputWithContext(ctx context.Context) VirtualMachineImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageOutput).ToVirtualMachineImagePtrOutputWithContext(ctx)
}

// VirtualMachineImagePtrInput is an input type that accepts VirtualMachineImageArgs, VirtualMachineImagePtr and VirtualMachineImagePtrOutput values.
// You can construct a concrete instance of `VirtualMachineImagePtrInput` via:
//
//          VirtualMachineImageArgs{...}
//
//  or:
//
//          nil
type VirtualMachineImagePtrInput interface {
	pulumi.Input

	ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput
	ToVirtualMachineImagePtrOutputWithContext(context.Context) VirtualMachineImagePtrOutput
}

type virtualMachineImagePtrType VirtualMachineImageArgs

func VirtualMachineImagePtr(v *VirtualMachineImageArgs) VirtualMachineImagePtrInput {
	return (*virtualMachineImagePtrType)(v)
}

func (*virtualMachineImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineImage)(nil)).Elem()
}

func (i *virtualMachineImagePtrType) ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput {
	return i.ToVirtualMachineImagePtrOutputWithContext(context.Background())
}

func (i *virtualMachineImagePtrType) ToVirtualMachineImagePtrOutputWithContext(ctx context.Context) VirtualMachineImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImagePtrOutput)
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageOutput struct{ *pulumi.OutputState }

func (VirtualMachineImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineImage)(nil)).Elem()
}

func (o VirtualMachineImageOutput) ToVirtualMachineImageOutput() VirtualMachineImageOutput {
	return o
}

func (o VirtualMachineImageOutput) ToVirtualMachineImageOutputWithContext(ctx context.Context) VirtualMachineImageOutput {
	return o
}

func (o VirtualMachineImageOutput) ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput {
	return o.ToVirtualMachineImagePtrOutputWithContext(context.Background())
}

func (o VirtualMachineImageOutput) ToVirtualMachineImagePtrOutputWithContext(ctx context.Context) VirtualMachineImagePtrOutput {
	return o.ApplyT(func(v VirtualMachineImage) *VirtualMachineImage {
		return &v
	}).(VirtualMachineImagePtrOutput)
}

// Virtual Machine image path
func (o VirtualMachineImageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineImage) string { return v.Id }).(pulumi.StringOutput)
}

type VirtualMachineImagePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineImage)(nil)).Elem()
}

func (o VirtualMachineImagePtrOutput) ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput {
	return o
}

func (o VirtualMachineImagePtrOutput) ToVirtualMachineImagePtrOutputWithContext(ctx context.Context) VirtualMachineImagePtrOutput {
	return o
}

func (o VirtualMachineImagePtrOutput) Elem() VirtualMachineImageOutput {
	return o.ApplyT(func(v *VirtualMachineImage) VirtualMachineImage { return *v }).(VirtualMachineImageOutput)
}

// Virtual Machine image path
func (o VirtualMachineImagePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineImage) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageResponse struct {
	// Virtual Machine image path
	Id string `pulumi:"id"`
}

// VirtualMachineImageResponseInput is an input type that accepts VirtualMachineImageResponseArgs and VirtualMachineImageResponseOutput values.
// You can construct a concrete instance of `VirtualMachineImageResponseInput` via:
//
//          VirtualMachineImageResponseArgs{...}
type VirtualMachineImageResponseInput interface {
	pulumi.Input

	ToVirtualMachineImageResponseOutput() VirtualMachineImageResponseOutput
	ToVirtualMachineImageResponseOutputWithContext(context.Context) VirtualMachineImageResponseOutput
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageResponseArgs struct {
	// Virtual Machine image path
	Id pulumi.StringInput `pulumi:"id"`
}

func (VirtualMachineImageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineImageResponse)(nil)).Elem()
}

func (i VirtualMachineImageResponseArgs) ToVirtualMachineImageResponseOutput() VirtualMachineImageResponseOutput {
	return i.ToVirtualMachineImageResponseOutputWithContext(context.Background())
}

func (i VirtualMachineImageResponseArgs) ToVirtualMachineImageResponseOutputWithContext(ctx context.Context) VirtualMachineImageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageResponseOutput)
}

func (i VirtualMachineImageResponseArgs) ToVirtualMachineImageResponsePtrOutput() VirtualMachineImageResponsePtrOutput {
	return i.ToVirtualMachineImageResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineImageResponseArgs) ToVirtualMachineImageResponsePtrOutputWithContext(ctx context.Context) VirtualMachineImageResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageResponseOutput).ToVirtualMachineImageResponsePtrOutputWithContext(ctx)
}

// VirtualMachineImageResponsePtrInput is an input type that accepts VirtualMachineImageResponseArgs, VirtualMachineImageResponsePtr and VirtualMachineImageResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineImageResponsePtrInput` via:
//
//          VirtualMachineImageResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineImageResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineImageResponsePtrOutput() VirtualMachineImageResponsePtrOutput
	ToVirtualMachineImageResponsePtrOutputWithContext(context.Context) VirtualMachineImageResponsePtrOutput
}

type virtualMachineImageResponsePtrType VirtualMachineImageResponseArgs

func VirtualMachineImageResponsePtr(v *VirtualMachineImageResponseArgs) VirtualMachineImageResponsePtrInput {
	return (*virtualMachineImageResponsePtrType)(v)
}

func (*virtualMachineImageResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineImageResponse)(nil)).Elem()
}

func (i *virtualMachineImageResponsePtrType) ToVirtualMachineImageResponsePtrOutput() VirtualMachineImageResponsePtrOutput {
	return i.ToVirtualMachineImageResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineImageResponsePtrType) ToVirtualMachineImageResponsePtrOutputWithContext(ctx context.Context) VirtualMachineImageResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageResponsePtrOutput)
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineImageResponse)(nil)).Elem()
}

func (o VirtualMachineImageResponseOutput) ToVirtualMachineImageResponseOutput() VirtualMachineImageResponseOutput {
	return o
}

func (o VirtualMachineImageResponseOutput) ToVirtualMachineImageResponseOutputWithContext(ctx context.Context) VirtualMachineImageResponseOutput {
	return o
}

func (o VirtualMachineImageResponseOutput) ToVirtualMachineImageResponsePtrOutput() VirtualMachineImageResponsePtrOutput {
	return o.ToVirtualMachineImageResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineImageResponseOutput) ToVirtualMachineImageResponsePtrOutputWithContext(ctx context.Context) VirtualMachineImageResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineImageResponse) *VirtualMachineImageResponse {
		return &v
	}).(VirtualMachineImageResponsePtrOutput)
}

// Virtual Machine image path
func (o VirtualMachineImageResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineImageResponse) string { return v.Id }).(pulumi.StringOutput)
}

type VirtualMachineImageResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineImageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineImageResponse)(nil)).Elem()
}

func (o VirtualMachineImageResponsePtrOutput) ToVirtualMachineImageResponsePtrOutput() VirtualMachineImageResponsePtrOutput {
	return o
}

func (o VirtualMachineImageResponsePtrOutput) ToVirtualMachineImageResponsePtrOutputWithContext(ctx context.Context) VirtualMachineImageResponsePtrOutput {
	return o
}

func (o VirtualMachineImageResponsePtrOutput) Elem() VirtualMachineImageResponseOutput {
	return o.ApplyT(func(v *VirtualMachineImageResponse) VirtualMachineImageResponse { return *v }).(VirtualMachineImageResponseOutput)
}

// Virtual Machine image path
func (o VirtualMachineImageResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineImageResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineProperties struct {
	// Public IP address of the virtual machine.
	Address *string `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount *VirtualMachineSshCredentials `pulumi:"administratorAccount"`
	// Indicates whether this compute will be used for running notebooks.
	IsNotebookInstanceCompute *bool `pulumi:"isNotebookInstanceCompute"`
	// Port open for ssh connections.
	SshPort *int `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize *string `pulumi:"virtualMachineSize"`
}

// VirtualMachinePropertiesInput is an input type that accepts VirtualMachinePropertiesArgs and VirtualMachinePropertiesOutput values.
// You can construct a concrete instance of `VirtualMachinePropertiesInput` via:
//
//          VirtualMachinePropertiesArgs{...}
type VirtualMachinePropertiesInput interface {
	pulumi.Input

	ToVirtualMachinePropertiesOutput() VirtualMachinePropertiesOutput
	ToVirtualMachinePropertiesOutputWithContext(context.Context) VirtualMachinePropertiesOutput
}

type VirtualMachinePropertiesArgs struct {
	// Public IP address of the virtual machine.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount VirtualMachineSshCredentialsPtrInput `pulumi:"administratorAccount"`
	// Indicates whether this compute will be used for running notebooks.
	IsNotebookInstanceCompute pulumi.BoolPtrInput `pulumi:"isNotebookInstanceCompute"`
	// Port open for ssh connections.
	SshPort pulumi.IntPtrInput `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize pulumi.StringPtrInput `pulumi:"virtualMachineSize"`
}

func (VirtualMachinePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineProperties)(nil)).Elem()
}

func (i VirtualMachinePropertiesArgs) ToVirtualMachinePropertiesOutput() VirtualMachinePropertiesOutput {
	return i.ToVirtualMachinePropertiesOutputWithContext(context.Background())
}

func (i VirtualMachinePropertiesArgs) ToVirtualMachinePropertiesOutputWithContext(ctx context.Context) VirtualMachinePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachinePropertiesOutput)
}

func (i VirtualMachinePropertiesArgs) ToVirtualMachinePropertiesPtrOutput() VirtualMachinePropertiesPtrOutput {
	return i.ToVirtualMachinePropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualMachinePropertiesArgs) ToVirtualMachinePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachinePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachinePropertiesOutput).ToVirtualMachinePropertiesPtrOutputWithContext(ctx)
}

// VirtualMachinePropertiesPtrInput is an input type that accepts VirtualMachinePropertiesArgs, VirtualMachinePropertiesPtr and VirtualMachinePropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualMachinePropertiesPtrInput` via:
//
//          VirtualMachinePropertiesArgs{...}
//
//  or:
//
//          nil
type VirtualMachinePropertiesPtrInput interface {
	pulumi.Input

	ToVirtualMachinePropertiesPtrOutput() VirtualMachinePropertiesPtrOutput
	ToVirtualMachinePropertiesPtrOutputWithContext(context.Context) VirtualMachinePropertiesPtrOutput
}

type virtualMachinePropertiesPtrType VirtualMachinePropertiesArgs

func VirtualMachinePropertiesPtr(v *VirtualMachinePropertiesArgs) VirtualMachinePropertiesPtrInput {
	return (*virtualMachinePropertiesPtrType)(v)
}

func (*virtualMachinePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineProperties)(nil)).Elem()
}

func (i *virtualMachinePropertiesPtrType) ToVirtualMachinePropertiesPtrOutput() VirtualMachinePropertiesPtrOutput {
	return i.ToVirtualMachinePropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualMachinePropertiesPtrType) ToVirtualMachinePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachinePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachinePropertiesPtrOutput)
}

type VirtualMachinePropertiesOutput struct{ *pulumi.OutputState }

func (VirtualMachinePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineProperties)(nil)).Elem()
}

func (o VirtualMachinePropertiesOutput) ToVirtualMachinePropertiesOutput() VirtualMachinePropertiesOutput {
	return o
}

func (o VirtualMachinePropertiesOutput) ToVirtualMachinePropertiesOutputWithContext(ctx context.Context) VirtualMachinePropertiesOutput {
	return o
}

func (o VirtualMachinePropertiesOutput) ToVirtualMachinePropertiesPtrOutput() VirtualMachinePropertiesPtrOutput {
	return o.ToVirtualMachinePropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualMachinePropertiesOutput) ToVirtualMachinePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachinePropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachineProperties) *VirtualMachineProperties {
		return &v
	}).(VirtualMachinePropertiesPtrOutput)
}

// Public IP address of the virtual machine.
func (o VirtualMachinePropertiesOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineProperties) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachinePropertiesOutput) AdministratorAccount() VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyT(func(v VirtualMachineProperties) *VirtualMachineSshCredentials { return v.AdministratorAccount }).(VirtualMachineSshCredentialsPtrOutput)
}

// Indicates whether this compute will be used for running notebooks.
func (o VirtualMachinePropertiesOutput) IsNotebookInstanceCompute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineProperties) *bool { return v.IsNotebookInstanceCompute }).(pulumi.BoolPtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachinePropertiesOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineProperties) *int { return v.SshPort }).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachinePropertiesOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineProperties) *string { return v.VirtualMachineSize }).(pulumi.StringPtrOutput)
}

type VirtualMachinePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachinePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineProperties)(nil)).Elem()
}

func (o VirtualMachinePropertiesPtrOutput) ToVirtualMachinePropertiesPtrOutput() VirtualMachinePropertiesPtrOutput {
	return o
}

func (o VirtualMachinePropertiesPtrOutput) ToVirtualMachinePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachinePropertiesPtrOutput {
	return o
}

func (o VirtualMachinePropertiesPtrOutput) Elem() VirtualMachinePropertiesOutput {
	return o.ApplyT(func(v *VirtualMachineProperties) VirtualMachineProperties { return *v }).(VirtualMachinePropertiesOutput)
}

// Public IP address of the virtual machine.
func (o VirtualMachinePropertiesPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineProperties) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachinePropertiesPtrOutput) AdministratorAccount() VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyT(func(v *VirtualMachineProperties) *VirtualMachineSshCredentials {
		if v == nil {
			return nil
		}
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsPtrOutput)
}

// Indicates whether this compute will be used for running notebooks.
func (o VirtualMachinePropertiesPtrOutput) IsNotebookInstanceCompute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsNotebookInstanceCompute
	}).(pulumi.BoolPtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachinePropertiesPtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineProperties) *int {
		if v == nil {
			return nil
		}
		return v.SshPort
	}).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachinePropertiesPtrOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineProperties) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineSize
	}).(pulumi.StringPtrOutput)
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType string `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn string                            `pulumi:"modifiedOn"`
	Properties *VirtualMachineResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []ErrorResponseResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// VirtualMachineResponseInput is an input type that accepts VirtualMachineResponseArgs and VirtualMachineResponseOutput values.
// You can construct a concrete instance of `VirtualMachineResponseInput` via:
//
//          VirtualMachineResponseArgs{...}
type VirtualMachineResponseInput interface {
	pulumi.Input

	ToVirtualMachineResponseOutput() VirtualMachineResponseOutput
	ToVirtualMachineResponseOutputWithContext(context.Context) VirtualMachineResponseOutput
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn pulumi.StringInput                       `pulumi:"modifiedOn"`
	Properties VirtualMachineResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors ErrorResponseResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (VirtualMachineResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResponse)(nil)).Elem()
}

func (i VirtualMachineResponseArgs) ToVirtualMachineResponseOutput() VirtualMachineResponseOutput {
	return i.ToVirtualMachineResponseOutputWithContext(context.Background())
}

func (i VirtualMachineResponseArgs) ToVirtualMachineResponseOutputWithContext(ctx context.Context) VirtualMachineResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineResponseOutput)
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResponse)(nil)).Elem()
}

func (o VirtualMachineResponseOutput) ToVirtualMachineResponseOutput() VirtualMachineResponseOutput {
	return o
}

func (o VirtualMachineResponseOutput) ToVirtualMachineResponseOutputWithContext(ctx context.Context) VirtualMachineResponseOutput {
	return o
}

// Location for the underlying compute
func (o VirtualMachineResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'VirtualMachine'.
func (o VirtualMachineResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The time at which the compute was created.
func (o VirtualMachineResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o VirtualMachineResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o VirtualMachineResponseOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o VirtualMachineResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualMachineResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The time at which the compute was last modified.
func (o VirtualMachineResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

func (o VirtualMachineResponseOutput) Properties() VirtualMachineResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *VirtualMachineResponseProperties { return v.Properties }).(VirtualMachineResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o VirtualMachineResponseOutput) ProvisioningErrors() ErrorResponseResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineResponse) []ErrorResponseResponse { return v.ProvisioningErrors }).(ErrorResponseResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o VirtualMachineResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o VirtualMachineResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type VirtualMachineResponseProperties struct {
	// Public IP address of the virtual machine.
	Address *string `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount *VirtualMachineSshCredentialsResponse `pulumi:"administratorAccount"`
	// Indicates whether this compute will be used for running notebooks.
	IsNotebookInstanceCompute *bool `pulumi:"isNotebookInstanceCompute"`
	// Port open for ssh connections.
	SshPort *int `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize *string `pulumi:"virtualMachineSize"`
}

// VirtualMachineResponsePropertiesInput is an input type that accepts VirtualMachineResponsePropertiesArgs and VirtualMachineResponsePropertiesOutput values.
// You can construct a concrete instance of `VirtualMachineResponsePropertiesInput` via:
//
//          VirtualMachineResponsePropertiesArgs{...}
type VirtualMachineResponsePropertiesInput interface {
	pulumi.Input

	ToVirtualMachineResponsePropertiesOutput() VirtualMachineResponsePropertiesOutput
	ToVirtualMachineResponsePropertiesOutputWithContext(context.Context) VirtualMachineResponsePropertiesOutput
}

type VirtualMachineResponsePropertiesArgs struct {
	// Public IP address of the virtual machine.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount VirtualMachineSshCredentialsResponsePtrInput `pulumi:"administratorAccount"`
	// Indicates whether this compute will be used for running notebooks.
	IsNotebookInstanceCompute pulumi.BoolPtrInput `pulumi:"isNotebookInstanceCompute"`
	// Port open for ssh connections.
	SshPort pulumi.IntPtrInput `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize pulumi.StringPtrInput `pulumi:"virtualMachineSize"`
}

func (VirtualMachineResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResponseProperties)(nil)).Elem()
}

func (i VirtualMachineResponsePropertiesArgs) ToVirtualMachineResponsePropertiesOutput() VirtualMachineResponsePropertiesOutput {
	return i.ToVirtualMachineResponsePropertiesOutputWithContext(context.Background())
}

func (i VirtualMachineResponsePropertiesArgs) ToVirtualMachineResponsePropertiesOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineResponsePropertiesOutput)
}

func (i VirtualMachineResponsePropertiesArgs) ToVirtualMachineResponsePropertiesPtrOutput() VirtualMachineResponsePropertiesPtrOutput {
	return i.ToVirtualMachineResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualMachineResponsePropertiesArgs) ToVirtualMachineResponsePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineResponsePropertiesOutput).ToVirtualMachineResponsePropertiesPtrOutputWithContext(ctx)
}

// VirtualMachineResponsePropertiesPtrInput is an input type that accepts VirtualMachineResponsePropertiesArgs, VirtualMachineResponsePropertiesPtr and VirtualMachineResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualMachineResponsePropertiesPtrInput` via:
//
//          VirtualMachineResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type VirtualMachineResponsePropertiesPtrInput interface {
	pulumi.Input

	ToVirtualMachineResponsePropertiesPtrOutput() VirtualMachineResponsePropertiesPtrOutput
	ToVirtualMachineResponsePropertiesPtrOutputWithContext(context.Context) VirtualMachineResponsePropertiesPtrOutput
}

type virtualMachineResponsePropertiesPtrType VirtualMachineResponsePropertiesArgs

func VirtualMachineResponsePropertiesPtr(v *VirtualMachineResponsePropertiesArgs) VirtualMachineResponsePropertiesPtrInput {
	return (*virtualMachineResponsePropertiesPtrType)(v)
}

func (*virtualMachineResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineResponseProperties)(nil)).Elem()
}

func (i *virtualMachineResponsePropertiesPtrType) ToVirtualMachineResponsePropertiesPtrOutput() VirtualMachineResponsePropertiesPtrOutput {
	return i.ToVirtualMachineResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualMachineResponsePropertiesPtrType) ToVirtualMachineResponsePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineResponsePropertiesPtrOutput)
}

type VirtualMachineResponsePropertiesOutput struct{ *pulumi.OutputState }

func (VirtualMachineResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResponseProperties)(nil)).Elem()
}

func (o VirtualMachineResponsePropertiesOutput) ToVirtualMachineResponsePropertiesOutput() VirtualMachineResponsePropertiesOutput {
	return o
}

func (o VirtualMachineResponsePropertiesOutput) ToVirtualMachineResponsePropertiesOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesOutput {
	return o
}

func (o VirtualMachineResponsePropertiesOutput) ToVirtualMachineResponsePropertiesPtrOutput() VirtualMachineResponsePropertiesPtrOutput {
	return o.ToVirtualMachineResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualMachineResponsePropertiesOutput) ToVirtualMachineResponsePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponseProperties) *VirtualMachineResponseProperties {
		return &v
	}).(VirtualMachineResponsePropertiesPtrOutput)
}

// Public IP address of the virtual machine.
func (o VirtualMachineResponsePropertiesOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponseProperties) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachineResponsePropertiesOutput) AdministratorAccount() VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineResponseProperties) *VirtualMachineSshCredentialsResponse {
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Indicates whether this compute will be used for running notebooks.
func (o VirtualMachineResponsePropertiesOutput) IsNotebookInstanceCompute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponseProperties) *bool { return v.IsNotebookInstanceCompute }).(pulumi.BoolPtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachineResponsePropertiesOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponseProperties) *int { return v.SshPort }).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachineResponsePropertiesOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponseProperties) *string { return v.VirtualMachineSize }).(pulumi.StringPtrOutput)
}

type VirtualMachineResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineResponseProperties)(nil)).Elem()
}

func (o VirtualMachineResponsePropertiesPtrOutput) ToVirtualMachineResponsePropertiesPtrOutput() VirtualMachineResponsePropertiesPtrOutput {
	return o
}

func (o VirtualMachineResponsePropertiesPtrOutput) ToVirtualMachineResponsePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesPtrOutput {
	return o
}

func (o VirtualMachineResponsePropertiesPtrOutput) Elem() VirtualMachineResponsePropertiesOutput {
	return o.ApplyT(func(v *VirtualMachineResponseProperties) VirtualMachineResponseProperties { return *v }).(VirtualMachineResponsePropertiesOutput)
}

// Public IP address of the virtual machine.
func (o VirtualMachineResponsePropertiesPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachineResponsePropertiesPtrOutput) AdministratorAccount() VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineResponseProperties) *VirtualMachineSshCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Indicates whether this compute will be used for running notebooks.
func (o VirtualMachineResponsePropertiesPtrOutput) IsNotebookInstanceCompute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsNotebookInstanceCompute
	}).(pulumi.BoolPtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachineResponsePropertiesPtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.SshPort
	}).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachineResponsePropertiesPtrOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineSize
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentials struct {
	// Password of admin account
	Password *string `pulumi:"password"`
	// Private key data
	PrivateKeyData *string `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData *string `pulumi:"publicKeyData"`
	// Username of admin account
	Username *string `pulumi:"username"`
}

// VirtualMachineSshCredentialsInput is an input type that accepts VirtualMachineSshCredentialsArgs and VirtualMachineSshCredentialsOutput values.
// You can construct a concrete instance of `VirtualMachineSshCredentialsInput` via:
//
//          VirtualMachineSshCredentialsArgs{...}
type VirtualMachineSshCredentialsInput interface {
	pulumi.Input

	ToVirtualMachineSshCredentialsOutput() VirtualMachineSshCredentialsOutput
	ToVirtualMachineSshCredentialsOutputWithContext(context.Context) VirtualMachineSshCredentialsOutput
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsArgs struct {
	// Password of admin account
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Private key data
	PrivateKeyData pulumi.StringPtrInput `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData pulumi.StringPtrInput `pulumi:"publicKeyData"`
	// Username of admin account
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (VirtualMachineSshCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSshCredentials)(nil)).Elem()
}

func (i VirtualMachineSshCredentialsArgs) ToVirtualMachineSshCredentialsOutput() VirtualMachineSshCredentialsOutput {
	return i.ToVirtualMachineSshCredentialsOutputWithContext(context.Background())
}

func (i VirtualMachineSshCredentialsArgs) ToVirtualMachineSshCredentialsOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsOutput)
}

func (i VirtualMachineSshCredentialsArgs) ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput {
	return i.ToVirtualMachineSshCredentialsPtrOutputWithContext(context.Background())
}

func (i VirtualMachineSshCredentialsArgs) ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsOutput).ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx)
}

// VirtualMachineSshCredentialsPtrInput is an input type that accepts VirtualMachineSshCredentialsArgs, VirtualMachineSshCredentialsPtr and VirtualMachineSshCredentialsPtrOutput values.
// You can construct a concrete instance of `VirtualMachineSshCredentialsPtrInput` via:
//
//          VirtualMachineSshCredentialsArgs{...}
//
//  or:
//
//          nil
type VirtualMachineSshCredentialsPtrInput interface {
	pulumi.Input

	ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput
	ToVirtualMachineSshCredentialsPtrOutputWithContext(context.Context) VirtualMachineSshCredentialsPtrOutput
}

type virtualMachineSshCredentialsPtrType VirtualMachineSshCredentialsArgs

func VirtualMachineSshCredentialsPtr(v *VirtualMachineSshCredentialsArgs) VirtualMachineSshCredentialsPtrInput {
	return (*virtualMachineSshCredentialsPtrType)(v)
}

func (*virtualMachineSshCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSshCredentials)(nil)).Elem()
}

func (i *virtualMachineSshCredentialsPtrType) ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput {
	return i.ToVirtualMachineSshCredentialsPtrOutputWithContext(context.Background())
}

func (i *virtualMachineSshCredentialsPtrType) ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsPtrOutput)
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSshCredentials)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsOutput) ToVirtualMachineSshCredentialsOutput() VirtualMachineSshCredentialsOutput {
	return o
}

func (o VirtualMachineSshCredentialsOutput) ToVirtualMachineSshCredentialsOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsOutput {
	return o
}

func (o VirtualMachineSshCredentialsOutput) ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput {
	return o.ToVirtualMachineSshCredentialsPtrOutputWithContext(context.Background())
}

func (o VirtualMachineSshCredentialsOutput) ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *VirtualMachineSshCredentials {
		return &v
	}).(VirtualMachineSshCredentialsPtrOutput)
}

// Password of admin account
func (o VirtualMachineSshCredentialsOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *string { return v.PrivateKeyData }).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *string { return v.PublicKeyData }).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type VirtualMachineSshCredentialsPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSshCredentials)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsPtrOutput) ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsPtrOutput) ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsPtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsPtrOutput) Elem() VirtualMachineSshCredentialsOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) VirtualMachineSshCredentials { return *v }).(VirtualMachineSshCredentialsOutput)
}

// Password of admin account
func (o VirtualMachineSshCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsPtrOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyData
	}).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsPtrOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) *string {
		if v == nil {
			return nil
		}
		return v.PublicKeyData
	}).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsResponse struct {
	// Password of admin account
	Password *string `pulumi:"password"`
	// Private key data
	PrivateKeyData *string `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData *string `pulumi:"publicKeyData"`
	// Username of admin account
	Username *string `pulumi:"username"`
}

// VirtualMachineSshCredentialsResponseInput is an input type that accepts VirtualMachineSshCredentialsResponseArgs and VirtualMachineSshCredentialsResponseOutput values.
// You can construct a concrete instance of `VirtualMachineSshCredentialsResponseInput` via:
//
//          VirtualMachineSshCredentialsResponseArgs{...}
type VirtualMachineSshCredentialsResponseInput interface {
	pulumi.Input

	ToVirtualMachineSshCredentialsResponseOutput() VirtualMachineSshCredentialsResponseOutput
	ToVirtualMachineSshCredentialsResponseOutputWithContext(context.Context) VirtualMachineSshCredentialsResponseOutput
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsResponseArgs struct {
	// Password of admin account
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Private key data
	PrivateKeyData pulumi.StringPtrInput `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData pulumi.StringPtrInput `pulumi:"publicKeyData"`
	// Username of admin account
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (VirtualMachineSshCredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSshCredentialsResponse)(nil)).Elem()
}

func (i VirtualMachineSshCredentialsResponseArgs) ToVirtualMachineSshCredentialsResponseOutput() VirtualMachineSshCredentialsResponseOutput {
	return i.ToVirtualMachineSshCredentialsResponseOutputWithContext(context.Background())
}

func (i VirtualMachineSshCredentialsResponseArgs) ToVirtualMachineSshCredentialsResponseOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsResponseOutput)
}

func (i VirtualMachineSshCredentialsResponseArgs) ToVirtualMachineSshCredentialsResponsePtrOutput() VirtualMachineSshCredentialsResponsePtrOutput {
	return i.ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineSshCredentialsResponseArgs) ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsResponseOutput).ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(ctx)
}

// VirtualMachineSshCredentialsResponsePtrInput is an input type that accepts VirtualMachineSshCredentialsResponseArgs, VirtualMachineSshCredentialsResponsePtr and VirtualMachineSshCredentialsResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineSshCredentialsResponsePtrInput` via:
//
//          VirtualMachineSshCredentialsResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineSshCredentialsResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineSshCredentialsResponsePtrOutput() VirtualMachineSshCredentialsResponsePtrOutput
	ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(context.Context) VirtualMachineSshCredentialsResponsePtrOutput
}

type virtualMachineSshCredentialsResponsePtrType VirtualMachineSshCredentialsResponseArgs

func VirtualMachineSshCredentialsResponsePtr(v *VirtualMachineSshCredentialsResponseArgs) VirtualMachineSshCredentialsResponsePtrInput {
	return (*virtualMachineSshCredentialsResponsePtrType)(v)
}

func (*virtualMachineSshCredentialsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSshCredentialsResponse)(nil)).Elem()
}

func (i *virtualMachineSshCredentialsResponsePtrType) ToVirtualMachineSshCredentialsResponsePtrOutput() VirtualMachineSshCredentialsResponsePtrOutput {
	return i.ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineSshCredentialsResponsePtrType) ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSshCredentialsResponse)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsResponseOutput) ToVirtualMachineSshCredentialsResponseOutput() VirtualMachineSshCredentialsResponseOutput {
	return o
}

func (o VirtualMachineSshCredentialsResponseOutput) ToVirtualMachineSshCredentialsResponseOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponseOutput {
	return o
}

func (o VirtualMachineSshCredentialsResponseOutput) ToVirtualMachineSshCredentialsResponsePtrOutput() VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineSshCredentialsResponseOutput) ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *VirtualMachineSshCredentialsResponse {
		return &v
	}).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Password of admin account
func (o VirtualMachineSshCredentialsResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsResponseOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *string { return v.PrivateKeyData }).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsResponseOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *string { return v.PublicKeyData }).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type VirtualMachineSshCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSshCredentialsResponse)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsResponsePtrOutput) ToVirtualMachineSshCredentialsResponsePtrOutput() VirtualMachineSshCredentialsResponsePtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsResponsePtrOutput) ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponsePtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsResponsePtrOutput) Elem() VirtualMachineSshCredentialsResponseOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) VirtualMachineSshCredentialsResponse { return *v }).(VirtualMachineSshCredentialsResponseOutput)
}

// Password of admin account
func (o VirtualMachineSshCredentialsResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsResponsePtrOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyData
	}).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsResponsePtrOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicKeyData
	}).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AKSOutput{})
	pulumi.RegisterOutputType(AKSPropertiesOutput{})
	pulumi.RegisterOutputType(AKSPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AKSResponseOutput{})
	pulumi.RegisterOutputType(AKSResponsePropertiesOutput{})
	pulumi.RegisterOutputType(AKSResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AksNetworkingConfigurationOutput{})
	pulumi.RegisterOutputType(AksNetworkingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AksNetworkingConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AksNetworkingConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(AmlComputeOutput{})
	pulumi.RegisterOutputType(AmlComputeNodeInformationResponseOutput{})
	pulumi.RegisterOutputType(AmlComputeNodeInformationResponseArrayOutput{})
	pulumi.RegisterOutputType(AmlComputePropertiesOutput{})
	pulumi.RegisterOutputType(AmlComputePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AmlComputePropertiesResponseOutput{})
	pulumi.RegisterOutputType(AmlComputePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AmlComputeResponseOutput{})
	pulumi.RegisterOutputType(AssignedUserOutput{})
	pulumi.RegisterOutputType(AssignedUserPtrOutput{})
	pulumi.RegisterOutputType(AssignedUserResponseOutput{})
	pulumi.RegisterOutputType(AssignedUserResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoPausePropertiesOutput{})
	pulumi.RegisterOutputType(AutoPausePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AutoPausePropertiesResponseOutput{})
	pulumi.RegisterOutputType(AutoPausePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoScalePropertiesOutput{})
	pulumi.RegisterOutputType(AutoScalePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AutoScalePropertiesResponseOutput{})
	pulumi.RegisterOutputType(AutoScalePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceOutput{})
	pulumi.RegisterOutputType(ComputeInstanceApplicationResponseOutput{})
	pulumi.RegisterOutputType(ComputeInstanceApplicationResponseArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceConnectivityEndpointsResponseOutput{})
	pulumi.RegisterOutputType(ComputeInstanceConnectivityEndpointsResponsePtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceCreatedByResponseOutput{})
	pulumi.RegisterOutputType(ComputeInstanceCreatedByResponsePtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceLastOperationResponseOutput{})
	pulumi.RegisterOutputType(ComputeInstanceLastOperationResponsePtrOutput{})
	pulumi.RegisterOutputType(ComputeInstancePropertiesOutput{})
	pulumi.RegisterOutputType(ComputeInstancePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstancePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ComputeInstancePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceResponseOutput{})
	pulumi.RegisterOutputType(ComputeInstanceSshSettingsOutput{})
	pulumi.RegisterOutputType(ComputeInstanceSshSettingsPtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceSshSettingsResponseOutput{})
	pulumi.RegisterOutputType(ComputeInstanceSshSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(CosmosDbSettingsOutput{})
	pulumi.RegisterOutputType(CosmosDbSettingsPtrOutput{})
	pulumi.RegisterOutputType(CosmosDbSettingsResponseOutput{})
	pulumi.RegisterOutputType(CosmosDbSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DataFactoryOutput{})
	pulumi.RegisterOutputType(DataFactoryResponseOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsPropertiesOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsResponseOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsResponsePropertiesOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DatabricksOutput{})
	pulumi.RegisterOutputType(DatabricksPropertiesOutput{})
	pulumi.RegisterOutputType(DatabricksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DatabricksPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DatabricksPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DatabricksResponseOutput{})
	pulumi.RegisterOutputType(EncryptionPropertyOutput{})
	pulumi.RegisterOutputType(EncryptionPropertyPtrOutput{})
	pulumi.RegisterOutputType(EncryptionPropertyResponseOutput{})
	pulumi.RegisterOutputType(EncryptionPropertyResponsePtrOutput{})
	pulumi.RegisterOutputType(ErrorAdditionalInfoResponseOutput{})
	pulumi.RegisterOutputType(ErrorAdditionalInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponsePtrOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(ErrorResponseResponseOutput{})
	pulumi.RegisterOutputType(ErrorResponseResponseArrayOutput{})
	pulumi.RegisterOutputType(HDInsightOutput{})
	pulumi.RegisterOutputType(HDInsightPropertiesOutput{})
	pulumi.RegisterOutputType(HDInsightPropertiesPtrOutput{})
	pulumi.RegisterOutputType(HDInsightPropertiesResponseOutput{})
	pulumi.RegisterOutputType(HDInsightPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(HDInsightResponseOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityForCmkOutput{})
	pulumi.RegisterOutputType(IdentityForCmkPtrOutput{})
	pulumi.RegisterOutputType(IdentityForCmkResponseOutput{})
	pulumi.RegisterOutputType(IdentityForCmkResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(InstanceTypeSchemaOutput{})
	pulumi.RegisterOutputType(InstanceTypeSchemaMapOutput{})
	pulumi.RegisterOutputType(InstanceTypeSchemaResourcesOutput{})
	pulumi.RegisterOutputType(InstanceTypeSchemaResourcesPtrOutput{})
	pulumi.RegisterOutputType(InstanceTypeSchemaResponseOutput{})
	pulumi.RegisterOutputType(InstanceTypeSchemaResponseMapOutput{})
	pulumi.RegisterOutputType(InstanceTypeSchemaResponseResourcesOutput{})
	pulumi.RegisterOutputType(InstanceTypeSchemaResponseResourcesPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(KubernetesOutput{})
	pulumi.RegisterOutputType(KubernetesPropertiesOutput{})
	pulumi.RegisterOutputType(KubernetesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(KubernetesPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KubernetesPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(KubernetesResponseOutput{})
	pulumi.RegisterOutputType(ListNotebookKeysResultResponseOutput{})
	pulumi.RegisterOutputType(NodeStateCountsResponseOutput{})
	pulumi.RegisterOutputType(NodeStateCountsResponsePtrOutput{})
	pulumi.RegisterOutputType(NotebookPreparationErrorResponseOutput{})
	pulumi.RegisterOutputType(NotebookPreparationErrorResponsePtrOutput{})
	pulumi.RegisterOutputType(NotebookResourceInfoResponseOutput{})
	pulumi.RegisterOutputType(NotebookResourceInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(PasswordResponseOutput{})
	pulumi.RegisterOutputType(PasswordResponseArrayOutput{})
	pulumi.RegisterOutputType(PersonalComputeInstanceSettingsOutput{})
	pulumi.RegisterOutputType(PersonalComputeInstanceSettingsPtrOutput{})
	pulumi.RegisterOutputType(PersonalComputeInstanceSettingsResponseOutput{})
	pulumi.RegisterOutputType(PersonalComputeInstanceSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(RegistryListCredentialsResultResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdOutput{})
	pulumi.RegisterOutputType(ResourceIdPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdResponsePtrOutput{})
	pulumi.RegisterOutputType(ScaleSettingsOutput{})
	pulumi.RegisterOutputType(ScaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(ScaleSettingsResponseOutput{})
	pulumi.RegisterOutputType(ScaleSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ScriptReferenceOutput{})
	pulumi.RegisterOutputType(ScriptReferencePtrOutput{})
	pulumi.RegisterOutputType(ScriptReferenceResponseOutput{})
	pulumi.RegisterOutputType(ScriptReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ScriptsToExecuteOutput{})
	pulumi.RegisterOutputType(ScriptsToExecutePtrOutput{})
	pulumi.RegisterOutputType(ScriptsToExecuteResponseOutput{})
	pulumi.RegisterOutputType(ScriptsToExecuteResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceManagedResourcesSettingsOutput{})
	pulumi.RegisterOutputType(ServiceManagedResourcesSettingsPtrOutput{})
	pulumi.RegisterOutputType(ServiceManagedResourcesSettingsResponseOutput{})
	pulumi.RegisterOutputType(ServiceManagedResourcesSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(SetupScriptsOutput{})
	pulumi.RegisterOutputType(SetupScriptsPtrOutput{})
	pulumi.RegisterOutputType(SetupScriptsResponseOutput{})
	pulumi.RegisterOutputType(SetupScriptsResponsePtrOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceArrayOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceResponseOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SslConfigurationOutput{})
	pulumi.RegisterOutputType(SslConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SslConfigurationResponseOutput{})
	pulumi.RegisterOutputType(SslConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(SynapseSparkOutput{})
	pulumi.RegisterOutputType(SynapseSparkPropertiesOutput{})
	pulumi.RegisterOutputType(SynapseSparkPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SynapseSparkResponseOutput{})
	pulumi.RegisterOutputType(SynapseSparkResponsePropertiesOutput{})
	pulumi.RegisterOutputType(SynapseSparkResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemServiceResponseOutput{})
	pulumi.RegisterOutputType(SystemServiceResponseArrayOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsPtrOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsResponseOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(VirtualMachineOutput{})
	pulumi.RegisterOutputType(VirtualMachineImageOutput{})
	pulumi.RegisterOutputType(VirtualMachineImagePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineImageResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineImageResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachinePropertiesOutput{})
	pulumi.RegisterOutputType(VirtualMachinePropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineResponsePropertiesOutput{})
	pulumi.RegisterOutputType(VirtualMachineResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsResponsePtrOutput{})
}
