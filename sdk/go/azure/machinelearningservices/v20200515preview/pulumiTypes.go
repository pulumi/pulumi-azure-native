// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200515preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The response for an ACI service.
type ACIServiceResponseInvokeResponse struct {
	// Whether or not Application Insights is enabled.
	AppInsightsEnabled *bool `pulumi:"appInsightsEnabled"`
	// Whether or not authentication is enabled on the service.
	AuthEnabled *bool `pulumi:"authEnabled"`
	// The CName for the service.
	Cname *string `pulumi:"cname"`
	// The compute environment type for the service.
	// Expected value is 'ACI'.
	ComputeType string `pulumi:"computeType"`
	// The container resource requirements.
	ContainerResourceRequirements *ContainerResourceRequirementsInvokeResponse `pulumi:"containerResourceRequirements"`
	// Details of the data collection options specified.
	DataCollection *ACIServiceResponseInvokeResponseDataCollection `pulumi:"dataCollection"`
	// The deployment type for the service.
	DeploymentType *string `pulumi:"deploymentType"`
	// The service description.
	Description *string `pulumi:"description"`
	// The encryption properties.
	EncryptionProperties *ACIServiceResponseInvokeResponseEncryptionProperties `pulumi:"encryptionProperties"`
	// The Environment, models and assets used for inferencing.
	EnvironmentImageRequest *ACIServiceResponseInvokeResponseEnvironmentImageRequest `pulumi:"environmentImageRequest"`
	// The error details.
	Error ServiceResponseBaseInvokeResponseError `pulumi:"error"`
	// The service tag dictionary. Tags are mutable.
	KvTags map[string]string `pulumi:"kvTags"`
	// The name of the Azure location/region.
	Location *string `pulumi:"location"`
	// Details on the models and configurations.
	ModelConfigMap map[string]interface{} `pulumi:"modelConfigMap"`
	// The list of models.
	Models []ModelInvokeResponse `pulumi:"models"`
	// The service property dictionary. Properties are immutable.
	Properties map[string]string `pulumi:"properties"`
	// The public Fqdn for the service.
	PublicFqdn *string `pulumi:"publicFqdn"`
	// The public IP address for the service.
	PublicIp *string `pulumi:"publicIp"`
	// The Uri for sending scoring requests.
	ScoringUri string `pulumi:"scoringUri"`
	// The public SSL certificate in PEM format to use if SSL is enabled.
	SslCertificate *string `pulumi:"sslCertificate"`
	// Whether or not SSL is enabled.
	SslEnabled *bool `pulumi:"sslEnabled"`
	// The public SSL key in PEM format for the certificate.
	SslKey *string `pulumi:"sslKey"`
	// The current state of the service.
	State string `pulumi:"state"`
	// The Uri for sending swagger requests.
	SwaggerUri string `pulumi:"swaggerUri"`
	// The virtual network configuration.
	VnetConfiguration *ACIServiceResponseInvokeResponseVnetConfiguration `pulumi:"vnetConfiguration"`
}

// ACIServiceResponseInvokeResponseInput is an input type that accepts ACIServiceResponseInvokeResponseArgs and ACIServiceResponseInvokeResponseOutput values.
// You can construct a concrete instance of `ACIServiceResponseInvokeResponseInput` via:
//
//          ACIServiceResponseInvokeResponseArgs{...}
type ACIServiceResponseInvokeResponseInput interface {
	pulumi.Input

	ToACIServiceResponseInvokeResponseOutput() ACIServiceResponseInvokeResponseOutput
	ToACIServiceResponseInvokeResponseOutputWithContext(context.Context) ACIServiceResponseInvokeResponseOutput
}

// The response for an ACI service.
type ACIServiceResponseInvokeResponseArgs struct {
	// Whether or not Application Insights is enabled.
	AppInsightsEnabled pulumi.BoolPtrInput `pulumi:"appInsightsEnabled"`
	// Whether or not authentication is enabled on the service.
	AuthEnabled pulumi.BoolPtrInput `pulumi:"authEnabled"`
	// The CName for the service.
	Cname pulumi.StringPtrInput `pulumi:"cname"`
	// The compute environment type for the service.
	// Expected value is 'ACI'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The container resource requirements.
	ContainerResourceRequirements ContainerResourceRequirementsInvokeResponsePtrInput `pulumi:"containerResourceRequirements"`
	// Details of the data collection options specified.
	DataCollection ACIServiceResponseInvokeResponseDataCollectionPtrInput `pulumi:"dataCollection"`
	// The deployment type for the service.
	DeploymentType pulumi.StringPtrInput `pulumi:"deploymentType"`
	// The service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encryption properties.
	EncryptionProperties ACIServiceResponseInvokeResponseEncryptionPropertiesPtrInput `pulumi:"encryptionProperties"`
	// The Environment, models and assets used for inferencing.
	EnvironmentImageRequest ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrInput `pulumi:"environmentImageRequest"`
	// The error details.
	Error ServiceResponseBaseInvokeResponseErrorInput `pulumi:"error"`
	// The service tag dictionary. Tags are mutable.
	KvTags pulumi.StringMapInput `pulumi:"kvTags"`
	// The name of the Azure location/region.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Details on the models and configurations.
	ModelConfigMap pulumi.MapInput `pulumi:"modelConfigMap"`
	// The list of models.
	Models ModelInvokeResponseArrayInput `pulumi:"models"`
	// The service property dictionary. Properties are immutable.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The public Fqdn for the service.
	PublicFqdn pulumi.StringPtrInput `pulumi:"publicFqdn"`
	// The public IP address for the service.
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// The Uri for sending scoring requests.
	ScoringUri pulumi.StringInput `pulumi:"scoringUri"`
	// The public SSL certificate in PEM format to use if SSL is enabled.
	SslCertificate pulumi.StringPtrInput `pulumi:"sslCertificate"`
	// Whether or not SSL is enabled.
	SslEnabled pulumi.BoolPtrInput `pulumi:"sslEnabled"`
	// The public SSL key in PEM format for the certificate.
	SslKey pulumi.StringPtrInput `pulumi:"sslKey"`
	// The current state of the service.
	State pulumi.StringInput `pulumi:"state"`
	// The Uri for sending swagger requests.
	SwaggerUri pulumi.StringInput `pulumi:"swaggerUri"`
	// The virtual network configuration.
	VnetConfiguration ACIServiceResponseInvokeResponseVnetConfigurationPtrInput `pulumi:"vnetConfiguration"`
}

func (ACIServiceResponseInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseInvokeResponse)(nil)).Elem()
}

func (i ACIServiceResponseInvokeResponseArgs) ToACIServiceResponseInvokeResponseOutput() ACIServiceResponseInvokeResponseOutput {
	return i.ToACIServiceResponseInvokeResponseOutputWithContext(context.Background())
}

func (i ACIServiceResponseInvokeResponseArgs) ToACIServiceResponseInvokeResponseOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseInvokeResponseOutput)
}

// The response for an ACI service.
type ACIServiceResponseInvokeResponseOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseInvokeResponse)(nil)).Elem()
}

func (o ACIServiceResponseInvokeResponseOutput) ToACIServiceResponseInvokeResponseOutput() ACIServiceResponseInvokeResponseOutput {
	return o
}

func (o ACIServiceResponseInvokeResponseOutput) ToACIServiceResponseInvokeResponseOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseOutput {
	return o
}

// Whether or not Application Insights is enabled.
func (o ACIServiceResponseInvokeResponseOutput) AppInsightsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) *bool { return v.AppInsightsEnabled }).(pulumi.BoolPtrOutput)
}

// Whether or not authentication is enabled on the service.
func (o ACIServiceResponseInvokeResponseOutput) AuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) *bool { return v.AuthEnabled }).(pulumi.BoolPtrOutput)
}

// The CName for the service.
func (o ACIServiceResponseInvokeResponseOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

// The compute environment type for the service.
// Expected value is 'ACI'.
func (o ACIServiceResponseInvokeResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The container resource requirements.
func (o ACIServiceResponseInvokeResponseOutput) ContainerResourceRequirements() ContainerResourceRequirementsInvokeResponsePtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) *ContainerResourceRequirementsInvokeResponse {
		return v.ContainerResourceRequirements
	}).(ContainerResourceRequirementsInvokeResponsePtrOutput)
}

// Details of the data collection options specified.
func (o ACIServiceResponseInvokeResponseOutput) DataCollection() ACIServiceResponseInvokeResponseDataCollectionPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) *ACIServiceResponseInvokeResponseDataCollection {
		return v.DataCollection
	}).(ACIServiceResponseInvokeResponseDataCollectionPtrOutput)
}

// The deployment type for the service.
func (o ACIServiceResponseInvokeResponseOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) *string { return v.DeploymentType }).(pulumi.StringPtrOutput)
}

// The service description.
func (o ACIServiceResponseInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encryption properties.
func (o ACIServiceResponseInvokeResponseOutput) EncryptionProperties() ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) *ACIServiceResponseInvokeResponseEncryptionProperties {
		return v.EncryptionProperties
	}).(ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput)
}

// The Environment, models and assets used for inferencing.
func (o ACIServiceResponseInvokeResponseOutput) EnvironmentImageRequest() ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) *ACIServiceResponseInvokeResponseEnvironmentImageRequest {
		return v.EnvironmentImageRequest
	}).(ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput)
}

// The error details.
func (o ACIServiceResponseInvokeResponseOutput) Error() ServiceResponseBaseInvokeResponseErrorOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) ServiceResponseBaseInvokeResponseError { return v.Error }).(ServiceResponseBaseInvokeResponseErrorOutput)
}

// The service tag dictionary. Tags are mutable.
func (o ACIServiceResponseInvokeResponseOutput) KvTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) map[string]string { return v.KvTags }).(pulumi.StringMapOutput)
}

// The name of the Azure location/region.
func (o ACIServiceResponseInvokeResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Details on the models and configurations.
func (o ACIServiceResponseInvokeResponseOutput) ModelConfigMap() pulumi.MapOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) map[string]interface{} { return v.ModelConfigMap }).(pulumi.MapOutput)
}

// The list of models.
func (o ACIServiceResponseInvokeResponseOutput) Models() ModelInvokeResponseArrayOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) []ModelInvokeResponse { return v.Models }).(ModelInvokeResponseArrayOutput)
}

// The service property dictionary. Properties are immutable.
func (o ACIServiceResponseInvokeResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The public Fqdn for the service.
func (o ACIServiceResponseInvokeResponseOutput) PublicFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) *string { return v.PublicFqdn }).(pulumi.StringPtrOutput)
}

// The public IP address for the service.
func (o ACIServiceResponseInvokeResponseOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// The Uri for sending scoring requests.
func (o ACIServiceResponseInvokeResponseOutput) ScoringUri() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) string { return v.ScoringUri }).(pulumi.StringOutput)
}

// The public SSL certificate in PEM format to use if SSL is enabled.
func (o ACIServiceResponseInvokeResponseOutput) SslCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) *string { return v.SslCertificate }).(pulumi.StringPtrOutput)
}

// Whether or not SSL is enabled.
func (o ACIServiceResponseInvokeResponseOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) *bool { return v.SslEnabled }).(pulumi.BoolPtrOutput)
}

// The public SSL key in PEM format for the certificate.
func (o ACIServiceResponseInvokeResponseOutput) SslKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) *string { return v.SslKey }).(pulumi.StringPtrOutput)
}

// The current state of the service.
func (o ACIServiceResponseInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// The Uri for sending swagger requests.
func (o ACIServiceResponseInvokeResponseOutput) SwaggerUri() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) string { return v.SwaggerUri }).(pulumi.StringOutput)
}

// The virtual network configuration.
func (o ACIServiceResponseInvokeResponseOutput) VnetConfiguration() ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponse) *ACIServiceResponseInvokeResponseVnetConfiguration {
		return v.VnetConfiguration
	}).(ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput)
}

// Details of the data collection options specified.
type ACIServiceResponseInvokeResponseDataCollection struct {
	// Option for enabling/disabling Event Hub.
	EventHubEnabled *bool `pulumi:"eventHubEnabled"`
	// Option for enabling/disabling storage.
	StorageEnabled *bool `pulumi:"storageEnabled"`
}

// ACIServiceResponseInvokeResponseDataCollectionInput is an input type that accepts ACIServiceResponseInvokeResponseDataCollectionArgs and ACIServiceResponseInvokeResponseDataCollectionOutput values.
// You can construct a concrete instance of `ACIServiceResponseInvokeResponseDataCollectionInput` via:
//
//          ACIServiceResponseInvokeResponseDataCollectionArgs{...}
type ACIServiceResponseInvokeResponseDataCollectionInput interface {
	pulumi.Input

	ToACIServiceResponseInvokeResponseDataCollectionOutput() ACIServiceResponseInvokeResponseDataCollectionOutput
	ToACIServiceResponseInvokeResponseDataCollectionOutputWithContext(context.Context) ACIServiceResponseInvokeResponseDataCollectionOutput
}

// Details of the data collection options specified.
type ACIServiceResponseInvokeResponseDataCollectionArgs struct {
	// Option for enabling/disabling Event Hub.
	EventHubEnabled pulumi.BoolPtrInput `pulumi:"eventHubEnabled"`
	// Option for enabling/disabling storage.
	StorageEnabled pulumi.BoolPtrInput `pulumi:"storageEnabled"`
}

func (ACIServiceResponseInvokeResponseDataCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseInvokeResponseDataCollection)(nil)).Elem()
}

func (i ACIServiceResponseInvokeResponseDataCollectionArgs) ToACIServiceResponseInvokeResponseDataCollectionOutput() ACIServiceResponseInvokeResponseDataCollectionOutput {
	return i.ToACIServiceResponseInvokeResponseDataCollectionOutputWithContext(context.Background())
}

func (i ACIServiceResponseInvokeResponseDataCollectionArgs) ToACIServiceResponseInvokeResponseDataCollectionOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseDataCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseInvokeResponseDataCollectionOutput)
}

func (i ACIServiceResponseInvokeResponseDataCollectionArgs) ToACIServiceResponseInvokeResponseDataCollectionPtrOutput() ACIServiceResponseInvokeResponseDataCollectionPtrOutput {
	return i.ToACIServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (i ACIServiceResponseInvokeResponseDataCollectionArgs) ToACIServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseDataCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseInvokeResponseDataCollectionOutput).ToACIServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(ctx)
}

// ACIServiceResponseInvokeResponseDataCollectionPtrInput is an input type that accepts ACIServiceResponseInvokeResponseDataCollectionArgs, ACIServiceResponseInvokeResponseDataCollectionPtr and ACIServiceResponseInvokeResponseDataCollectionPtrOutput values.
// You can construct a concrete instance of `ACIServiceResponseInvokeResponseDataCollectionPtrInput` via:
//
//          ACIServiceResponseInvokeResponseDataCollectionArgs{...}
//
//  or:
//
//          nil
type ACIServiceResponseInvokeResponseDataCollectionPtrInput interface {
	pulumi.Input

	ToACIServiceResponseInvokeResponseDataCollectionPtrOutput() ACIServiceResponseInvokeResponseDataCollectionPtrOutput
	ToACIServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(context.Context) ACIServiceResponseInvokeResponseDataCollectionPtrOutput
}

type aciserviceResponseInvokeResponseDataCollectionPtrType ACIServiceResponseInvokeResponseDataCollectionArgs

func ACIServiceResponseInvokeResponseDataCollectionPtr(v *ACIServiceResponseInvokeResponseDataCollectionArgs) ACIServiceResponseInvokeResponseDataCollectionPtrInput {
	return (*aciserviceResponseInvokeResponseDataCollectionPtrType)(v)
}

func (*aciserviceResponseInvokeResponseDataCollectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseInvokeResponseDataCollection)(nil)).Elem()
}

func (i *aciserviceResponseInvokeResponseDataCollectionPtrType) ToACIServiceResponseInvokeResponseDataCollectionPtrOutput() ACIServiceResponseInvokeResponseDataCollectionPtrOutput {
	return i.ToACIServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (i *aciserviceResponseInvokeResponseDataCollectionPtrType) ToACIServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseDataCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseInvokeResponseDataCollectionPtrOutput)
}

// Details of the data collection options specified.
type ACIServiceResponseInvokeResponseDataCollectionOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseInvokeResponseDataCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseInvokeResponseDataCollection)(nil)).Elem()
}

func (o ACIServiceResponseInvokeResponseDataCollectionOutput) ToACIServiceResponseInvokeResponseDataCollectionOutput() ACIServiceResponseInvokeResponseDataCollectionOutput {
	return o
}

func (o ACIServiceResponseInvokeResponseDataCollectionOutput) ToACIServiceResponseInvokeResponseDataCollectionOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseDataCollectionOutput {
	return o
}

func (o ACIServiceResponseInvokeResponseDataCollectionOutput) ToACIServiceResponseInvokeResponseDataCollectionPtrOutput() ACIServiceResponseInvokeResponseDataCollectionPtrOutput {
	return o.ToACIServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (o ACIServiceResponseInvokeResponseDataCollectionOutput) ToACIServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseDataCollectionPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponseDataCollection) *ACIServiceResponseInvokeResponseDataCollection {
		return &v
	}).(ACIServiceResponseInvokeResponseDataCollectionPtrOutput)
}

// Option for enabling/disabling Event Hub.
func (o ACIServiceResponseInvokeResponseDataCollectionOutput) EventHubEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponseDataCollection) *bool { return v.EventHubEnabled }).(pulumi.BoolPtrOutput)
}

// Option for enabling/disabling storage.
func (o ACIServiceResponseInvokeResponseDataCollectionOutput) StorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponseDataCollection) *bool { return v.StorageEnabled }).(pulumi.BoolPtrOutput)
}

type ACIServiceResponseInvokeResponseDataCollectionPtrOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseInvokeResponseDataCollectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseInvokeResponseDataCollection)(nil)).Elem()
}

func (o ACIServiceResponseInvokeResponseDataCollectionPtrOutput) ToACIServiceResponseInvokeResponseDataCollectionPtrOutput() ACIServiceResponseInvokeResponseDataCollectionPtrOutput {
	return o
}

func (o ACIServiceResponseInvokeResponseDataCollectionPtrOutput) ToACIServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseDataCollectionPtrOutput {
	return o
}

func (o ACIServiceResponseInvokeResponseDataCollectionPtrOutput) Elem() ACIServiceResponseInvokeResponseDataCollectionOutput {
	return o.ApplyT(func(v *ACIServiceResponseInvokeResponseDataCollection) ACIServiceResponseInvokeResponseDataCollection {
		return *v
	}).(ACIServiceResponseInvokeResponseDataCollectionOutput)
}

// Option for enabling/disabling Event Hub.
func (o ACIServiceResponseInvokeResponseDataCollectionPtrOutput) EventHubEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseInvokeResponseDataCollection) *bool {
		if v == nil {
			return nil
		}
		return v.EventHubEnabled
	}).(pulumi.BoolPtrOutput)
}

// Option for enabling/disabling storage.
func (o ACIServiceResponseInvokeResponseDataCollectionPtrOutput) StorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseInvokeResponseDataCollection) *bool {
		if v == nil {
			return nil
		}
		return v.StorageEnabled
	}).(pulumi.BoolPtrOutput)
}

// The encryption properties.
type ACIServiceResponseInvokeResponseEncryptionProperties struct {
	// Encryption Key name
	KeyName string `pulumi:"keyName"`
	// Encryption Key Version
	KeyVersion string `pulumi:"keyVersion"`
	// vault base Url
	VaultBaseUrl string `pulumi:"vaultBaseUrl"`
}

// ACIServiceResponseInvokeResponseEncryptionPropertiesInput is an input type that accepts ACIServiceResponseInvokeResponseEncryptionPropertiesArgs and ACIServiceResponseInvokeResponseEncryptionPropertiesOutput values.
// You can construct a concrete instance of `ACIServiceResponseInvokeResponseEncryptionPropertiesInput` via:
//
//          ACIServiceResponseInvokeResponseEncryptionPropertiesArgs{...}
type ACIServiceResponseInvokeResponseEncryptionPropertiesInput interface {
	pulumi.Input

	ToACIServiceResponseInvokeResponseEncryptionPropertiesOutput() ACIServiceResponseInvokeResponseEncryptionPropertiesOutput
	ToACIServiceResponseInvokeResponseEncryptionPropertiesOutputWithContext(context.Context) ACIServiceResponseInvokeResponseEncryptionPropertiesOutput
}

// The encryption properties.
type ACIServiceResponseInvokeResponseEncryptionPropertiesArgs struct {
	// Encryption Key name
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// Encryption Key Version
	KeyVersion pulumi.StringInput `pulumi:"keyVersion"`
	// vault base Url
	VaultBaseUrl pulumi.StringInput `pulumi:"vaultBaseUrl"`
}

func (ACIServiceResponseInvokeResponseEncryptionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseInvokeResponseEncryptionProperties)(nil)).Elem()
}

func (i ACIServiceResponseInvokeResponseEncryptionPropertiesArgs) ToACIServiceResponseInvokeResponseEncryptionPropertiesOutput() ACIServiceResponseInvokeResponseEncryptionPropertiesOutput {
	return i.ToACIServiceResponseInvokeResponseEncryptionPropertiesOutputWithContext(context.Background())
}

func (i ACIServiceResponseInvokeResponseEncryptionPropertiesArgs) ToACIServiceResponseInvokeResponseEncryptionPropertiesOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseEncryptionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseInvokeResponseEncryptionPropertiesOutput)
}

func (i ACIServiceResponseInvokeResponseEncryptionPropertiesArgs) ToACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput() ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput {
	return i.ToACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (i ACIServiceResponseInvokeResponseEncryptionPropertiesArgs) ToACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseInvokeResponseEncryptionPropertiesOutput).ToACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutputWithContext(ctx)
}

// ACIServiceResponseInvokeResponseEncryptionPropertiesPtrInput is an input type that accepts ACIServiceResponseInvokeResponseEncryptionPropertiesArgs, ACIServiceResponseInvokeResponseEncryptionPropertiesPtr and ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput values.
// You can construct a concrete instance of `ACIServiceResponseInvokeResponseEncryptionPropertiesPtrInput` via:
//
//          ACIServiceResponseInvokeResponseEncryptionPropertiesArgs{...}
//
//  or:
//
//          nil
type ACIServiceResponseInvokeResponseEncryptionPropertiesPtrInput interface {
	pulumi.Input

	ToACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput() ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput
	ToACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutputWithContext(context.Context) ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput
}

type aciserviceResponseInvokeResponseEncryptionPropertiesPtrType ACIServiceResponseInvokeResponseEncryptionPropertiesArgs

func ACIServiceResponseInvokeResponseEncryptionPropertiesPtr(v *ACIServiceResponseInvokeResponseEncryptionPropertiesArgs) ACIServiceResponseInvokeResponseEncryptionPropertiesPtrInput {
	return (*aciserviceResponseInvokeResponseEncryptionPropertiesPtrType)(v)
}

func (*aciserviceResponseInvokeResponseEncryptionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseInvokeResponseEncryptionProperties)(nil)).Elem()
}

func (i *aciserviceResponseInvokeResponseEncryptionPropertiesPtrType) ToACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput() ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput {
	return i.ToACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (i *aciserviceResponseInvokeResponseEncryptionPropertiesPtrType) ToACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput)
}

// The encryption properties.
type ACIServiceResponseInvokeResponseEncryptionPropertiesOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseInvokeResponseEncryptionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseInvokeResponseEncryptionProperties)(nil)).Elem()
}

func (o ACIServiceResponseInvokeResponseEncryptionPropertiesOutput) ToACIServiceResponseInvokeResponseEncryptionPropertiesOutput() ACIServiceResponseInvokeResponseEncryptionPropertiesOutput {
	return o
}

func (o ACIServiceResponseInvokeResponseEncryptionPropertiesOutput) ToACIServiceResponseInvokeResponseEncryptionPropertiesOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseEncryptionPropertiesOutput {
	return o
}

func (o ACIServiceResponseInvokeResponseEncryptionPropertiesOutput) ToACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput() ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput {
	return o.ToACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (o ACIServiceResponseInvokeResponseEncryptionPropertiesOutput) ToACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponseEncryptionProperties) *ACIServiceResponseInvokeResponseEncryptionProperties {
		return &v
	}).(ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput)
}

// Encryption Key name
func (o ACIServiceResponseInvokeResponseEncryptionPropertiesOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponseEncryptionProperties) string { return v.KeyName }).(pulumi.StringOutput)
}

// Encryption Key Version
func (o ACIServiceResponseInvokeResponseEncryptionPropertiesOutput) KeyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponseEncryptionProperties) string { return v.KeyVersion }).(pulumi.StringOutput)
}

// vault base Url
func (o ACIServiceResponseInvokeResponseEncryptionPropertiesOutput) VaultBaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponseEncryptionProperties) string { return v.VaultBaseUrl }).(pulumi.StringOutput)
}

type ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseInvokeResponseEncryptionProperties)(nil)).Elem()
}

func (o ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput) ToACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput() ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput {
	return o
}

func (o ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput) ToACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput {
	return o
}

func (o ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput) Elem() ACIServiceResponseInvokeResponseEncryptionPropertiesOutput {
	return o.ApplyT(func(v *ACIServiceResponseInvokeResponseEncryptionProperties) ACIServiceResponseInvokeResponseEncryptionProperties {
		return *v
	}).(ACIServiceResponseInvokeResponseEncryptionPropertiesOutput)
}

// Encryption Key name
func (o ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseInvokeResponseEncryptionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyName
	}).(pulumi.StringPtrOutput)
}

// Encryption Key Version
func (o ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseInvokeResponseEncryptionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

// vault base Url
func (o ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput) VaultBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseInvokeResponseEncryptionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.VaultBaseUrl
	}).(pulumi.StringPtrOutput)
}

// The Environment, models and assets used for inferencing.
type ACIServiceResponseInvokeResponseEnvironmentImageRequest struct {
	// The list of assets.
	Assets []ImageAssetInvokeResponse `pulumi:"assets"`
	// The name of the driver file.
	DriverProgram *string `pulumi:"driverProgram"`
	// The details of the AZURE ML environment.
	Environment *EnvironmentImageResponseInvokeResponseEnvironment `pulumi:"environment"`
	// The unique identifying details of the AZURE ML environment.
	EnvironmentReference *EnvironmentImageResponseInvokeResponseEnvironmentReference `pulumi:"environmentReference"`
	// The list of model Ids.
	ModelIds []string `pulumi:"modelIds"`
	// The list of models.
	Models []ModelInvokeResponse `pulumi:"models"`
}

// ACIServiceResponseInvokeResponseEnvironmentImageRequestInput is an input type that accepts ACIServiceResponseInvokeResponseEnvironmentImageRequestArgs and ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput values.
// You can construct a concrete instance of `ACIServiceResponseInvokeResponseEnvironmentImageRequestInput` via:
//
//          ACIServiceResponseInvokeResponseEnvironmentImageRequestArgs{...}
type ACIServiceResponseInvokeResponseEnvironmentImageRequestInput interface {
	pulumi.Input

	ToACIServiceResponseInvokeResponseEnvironmentImageRequestOutput() ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput
	ToACIServiceResponseInvokeResponseEnvironmentImageRequestOutputWithContext(context.Context) ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput
}

// The Environment, models and assets used for inferencing.
type ACIServiceResponseInvokeResponseEnvironmentImageRequestArgs struct {
	// The list of assets.
	Assets ImageAssetInvokeResponseArrayInput `pulumi:"assets"`
	// The name of the driver file.
	DriverProgram pulumi.StringPtrInput `pulumi:"driverProgram"`
	// The details of the AZURE ML environment.
	Environment EnvironmentImageResponseInvokeResponseEnvironmentPtrInput `pulumi:"environment"`
	// The unique identifying details of the AZURE ML environment.
	EnvironmentReference EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrInput `pulumi:"environmentReference"`
	// The list of model Ids.
	ModelIds pulumi.StringArrayInput `pulumi:"modelIds"`
	// The list of models.
	Models ModelInvokeResponseArrayInput `pulumi:"models"`
}

func (ACIServiceResponseInvokeResponseEnvironmentImageRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseInvokeResponseEnvironmentImageRequest)(nil)).Elem()
}

func (i ACIServiceResponseInvokeResponseEnvironmentImageRequestArgs) ToACIServiceResponseInvokeResponseEnvironmentImageRequestOutput() ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput {
	return i.ToACIServiceResponseInvokeResponseEnvironmentImageRequestOutputWithContext(context.Background())
}

func (i ACIServiceResponseInvokeResponseEnvironmentImageRequestArgs) ToACIServiceResponseInvokeResponseEnvironmentImageRequestOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput)
}

func (i ACIServiceResponseInvokeResponseEnvironmentImageRequestArgs) ToACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput() ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return i.ToACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (i ACIServiceResponseInvokeResponseEnvironmentImageRequestArgs) ToACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput).ToACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(ctx)
}

// ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrInput is an input type that accepts ACIServiceResponseInvokeResponseEnvironmentImageRequestArgs, ACIServiceResponseInvokeResponseEnvironmentImageRequestPtr and ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput values.
// You can construct a concrete instance of `ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrInput` via:
//
//          ACIServiceResponseInvokeResponseEnvironmentImageRequestArgs{...}
//
//  or:
//
//          nil
type ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrInput interface {
	pulumi.Input

	ToACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput() ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput
	ToACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(context.Context) ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput
}

type aciserviceResponseInvokeResponseEnvironmentImageRequestPtrType ACIServiceResponseInvokeResponseEnvironmentImageRequestArgs

func ACIServiceResponseInvokeResponseEnvironmentImageRequestPtr(v *ACIServiceResponseInvokeResponseEnvironmentImageRequestArgs) ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrInput {
	return (*aciserviceResponseInvokeResponseEnvironmentImageRequestPtrType)(v)
}

func (*aciserviceResponseInvokeResponseEnvironmentImageRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseInvokeResponseEnvironmentImageRequest)(nil)).Elem()
}

func (i *aciserviceResponseInvokeResponseEnvironmentImageRequestPtrType) ToACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput() ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return i.ToACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (i *aciserviceResponseInvokeResponseEnvironmentImageRequestPtrType) ToACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput)
}

// The Environment, models and assets used for inferencing.
type ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseInvokeResponseEnvironmentImageRequest)(nil)).Elem()
}

func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput) ToACIServiceResponseInvokeResponseEnvironmentImageRequestOutput() ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput {
	return o
}

func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput) ToACIServiceResponseInvokeResponseEnvironmentImageRequestOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput {
	return o
}

func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput) ToACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput() ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return o.ToACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput) ToACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponseEnvironmentImageRequest) *ACIServiceResponseInvokeResponseEnvironmentImageRequest {
		return &v
	}).(ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput)
}

// The list of assets.
func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput) Assets() ImageAssetInvokeResponseArrayOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponseEnvironmentImageRequest) []ImageAssetInvokeResponse {
		return v.Assets
	}).(ImageAssetInvokeResponseArrayOutput)
}

// The name of the driver file.
func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput) DriverProgram() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponseEnvironmentImageRequest) *string { return v.DriverProgram }).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput) Environment() EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponseEnvironmentImageRequest) *EnvironmentImageResponseInvokeResponseEnvironment {
		return v.Environment
	}).(EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput) EnvironmentReference() EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponseEnvironmentImageRequest) *EnvironmentImageResponseInvokeResponseEnvironmentReference {
		return v.EnvironmentReference
	}).(EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput)
}

// The list of model Ids.
func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput) ModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponseEnvironmentImageRequest) []string { return v.ModelIds }).(pulumi.StringArrayOutput)
}

// The list of models.
func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput) Models() ModelInvokeResponseArrayOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponseEnvironmentImageRequest) []ModelInvokeResponse { return v.Models }).(ModelInvokeResponseArrayOutput)
}

type ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseInvokeResponseEnvironmentImageRequest)(nil)).Elem()
}

func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) ToACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput() ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return o
}

func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) ToACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return o
}

func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) Elem() ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput {
	return o.ApplyT(func(v *ACIServiceResponseInvokeResponseEnvironmentImageRequest) ACIServiceResponseInvokeResponseEnvironmentImageRequest {
		return *v
	}).(ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput)
}

// The list of assets.
func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) Assets() ImageAssetInvokeResponseArrayOutput {
	return o.ApplyT(func(v *ACIServiceResponseInvokeResponseEnvironmentImageRequest) []ImageAssetInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Assets
	}).(ImageAssetInvokeResponseArrayOutput)
}

// The name of the driver file.
func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) DriverProgram() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseInvokeResponseEnvironmentImageRequest) *string {
		if v == nil {
			return nil
		}
		return v.DriverProgram
	}).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) Environment() EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseInvokeResponseEnvironmentImageRequest) *EnvironmentImageResponseInvokeResponseEnvironment {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) EnvironmentReference() EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseInvokeResponseEnvironmentImageRequest) *EnvironmentImageResponseInvokeResponseEnvironmentReference {
		if v == nil {
			return nil
		}
		return v.EnvironmentReference
	}).(EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput)
}

// The list of model Ids.
func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) ModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ACIServiceResponseInvokeResponseEnvironmentImageRequest) []string {
		if v == nil {
			return nil
		}
		return v.ModelIds
	}).(pulumi.StringArrayOutput)
}

// The list of models.
func (o ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) Models() ModelInvokeResponseArrayOutput {
	return o.ApplyT(func(v *ACIServiceResponseInvokeResponseEnvironmentImageRequest) []ModelInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Models
	}).(ModelInvokeResponseArrayOutput)
}

// The virtual network configuration.
type ACIServiceResponseInvokeResponseVnetConfiguration struct {
	// The name of the virtual network subnet.
	SubnetName *string `pulumi:"subnetName"`
	// The name of the virtual network.
	VnetName *string `pulumi:"vnetName"`
}

// ACIServiceResponseInvokeResponseVnetConfigurationInput is an input type that accepts ACIServiceResponseInvokeResponseVnetConfigurationArgs and ACIServiceResponseInvokeResponseVnetConfigurationOutput values.
// You can construct a concrete instance of `ACIServiceResponseInvokeResponseVnetConfigurationInput` via:
//
//          ACIServiceResponseInvokeResponseVnetConfigurationArgs{...}
type ACIServiceResponseInvokeResponseVnetConfigurationInput interface {
	pulumi.Input

	ToACIServiceResponseInvokeResponseVnetConfigurationOutput() ACIServiceResponseInvokeResponseVnetConfigurationOutput
	ToACIServiceResponseInvokeResponseVnetConfigurationOutputWithContext(context.Context) ACIServiceResponseInvokeResponseVnetConfigurationOutput
}

// The virtual network configuration.
type ACIServiceResponseInvokeResponseVnetConfigurationArgs struct {
	// The name of the virtual network subnet.
	SubnetName pulumi.StringPtrInput `pulumi:"subnetName"`
	// The name of the virtual network.
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
}

func (ACIServiceResponseInvokeResponseVnetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseInvokeResponseVnetConfiguration)(nil)).Elem()
}

func (i ACIServiceResponseInvokeResponseVnetConfigurationArgs) ToACIServiceResponseInvokeResponseVnetConfigurationOutput() ACIServiceResponseInvokeResponseVnetConfigurationOutput {
	return i.ToACIServiceResponseInvokeResponseVnetConfigurationOutputWithContext(context.Background())
}

func (i ACIServiceResponseInvokeResponseVnetConfigurationArgs) ToACIServiceResponseInvokeResponseVnetConfigurationOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseVnetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseInvokeResponseVnetConfigurationOutput)
}

func (i ACIServiceResponseInvokeResponseVnetConfigurationArgs) ToACIServiceResponseInvokeResponseVnetConfigurationPtrOutput() ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput {
	return i.ToACIServiceResponseInvokeResponseVnetConfigurationPtrOutputWithContext(context.Background())
}

func (i ACIServiceResponseInvokeResponseVnetConfigurationArgs) ToACIServiceResponseInvokeResponseVnetConfigurationPtrOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseInvokeResponseVnetConfigurationOutput).ToACIServiceResponseInvokeResponseVnetConfigurationPtrOutputWithContext(ctx)
}

// ACIServiceResponseInvokeResponseVnetConfigurationPtrInput is an input type that accepts ACIServiceResponseInvokeResponseVnetConfigurationArgs, ACIServiceResponseInvokeResponseVnetConfigurationPtr and ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput values.
// You can construct a concrete instance of `ACIServiceResponseInvokeResponseVnetConfigurationPtrInput` via:
//
//          ACIServiceResponseInvokeResponseVnetConfigurationArgs{...}
//
//  or:
//
//          nil
type ACIServiceResponseInvokeResponseVnetConfigurationPtrInput interface {
	pulumi.Input

	ToACIServiceResponseInvokeResponseVnetConfigurationPtrOutput() ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput
	ToACIServiceResponseInvokeResponseVnetConfigurationPtrOutputWithContext(context.Context) ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput
}

type aciserviceResponseInvokeResponseVnetConfigurationPtrType ACIServiceResponseInvokeResponseVnetConfigurationArgs

func ACIServiceResponseInvokeResponseVnetConfigurationPtr(v *ACIServiceResponseInvokeResponseVnetConfigurationArgs) ACIServiceResponseInvokeResponseVnetConfigurationPtrInput {
	return (*aciserviceResponseInvokeResponseVnetConfigurationPtrType)(v)
}

func (*aciserviceResponseInvokeResponseVnetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseInvokeResponseVnetConfiguration)(nil)).Elem()
}

func (i *aciserviceResponseInvokeResponseVnetConfigurationPtrType) ToACIServiceResponseInvokeResponseVnetConfigurationPtrOutput() ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput {
	return i.ToACIServiceResponseInvokeResponseVnetConfigurationPtrOutputWithContext(context.Background())
}

func (i *aciserviceResponseInvokeResponseVnetConfigurationPtrType) ToACIServiceResponseInvokeResponseVnetConfigurationPtrOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput)
}

// The virtual network configuration.
type ACIServiceResponseInvokeResponseVnetConfigurationOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseInvokeResponseVnetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseInvokeResponseVnetConfiguration)(nil)).Elem()
}

func (o ACIServiceResponseInvokeResponseVnetConfigurationOutput) ToACIServiceResponseInvokeResponseVnetConfigurationOutput() ACIServiceResponseInvokeResponseVnetConfigurationOutput {
	return o
}

func (o ACIServiceResponseInvokeResponseVnetConfigurationOutput) ToACIServiceResponseInvokeResponseVnetConfigurationOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseVnetConfigurationOutput {
	return o
}

func (o ACIServiceResponseInvokeResponseVnetConfigurationOutput) ToACIServiceResponseInvokeResponseVnetConfigurationPtrOutput() ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput {
	return o.ToACIServiceResponseInvokeResponseVnetConfigurationPtrOutputWithContext(context.Background())
}

func (o ACIServiceResponseInvokeResponseVnetConfigurationOutput) ToACIServiceResponseInvokeResponseVnetConfigurationPtrOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponseVnetConfiguration) *ACIServiceResponseInvokeResponseVnetConfiguration {
		return &v
	}).(ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput)
}

// The name of the virtual network subnet.
func (o ACIServiceResponseInvokeResponseVnetConfigurationOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponseVnetConfiguration) *string { return v.SubnetName }).(pulumi.StringPtrOutput)
}

// The name of the virtual network.
func (o ACIServiceResponseInvokeResponseVnetConfigurationOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseInvokeResponseVnetConfiguration) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

type ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseInvokeResponseVnetConfiguration)(nil)).Elem()
}

func (o ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput) ToACIServiceResponseInvokeResponseVnetConfigurationPtrOutput() ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput {
	return o
}

func (o ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput) ToACIServiceResponseInvokeResponseVnetConfigurationPtrOutputWithContext(ctx context.Context) ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput {
	return o
}

func (o ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput) Elem() ACIServiceResponseInvokeResponseVnetConfigurationOutput {
	return o.ApplyT(func(v *ACIServiceResponseInvokeResponseVnetConfiguration) ACIServiceResponseInvokeResponseVnetConfiguration {
		return *v
	}).(ACIServiceResponseInvokeResponseVnetConfigurationOutput)
}

// The name of the virtual network subnet.
func (o ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseInvokeResponseVnetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SubnetName
	}).(pulumi.StringPtrOutput)
}

// The name of the virtual network.
func (o ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseInvokeResponseVnetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// The response for an ACI service.
type ACIServiceResponseResponse struct {
	// Whether or not Application Insights is enabled.
	AppInsightsEnabled *bool `pulumi:"appInsightsEnabled"`
	// Whether or not authentication is enabled on the service.
	AuthEnabled *bool `pulumi:"authEnabled"`
	// The CName for the service.
	Cname *string `pulumi:"cname"`
	// The compute environment type for the service.
	// Expected value is 'ACI'.
	ComputeType string `pulumi:"computeType"`
	// The container resource requirements.
	ContainerResourceRequirements *ContainerResourceRequirementsResponse `pulumi:"containerResourceRequirements"`
	// Details of the data collection options specified.
	DataCollection *ACIServiceResponseResponseDataCollection `pulumi:"dataCollection"`
	// The deployment type for the service.
	DeploymentType *string `pulumi:"deploymentType"`
	// The service description.
	Description *string `pulumi:"description"`
	// The encryption properties.
	EncryptionProperties *ACIServiceResponseResponseEncryptionProperties `pulumi:"encryptionProperties"`
	// The Environment, models and assets used for inferencing.
	EnvironmentImageRequest *ACIServiceResponseResponseEnvironmentImageRequest `pulumi:"environmentImageRequest"`
	// The error details.
	Error ServiceResponseBaseResponseError `pulumi:"error"`
	// The service tag dictionary. Tags are mutable.
	KvTags map[string]string `pulumi:"kvTags"`
	// The name of the Azure location/region.
	Location *string `pulumi:"location"`
	// Details on the models and configurations.
	ModelConfigMap map[string]interface{} `pulumi:"modelConfigMap"`
	// The list of models.
	Models []ModelResponse `pulumi:"models"`
	// The service property dictionary. Properties are immutable.
	Properties map[string]string `pulumi:"properties"`
	// The public Fqdn for the service.
	PublicFqdn *string `pulumi:"publicFqdn"`
	// The public IP address for the service.
	PublicIp *string `pulumi:"publicIp"`
	// The Uri for sending scoring requests.
	ScoringUri string `pulumi:"scoringUri"`
	// The public SSL certificate in PEM format to use if SSL is enabled.
	SslCertificate *string `pulumi:"sslCertificate"`
	// Whether or not SSL is enabled.
	SslEnabled *bool `pulumi:"sslEnabled"`
	// The public SSL key in PEM format for the certificate.
	SslKey *string `pulumi:"sslKey"`
	// The current state of the service.
	State string `pulumi:"state"`
	// The Uri for sending swagger requests.
	SwaggerUri string `pulumi:"swaggerUri"`
	// The virtual network configuration.
	VnetConfiguration *ACIServiceResponseResponseVnetConfiguration `pulumi:"vnetConfiguration"`
}

// ACIServiceResponseResponseInput is an input type that accepts ACIServiceResponseResponseArgs and ACIServiceResponseResponseOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseInput` via:
//
//          ACIServiceResponseResponseArgs{...}
type ACIServiceResponseResponseInput interface {
	pulumi.Input

	ToACIServiceResponseResponseOutput() ACIServiceResponseResponseOutput
	ToACIServiceResponseResponseOutputWithContext(context.Context) ACIServiceResponseResponseOutput
}

// The response for an ACI service.
type ACIServiceResponseResponseArgs struct {
	// Whether or not Application Insights is enabled.
	AppInsightsEnabled pulumi.BoolPtrInput `pulumi:"appInsightsEnabled"`
	// Whether or not authentication is enabled on the service.
	AuthEnabled pulumi.BoolPtrInput `pulumi:"authEnabled"`
	// The CName for the service.
	Cname pulumi.StringPtrInput `pulumi:"cname"`
	// The compute environment type for the service.
	// Expected value is 'ACI'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The container resource requirements.
	ContainerResourceRequirements ContainerResourceRequirementsResponsePtrInput `pulumi:"containerResourceRequirements"`
	// Details of the data collection options specified.
	DataCollection ACIServiceResponseResponseDataCollectionPtrInput `pulumi:"dataCollection"`
	// The deployment type for the service.
	DeploymentType pulumi.StringPtrInput `pulumi:"deploymentType"`
	// The service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The encryption properties.
	EncryptionProperties ACIServiceResponseResponseEncryptionPropertiesPtrInput `pulumi:"encryptionProperties"`
	// The Environment, models and assets used for inferencing.
	EnvironmentImageRequest ACIServiceResponseResponseEnvironmentImageRequestPtrInput `pulumi:"environmentImageRequest"`
	// The error details.
	Error ServiceResponseBaseResponseErrorInput `pulumi:"error"`
	// The service tag dictionary. Tags are mutable.
	KvTags pulumi.StringMapInput `pulumi:"kvTags"`
	// The name of the Azure location/region.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Details on the models and configurations.
	ModelConfigMap pulumi.MapInput `pulumi:"modelConfigMap"`
	// The list of models.
	Models ModelResponseArrayInput `pulumi:"models"`
	// The service property dictionary. Properties are immutable.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The public Fqdn for the service.
	PublicFqdn pulumi.StringPtrInput `pulumi:"publicFqdn"`
	// The public IP address for the service.
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// The Uri for sending scoring requests.
	ScoringUri pulumi.StringInput `pulumi:"scoringUri"`
	// The public SSL certificate in PEM format to use if SSL is enabled.
	SslCertificate pulumi.StringPtrInput `pulumi:"sslCertificate"`
	// Whether or not SSL is enabled.
	SslEnabled pulumi.BoolPtrInput `pulumi:"sslEnabled"`
	// The public SSL key in PEM format for the certificate.
	SslKey pulumi.StringPtrInput `pulumi:"sslKey"`
	// The current state of the service.
	State pulumi.StringInput `pulumi:"state"`
	// The Uri for sending swagger requests.
	SwaggerUri pulumi.StringInput `pulumi:"swaggerUri"`
	// The virtual network configuration.
	VnetConfiguration ACIServiceResponseResponseVnetConfigurationPtrInput `pulumi:"vnetConfiguration"`
}

func (ACIServiceResponseResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponse)(nil)).Elem()
}

func (i ACIServiceResponseResponseArgs) ToACIServiceResponseResponseOutput() ACIServiceResponseResponseOutput {
	return i.ToACIServiceResponseResponseOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseArgs) ToACIServiceResponseResponseOutputWithContext(ctx context.Context) ACIServiceResponseResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseOutput)
}

// The response for an ACI service.
type ACIServiceResponseResponseOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponse)(nil)).Elem()
}

func (o ACIServiceResponseResponseOutput) ToACIServiceResponseResponseOutput() ACIServiceResponseResponseOutput {
	return o
}

func (o ACIServiceResponseResponseOutput) ToACIServiceResponseResponseOutputWithContext(ctx context.Context) ACIServiceResponseResponseOutput {
	return o
}

// Whether or not Application Insights is enabled.
func (o ACIServiceResponseResponseOutput) AppInsightsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *bool { return v.AppInsightsEnabled }).(pulumi.BoolPtrOutput)
}

// Whether or not authentication is enabled on the service.
func (o ACIServiceResponseResponseOutput) AuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *bool { return v.AuthEnabled }).(pulumi.BoolPtrOutput)
}

// The CName for the service.
func (o ACIServiceResponseResponseOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

// The compute environment type for the service.
// Expected value is 'ACI'.
func (o ACIServiceResponseResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The container resource requirements.
func (o ACIServiceResponseResponseOutput) ContainerResourceRequirements() ContainerResourceRequirementsResponsePtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *ContainerResourceRequirementsResponse {
		return v.ContainerResourceRequirements
	}).(ContainerResourceRequirementsResponsePtrOutput)
}

// Details of the data collection options specified.
func (o ACIServiceResponseResponseOutput) DataCollection() ACIServiceResponseResponseDataCollectionPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *ACIServiceResponseResponseDataCollection { return v.DataCollection }).(ACIServiceResponseResponseDataCollectionPtrOutput)
}

// The deployment type for the service.
func (o ACIServiceResponseResponseOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *string { return v.DeploymentType }).(pulumi.StringPtrOutput)
}

// The service description.
func (o ACIServiceResponseResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The encryption properties.
func (o ACIServiceResponseResponseOutput) EncryptionProperties() ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *ACIServiceResponseResponseEncryptionProperties {
		return v.EncryptionProperties
	}).(ACIServiceResponseResponseEncryptionPropertiesPtrOutput)
}

// The Environment, models and assets used for inferencing.
func (o ACIServiceResponseResponseOutput) EnvironmentImageRequest() ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *ACIServiceResponseResponseEnvironmentImageRequest {
		return v.EnvironmentImageRequest
	}).(ACIServiceResponseResponseEnvironmentImageRequestPtrOutput)
}

// The error details.
func (o ACIServiceResponseResponseOutput) Error() ServiceResponseBaseResponseErrorOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) ServiceResponseBaseResponseError { return v.Error }).(ServiceResponseBaseResponseErrorOutput)
}

// The service tag dictionary. Tags are mutable.
func (o ACIServiceResponseResponseOutput) KvTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) map[string]string { return v.KvTags }).(pulumi.StringMapOutput)
}

// The name of the Azure location/region.
func (o ACIServiceResponseResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Details on the models and configurations.
func (o ACIServiceResponseResponseOutput) ModelConfigMap() pulumi.MapOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) map[string]interface{} { return v.ModelConfigMap }).(pulumi.MapOutput)
}

// The list of models.
func (o ACIServiceResponseResponseOutput) Models() ModelResponseArrayOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) []ModelResponse { return v.Models }).(ModelResponseArrayOutput)
}

// The service property dictionary. Properties are immutable.
func (o ACIServiceResponseResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The public Fqdn for the service.
func (o ACIServiceResponseResponseOutput) PublicFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *string { return v.PublicFqdn }).(pulumi.StringPtrOutput)
}

// The public IP address for the service.
func (o ACIServiceResponseResponseOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// The Uri for sending scoring requests.
func (o ACIServiceResponseResponseOutput) ScoringUri() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) string { return v.ScoringUri }).(pulumi.StringOutput)
}

// The public SSL certificate in PEM format to use if SSL is enabled.
func (o ACIServiceResponseResponseOutput) SslCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *string { return v.SslCertificate }).(pulumi.StringPtrOutput)
}

// Whether or not SSL is enabled.
func (o ACIServiceResponseResponseOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *bool { return v.SslEnabled }).(pulumi.BoolPtrOutput)
}

// The public SSL key in PEM format for the certificate.
func (o ACIServiceResponseResponseOutput) SslKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *string { return v.SslKey }).(pulumi.StringPtrOutput)
}

// The current state of the service.
func (o ACIServiceResponseResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) string { return v.State }).(pulumi.StringOutput)
}

// The Uri for sending swagger requests.
func (o ACIServiceResponseResponseOutput) SwaggerUri() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) string { return v.SwaggerUri }).(pulumi.StringOutput)
}

// The virtual network configuration.
func (o ACIServiceResponseResponseOutput) VnetConfiguration() ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponse) *ACIServiceResponseResponseVnetConfiguration {
		return v.VnetConfiguration
	}).(ACIServiceResponseResponseVnetConfigurationPtrOutput)
}

// Details of the data collection options specified.
type ACIServiceResponseResponseDataCollection struct {
	// Option for enabling/disabling Event Hub.
	EventHubEnabled *bool `pulumi:"eventHubEnabled"`
	// Option for enabling/disabling storage.
	StorageEnabled *bool `pulumi:"storageEnabled"`
}

// ACIServiceResponseResponseDataCollectionInput is an input type that accepts ACIServiceResponseResponseDataCollectionArgs and ACIServiceResponseResponseDataCollectionOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseDataCollectionInput` via:
//
//          ACIServiceResponseResponseDataCollectionArgs{...}
type ACIServiceResponseResponseDataCollectionInput interface {
	pulumi.Input

	ToACIServiceResponseResponseDataCollectionOutput() ACIServiceResponseResponseDataCollectionOutput
	ToACIServiceResponseResponseDataCollectionOutputWithContext(context.Context) ACIServiceResponseResponseDataCollectionOutput
}

// Details of the data collection options specified.
type ACIServiceResponseResponseDataCollectionArgs struct {
	// Option for enabling/disabling Event Hub.
	EventHubEnabled pulumi.BoolPtrInput `pulumi:"eventHubEnabled"`
	// Option for enabling/disabling storage.
	StorageEnabled pulumi.BoolPtrInput `pulumi:"storageEnabled"`
}

func (ACIServiceResponseResponseDataCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponseDataCollection)(nil)).Elem()
}

func (i ACIServiceResponseResponseDataCollectionArgs) ToACIServiceResponseResponseDataCollectionOutput() ACIServiceResponseResponseDataCollectionOutput {
	return i.ToACIServiceResponseResponseDataCollectionOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseDataCollectionArgs) ToACIServiceResponseResponseDataCollectionOutputWithContext(ctx context.Context) ACIServiceResponseResponseDataCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseDataCollectionOutput)
}

func (i ACIServiceResponseResponseDataCollectionArgs) ToACIServiceResponseResponseDataCollectionPtrOutput() ACIServiceResponseResponseDataCollectionPtrOutput {
	return i.ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseDataCollectionArgs) ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseDataCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseDataCollectionOutput).ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(ctx)
}

// ACIServiceResponseResponseDataCollectionPtrInput is an input type that accepts ACIServiceResponseResponseDataCollectionArgs, ACIServiceResponseResponseDataCollectionPtr and ACIServiceResponseResponseDataCollectionPtrOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseDataCollectionPtrInput` via:
//
//          ACIServiceResponseResponseDataCollectionArgs{...}
//
//  or:
//
//          nil
type ACIServiceResponseResponseDataCollectionPtrInput interface {
	pulumi.Input

	ToACIServiceResponseResponseDataCollectionPtrOutput() ACIServiceResponseResponseDataCollectionPtrOutput
	ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(context.Context) ACIServiceResponseResponseDataCollectionPtrOutput
}

type aciserviceResponseResponseDataCollectionPtrType ACIServiceResponseResponseDataCollectionArgs

func ACIServiceResponseResponseDataCollectionPtr(v *ACIServiceResponseResponseDataCollectionArgs) ACIServiceResponseResponseDataCollectionPtrInput {
	return (*aciserviceResponseResponseDataCollectionPtrType)(v)
}

func (*aciserviceResponseResponseDataCollectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseResponseDataCollection)(nil)).Elem()
}

func (i *aciserviceResponseResponseDataCollectionPtrType) ToACIServiceResponseResponseDataCollectionPtrOutput() ACIServiceResponseResponseDataCollectionPtrOutput {
	return i.ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (i *aciserviceResponseResponseDataCollectionPtrType) ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseDataCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseDataCollectionPtrOutput)
}

// Details of the data collection options specified.
type ACIServiceResponseResponseDataCollectionOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseDataCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponseDataCollection)(nil)).Elem()
}

func (o ACIServiceResponseResponseDataCollectionOutput) ToACIServiceResponseResponseDataCollectionOutput() ACIServiceResponseResponseDataCollectionOutput {
	return o
}

func (o ACIServiceResponseResponseDataCollectionOutput) ToACIServiceResponseResponseDataCollectionOutputWithContext(ctx context.Context) ACIServiceResponseResponseDataCollectionOutput {
	return o
}

func (o ACIServiceResponseResponseDataCollectionOutput) ToACIServiceResponseResponseDataCollectionPtrOutput() ACIServiceResponseResponseDataCollectionPtrOutput {
	return o.ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (o ACIServiceResponseResponseDataCollectionOutput) ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseDataCollectionPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseDataCollection) *ACIServiceResponseResponseDataCollection {
		return &v
	}).(ACIServiceResponseResponseDataCollectionPtrOutput)
}

// Option for enabling/disabling Event Hub.
func (o ACIServiceResponseResponseDataCollectionOutput) EventHubEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseDataCollection) *bool { return v.EventHubEnabled }).(pulumi.BoolPtrOutput)
}

// Option for enabling/disabling storage.
func (o ACIServiceResponseResponseDataCollectionOutput) StorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseDataCollection) *bool { return v.StorageEnabled }).(pulumi.BoolPtrOutput)
}

type ACIServiceResponseResponseDataCollectionPtrOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseDataCollectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseResponseDataCollection)(nil)).Elem()
}

func (o ACIServiceResponseResponseDataCollectionPtrOutput) ToACIServiceResponseResponseDataCollectionPtrOutput() ACIServiceResponseResponseDataCollectionPtrOutput {
	return o
}

func (o ACIServiceResponseResponseDataCollectionPtrOutput) ToACIServiceResponseResponseDataCollectionPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseDataCollectionPtrOutput {
	return o
}

func (o ACIServiceResponseResponseDataCollectionPtrOutput) Elem() ACIServiceResponseResponseDataCollectionOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseDataCollection) ACIServiceResponseResponseDataCollection { return *v }).(ACIServiceResponseResponseDataCollectionOutput)
}

// Option for enabling/disabling Event Hub.
func (o ACIServiceResponseResponseDataCollectionPtrOutput) EventHubEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseDataCollection) *bool {
		if v == nil {
			return nil
		}
		return v.EventHubEnabled
	}).(pulumi.BoolPtrOutput)
}

// Option for enabling/disabling storage.
func (o ACIServiceResponseResponseDataCollectionPtrOutput) StorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseDataCollection) *bool {
		if v == nil {
			return nil
		}
		return v.StorageEnabled
	}).(pulumi.BoolPtrOutput)
}

// The encryption properties.
type ACIServiceResponseResponseEncryptionProperties struct {
	// Encryption Key name
	KeyName string `pulumi:"keyName"`
	// Encryption Key Version
	KeyVersion string `pulumi:"keyVersion"`
	// vault base Url
	VaultBaseUrl string `pulumi:"vaultBaseUrl"`
}

// ACIServiceResponseResponseEncryptionPropertiesInput is an input type that accepts ACIServiceResponseResponseEncryptionPropertiesArgs and ACIServiceResponseResponseEncryptionPropertiesOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseEncryptionPropertiesInput` via:
//
//          ACIServiceResponseResponseEncryptionPropertiesArgs{...}
type ACIServiceResponseResponseEncryptionPropertiesInput interface {
	pulumi.Input

	ToACIServiceResponseResponseEncryptionPropertiesOutput() ACIServiceResponseResponseEncryptionPropertiesOutput
	ToACIServiceResponseResponseEncryptionPropertiesOutputWithContext(context.Context) ACIServiceResponseResponseEncryptionPropertiesOutput
}

// The encryption properties.
type ACIServiceResponseResponseEncryptionPropertiesArgs struct {
	// Encryption Key name
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// Encryption Key Version
	KeyVersion pulumi.StringInput `pulumi:"keyVersion"`
	// vault base Url
	VaultBaseUrl pulumi.StringInput `pulumi:"vaultBaseUrl"`
}

func (ACIServiceResponseResponseEncryptionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponseEncryptionProperties)(nil)).Elem()
}

func (i ACIServiceResponseResponseEncryptionPropertiesArgs) ToACIServiceResponseResponseEncryptionPropertiesOutput() ACIServiceResponseResponseEncryptionPropertiesOutput {
	return i.ToACIServiceResponseResponseEncryptionPropertiesOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseEncryptionPropertiesArgs) ToACIServiceResponseResponseEncryptionPropertiesOutputWithContext(ctx context.Context) ACIServiceResponseResponseEncryptionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseEncryptionPropertiesOutput)
}

func (i ACIServiceResponseResponseEncryptionPropertiesArgs) ToACIServiceResponseResponseEncryptionPropertiesPtrOutput() ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return i.ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseEncryptionPropertiesArgs) ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseEncryptionPropertiesOutput).ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(ctx)
}

// ACIServiceResponseResponseEncryptionPropertiesPtrInput is an input type that accepts ACIServiceResponseResponseEncryptionPropertiesArgs, ACIServiceResponseResponseEncryptionPropertiesPtr and ACIServiceResponseResponseEncryptionPropertiesPtrOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseEncryptionPropertiesPtrInput` via:
//
//          ACIServiceResponseResponseEncryptionPropertiesArgs{...}
//
//  or:
//
//          nil
type ACIServiceResponseResponseEncryptionPropertiesPtrInput interface {
	pulumi.Input

	ToACIServiceResponseResponseEncryptionPropertiesPtrOutput() ACIServiceResponseResponseEncryptionPropertiesPtrOutput
	ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(context.Context) ACIServiceResponseResponseEncryptionPropertiesPtrOutput
}

type aciserviceResponseResponseEncryptionPropertiesPtrType ACIServiceResponseResponseEncryptionPropertiesArgs

func ACIServiceResponseResponseEncryptionPropertiesPtr(v *ACIServiceResponseResponseEncryptionPropertiesArgs) ACIServiceResponseResponseEncryptionPropertiesPtrInput {
	return (*aciserviceResponseResponseEncryptionPropertiesPtrType)(v)
}

func (*aciserviceResponseResponseEncryptionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseResponseEncryptionProperties)(nil)).Elem()
}

func (i *aciserviceResponseResponseEncryptionPropertiesPtrType) ToACIServiceResponseResponseEncryptionPropertiesPtrOutput() ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return i.ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (i *aciserviceResponseResponseEncryptionPropertiesPtrType) ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseEncryptionPropertiesPtrOutput)
}

// The encryption properties.
type ACIServiceResponseResponseEncryptionPropertiesOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseEncryptionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponseEncryptionProperties)(nil)).Elem()
}

func (o ACIServiceResponseResponseEncryptionPropertiesOutput) ToACIServiceResponseResponseEncryptionPropertiesOutput() ACIServiceResponseResponseEncryptionPropertiesOutput {
	return o
}

func (o ACIServiceResponseResponseEncryptionPropertiesOutput) ToACIServiceResponseResponseEncryptionPropertiesOutputWithContext(ctx context.Context) ACIServiceResponseResponseEncryptionPropertiesOutput {
	return o
}

func (o ACIServiceResponseResponseEncryptionPropertiesOutput) ToACIServiceResponseResponseEncryptionPropertiesPtrOutput() ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return o.ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (o ACIServiceResponseResponseEncryptionPropertiesOutput) ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEncryptionProperties) *ACIServiceResponseResponseEncryptionProperties {
		return &v
	}).(ACIServiceResponseResponseEncryptionPropertiesPtrOutput)
}

// Encryption Key name
func (o ACIServiceResponseResponseEncryptionPropertiesOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEncryptionProperties) string { return v.KeyName }).(pulumi.StringOutput)
}

// Encryption Key Version
func (o ACIServiceResponseResponseEncryptionPropertiesOutput) KeyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEncryptionProperties) string { return v.KeyVersion }).(pulumi.StringOutput)
}

// vault base Url
func (o ACIServiceResponseResponseEncryptionPropertiesOutput) VaultBaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEncryptionProperties) string { return v.VaultBaseUrl }).(pulumi.StringOutput)
}

type ACIServiceResponseResponseEncryptionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseEncryptionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseResponseEncryptionProperties)(nil)).Elem()
}

func (o ACIServiceResponseResponseEncryptionPropertiesPtrOutput) ToACIServiceResponseResponseEncryptionPropertiesPtrOutput() ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return o
}

func (o ACIServiceResponseResponseEncryptionPropertiesPtrOutput) ToACIServiceResponseResponseEncryptionPropertiesPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseEncryptionPropertiesPtrOutput {
	return o
}

func (o ACIServiceResponseResponseEncryptionPropertiesPtrOutput) Elem() ACIServiceResponseResponseEncryptionPropertiesOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEncryptionProperties) ACIServiceResponseResponseEncryptionProperties {
		return *v
	}).(ACIServiceResponseResponseEncryptionPropertiesOutput)
}

// Encryption Key name
func (o ACIServiceResponseResponseEncryptionPropertiesPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEncryptionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyName
	}).(pulumi.StringPtrOutput)
}

// Encryption Key Version
func (o ACIServiceResponseResponseEncryptionPropertiesPtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEncryptionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

// vault base Url
func (o ACIServiceResponseResponseEncryptionPropertiesPtrOutput) VaultBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEncryptionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.VaultBaseUrl
	}).(pulumi.StringPtrOutput)
}

// The Environment, models and assets used for inferencing.
type ACIServiceResponseResponseEnvironmentImageRequest struct {
	// The list of assets.
	Assets []ImageAssetResponse `pulumi:"assets"`
	// The name of the driver file.
	DriverProgram *string `pulumi:"driverProgram"`
	// The details of the AZURE ML environment.
	Environment *EnvironmentImageResponseResponseEnvironment `pulumi:"environment"`
	// The unique identifying details of the AZURE ML environment.
	EnvironmentReference *EnvironmentImageResponseResponseEnvironmentReference `pulumi:"environmentReference"`
	// The list of model Ids.
	ModelIds []string `pulumi:"modelIds"`
	// The list of models.
	Models []ModelResponse `pulumi:"models"`
}

// ACIServiceResponseResponseEnvironmentImageRequestInput is an input type that accepts ACIServiceResponseResponseEnvironmentImageRequestArgs and ACIServiceResponseResponseEnvironmentImageRequestOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseEnvironmentImageRequestInput` via:
//
//          ACIServiceResponseResponseEnvironmentImageRequestArgs{...}
type ACIServiceResponseResponseEnvironmentImageRequestInput interface {
	pulumi.Input

	ToACIServiceResponseResponseEnvironmentImageRequestOutput() ACIServiceResponseResponseEnvironmentImageRequestOutput
	ToACIServiceResponseResponseEnvironmentImageRequestOutputWithContext(context.Context) ACIServiceResponseResponseEnvironmentImageRequestOutput
}

// The Environment, models and assets used for inferencing.
type ACIServiceResponseResponseEnvironmentImageRequestArgs struct {
	// The list of assets.
	Assets ImageAssetResponseArrayInput `pulumi:"assets"`
	// The name of the driver file.
	DriverProgram pulumi.StringPtrInput `pulumi:"driverProgram"`
	// The details of the AZURE ML environment.
	Environment EnvironmentImageResponseResponseEnvironmentPtrInput `pulumi:"environment"`
	// The unique identifying details of the AZURE ML environment.
	EnvironmentReference EnvironmentImageResponseResponseEnvironmentReferencePtrInput `pulumi:"environmentReference"`
	// The list of model Ids.
	ModelIds pulumi.StringArrayInput `pulumi:"modelIds"`
	// The list of models.
	Models ModelResponseArrayInput `pulumi:"models"`
}

func (ACIServiceResponseResponseEnvironmentImageRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponseEnvironmentImageRequest)(nil)).Elem()
}

func (i ACIServiceResponseResponseEnvironmentImageRequestArgs) ToACIServiceResponseResponseEnvironmentImageRequestOutput() ACIServiceResponseResponseEnvironmentImageRequestOutput {
	return i.ToACIServiceResponseResponseEnvironmentImageRequestOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseEnvironmentImageRequestArgs) ToACIServiceResponseResponseEnvironmentImageRequestOutputWithContext(ctx context.Context) ACIServiceResponseResponseEnvironmentImageRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseEnvironmentImageRequestOutput)
}

func (i ACIServiceResponseResponseEnvironmentImageRequestArgs) ToACIServiceResponseResponseEnvironmentImageRequestPtrOutput() ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return i.ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseEnvironmentImageRequestArgs) ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseEnvironmentImageRequestOutput).ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx)
}

// ACIServiceResponseResponseEnvironmentImageRequestPtrInput is an input type that accepts ACIServiceResponseResponseEnvironmentImageRequestArgs, ACIServiceResponseResponseEnvironmentImageRequestPtr and ACIServiceResponseResponseEnvironmentImageRequestPtrOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseEnvironmentImageRequestPtrInput` via:
//
//          ACIServiceResponseResponseEnvironmentImageRequestArgs{...}
//
//  or:
//
//          nil
type ACIServiceResponseResponseEnvironmentImageRequestPtrInput interface {
	pulumi.Input

	ToACIServiceResponseResponseEnvironmentImageRequestPtrOutput() ACIServiceResponseResponseEnvironmentImageRequestPtrOutput
	ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(context.Context) ACIServiceResponseResponseEnvironmentImageRequestPtrOutput
}

type aciserviceResponseResponseEnvironmentImageRequestPtrType ACIServiceResponseResponseEnvironmentImageRequestArgs

func ACIServiceResponseResponseEnvironmentImageRequestPtr(v *ACIServiceResponseResponseEnvironmentImageRequestArgs) ACIServiceResponseResponseEnvironmentImageRequestPtrInput {
	return (*aciserviceResponseResponseEnvironmentImageRequestPtrType)(v)
}

func (*aciserviceResponseResponseEnvironmentImageRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseResponseEnvironmentImageRequest)(nil)).Elem()
}

func (i *aciserviceResponseResponseEnvironmentImageRequestPtrType) ToACIServiceResponseResponseEnvironmentImageRequestPtrOutput() ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return i.ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (i *aciserviceResponseResponseEnvironmentImageRequestPtrType) ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseEnvironmentImageRequestPtrOutput)
}

// The Environment, models and assets used for inferencing.
type ACIServiceResponseResponseEnvironmentImageRequestOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseEnvironmentImageRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponseEnvironmentImageRequest)(nil)).Elem()
}

func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) ToACIServiceResponseResponseEnvironmentImageRequestOutput() ACIServiceResponseResponseEnvironmentImageRequestOutput {
	return o
}

func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) ToACIServiceResponseResponseEnvironmentImageRequestOutputWithContext(ctx context.Context) ACIServiceResponseResponseEnvironmentImageRequestOutput {
	return o
}

func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) ToACIServiceResponseResponseEnvironmentImageRequestPtrOutput() ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o.ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEnvironmentImageRequest) *ACIServiceResponseResponseEnvironmentImageRequest {
		return &v
	}).(ACIServiceResponseResponseEnvironmentImageRequestPtrOutput)
}

// The list of assets.
func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) Assets() ImageAssetResponseArrayOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEnvironmentImageRequest) []ImageAssetResponse { return v.Assets }).(ImageAssetResponseArrayOutput)
}

// The name of the driver file.
func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) DriverProgram() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEnvironmentImageRequest) *string { return v.DriverProgram }).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) Environment() EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEnvironmentImageRequest) *EnvironmentImageResponseResponseEnvironment {
		return v.Environment
	}).(EnvironmentImageResponseResponseEnvironmentPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) EnvironmentReference() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEnvironmentImageRequest) *EnvironmentImageResponseResponseEnvironmentReference {
		return v.EnvironmentReference
	}).(EnvironmentImageResponseResponseEnvironmentReferencePtrOutput)
}

// The list of model Ids.
func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) ModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEnvironmentImageRequest) []string { return v.ModelIds }).(pulumi.StringArrayOutput)
}

// The list of models.
func (o ACIServiceResponseResponseEnvironmentImageRequestOutput) Models() ModelResponseArrayOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseEnvironmentImageRequest) []ModelResponse { return v.Models }).(ModelResponseArrayOutput)
}

type ACIServiceResponseResponseEnvironmentImageRequestPtrOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseResponseEnvironmentImageRequest)(nil)).Elem()
}

func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) ToACIServiceResponseResponseEnvironmentImageRequestPtrOutput() ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o
}

func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) ToACIServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o
}

func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) Elem() ACIServiceResponseResponseEnvironmentImageRequestOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEnvironmentImageRequest) ACIServiceResponseResponseEnvironmentImageRequest {
		return *v
	}).(ACIServiceResponseResponseEnvironmentImageRequestOutput)
}

// The list of assets.
func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) Assets() ImageAssetResponseArrayOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEnvironmentImageRequest) []ImageAssetResponse {
		if v == nil {
			return nil
		}
		return v.Assets
	}).(ImageAssetResponseArrayOutput)
}

// The name of the driver file.
func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) DriverProgram() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEnvironmentImageRequest) *string {
		if v == nil {
			return nil
		}
		return v.DriverProgram
	}).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) Environment() EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEnvironmentImageRequest) *EnvironmentImageResponseResponseEnvironment {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(EnvironmentImageResponseResponseEnvironmentPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) EnvironmentReference() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEnvironmentImageRequest) *EnvironmentImageResponseResponseEnvironmentReference {
		if v == nil {
			return nil
		}
		return v.EnvironmentReference
	}).(EnvironmentImageResponseResponseEnvironmentReferencePtrOutput)
}

// The list of model Ids.
func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) ModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEnvironmentImageRequest) []string {
		if v == nil {
			return nil
		}
		return v.ModelIds
	}).(pulumi.StringArrayOutput)
}

// The list of models.
func (o ACIServiceResponseResponseEnvironmentImageRequestPtrOutput) Models() ModelResponseArrayOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseEnvironmentImageRequest) []ModelResponse {
		if v == nil {
			return nil
		}
		return v.Models
	}).(ModelResponseArrayOutput)
}

// The virtual network configuration.
type ACIServiceResponseResponseVnetConfiguration struct {
	// The name of the virtual network subnet.
	SubnetName *string `pulumi:"subnetName"`
	// The name of the virtual network.
	VnetName *string `pulumi:"vnetName"`
}

// ACIServiceResponseResponseVnetConfigurationInput is an input type that accepts ACIServiceResponseResponseVnetConfigurationArgs and ACIServiceResponseResponseVnetConfigurationOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseVnetConfigurationInput` via:
//
//          ACIServiceResponseResponseVnetConfigurationArgs{...}
type ACIServiceResponseResponseVnetConfigurationInput interface {
	pulumi.Input

	ToACIServiceResponseResponseVnetConfigurationOutput() ACIServiceResponseResponseVnetConfigurationOutput
	ToACIServiceResponseResponseVnetConfigurationOutputWithContext(context.Context) ACIServiceResponseResponseVnetConfigurationOutput
}

// The virtual network configuration.
type ACIServiceResponseResponseVnetConfigurationArgs struct {
	// The name of the virtual network subnet.
	SubnetName pulumi.StringPtrInput `pulumi:"subnetName"`
	// The name of the virtual network.
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
}

func (ACIServiceResponseResponseVnetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponseVnetConfiguration)(nil)).Elem()
}

func (i ACIServiceResponseResponseVnetConfigurationArgs) ToACIServiceResponseResponseVnetConfigurationOutput() ACIServiceResponseResponseVnetConfigurationOutput {
	return i.ToACIServiceResponseResponseVnetConfigurationOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseVnetConfigurationArgs) ToACIServiceResponseResponseVnetConfigurationOutputWithContext(ctx context.Context) ACIServiceResponseResponseVnetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseVnetConfigurationOutput)
}

func (i ACIServiceResponseResponseVnetConfigurationArgs) ToACIServiceResponseResponseVnetConfigurationPtrOutput() ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return i.ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(context.Background())
}

func (i ACIServiceResponseResponseVnetConfigurationArgs) ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseVnetConfigurationOutput).ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(ctx)
}

// ACIServiceResponseResponseVnetConfigurationPtrInput is an input type that accepts ACIServiceResponseResponseVnetConfigurationArgs, ACIServiceResponseResponseVnetConfigurationPtr and ACIServiceResponseResponseVnetConfigurationPtrOutput values.
// You can construct a concrete instance of `ACIServiceResponseResponseVnetConfigurationPtrInput` via:
//
//          ACIServiceResponseResponseVnetConfigurationArgs{...}
//
//  or:
//
//          nil
type ACIServiceResponseResponseVnetConfigurationPtrInput interface {
	pulumi.Input

	ToACIServiceResponseResponseVnetConfigurationPtrOutput() ACIServiceResponseResponseVnetConfigurationPtrOutput
	ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(context.Context) ACIServiceResponseResponseVnetConfigurationPtrOutput
}

type aciserviceResponseResponseVnetConfigurationPtrType ACIServiceResponseResponseVnetConfigurationArgs

func ACIServiceResponseResponseVnetConfigurationPtr(v *ACIServiceResponseResponseVnetConfigurationArgs) ACIServiceResponseResponseVnetConfigurationPtrInput {
	return (*aciserviceResponseResponseVnetConfigurationPtrType)(v)
}

func (*aciserviceResponseResponseVnetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseResponseVnetConfiguration)(nil)).Elem()
}

func (i *aciserviceResponseResponseVnetConfigurationPtrType) ToACIServiceResponseResponseVnetConfigurationPtrOutput() ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return i.ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(context.Background())
}

func (i *aciserviceResponseResponseVnetConfigurationPtrType) ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceResponseResponseVnetConfigurationPtrOutput)
}

// The virtual network configuration.
type ACIServiceResponseResponseVnetConfigurationOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseVnetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACIServiceResponseResponseVnetConfiguration)(nil)).Elem()
}

func (o ACIServiceResponseResponseVnetConfigurationOutput) ToACIServiceResponseResponseVnetConfigurationOutput() ACIServiceResponseResponseVnetConfigurationOutput {
	return o
}

func (o ACIServiceResponseResponseVnetConfigurationOutput) ToACIServiceResponseResponseVnetConfigurationOutputWithContext(ctx context.Context) ACIServiceResponseResponseVnetConfigurationOutput {
	return o
}

func (o ACIServiceResponseResponseVnetConfigurationOutput) ToACIServiceResponseResponseVnetConfigurationPtrOutput() ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return o.ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(context.Background())
}

func (o ACIServiceResponseResponseVnetConfigurationOutput) ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseVnetConfiguration) *ACIServiceResponseResponseVnetConfiguration {
		return &v
	}).(ACIServiceResponseResponseVnetConfigurationPtrOutput)
}

// The name of the virtual network subnet.
func (o ACIServiceResponseResponseVnetConfigurationOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseVnetConfiguration) *string { return v.SubnetName }).(pulumi.StringPtrOutput)
}

// The name of the virtual network.
func (o ACIServiceResponseResponseVnetConfigurationOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACIServiceResponseResponseVnetConfiguration) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

type ACIServiceResponseResponseVnetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ACIServiceResponseResponseVnetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIServiceResponseResponseVnetConfiguration)(nil)).Elem()
}

func (o ACIServiceResponseResponseVnetConfigurationPtrOutput) ToACIServiceResponseResponseVnetConfigurationPtrOutput() ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return o
}

func (o ACIServiceResponseResponseVnetConfigurationPtrOutput) ToACIServiceResponseResponseVnetConfigurationPtrOutputWithContext(ctx context.Context) ACIServiceResponseResponseVnetConfigurationPtrOutput {
	return o
}

func (o ACIServiceResponseResponseVnetConfigurationPtrOutput) Elem() ACIServiceResponseResponseVnetConfigurationOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseVnetConfiguration) ACIServiceResponseResponseVnetConfiguration {
		return *v
	}).(ACIServiceResponseResponseVnetConfigurationOutput)
}

// The name of the virtual network subnet.
func (o ACIServiceResponseResponseVnetConfigurationPtrOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseVnetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SubnetName
	}).(pulumi.StringPtrOutput)
}

// The name of the virtual network.
func (o ACIServiceResponseResponseVnetConfigurationPtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIServiceResponseResponseVnetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// A Machine Learning compute based on AKS.
type AKS struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AKS'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// AKS properties
	Properties *AKSProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// AKSInput is an input type that accepts AKSArgs and AKSOutput values.
// You can construct a concrete instance of `AKSInput` via:
//
//          AKSArgs{...}
type AKSInput interface {
	pulumi.Input

	ToAKSOutput() AKSOutput
	ToAKSOutputWithContext(context.Context) AKSOutput
}

// A Machine Learning compute based on AKS.
type AKSArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AKS'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// AKS properties
	Properties AKSPropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (AKSArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKS)(nil)).Elem()
}

func (i AKSArgs) ToAKSOutput() AKSOutput {
	return i.ToAKSOutputWithContext(context.Background())
}

func (i AKSArgs) ToAKSOutputWithContext(ctx context.Context) AKSOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSOutput)
}

// A Machine Learning compute based on AKS.
type AKSOutput struct{ *pulumi.OutputState }

func (AKSOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKS)(nil)).Elem()
}

func (o AKSOutput) ToAKSOutput() AKSOutput {
	return o
}

func (o AKSOutput) ToAKSOutputWithContext(ctx context.Context) AKSOutput {
	return o
}

// Location for the underlying compute
func (o AKSOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKS) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'AKS'.
func (o AKSOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AKS) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o AKSOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKS) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// AKS properties
func (o AKSOutput) Properties() AKSPropertiesPtrOutput {
	return o.ApplyT(func(v AKS) *AKSProperties { return v.Properties }).(AKSPropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o AKSOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKS) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// A Machine Learning compute based on AKS.
type AKSInvokeResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AKS'.
	ComputeType string `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// AKS properties
	Properties *AKSInvokeResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorInvokeResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// AKSInvokeResponseInput is an input type that accepts AKSInvokeResponseArgs and AKSInvokeResponseOutput values.
// You can construct a concrete instance of `AKSInvokeResponseInput` via:
//
//          AKSInvokeResponseArgs{...}
type AKSInvokeResponseInput interface {
	pulumi.Input

	ToAKSInvokeResponseOutput() AKSInvokeResponseOutput
	ToAKSInvokeResponseOutputWithContext(context.Context) AKSInvokeResponseOutput
}

// A Machine Learning compute based on AKS.
type AKSInvokeResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AKS'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn pulumi.StringInput `pulumi:"modifiedOn"`
	// AKS properties
	Properties AKSInvokeResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorInvokeResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (AKSInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSInvokeResponse)(nil)).Elem()
}

func (i AKSInvokeResponseArgs) ToAKSInvokeResponseOutput() AKSInvokeResponseOutput {
	return i.ToAKSInvokeResponseOutputWithContext(context.Background())
}

func (i AKSInvokeResponseArgs) ToAKSInvokeResponseOutputWithContext(ctx context.Context) AKSInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSInvokeResponseOutput)
}

// A Machine Learning compute based on AKS.
type AKSInvokeResponseOutput struct{ *pulumi.OutputState }

func (AKSInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSInvokeResponse)(nil)).Elem()
}

func (o AKSInvokeResponseOutput) ToAKSInvokeResponseOutput() AKSInvokeResponseOutput {
	return o
}

func (o AKSInvokeResponseOutput) ToAKSInvokeResponseOutputWithContext(ctx context.Context) AKSInvokeResponseOutput {
	return o
}

// Location for the underlying compute
func (o AKSInvokeResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSInvokeResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'AKS'.
func (o AKSInvokeResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AKSInvokeResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The date and time when the compute was created.
func (o AKSInvokeResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v AKSInvokeResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o AKSInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o AKSInvokeResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v AKSInvokeResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The date and time when the compute was last modified.
func (o AKSInvokeResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v AKSInvokeResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// AKS properties
func (o AKSInvokeResponseOutput) Properties() AKSInvokeResponsePropertiesPtrOutput {
	return o.ApplyT(func(v AKSInvokeResponse) *AKSInvokeResponseProperties { return v.Properties }).(AKSInvokeResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o AKSInvokeResponseOutput) ProvisioningErrors() MachineLearningServiceErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v AKSInvokeResponse) []MachineLearningServiceErrorInvokeResponse { return v.ProvisioningErrors }).(MachineLearningServiceErrorInvokeResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o AKSInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AKSInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o AKSInvokeResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSInvokeResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// AKS properties
type AKSInvokeResponseProperties struct {
	// Number of agents
	AgentCount *int `pulumi:"agentCount"`
	// Agent virtual machine size
	AgentVMSize *string `pulumi:"agentVMSize"`
	// AKS networking configuration for vnet
	AksNetworkingConfiguration *AksNetworkingConfigurationInvokeResponse `pulumi:"aksNetworkingConfiguration"`
	// Cluster full qualified domain name
	ClusterFqdn *string `pulumi:"clusterFqdn"`
	// SSL configuration
	SslConfiguration *SslConfigurationInvokeResponse `pulumi:"sslConfiguration"`
	// System services
	SystemServices []SystemServiceInvokeResponse `pulumi:"systemServices"`
}

// AKSInvokeResponsePropertiesInput is an input type that accepts AKSInvokeResponsePropertiesArgs and AKSInvokeResponsePropertiesOutput values.
// You can construct a concrete instance of `AKSInvokeResponsePropertiesInput` via:
//
//          AKSInvokeResponsePropertiesArgs{...}
type AKSInvokeResponsePropertiesInput interface {
	pulumi.Input

	ToAKSInvokeResponsePropertiesOutput() AKSInvokeResponsePropertiesOutput
	ToAKSInvokeResponsePropertiesOutputWithContext(context.Context) AKSInvokeResponsePropertiesOutput
}

// AKS properties
type AKSInvokeResponsePropertiesArgs struct {
	// Number of agents
	AgentCount pulumi.IntPtrInput `pulumi:"agentCount"`
	// Agent virtual machine size
	AgentVMSize pulumi.StringPtrInput `pulumi:"agentVMSize"`
	// AKS networking configuration for vnet
	AksNetworkingConfiguration AksNetworkingConfigurationInvokeResponsePtrInput `pulumi:"aksNetworkingConfiguration"`
	// Cluster full qualified domain name
	ClusterFqdn pulumi.StringPtrInput `pulumi:"clusterFqdn"`
	// SSL configuration
	SslConfiguration SslConfigurationInvokeResponsePtrInput `pulumi:"sslConfiguration"`
	// System services
	SystemServices SystemServiceInvokeResponseArrayInput `pulumi:"systemServices"`
}

func (AKSInvokeResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSInvokeResponseProperties)(nil)).Elem()
}

func (i AKSInvokeResponsePropertiesArgs) ToAKSInvokeResponsePropertiesOutput() AKSInvokeResponsePropertiesOutput {
	return i.ToAKSInvokeResponsePropertiesOutputWithContext(context.Background())
}

func (i AKSInvokeResponsePropertiesArgs) ToAKSInvokeResponsePropertiesOutputWithContext(ctx context.Context) AKSInvokeResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSInvokeResponsePropertiesOutput)
}

func (i AKSInvokeResponsePropertiesArgs) ToAKSInvokeResponsePropertiesPtrOutput() AKSInvokeResponsePropertiesPtrOutput {
	return i.ToAKSInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i AKSInvokeResponsePropertiesArgs) ToAKSInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) AKSInvokeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSInvokeResponsePropertiesOutput).ToAKSInvokeResponsePropertiesPtrOutputWithContext(ctx)
}

// AKSInvokeResponsePropertiesPtrInput is an input type that accepts AKSInvokeResponsePropertiesArgs, AKSInvokeResponsePropertiesPtr and AKSInvokeResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `AKSInvokeResponsePropertiesPtrInput` via:
//
//          AKSInvokeResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type AKSInvokeResponsePropertiesPtrInput interface {
	pulumi.Input

	ToAKSInvokeResponsePropertiesPtrOutput() AKSInvokeResponsePropertiesPtrOutput
	ToAKSInvokeResponsePropertiesPtrOutputWithContext(context.Context) AKSInvokeResponsePropertiesPtrOutput
}

type aksinvokeResponsePropertiesPtrType AKSInvokeResponsePropertiesArgs

func AKSInvokeResponsePropertiesPtr(v *AKSInvokeResponsePropertiesArgs) AKSInvokeResponsePropertiesPtrInput {
	return (*aksinvokeResponsePropertiesPtrType)(v)
}

func (*aksinvokeResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSInvokeResponseProperties)(nil)).Elem()
}

func (i *aksinvokeResponsePropertiesPtrType) ToAKSInvokeResponsePropertiesPtrOutput() AKSInvokeResponsePropertiesPtrOutput {
	return i.ToAKSInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *aksinvokeResponsePropertiesPtrType) ToAKSInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) AKSInvokeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSInvokeResponsePropertiesPtrOutput)
}

// AKS properties
type AKSInvokeResponsePropertiesOutput struct{ *pulumi.OutputState }

func (AKSInvokeResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSInvokeResponseProperties)(nil)).Elem()
}

func (o AKSInvokeResponsePropertiesOutput) ToAKSInvokeResponsePropertiesOutput() AKSInvokeResponsePropertiesOutput {
	return o
}

func (o AKSInvokeResponsePropertiesOutput) ToAKSInvokeResponsePropertiesOutputWithContext(ctx context.Context) AKSInvokeResponsePropertiesOutput {
	return o
}

func (o AKSInvokeResponsePropertiesOutput) ToAKSInvokeResponsePropertiesPtrOutput() AKSInvokeResponsePropertiesPtrOutput {
	return o.ToAKSInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o AKSInvokeResponsePropertiesOutput) ToAKSInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) AKSInvokeResponsePropertiesPtrOutput {
	return o.ApplyT(func(v AKSInvokeResponseProperties) *AKSInvokeResponseProperties {
		return &v
	}).(AKSInvokeResponsePropertiesPtrOutput)
}

// Number of agents
func (o AKSInvokeResponsePropertiesOutput) AgentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSInvokeResponseProperties) *int { return v.AgentCount }).(pulumi.IntPtrOutput)
}

// Agent virtual machine size
func (o AKSInvokeResponsePropertiesOutput) AgentVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSInvokeResponseProperties) *string { return v.AgentVMSize }).(pulumi.StringPtrOutput)
}

// AKS networking configuration for vnet
func (o AKSInvokeResponsePropertiesOutput) AksNetworkingConfiguration() AksNetworkingConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v AKSInvokeResponseProperties) *AksNetworkingConfigurationInvokeResponse {
		return v.AksNetworkingConfiguration
	}).(AksNetworkingConfigurationInvokeResponsePtrOutput)
}

// Cluster full qualified domain name
func (o AKSInvokeResponsePropertiesOutput) ClusterFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSInvokeResponseProperties) *string { return v.ClusterFqdn }).(pulumi.StringPtrOutput)
}

// SSL configuration
func (o AKSInvokeResponsePropertiesOutput) SslConfiguration() SslConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v AKSInvokeResponseProperties) *SslConfigurationInvokeResponse { return v.SslConfiguration }).(SslConfigurationInvokeResponsePtrOutput)
}

// System services
func (o AKSInvokeResponsePropertiesOutput) SystemServices() SystemServiceInvokeResponseArrayOutput {
	return o.ApplyT(func(v AKSInvokeResponseProperties) []SystemServiceInvokeResponse { return v.SystemServices }).(SystemServiceInvokeResponseArrayOutput)
}

type AKSInvokeResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AKSInvokeResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSInvokeResponseProperties)(nil)).Elem()
}

func (o AKSInvokeResponsePropertiesPtrOutput) ToAKSInvokeResponsePropertiesPtrOutput() AKSInvokeResponsePropertiesPtrOutput {
	return o
}

func (o AKSInvokeResponsePropertiesPtrOutput) ToAKSInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) AKSInvokeResponsePropertiesPtrOutput {
	return o
}

func (o AKSInvokeResponsePropertiesPtrOutput) Elem() AKSInvokeResponsePropertiesOutput {
	return o.ApplyT(func(v *AKSInvokeResponseProperties) AKSInvokeResponseProperties { return *v }).(AKSInvokeResponsePropertiesOutput)
}

// Number of agents
func (o AKSInvokeResponsePropertiesPtrOutput) AgentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSInvokeResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.AgentCount
	}).(pulumi.IntPtrOutput)
}

// Agent virtual machine size
func (o AKSInvokeResponsePropertiesPtrOutput) AgentVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSInvokeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.AgentVMSize
	}).(pulumi.StringPtrOutput)
}

// AKS networking configuration for vnet
func (o AKSInvokeResponsePropertiesPtrOutput) AksNetworkingConfiguration() AksNetworkingConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v *AKSInvokeResponseProperties) *AksNetworkingConfigurationInvokeResponse {
		if v == nil {
			return nil
		}
		return v.AksNetworkingConfiguration
	}).(AksNetworkingConfigurationInvokeResponsePtrOutput)
}

// Cluster full qualified domain name
func (o AKSInvokeResponsePropertiesPtrOutput) ClusterFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSInvokeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClusterFqdn
	}).(pulumi.StringPtrOutput)
}

// SSL configuration
func (o AKSInvokeResponsePropertiesPtrOutput) SslConfiguration() SslConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v *AKSInvokeResponseProperties) *SslConfigurationInvokeResponse {
		if v == nil {
			return nil
		}
		return v.SslConfiguration
	}).(SslConfigurationInvokeResponsePtrOutput)
}

// System services
func (o AKSInvokeResponsePropertiesPtrOutput) SystemServices() SystemServiceInvokeResponseArrayOutput {
	return o.ApplyT(func(v *AKSInvokeResponseProperties) []SystemServiceInvokeResponse {
		if v == nil {
			return nil
		}
		return v.SystemServices
	}).(SystemServiceInvokeResponseArrayOutput)
}

// AKS properties
type AKSProperties struct {
	// Number of agents
	AgentCount *int `pulumi:"agentCount"`
	// Agent virtual machine size
	AgentVMSize *string `pulumi:"agentVMSize"`
	// AKS networking configuration for vnet
	AksNetworkingConfiguration *AksNetworkingConfiguration `pulumi:"aksNetworkingConfiguration"`
	// Cluster full qualified domain name
	ClusterFqdn *string `pulumi:"clusterFqdn"`
	// SSL configuration
	SslConfiguration *SslConfiguration `pulumi:"sslConfiguration"`
}

// AKSPropertiesInput is an input type that accepts AKSPropertiesArgs and AKSPropertiesOutput values.
// You can construct a concrete instance of `AKSPropertiesInput` via:
//
//          AKSPropertiesArgs{...}
type AKSPropertiesInput interface {
	pulumi.Input

	ToAKSPropertiesOutput() AKSPropertiesOutput
	ToAKSPropertiesOutputWithContext(context.Context) AKSPropertiesOutput
}

// AKS properties
type AKSPropertiesArgs struct {
	// Number of agents
	AgentCount pulumi.IntPtrInput `pulumi:"agentCount"`
	// Agent virtual machine size
	AgentVMSize pulumi.StringPtrInput `pulumi:"agentVMSize"`
	// AKS networking configuration for vnet
	AksNetworkingConfiguration AksNetworkingConfigurationPtrInput `pulumi:"aksNetworkingConfiguration"`
	// Cluster full qualified domain name
	ClusterFqdn pulumi.StringPtrInput `pulumi:"clusterFqdn"`
	// SSL configuration
	SslConfiguration SslConfigurationPtrInput `pulumi:"sslConfiguration"`
}

func (AKSPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSProperties)(nil)).Elem()
}

func (i AKSPropertiesArgs) ToAKSPropertiesOutput() AKSPropertiesOutput {
	return i.ToAKSPropertiesOutputWithContext(context.Background())
}

func (i AKSPropertiesArgs) ToAKSPropertiesOutputWithContext(ctx context.Context) AKSPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSPropertiesOutput)
}

func (i AKSPropertiesArgs) ToAKSPropertiesPtrOutput() AKSPropertiesPtrOutput {
	return i.ToAKSPropertiesPtrOutputWithContext(context.Background())
}

func (i AKSPropertiesArgs) ToAKSPropertiesPtrOutputWithContext(ctx context.Context) AKSPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSPropertiesOutput).ToAKSPropertiesPtrOutputWithContext(ctx)
}

// AKSPropertiesPtrInput is an input type that accepts AKSPropertiesArgs, AKSPropertiesPtr and AKSPropertiesPtrOutput values.
// You can construct a concrete instance of `AKSPropertiesPtrInput` via:
//
//          AKSPropertiesArgs{...}
//
//  or:
//
//          nil
type AKSPropertiesPtrInput interface {
	pulumi.Input

	ToAKSPropertiesPtrOutput() AKSPropertiesPtrOutput
	ToAKSPropertiesPtrOutputWithContext(context.Context) AKSPropertiesPtrOutput
}

type akspropertiesPtrType AKSPropertiesArgs

func AKSPropertiesPtr(v *AKSPropertiesArgs) AKSPropertiesPtrInput {
	return (*akspropertiesPtrType)(v)
}

func (*akspropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSProperties)(nil)).Elem()
}

func (i *akspropertiesPtrType) ToAKSPropertiesPtrOutput() AKSPropertiesPtrOutput {
	return i.ToAKSPropertiesPtrOutputWithContext(context.Background())
}

func (i *akspropertiesPtrType) ToAKSPropertiesPtrOutputWithContext(ctx context.Context) AKSPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSPropertiesPtrOutput)
}

// AKS properties
type AKSPropertiesOutput struct{ *pulumi.OutputState }

func (AKSPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSProperties)(nil)).Elem()
}

func (o AKSPropertiesOutput) ToAKSPropertiesOutput() AKSPropertiesOutput {
	return o
}

func (o AKSPropertiesOutput) ToAKSPropertiesOutputWithContext(ctx context.Context) AKSPropertiesOutput {
	return o
}

func (o AKSPropertiesOutput) ToAKSPropertiesPtrOutput() AKSPropertiesPtrOutput {
	return o.ToAKSPropertiesPtrOutputWithContext(context.Background())
}

func (o AKSPropertiesOutput) ToAKSPropertiesPtrOutputWithContext(ctx context.Context) AKSPropertiesPtrOutput {
	return o.ApplyT(func(v AKSProperties) *AKSProperties {
		return &v
	}).(AKSPropertiesPtrOutput)
}

// Number of agents
func (o AKSPropertiesOutput) AgentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSProperties) *int { return v.AgentCount }).(pulumi.IntPtrOutput)
}

// Agent virtual machine size
func (o AKSPropertiesOutput) AgentVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSProperties) *string { return v.AgentVMSize }).(pulumi.StringPtrOutput)
}

// AKS networking configuration for vnet
func (o AKSPropertiesOutput) AksNetworkingConfiguration() AksNetworkingConfigurationPtrOutput {
	return o.ApplyT(func(v AKSProperties) *AksNetworkingConfiguration { return v.AksNetworkingConfiguration }).(AksNetworkingConfigurationPtrOutput)
}

// Cluster full qualified domain name
func (o AKSPropertiesOutput) ClusterFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSProperties) *string { return v.ClusterFqdn }).(pulumi.StringPtrOutput)
}

// SSL configuration
func (o AKSPropertiesOutput) SslConfiguration() SslConfigurationPtrOutput {
	return o.ApplyT(func(v AKSProperties) *SslConfiguration { return v.SslConfiguration }).(SslConfigurationPtrOutput)
}

type AKSPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AKSPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSProperties)(nil)).Elem()
}

func (o AKSPropertiesPtrOutput) ToAKSPropertiesPtrOutput() AKSPropertiesPtrOutput {
	return o
}

func (o AKSPropertiesPtrOutput) ToAKSPropertiesPtrOutputWithContext(ctx context.Context) AKSPropertiesPtrOutput {
	return o
}

func (o AKSPropertiesPtrOutput) Elem() AKSPropertiesOutput {
	return o.ApplyT(func(v *AKSProperties) AKSProperties { return *v }).(AKSPropertiesOutput)
}

// Number of agents
func (o AKSPropertiesPtrOutput) AgentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *int {
		if v == nil {
			return nil
		}
		return v.AgentCount
	}).(pulumi.IntPtrOutput)
}

// Agent virtual machine size
func (o AKSPropertiesPtrOutput) AgentVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *string {
		if v == nil {
			return nil
		}
		return v.AgentVMSize
	}).(pulumi.StringPtrOutput)
}

// AKS networking configuration for vnet
func (o AKSPropertiesPtrOutput) AksNetworkingConfiguration() AksNetworkingConfigurationPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *AksNetworkingConfiguration {
		if v == nil {
			return nil
		}
		return v.AksNetworkingConfiguration
	}).(AksNetworkingConfigurationPtrOutput)
}

// Cluster full qualified domain name
func (o AKSPropertiesPtrOutput) ClusterFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClusterFqdn
	}).(pulumi.StringPtrOutput)
}

// SSL configuration
func (o AKSPropertiesPtrOutput) SslConfiguration() SslConfigurationPtrOutput {
	return o.ApplyT(func(v *AKSProperties) *SslConfiguration {
		if v == nil {
			return nil
		}
		return v.SslConfiguration
	}).(SslConfigurationPtrOutput)
}

// The error details.
type AKSReplicaStatusInvokeResponseError struct {
	// Error code.
	Code string `pulumi:"code"`
	// An array of error detail objects.
	Details []ErrorDetailInvokeResponse `pulumi:"details"`
	// Error message.
	Message string `pulumi:"message"`
}

// AKSReplicaStatusInvokeResponseErrorInput is an input type that accepts AKSReplicaStatusInvokeResponseErrorArgs and AKSReplicaStatusInvokeResponseErrorOutput values.
// You can construct a concrete instance of `AKSReplicaStatusInvokeResponseErrorInput` via:
//
//          AKSReplicaStatusInvokeResponseErrorArgs{...}
type AKSReplicaStatusInvokeResponseErrorInput interface {
	pulumi.Input

	ToAKSReplicaStatusInvokeResponseErrorOutput() AKSReplicaStatusInvokeResponseErrorOutput
	ToAKSReplicaStatusInvokeResponseErrorOutputWithContext(context.Context) AKSReplicaStatusInvokeResponseErrorOutput
}

// The error details.
type AKSReplicaStatusInvokeResponseErrorArgs struct {
	// Error code.
	Code pulumi.StringInput `pulumi:"code"`
	// An array of error detail objects.
	Details ErrorDetailInvokeResponseArrayInput `pulumi:"details"`
	// Error message.
	Message pulumi.StringInput `pulumi:"message"`
}

func (AKSReplicaStatusInvokeResponseErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSReplicaStatusInvokeResponseError)(nil)).Elem()
}

func (i AKSReplicaStatusInvokeResponseErrorArgs) ToAKSReplicaStatusInvokeResponseErrorOutput() AKSReplicaStatusInvokeResponseErrorOutput {
	return i.ToAKSReplicaStatusInvokeResponseErrorOutputWithContext(context.Background())
}

func (i AKSReplicaStatusInvokeResponseErrorArgs) ToAKSReplicaStatusInvokeResponseErrorOutputWithContext(ctx context.Context) AKSReplicaStatusInvokeResponseErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSReplicaStatusInvokeResponseErrorOutput)
}

func (i AKSReplicaStatusInvokeResponseErrorArgs) ToAKSReplicaStatusInvokeResponseErrorPtrOutput() AKSReplicaStatusInvokeResponseErrorPtrOutput {
	return i.ToAKSReplicaStatusInvokeResponseErrorPtrOutputWithContext(context.Background())
}

func (i AKSReplicaStatusInvokeResponseErrorArgs) ToAKSReplicaStatusInvokeResponseErrorPtrOutputWithContext(ctx context.Context) AKSReplicaStatusInvokeResponseErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSReplicaStatusInvokeResponseErrorOutput).ToAKSReplicaStatusInvokeResponseErrorPtrOutputWithContext(ctx)
}

// AKSReplicaStatusInvokeResponseErrorPtrInput is an input type that accepts AKSReplicaStatusInvokeResponseErrorArgs, AKSReplicaStatusInvokeResponseErrorPtr and AKSReplicaStatusInvokeResponseErrorPtrOutput values.
// You can construct a concrete instance of `AKSReplicaStatusInvokeResponseErrorPtrInput` via:
//
//          AKSReplicaStatusInvokeResponseErrorArgs{...}
//
//  or:
//
//          nil
type AKSReplicaStatusInvokeResponseErrorPtrInput interface {
	pulumi.Input

	ToAKSReplicaStatusInvokeResponseErrorPtrOutput() AKSReplicaStatusInvokeResponseErrorPtrOutput
	ToAKSReplicaStatusInvokeResponseErrorPtrOutputWithContext(context.Context) AKSReplicaStatusInvokeResponseErrorPtrOutput
}

type aksreplicaStatusInvokeResponseErrorPtrType AKSReplicaStatusInvokeResponseErrorArgs

func AKSReplicaStatusInvokeResponseErrorPtr(v *AKSReplicaStatusInvokeResponseErrorArgs) AKSReplicaStatusInvokeResponseErrorPtrInput {
	return (*aksreplicaStatusInvokeResponseErrorPtrType)(v)
}

func (*aksreplicaStatusInvokeResponseErrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSReplicaStatusInvokeResponseError)(nil)).Elem()
}

func (i *aksreplicaStatusInvokeResponseErrorPtrType) ToAKSReplicaStatusInvokeResponseErrorPtrOutput() AKSReplicaStatusInvokeResponseErrorPtrOutput {
	return i.ToAKSReplicaStatusInvokeResponseErrorPtrOutputWithContext(context.Background())
}

func (i *aksreplicaStatusInvokeResponseErrorPtrType) ToAKSReplicaStatusInvokeResponseErrorPtrOutputWithContext(ctx context.Context) AKSReplicaStatusInvokeResponseErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSReplicaStatusInvokeResponseErrorPtrOutput)
}

// The error details.
type AKSReplicaStatusInvokeResponseErrorOutput struct{ *pulumi.OutputState }

func (AKSReplicaStatusInvokeResponseErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSReplicaStatusInvokeResponseError)(nil)).Elem()
}

func (o AKSReplicaStatusInvokeResponseErrorOutput) ToAKSReplicaStatusInvokeResponseErrorOutput() AKSReplicaStatusInvokeResponseErrorOutput {
	return o
}

func (o AKSReplicaStatusInvokeResponseErrorOutput) ToAKSReplicaStatusInvokeResponseErrorOutputWithContext(ctx context.Context) AKSReplicaStatusInvokeResponseErrorOutput {
	return o
}

func (o AKSReplicaStatusInvokeResponseErrorOutput) ToAKSReplicaStatusInvokeResponseErrorPtrOutput() AKSReplicaStatusInvokeResponseErrorPtrOutput {
	return o.ToAKSReplicaStatusInvokeResponseErrorPtrOutputWithContext(context.Background())
}

func (o AKSReplicaStatusInvokeResponseErrorOutput) ToAKSReplicaStatusInvokeResponseErrorPtrOutputWithContext(ctx context.Context) AKSReplicaStatusInvokeResponseErrorPtrOutput {
	return o.ApplyT(func(v AKSReplicaStatusInvokeResponseError) *AKSReplicaStatusInvokeResponseError {
		return &v
	}).(AKSReplicaStatusInvokeResponseErrorPtrOutput)
}

// Error code.
func (o AKSReplicaStatusInvokeResponseErrorOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v AKSReplicaStatusInvokeResponseError) string { return v.Code }).(pulumi.StringOutput)
}

// An array of error detail objects.
func (o AKSReplicaStatusInvokeResponseErrorOutput) Details() ErrorDetailInvokeResponseArrayOutput {
	return o.ApplyT(func(v AKSReplicaStatusInvokeResponseError) []ErrorDetailInvokeResponse { return v.Details }).(ErrorDetailInvokeResponseArrayOutput)
}

// Error message.
func (o AKSReplicaStatusInvokeResponseErrorOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v AKSReplicaStatusInvokeResponseError) string { return v.Message }).(pulumi.StringOutput)
}

type AKSReplicaStatusInvokeResponseErrorPtrOutput struct{ *pulumi.OutputState }

func (AKSReplicaStatusInvokeResponseErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSReplicaStatusInvokeResponseError)(nil)).Elem()
}

func (o AKSReplicaStatusInvokeResponseErrorPtrOutput) ToAKSReplicaStatusInvokeResponseErrorPtrOutput() AKSReplicaStatusInvokeResponseErrorPtrOutput {
	return o
}

func (o AKSReplicaStatusInvokeResponseErrorPtrOutput) ToAKSReplicaStatusInvokeResponseErrorPtrOutputWithContext(ctx context.Context) AKSReplicaStatusInvokeResponseErrorPtrOutput {
	return o
}

func (o AKSReplicaStatusInvokeResponseErrorPtrOutput) Elem() AKSReplicaStatusInvokeResponseErrorOutput {
	return o.ApplyT(func(v *AKSReplicaStatusInvokeResponseError) AKSReplicaStatusInvokeResponseError { return *v }).(AKSReplicaStatusInvokeResponseErrorOutput)
}

// Error code.
func (o AKSReplicaStatusInvokeResponseErrorPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSReplicaStatusInvokeResponseError) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// An array of error detail objects.
func (o AKSReplicaStatusInvokeResponseErrorPtrOutput) Details() ErrorDetailInvokeResponseArrayOutput {
	return o.ApplyT(func(v *AKSReplicaStatusInvokeResponseError) []ErrorDetailInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(ErrorDetailInvokeResponseArrayOutput)
}

// Error message.
func (o AKSReplicaStatusInvokeResponseErrorPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSReplicaStatusInvokeResponseError) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// The error details.
type AKSReplicaStatusResponseError struct {
	// Error code.
	Code string `pulumi:"code"`
	// An array of error detail objects.
	Details []ErrorDetailResponse `pulumi:"details"`
	// Error message.
	Message string `pulumi:"message"`
}

// AKSReplicaStatusResponseErrorInput is an input type that accepts AKSReplicaStatusResponseErrorArgs and AKSReplicaStatusResponseErrorOutput values.
// You can construct a concrete instance of `AKSReplicaStatusResponseErrorInput` via:
//
//          AKSReplicaStatusResponseErrorArgs{...}
type AKSReplicaStatusResponseErrorInput interface {
	pulumi.Input

	ToAKSReplicaStatusResponseErrorOutput() AKSReplicaStatusResponseErrorOutput
	ToAKSReplicaStatusResponseErrorOutputWithContext(context.Context) AKSReplicaStatusResponseErrorOutput
}

// The error details.
type AKSReplicaStatusResponseErrorArgs struct {
	// Error code.
	Code pulumi.StringInput `pulumi:"code"`
	// An array of error detail objects.
	Details ErrorDetailResponseArrayInput `pulumi:"details"`
	// Error message.
	Message pulumi.StringInput `pulumi:"message"`
}

func (AKSReplicaStatusResponseErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSReplicaStatusResponseError)(nil)).Elem()
}

func (i AKSReplicaStatusResponseErrorArgs) ToAKSReplicaStatusResponseErrorOutput() AKSReplicaStatusResponseErrorOutput {
	return i.ToAKSReplicaStatusResponseErrorOutputWithContext(context.Background())
}

func (i AKSReplicaStatusResponseErrorArgs) ToAKSReplicaStatusResponseErrorOutputWithContext(ctx context.Context) AKSReplicaStatusResponseErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSReplicaStatusResponseErrorOutput)
}

func (i AKSReplicaStatusResponseErrorArgs) ToAKSReplicaStatusResponseErrorPtrOutput() AKSReplicaStatusResponseErrorPtrOutput {
	return i.ToAKSReplicaStatusResponseErrorPtrOutputWithContext(context.Background())
}

func (i AKSReplicaStatusResponseErrorArgs) ToAKSReplicaStatusResponseErrorPtrOutputWithContext(ctx context.Context) AKSReplicaStatusResponseErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSReplicaStatusResponseErrorOutput).ToAKSReplicaStatusResponseErrorPtrOutputWithContext(ctx)
}

// AKSReplicaStatusResponseErrorPtrInput is an input type that accepts AKSReplicaStatusResponseErrorArgs, AKSReplicaStatusResponseErrorPtr and AKSReplicaStatusResponseErrorPtrOutput values.
// You can construct a concrete instance of `AKSReplicaStatusResponseErrorPtrInput` via:
//
//          AKSReplicaStatusResponseErrorArgs{...}
//
//  or:
//
//          nil
type AKSReplicaStatusResponseErrorPtrInput interface {
	pulumi.Input

	ToAKSReplicaStatusResponseErrorPtrOutput() AKSReplicaStatusResponseErrorPtrOutput
	ToAKSReplicaStatusResponseErrorPtrOutputWithContext(context.Context) AKSReplicaStatusResponseErrorPtrOutput
}

type aksreplicaStatusResponseErrorPtrType AKSReplicaStatusResponseErrorArgs

func AKSReplicaStatusResponseErrorPtr(v *AKSReplicaStatusResponseErrorArgs) AKSReplicaStatusResponseErrorPtrInput {
	return (*aksreplicaStatusResponseErrorPtrType)(v)
}

func (*aksreplicaStatusResponseErrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSReplicaStatusResponseError)(nil)).Elem()
}

func (i *aksreplicaStatusResponseErrorPtrType) ToAKSReplicaStatusResponseErrorPtrOutput() AKSReplicaStatusResponseErrorPtrOutput {
	return i.ToAKSReplicaStatusResponseErrorPtrOutputWithContext(context.Background())
}

func (i *aksreplicaStatusResponseErrorPtrType) ToAKSReplicaStatusResponseErrorPtrOutputWithContext(ctx context.Context) AKSReplicaStatusResponseErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSReplicaStatusResponseErrorPtrOutput)
}

// The error details.
type AKSReplicaStatusResponseErrorOutput struct{ *pulumi.OutputState }

func (AKSReplicaStatusResponseErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSReplicaStatusResponseError)(nil)).Elem()
}

func (o AKSReplicaStatusResponseErrorOutput) ToAKSReplicaStatusResponseErrorOutput() AKSReplicaStatusResponseErrorOutput {
	return o
}

func (o AKSReplicaStatusResponseErrorOutput) ToAKSReplicaStatusResponseErrorOutputWithContext(ctx context.Context) AKSReplicaStatusResponseErrorOutput {
	return o
}

func (o AKSReplicaStatusResponseErrorOutput) ToAKSReplicaStatusResponseErrorPtrOutput() AKSReplicaStatusResponseErrorPtrOutput {
	return o.ToAKSReplicaStatusResponseErrorPtrOutputWithContext(context.Background())
}

func (o AKSReplicaStatusResponseErrorOutput) ToAKSReplicaStatusResponseErrorPtrOutputWithContext(ctx context.Context) AKSReplicaStatusResponseErrorPtrOutput {
	return o.ApplyT(func(v AKSReplicaStatusResponseError) *AKSReplicaStatusResponseError {
		return &v
	}).(AKSReplicaStatusResponseErrorPtrOutput)
}

// Error code.
func (o AKSReplicaStatusResponseErrorOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v AKSReplicaStatusResponseError) string { return v.Code }).(pulumi.StringOutput)
}

// An array of error detail objects.
func (o AKSReplicaStatusResponseErrorOutput) Details() ErrorDetailResponseArrayOutput {
	return o.ApplyT(func(v AKSReplicaStatusResponseError) []ErrorDetailResponse { return v.Details }).(ErrorDetailResponseArrayOutput)
}

// Error message.
func (o AKSReplicaStatusResponseErrorOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v AKSReplicaStatusResponseError) string { return v.Message }).(pulumi.StringOutput)
}

type AKSReplicaStatusResponseErrorPtrOutput struct{ *pulumi.OutputState }

func (AKSReplicaStatusResponseErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSReplicaStatusResponseError)(nil)).Elem()
}

func (o AKSReplicaStatusResponseErrorPtrOutput) ToAKSReplicaStatusResponseErrorPtrOutput() AKSReplicaStatusResponseErrorPtrOutput {
	return o
}

func (o AKSReplicaStatusResponseErrorPtrOutput) ToAKSReplicaStatusResponseErrorPtrOutputWithContext(ctx context.Context) AKSReplicaStatusResponseErrorPtrOutput {
	return o
}

func (o AKSReplicaStatusResponseErrorPtrOutput) Elem() AKSReplicaStatusResponseErrorOutput {
	return o.ApplyT(func(v *AKSReplicaStatusResponseError) AKSReplicaStatusResponseError { return *v }).(AKSReplicaStatusResponseErrorOutput)
}

// Error code.
func (o AKSReplicaStatusResponseErrorPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSReplicaStatusResponseError) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// An array of error detail objects.
func (o AKSReplicaStatusResponseErrorPtrOutput) Details() ErrorDetailResponseArrayOutput {
	return o.ApplyT(func(v *AKSReplicaStatusResponseError) []ErrorDetailResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(ErrorDetailResponseArrayOutput)
}

// Error message.
func (o AKSReplicaStatusResponseErrorPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSReplicaStatusResponseError) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// A Machine Learning compute based on AKS.
type AKSResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AKS'.
	ComputeType string `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// AKS properties
	Properties *AKSResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// AKSResponseInput is an input type that accepts AKSResponseArgs and AKSResponseOutput values.
// You can construct a concrete instance of `AKSResponseInput` via:
//
//          AKSResponseArgs{...}
type AKSResponseInput interface {
	pulumi.Input

	ToAKSResponseOutput() AKSResponseOutput
	ToAKSResponseOutputWithContext(context.Context) AKSResponseOutput
}

// A Machine Learning compute based on AKS.
type AKSResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AKS'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn pulumi.StringInput `pulumi:"modifiedOn"`
	// AKS properties
	Properties AKSResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (AKSResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSResponse)(nil)).Elem()
}

func (i AKSResponseArgs) ToAKSResponseOutput() AKSResponseOutput {
	return i.ToAKSResponseOutputWithContext(context.Background())
}

func (i AKSResponseArgs) ToAKSResponseOutputWithContext(ctx context.Context) AKSResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSResponseOutput)
}

// A Machine Learning compute based on AKS.
type AKSResponseOutput struct{ *pulumi.OutputState }

func (AKSResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSResponse)(nil)).Elem()
}

func (o AKSResponseOutput) ToAKSResponseOutput() AKSResponseOutput {
	return o
}

func (o AKSResponseOutput) ToAKSResponseOutputWithContext(ctx context.Context) AKSResponseOutput {
	return o
}

// Location for the underlying compute
func (o AKSResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'AKS'.
func (o AKSResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AKSResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The date and time when the compute was created.
func (o AKSResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v AKSResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o AKSResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o AKSResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v AKSResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The date and time when the compute was last modified.
func (o AKSResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v AKSResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// AKS properties
func (o AKSResponseOutput) Properties() AKSResponsePropertiesPtrOutput {
	return o.ApplyT(func(v AKSResponse) *AKSResponseProperties { return v.Properties }).(AKSResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o AKSResponseOutput) ProvisioningErrors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v AKSResponse) []MachineLearningServiceErrorResponse { return v.ProvisioningErrors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o AKSResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AKSResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o AKSResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// AKS properties
type AKSResponseProperties struct {
	// Number of agents
	AgentCount *int `pulumi:"agentCount"`
	// Agent virtual machine size
	AgentVMSize *string `pulumi:"agentVMSize"`
	// AKS networking configuration for vnet
	AksNetworkingConfiguration *AksNetworkingConfigurationResponse `pulumi:"aksNetworkingConfiguration"`
	// Cluster full qualified domain name
	ClusterFqdn *string `pulumi:"clusterFqdn"`
	// SSL configuration
	SslConfiguration *SslConfigurationResponse `pulumi:"sslConfiguration"`
	// System services
	SystemServices []SystemServiceResponse `pulumi:"systemServices"`
}

// AKSResponsePropertiesInput is an input type that accepts AKSResponsePropertiesArgs and AKSResponsePropertiesOutput values.
// You can construct a concrete instance of `AKSResponsePropertiesInput` via:
//
//          AKSResponsePropertiesArgs{...}
type AKSResponsePropertiesInput interface {
	pulumi.Input

	ToAKSResponsePropertiesOutput() AKSResponsePropertiesOutput
	ToAKSResponsePropertiesOutputWithContext(context.Context) AKSResponsePropertiesOutput
}

// AKS properties
type AKSResponsePropertiesArgs struct {
	// Number of agents
	AgentCount pulumi.IntPtrInput `pulumi:"agentCount"`
	// Agent virtual machine size
	AgentVMSize pulumi.StringPtrInput `pulumi:"agentVMSize"`
	// AKS networking configuration for vnet
	AksNetworkingConfiguration AksNetworkingConfigurationResponsePtrInput `pulumi:"aksNetworkingConfiguration"`
	// Cluster full qualified domain name
	ClusterFqdn pulumi.StringPtrInput `pulumi:"clusterFqdn"`
	// SSL configuration
	SslConfiguration SslConfigurationResponsePtrInput `pulumi:"sslConfiguration"`
	// System services
	SystemServices SystemServiceResponseArrayInput `pulumi:"systemServices"`
}

func (AKSResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSResponseProperties)(nil)).Elem()
}

func (i AKSResponsePropertiesArgs) ToAKSResponsePropertiesOutput() AKSResponsePropertiesOutput {
	return i.ToAKSResponsePropertiesOutputWithContext(context.Background())
}

func (i AKSResponsePropertiesArgs) ToAKSResponsePropertiesOutputWithContext(ctx context.Context) AKSResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSResponsePropertiesOutput)
}

func (i AKSResponsePropertiesArgs) ToAKSResponsePropertiesPtrOutput() AKSResponsePropertiesPtrOutput {
	return i.ToAKSResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i AKSResponsePropertiesArgs) ToAKSResponsePropertiesPtrOutputWithContext(ctx context.Context) AKSResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSResponsePropertiesOutput).ToAKSResponsePropertiesPtrOutputWithContext(ctx)
}

// AKSResponsePropertiesPtrInput is an input type that accepts AKSResponsePropertiesArgs, AKSResponsePropertiesPtr and AKSResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `AKSResponsePropertiesPtrInput` via:
//
//          AKSResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type AKSResponsePropertiesPtrInput interface {
	pulumi.Input

	ToAKSResponsePropertiesPtrOutput() AKSResponsePropertiesPtrOutput
	ToAKSResponsePropertiesPtrOutputWithContext(context.Context) AKSResponsePropertiesPtrOutput
}

type aksresponsePropertiesPtrType AKSResponsePropertiesArgs

func AKSResponsePropertiesPtr(v *AKSResponsePropertiesArgs) AKSResponsePropertiesPtrInput {
	return (*aksresponsePropertiesPtrType)(v)
}

func (*aksresponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSResponseProperties)(nil)).Elem()
}

func (i *aksresponsePropertiesPtrType) ToAKSResponsePropertiesPtrOutput() AKSResponsePropertiesPtrOutput {
	return i.ToAKSResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *aksresponsePropertiesPtrType) ToAKSResponsePropertiesPtrOutputWithContext(ctx context.Context) AKSResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSResponsePropertiesPtrOutput)
}

// AKS properties
type AKSResponsePropertiesOutput struct{ *pulumi.OutputState }

func (AKSResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSResponseProperties)(nil)).Elem()
}

func (o AKSResponsePropertiesOutput) ToAKSResponsePropertiesOutput() AKSResponsePropertiesOutput {
	return o
}

func (o AKSResponsePropertiesOutput) ToAKSResponsePropertiesOutputWithContext(ctx context.Context) AKSResponsePropertiesOutput {
	return o
}

func (o AKSResponsePropertiesOutput) ToAKSResponsePropertiesPtrOutput() AKSResponsePropertiesPtrOutput {
	return o.ToAKSResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o AKSResponsePropertiesOutput) ToAKSResponsePropertiesPtrOutputWithContext(ctx context.Context) AKSResponsePropertiesPtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *AKSResponseProperties {
		return &v
	}).(AKSResponsePropertiesPtrOutput)
}

// Number of agents
func (o AKSResponsePropertiesOutput) AgentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *int { return v.AgentCount }).(pulumi.IntPtrOutput)
}

// Agent virtual machine size
func (o AKSResponsePropertiesOutput) AgentVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *string { return v.AgentVMSize }).(pulumi.StringPtrOutput)
}

// AKS networking configuration for vnet
func (o AKSResponsePropertiesOutput) AksNetworkingConfiguration() AksNetworkingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *AksNetworkingConfigurationResponse { return v.AksNetworkingConfiguration }).(AksNetworkingConfigurationResponsePtrOutput)
}

// Cluster full qualified domain name
func (o AKSResponsePropertiesOutput) ClusterFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *string { return v.ClusterFqdn }).(pulumi.StringPtrOutput)
}

// SSL configuration
func (o AKSResponsePropertiesOutput) SslConfiguration() SslConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AKSResponseProperties) *SslConfigurationResponse { return v.SslConfiguration }).(SslConfigurationResponsePtrOutput)
}

// System services
func (o AKSResponsePropertiesOutput) SystemServices() SystemServiceResponseArrayOutput {
	return o.ApplyT(func(v AKSResponseProperties) []SystemServiceResponse { return v.SystemServices }).(SystemServiceResponseArrayOutput)
}

type AKSResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AKSResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSResponseProperties)(nil)).Elem()
}

func (o AKSResponsePropertiesPtrOutput) ToAKSResponsePropertiesPtrOutput() AKSResponsePropertiesPtrOutput {
	return o
}

func (o AKSResponsePropertiesPtrOutput) ToAKSResponsePropertiesPtrOutputWithContext(ctx context.Context) AKSResponsePropertiesPtrOutput {
	return o
}

func (o AKSResponsePropertiesPtrOutput) Elem() AKSResponsePropertiesOutput {
	return o.ApplyT(func(v *AKSResponseProperties) AKSResponseProperties { return *v }).(AKSResponsePropertiesOutput)
}

// Number of agents
func (o AKSResponsePropertiesPtrOutput) AgentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.AgentCount
	}).(pulumi.IntPtrOutput)
}

// Agent virtual machine size
func (o AKSResponsePropertiesPtrOutput) AgentVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.AgentVMSize
	}).(pulumi.StringPtrOutput)
}

// AKS networking configuration for vnet
func (o AKSResponsePropertiesPtrOutput) AksNetworkingConfiguration() AksNetworkingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *AksNetworkingConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.AksNetworkingConfiguration
	}).(AksNetworkingConfigurationResponsePtrOutput)
}

// Cluster full qualified domain name
func (o AKSResponsePropertiesPtrOutput) ClusterFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClusterFqdn
	}).(pulumi.StringPtrOutput)
}

// SSL configuration
func (o AKSResponsePropertiesPtrOutput) SslConfiguration() SslConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *AKSResponseProperties) *SslConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.SslConfiguration
	}).(SslConfigurationResponsePtrOutput)
}

// System services
func (o AKSResponsePropertiesPtrOutput) SystemServices() SystemServiceResponseArrayOutput {
	return o.ApplyT(func(v *AKSResponseProperties) []SystemServiceResponse {
		if v == nil {
			return nil
		}
		return v.SystemServices
	}).(SystemServiceResponseArrayOutput)
}

// The response for an AKS service.
type AKSServiceResponseInvokeResponse struct {
	// Whether or not AAD authentication is enabled.
	AadAuthEnabled *bool `pulumi:"aadAuthEnabled"`
	// Whether or not Application Insights is enabled.
	AppInsightsEnabled *bool `pulumi:"appInsightsEnabled"`
	// Whether or not authentication is enabled.
	AuthEnabled *bool `pulumi:"authEnabled"`
	// The auto scaler properties.
	AutoScaler *AKSServiceResponseInvokeResponseAutoScaler `pulumi:"autoScaler"`
	// The name of the compute resource.
	ComputeName *string `pulumi:"computeName"`
	// The compute environment type for the service.
	// Expected value is 'Custom'.
	ComputeType string `pulumi:"computeType"`
	// The container resource requirements.
	ContainerResourceRequirements *ContainerResourceRequirementsInvokeResponse `pulumi:"containerResourceRequirements"`
	// Details of the data collection options specified.
	DataCollection *AKSServiceResponseInvokeResponseDataCollection `pulumi:"dataCollection"`
	// The deployment status.
	DeploymentStatus AKSServiceResponseInvokeResponseDeploymentStatus `pulumi:"deploymentStatus"`
	// The deployment type for the service.
	DeploymentType *string `pulumi:"deploymentType"`
	// The service description.
	Description *string `pulumi:"description"`
	// The Environment, models and assets used for inferencing.
	EnvironmentImageRequest *AKSServiceResponseInvokeResponseEnvironmentImageRequest `pulumi:"environmentImageRequest"`
	// The error details.
	Error ServiceResponseBaseInvokeResponseError `pulumi:"error"`
	// Is this the default variant.
	IsDefault *bool `pulumi:"isDefault"`
	// The service tag dictionary. Tags are mutable.
	KvTags map[string]string `pulumi:"kvTags"`
	// The liveness probe requirements.
	LivenessProbeRequirements *AKSServiceResponseInvokeResponseLivenessProbeRequirements `pulumi:"livenessProbeRequirements"`
	// The maximum number of concurrent requests per container.
	MaxConcurrentRequestsPerContainer *int `pulumi:"maxConcurrentRequestsPerContainer"`
	// Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
	MaxQueueWaitMs *int `pulumi:"maxQueueWaitMs"`
	// Details on the models and configurations.
	ModelConfigMap map[string]interface{} `pulumi:"modelConfigMap"`
	// The list of models.
	Models []ModelInvokeResponse `pulumi:"models"`
	// The Kubernetes namespace of the deployment.
	Namespace *string `pulumi:"namespace"`
	// The number of replicas on the cluster.
	NumReplicas *int `pulumi:"numReplicas"`
	// The service property dictionary. Properties are immutable.
	Properties map[string]string `pulumi:"properties"`
	// The scoring timeout in milliseconds.
	ScoringTimeoutMs *int `pulumi:"scoringTimeoutMs"`
	// The Uri for sending scoring requests.
	ScoringUri string `pulumi:"scoringUri"`
	// The current state of the service.
	State string `pulumi:"state"`
	// The Uri for sending swagger requests.
	SwaggerUri string `pulumi:"swaggerUri"`
	// The amount of traffic variant receives.
	TrafficPercentile *float64 `pulumi:"trafficPercentile"`
	// The type of the variant.
	Type *string `pulumi:"type"`
}

// AKSServiceResponseInvokeResponseInput is an input type that accepts AKSServiceResponseInvokeResponseArgs and AKSServiceResponseInvokeResponseOutput values.
// You can construct a concrete instance of `AKSServiceResponseInvokeResponseInput` via:
//
//          AKSServiceResponseInvokeResponseArgs{...}
type AKSServiceResponseInvokeResponseInput interface {
	pulumi.Input

	ToAKSServiceResponseInvokeResponseOutput() AKSServiceResponseInvokeResponseOutput
	ToAKSServiceResponseInvokeResponseOutputWithContext(context.Context) AKSServiceResponseInvokeResponseOutput
}

// The response for an AKS service.
type AKSServiceResponseInvokeResponseArgs struct {
	// Whether or not AAD authentication is enabled.
	AadAuthEnabled pulumi.BoolPtrInput `pulumi:"aadAuthEnabled"`
	// Whether or not Application Insights is enabled.
	AppInsightsEnabled pulumi.BoolPtrInput `pulumi:"appInsightsEnabled"`
	// Whether or not authentication is enabled.
	AuthEnabled pulumi.BoolPtrInput `pulumi:"authEnabled"`
	// The auto scaler properties.
	AutoScaler AKSServiceResponseInvokeResponseAutoScalerPtrInput `pulumi:"autoScaler"`
	// The name of the compute resource.
	ComputeName pulumi.StringPtrInput `pulumi:"computeName"`
	// The compute environment type for the service.
	// Expected value is 'Custom'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The container resource requirements.
	ContainerResourceRequirements ContainerResourceRequirementsInvokeResponsePtrInput `pulumi:"containerResourceRequirements"`
	// Details of the data collection options specified.
	DataCollection AKSServiceResponseInvokeResponseDataCollectionPtrInput `pulumi:"dataCollection"`
	// The deployment status.
	DeploymentStatus AKSServiceResponseInvokeResponseDeploymentStatusInput `pulumi:"deploymentStatus"`
	// The deployment type for the service.
	DeploymentType pulumi.StringPtrInput `pulumi:"deploymentType"`
	// The service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Environment, models and assets used for inferencing.
	EnvironmentImageRequest AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrInput `pulumi:"environmentImageRequest"`
	// The error details.
	Error ServiceResponseBaseInvokeResponseErrorInput `pulumi:"error"`
	// Is this the default variant.
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// The service tag dictionary. Tags are mutable.
	KvTags pulumi.StringMapInput `pulumi:"kvTags"`
	// The liveness probe requirements.
	LivenessProbeRequirements AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrInput `pulumi:"livenessProbeRequirements"`
	// The maximum number of concurrent requests per container.
	MaxConcurrentRequestsPerContainer pulumi.IntPtrInput `pulumi:"maxConcurrentRequestsPerContainer"`
	// Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
	MaxQueueWaitMs pulumi.IntPtrInput `pulumi:"maxQueueWaitMs"`
	// Details on the models and configurations.
	ModelConfigMap pulumi.MapInput `pulumi:"modelConfigMap"`
	// The list of models.
	Models ModelInvokeResponseArrayInput `pulumi:"models"`
	// The Kubernetes namespace of the deployment.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The number of replicas on the cluster.
	NumReplicas pulumi.IntPtrInput `pulumi:"numReplicas"`
	// The service property dictionary. Properties are immutable.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The scoring timeout in milliseconds.
	ScoringTimeoutMs pulumi.IntPtrInput `pulumi:"scoringTimeoutMs"`
	// The Uri for sending scoring requests.
	ScoringUri pulumi.StringInput `pulumi:"scoringUri"`
	// The current state of the service.
	State pulumi.StringInput `pulumi:"state"`
	// The Uri for sending swagger requests.
	SwaggerUri pulumi.StringInput `pulumi:"swaggerUri"`
	// The amount of traffic variant receives.
	TrafficPercentile pulumi.Float64PtrInput `pulumi:"trafficPercentile"`
	// The type of the variant.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AKSServiceResponseInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseInvokeResponse)(nil)).Elem()
}

func (i AKSServiceResponseInvokeResponseArgs) ToAKSServiceResponseInvokeResponseOutput() AKSServiceResponseInvokeResponseOutput {
	return i.ToAKSServiceResponseInvokeResponseOutputWithContext(context.Background())
}

func (i AKSServiceResponseInvokeResponseArgs) ToAKSServiceResponseInvokeResponseOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseInvokeResponseOutput)
}

// The response for an AKS service.
type AKSServiceResponseInvokeResponseOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseInvokeResponse)(nil)).Elem()
}

func (o AKSServiceResponseInvokeResponseOutput) ToAKSServiceResponseInvokeResponseOutput() AKSServiceResponseInvokeResponseOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseOutput) ToAKSServiceResponseInvokeResponseOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseOutput {
	return o
}

// Whether or not AAD authentication is enabled.
func (o AKSServiceResponseInvokeResponseOutput) AadAuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *bool { return v.AadAuthEnabled }).(pulumi.BoolPtrOutput)
}

// Whether or not Application Insights is enabled.
func (o AKSServiceResponseInvokeResponseOutput) AppInsightsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *bool { return v.AppInsightsEnabled }).(pulumi.BoolPtrOutput)
}

// Whether or not authentication is enabled.
func (o AKSServiceResponseInvokeResponseOutput) AuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *bool { return v.AuthEnabled }).(pulumi.BoolPtrOutput)
}

// The auto scaler properties.
func (o AKSServiceResponseInvokeResponseOutput) AutoScaler() AKSServiceResponseInvokeResponseAutoScalerPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *AKSServiceResponseInvokeResponseAutoScaler {
		return v.AutoScaler
	}).(AKSServiceResponseInvokeResponseAutoScalerPtrOutput)
}

// The name of the compute resource.
func (o AKSServiceResponseInvokeResponseOutput) ComputeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *string { return v.ComputeName }).(pulumi.StringPtrOutput)
}

// The compute environment type for the service.
// Expected value is 'Custom'.
func (o AKSServiceResponseInvokeResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The container resource requirements.
func (o AKSServiceResponseInvokeResponseOutput) ContainerResourceRequirements() ContainerResourceRequirementsInvokeResponsePtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *ContainerResourceRequirementsInvokeResponse {
		return v.ContainerResourceRequirements
	}).(ContainerResourceRequirementsInvokeResponsePtrOutput)
}

// Details of the data collection options specified.
func (o AKSServiceResponseInvokeResponseOutput) DataCollection() AKSServiceResponseInvokeResponseDataCollectionPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *AKSServiceResponseInvokeResponseDataCollection {
		return v.DataCollection
	}).(AKSServiceResponseInvokeResponseDataCollectionPtrOutput)
}

// The deployment status.
func (o AKSServiceResponseInvokeResponseOutput) DeploymentStatus() AKSServiceResponseInvokeResponseDeploymentStatusOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) AKSServiceResponseInvokeResponseDeploymentStatus {
		return v.DeploymentStatus
	}).(AKSServiceResponseInvokeResponseDeploymentStatusOutput)
}

// The deployment type for the service.
func (o AKSServiceResponseInvokeResponseOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *string { return v.DeploymentType }).(pulumi.StringPtrOutput)
}

// The service description.
func (o AKSServiceResponseInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Environment, models and assets used for inferencing.
func (o AKSServiceResponseInvokeResponseOutput) EnvironmentImageRequest() AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *AKSServiceResponseInvokeResponseEnvironmentImageRequest {
		return v.EnvironmentImageRequest
	}).(AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput)
}

// The error details.
func (o AKSServiceResponseInvokeResponseOutput) Error() ServiceResponseBaseInvokeResponseErrorOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) ServiceResponseBaseInvokeResponseError { return v.Error }).(ServiceResponseBaseInvokeResponseErrorOutput)
}

// Is this the default variant.
func (o AKSServiceResponseInvokeResponseOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The service tag dictionary. Tags are mutable.
func (o AKSServiceResponseInvokeResponseOutput) KvTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) map[string]string { return v.KvTags }).(pulumi.StringMapOutput)
}

// The liveness probe requirements.
func (o AKSServiceResponseInvokeResponseOutput) LivenessProbeRequirements() AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *AKSServiceResponseInvokeResponseLivenessProbeRequirements {
		return v.LivenessProbeRequirements
	}).(AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput)
}

// The maximum number of concurrent requests per container.
func (o AKSServiceResponseInvokeResponseOutput) MaxConcurrentRequestsPerContainer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *int { return v.MaxConcurrentRequestsPerContainer }).(pulumi.IntPtrOutput)
}

// Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
func (o AKSServiceResponseInvokeResponseOutput) MaxQueueWaitMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *int { return v.MaxQueueWaitMs }).(pulumi.IntPtrOutput)
}

// Details on the models and configurations.
func (o AKSServiceResponseInvokeResponseOutput) ModelConfigMap() pulumi.MapOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) map[string]interface{} { return v.ModelConfigMap }).(pulumi.MapOutput)
}

// The list of models.
func (o AKSServiceResponseInvokeResponseOutput) Models() ModelInvokeResponseArrayOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) []ModelInvokeResponse { return v.Models }).(ModelInvokeResponseArrayOutput)
}

// The Kubernetes namespace of the deployment.
func (o AKSServiceResponseInvokeResponseOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The number of replicas on the cluster.
func (o AKSServiceResponseInvokeResponseOutput) NumReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *int { return v.NumReplicas }).(pulumi.IntPtrOutput)
}

// The service property dictionary. Properties are immutable.
func (o AKSServiceResponseInvokeResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The scoring timeout in milliseconds.
func (o AKSServiceResponseInvokeResponseOutput) ScoringTimeoutMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *int { return v.ScoringTimeoutMs }).(pulumi.IntPtrOutput)
}

// The Uri for sending scoring requests.
func (o AKSServiceResponseInvokeResponseOutput) ScoringUri() pulumi.StringOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) string { return v.ScoringUri }).(pulumi.StringOutput)
}

// The current state of the service.
func (o AKSServiceResponseInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// The Uri for sending swagger requests.
func (o AKSServiceResponseInvokeResponseOutput) SwaggerUri() pulumi.StringOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) string { return v.SwaggerUri }).(pulumi.StringOutput)
}

// The amount of traffic variant receives.
func (o AKSServiceResponseInvokeResponseOutput) TrafficPercentile() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *float64 { return v.TrafficPercentile }).(pulumi.Float64PtrOutput)
}

// The type of the variant.
func (o AKSServiceResponseInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The auto scaler properties.
type AKSServiceResponseInvokeResponseAutoScaler struct {
	// Option to enable/disable auto scaling.
	AutoscaleEnabled *bool `pulumi:"autoscaleEnabled"`
	// The maximum number of replicas in the cluster.
	MaxReplicas *int `pulumi:"maxReplicas"`
	// The minimum number of replicas to scale down to.
	MinReplicas *int `pulumi:"minReplicas"`
	// The amount of seconds to wait between auto scale updates.
	RefreshPeriodInSeconds *int `pulumi:"refreshPeriodInSeconds"`
	// The target utilization percentage to use for determining whether to scale the cluster.
	TargetUtilization *int `pulumi:"targetUtilization"`
}

// AKSServiceResponseInvokeResponseAutoScalerInput is an input type that accepts AKSServiceResponseInvokeResponseAutoScalerArgs and AKSServiceResponseInvokeResponseAutoScalerOutput values.
// You can construct a concrete instance of `AKSServiceResponseInvokeResponseAutoScalerInput` via:
//
//          AKSServiceResponseInvokeResponseAutoScalerArgs{...}
type AKSServiceResponseInvokeResponseAutoScalerInput interface {
	pulumi.Input

	ToAKSServiceResponseInvokeResponseAutoScalerOutput() AKSServiceResponseInvokeResponseAutoScalerOutput
	ToAKSServiceResponseInvokeResponseAutoScalerOutputWithContext(context.Context) AKSServiceResponseInvokeResponseAutoScalerOutput
}

// The auto scaler properties.
type AKSServiceResponseInvokeResponseAutoScalerArgs struct {
	// Option to enable/disable auto scaling.
	AutoscaleEnabled pulumi.BoolPtrInput `pulumi:"autoscaleEnabled"`
	// The maximum number of replicas in the cluster.
	MaxReplicas pulumi.IntPtrInput `pulumi:"maxReplicas"`
	// The minimum number of replicas to scale down to.
	MinReplicas pulumi.IntPtrInput `pulumi:"minReplicas"`
	// The amount of seconds to wait between auto scale updates.
	RefreshPeriodInSeconds pulumi.IntPtrInput `pulumi:"refreshPeriodInSeconds"`
	// The target utilization percentage to use for determining whether to scale the cluster.
	TargetUtilization pulumi.IntPtrInput `pulumi:"targetUtilization"`
}

func (AKSServiceResponseInvokeResponseAutoScalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseInvokeResponseAutoScaler)(nil)).Elem()
}

func (i AKSServiceResponseInvokeResponseAutoScalerArgs) ToAKSServiceResponseInvokeResponseAutoScalerOutput() AKSServiceResponseInvokeResponseAutoScalerOutput {
	return i.ToAKSServiceResponseInvokeResponseAutoScalerOutputWithContext(context.Background())
}

func (i AKSServiceResponseInvokeResponseAutoScalerArgs) ToAKSServiceResponseInvokeResponseAutoScalerOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseAutoScalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseInvokeResponseAutoScalerOutput)
}

func (i AKSServiceResponseInvokeResponseAutoScalerArgs) ToAKSServiceResponseInvokeResponseAutoScalerPtrOutput() AKSServiceResponseInvokeResponseAutoScalerPtrOutput {
	return i.ToAKSServiceResponseInvokeResponseAutoScalerPtrOutputWithContext(context.Background())
}

func (i AKSServiceResponseInvokeResponseAutoScalerArgs) ToAKSServiceResponseInvokeResponseAutoScalerPtrOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseAutoScalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseInvokeResponseAutoScalerOutput).ToAKSServiceResponseInvokeResponseAutoScalerPtrOutputWithContext(ctx)
}

// AKSServiceResponseInvokeResponseAutoScalerPtrInput is an input type that accepts AKSServiceResponseInvokeResponseAutoScalerArgs, AKSServiceResponseInvokeResponseAutoScalerPtr and AKSServiceResponseInvokeResponseAutoScalerPtrOutput values.
// You can construct a concrete instance of `AKSServiceResponseInvokeResponseAutoScalerPtrInput` via:
//
//          AKSServiceResponseInvokeResponseAutoScalerArgs{...}
//
//  or:
//
//          nil
type AKSServiceResponseInvokeResponseAutoScalerPtrInput interface {
	pulumi.Input

	ToAKSServiceResponseInvokeResponseAutoScalerPtrOutput() AKSServiceResponseInvokeResponseAutoScalerPtrOutput
	ToAKSServiceResponseInvokeResponseAutoScalerPtrOutputWithContext(context.Context) AKSServiceResponseInvokeResponseAutoScalerPtrOutput
}

type aksserviceResponseInvokeResponseAutoScalerPtrType AKSServiceResponseInvokeResponseAutoScalerArgs

func AKSServiceResponseInvokeResponseAutoScalerPtr(v *AKSServiceResponseInvokeResponseAutoScalerArgs) AKSServiceResponseInvokeResponseAutoScalerPtrInput {
	return (*aksserviceResponseInvokeResponseAutoScalerPtrType)(v)
}

func (*aksserviceResponseInvokeResponseAutoScalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseInvokeResponseAutoScaler)(nil)).Elem()
}

func (i *aksserviceResponseInvokeResponseAutoScalerPtrType) ToAKSServiceResponseInvokeResponseAutoScalerPtrOutput() AKSServiceResponseInvokeResponseAutoScalerPtrOutput {
	return i.ToAKSServiceResponseInvokeResponseAutoScalerPtrOutputWithContext(context.Background())
}

func (i *aksserviceResponseInvokeResponseAutoScalerPtrType) ToAKSServiceResponseInvokeResponseAutoScalerPtrOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseAutoScalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseInvokeResponseAutoScalerPtrOutput)
}

// The auto scaler properties.
type AKSServiceResponseInvokeResponseAutoScalerOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseInvokeResponseAutoScalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseInvokeResponseAutoScaler)(nil)).Elem()
}

func (o AKSServiceResponseInvokeResponseAutoScalerOutput) ToAKSServiceResponseInvokeResponseAutoScalerOutput() AKSServiceResponseInvokeResponseAutoScalerOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseAutoScalerOutput) ToAKSServiceResponseInvokeResponseAutoScalerOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseAutoScalerOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseAutoScalerOutput) ToAKSServiceResponseInvokeResponseAutoScalerPtrOutput() AKSServiceResponseInvokeResponseAutoScalerPtrOutput {
	return o.ToAKSServiceResponseInvokeResponseAutoScalerPtrOutputWithContext(context.Background())
}

func (o AKSServiceResponseInvokeResponseAutoScalerOutput) ToAKSServiceResponseInvokeResponseAutoScalerPtrOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseAutoScalerPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseAutoScaler) *AKSServiceResponseInvokeResponseAutoScaler {
		return &v
	}).(AKSServiceResponseInvokeResponseAutoScalerPtrOutput)
}

// Option to enable/disable auto scaling.
func (o AKSServiceResponseInvokeResponseAutoScalerOutput) AutoscaleEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseAutoScaler) *bool { return v.AutoscaleEnabled }).(pulumi.BoolPtrOutput)
}

// The maximum number of replicas in the cluster.
func (o AKSServiceResponseInvokeResponseAutoScalerOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseAutoScaler) *int { return v.MaxReplicas }).(pulumi.IntPtrOutput)
}

// The minimum number of replicas to scale down to.
func (o AKSServiceResponseInvokeResponseAutoScalerOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseAutoScaler) *int { return v.MinReplicas }).(pulumi.IntPtrOutput)
}

// The amount of seconds to wait between auto scale updates.
func (o AKSServiceResponseInvokeResponseAutoScalerOutput) RefreshPeriodInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseAutoScaler) *int { return v.RefreshPeriodInSeconds }).(pulumi.IntPtrOutput)
}

// The target utilization percentage to use for determining whether to scale the cluster.
func (o AKSServiceResponseInvokeResponseAutoScalerOutput) TargetUtilization() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseAutoScaler) *int { return v.TargetUtilization }).(pulumi.IntPtrOutput)
}

type AKSServiceResponseInvokeResponseAutoScalerPtrOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseInvokeResponseAutoScalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseInvokeResponseAutoScaler)(nil)).Elem()
}

func (o AKSServiceResponseInvokeResponseAutoScalerPtrOutput) ToAKSServiceResponseInvokeResponseAutoScalerPtrOutput() AKSServiceResponseInvokeResponseAutoScalerPtrOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseAutoScalerPtrOutput) ToAKSServiceResponseInvokeResponseAutoScalerPtrOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseAutoScalerPtrOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseAutoScalerPtrOutput) Elem() AKSServiceResponseInvokeResponseAutoScalerOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseAutoScaler) AKSServiceResponseInvokeResponseAutoScaler {
		return *v
	}).(AKSServiceResponseInvokeResponseAutoScalerOutput)
}

// Option to enable/disable auto scaling.
func (o AKSServiceResponseInvokeResponseAutoScalerPtrOutput) AutoscaleEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseAutoScaler) *bool {
		if v == nil {
			return nil
		}
		return v.AutoscaleEnabled
	}).(pulumi.BoolPtrOutput)
}

// The maximum number of replicas in the cluster.
func (o AKSServiceResponseInvokeResponseAutoScalerPtrOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseAutoScaler) *int {
		if v == nil {
			return nil
		}
		return v.MaxReplicas
	}).(pulumi.IntPtrOutput)
}

// The minimum number of replicas to scale down to.
func (o AKSServiceResponseInvokeResponseAutoScalerPtrOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseAutoScaler) *int {
		if v == nil {
			return nil
		}
		return v.MinReplicas
	}).(pulumi.IntPtrOutput)
}

// The amount of seconds to wait between auto scale updates.
func (o AKSServiceResponseInvokeResponseAutoScalerPtrOutput) RefreshPeriodInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseAutoScaler) *int {
		if v == nil {
			return nil
		}
		return v.RefreshPeriodInSeconds
	}).(pulumi.IntPtrOutput)
}

// The target utilization percentage to use for determining whether to scale the cluster.
func (o AKSServiceResponseInvokeResponseAutoScalerPtrOutput) TargetUtilization() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseAutoScaler) *int {
		if v == nil {
			return nil
		}
		return v.TargetUtilization
	}).(pulumi.IntPtrOutput)
}

// Details of the data collection options specified.
type AKSServiceResponseInvokeResponseDataCollection struct {
	// Option for enabling/disabling Event Hub.
	EventHubEnabled *bool `pulumi:"eventHubEnabled"`
	// Option for enabling/disabling storage.
	StorageEnabled *bool `pulumi:"storageEnabled"`
}

// AKSServiceResponseInvokeResponseDataCollectionInput is an input type that accepts AKSServiceResponseInvokeResponseDataCollectionArgs and AKSServiceResponseInvokeResponseDataCollectionOutput values.
// You can construct a concrete instance of `AKSServiceResponseInvokeResponseDataCollectionInput` via:
//
//          AKSServiceResponseInvokeResponseDataCollectionArgs{...}
type AKSServiceResponseInvokeResponseDataCollectionInput interface {
	pulumi.Input

	ToAKSServiceResponseInvokeResponseDataCollectionOutput() AKSServiceResponseInvokeResponseDataCollectionOutput
	ToAKSServiceResponseInvokeResponseDataCollectionOutputWithContext(context.Context) AKSServiceResponseInvokeResponseDataCollectionOutput
}

// Details of the data collection options specified.
type AKSServiceResponseInvokeResponseDataCollectionArgs struct {
	// Option for enabling/disabling Event Hub.
	EventHubEnabled pulumi.BoolPtrInput `pulumi:"eventHubEnabled"`
	// Option for enabling/disabling storage.
	StorageEnabled pulumi.BoolPtrInput `pulumi:"storageEnabled"`
}

func (AKSServiceResponseInvokeResponseDataCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseInvokeResponseDataCollection)(nil)).Elem()
}

func (i AKSServiceResponseInvokeResponseDataCollectionArgs) ToAKSServiceResponseInvokeResponseDataCollectionOutput() AKSServiceResponseInvokeResponseDataCollectionOutput {
	return i.ToAKSServiceResponseInvokeResponseDataCollectionOutputWithContext(context.Background())
}

func (i AKSServiceResponseInvokeResponseDataCollectionArgs) ToAKSServiceResponseInvokeResponseDataCollectionOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseDataCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseInvokeResponseDataCollectionOutput)
}

func (i AKSServiceResponseInvokeResponseDataCollectionArgs) ToAKSServiceResponseInvokeResponseDataCollectionPtrOutput() AKSServiceResponseInvokeResponseDataCollectionPtrOutput {
	return i.ToAKSServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (i AKSServiceResponseInvokeResponseDataCollectionArgs) ToAKSServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseDataCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseInvokeResponseDataCollectionOutput).ToAKSServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(ctx)
}

// AKSServiceResponseInvokeResponseDataCollectionPtrInput is an input type that accepts AKSServiceResponseInvokeResponseDataCollectionArgs, AKSServiceResponseInvokeResponseDataCollectionPtr and AKSServiceResponseInvokeResponseDataCollectionPtrOutput values.
// You can construct a concrete instance of `AKSServiceResponseInvokeResponseDataCollectionPtrInput` via:
//
//          AKSServiceResponseInvokeResponseDataCollectionArgs{...}
//
//  or:
//
//          nil
type AKSServiceResponseInvokeResponseDataCollectionPtrInput interface {
	pulumi.Input

	ToAKSServiceResponseInvokeResponseDataCollectionPtrOutput() AKSServiceResponseInvokeResponseDataCollectionPtrOutput
	ToAKSServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(context.Context) AKSServiceResponseInvokeResponseDataCollectionPtrOutput
}

type aksserviceResponseInvokeResponseDataCollectionPtrType AKSServiceResponseInvokeResponseDataCollectionArgs

func AKSServiceResponseInvokeResponseDataCollectionPtr(v *AKSServiceResponseInvokeResponseDataCollectionArgs) AKSServiceResponseInvokeResponseDataCollectionPtrInput {
	return (*aksserviceResponseInvokeResponseDataCollectionPtrType)(v)
}

func (*aksserviceResponseInvokeResponseDataCollectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseInvokeResponseDataCollection)(nil)).Elem()
}

func (i *aksserviceResponseInvokeResponseDataCollectionPtrType) ToAKSServiceResponseInvokeResponseDataCollectionPtrOutput() AKSServiceResponseInvokeResponseDataCollectionPtrOutput {
	return i.ToAKSServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (i *aksserviceResponseInvokeResponseDataCollectionPtrType) ToAKSServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseDataCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseInvokeResponseDataCollectionPtrOutput)
}

// Details of the data collection options specified.
type AKSServiceResponseInvokeResponseDataCollectionOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseInvokeResponseDataCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseInvokeResponseDataCollection)(nil)).Elem()
}

func (o AKSServiceResponseInvokeResponseDataCollectionOutput) ToAKSServiceResponseInvokeResponseDataCollectionOutput() AKSServiceResponseInvokeResponseDataCollectionOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseDataCollectionOutput) ToAKSServiceResponseInvokeResponseDataCollectionOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseDataCollectionOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseDataCollectionOutput) ToAKSServiceResponseInvokeResponseDataCollectionPtrOutput() AKSServiceResponseInvokeResponseDataCollectionPtrOutput {
	return o.ToAKSServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (o AKSServiceResponseInvokeResponseDataCollectionOutput) ToAKSServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseDataCollectionPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseDataCollection) *AKSServiceResponseInvokeResponseDataCollection {
		return &v
	}).(AKSServiceResponseInvokeResponseDataCollectionPtrOutput)
}

// Option for enabling/disabling Event Hub.
func (o AKSServiceResponseInvokeResponseDataCollectionOutput) EventHubEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseDataCollection) *bool { return v.EventHubEnabled }).(pulumi.BoolPtrOutput)
}

// Option for enabling/disabling storage.
func (o AKSServiceResponseInvokeResponseDataCollectionOutput) StorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseDataCollection) *bool { return v.StorageEnabled }).(pulumi.BoolPtrOutput)
}

type AKSServiceResponseInvokeResponseDataCollectionPtrOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseInvokeResponseDataCollectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseInvokeResponseDataCollection)(nil)).Elem()
}

func (o AKSServiceResponseInvokeResponseDataCollectionPtrOutput) ToAKSServiceResponseInvokeResponseDataCollectionPtrOutput() AKSServiceResponseInvokeResponseDataCollectionPtrOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseDataCollectionPtrOutput) ToAKSServiceResponseInvokeResponseDataCollectionPtrOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseDataCollectionPtrOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseDataCollectionPtrOutput) Elem() AKSServiceResponseInvokeResponseDataCollectionOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseDataCollection) AKSServiceResponseInvokeResponseDataCollection {
		return *v
	}).(AKSServiceResponseInvokeResponseDataCollectionOutput)
}

// Option for enabling/disabling Event Hub.
func (o AKSServiceResponseInvokeResponseDataCollectionPtrOutput) EventHubEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseDataCollection) *bool {
		if v == nil {
			return nil
		}
		return v.EventHubEnabled
	}).(pulumi.BoolPtrOutput)
}

// Option for enabling/disabling storage.
func (o AKSServiceResponseInvokeResponseDataCollectionPtrOutput) StorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseDataCollection) *bool {
		if v == nil {
			return nil
		}
		return v.StorageEnabled
	}).(pulumi.BoolPtrOutput)
}

// The deployment status.
type AKSServiceResponseInvokeResponseDeploymentStatus struct {
	// The number of available replicas.
	AvailableReplicas *int `pulumi:"availableReplicas"`
	// The desired number of replicas.
	DesiredReplicas *int `pulumi:"desiredReplicas"`
	// The error details.
	Error *AKSReplicaStatusInvokeResponseError `pulumi:"error"`
	// The number of updated replicas.
	UpdatedReplicas *int `pulumi:"updatedReplicas"`
}

// AKSServiceResponseInvokeResponseDeploymentStatusInput is an input type that accepts AKSServiceResponseInvokeResponseDeploymentStatusArgs and AKSServiceResponseInvokeResponseDeploymentStatusOutput values.
// You can construct a concrete instance of `AKSServiceResponseInvokeResponseDeploymentStatusInput` via:
//
//          AKSServiceResponseInvokeResponseDeploymentStatusArgs{...}
type AKSServiceResponseInvokeResponseDeploymentStatusInput interface {
	pulumi.Input

	ToAKSServiceResponseInvokeResponseDeploymentStatusOutput() AKSServiceResponseInvokeResponseDeploymentStatusOutput
	ToAKSServiceResponseInvokeResponseDeploymentStatusOutputWithContext(context.Context) AKSServiceResponseInvokeResponseDeploymentStatusOutput
}

// The deployment status.
type AKSServiceResponseInvokeResponseDeploymentStatusArgs struct {
	// The number of available replicas.
	AvailableReplicas pulumi.IntPtrInput `pulumi:"availableReplicas"`
	// The desired number of replicas.
	DesiredReplicas pulumi.IntPtrInput `pulumi:"desiredReplicas"`
	// The error details.
	Error AKSReplicaStatusInvokeResponseErrorPtrInput `pulumi:"error"`
	// The number of updated replicas.
	UpdatedReplicas pulumi.IntPtrInput `pulumi:"updatedReplicas"`
}

func (AKSServiceResponseInvokeResponseDeploymentStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseInvokeResponseDeploymentStatus)(nil)).Elem()
}

func (i AKSServiceResponseInvokeResponseDeploymentStatusArgs) ToAKSServiceResponseInvokeResponseDeploymentStatusOutput() AKSServiceResponseInvokeResponseDeploymentStatusOutput {
	return i.ToAKSServiceResponseInvokeResponseDeploymentStatusOutputWithContext(context.Background())
}

func (i AKSServiceResponseInvokeResponseDeploymentStatusArgs) ToAKSServiceResponseInvokeResponseDeploymentStatusOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseDeploymentStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseInvokeResponseDeploymentStatusOutput)
}

// The deployment status.
type AKSServiceResponseInvokeResponseDeploymentStatusOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseInvokeResponseDeploymentStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseInvokeResponseDeploymentStatus)(nil)).Elem()
}

func (o AKSServiceResponseInvokeResponseDeploymentStatusOutput) ToAKSServiceResponseInvokeResponseDeploymentStatusOutput() AKSServiceResponseInvokeResponseDeploymentStatusOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseDeploymentStatusOutput) ToAKSServiceResponseInvokeResponseDeploymentStatusOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseDeploymentStatusOutput {
	return o
}

// The number of available replicas.
func (o AKSServiceResponseInvokeResponseDeploymentStatusOutput) AvailableReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseDeploymentStatus) *int { return v.AvailableReplicas }).(pulumi.IntPtrOutput)
}

// The desired number of replicas.
func (o AKSServiceResponseInvokeResponseDeploymentStatusOutput) DesiredReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseDeploymentStatus) *int { return v.DesiredReplicas }).(pulumi.IntPtrOutput)
}

// The error details.
func (o AKSServiceResponseInvokeResponseDeploymentStatusOutput) Error() AKSReplicaStatusInvokeResponseErrorPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseDeploymentStatus) *AKSReplicaStatusInvokeResponseError {
		return v.Error
	}).(AKSReplicaStatusInvokeResponseErrorPtrOutput)
}

// The number of updated replicas.
func (o AKSServiceResponseInvokeResponseDeploymentStatusOutput) UpdatedReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseDeploymentStatus) *int { return v.UpdatedReplicas }).(pulumi.IntPtrOutput)
}

// The Environment, models and assets used for inferencing.
type AKSServiceResponseInvokeResponseEnvironmentImageRequest struct {
	// The list of assets.
	Assets []ImageAssetInvokeResponse `pulumi:"assets"`
	// The name of the driver file.
	DriverProgram *string `pulumi:"driverProgram"`
	// The details of the AZURE ML environment.
	Environment *EnvironmentImageResponseInvokeResponseEnvironment `pulumi:"environment"`
	// The unique identifying details of the AZURE ML environment.
	EnvironmentReference *EnvironmentImageResponseInvokeResponseEnvironmentReference `pulumi:"environmentReference"`
	// The list of model Ids.
	ModelIds []string `pulumi:"modelIds"`
	// The list of models.
	Models []ModelInvokeResponse `pulumi:"models"`
}

// AKSServiceResponseInvokeResponseEnvironmentImageRequestInput is an input type that accepts AKSServiceResponseInvokeResponseEnvironmentImageRequestArgs and AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput values.
// You can construct a concrete instance of `AKSServiceResponseInvokeResponseEnvironmentImageRequestInput` via:
//
//          AKSServiceResponseInvokeResponseEnvironmentImageRequestArgs{...}
type AKSServiceResponseInvokeResponseEnvironmentImageRequestInput interface {
	pulumi.Input

	ToAKSServiceResponseInvokeResponseEnvironmentImageRequestOutput() AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput
	ToAKSServiceResponseInvokeResponseEnvironmentImageRequestOutputWithContext(context.Context) AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput
}

// The Environment, models and assets used for inferencing.
type AKSServiceResponseInvokeResponseEnvironmentImageRequestArgs struct {
	// The list of assets.
	Assets ImageAssetInvokeResponseArrayInput `pulumi:"assets"`
	// The name of the driver file.
	DriverProgram pulumi.StringPtrInput `pulumi:"driverProgram"`
	// The details of the AZURE ML environment.
	Environment EnvironmentImageResponseInvokeResponseEnvironmentPtrInput `pulumi:"environment"`
	// The unique identifying details of the AZURE ML environment.
	EnvironmentReference EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrInput `pulumi:"environmentReference"`
	// The list of model Ids.
	ModelIds pulumi.StringArrayInput `pulumi:"modelIds"`
	// The list of models.
	Models ModelInvokeResponseArrayInput `pulumi:"models"`
}

func (AKSServiceResponseInvokeResponseEnvironmentImageRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseInvokeResponseEnvironmentImageRequest)(nil)).Elem()
}

func (i AKSServiceResponseInvokeResponseEnvironmentImageRequestArgs) ToAKSServiceResponseInvokeResponseEnvironmentImageRequestOutput() AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput {
	return i.ToAKSServiceResponseInvokeResponseEnvironmentImageRequestOutputWithContext(context.Background())
}

func (i AKSServiceResponseInvokeResponseEnvironmentImageRequestArgs) ToAKSServiceResponseInvokeResponseEnvironmentImageRequestOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput)
}

func (i AKSServiceResponseInvokeResponseEnvironmentImageRequestArgs) ToAKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput() AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return i.ToAKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (i AKSServiceResponseInvokeResponseEnvironmentImageRequestArgs) ToAKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput).ToAKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(ctx)
}

// AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrInput is an input type that accepts AKSServiceResponseInvokeResponseEnvironmentImageRequestArgs, AKSServiceResponseInvokeResponseEnvironmentImageRequestPtr and AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput values.
// You can construct a concrete instance of `AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrInput` via:
//
//          AKSServiceResponseInvokeResponseEnvironmentImageRequestArgs{...}
//
//  or:
//
//          nil
type AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrInput interface {
	pulumi.Input

	ToAKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput() AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput
	ToAKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(context.Context) AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput
}

type aksserviceResponseInvokeResponseEnvironmentImageRequestPtrType AKSServiceResponseInvokeResponseEnvironmentImageRequestArgs

func AKSServiceResponseInvokeResponseEnvironmentImageRequestPtr(v *AKSServiceResponseInvokeResponseEnvironmentImageRequestArgs) AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrInput {
	return (*aksserviceResponseInvokeResponseEnvironmentImageRequestPtrType)(v)
}

func (*aksserviceResponseInvokeResponseEnvironmentImageRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseInvokeResponseEnvironmentImageRequest)(nil)).Elem()
}

func (i *aksserviceResponseInvokeResponseEnvironmentImageRequestPtrType) ToAKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput() AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return i.ToAKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (i *aksserviceResponseInvokeResponseEnvironmentImageRequestPtrType) ToAKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput)
}

// The Environment, models and assets used for inferencing.
type AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseInvokeResponseEnvironmentImageRequest)(nil)).Elem()
}

func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput) ToAKSServiceResponseInvokeResponseEnvironmentImageRequestOutput() AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput) ToAKSServiceResponseInvokeResponseEnvironmentImageRequestOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput) ToAKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput() AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return o.ToAKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput) ToAKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseEnvironmentImageRequest) *AKSServiceResponseInvokeResponseEnvironmentImageRequest {
		return &v
	}).(AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput)
}

// The list of assets.
func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput) Assets() ImageAssetInvokeResponseArrayOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseEnvironmentImageRequest) []ImageAssetInvokeResponse {
		return v.Assets
	}).(ImageAssetInvokeResponseArrayOutput)
}

// The name of the driver file.
func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput) DriverProgram() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseEnvironmentImageRequest) *string { return v.DriverProgram }).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput) Environment() EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseEnvironmentImageRequest) *EnvironmentImageResponseInvokeResponseEnvironment {
		return v.Environment
	}).(EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput) EnvironmentReference() EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseEnvironmentImageRequest) *EnvironmentImageResponseInvokeResponseEnvironmentReference {
		return v.EnvironmentReference
	}).(EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput)
}

// The list of model Ids.
func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput) ModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseEnvironmentImageRequest) []string { return v.ModelIds }).(pulumi.StringArrayOutput)
}

// The list of models.
func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput) Models() ModelInvokeResponseArrayOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseEnvironmentImageRequest) []ModelInvokeResponse { return v.Models }).(ModelInvokeResponseArrayOutput)
}

type AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseInvokeResponseEnvironmentImageRequest)(nil)).Elem()
}

func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) ToAKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput() AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) ToAKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) Elem() AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseEnvironmentImageRequest) AKSServiceResponseInvokeResponseEnvironmentImageRequest {
		return *v
	}).(AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput)
}

// The list of assets.
func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) Assets() ImageAssetInvokeResponseArrayOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseEnvironmentImageRequest) []ImageAssetInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Assets
	}).(ImageAssetInvokeResponseArrayOutput)
}

// The name of the driver file.
func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) DriverProgram() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseEnvironmentImageRequest) *string {
		if v == nil {
			return nil
		}
		return v.DriverProgram
	}).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) Environment() EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseEnvironmentImageRequest) *EnvironmentImageResponseInvokeResponseEnvironment {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) EnvironmentReference() EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseEnvironmentImageRequest) *EnvironmentImageResponseInvokeResponseEnvironmentReference {
		if v == nil {
			return nil
		}
		return v.EnvironmentReference
	}).(EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput)
}

// The list of model Ids.
func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) ModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseEnvironmentImageRequest) []string {
		if v == nil {
			return nil
		}
		return v.ModelIds
	}).(pulumi.StringArrayOutput)
}

// The list of models.
func (o AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput) Models() ModelInvokeResponseArrayOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseEnvironmentImageRequest) []ModelInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Models
	}).(ModelInvokeResponseArrayOutput)
}

// The liveness probe requirements.
type AKSServiceResponseInvokeResponseLivenessProbeRequirements struct {
	// The number of failures to allow before returning an unhealthy status.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The delay before the first probe in seconds.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// The length of time between probes in seconds.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// The number of successful probes before returning a healthy status.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// The probe timeout in seconds.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// AKSServiceResponseInvokeResponseLivenessProbeRequirementsInput is an input type that accepts AKSServiceResponseInvokeResponseLivenessProbeRequirementsArgs and AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput values.
// You can construct a concrete instance of `AKSServiceResponseInvokeResponseLivenessProbeRequirementsInput` via:
//
//          AKSServiceResponseInvokeResponseLivenessProbeRequirementsArgs{...}
type AKSServiceResponseInvokeResponseLivenessProbeRequirementsInput interface {
	pulumi.Input

	ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput() AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput
	ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsOutputWithContext(context.Context) AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput
}

// The liveness probe requirements.
type AKSServiceResponseInvokeResponseLivenessProbeRequirementsArgs struct {
	// The number of failures to allow before returning an unhealthy status.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The delay before the first probe in seconds.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// The length of time between probes in seconds.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// The number of successful probes before returning a healthy status.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// The probe timeout in seconds.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (AKSServiceResponseInvokeResponseLivenessProbeRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseInvokeResponseLivenessProbeRequirements)(nil)).Elem()
}

func (i AKSServiceResponseInvokeResponseLivenessProbeRequirementsArgs) ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput() AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput {
	return i.ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsOutputWithContext(context.Background())
}

func (i AKSServiceResponseInvokeResponseLivenessProbeRequirementsArgs) ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput)
}

func (i AKSServiceResponseInvokeResponseLivenessProbeRequirementsArgs) ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput() AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput {
	return i.ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutputWithContext(context.Background())
}

func (i AKSServiceResponseInvokeResponseLivenessProbeRequirementsArgs) ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput).ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutputWithContext(ctx)
}

// AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrInput is an input type that accepts AKSServiceResponseInvokeResponseLivenessProbeRequirementsArgs, AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtr and AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput values.
// You can construct a concrete instance of `AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrInput` via:
//
//          AKSServiceResponseInvokeResponseLivenessProbeRequirementsArgs{...}
//
//  or:
//
//          nil
type AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrInput interface {
	pulumi.Input

	ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput() AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput
	ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutputWithContext(context.Context) AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput
}

type aksserviceResponseInvokeResponseLivenessProbeRequirementsPtrType AKSServiceResponseInvokeResponseLivenessProbeRequirementsArgs

func AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtr(v *AKSServiceResponseInvokeResponseLivenessProbeRequirementsArgs) AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrInput {
	return (*aksserviceResponseInvokeResponseLivenessProbeRequirementsPtrType)(v)
}

func (*aksserviceResponseInvokeResponseLivenessProbeRequirementsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseInvokeResponseLivenessProbeRequirements)(nil)).Elem()
}

func (i *aksserviceResponseInvokeResponseLivenessProbeRequirementsPtrType) ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput() AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput {
	return i.ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutputWithContext(context.Background())
}

func (i *aksserviceResponseInvokeResponseLivenessProbeRequirementsPtrType) ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput)
}

// The liveness probe requirements.
type AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseInvokeResponseLivenessProbeRequirements)(nil)).Elem()
}

func (o AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput) ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput() AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput) ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput) ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput() AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput {
	return o.ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutputWithContext(context.Background())
}

func (o AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput) ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseLivenessProbeRequirements) *AKSServiceResponseInvokeResponseLivenessProbeRequirements {
		return &v
	}).(AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput)
}

// The number of failures to allow before returning an unhealthy status.
func (o AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseLivenessProbeRequirements) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The delay before the first probe in seconds.
func (o AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseLivenessProbeRequirements) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// The length of time between probes in seconds.
func (o AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseLivenessProbeRequirements) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// The number of successful probes before returning a healthy status.
func (o AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseLivenessProbeRequirements) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// The probe timeout in seconds.
func (o AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseInvokeResponseLivenessProbeRequirements) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseInvokeResponseLivenessProbeRequirements)(nil)).Elem()
}

func (o AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput) ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput() AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput) ToAKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutputWithContext(ctx context.Context) AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput {
	return o
}

func (o AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput) Elem() AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseLivenessProbeRequirements) AKSServiceResponseInvokeResponseLivenessProbeRequirements {
		return *v
	}).(AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput)
}

// The number of failures to allow before returning an unhealthy status.
func (o AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The delay before the first probe in seconds.
func (o AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// The length of time between probes in seconds.
func (o AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// The number of successful probes before returning a healthy status.
func (o AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// The probe timeout in seconds.
func (o AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseInvokeResponseLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// The response for an AKS service.
type AKSServiceResponseResponse struct {
	// Whether or not AAD authentication is enabled.
	AadAuthEnabled *bool `pulumi:"aadAuthEnabled"`
	// Whether or not Application Insights is enabled.
	AppInsightsEnabled *bool `pulumi:"appInsightsEnabled"`
	// Whether or not authentication is enabled.
	AuthEnabled *bool `pulumi:"authEnabled"`
	// The auto scaler properties.
	AutoScaler *AKSServiceResponseResponseAutoScaler `pulumi:"autoScaler"`
	// The name of the compute resource.
	ComputeName *string `pulumi:"computeName"`
	// The compute environment type for the service.
	// Expected value is 'Custom'.
	ComputeType string `pulumi:"computeType"`
	// The container resource requirements.
	ContainerResourceRequirements *ContainerResourceRequirementsResponse `pulumi:"containerResourceRequirements"`
	// Details of the data collection options specified.
	DataCollection *AKSServiceResponseResponseDataCollection `pulumi:"dataCollection"`
	// The deployment status.
	DeploymentStatus AKSServiceResponseResponseDeploymentStatus `pulumi:"deploymentStatus"`
	// The deployment type for the service.
	DeploymentType *string `pulumi:"deploymentType"`
	// The service description.
	Description *string `pulumi:"description"`
	// The Environment, models and assets used for inferencing.
	EnvironmentImageRequest *AKSServiceResponseResponseEnvironmentImageRequest `pulumi:"environmentImageRequest"`
	// The error details.
	Error ServiceResponseBaseResponseError `pulumi:"error"`
	// Is this the default variant.
	IsDefault *bool `pulumi:"isDefault"`
	// The service tag dictionary. Tags are mutable.
	KvTags map[string]string `pulumi:"kvTags"`
	// The liveness probe requirements.
	LivenessProbeRequirements *AKSServiceResponseResponseLivenessProbeRequirements `pulumi:"livenessProbeRequirements"`
	// The maximum number of concurrent requests per container.
	MaxConcurrentRequestsPerContainer *int `pulumi:"maxConcurrentRequestsPerContainer"`
	// Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
	MaxQueueWaitMs *int `pulumi:"maxQueueWaitMs"`
	// Details on the models and configurations.
	ModelConfigMap map[string]interface{} `pulumi:"modelConfigMap"`
	// The list of models.
	Models []ModelResponse `pulumi:"models"`
	// The Kubernetes namespace of the deployment.
	Namespace *string `pulumi:"namespace"`
	// The number of replicas on the cluster.
	NumReplicas *int `pulumi:"numReplicas"`
	// The service property dictionary. Properties are immutable.
	Properties map[string]string `pulumi:"properties"`
	// The scoring timeout in milliseconds.
	ScoringTimeoutMs *int `pulumi:"scoringTimeoutMs"`
	// The Uri for sending scoring requests.
	ScoringUri string `pulumi:"scoringUri"`
	// The current state of the service.
	State string `pulumi:"state"`
	// The Uri for sending swagger requests.
	SwaggerUri string `pulumi:"swaggerUri"`
	// The amount of traffic variant receives.
	TrafficPercentile *float64 `pulumi:"trafficPercentile"`
	// The type of the variant.
	Type *string `pulumi:"type"`
}

// AKSServiceResponseResponseInput is an input type that accepts AKSServiceResponseResponseArgs and AKSServiceResponseResponseOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseInput` via:
//
//          AKSServiceResponseResponseArgs{...}
type AKSServiceResponseResponseInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseOutput() AKSServiceResponseResponseOutput
	ToAKSServiceResponseResponseOutputWithContext(context.Context) AKSServiceResponseResponseOutput
}

// The response for an AKS service.
type AKSServiceResponseResponseArgs struct {
	// Whether or not AAD authentication is enabled.
	AadAuthEnabled pulumi.BoolPtrInput `pulumi:"aadAuthEnabled"`
	// Whether or not Application Insights is enabled.
	AppInsightsEnabled pulumi.BoolPtrInput `pulumi:"appInsightsEnabled"`
	// Whether or not authentication is enabled.
	AuthEnabled pulumi.BoolPtrInput `pulumi:"authEnabled"`
	// The auto scaler properties.
	AutoScaler AKSServiceResponseResponseAutoScalerPtrInput `pulumi:"autoScaler"`
	// The name of the compute resource.
	ComputeName pulumi.StringPtrInput `pulumi:"computeName"`
	// The compute environment type for the service.
	// Expected value is 'Custom'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The container resource requirements.
	ContainerResourceRequirements ContainerResourceRequirementsResponsePtrInput `pulumi:"containerResourceRequirements"`
	// Details of the data collection options specified.
	DataCollection AKSServiceResponseResponseDataCollectionPtrInput `pulumi:"dataCollection"`
	// The deployment status.
	DeploymentStatus AKSServiceResponseResponseDeploymentStatusInput `pulumi:"deploymentStatus"`
	// The deployment type for the service.
	DeploymentType pulumi.StringPtrInput `pulumi:"deploymentType"`
	// The service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Environment, models and assets used for inferencing.
	EnvironmentImageRequest AKSServiceResponseResponseEnvironmentImageRequestPtrInput `pulumi:"environmentImageRequest"`
	// The error details.
	Error ServiceResponseBaseResponseErrorInput `pulumi:"error"`
	// Is this the default variant.
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// The service tag dictionary. Tags are mutable.
	KvTags pulumi.StringMapInput `pulumi:"kvTags"`
	// The liveness probe requirements.
	LivenessProbeRequirements AKSServiceResponseResponseLivenessProbeRequirementsPtrInput `pulumi:"livenessProbeRequirements"`
	// The maximum number of concurrent requests per container.
	MaxConcurrentRequestsPerContainer pulumi.IntPtrInput `pulumi:"maxConcurrentRequestsPerContainer"`
	// Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
	MaxQueueWaitMs pulumi.IntPtrInput `pulumi:"maxQueueWaitMs"`
	// Details on the models and configurations.
	ModelConfigMap pulumi.MapInput `pulumi:"modelConfigMap"`
	// The list of models.
	Models ModelResponseArrayInput `pulumi:"models"`
	// The Kubernetes namespace of the deployment.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The number of replicas on the cluster.
	NumReplicas pulumi.IntPtrInput `pulumi:"numReplicas"`
	// The service property dictionary. Properties are immutable.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The scoring timeout in milliseconds.
	ScoringTimeoutMs pulumi.IntPtrInput `pulumi:"scoringTimeoutMs"`
	// The Uri for sending scoring requests.
	ScoringUri pulumi.StringInput `pulumi:"scoringUri"`
	// The current state of the service.
	State pulumi.StringInput `pulumi:"state"`
	// The Uri for sending swagger requests.
	SwaggerUri pulumi.StringInput `pulumi:"swaggerUri"`
	// The amount of traffic variant receives.
	TrafficPercentile pulumi.Float64PtrInput `pulumi:"trafficPercentile"`
	// The type of the variant.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AKSServiceResponseResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponse)(nil)).Elem()
}

func (i AKSServiceResponseResponseArgs) ToAKSServiceResponseResponseOutput() AKSServiceResponseResponseOutput {
	return i.ToAKSServiceResponseResponseOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseArgs) ToAKSServiceResponseResponseOutputWithContext(ctx context.Context) AKSServiceResponseResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseOutput)
}

// The response for an AKS service.
type AKSServiceResponseResponseOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponse)(nil)).Elem()
}

func (o AKSServiceResponseResponseOutput) ToAKSServiceResponseResponseOutput() AKSServiceResponseResponseOutput {
	return o
}

func (o AKSServiceResponseResponseOutput) ToAKSServiceResponseResponseOutputWithContext(ctx context.Context) AKSServiceResponseResponseOutput {
	return o
}

// Whether or not AAD authentication is enabled.
func (o AKSServiceResponseResponseOutput) AadAuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *bool { return v.AadAuthEnabled }).(pulumi.BoolPtrOutput)
}

// Whether or not Application Insights is enabled.
func (o AKSServiceResponseResponseOutput) AppInsightsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *bool { return v.AppInsightsEnabled }).(pulumi.BoolPtrOutput)
}

// Whether or not authentication is enabled.
func (o AKSServiceResponseResponseOutput) AuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *bool { return v.AuthEnabled }).(pulumi.BoolPtrOutput)
}

// The auto scaler properties.
func (o AKSServiceResponseResponseOutput) AutoScaler() AKSServiceResponseResponseAutoScalerPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *AKSServiceResponseResponseAutoScaler { return v.AutoScaler }).(AKSServiceResponseResponseAutoScalerPtrOutput)
}

// The name of the compute resource.
func (o AKSServiceResponseResponseOutput) ComputeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *string { return v.ComputeName }).(pulumi.StringPtrOutput)
}

// The compute environment type for the service.
// Expected value is 'Custom'.
func (o AKSServiceResponseResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The container resource requirements.
func (o AKSServiceResponseResponseOutput) ContainerResourceRequirements() ContainerResourceRequirementsResponsePtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *ContainerResourceRequirementsResponse {
		return v.ContainerResourceRequirements
	}).(ContainerResourceRequirementsResponsePtrOutput)
}

// Details of the data collection options specified.
func (o AKSServiceResponseResponseOutput) DataCollection() AKSServiceResponseResponseDataCollectionPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *AKSServiceResponseResponseDataCollection { return v.DataCollection }).(AKSServiceResponseResponseDataCollectionPtrOutput)
}

// The deployment status.
func (o AKSServiceResponseResponseOutput) DeploymentStatus() AKSServiceResponseResponseDeploymentStatusOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) AKSServiceResponseResponseDeploymentStatus {
		return v.DeploymentStatus
	}).(AKSServiceResponseResponseDeploymentStatusOutput)
}

// The deployment type for the service.
func (o AKSServiceResponseResponseOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *string { return v.DeploymentType }).(pulumi.StringPtrOutput)
}

// The service description.
func (o AKSServiceResponseResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Environment, models and assets used for inferencing.
func (o AKSServiceResponseResponseOutput) EnvironmentImageRequest() AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *AKSServiceResponseResponseEnvironmentImageRequest {
		return v.EnvironmentImageRequest
	}).(AKSServiceResponseResponseEnvironmentImageRequestPtrOutput)
}

// The error details.
func (o AKSServiceResponseResponseOutput) Error() ServiceResponseBaseResponseErrorOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) ServiceResponseBaseResponseError { return v.Error }).(ServiceResponseBaseResponseErrorOutput)
}

// Is this the default variant.
func (o AKSServiceResponseResponseOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The service tag dictionary. Tags are mutable.
func (o AKSServiceResponseResponseOutput) KvTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) map[string]string { return v.KvTags }).(pulumi.StringMapOutput)
}

// The liveness probe requirements.
func (o AKSServiceResponseResponseOutput) LivenessProbeRequirements() AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *AKSServiceResponseResponseLivenessProbeRequirements {
		return v.LivenessProbeRequirements
	}).(AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput)
}

// The maximum number of concurrent requests per container.
func (o AKSServiceResponseResponseOutput) MaxConcurrentRequestsPerContainer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *int { return v.MaxConcurrentRequestsPerContainer }).(pulumi.IntPtrOutput)
}

// Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
func (o AKSServiceResponseResponseOutput) MaxQueueWaitMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *int { return v.MaxQueueWaitMs }).(pulumi.IntPtrOutput)
}

// Details on the models and configurations.
func (o AKSServiceResponseResponseOutput) ModelConfigMap() pulumi.MapOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) map[string]interface{} { return v.ModelConfigMap }).(pulumi.MapOutput)
}

// The list of models.
func (o AKSServiceResponseResponseOutput) Models() ModelResponseArrayOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) []ModelResponse { return v.Models }).(ModelResponseArrayOutput)
}

// The Kubernetes namespace of the deployment.
func (o AKSServiceResponseResponseOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The number of replicas on the cluster.
func (o AKSServiceResponseResponseOutput) NumReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *int { return v.NumReplicas }).(pulumi.IntPtrOutput)
}

// The service property dictionary. Properties are immutable.
func (o AKSServiceResponseResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The scoring timeout in milliseconds.
func (o AKSServiceResponseResponseOutput) ScoringTimeoutMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *int { return v.ScoringTimeoutMs }).(pulumi.IntPtrOutput)
}

// The Uri for sending scoring requests.
func (o AKSServiceResponseResponseOutput) ScoringUri() pulumi.StringOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) string { return v.ScoringUri }).(pulumi.StringOutput)
}

// The current state of the service.
func (o AKSServiceResponseResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) string { return v.State }).(pulumi.StringOutput)
}

// The Uri for sending swagger requests.
func (o AKSServiceResponseResponseOutput) SwaggerUri() pulumi.StringOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) string { return v.SwaggerUri }).(pulumi.StringOutput)
}

// The amount of traffic variant receives.
func (o AKSServiceResponseResponseOutput) TrafficPercentile() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *float64 { return v.TrafficPercentile }).(pulumi.Float64PtrOutput)
}

// The type of the variant.
func (o AKSServiceResponseResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The auto scaler properties.
type AKSServiceResponseResponseAutoScaler struct {
	// Option to enable/disable auto scaling.
	AutoscaleEnabled *bool `pulumi:"autoscaleEnabled"`
	// The maximum number of replicas in the cluster.
	MaxReplicas *int `pulumi:"maxReplicas"`
	// The minimum number of replicas to scale down to.
	MinReplicas *int `pulumi:"minReplicas"`
	// The amount of seconds to wait between auto scale updates.
	RefreshPeriodInSeconds *int `pulumi:"refreshPeriodInSeconds"`
	// The target utilization percentage to use for determining whether to scale the cluster.
	TargetUtilization *int `pulumi:"targetUtilization"`
}

// AKSServiceResponseResponseAutoScalerInput is an input type that accepts AKSServiceResponseResponseAutoScalerArgs and AKSServiceResponseResponseAutoScalerOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseAutoScalerInput` via:
//
//          AKSServiceResponseResponseAutoScalerArgs{...}
type AKSServiceResponseResponseAutoScalerInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseAutoScalerOutput() AKSServiceResponseResponseAutoScalerOutput
	ToAKSServiceResponseResponseAutoScalerOutputWithContext(context.Context) AKSServiceResponseResponseAutoScalerOutput
}

// The auto scaler properties.
type AKSServiceResponseResponseAutoScalerArgs struct {
	// Option to enable/disable auto scaling.
	AutoscaleEnabled pulumi.BoolPtrInput `pulumi:"autoscaleEnabled"`
	// The maximum number of replicas in the cluster.
	MaxReplicas pulumi.IntPtrInput `pulumi:"maxReplicas"`
	// The minimum number of replicas to scale down to.
	MinReplicas pulumi.IntPtrInput `pulumi:"minReplicas"`
	// The amount of seconds to wait between auto scale updates.
	RefreshPeriodInSeconds pulumi.IntPtrInput `pulumi:"refreshPeriodInSeconds"`
	// The target utilization percentage to use for determining whether to scale the cluster.
	TargetUtilization pulumi.IntPtrInput `pulumi:"targetUtilization"`
}

func (AKSServiceResponseResponseAutoScalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseAutoScaler)(nil)).Elem()
}

func (i AKSServiceResponseResponseAutoScalerArgs) ToAKSServiceResponseResponseAutoScalerOutput() AKSServiceResponseResponseAutoScalerOutput {
	return i.ToAKSServiceResponseResponseAutoScalerOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseAutoScalerArgs) ToAKSServiceResponseResponseAutoScalerOutputWithContext(ctx context.Context) AKSServiceResponseResponseAutoScalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseAutoScalerOutput)
}

func (i AKSServiceResponseResponseAutoScalerArgs) ToAKSServiceResponseResponseAutoScalerPtrOutput() AKSServiceResponseResponseAutoScalerPtrOutput {
	return i.ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseAutoScalerArgs) ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseAutoScalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseAutoScalerOutput).ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(ctx)
}

// AKSServiceResponseResponseAutoScalerPtrInput is an input type that accepts AKSServiceResponseResponseAutoScalerArgs, AKSServiceResponseResponseAutoScalerPtr and AKSServiceResponseResponseAutoScalerPtrOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseAutoScalerPtrInput` via:
//
//          AKSServiceResponseResponseAutoScalerArgs{...}
//
//  or:
//
//          nil
type AKSServiceResponseResponseAutoScalerPtrInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseAutoScalerPtrOutput() AKSServiceResponseResponseAutoScalerPtrOutput
	ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(context.Context) AKSServiceResponseResponseAutoScalerPtrOutput
}

type aksserviceResponseResponseAutoScalerPtrType AKSServiceResponseResponseAutoScalerArgs

func AKSServiceResponseResponseAutoScalerPtr(v *AKSServiceResponseResponseAutoScalerArgs) AKSServiceResponseResponseAutoScalerPtrInput {
	return (*aksserviceResponseResponseAutoScalerPtrType)(v)
}

func (*aksserviceResponseResponseAutoScalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseResponseAutoScaler)(nil)).Elem()
}

func (i *aksserviceResponseResponseAutoScalerPtrType) ToAKSServiceResponseResponseAutoScalerPtrOutput() AKSServiceResponseResponseAutoScalerPtrOutput {
	return i.ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(context.Background())
}

func (i *aksserviceResponseResponseAutoScalerPtrType) ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseAutoScalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseAutoScalerPtrOutput)
}

// The auto scaler properties.
type AKSServiceResponseResponseAutoScalerOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseAutoScalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseAutoScaler)(nil)).Elem()
}

func (o AKSServiceResponseResponseAutoScalerOutput) ToAKSServiceResponseResponseAutoScalerOutput() AKSServiceResponseResponseAutoScalerOutput {
	return o
}

func (o AKSServiceResponseResponseAutoScalerOutput) ToAKSServiceResponseResponseAutoScalerOutputWithContext(ctx context.Context) AKSServiceResponseResponseAutoScalerOutput {
	return o
}

func (o AKSServiceResponseResponseAutoScalerOutput) ToAKSServiceResponseResponseAutoScalerPtrOutput() AKSServiceResponseResponseAutoScalerPtrOutput {
	return o.ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(context.Background())
}

func (o AKSServiceResponseResponseAutoScalerOutput) ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseAutoScalerPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseAutoScaler) *AKSServiceResponseResponseAutoScaler {
		return &v
	}).(AKSServiceResponseResponseAutoScalerPtrOutput)
}

// Option to enable/disable auto scaling.
func (o AKSServiceResponseResponseAutoScalerOutput) AutoscaleEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseAutoScaler) *bool { return v.AutoscaleEnabled }).(pulumi.BoolPtrOutput)
}

// The maximum number of replicas in the cluster.
func (o AKSServiceResponseResponseAutoScalerOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseAutoScaler) *int { return v.MaxReplicas }).(pulumi.IntPtrOutput)
}

// The minimum number of replicas to scale down to.
func (o AKSServiceResponseResponseAutoScalerOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseAutoScaler) *int { return v.MinReplicas }).(pulumi.IntPtrOutput)
}

// The amount of seconds to wait between auto scale updates.
func (o AKSServiceResponseResponseAutoScalerOutput) RefreshPeriodInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseAutoScaler) *int { return v.RefreshPeriodInSeconds }).(pulumi.IntPtrOutput)
}

// The target utilization percentage to use for determining whether to scale the cluster.
func (o AKSServiceResponseResponseAutoScalerOutput) TargetUtilization() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseAutoScaler) *int { return v.TargetUtilization }).(pulumi.IntPtrOutput)
}

type AKSServiceResponseResponseAutoScalerPtrOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseAutoScalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseResponseAutoScaler)(nil)).Elem()
}

func (o AKSServiceResponseResponseAutoScalerPtrOutput) ToAKSServiceResponseResponseAutoScalerPtrOutput() AKSServiceResponseResponseAutoScalerPtrOutput {
	return o
}

func (o AKSServiceResponseResponseAutoScalerPtrOutput) ToAKSServiceResponseResponseAutoScalerPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseAutoScalerPtrOutput {
	return o
}

func (o AKSServiceResponseResponseAutoScalerPtrOutput) Elem() AKSServiceResponseResponseAutoScalerOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseAutoScaler) AKSServiceResponseResponseAutoScaler { return *v }).(AKSServiceResponseResponseAutoScalerOutput)
}

// Option to enable/disable auto scaling.
func (o AKSServiceResponseResponseAutoScalerPtrOutput) AutoscaleEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseAutoScaler) *bool {
		if v == nil {
			return nil
		}
		return v.AutoscaleEnabled
	}).(pulumi.BoolPtrOutput)
}

// The maximum number of replicas in the cluster.
func (o AKSServiceResponseResponseAutoScalerPtrOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseAutoScaler) *int {
		if v == nil {
			return nil
		}
		return v.MaxReplicas
	}).(pulumi.IntPtrOutput)
}

// The minimum number of replicas to scale down to.
func (o AKSServiceResponseResponseAutoScalerPtrOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseAutoScaler) *int {
		if v == nil {
			return nil
		}
		return v.MinReplicas
	}).(pulumi.IntPtrOutput)
}

// The amount of seconds to wait between auto scale updates.
func (o AKSServiceResponseResponseAutoScalerPtrOutput) RefreshPeriodInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseAutoScaler) *int {
		if v == nil {
			return nil
		}
		return v.RefreshPeriodInSeconds
	}).(pulumi.IntPtrOutput)
}

// The target utilization percentage to use for determining whether to scale the cluster.
func (o AKSServiceResponseResponseAutoScalerPtrOutput) TargetUtilization() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseAutoScaler) *int {
		if v == nil {
			return nil
		}
		return v.TargetUtilization
	}).(pulumi.IntPtrOutput)
}

// Details of the data collection options specified.
type AKSServiceResponseResponseDataCollection struct {
	// Option for enabling/disabling Event Hub.
	EventHubEnabled *bool `pulumi:"eventHubEnabled"`
	// Option for enabling/disabling storage.
	StorageEnabled *bool `pulumi:"storageEnabled"`
}

// AKSServiceResponseResponseDataCollectionInput is an input type that accepts AKSServiceResponseResponseDataCollectionArgs and AKSServiceResponseResponseDataCollectionOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseDataCollectionInput` via:
//
//          AKSServiceResponseResponseDataCollectionArgs{...}
type AKSServiceResponseResponseDataCollectionInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseDataCollectionOutput() AKSServiceResponseResponseDataCollectionOutput
	ToAKSServiceResponseResponseDataCollectionOutputWithContext(context.Context) AKSServiceResponseResponseDataCollectionOutput
}

// Details of the data collection options specified.
type AKSServiceResponseResponseDataCollectionArgs struct {
	// Option for enabling/disabling Event Hub.
	EventHubEnabled pulumi.BoolPtrInput `pulumi:"eventHubEnabled"`
	// Option for enabling/disabling storage.
	StorageEnabled pulumi.BoolPtrInput `pulumi:"storageEnabled"`
}

func (AKSServiceResponseResponseDataCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseDataCollection)(nil)).Elem()
}

func (i AKSServiceResponseResponseDataCollectionArgs) ToAKSServiceResponseResponseDataCollectionOutput() AKSServiceResponseResponseDataCollectionOutput {
	return i.ToAKSServiceResponseResponseDataCollectionOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseDataCollectionArgs) ToAKSServiceResponseResponseDataCollectionOutputWithContext(ctx context.Context) AKSServiceResponseResponseDataCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseDataCollectionOutput)
}

func (i AKSServiceResponseResponseDataCollectionArgs) ToAKSServiceResponseResponseDataCollectionPtrOutput() AKSServiceResponseResponseDataCollectionPtrOutput {
	return i.ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseDataCollectionArgs) ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseDataCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseDataCollectionOutput).ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(ctx)
}

// AKSServiceResponseResponseDataCollectionPtrInput is an input type that accepts AKSServiceResponseResponseDataCollectionArgs, AKSServiceResponseResponseDataCollectionPtr and AKSServiceResponseResponseDataCollectionPtrOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseDataCollectionPtrInput` via:
//
//          AKSServiceResponseResponseDataCollectionArgs{...}
//
//  or:
//
//          nil
type AKSServiceResponseResponseDataCollectionPtrInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseDataCollectionPtrOutput() AKSServiceResponseResponseDataCollectionPtrOutput
	ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(context.Context) AKSServiceResponseResponseDataCollectionPtrOutput
}

type aksserviceResponseResponseDataCollectionPtrType AKSServiceResponseResponseDataCollectionArgs

func AKSServiceResponseResponseDataCollectionPtr(v *AKSServiceResponseResponseDataCollectionArgs) AKSServiceResponseResponseDataCollectionPtrInput {
	return (*aksserviceResponseResponseDataCollectionPtrType)(v)
}

func (*aksserviceResponseResponseDataCollectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseResponseDataCollection)(nil)).Elem()
}

func (i *aksserviceResponseResponseDataCollectionPtrType) ToAKSServiceResponseResponseDataCollectionPtrOutput() AKSServiceResponseResponseDataCollectionPtrOutput {
	return i.ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (i *aksserviceResponseResponseDataCollectionPtrType) ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseDataCollectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseDataCollectionPtrOutput)
}

// Details of the data collection options specified.
type AKSServiceResponseResponseDataCollectionOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseDataCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseDataCollection)(nil)).Elem()
}

func (o AKSServiceResponseResponseDataCollectionOutput) ToAKSServiceResponseResponseDataCollectionOutput() AKSServiceResponseResponseDataCollectionOutput {
	return o
}

func (o AKSServiceResponseResponseDataCollectionOutput) ToAKSServiceResponseResponseDataCollectionOutputWithContext(ctx context.Context) AKSServiceResponseResponseDataCollectionOutput {
	return o
}

func (o AKSServiceResponseResponseDataCollectionOutput) ToAKSServiceResponseResponseDataCollectionPtrOutput() AKSServiceResponseResponseDataCollectionPtrOutput {
	return o.ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(context.Background())
}

func (o AKSServiceResponseResponseDataCollectionOutput) ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseDataCollectionPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseDataCollection) *AKSServiceResponseResponseDataCollection {
		return &v
	}).(AKSServiceResponseResponseDataCollectionPtrOutput)
}

// Option for enabling/disabling Event Hub.
func (o AKSServiceResponseResponseDataCollectionOutput) EventHubEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseDataCollection) *bool { return v.EventHubEnabled }).(pulumi.BoolPtrOutput)
}

// Option for enabling/disabling storage.
func (o AKSServiceResponseResponseDataCollectionOutput) StorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseDataCollection) *bool { return v.StorageEnabled }).(pulumi.BoolPtrOutput)
}

type AKSServiceResponseResponseDataCollectionPtrOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseDataCollectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseResponseDataCollection)(nil)).Elem()
}

func (o AKSServiceResponseResponseDataCollectionPtrOutput) ToAKSServiceResponseResponseDataCollectionPtrOutput() AKSServiceResponseResponseDataCollectionPtrOutput {
	return o
}

func (o AKSServiceResponseResponseDataCollectionPtrOutput) ToAKSServiceResponseResponseDataCollectionPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseDataCollectionPtrOutput {
	return o
}

func (o AKSServiceResponseResponseDataCollectionPtrOutput) Elem() AKSServiceResponseResponseDataCollectionOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseDataCollection) AKSServiceResponseResponseDataCollection { return *v }).(AKSServiceResponseResponseDataCollectionOutput)
}

// Option for enabling/disabling Event Hub.
func (o AKSServiceResponseResponseDataCollectionPtrOutput) EventHubEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseDataCollection) *bool {
		if v == nil {
			return nil
		}
		return v.EventHubEnabled
	}).(pulumi.BoolPtrOutput)
}

// Option for enabling/disabling storage.
func (o AKSServiceResponseResponseDataCollectionPtrOutput) StorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseDataCollection) *bool {
		if v == nil {
			return nil
		}
		return v.StorageEnabled
	}).(pulumi.BoolPtrOutput)
}

// The deployment status.
type AKSServiceResponseResponseDeploymentStatus struct {
	// The number of available replicas.
	AvailableReplicas *int `pulumi:"availableReplicas"`
	// The desired number of replicas.
	DesiredReplicas *int `pulumi:"desiredReplicas"`
	// The error details.
	Error *AKSReplicaStatusResponseError `pulumi:"error"`
	// The number of updated replicas.
	UpdatedReplicas *int `pulumi:"updatedReplicas"`
}

// AKSServiceResponseResponseDeploymentStatusInput is an input type that accepts AKSServiceResponseResponseDeploymentStatusArgs and AKSServiceResponseResponseDeploymentStatusOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseDeploymentStatusInput` via:
//
//          AKSServiceResponseResponseDeploymentStatusArgs{...}
type AKSServiceResponseResponseDeploymentStatusInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseDeploymentStatusOutput() AKSServiceResponseResponseDeploymentStatusOutput
	ToAKSServiceResponseResponseDeploymentStatusOutputWithContext(context.Context) AKSServiceResponseResponseDeploymentStatusOutput
}

// The deployment status.
type AKSServiceResponseResponseDeploymentStatusArgs struct {
	// The number of available replicas.
	AvailableReplicas pulumi.IntPtrInput `pulumi:"availableReplicas"`
	// The desired number of replicas.
	DesiredReplicas pulumi.IntPtrInput `pulumi:"desiredReplicas"`
	// The error details.
	Error AKSReplicaStatusResponseErrorPtrInput `pulumi:"error"`
	// The number of updated replicas.
	UpdatedReplicas pulumi.IntPtrInput `pulumi:"updatedReplicas"`
}

func (AKSServiceResponseResponseDeploymentStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseDeploymentStatus)(nil)).Elem()
}

func (i AKSServiceResponseResponseDeploymentStatusArgs) ToAKSServiceResponseResponseDeploymentStatusOutput() AKSServiceResponseResponseDeploymentStatusOutput {
	return i.ToAKSServiceResponseResponseDeploymentStatusOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseDeploymentStatusArgs) ToAKSServiceResponseResponseDeploymentStatusOutputWithContext(ctx context.Context) AKSServiceResponseResponseDeploymentStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseDeploymentStatusOutput)
}

// The deployment status.
type AKSServiceResponseResponseDeploymentStatusOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseDeploymentStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseDeploymentStatus)(nil)).Elem()
}

func (o AKSServiceResponseResponseDeploymentStatusOutput) ToAKSServiceResponseResponseDeploymentStatusOutput() AKSServiceResponseResponseDeploymentStatusOutput {
	return o
}

func (o AKSServiceResponseResponseDeploymentStatusOutput) ToAKSServiceResponseResponseDeploymentStatusOutputWithContext(ctx context.Context) AKSServiceResponseResponseDeploymentStatusOutput {
	return o
}

// The number of available replicas.
func (o AKSServiceResponseResponseDeploymentStatusOutput) AvailableReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseDeploymentStatus) *int { return v.AvailableReplicas }).(pulumi.IntPtrOutput)
}

// The desired number of replicas.
func (o AKSServiceResponseResponseDeploymentStatusOutput) DesiredReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseDeploymentStatus) *int { return v.DesiredReplicas }).(pulumi.IntPtrOutput)
}

// The error details.
func (o AKSServiceResponseResponseDeploymentStatusOutput) Error() AKSReplicaStatusResponseErrorPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseDeploymentStatus) *AKSReplicaStatusResponseError { return v.Error }).(AKSReplicaStatusResponseErrorPtrOutput)
}

// The number of updated replicas.
func (o AKSServiceResponseResponseDeploymentStatusOutput) UpdatedReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseDeploymentStatus) *int { return v.UpdatedReplicas }).(pulumi.IntPtrOutput)
}

// The Environment, models and assets used for inferencing.
type AKSServiceResponseResponseEnvironmentImageRequest struct {
	// The list of assets.
	Assets []ImageAssetResponse `pulumi:"assets"`
	// The name of the driver file.
	DriverProgram *string `pulumi:"driverProgram"`
	// The details of the AZURE ML environment.
	Environment *EnvironmentImageResponseResponseEnvironment `pulumi:"environment"`
	// The unique identifying details of the AZURE ML environment.
	EnvironmentReference *EnvironmentImageResponseResponseEnvironmentReference `pulumi:"environmentReference"`
	// The list of model Ids.
	ModelIds []string `pulumi:"modelIds"`
	// The list of models.
	Models []ModelResponse `pulumi:"models"`
}

// AKSServiceResponseResponseEnvironmentImageRequestInput is an input type that accepts AKSServiceResponseResponseEnvironmentImageRequestArgs and AKSServiceResponseResponseEnvironmentImageRequestOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseEnvironmentImageRequestInput` via:
//
//          AKSServiceResponseResponseEnvironmentImageRequestArgs{...}
type AKSServiceResponseResponseEnvironmentImageRequestInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseEnvironmentImageRequestOutput() AKSServiceResponseResponseEnvironmentImageRequestOutput
	ToAKSServiceResponseResponseEnvironmentImageRequestOutputWithContext(context.Context) AKSServiceResponseResponseEnvironmentImageRequestOutput
}

// The Environment, models and assets used for inferencing.
type AKSServiceResponseResponseEnvironmentImageRequestArgs struct {
	// The list of assets.
	Assets ImageAssetResponseArrayInput `pulumi:"assets"`
	// The name of the driver file.
	DriverProgram pulumi.StringPtrInput `pulumi:"driverProgram"`
	// The details of the AZURE ML environment.
	Environment EnvironmentImageResponseResponseEnvironmentPtrInput `pulumi:"environment"`
	// The unique identifying details of the AZURE ML environment.
	EnvironmentReference EnvironmentImageResponseResponseEnvironmentReferencePtrInput `pulumi:"environmentReference"`
	// The list of model Ids.
	ModelIds pulumi.StringArrayInput `pulumi:"modelIds"`
	// The list of models.
	Models ModelResponseArrayInput `pulumi:"models"`
}

func (AKSServiceResponseResponseEnvironmentImageRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseEnvironmentImageRequest)(nil)).Elem()
}

func (i AKSServiceResponseResponseEnvironmentImageRequestArgs) ToAKSServiceResponseResponseEnvironmentImageRequestOutput() AKSServiceResponseResponseEnvironmentImageRequestOutput {
	return i.ToAKSServiceResponseResponseEnvironmentImageRequestOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseEnvironmentImageRequestArgs) ToAKSServiceResponseResponseEnvironmentImageRequestOutputWithContext(ctx context.Context) AKSServiceResponseResponseEnvironmentImageRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseEnvironmentImageRequestOutput)
}

func (i AKSServiceResponseResponseEnvironmentImageRequestArgs) ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutput() AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return i.ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseEnvironmentImageRequestArgs) ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseEnvironmentImageRequestOutput).ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx)
}

// AKSServiceResponseResponseEnvironmentImageRequestPtrInput is an input type that accepts AKSServiceResponseResponseEnvironmentImageRequestArgs, AKSServiceResponseResponseEnvironmentImageRequestPtr and AKSServiceResponseResponseEnvironmentImageRequestPtrOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseEnvironmentImageRequestPtrInput` via:
//
//          AKSServiceResponseResponseEnvironmentImageRequestArgs{...}
//
//  or:
//
//          nil
type AKSServiceResponseResponseEnvironmentImageRequestPtrInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutput() AKSServiceResponseResponseEnvironmentImageRequestPtrOutput
	ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(context.Context) AKSServiceResponseResponseEnvironmentImageRequestPtrOutput
}

type aksserviceResponseResponseEnvironmentImageRequestPtrType AKSServiceResponseResponseEnvironmentImageRequestArgs

func AKSServiceResponseResponseEnvironmentImageRequestPtr(v *AKSServiceResponseResponseEnvironmentImageRequestArgs) AKSServiceResponseResponseEnvironmentImageRequestPtrInput {
	return (*aksserviceResponseResponseEnvironmentImageRequestPtrType)(v)
}

func (*aksserviceResponseResponseEnvironmentImageRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseResponseEnvironmentImageRequest)(nil)).Elem()
}

func (i *aksserviceResponseResponseEnvironmentImageRequestPtrType) ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutput() AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return i.ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (i *aksserviceResponseResponseEnvironmentImageRequestPtrType) ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseEnvironmentImageRequestPtrOutput)
}

// The Environment, models and assets used for inferencing.
type AKSServiceResponseResponseEnvironmentImageRequestOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseEnvironmentImageRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseEnvironmentImageRequest)(nil)).Elem()
}

func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) ToAKSServiceResponseResponseEnvironmentImageRequestOutput() AKSServiceResponseResponseEnvironmentImageRequestOutput {
	return o
}

func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) ToAKSServiceResponseResponseEnvironmentImageRequestOutputWithContext(ctx context.Context) AKSServiceResponseResponseEnvironmentImageRequestOutput {
	return o
}

func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutput() AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o.ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseEnvironmentImageRequest) *AKSServiceResponseResponseEnvironmentImageRequest {
		return &v
	}).(AKSServiceResponseResponseEnvironmentImageRequestPtrOutput)
}

// The list of assets.
func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) Assets() ImageAssetResponseArrayOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseEnvironmentImageRequest) []ImageAssetResponse { return v.Assets }).(ImageAssetResponseArrayOutput)
}

// The name of the driver file.
func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) DriverProgram() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseEnvironmentImageRequest) *string { return v.DriverProgram }).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) Environment() EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseEnvironmentImageRequest) *EnvironmentImageResponseResponseEnvironment {
		return v.Environment
	}).(EnvironmentImageResponseResponseEnvironmentPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) EnvironmentReference() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseEnvironmentImageRequest) *EnvironmentImageResponseResponseEnvironmentReference {
		return v.EnvironmentReference
	}).(EnvironmentImageResponseResponseEnvironmentReferencePtrOutput)
}

// The list of model Ids.
func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) ModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseEnvironmentImageRequest) []string { return v.ModelIds }).(pulumi.StringArrayOutput)
}

// The list of models.
func (o AKSServiceResponseResponseEnvironmentImageRequestOutput) Models() ModelResponseArrayOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseEnvironmentImageRequest) []ModelResponse { return v.Models }).(ModelResponseArrayOutput)
}

type AKSServiceResponseResponseEnvironmentImageRequestPtrOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseResponseEnvironmentImageRequest)(nil)).Elem()
}

func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutput() AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o
}

func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) ToAKSServiceResponseResponseEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseEnvironmentImageRequestPtrOutput {
	return o
}

func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) Elem() AKSServiceResponseResponseEnvironmentImageRequestOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseEnvironmentImageRequest) AKSServiceResponseResponseEnvironmentImageRequest {
		return *v
	}).(AKSServiceResponseResponseEnvironmentImageRequestOutput)
}

// The list of assets.
func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) Assets() ImageAssetResponseArrayOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseEnvironmentImageRequest) []ImageAssetResponse {
		if v == nil {
			return nil
		}
		return v.Assets
	}).(ImageAssetResponseArrayOutput)
}

// The name of the driver file.
func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) DriverProgram() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseEnvironmentImageRequest) *string {
		if v == nil {
			return nil
		}
		return v.DriverProgram
	}).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) Environment() EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseEnvironmentImageRequest) *EnvironmentImageResponseResponseEnvironment {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(EnvironmentImageResponseResponseEnvironmentPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) EnvironmentReference() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseEnvironmentImageRequest) *EnvironmentImageResponseResponseEnvironmentReference {
		if v == nil {
			return nil
		}
		return v.EnvironmentReference
	}).(EnvironmentImageResponseResponseEnvironmentReferencePtrOutput)
}

// The list of model Ids.
func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) ModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseEnvironmentImageRequest) []string {
		if v == nil {
			return nil
		}
		return v.ModelIds
	}).(pulumi.StringArrayOutput)
}

// The list of models.
func (o AKSServiceResponseResponseEnvironmentImageRequestPtrOutput) Models() ModelResponseArrayOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseEnvironmentImageRequest) []ModelResponse {
		if v == nil {
			return nil
		}
		return v.Models
	}).(ModelResponseArrayOutput)
}

// The liveness probe requirements.
type AKSServiceResponseResponseLivenessProbeRequirements struct {
	// The number of failures to allow before returning an unhealthy status.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The delay before the first probe in seconds.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// The length of time between probes in seconds.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// The number of successful probes before returning a healthy status.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// The probe timeout in seconds.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// AKSServiceResponseResponseLivenessProbeRequirementsInput is an input type that accepts AKSServiceResponseResponseLivenessProbeRequirementsArgs and AKSServiceResponseResponseLivenessProbeRequirementsOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseLivenessProbeRequirementsInput` via:
//
//          AKSServiceResponseResponseLivenessProbeRequirementsArgs{...}
type AKSServiceResponseResponseLivenessProbeRequirementsInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseLivenessProbeRequirementsOutput() AKSServiceResponseResponseLivenessProbeRequirementsOutput
	ToAKSServiceResponseResponseLivenessProbeRequirementsOutputWithContext(context.Context) AKSServiceResponseResponseLivenessProbeRequirementsOutput
}

// The liveness probe requirements.
type AKSServiceResponseResponseLivenessProbeRequirementsArgs struct {
	// The number of failures to allow before returning an unhealthy status.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The delay before the first probe in seconds.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// The length of time between probes in seconds.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// The number of successful probes before returning a healthy status.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// The probe timeout in seconds.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (AKSServiceResponseResponseLivenessProbeRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseLivenessProbeRequirements)(nil)).Elem()
}

func (i AKSServiceResponseResponseLivenessProbeRequirementsArgs) ToAKSServiceResponseResponseLivenessProbeRequirementsOutput() AKSServiceResponseResponseLivenessProbeRequirementsOutput {
	return i.ToAKSServiceResponseResponseLivenessProbeRequirementsOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseLivenessProbeRequirementsArgs) ToAKSServiceResponseResponseLivenessProbeRequirementsOutputWithContext(ctx context.Context) AKSServiceResponseResponseLivenessProbeRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseLivenessProbeRequirementsOutput)
}

func (i AKSServiceResponseResponseLivenessProbeRequirementsArgs) ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutput() AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return i.ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(context.Background())
}

func (i AKSServiceResponseResponseLivenessProbeRequirementsArgs) ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseLivenessProbeRequirementsOutput).ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(ctx)
}

// AKSServiceResponseResponseLivenessProbeRequirementsPtrInput is an input type that accepts AKSServiceResponseResponseLivenessProbeRequirementsArgs, AKSServiceResponseResponseLivenessProbeRequirementsPtr and AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput values.
// You can construct a concrete instance of `AKSServiceResponseResponseLivenessProbeRequirementsPtrInput` via:
//
//          AKSServiceResponseResponseLivenessProbeRequirementsArgs{...}
//
//  or:
//
//          nil
type AKSServiceResponseResponseLivenessProbeRequirementsPtrInput interface {
	pulumi.Input

	ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutput() AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput
	ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(context.Context) AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput
}

type aksserviceResponseResponseLivenessProbeRequirementsPtrType AKSServiceResponseResponseLivenessProbeRequirementsArgs

func AKSServiceResponseResponseLivenessProbeRequirementsPtr(v *AKSServiceResponseResponseLivenessProbeRequirementsArgs) AKSServiceResponseResponseLivenessProbeRequirementsPtrInput {
	return (*aksserviceResponseResponseLivenessProbeRequirementsPtrType)(v)
}

func (*aksserviceResponseResponseLivenessProbeRequirementsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseResponseLivenessProbeRequirements)(nil)).Elem()
}

func (i *aksserviceResponseResponseLivenessProbeRequirementsPtrType) ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutput() AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return i.ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(context.Background())
}

func (i *aksserviceResponseResponseLivenessProbeRequirementsPtrType) ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput)
}

// The liveness probe requirements.
type AKSServiceResponseResponseLivenessProbeRequirementsOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseLivenessProbeRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSServiceResponseResponseLivenessProbeRequirements)(nil)).Elem()
}

func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) ToAKSServiceResponseResponseLivenessProbeRequirementsOutput() AKSServiceResponseResponseLivenessProbeRequirementsOutput {
	return o
}

func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) ToAKSServiceResponseResponseLivenessProbeRequirementsOutputWithContext(ctx context.Context) AKSServiceResponseResponseLivenessProbeRequirementsOutput {
	return o
}

func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutput() AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return o.ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(context.Background())
}

func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseLivenessProbeRequirements) *AKSServiceResponseResponseLivenessProbeRequirements {
		return &v
	}).(AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput)
}

// The number of failures to allow before returning an unhealthy status.
func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseLivenessProbeRequirements) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The delay before the first probe in seconds.
func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseLivenessProbeRequirements) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// The length of time between probes in seconds.
func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseLivenessProbeRequirements) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// The number of successful probes before returning a healthy status.
func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseLivenessProbeRequirements) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// The probe timeout in seconds.
func (o AKSServiceResponseResponseLivenessProbeRequirementsOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AKSServiceResponseResponseLivenessProbeRequirements) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput struct{ *pulumi.OutputState }

func (AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSServiceResponseResponseLivenessProbeRequirements)(nil)).Elem()
}

func (o AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutput() AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return o
}

func (o AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) ToAKSServiceResponseResponseLivenessProbeRequirementsPtrOutputWithContext(ctx context.Context) AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput {
	return o
}

func (o AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) Elem() AKSServiceResponseResponseLivenessProbeRequirementsOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseLivenessProbeRequirements) AKSServiceResponseResponseLivenessProbeRequirements {
		return *v
	}).(AKSServiceResponseResponseLivenessProbeRequirementsOutput)
}

// The number of failures to allow before returning an unhealthy status.
func (o AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The delay before the first probe in seconds.
func (o AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// The length of time between probes in seconds.
func (o AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// The number of successful probes before returning a healthy status.
func (o AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// The probe timeout in seconds.
func (o AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AKSServiceResponseResponseLivenessProbeRequirements) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// The response for an AKS variant.
type AKSVariantResponseInvokeResponse struct {
	// The compute environment type for the service.
	// Expected value is 'Custom'.
	ComputeType string `pulumi:"computeType"`
	// The deployment type for the service.
	DeploymentType *string `pulumi:"deploymentType"`
	// The service description.
	Description *string `pulumi:"description"`
	// The error details.
	Error ServiceResponseBaseInvokeResponseError `pulumi:"error"`
	// Is this the default variant.
	IsDefault *bool `pulumi:"isDefault"`
	// The service tag dictionary. Tags are mutable.
	KvTags map[string]string `pulumi:"kvTags"`
	// The service property dictionary. Properties are immutable.
	Properties map[string]string `pulumi:"properties"`
	// The current state of the service.
	State string `pulumi:"state"`
	// The amount of traffic variant receives.
	TrafficPercentile *float64 `pulumi:"trafficPercentile"`
	// The type of the variant.
	Type *string `pulumi:"type"`
}

// AKSVariantResponseInvokeResponseInput is an input type that accepts AKSVariantResponseInvokeResponseArgs and AKSVariantResponseInvokeResponseOutput values.
// You can construct a concrete instance of `AKSVariantResponseInvokeResponseInput` via:
//
//          AKSVariantResponseInvokeResponseArgs{...}
type AKSVariantResponseInvokeResponseInput interface {
	pulumi.Input

	ToAKSVariantResponseInvokeResponseOutput() AKSVariantResponseInvokeResponseOutput
	ToAKSVariantResponseInvokeResponseOutputWithContext(context.Context) AKSVariantResponseInvokeResponseOutput
}

// The response for an AKS variant.
type AKSVariantResponseInvokeResponseArgs struct {
	// The compute environment type for the service.
	// Expected value is 'Custom'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The deployment type for the service.
	DeploymentType pulumi.StringPtrInput `pulumi:"deploymentType"`
	// The service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The error details.
	Error ServiceResponseBaseInvokeResponseErrorInput `pulumi:"error"`
	// Is this the default variant.
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// The service tag dictionary. Tags are mutable.
	KvTags pulumi.StringMapInput `pulumi:"kvTags"`
	// The service property dictionary. Properties are immutable.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The current state of the service.
	State pulumi.StringInput `pulumi:"state"`
	// The amount of traffic variant receives.
	TrafficPercentile pulumi.Float64PtrInput `pulumi:"trafficPercentile"`
	// The type of the variant.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AKSVariantResponseInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSVariantResponseInvokeResponse)(nil)).Elem()
}

func (i AKSVariantResponseInvokeResponseArgs) ToAKSVariantResponseInvokeResponseOutput() AKSVariantResponseInvokeResponseOutput {
	return i.ToAKSVariantResponseInvokeResponseOutputWithContext(context.Background())
}

func (i AKSVariantResponseInvokeResponseArgs) ToAKSVariantResponseInvokeResponseOutputWithContext(ctx context.Context) AKSVariantResponseInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSVariantResponseInvokeResponseOutput)
}

// The response for an AKS variant.
type AKSVariantResponseInvokeResponseOutput struct{ *pulumi.OutputState }

func (AKSVariantResponseInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSVariantResponseInvokeResponse)(nil)).Elem()
}

func (o AKSVariantResponseInvokeResponseOutput) ToAKSVariantResponseInvokeResponseOutput() AKSVariantResponseInvokeResponseOutput {
	return o
}

func (o AKSVariantResponseInvokeResponseOutput) ToAKSVariantResponseInvokeResponseOutputWithContext(ctx context.Context) AKSVariantResponseInvokeResponseOutput {
	return o
}

// The compute environment type for the service.
// Expected value is 'Custom'.
func (o AKSVariantResponseInvokeResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AKSVariantResponseInvokeResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The deployment type for the service.
func (o AKSVariantResponseInvokeResponseOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSVariantResponseInvokeResponse) *string { return v.DeploymentType }).(pulumi.StringPtrOutput)
}

// The service description.
func (o AKSVariantResponseInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSVariantResponseInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The error details.
func (o AKSVariantResponseInvokeResponseOutput) Error() ServiceResponseBaseInvokeResponseErrorOutput {
	return o.ApplyT(func(v AKSVariantResponseInvokeResponse) ServiceResponseBaseInvokeResponseError { return v.Error }).(ServiceResponseBaseInvokeResponseErrorOutput)
}

// Is this the default variant.
func (o AKSVariantResponseInvokeResponseOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSVariantResponseInvokeResponse) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The service tag dictionary. Tags are mutable.
func (o AKSVariantResponseInvokeResponseOutput) KvTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AKSVariantResponseInvokeResponse) map[string]string { return v.KvTags }).(pulumi.StringMapOutput)
}

// The service property dictionary. Properties are immutable.
func (o AKSVariantResponseInvokeResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v AKSVariantResponseInvokeResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The current state of the service.
func (o AKSVariantResponseInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v AKSVariantResponseInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// The amount of traffic variant receives.
func (o AKSVariantResponseInvokeResponseOutput) TrafficPercentile() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AKSVariantResponseInvokeResponse) *float64 { return v.TrafficPercentile }).(pulumi.Float64PtrOutput)
}

// The type of the variant.
func (o AKSVariantResponseInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSVariantResponseInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The response for an AKS variant.
type AKSVariantResponseResponse struct {
	// The compute environment type for the service.
	// Expected value is 'Custom'.
	ComputeType string `pulumi:"computeType"`
	// The deployment type for the service.
	DeploymentType *string `pulumi:"deploymentType"`
	// The service description.
	Description *string `pulumi:"description"`
	// The error details.
	Error ServiceResponseBaseResponseError `pulumi:"error"`
	// Is this the default variant.
	IsDefault *bool `pulumi:"isDefault"`
	// The service tag dictionary. Tags are mutable.
	KvTags map[string]string `pulumi:"kvTags"`
	// The service property dictionary. Properties are immutable.
	Properties map[string]string `pulumi:"properties"`
	// The current state of the service.
	State string `pulumi:"state"`
	// The amount of traffic variant receives.
	TrafficPercentile *float64 `pulumi:"trafficPercentile"`
	// The type of the variant.
	Type *string `pulumi:"type"`
}

// AKSVariantResponseResponseInput is an input type that accepts AKSVariantResponseResponseArgs and AKSVariantResponseResponseOutput values.
// You can construct a concrete instance of `AKSVariantResponseResponseInput` via:
//
//          AKSVariantResponseResponseArgs{...}
type AKSVariantResponseResponseInput interface {
	pulumi.Input

	ToAKSVariantResponseResponseOutput() AKSVariantResponseResponseOutput
	ToAKSVariantResponseResponseOutputWithContext(context.Context) AKSVariantResponseResponseOutput
}

// The response for an AKS variant.
type AKSVariantResponseResponseArgs struct {
	// The compute environment type for the service.
	// Expected value is 'Custom'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The deployment type for the service.
	DeploymentType pulumi.StringPtrInput `pulumi:"deploymentType"`
	// The service description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The error details.
	Error ServiceResponseBaseResponseErrorInput `pulumi:"error"`
	// Is this the default variant.
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// The service tag dictionary. Tags are mutable.
	KvTags pulumi.StringMapInput `pulumi:"kvTags"`
	// The service property dictionary. Properties are immutable.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The current state of the service.
	State pulumi.StringInput `pulumi:"state"`
	// The amount of traffic variant receives.
	TrafficPercentile pulumi.Float64PtrInput `pulumi:"trafficPercentile"`
	// The type of the variant.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AKSVariantResponseResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSVariantResponseResponse)(nil)).Elem()
}

func (i AKSVariantResponseResponseArgs) ToAKSVariantResponseResponseOutput() AKSVariantResponseResponseOutput {
	return i.ToAKSVariantResponseResponseOutputWithContext(context.Background())
}

func (i AKSVariantResponseResponseArgs) ToAKSVariantResponseResponseOutputWithContext(ctx context.Context) AKSVariantResponseResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSVariantResponseResponseOutput)
}

// The response for an AKS variant.
type AKSVariantResponseResponseOutput struct{ *pulumi.OutputState }

func (AKSVariantResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AKSVariantResponseResponse)(nil)).Elem()
}

func (o AKSVariantResponseResponseOutput) ToAKSVariantResponseResponseOutput() AKSVariantResponseResponseOutput {
	return o
}

func (o AKSVariantResponseResponseOutput) ToAKSVariantResponseResponseOutputWithContext(ctx context.Context) AKSVariantResponseResponseOutput {
	return o
}

// The compute environment type for the service.
// Expected value is 'Custom'.
func (o AKSVariantResponseResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The deployment type for the service.
func (o AKSVariantResponseResponseOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) *string { return v.DeploymentType }).(pulumi.StringPtrOutput)
}

// The service description.
func (o AKSVariantResponseResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The error details.
func (o AKSVariantResponseResponseOutput) Error() ServiceResponseBaseResponseErrorOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) ServiceResponseBaseResponseError { return v.Error }).(ServiceResponseBaseResponseErrorOutput)
}

// Is this the default variant.
func (o AKSVariantResponseResponseOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The service tag dictionary. Tags are mutable.
func (o AKSVariantResponseResponseOutput) KvTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) map[string]string { return v.KvTags }).(pulumi.StringMapOutput)
}

// The service property dictionary. Properties are immutable.
func (o AKSVariantResponseResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The current state of the service.
func (o AKSVariantResponseResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) string { return v.State }).(pulumi.StringOutput)
}

// The amount of traffic variant receives.
func (o AKSVariantResponseResponseOutput) TrafficPercentile() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) *float64 { return v.TrafficPercentile }).(pulumi.Float64PtrOutput)
}

// The type of the variant.
func (o AKSVariantResponseResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AKSVariantResponseResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Advance configuration for AKS networking
type AksNetworkingConfiguration struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP *string `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr *string `pulumi:"dockerBridgeCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr *string `pulumi:"serviceCidr"`
	// Virtual network subnet resource ID the compute nodes belong to
	SubnetId *string `pulumi:"subnetId"`
}

// AksNetworkingConfigurationInput is an input type that accepts AksNetworkingConfigurationArgs and AksNetworkingConfigurationOutput values.
// You can construct a concrete instance of `AksNetworkingConfigurationInput` via:
//
//          AksNetworkingConfigurationArgs{...}
type AksNetworkingConfigurationInput interface {
	pulumi.Input

	ToAksNetworkingConfigurationOutput() AksNetworkingConfigurationOutput
	ToAksNetworkingConfigurationOutputWithContext(context.Context) AksNetworkingConfigurationOutput
}

// Advance configuration for AKS networking
type AksNetworkingConfigurationArgs struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP pulumi.StringPtrInput `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr pulumi.StringPtrInput `pulumi:"dockerBridgeCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr pulumi.StringPtrInput `pulumi:"serviceCidr"`
	// Virtual network subnet resource ID the compute nodes belong to
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (AksNetworkingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AksNetworkingConfiguration)(nil)).Elem()
}

func (i AksNetworkingConfigurationArgs) ToAksNetworkingConfigurationOutput() AksNetworkingConfigurationOutput {
	return i.ToAksNetworkingConfigurationOutputWithContext(context.Background())
}

func (i AksNetworkingConfigurationArgs) ToAksNetworkingConfigurationOutputWithContext(ctx context.Context) AksNetworkingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationOutput)
}

func (i AksNetworkingConfigurationArgs) ToAksNetworkingConfigurationPtrOutput() AksNetworkingConfigurationPtrOutput {
	return i.ToAksNetworkingConfigurationPtrOutputWithContext(context.Background())
}

func (i AksNetworkingConfigurationArgs) ToAksNetworkingConfigurationPtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationOutput).ToAksNetworkingConfigurationPtrOutputWithContext(ctx)
}

// AksNetworkingConfigurationPtrInput is an input type that accepts AksNetworkingConfigurationArgs, AksNetworkingConfigurationPtr and AksNetworkingConfigurationPtrOutput values.
// You can construct a concrete instance of `AksNetworkingConfigurationPtrInput` via:
//
//          AksNetworkingConfigurationArgs{...}
//
//  or:
//
//          nil
type AksNetworkingConfigurationPtrInput interface {
	pulumi.Input

	ToAksNetworkingConfigurationPtrOutput() AksNetworkingConfigurationPtrOutput
	ToAksNetworkingConfigurationPtrOutputWithContext(context.Context) AksNetworkingConfigurationPtrOutput
}

type aksNetworkingConfigurationPtrType AksNetworkingConfigurationArgs

func AksNetworkingConfigurationPtr(v *AksNetworkingConfigurationArgs) AksNetworkingConfigurationPtrInput {
	return (*aksNetworkingConfigurationPtrType)(v)
}

func (*aksNetworkingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AksNetworkingConfiguration)(nil)).Elem()
}

func (i *aksNetworkingConfigurationPtrType) ToAksNetworkingConfigurationPtrOutput() AksNetworkingConfigurationPtrOutput {
	return i.ToAksNetworkingConfigurationPtrOutputWithContext(context.Background())
}

func (i *aksNetworkingConfigurationPtrType) ToAksNetworkingConfigurationPtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationPtrOutput)
}

// Advance configuration for AKS networking
type AksNetworkingConfigurationOutput struct{ *pulumi.OutputState }

func (AksNetworkingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AksNetworkingConfiguration)(nil)).Elem()
}

func (o AksNetworkingConfigurationOutput) ToAksNetworkingConfigurationOutput() AksNetworkingConfigurationOutput {
	return o
}

func (o AksNetworkingConfigurationOutput) ToAksNetworkingConfigurationOutputWithContext(ctx context.Context) AksNetworkingConfigurationOutput {
	return o
}

func (o AksNetworkingConfigurationOutput) ToAksNetworkingConfigurationPtrOutput() AksNetworkingConfigurationPtrOutput {
	return o.ToAksNetworkingConfigurationPtrOutputWithContext(context.Background())
}

func (o AksNetworkingConfigurationOutput) ToAksNetworkingConfigurationPtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfiguration) *AksNetworkingConfiguration {
		return &v
	}).(AksNetworkingConfigurationPtrOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o AksNetworkingConfigurationOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfiguration) *string { return v.DnsServiceIP }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o AksNetworkingConfigurationOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfiguration) *string { return v.DockerBridgeCidr }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o AksNetworkingConfigurationOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfiguration) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to
func (o AksNetworkingConfigurationOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfiguration) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type AksNetworkingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AksNetworkingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AksNetworkingConfiguration)(nil)).Elem()
}

func (o AksNetworkingConfigurationPtrOutput) ToAksNetworkingConfigurationPtrOutput() AksNetworkingConfigurationPtrOutput {
	return o
}

func (o AksNetworkingConfigurationPtrOutput) ToAksNetworkingConfigurationPtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationPtrOutput {
	return o
}

func (o AksNetworkingConfigurationPtrOutput) Elem() AksNetworkingConfigurationOutput {
	return o.ApplyT(func(v *AksNetworkingConfiguration) AksNetworkingConfiguration { return *v }).(AksNetworkingConfigurationOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o AksNetworkingConfigurationPtrOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DnsServiceIP
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o AksNetworkingConfigurationPtrOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DockerBridgeCidr
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o AksNetworkingConfigurationPtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to
func (o AksNetworkingConfigurationPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// Advance configuration for AKS networking
type AksNetworkingConfigurationInvokeResponse struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP *string `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr *string `pulumi:"dockerBridgeCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr *string `pulumi:"serviceCidr"`
	// Virtual network subnet resource ID the compute nodes belong to
	SubnetId *string `pulumi:"subnetId"`
}

// AksNetworkingConfigurationInvokeResponseInput is an input type that accepts AksNetworkingConfigurationInvokeResponseArgs and AksNetworkingConfigurationInvokeResponseOutput values.
// You can construct a concrete instance of `AksNetworkingConfigurationInvokeResponseInput` via:
//
//          AksNetworkingConfigurationInvokeResponseArgs{...}
type AksNetworkingConfigurationInvokeResponseInput interface {
	pulumi.Input

	ToAksNetworkingConfigurationInvokeResponseOutput() AksNetworkingConfigurationInvokeResponseOutput
	ToAksNetworkingConfigurationInvokeResponseOutputWithContext(context.Context) AksNetworkingConfigurationInvokeResponseOutput
}

// Advance configuration for AKS networking
type AksNetworkingConfigurationInvokeResponseArgs struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP pulumi.StringPtrInput `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr pulumi.StringPtrInput `pulumi:"dockerBridgeCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr pulumi.StringPtrInput `pulumi:"serviceCidr"`
	// Virtual network subnet resource ID the compute nodes belong to
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (AksNetworkingConfigurationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AksNetworkingConfigurationInvokeResponse)(nil)).Elem()
}

func (i AksNetworkingConfigurationInvokeResponseArgs) ToAksNetworkingConfigurationInvokeResponseOutput() AksNetworkingConfigurationInvokeResponseOutput {
	return i.ToAksNetworkingConfigurationInvokeResponseOutputWithContext(context.Background())
}

func (i AksNetworkingConfigurationInvokeResponseArgs) ToAksNetworkingConfigurationInvokeResponseOutputWithContext(ctx context.Context) AksNetworkingConfigurationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationInvokeResponseOutput)
}

func (i AksNetworkingConfigurationInvokeResponseArgs) ToAksNetworkingConfigurationInvokeResponsePtrOutput() AksNetworkingConfigurationInvokeResponsePtrOutput {
	return i.ToAksNetworkingConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i AksNetworkingConfigurationInvokeResponseArgs) ToAksNetworkingConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationInvokeResponseOutput).ToAksNetworkingConfigurationInvokeResponsePtrOutputWithContext(ctx)
}

// AksNetworkingConfigurationInvokeResponsePtrInput is an input type that accepts AksNetworkingConfigurationInvokeResponseArgs, AksNetworkingConfigurationInvokeResponsePtr and AksNetworkingConfigurationInvokeResponsePtrOutput values.
// You can construct a concrete instance of `AksNetworkingConfigurationInvokeResponsePtrInput` via:
//
//          AksNetworkingConfigurationInvokeResponseArgs{...}
//
//  or:
//
//          nil
type AksNetworkingConfigurationInvokeResponsePtrInput interface {
	pulumi.Input

	ToAksNetworkingConfigurationInvokeResponsePtrOutput() AksNetworkingConfigurationInvokeResponsePtrOutput
	ToAksNetworkingConfigurationInvokeResponsePtrOutputWithContext(context.Context) AksNetworkingConfigurationInvokeResponsePtrOutput
}

type aksNetworkingConfigurationInvokeResponsePtrType AksNetworkingConfigurationInvokeResponseArgs

func AksNetworkingConfigurationInvokeResponsePtr(v *AksNetworkingConfigurationInvokeResponseArgs) AksNetworkingConfigurationInvokeResponsePtrInput {
	return (*aksNetworkingConfigurationInvokeResponsePtrType)(v)
}

func (*aksNetworkingConfigurationInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AksNetworkingConfigurationInvokeResponse)(nil)).Elem()
}

func (i *aksNetworkingConfigurationInvokeResponsePtrType) ToAksNetworkingConfigurationInvokeResponsePtrOutput() AksNetworkingConfigurationInvokeResponsePtrOutput {
	return i.ToAksNetworkingConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *aksNetworkingConfigurationInvokeResponsePtrType) ToAksNetworkingConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationInvokeResponsePtrOutput)
}

// Advance configuration for AKS networking
type AksNetworkingConfigurationInvokeResponseOutput struct{ *pulumi.OutputState }

func (AksNetworkingConfigurationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AksNetworkingConfigurationInvokeResponse)(nil)).Elem()
}

func (o AksNetworkingConfigurationInvokeResponseOutput) ToAksNetworkingConfigurationInvokeResponseOutput() AksNetworkingConfigurationInvokeResponseOutput {
	return o
}

func (o AksNetworkingConfigurationInvokeResponseOutput) ToAksNetworkingConfigurationInvokeResponseOutputWithContext(ctx context.Context) AksNetworkingConfigurationInvokeResponseOutput {
	return o
}

func (o AksNetworkingConfigurationInvokeResponseOutput) ToAksNetworkingConfigurationInvokeResponsePtrOutput() AksNetworkingConfigurationInvokeResponsePtrOutput {
	return o.ToAksNetworkingConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (o AksNetworkingConfigurationInvokeResponseOutput) ToAksNetworkingConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationInvokeResponse) *AksNetworkingConfigurationInvokeResponse {
		return &v
	}).(AksNetworkingConfigurationInvokeResponsePtrOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o AksNetworkingConfigurationInvokeResponseOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationInvokeResponse) *string { return v.DnsServiceIP }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o AksNetworkingConfigurationInvokeResponseOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationInvokeResponse) *string { return v.DockerBridgeCidr }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o AksNetworkingConfigurationInvokeResponseOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationInvokeResponse) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to
func (o AksNetworkingConfigurationInvokeResponseOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationInvokeResponse) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type AksNetworkingConfigurationInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (AksNetworkingConfigurationInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AksNetworkingConfigurationInvokeResponse)(nil)).Elem()
}

func (o AksNetworkingConfigurationInvokeResponsePtrOutput) ToAksNetworkingConfigurationInvokeResponsePtrOutput() AksNetworkingConfigurationInvokeResponsePtrOutput {
	return o
}

func (o AksNetworkingConfigurationInvokeResponsePtrOutput) ToAksNetworkingConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationInvokeResponsePtrOutput {
	return o
}

func (o AksNetworkingConfigurationInvokeResponsePtrOutput) Elem() AksNetworkingConfigurationInvokeResponseOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationInvokeResponse) AksNetworkingConfigurationInvokeResponse { return *v }).(AksNetworkingConfigurationInvokeResponseOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o AksNetworkingConfigurationInvokeResponsePtrOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.DnsServiceIP
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o AksNetworkingConfigurationInvokeResponsePtrOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.DockerBridgeCidr
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o AksNetworkingConfigurationInvokeResponsePtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to
func (o AksNetworkingConfigurationInvokeResponsePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// Advance configuration for AKS networking
type AksNetworkingConfigurationResponse struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP *string `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr *string `pulumi:"dockerBridgeCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr *string `pulumi:"serviceCidr"`
	// Virtual network subnet resource ID the compute nodes belong to
	SubnetId *string `pulumi:"subnetId"`
}

// AksNetworkingConfigurationResponseInput is an input type that accepts AksNetworkingConfigurationResponseArgs and AksNetworkingConfigurationResponseOutput values.
// You can construct a concrete instance of `AksNetworkingConfigurationResponseInput` via:
//
//          AksNetworkingConfigurationResponseArgs{...}
type AksNetworkingConfigurationResponseInput interface {
	pulumi.Input

	ToAksNetworkingConfigurationResponseOutput() AksNetworkingConfigurationResponseOutput
	ToAksNetworkingConfigurationResponseOutputWithContext(context.Context) AksNetworkingConfigurationResponseOutput
}

// Advance configuration for AKS networking
type AksNetworkingConfigurationResponseArgs struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP pulumi.StringPtrInput `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr pulumi.StringPtrInput `pulumi:"dockerBridgeCidr"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr pulumi.StringPtrInput `pulumi:"serviceCidr"`
	// Virtual network subnet resource ID the compute nodes belong to
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (AksNetworkingConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AksNetworkingConfigurationResponse)(nil)).Elem()
}

func (i AksNetworkingConfigurationResponseArgs) ToAksNetworkingConfigurationResponseOutput() AksNetworkingConfigurationResponseOutput {
	return i.ToAksNetworkingConfigurationResponseOutputWithContext(context.Background())
}

func (i AksNetworkingConfigurationResponseArgs) ToAksNetworkingConfigurationResponseOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationResponseOutput)
}

func (i AksNetworkingConfigurationResponseArgs) ToAksNetworkingConfigurationResponsePtrOutput() AksNetworkingConfigurationResponsePtrOutput {
	return i.ToAksNetworkingConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i AksNetworkingConfigurationResponseArgs) ToAksNetworkingConfigurationResponsePtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationResponseOutput).ToAksNetworkingConfigurationResponsePtrOutputWithContext(ctx)
}

// AksNetworkingConfigurationResponsePtrInput is an input type that accepts AksNetworkingConfigurationResponseArgs, AksNetworkingConfigurationResponsePtr and AksNetworkingConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `AksNetworkingConfigurationResponsePtrInput` via:
//
//          AksNetworkingConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type AksNetworkingConfigurationResponsePtrInput interface {
	pulumi.Input

	ToAksNetworkingConfigurationResponsePtrOutput() AksNetworkingConfigurationResponsePtrOutput
	ToAksNetworkingConfigurationResponsePtrOutputWithContext(context.Context) AksNetworkingConfigurationResponsePtrOutput
}

type aksNetworkingConfigurationResponsePtrType AksNetworkingConfigurationResponseArgs

func AksNetworkingConfigurationResponsePtr(v *AksNetworkingConfigurationResponseArgs) AksNetworkingConfigurationResponsePtrInput {
	return (*aksNetworkingConfigurationResponsePtrType)(v)
}

func (*aksNetworkingConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AksNetworkingConfigurationResponse)(nil)).Elem()
}

func (i *aksNetworkingConfigurationResponsePtrType) ToAksNetworkingConfigurationResponsePtrOutput() AksNetworkingConfigurationResponsePtrOutput {
	return i.ToAksNetworkingConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *aksNetworkingConfigurationResponsePtrType) ToAksNetworkingConfigurationResponsePtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksNetworkingConfigurationResponsePtrOutput)
}

// Advance configuration for AKS networking
type AksNetworkingConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AksNetworkingConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AksNetworkingConfigurationResponse)(nil)).Elem()
}

func (o AksNetworkingConfigurationResponseOutput) ToAksNetworkingConfigurationResponseOutput() AksNetworkingConfigurationResponseOutput {
	return o
}

func (o AksNetworkingConfigurationResponseOutput) ToAksNetworkingConfigurationResponseOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponseOutput {
	return o
}

func (o AksNetworkingConfigurationResponseOutput) ToAksNetworkingConfigurationResponsePtrOutput() AksNetworkingConfigurationResponsePtrOutput {
	return o.ToAksNetworkingConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o AksNetworkingConfigurationResponseOutput) ToAksNetworkingConfigurationResponsePtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationResponse) *AksNetworkingConfigurationResponse {
		return &v
	}).(AksNetworkingConfigurationResponsePtrOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o AksNetworkingConfigurationResponseOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationResponse) *string { return v.DnsServiceIP }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o AksNetworkingConfigurationResponseOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationResponse) *string { return v.DockerBridgeCidr }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o AksNetworkingConfigurationResponseOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationResponse) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to
func (o AksNetworkingConfigurationResponseOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksNetworkingConfigurationResponse) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type AksNetworkingConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (AksNetworkingConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AksNetworkingConfigurationResponse)(nil)).Elem()
}

func (o AksNetworkingConfigurationResponsePtrOutput) ToAksNetworkingConfigurationResponsePtrOutput() AksNetworkingConfigurationResponsePtrOutput {
	return o
}

func (o AksNetworkingConfigurationResponsePtrOutput) ToAksNetworkingConfigurationResponsePtrOutputWithContext(ctx context.Context) AksNetworkingConfigurationResponsePtrOutput {
	return o
}

func (o AksNetworkingConfigurationResponsePtrOutput) Elem() AksNetworkingConfigurationResponseOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationResponse) AksNetworkingConfigurationResponse { return *v }).(AksNetworkingConfigurationResponseOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o AksNetworkingConfigurationResponsePtrOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.DnsServiceIP
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o AksNetworkingConfigurationResponsePtrOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.DockerBridgeCidr
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o AksNetworkingConfigurationResponsePtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to
func (o AksNetworkingConfigurationResponsePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksNetworkingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// An Azure Machine Learning compute.
type AmlCompute struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AmlCompute'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// AML Compute properties
	Properties *AmlComputeProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// AmlComputeInput is an input type that accepts AmlComputeArgs and AmlComputeOutput values.
// You can construct a concrete instance of `AmlComputeInput` via:
//
//          AmlComputeArgs{...}
type AmlComputeInput interface {
	pulumi.Input

	ToAmlComputeOutput() AmlComputeOutput
	ToAmlComputeOutputWithContext(context.Context) AmlComputeOutput
}

// An Azure Machine Learning compute.
type AmlComputeArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AmlCompute'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// AML Compute properties
	Properties AmlComputePropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (AmlComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlCompute)(nil)).Elem()
}

func (i AmlComputeArgs) ToAmlComputeOutput() AmlComputeOutput {
	return i.ToAmlComputeOutputWithContext(context.Background())
}

func (i AmlComputeArgs) ToAmlComputeOutputWithContext(ctx context.Context) AmlComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeOutput)
}

// An Azure Machine Learning compute.
type AmlComputeOutput struct{ *pulumi.OutputState }

func (AmlComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlCompute)(nil)).Elem()
}

func (o AmlComputeOutput) ToAmlComputeOutput() AmlComputeOutput {
	return o
}

func (o AmlComputeOutput) ToAmlComputeOutputWithContext(ctx context.Context) AmlComputeOutput {
	return o
}

// Location for the underlying compute
func (o AmlComputeOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlCompute) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'AmlCompute'.
func (o AmlComputeOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AmlCompute) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o AmlComputeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlCompute) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// AML Compute properties
func (o AmlComputeOutput) Properties() AmlComputePropertiesPtrOutput {
	return o.ApplyT(func(v AmlCompute) *AmlComputeProperties { return v.Properties }).(AmlComputePropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o AmlComputeOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlCompute) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// An Azure Machine Learning compute.
type AmlComputeInvokeResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AmlCompute'.
	ComputeType string `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// AML Compute properties
	Properties *AmlComputeInvokeResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorInvokeResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// AmlComputeInvokeResponseInput is an input type that accepts AmlComputeInvokeResponseArgs and AmlComputeInvokeResponseOutput values.
// You can construct a concrete instance of `AmlComputeInvokeResponseInput` via:
//
//          AmlComputeInvokeResponseArgs{...}
type AmlComputeInvokeResponseInput interface {
	pulumi.Input

	ToAmlComputeInvokeResponseOutput() AmlComputeInvokeResponseOutput
	ToAmlComputeInvokeResponseOutputWithContext(context.Context) AmlComputeInvokeResponseOutput
}

// An Azure Machine Learning compute.
type AmlComputeInvokeResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AmlCompute'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn pulumi.StringInput `pulumi:"modifiedOn"`
	// AML Compute properties
	Properties AmlComputeInvokeResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorInvokeResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (AmlComputeInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeInvokeResponse)(nil)).Elem()
}

func (i AmlComputeInvokeResponseArgs) ToAmlComputeInvokeResponseOutput() AmlComputeInvokeResponseOutput {
	return i.ToAmlComputeInvokeResponseOutputWithContext(context.Background())
}

func (i AmlComputeInvokeResponseArgs) ToAmlComputeInvokeResponseOutputWithContext(ctx context.Context) AmlComputeInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeInvokeResponseOutput)
}

// An Azure Machine Learning compute.
type AmlComputeInvokeResponseOutput struct{ *pulumi.OutputState }

func (AmlComputeInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeInvokeResponse)(nil)).Elem()
}

func (o AmlComputeInvokeResponseOutput) ToAmlComputeInvokeResponseOutput() AmlComputeInvokeResponseOutput {
	return o
}

func (o AmlComputeInvokeResponseOutput) ToAmlComputeInvokeResponseOutputWithContext(ctx context.Context) AmlComputeInvokeResponseOutput {
	return o
}

// Location for the underlying compute
func (o AmlComputeInvokeResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'AmlCompute'.
func (o AmlComputeInvokeResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The date and time when the compute was created.
func (o AmlComputeInvokeResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o AmlComputeInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o AmlComputeInvokeResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The date and time when the compute was last modified.
func (o AmlComputeInvokeResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// AML Compute properties
func (o AmlComputeInvokeResponseOutput) Properties() AmlComputeInvokeResponsePropertiesPtrOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponse) *AmlComputeInvokeResponseProperties { return v.Properties }).(AmlComputeInvokeResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o AmlComputeInvokeResponseOutput) ProvisioningErrors() MachineLearningServiceErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponse) []MachineLearningServiceErrorInvokeResponse {
		return v.ProvisioningErrors
	}).(MachineLearningServiceErrorInvokeResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o AmlComputeInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o AmlComputeInvokeResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// AML Compute properties
type AmlComputeInvokeResponseProperties struct {
	// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
	AllocationState string `pulumi:"allocationState"`
	// The time at which the compute entered its current allocation state.
	AllocationStateTransitionTime string `pulumi:"allocationStateTransitionTime"`
	// The number of compute nodes currently assigned to the compute.
	CurrentNodeCount int `pulumi:"currentNodeCount"`
	// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
	EnableNodePublicIp *bool `pulumi:"enableNodePublicIp"`
	// Collection of errors encountered by various compute nodes during node setup.
	Errors []MachineLearningServiceErrorInvokeResponse `pulumi:"errors"`
	// Network is isolated or not
	IsolatedNetwork *bool `pulumi:"isolatedNetwork"`
	// Counts of various node states on the compute.
	NodeStateCounts NodeStateCountsInvokeResponse `pulumi:"nodeStateCounts"`
	// Compute OS Type
	OsType *string `pulumi:"osType"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
	RemoteLoginPortPublicAccess *string `pulumi:"remoteLoginPortPublicAccess"`
	// Scale settings for AML Compute
	ScaleSettings *ScaleSettingsInvokeResponse `pulumi:"scaleSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet *ResourceIdInvokeResponse `pulumi:"subnet"`
	// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
	TargetNodeCount int `pulumi:"targetNodeCount"`
	// Credentials for an administrator user account that will be created on each compute node.
	UserAccountCredentials *UserAccountCredentialsInvokeResponse `pulumi:"userAccountCredentials"`
	// Virtual Machine image for AML Compute - windows only
	VirtualMachineImage *VirtualMachineImageInvokeResponse `pulumi:"virtualMachineImage"`
	// Virtual Machine priority
	VmPriority *string `pulumi:"vmPriority"`
	// Virtual Machine Size
	VmSize *string `pulumi:"vmSize"`
}

// AmlComputeInvokeResponsePropertiesInput is an input type that accepts AmlComputeInvokeResponsePropertiesArgs and AmlComputeInvokeResponsePropertiesOutput values.
// You can construct a concrete instance of `AmlComputeInvokeResponsePropertiesInput` via:
//
//          AmlComputeInvokeResponsePropertiesArgs{...}
type AmlComputeInvokeResponsePropertiesInput interface {
	pulumi.Input

	ToAmlComputeInvokeResponsePropertiesOutput() AmlComputeInvokeResponsePropertiesOutput
	ToAmlComputeInvokeResponsePropertiesOutputWithContext(context.Context) AmlComputeInvokeResponsePropertiesOutput
}

// AML Compute properties
type AmlComputeInvokeResponsePropertiesArgs struct {
	// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
	AllocationState pulumi.StringInput `pulumi:"allocationState"`
	// The time at which the compute entered its current allocation state.
	AllocationStateTransitionTime pulumi.StringInput `pulumi:"allocationStateTransitionTime"`
	// The number of compute nodes currently assigned to the compute.
	CurrentNodeCount pulumi.IntInput `pulumi:"currentNodeCount"`
	// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
	EnableNodePublicIp pulumi.BoolPtrInput `pulumi:"enableNodePublicIp"`
	// Collection of errors encountered by various compute nodes during node setup.
	Errors MachineLearningServiceErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Network is isolated or not
	IsolatedNetwork pulumi.BoolPtrInput `pulumi:"isolatedNetwork"`
	// Counts of various node states on the compute.
	NodeStateCounts NodeStateCountsInvokeResponseInput `pulumi:"nodeStateCounts"`
	// Compute OS Type
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
	RemoteLoginPortPublicAccess pulumi.StringPtrInput `pulumi:"remoteLoginPortPublicAccess"`
	// Scale settings for AML Compute
	ScaleSettings ScaleSettingsInvokeResponsePtrInput `pulumi:"scaleSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet ResourceIdInvokeResponsePtrInput `pulumi:"subnet"`
	// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
	TargetNodeCount pulumi.IntInput `pulumi:"targetNodeCount"`
	// Credentials for an administrator user account that will be created on each compute node.
	UserAccountCredentials UserAccountCredentialsInvokeResponsePtrInput `pulumi:"userAccountCredentials"`
	// Virtual Machine image for AML Compute - windows only
	VirtualMachineImage VirtualMachineImageInvokeResponsePtrInput `pulumi:"virtualMachineImage"`
	// Virtual Machine priority
	VmPriority pulumi.StringPtrInput `pulumi:"vmPriority"`
	// Virtual Machine Size
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (AmlComputeInvokeResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeInvokeResponseProperties)(nil)).Elem()
}

func (i AmlComputeInvokeResponsePropertiesArgs) ToAmlComputeInvokeResponsePropertiesOutput() AmlComputeInvokeResponsePropertiesOutput {
	return i.ToAmlComputeInvokeResponsePropertiesOutputWithContext(context.Background())
}

func (i AmlComputeInvokeResponsePropertiesArgs) ToAmlComputeInvokeResponsePropertiesOutputWithContext(ctx context.Context) AmlComputeInvokeResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeInvokeResponsePropertiesOutput)
}

func (i AmlComputeInvokeResponsePropertiesArgs) ToAmlComputeInvokeResponsePropertiesPtrOutput() AmlComputeInvokeResponsePropertiesPtrOutput {
	return i.ToAmlComputeInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i AmlComputeInvokeResponsePropertiesArgs) ToAmlComputeInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) AmlComputeInvokeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeInvokeResponsePropertiesOutput).ToAmlComputeInvokeResponsePropertiesPtrOutputWithContext(ctx)
}

// AmlComputeInvokeResponsePropertiesPtrInput is an input type that accepts AmlComputeInvokeResponsePropertiesArgs, AmlComputeInvokeResponsePropertiesPtr and AmlComputeInvokeResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `AmlComputeInvokeResponsePropertiesPtrInput` via:
//
//          AmlComputeInvokeResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type AmlComputeInvokeResponsePropertiesPtrInput interface {
	pulumi.Input

	ToAmlComputeInvokeResponsePropertiesPtrOutput() AmlComputeInvokeResponsePropertiesPtrOutput
	ToAmlComputeInvokeResponsePropertiesPtrOutputWithContext(context.Context) AmlComputeInvokeResponsePropertiesPtrOutput
}

type amlComputeInvokeResponsePropertiesPtrType AmlComputeInvokeResponsePropertiesArgs

func AmlComputeInvokeResponsePropertiesPtr(v *AmlComputeInvokeResponsePropertiesArgs) AmlComputeInvokeResponsePropertiesPtrInput {
	return (*amlComputeInvokeResponsePropertiesPtrType)(v)
}

func (*amlComputeInvokeResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlComputeInvokeResponseProperties)(nil)).Elem()
}

func (i *amlComputeInvokeResponsePropertiesPtrType) ToAmlComputeInvokeResponsePropertiesPtrOutput() AmlComputeInvokeResponsePropertiesPtrOutput {
	return i.ToAmlComputeInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *amlComputeInvokeResponsePropertiesPtrType) ToAmlComputeInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) AmlComputeInvokeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeInvokeResponsePropertiesPtrOutput)
}

// AML Compute properties
type AmlComputeInvokeResponsePropertiesOutput struct{ *pulumi.OutputState }

func (AmlComputeInvokeResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeInvokeResponseProperties)(nil)).Elem()
}

func (o AmlComputeInvokeResponsePropertiesOutput) ToAmlComputeInvokeResponsePropertiesOutput() AmlComputeInvokeResponsePropertiesOutput {
	return o
}

func (o AmlComputeInvokeResponsePropertiesOutput) ToAmlComputeInvokeResponsePropertiesOutputWithContext(ctx context.Context) AmlComputeInvokeResponsePropertiesOutput {
	return o
}

func (o AmlComputeInvokeResponsePropertiesOutput) ToAmlComputeInvokeResponsePropertiesPtrOutput() AmlComputeInvokeResponsePropertiesPtrOutput {
	return o.ToAmlComputeInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o AmlComputeInvokeResponsePropertiesOutput) ToAmlComputeInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) AmlComputeInvokeResponsePropertiesPtrOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponseProperties) *AmlComputeInvokeResponseProperties {
		return &v
	}).(AmlComputeInvokeResponsePropertiesPtrOutput)
}

// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
func (o AmlComputeInvokeResponsePropertiesOutput) AllocationState() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponseProperties) string { return v.AllocationState }).(pulumi.StringOutput)
}

// The time at which the compute entered its current allocation state.
func (o AmlComputeInvokeResponsePropertiesOutput) AllocationStateTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponseProperties) string { return v.AllocationStateTransitionTime }).(pulumi.StringOutput)
}

// The number of compute nodes currently assigned to the compute.
func (o AmlComputeInvokeResponsePropertiesOutput) CurrentNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponseProperties) int { return v.CurrentNodeCount }).(pulumi.IntOutput)
}

// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
func (o AmlComputeInvokeResponsePropertiesOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponseProperties) *bool { return v.EnableNodePublicIp }).(pulumi.BoolPtrOutput)
}

// Collection of errors encountered by various compute nodes during node setup.
func (o AmlComputeInvokeResponsePropertiesOutput) Errors() MachineLearningServiceErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponseProperties) []MachineLearningServiceErrorInvokeResponse {
		return v.Errors
	}).(MachineLearningServiceErrorInvokeResponseArrayOutput)
}

// Network is isolated or not
func (o AmlComputeInvokeResponsePropertiesOutput) IsolatedNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponseProperties) *bool { return v.IsolatedNetwork }).(pulumi.BoolPtrOutput)
}

// Counts of various node states on the compute.
func (o AmlComputeInvokeResponsePropertiesOutput) NodeStateCounts() NodeStateCountsInvokeResponseOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponseProperties) NodeStateCountsInvokeResponse { return v.NodeStateCounts }).(NodeStateCountsInvokeResponseOutput)
}

// Compute OS Type
func (o AmlComputeInvokeResponsePropertiesOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponseProperties) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
func (o AmlComputeInvokeResponsePropertiesOutput) RemoteLoginPortPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponseProperties) *string { return v.RemoteLoginPortPublicAccess }).(pulumi.StringPtrOutput)
}

// Scale settings for AML Compute
func (o AmlComputeInvokeResponsePropertiesOutput) ScaleSettings() ScaleSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponseProperties) *ScaleSettingsInvokeResponse { return v.ScaleSettings }).(ScaleSettingsInvokeResponsePtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o AmlComputeInvokeResponsePropertiesOutput) Subnet() ResourceIdInvokeResponsePtrOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponseProperties) *ResourceIdInvokeResponse { return v.Subnet }).(ResourceIdInvokeResponsePtrOutput)
}

// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
func (o AmlComputeInvokeResponsePropertiesOutput) TargetNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponseProperties) int { return v.TargetNodeCount }).(pulumi.IntOutput)
}

// Credentials for an administrator user account that will be created on each compute node.
func (o AmlComputeInvokeResponsePropertiesOutput) UserAccountCredentials() UserAccountCredentialsInvokeResponsePtrOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponseProperties) *UserAccountCredentialsInvokeResponse {
		return v.UserAccountCredentials
	}).(UserAccountCredentialsInvokeResponsePtrOutput)
}

// Virtual Machine image for AML Compute - windows only
func (o AmlComputeInvokeResponsePropertiesOutput) VirtualMachineImage() VirtualMachineImageInvokeResponsePtrOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponseProperties) *VirtualMachineImageInvokeResponse {
		return v.VirtualMachineImage
	}).(VirtualMachineImageInvokeResponsePtrOutput)
}

// Virtual Machine priority
func (o AmlComputeInvokeResponsePropertiesOutput) VmPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponseProperties) *string { return v.VmPriority }).(pulumi.StringPtrOutput)
}

// Virtual Machine Size
func (o AmlComputeInvokeResponsePropertiesOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeInvokeResponseProperties) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type AmlComputeInvokeResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AmlComputeInvokeResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlComputeInvokeResponseProperties)(nil)).Elem()
}

func (o AmlComputeInvokeResponsePropertiesPtrOutput) ToAmlComputeInvokeResponsePropertiesPtrOutput() AmlComputeInvokeResponsePropertiesPtrOutput {
	return o
}

func (o AmlComputeInvokeResponsePropertiesPtrOutput) ToAmlComputeInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) AmlComputeInvokeResponsePropertiesPtrOutput {
	return o
}

func (o AmlComputeInvokeResponsePropertiesPtrOutput) Elem() AmlComputeInvokeResponsePropertiesOutput {
	return o.ApplyT(func(v *AmlComputeInvokeResponseProperties) AmlComputeInvokeResponseProperties { return *v }).(AmlComputeInvokeResponsePropertiesOutput)
}

// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
func (o AmlComputeInvokeResponsePropertiesPtrOutput) AllocationState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeInvokeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AllocationState
	}).(pulumi.StringPtrOutput)
}

// The time at which the compute entered its current allocation state.
func (o AmlComputeInvokeResponsePropertiesPtrOutput) AllocationStateTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeInvokeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AllocationStateTransitionTime
	}).(pulumi.StringPtrOutput)
}

// The number of compute nodes currently assigned to the compute.
func (o AmlComputeInvokeResponsePropertiesPtrOutput) CurrentNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AmlComputeInvokeResponseProperties) *int {
		if v == nil {
			return nil
		}
		return &v.CurrentNodeCount
	}).(pulumi.IntPtrOutput)
}

// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
func (o AmlComputeInvokeResponsePropertiesPtrOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmlComputeInvokeResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNodePublicIp
	}).(pulumi.BoolPtrOutput)
}

// Collection of errors encountered by various compute nodes during node setup.
func (o AmlComputeInvokeResponsePropertiesPtrOutput) Errors() MachineLearningServiceErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v *AmlComputeInvokeResponseProperties) []MachineLearningServiceErrorInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(MachineLearningServiceErrorInvokeResponseArrayOutput)
}

// Network is isolated or not
func (o AmlComputeInvokeResponsePropertiesPtrOutput) IsolatedNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmlComputeInvokeResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsolatedNetwork
	}).(pulumi.BoolPtrOutput)
}

// Counts of various node states on the compute.
func (o AmlComputeInvokeResponsePropertiesPtrOutput) NodeStateCounts() NodeStateCountsInvokeResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputeInvokeResponseProperties) *NodeStateCountsInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.NodeStateCounts
	}).(NodeStateCountsInvokeResponsePtrOutput)
}

// Compute OS Type
func (o AmlComputeInvokeResponsePropertiesPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeInvokeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
func (o AmlComputeInvokeResponsePropertiesPtrOutput) RemoteLoginPortPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeInvokeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.RemoteLoginPortPublicAccess
	}).(pulumi.StringPtrOutput)
}

// Scale settings for AML Compute
func (o AmlComputeInvokeResponsePropertiesPtrOutput) ScaleSettings() ScaleSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputeInvokeResponseProperties) *ScaleSettingsInvokeResponse {
		if v == nil {
			return nil
		}
		return v.ScaleSettings
	}).(ScaleSettingsInvokeResponsePtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o AmlComputeInvokeResponsePropertiesPtrOutput) Subnet() ResourceIdInvokeResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputeInvokeResponseProperties) *ResourceIdInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(ResourceIdInvokeResponsePtrOutput)
}

// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
func (o AmlComputeInvokeResponsePropertiesPtrOutput) TargetNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AmlComputeInvokeResponseProperties) *int {
		if v == nil {
			return nil
		}
		return &v.TargetNodeCount
	}).(pulumi.IntPtrOutput)
}

// Credentials for an administrator user account that will be created on each compute node.
func (o AmlComputeInvokeResponsePropertiesPtrOutput) UserAccountCredentials() UserAccountCredentialsInvokeResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputeInvokeResponseProperties) *UserAccountCredentialsInvokeResponse {
		if v == nil {
			return nil
		}
		return v.UserAccountCredentials
	}).(UserAccountCredentialsInvokeResponsePtrOutput)
}

// Virtual Machine image for AML Compute - windows only
func (o AmlComputeInvokeResponsePropertiesPtrOutput) VirtualMachineImage() VirtualMachineImageInvokeResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputeInvokeResponseProperties) *VirtualMachineImageInvokeResponse {
		if v == nil {
			return nil
		}
		return v.VirtualMachineImage
	}).(VirtualMachineImageInvokeResponsePtrOutput)
}

// Virtual Machine priority
func (o AmlComputeInvokeResponsePropertiesPtrOutput) VmPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeInvokeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VmPriority
	}).(pulumi.StringPtrOutput)
}

// Virtual Machine Size
func (o AmlComputeInvokeResponsePropertiesPtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeInvokeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// Compute node information related to a AmlCompute.
type AmlComputeNodeInformationInvokeResponse struct {
	// ID of the compute node.
	NodeId string `pulumi:"nodeId"`
	// State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted.
	NodeState string `pulumi:"nodeState"`
	// SSH port number of the node.
	Port float64 `pulumi:"port"`
	// Private IP address of the compute node.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// Public IP address of the compute node.
	PublicIpAddress string `pulumi:"publicIpAddress"`
	// ID of the Experiment running on the node, if any else null.
	RunId string `pulumi:"runId"`
}

// AmlComputeNodeInformationInvokeResponseInput is an input type that accepts AmlComputeNodeInformationInvokeResponseArgs and AmlComputeNodeInformationInvokeResponseOutput values.
// You can construct a concrete instance of `AmlComputeNodeInformationInvokeResponseInput` via:
//
//          AmlComputeNodeInformationInvokeResponseArgs{...}
type AmlComputeNodeInformationInvokeResponseInput interface {
	pulumi.Input

	ToAmlComputeNodeInformationInvokeResponseOutput() AmlComputeNodeInformationInvokeResponseOutput
	ToAmlComputeNodeInformationInvokeResponseOutputWithContext(context.Context) AmlComputeNodeInformationInvokeResponseOutput
}

// Compute node information related to a AmlCompute.
type AmlComputeNodeInformationInvokeResponseArgs struct {
	// ID of the compute node.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted.
	NodeState pulumi.StringInput `pulumi:"nodeState"`
	// SSH port number of the node.
	Port pulumi.Float64Input `pulumi:"port"`
	// Private IP address of the compute node.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// Public IP address of the compute node.
	PublicIpAddress pulumi.StringInput `pulumi:"publicIpAddress"`
	// ID of the Experiment running on the node, if any else null.
	RunId pulumi.StringInput `pulumi:"runId"`
}

func (AmlComputeNodeInformationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeNodeInformationInvokeResponse)(nil)).Elem()
}

func (i AmlComputeNodeInformationInvokeResponseArgs) ToAmlComputeNodeInformationInvokeResponseOutput() AmlComputeNodeInformationInvokeResponseOutput {
	return i.ToAmlComputeNodeInformationInvokeResponseOutputWithContext(context.Background())
}

func (i AmlComputeNodeInformationInvokeResponseArgs) ToAmlComputeNodeInformationInvokeResponseOutputWithContext(ctx context.Context) AmlComputeNodeInformationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeNodeInformationInvokeResponseOutput)
}

// AmlComputeNodeInformationInvokeResponseArrayInput is an input type that accepts AmlComputeNodeInformationInvokeResponseArray and AmlComputeNodeInformationInvokeResponseArrayOutput values.
// You can construct a concrete instance of `AmlComputeNodeInformationInvokeResponseArrayInput` via:
//
//          AmlComputeNodeInformationInvokeResponseArray{ AmlComputeNodeInformationInvokeResponseArgs{...} }
type AmlComputeNodeInformationInvokeResponseArrayInput interface {
	pulumi.Input

	ToAmlComputeNodeInformationInvokeResponseArrayOutput() AmlComputeNodeInformationInvokeResponseArrayOutput
	ToAmlComputeNodeInformationInvokeResponseArrayOutputWithContext(context.Context) AmlComputeNodeInformationInvokeResponseArrayOutput
}

type AmlComputeNodeInformationInvokeResponseArray []AmlComputeNodeInformationInvokeResponseInput

func (AmlComputeNodeInformationInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmlComputeNodeInformationInvokeResponse)(nil)).Elem()
}

func (i AmlComputeNodeInformationInvokeResponseArray) ToAmlComputeNodeInformationInvokeResponseArrayOutput() AmlComputeNodeInformationInvokeResponseArrayOutput {
	return i.ToAmlComputeNodeInformationInvokeResponseArrayOutputWithContext(context.Background())
}

func (i AmlComputeNodeInformationInvokeResponseArray) ToAmlComputeNodeInformationInvokeResponseArrayOutputWithContext(ctx context.Context) AmlComputeNodeInformationInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeNodeInformationInvokeResponseArrayOutput)
}

// Compute node information related to a AmlCompute.
type AmlComputeNodeInformationInvokeResponseOutput struct{ *pulumi.OutputState }

func (AmlComputeNodeInformationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeNodeInformationInvokeResponse)(nil)).Elem()
}

func (o AmlComputeNodeInformationInvokeResponseOutput) ToAmlComputeNodeInformationInvokeResponseOutput() AmlComputeNodeInformationInvokeResponseOutput {
	return o
}

func (o AmlComputeNodeInformationInvokeResponseOutput) ToAmlComputeNodeInformationInvokeResponseOutputWithContext(ctx context.Context) AmlComputeNodeInformationInvokeResponseOutput {
	return o
}

// ID of the compute node.
func (o AmlComputeNodeInformationInvokeResponseOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeNodeInformationInvokeResponse) string { return v.NodeId }).(pulumi.StringOutput)
}

// State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted.
func (o AmlComputeNodeInformationInvokeResponseOutput) NodeState() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeNodeInformationInvokeResponse) string { return v.NodeState }).(pulumi.StringOutput)
}

// SSH port number of the node.
func (o AmlComputeNodeInformationInvokeResponseOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v AmlComputeNodeInformationInvokeResponse) float64 { return v.Port }).(pulumi.Float64Output)
}

// Private IP address of the compute node.
func (o AmlComputeNodeInformationInvokeResponseOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeNodeInformationInvokeResponse) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// Public IP address of the compute node.
func (o AmlComputeNodeInformationInvokeResponseOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeNodeInformationInvokeResponse) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

// ID of the Experiment running on the node, if any else null.
func (o AmlComputeNodeInformationInvokeResponseOutput) RunId() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeNodeInformationInvokeResponse) string { return v.RunId }).(pulumi.StringOutput)
}

type AmlComputeNodeInformationInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (AmlComputeNodeInformationInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmlComputeNodeInformationInvokeResponse)(nil)).Elem()
}

func (o AmlComputeNodeInformationInvokeResponseArrayOutput) ToAmlComputeNodeInformationInvokeResponseArrayOutput() AmlComputeNodeInformationInvokeResponseArrayOutput {
	return o
}

func (o AmlComputeNodeInformationInvokeResponseArrayOutput) ToAmlComputeNodeInformationInvokeResponseArrayOutputWithContext(ctx context.Context) AmlComputeNodeInformationInvokeResponseArrayOutput {
	return o
}

func (o AmlComputeNodeInformationInvokeResponseArrayOutput) Index(i pulumi.IntInput) AmlComputeNodeInformationInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmlComputeNodeInformationInvokeResponse {
		return vs[0].([]AmlComputeNodeInformationInvokeResponse)[vs[1].(int)]
	}).(AmlComputeNodeInformationInvokeResponseOutput)
}

// AML Compute properties
type AmlComputeProperties struct {
	// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
	EnableNodePublicIp *bool `pulumi:"enableNodePublicIp"`
	// Network is isolated or not
	IsolatedNetwork *bool `pulumi:"isolatedNetwork"`
	// Compute OS Type
	OsType *string `pulumi:"osType"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
	RemoteLoginPortPublicAccess *string `pulumi:"remoteLoginPortPublicAccess"`
	// Scale settings for AML Compute
	ScaleSettings *ScaleSettings `pulumi:"scaleSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet *ResourceId `pulumi:"subnet"`
	// Credentials for an administrator user account that will be created on each compute node.
	UserAccountCredentials *UserAccountCredentials `pulumi:"userAccountCredentials"`
	// Virtual Machine image for AML Compute - windows only
	VirtualMachineImage *VirtualMachineImage `pulumi:"virtualMachineImage"`
	// Virtual Machine priority
	VmPriority *string `pulumi:"vmPriority"`
	// Virtual Machine Size
	VmSize *string `pulumi:"vmSize"`
}

// AmlComputePropertiesInput is an input type that accepts AmlComputePropertiesArgs and AmlComputePropertiesOutput values.
// You can construct a concrete instance of `AmlComputePropertiesInput` via:
//
//          AmlComputePropertiesArgs{...}
type AmlComputePropertiesInput interface {
	pulumi.Input

	ToAmlComputePropertiesOutput() AmlComputePropertiesOutput
	ToAmlComputePropertiesOutputWithContext(context.Context) AmlComputePropertiesOutput
}

// AML Compute properties
type AmlComputePropertiesArgs struct {
	// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
	EnableNodePublicIp pulumi.BoolPtrInput `pulumi:"enableNodePublicIp"`
	// Network is isolated or not
	IsolatedNetwork pulumi.BoolPtrInput `pulumi:"isolatedNetwork"`
	// Compute OS Type
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
	RemoteLoginPortPublicAccess pulumi.StringPtrInput `pulumi:"remoteLoginPortPublicAccess"`
	// Scale settings for AML Compute
	ScaleSettings ScaleSettingsPtrInput `pulumi:"scaleSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet ResourceIdPtrInput `pulumi:"subnet"`
	// Credentials for an administrator user account that will be created on each compute node.
	UserAccountCredentials UserAccountCredentialsPtrInput `pulumi:"userAccountCredentials"`
	// Virtual Machine image for AML Compute - windows only
	VirtualMachineImage VirtualMachineImagePtrInput `pulumi:"virtualMachineImage"`
	// Virtual Machine priority
	VmPriority pulumi.StringPtrInput `pulumi:"vmPriority"`
	// Virtual Machine Size
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (AmlComputePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeProperties)(nil)).Elem()
}

func (i AmlComputePropertiesArgs) ToAmlComputePropertiesOutput() AmlComputePropertiesOutput {
	return i.ToAmlComputePropertiesOutputWithContext(context.Background())
}

func (i AmlComputePropertiesArgs) ToAmlComputePropertiesOutputWithContext(ctx context.Context) AmlComputePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputePropertiesOutput)
}

func (i AmlComputePropertiesArgs) ToAmlComputePropertiesPtrOutput() AmlComputePropertiesPtrOutput {
	return i.ToAmlComputePropertiesPtrOutputWithContext(context.Background())
}

func (i AmlComputePropertiesArgs) ToAmlComputePropertiesPtrOutputWithContext(ctx context.Context) AmlComputePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputePropertiesOutput).ToAmlComputePropertiesPtrOutputWithContext(ctx)
}

// AmlComputePropertiesPtrInput is an input type that accepts AmlComputePropertiesArgs, AmlComputePropertiesPtr and AmlComputePropertiesPtrOutput values.
// You can construct a concrete instance of `AmlComputePropertiesPtrInput` via:
//
//          AmlComputePropertiesArgs{...}
//
//  or:
//
//          nil
type AmlComputePropertiesPtrInput interface {
	pulumi.Input

	ToAmlComputePropertiesPtrOutput() AmlComputePropertiesPtrOutput
	ToAmlComputePropertiesPtrOutputWithContext(context.Context) AmlComputePropertiesPtrOutput
}

type amlComputePropertiesPtrType AmlComputePropertiesArgs

func AmlComputePropertiesPtr(v *AmlComputePropertiesArgs) AmlComputePropertiesPtrInput {
	return (*amlComputePropertiesPtrType)(v)
}

func (*amlComputePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlComputeProperties)(nil)).Elem()
}

func (i *amlComputePropertiesPtrType) ToAmlComputePropertiesPtrOutput() AmlComputePropertiesPtrOutput {
	return i.ToAmlComputePropertiesPtrOutputWithContext(context.Background())
}

func (i *amlComputePropertiesPtrType) ToAmlComputePropertiesPtrOutputWithContext(ctx context.Context) AmlComputePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputePropertiesPtrOutput)
}

// AML Compute properties
type AmlComputePropertiesOutput struct{ *pulumi.OutputState }

func (AmlComputePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeProperties)(nil)).Elem()
}

func (o AmlComputePropertiesOutput) ToAmlComputePropertiesOutput() AmlComputePropertiesOutput {
	return o
}

func (o AmlComputePropertiesOutput) ToAmlComputePropertiesOutputWithContext(ctx context.Context) AmlComputePropertiesOutput {
	return o
}

func (o AmlComputePropertiesOutput) ToAmlComputePropertiesPtrOutput() AmlComputePropertiesPtrOutput {
	return o.ToAmlComputePropertiesPtrOutputWithContext(context.Background())
}

func (o AmlComputePropertiesOutput) ToAmlComputePropertiesPtrOutputWithContext(ctx context.Context) AmlComputePropertiesPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *AmlComputeProperties {
		return &v
	}).(AmlComputePropertiesPtrOutput)
}

// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
func (o AmlComputePropertiesOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *bool { return v.EnableNodePublicIp }).(pulumi.BoolPtrOutput)
}

// Network is isolated or not
func (o AmlComputePropertiesOutput) IsolatedNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *bool { return v.IsolatedNetwork }).(pulumi.BoolPtrOutput)
}

// Compute OS Type
func (o AmlComputePropertiesOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
func (o AmlComputePropertiesOutput) RemoteLoginPortPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *string { return v.RemoteLoginPortPublicAccess }).(pulumi.StringPtrOutput)
}

// Scale settings for AML Compute
func (o AmlComputePropertiesOutput) ScaleSettings() ScaleSettingsPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *ScaleSettings { return v.ScaleSettings }).(ScaleSettingsPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o AmlComputePropertiesOutput) Subnet() ResourceIdPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *ResourceId { return v.Subnet }).(ResourceIdPtrOutput)
}

// Credentials for an administrator user account that will be created on each compute node.
func (o AmlComputePropertiesOutput) UserAccountCredentials() UserAccountCredentialsPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *UserAccountCredentials { return v.UserAccountCredentials }).(UserAccountCredentialsPtrOutput)
}

// Virtual Machine image for AML Compute - windows only
func (o AmlComputePropertiesOutput) VirtualMachineImage() VirtualMachineImagePtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *VirtualMachineImage { return v.VirtualMachineImage }).(VirtualMachineImagePtrOutput)
}

// Virtual Machine priority
func (o AmlComputePropertiesOutput) VmPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *string { return v.VmPriority }).(pulumi.StringPtrOutput)
}

// Virtual Machine Size
func (o AmlComputePropertiesOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeProperties) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type AmlComputePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AmlComputePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlComputeProperties)(nil)).Elem()
}

func (o AmlComputePropertiesPtrOutput) ToAmlComputePropertiesPtrOutput() AmlComputePropertiesPtrOutput {
	return o
}

func (o AmlComputePropertiesPtrOutput) ToAmlComputePropertiesPtrOutputWithContext(ctx context.Context) AmlComputePropertiesPtrOutput {
	return o
}

func (o AmlComputePropertiesPtrOutput) Elem() AmlComputePropertiesOutput {
	return o.ApplyT(func(v *AmlComputeProperties) AmlComputeProperties { return *v }).(AmlComputePropertiesOutput)
}

// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
func (o AmlComputePropertiesPtrOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNodePublicIp
	}).(pulumi.BoolPtrOutput)
}

// Network is isolated or not
func (o AmlComputePropertiesPtrOutput) IsolatedNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsolatedNetwork
	}).(pulumi.BoolPtrOutput)
}

// Compute OS Type
func (o AmlComputePropertiesPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
func (o AmlComputePropertiesPtrOutput) RemoteLoginPortPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *string {
		if v == nil {
			return nil
		}
		return v.RemoteLoginPortPublicAccess
	}).(pulumi.StringPtrOutput)
}

// Scale settings for AML Compute
func (o AmlComputePropertiesPtrOutput) ScaleSettings() ScaleSettingsPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *ScaleSettings {
		if v == nil {
			return nil
		}
		return v.ScaleSettings
	}).(ScaleSettingsPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o AmlComputePropertiesPtrOutput) Subnet() ResourceIdPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *ResourceId {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(ResourceIdPtrOutput)
}

// Credentials for an administrator user account that will be created on each compute node.
func (o AmlComputePropertiesPtrOutput) UserAccountCredentials() UserAccountCredentialsPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *UserAccountCredentials {
		if v == nil {
			return nil
		}
		return v.UserAccountCredentials
	}).(UserAccountCredentialsPtrOutput)
}

// Virtual Machine image for AML Compute - windows only
func (o AmlComputePropertiesPtrOutput) VirtualMachineImage() VirtualMachineImagePtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *VirtualMachineImage {
		if v == nil {
			return nil
		}
		return v.VirtualMachineImage
	}).(VirtualMachineImagePtrOutput)
}

// Virtual Machine priority
func (o AmlComputePropertiesPtrOutput) VmPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *string {
		if v == nil {
			return nil
		}
		return v.VmPriority
	}).(pulumi.StringPtrOutput)
}

// Virtual Machine Size
func (o AmlComputePropertiesPtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeProperties) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// An Azure Machine Learning compute.
type AmlComputeResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AmlCompute'.
	ComputeType string `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// AML Compute properties
	Properties *AmlComputeResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// AmlComputeResponseInput is an input type that accepts AmlComputeResponseArgs and AmlComputeResponseOutput values.
// You can construct a concrete instance of `AmlComputeResponseInput` via:
//
//          AmlComputeResponseArgs{...}
type AmlComputeResponseInput interface {
	pulumi.Input

	ToAmlComputeResponseOutput() AmlComputeResponseOutput
	ToAmlComputeResponseOutputWithContext(context.Context) AmlComputeResponseOutput
}

// An Azure Machine Learning compute.
type AmlComputeResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'AmlCompute'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn pulumi.StringInput `pulumi:"modifiedOn"`
	// AML Compute properties
	Properties AmlComputeResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (AmlComputeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeResponse)(nil)).Elem()
}

func (i AmlComputeResponseArgs) ToAmlComputeResponseOutput() AmlComputeResponseOutput {
	return i.ToAmlComputeResponseOutputWithContext(context.Background())
}

func (i AmlComputeResponseArgs) ToAmlComputeResponseOutputWithContext(ctx context.Context) AmlComputeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeResponseOutput)
}

// An Azure Machine Learning compute.
type AmlComputeResponseOutput struct{ *pulumi.OutputState }

func (AmlComputeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeResponse)(nil)).Elem()
}

func (o AmlComputeResponseOutput) ToAmlComputeResponseOutput() AmlComputeResponseOutput {
	return o
}

func (o AmlComputeResponseOutput) ToAmlComputeResponseOutputWithContext(ctx context.Context) AmlComputeResponseOutput {
	return o
}

// Location for the underlying compute
func (o AmlComputeResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'AmlCompute'.
func (o AmlComputeResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The date and time when the compute was created.
func (o AmlComputeResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o AmlComputeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o AmlComputeResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v AmlComputeResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The date and time when the compute was last modified.
func (o AmlComputeResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// AML Compute properties
func (o AmlComputeResponseOutput) Properties() AmlComputeResponsePropertiesPtrOutput {
	return o.ApplyT(func(v AmlComputeResponse) *AmlComputeResponseProperties { return v.Properties }).(AmlComputeResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o AmlComputeResponseOutput) ProvisioningErrors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v AmlComputeResponse) []MachineLearningServiceErrorResponse { return v.ProvisioningErrors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o AmlComputeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o AmlComputeResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// AML Compute properties
type AmlComputeResponseProperties struct {
	// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
	AllocationState string `pulumi:"allocationState"`
	// The time at which the compute entered its current allocation state.
	AllocationStateTransitionTime string `pulumi:"allocationStateTransitionTime"`
	// The number of compute nodes currently assigned to the compute.
	CurrentNodeCount int `pulumi:"currentNodeCount"`
	// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
	EnableNodePublicIp *bool `pulumi:"enableNodePublicIp"`
	// Collection of errors encountered by various compute nodes during node setup.
	Errors []MachineLearningServiceErrorResponse `pulumi:"errors"`
	// Network is isolated or not
	IsolatedNetwork *bool `pulumi:"isolatedNetwork"`
	// Counts of various node states on the compute.
	NodeStateCounts NodeStateCountsResponse `pulumi:"nodeStateCounts"`
	// Compute OS Type
	OsType *string `pulumi:"osType"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
	RemoteLoginPortPublicAccess *string `pulumi:"remoteLoginPortPublicAccess"`
	// Scale settings for AML Compute
	ScaleSettings *ScaleSettingsResponse `pulumi:"scaleSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet *ResourceIdResponse `pulumi:"subnet"`
	// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
	TargetNodeCount int `pulumi:"targetNodeCount"`
	// Credentials for an administrator user account that will be created on each compute node.
	UserAccountCredentials *UserAccountCredentialsResponse `pulumi:"userAccountCredentials"`
	// Virtual Machine image for AML Compute - windows only
	VirtualMachineImage *VirtualMachineImageResponse `pulumi:"virtualMachineImage"`
	// Virtual Machine priority
	VmPriority *string `pulumi:"vmPriority"`
	// Virtual Machine Size
	VmSize *string `pulumi:"vmSize"`
}

// AmlComputeResponsePropertiesInput is an input type that accepts AmlComputeResponsePropertiesArgs and AmlComputeResponsePropertiesOutput values.
// You can construct a concrete instance of `AmlComputeResponsePropertiesInput` via:
//
//          AmlComputeResponsePropertiesArgs{...}
type AmlComputeResponsePropertiesInput interface {
	pulumi.Input

	ToAmlComputeResponsePropertiesOutput() AmlComputeResponsePropertiesOutput
	ToAmlComputeResponsePropertiesOutputWithContext(context.Context) AmlComputeResponsePropertiesOutput
}

// AML Compute properties
type AmlComputeResponsePropertiesArgs struct {
	// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
	AllocationState pulumi.StringInput `pulumi:"allocationState"`
	// The time at which the compute entered its current allocation state.
	AllocationStateTransitionTime pulumi.StringInput `pulumi:"allocationStateTransitionTime"`
	// The number of compute nodes currently assigned to the compute.
	CurrentNodeCount pulumi.IntInput `pulumi:"currentNodeCount"`
	// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
	EnableNodePublicIp pulumi.BoolPtrInput `pulumi:"enableNodePublicIp"`
	// Collection of errors encountered by various compute nodes during node setup.
	Errors MachineLearningServiceErrorResponseArrayInput `pulumi:"errors"`
	// Network is isolated or not
	IsolatedNetwork pulumi.BoolPtrInput `pulumi:"isolatedNetwork"`
	// Counts of various node states on the compute.
	NodeStateCounts NodeStateCountsResponseInput `pulumi:"nodeStateCounts"`
	// Compute OS Type
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
	RemoteLoginPortPublicAccess pulumi.StringPtrInput `pulumi:"remoteLoginPortPublicAccess"`
	// Scale settings for AML Compute
	ScaleSettings ScaleSettingsResponsePtrInput `pulumi:"scaleSettings"`
	// Virtual network subnet resource ID the compute nodes belong to.
	Subnet ResourceIdResponsePtrInput `pulumi:"subnet"`
	// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
	TargetNodeCount pulumi.IntInput `pulumi:"targetNodeCount"`
	// Credentials for an administrator user account that will be created on each compute node.
	UserAccountCredentials UserAccountCredentialsResponsePtrInput `pulumi:"userAccountCredentials"`
	// Virtual Machine image for AML Compute - windows only
	VirtualMachineImage VirtualMachineImageResponsePtrInput `pulumi:"virtualMachineImage"`
	// Virtual Machine priority
	VmPriority pulumi.StringPtrInput `pulumi:"vmPriority"`
	// Virtual Machine Size
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (AmlComputeResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeResponseProperties)(nil)).Elem()
}

func (i AmlComputeResponsePropertiesArgs) ToAmlComputeResponsePropertiesOutput() AmlComputeResponsePropertiesOutput {
	return i.ToAmlComputeResponsePropertiesOutputWithContext(context.Background())
}

func (i AmlComputeResponsePropertiesArgs) ToAmlComputeResponsePropertiesOutputWithContext(ctx context.Context) AmlComputeResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeResponsePropertiesOutput)
}

func (i AmlComputeResponsePropertiesArgs) ToAmlComputeResponsePropertiesPtrOutput() AmlComputeResponsePropertiesPtrOutput {
	return i.ToAmlComputeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i AmlComputeResponsePropertiesArgs) ToAmlComputeResponsePropertiesPtrOutputWithContext(ctx context.Context) AmlComputeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeResponsePropertiesOutput).ToAmlComputeResponsePropertiesPtrOutputWithContext(ctx)
}

// AmlComputeResponsePropertiesPtrInput is an input type that accepts AmlComputeResponsePropertiesArgs, AmlComputeResponsePropertiesPtr and AmlComputeResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `AmlComputeResponsePropertiesPtrInput` via:
//
//          AmlComputeResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type AmlComputeResponsePropertiesPtrInput interface {
	pulumi.Input

	ToAmlComputeResponsePropertiesPtrOutput() AmlComputeResponsePropertiesPtrOutput
	ToAmlComputeResponsePropertiesPtrOutputWithContext(context.Context) AmlComputeResponsePropertiesPtrOutput
}

type amlComputeResponsePropertiesPtrType AmlComputeResponsePropertiesArgs

func AmlComputeResponsePropertiesPtr(v *AmlComputeResponsePropertiesArgs) AmlComputeResponsePropertiesPtrInput {
	return (*amlComputeResponsePropertiesPtrType)(v)
}

func (*amlComputeResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlComputeResponseProperties)(nil)).Elem()
}

func (i *amlComputeResponsePropertiesPtrType) ToAmlComputeResponsePropertiesPtrOutput() AmlComputeResponsePropertiesPtrOutput {
	return i.ToAmlComputeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *amlComputeResponsePropertiesPtrType) ToAmlComputeResponsePropertiesPtrOutputWithContext(ctx context.Context) AmlComputeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlComputeResponsePropertiesPtrOutput)
}

// AML Compute properties
type AmlComputeResponsePropertiesOutput struct{ *pulumi.OutputState }

func (AmlComputeResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlComputeResponseProperties)(nil)).Elem()
}

func (o AmlComputeResponsePropertiesOutput) ToAmlComputeResponsePropertiesOutput() AmlComputeResponsePropertiesOutput {
	return o
}

func (o AmlComputeResponsePropertiesOutput) ToAmlComputeResponsePropertiesOutputWithContext(ctx context.Context) AmlComputeResponsePropertiesOutput {
	return o
}

func (o AmlComputeResponsePropertiesOutput) ToAmlComputeResponsePropertiesPtrOutput() AmlComputeResponsePropertiesPtrOutput {
	return o.ToAmlComputeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o AmlComputeResponsePropertiesOutput) ToAmlComputeResponsePropertiesPtrOutputWithContext(ctx context.Context) AmlComputeResponsePropertiesPtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *AmlComputeResponseProperties {
		return &v
	}).(AmlComputeResponsePropertiesPtrOutput)
}

// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
func (o AmlComputeResponsePropertiesOutput) AllocationState() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) string { return v.AllocationState }).(pulumi.StringOutput)
}

// The time at which the compute entered its current allocation state.
func (o AmlComputeResponsePropertiesOutput) AllocationStateTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) string { return v.AllocationStateTransitionTime }).(pulumi.StringOutput)
}

// The number of compute nodes currently assigned to the compute.
func (o AmlComputeResponsePropertiesOutput) CurrentNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) int { return v.CurrentNodeCount }).(pulumi.IntOutput)
}

// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
func (o AmlComputeResponsePropertiesOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *bool { return v.EnableNodePublicIp }).(pulumi.BoolPtrOutput)
}

// Collection of errors encountered by various compute nodes during node setup.
func (o AmlComputeResponsePropertiesOutput) Errors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) []MachineLearningServiceErrorResponse { return v.Errors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// Network is isolated or not
func (o AmlComputeResponsePropertiesOutput) IsolatedNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *bool { return v.IsolatedNetwork }).(pulumi.BoolPtrOutput)
}

// Counts of various node states on the compute.
func (o AmlComputeResponsePropertiesOutput) NodeStateCounts() NodeStateCountsResponseOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) NodeStateCountsResponse { return v.NodeStateCounts }).(NodeStateCountsResponseOutput)
}

// Compute OS Type
func (o AmlComputeResponsePropertiesOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
func (o AmlComputeResponsePropertiesOutput) RemoteLoginPortPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *string { return v.RemoteLoginPortPublicAccess }).(pulumi.StringPtrOutput)
}

// Scale settings for AML Compute
func (o AmlComputeResponsePropertiesOutput) ScaleSettings() ScaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *ScaleSettingsResponse { return v.ScaleSettings }).(ScaleSettingsResponsePtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o AmlComputeResponsePropertiesOutput) Subnet() ResourceIdResponsePtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *ResourceIdResponse { return v.Subnet }).(ResourceIdResponsePtrOutput)
}

// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
func (o AmlComputeResponsePropertiesOutput) TargetNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) int { return v.TargetNodeCount }).(pulumi.IntOutput)
}

// Credentials for an administrator user account that will be created on each compute node.
func (o AmlComputeResponsePropertiesOutput) UserAccountCredentials() UserAccountCredentialsResponsePtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *UserAccountCredentialsResponse { return v.UserAccountCredentials }).(UserAccountCredentialsResponsePtrOutput)
}

// Virtual Machine image for AML Compute - windows only
func (o AmlComputeResponsePropertiesOutput) VirtualMachineImage() VirtualMachineImageResponsePtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *VirtualMachineImageResponse { return v.VirtualMachineImage }).(VirtualMachineImageResponsePtrOutput)
}

// Virtual Machine priority
func (o AmlComputeResponsePropertiesOutput) VmPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *string { return v.VmPriority }).(pulumi.StringPtrOutput)
}

// Virtual Machine Size
func (o AmlComputeResponsePropertiesOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmlComputeResponseProperties) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type AmlComputeResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AmlComputeResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlComputeResponseProperties)(nil)).Elem()
}

func (o AmlComputeResponsePropertiesPtrOutput) ToAmlComputeResponsePropertiesPtrOutput() AmlComputeResponsePropertiesPtrOutput {
	return o
}

func (o AmlComputeResponsePropertiesPtrOutput) ToAmlComputeResponsePropertiesPtrOutputWithContext(ctx context.Context) AmlComputeResponsePropertiesPtrOutput {
	return o
}

func (o AmlComputeResponsePropertiesPtrOutput) Elem() AmlComputeResponsePropertiesOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) AmlComputeResponseProperties { return *v }).(AmlComputeResponsePropertiesOutput)
}

// Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
func (o AmlComputeResponsePropertiesPtrOutput) AllocationState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AllocationState
	}).(pulumi.StringPtrOutput)
}

// The time at which the compute entered its current allocation state.
func (o AmlComputeResponsePropertiesPtrOutput) AllocationStateTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AllocationStateTransitionTime
	}).(pulumi.StringPtrOutput)
}

// The number of compute nodes currently assigned to the compute.
func (o AmlComputeResponsePropertiesPtrOutput) CurrentNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *int {
		if v == nil {
			return nil
		}
		return &v.CurrentNodeCount
	}).(pulumi.IntPtrOutput)
}

// Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.
func (o AmlComputeResponsePropertiesPtrOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNodePublicIp
	}).(pulumi.BoolPtrOutput)
}

// Collection of errors encountered by various compute nodes during node setup.
func (o AmlComputeResponsePropertiesPtrOutput) Errors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) []MachineLearningServiceErrorResponse {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(MachineLearningServiceErrorResponseArrayOutput)
}

// Network is isolated or not
func (o AmlComputeResponsePropertiesPtrOutput) IsolatedNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsolatedNetwork
	}).(pulumi.BoolPtrOutput)
}

// Counts of various node states on the compute.
func (o AmlComputeResponsePropertiesPtrOutput) NodeStateCounts() NodeStateCountsResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *NodeStateCountsResponse {
		if v == nil {
			return nil
		}
		return &v.NodeStateCounts
	}).(NodeStateCountsResponsePtrOutput)
}

// Compute OS Type
func (o AmlComputeResponsePropertiesPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
func (o AmlComputeResponsePropertiesPtrOutput) RemoteLoginPortPublicAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.RemoteLoginPortPublicAccess
	}).(pulumi.StringPtrOutput)
}

// Scale settings for AML Compute
func (o AmlComputeResponsePropertiesPtrOutput) ScaleSettings() ScaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *ScaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.ScaleSettings
	}).(ScaleSettingsResponsePtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to.
func (o AmlComputeResponsePropertiesPtrOutput) Subnet() ResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *ResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(ResourceIdResponsePtrOutput)
}

// The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
func (o AmlComputeResponsePropertiesPtrOutput) TargetNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *int {
		if v == nil {
			return nil
		}
		return &v.TargetNodeCount
	}).(pulumi.IntPtrOutput)
}

// Credentials for an administrator user account that will be created on each compute node.
func (o AmlComputeResponsePropertiesPtrOutput) UserAccountCredentials() UserAccountCredentialsResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *UserAccountCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.UserAccountCredentials
	}).(UserAccountCredentialsResponsePtrOutput)
}

// Virtual Machine image for AML Compute - windows only
func (o AmlComputeResponsePropertiesPtrOutput) VirtualMachineImage() VirtualMachineImageResponsePtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *VirtualMachineImageResponse {
		if v == nil {
			return nil
		}
		return v.VirtualMachineImage
	}).(VirtualMachineImageResponsePtrOutput)
}

// Virtual Machine priority
func (o AmlComputeResponsePropertiesPtrOutput) VmPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VmPriority
	}).(pulumi.StringPtrOutput)
}

// Virtual Machine Size
func (o AmlComputeResponsePropertiesPtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlComputeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// The resource requirements for the container (cpu and memory).
type ContainerResourceRequirements struct {
	// The number of CPU cores on the container.
	Cpu *float64 `pulumi:"cpu"`
	// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
	Fpga *int `pulumi:"fpga"`
	// The number of GPU cores in the container.
	Gpu *int `pulumi:"gpu"`
	// The amount of memory on the container in GB.
	MemoryInGB *float64 `pulumi:"memoryInGB"`
}

// ContainerResourceRequirementsInput is an input type that accepts ContainerResourceRequirementsArgs and ContainerResourceRequirementsOutput values.
// You can construct a concrete instance of `ContainerResourceRequirementsInput` via:
//
//          ContainerResourceRequirementsArgs{...}
type ContainerResourceRequirementsInput interface {
	pulumi.Input

	ToContainerResourceRequirementsOutput() ContainerResourceRequirementsOutput
	ToContainerResourceRequirementsOutputWithContext(context.Context) ContainerResourceRequirementsOutput
}

// The resource requirements for the container (cpu and memory).
type ContainerResourceRequirementsArgs struct {
	// The number of CPU cores on the container.
	Cpu pulumi.Float64PtrInput `pulumi:"cpu"`
	// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
	Fpga pulumi.IntPtrInput `pulumi:"fpga"`
	// The number of GPU cores in the container.
	Gpu pulumi.IntPtrInput `pulumi:"gpu"`
	// The amount of memory on the container in GB.
	MemoryInGB pulumi.Float64PtrInput `pulumi:"memoryInGB"`
}

func (ContainerResourceRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResourceRequirements)(nil)).Elem()
}

func (i ContainerResourceRequirementsArgs) ToContainerResourceRequirementsOutput() ContainerResourceRequirementsOutput {
	return i.ToContainerResourceRequirementsOutputWithContext(context.Background())
}

func (i ContainerResourceRequirementsArgs) ToContainerResourceRequirementsOutputWithContext(ctx context.Context) ContainerResourceRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsOutput)
}

func (i ContainerResourceRequirementsArgs) ToContainerResourceRequirementsPtrOutput() ContainerResourceRequirementsPtrOutput {
	return i.ToContainerResourceRequirementsPtrOutputWithContext(context.Background())
}

func (i ContainerResourceRequirementsArgs) ToContainerResourceRequirementsPtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsOutput).ToContainerResourceRequirementsPtrOutputWithContext(ctx)
}

// ContainerResourceRequirementsPtrInput is an input type that accepts ContainerResourceRequirementsArgs, ContainerResourceRequirementsPtr and ContainerResourceRequirementsPtrOutput values.
// You can construct a concrete instance of `ContainerResourceRequirementsPtrInput` via:
//
//          ContainerResourceRequirementsArgs{...}
//
//  or:
//
//          nil
type ContainerResourceRequirementsPtrInput interface {
	pulumi.Input

	ToContainerResourceRequirementsPtrOutput() ContainerResourceRequirementsPtrOutput
	ToContainerResourceRequirementsPtrOutputWithContext(context.Context) ContainerResourceRequirementsPtrOutput
}

type containerResourceRequirementsPtrType ContainerResourceRequirementsArgs

func ContainerResourceRequirementsPtr(v *ContainerResourceRequirementsArgs) ContainerResourceRequirementsPtrInput {
	return (*containerResourceRequirementsPtrType)(v)
}

func (*containerResourceRequirementsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResourceRequirements)(nil)).Elem()
}

func (i *containerResourceRequirementsPtrType) ToContainerResourceRequirementsPtrOutput() ContainerResourceRequirementsPtrOutput {
	return i.ToContainerResourceRequirementsPtrOutputWithContext(context.Background())
}

func (i *containerResourceRequirementsPtrType) ToContainerResourceRequirementsPtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsPtrOutput)
}

// The resource requirements for the container (cpu and memory).
type ContainerResourceRequirementsOutput struct{ *pulumi.OutputState }

func (ContainerResourceRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResourceRequirements)(nil)).Elem()
}

func (o ContainerResourceRequirementsOutput) ToContainerResourceRequirementsOutput() ContainerResourceRequirementsOutput {
	return o
}

func (o ContainerResourceRequirementsOutput) ToContainerResourceRequirementsOutputWithContext(ctx context.Context) ContainerResourceRequirementsOutput {
	return o
}

func (o ContainerResourceRequirementsOutput) ToContainerResourceRequirementsPtrOutput() ContainerResourceRequirementsPtrOutput {
	return o.ToContainerResourceRequirementsPtrOutputWithContext(context.Background())
}

func (o ContainerResourceRequirementsOutput) ToContainerResourceRequirementsPtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsPtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirements) *ContainerResourceRequirements {
		return &v
	}).(ContainerResourceRequirementsPtrOutput)
}

// The number of CPU cores on the container.
func (o ContainerResourceRequirementsOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirements) *float64 { return v.Cpu }).(pulumi.Float64PtrOutput)
}

// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
func (o ContainerResourceRequirementsOutput) Fpga() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirements) *int { return v.Fpga }).(pulumi.IntPtrOutput)
}

// The number of GPU cores in the container.
func (o ContainerResourceRequirementsOutput) Gpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirements) *int { return v.Gpu }).(pulumi.IntPtrOutput)
}

// The amount of memory on the container in GB.
func (o ContainerResourceRequirementsOutput) MemoryInGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirements) *float64 { return v.MemoryInGB }).(pulumi.Float64PtrOutput)
}

type ContainerResourceRequirementsPtrOutput struct{ *pulumi.OutputState }

func (ContainerResourceRequirementsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResourceRequirements)(nil)).Elem()
}

func (o ContainerResourceRequirementsPtrOutput) ToContainerResourceRequirementsPtrOutput() ContainerResourceRequirementsPtrOutput {
	return o
}

func (o ContainerResourceRequirementsPtrOutput) ToContainerResourceRequirementsPtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsPtrOutput {
	return o
}

func (o ContainerResourceRequirementsPtrOutput) Elem() ContainerResourceRequirementsOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) ContainerResourceRequirements { return *v }).(ContainerResourceRequirementsOutput)
}

// The number of CPU cores on the container.
func (o ContainerResourceRequirementsPtrOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) *float64 {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.Float64PtrOutput)
}

// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
func (o ContainerResourceRequirementsPtrOutput) Fpga() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) *int {
		if v == nil {
			return nil
		}
		return v.Fpga
	}).(pulumi.IntPtrOutput)
}

// The number of GPU cores in the container.
func (o ContainerResourceRequirementsPtrOutput) Gpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) *int {
		if v == nil {
			return nil
		}
		return v.Gpu
	}).(pulumi.IntPtrOutput)
}

// The amount of memory on the container in GB.
func (o ContainerResourceRequirementsPtrOutput) MemoryInGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) *float64 {
		if v == nil {
			return nil
		}
		return v.MemoryInGB
	}).(pulumi.Float64PtrOutput)
}

// The resource requirements for the container (cpu and memory).
type ContainerResourceRequirementsInvokeResponse struct {
	// The number of CPU cores on the container.
	Cpu *float64 `pulumi:"cpu"`
	// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
	Fpga *int `pulumi:"fpga"`
	// The number of GPU cores in the container.
	Gpu *int `pulumi:"gpu"`
	// The amount of memory on the container in GB.
	MemoryInGB *float64 `pulumi:"memoryInGB"`
}

// ContainerResourceRequirementsInvokeResponseInput is an input type that accepts ContainerResourceRequirementsInvokeResponseArgs and ContainerResourceRequirementsInvokeResponseOutput values.
// You can construct a concrete instance of `ContainerResourceRequirementsInvokeResponseInput` via:
//
//          ContainerResourceRequirementsInvokeResponseArgs{...}
type ContainerResourceRequirementsInvokeResponseInput interface {
	pulumi.Input

	ToContainerResourceRequirementsInvokeResponseOutput() ContainerResourceRequirementsInvokeResponseOutput
	ToContainerResourceRequirementsInvokeResponseOutputWithContext(context.Context) ContainerResourceRequirementsInvokeResponseOutput
}

// The resource requirements for the container (cpu and memory).
type ContainerResourceRequirementsInvokeResponseArgs struct {
	// The number of CPU cores on the container.
	Cpu pulumi.Float64PtrInput `pulumi:"cpu"`
	// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
	Fpga pulumi.IntPtrInput `pulumi:"fpga"`
	// The number of GPU cores in the container.
	Gpu pulumi.IntPtrInput `pulumi:"gpu"`
	// The amount of memory on the container in GB.
	MemoryInGB pulumi.Float64PtrInput `pulumi:"memoryInGB"`
}

func (ContainerResourceRequirementsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResourceRequirementsInvokeResponse)(nil)).Elem()
}

func (i ContainerResourceRequirementsInvokeResponseArgs) ToContainerResourceRequirementsInvokeResponseOutput() ContainerResourceRequirementsInvokeResponseOutput {
	return i.ToContainerResourceRequirementsInvokeResponseOutputWithContext(context.Background())
}

func (i ContainerResourceRequirementsInvokeResponseArgs) ToContainerResourceRequirementsInvokeResponseOutputWithContext(ctx context.Context) ContainerResourceRequirementsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsInvokeResponseOutput)
}

func (i ContainerResourceRequirementsInvokeResponseArgs) ToContainerResourceRequirementsInvokeResponsePtrOutput() ContainerResourceRequirementsInvokeResponsePtrOutput {
	return i.ToContainerResourceRequirementsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ContainerResourceRequirementsInvokeResponseArgs) ToContainerResourceRequirementsInvokeResponsePtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsInvokeResponseOutput).ToContainerResourceRequirementsInvokeResponsePtrOutputWithContext(ctx)
}

// ContainerResourceRequirementsInvokeResponsePtrInput is an input type that accepts ContainerResourceRequirementsInvokeResponseArgs, ContainerResourceRequirementsInvokeResponsePtr and ContainerResourceRequirementsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ContainerResourceRequirementsInvokeResponsePtrInput` via:
//
//          ContainerResourceRequirementsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ContainerResourceRequirementsInvokeResponsePtrInput interface {
	pulumi.Input

	ToContainerResourceRequirementsInvokeResponsePtrOutput() ContainerResourceRequirementsInvokeResponsePtrOutput
	ToContainerResourceRequirementsInvokeResponsePtrOutputWithContext(context.Context) ContainerResourceRequirementsInvokeResponsePtrOutput
}

type containerResourceRequirementsInvokeResponsePtrType ContainerResourceRequirementsInvokeResponseArgs

func ContainerResourceRequirementsInvokeResponsePtr(v *ContainerResourceRequirementsInvokeResponseArgs) ContainerResourceRequirementsInvokeResponsePtrInput {
	return (*containerResourceRequirementsInvokeResponsePtrType)(v)
}

func (*containerResourceRequirementsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResourceRequirementsInvokeResponse)(nil)).Elem()
}

func (i *containerResourceRequirementsInvokeResponsePtrType) ToContainerResourceRequirementsInvokeResponsePtrOutput() ContainerResourceRequirementsInvokeResponsePtrOutput {
	return i.ToContainerResourceRequirementsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *containerResourceRequirementsInvokeResponsePtrType) ToContainerResourceRequirementsInvokeResponsePtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsInvokeResponsePtrOutput)
}

// The resource requirements for the container (cpu and memory).
type ContainerResourceRequirementsInvokeResponseOutput struct{ *pulumi.OutputState }

func (ContainerResourceRequirementsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResourceRequirementsInvokeResponse)(nil)).Elem()
}

func (o ContainerResourceRequirementsInvokeResponseOutput) ToContainerResourceRequirementsInvokeResponseOutput() ContainerResourceRequirementsInvokeResponseOutput {
	return o
}

func (o ContainerResourceRequirementsInvokeResponseOutput) ToContainerResourceRequirementsInvokeResponseOutputWithContext(ctx context.Context) ContainerResourceRequirementsInvokeResponseOutput {
	return o
}

func (o ContainerResourceRequirementsInvokeResponseOutput) ToContainerResourceRequirementsInvokeResponsePtrOutput() ContainerResourceRequirementsInvokeResponsePtrOutput {
	return o.ToContainerResourceRequirementsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ContainerResourceRequirementsInvokeResponseOutput) ToContainerResourceRequirementsInvokeResponsePtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsInvokeResponsePtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsInvokeResponse) *ContainerResourceRequirementsInvokeResponse {
		return &v
	}).(ContainerResourceRequirementsInvokeResponsePtrOutput)
}

// The number of CPU cores on the container.
func (o ContainerResourceRequirementsInvokeResponseOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsInvokeResponse) *float64 { return v.Cpu }).(pulumi.Float64PtrOutput)
}

// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
func (o ContainerResourceRequirementsInvokeResponseOutput) Fpga() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsInvokeResponse) *int { return v.Fpga }).(pulumi.IntPtrOutput)
}

// The number of GPU cores in the container.
func (o ContainerResourceRequirementsInvokeResponseOutput) Gpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsInvokeResponse) *int { return v.Gpu }).(pulumi.IntPtrOutput)
}

// The amount of memory on the container in GB.
func (o ContainerResourceRequirementsInvokeResponseOutput) MemoryInGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsInvokeResponse) *float64 { return v.MemoryInGB }).(pulumi.Float64PtrOutput)
}

type ContainerResourceRequirementsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerResourceRequirementsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResourceRequirementsInvokeResponse)(nil)).Elem()
}

func (o ContainerResourceRequirementsInvokeResponsePtrOutput) ToContainerResourceRequirementsInvokeResponsePtrOutput() ContainerResourceRequirementsInvokeResponsePtrOutput {
	return o
}

func (o ContainerResourceRequirementsInvokeResponsePtrOutput) ToContainerResourceRequirementsInvokeResponsePtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsInvokeResponsePtrOutput {
	return o
}

func (o ContainerResourceRequirementsInvokeResponsePtrOutput) Elem() ContainerResourceRequirementsInvokeResponseOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsInvokeResponse) ContainerResourceRequirementsInvokeResponse {
		return *v
	}).(ContainerResourceRequirementsInvokeResponseOutput)
}

// The number of CPU cores on the container.
func (o ContainerResourceRequirementsInvokeResponsePtrOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsInvokeResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.Float64PtrOutput)
}

// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
func (o ContainerResourceRequirementsInvokeResponsePtrOutput) Fpga() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.Fpga
	}).(pulumi.IntPtrOutput)
}

// The number of GPU cores in the container.
func (o ContainerResourceRequirementsInvokeResponsePtrOutput) Gpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.Gpu
	}).(pulumi.IntPtrOutput)
}

// The amount of memory on the container in GB.
func (o ContainerResourceRequirementsInvokeResponsePtrOutput) MemoryInGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsInvokeResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MemoryInGB
	}).(pulumi.Float64PtrOutput)
}

// The resource requirements for the container (cpu and memory).
type ContainerResourceRequirementsResponse struct {
	// The number of CPU cores on the container.
	Cpu *float64 `pulumi:"cpu"`
	// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
	Fpga *int `pulumi:"fpga"`
	// The number of GPU cores in the container.
	Gpu *int `pulumi:"gpu"`
	// The amount of memory on the container in GB.
	MemoryInGB *float64 `pulumi:"memoryInGB"`
}

// ContainerResourceRequirementsResponseInput is an input type that accepts ContainerResourceRequirementsResponseArgs and ContainerResourceRequirementsResponseOutput values.
// You can construct a concrete instance of `ContainerResourceRequirementsResponseInput` via:
//
//          ContainerResourceRequirementsResponseArgs{...}
type ContainerResourceRequirementsResponseInput interface {
	pulumi.Input

	ToContainerResourceRequirementsResponseOutput() ContainerResourceRequirementsResponseOutput
	ToContainerResourceRequirementsResponseOutputWithContext(context.Context) ContainerResourceRequirementsResponseOutput
}

// The resource requirements for the container (cpu and memory).
type ContainerResourceRequirementsResponseArgs struct {
	// The number of CPU cores on the container.
	Cpu pulumi.Float64PtrInput `pulumi:"cpu"`
	// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
	Fpga pulumi.IntPtrInput `pulumi:"fpga"`
	// The number of GPU cores in the container.
	Gpu pulumi.IntPtrInput `pulumi:"gpu"`
	// The amount of memory on the container in GB.
	MemoryInGB pulumi.Float64PtrInput `pulumi:"memoryInGB"`
}

func (ContainerResourceRequirementsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResourceRequirementsResponse)(nil)).Elem()
}

func (i ContainerResourceRequirementsResponseArgs) ToContainerResourceRequirementsResponseOutput() ContainerResourceRequirementsResponseOutput {
	return i.ToContainerResourceRequirementsResponseOutputWithContext(context.Background())
}

func (i ContainerResourceRequirementsResponseArgs) ToContainerResourceRequirementsResponseOutputWithContext(ctx context.Context) ContainerResourceRequirementsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsResponseOutput)
}

func (i ContainerResourceRequirementsResponseArgs) ToContainerResourceRequirementsResponsePtrOutput() ContainerResourceRequirementsResponsePtrOutput {
	return i.ToContainerResourceRequirementsResponsePtrOutputWithContext(context.Background())
}

func (i ContainerResourceRequirementsResponseArgs) ToContainerResourceRequirementsResponsePtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsResponseOutput).ToContainerResourceRequirementsResponsePtrOutputWithContext(ctx)
}

// ContainerResourceRequirementsResponsePtrInput is an input type that accepts ContainerResourceRequirementsResponseArgs, ContainerResourceRequirementsResponsePtr and ContainerResourceRequirementsResponsePtrOutput values.
// You can construct a concrete instance of `ContainerResourceRequirementsResponsePtrInput` via:
//
//          ContainerResourceRequirementsResponseArgs{...}
//
//  or:
//
//          nil
type ContainerResourceRequirementsResponsePtrInput interface {
	pulumi.Input

	ToContainerResourceRequirementsResponsePtrOutput() ContainerResourceRequirementsResponsePtrOutput
	ToContainerResourceRequirementsResponsePtrOutputWithContext(context.Context) ContainerResourceRequirementsResponsePtrOutput
}

type containerResourceRequirementsResponsePtrType ContainerResourceRequirementsResponseArgs

func ContainerResourceRequirementsResponsePtr(v *ContainerResourceRequirementsResponseArgs) ContainerResourceRequirementsResponsePtrInput {
	return (*containerResourceRequirementsResponsePtrType)(v)
}

func (*containerResourceRequirementsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResourceRequirementsResponse)(nil)).Elem()
}

func (i *containerResourceRequirementsResponsePtrType) ToContainerResourceRequirementsResponsePtrOutput() ContainerResourceRequirementsResponsePtrOutput {
	return i.ToContainerResourceRequirementsResponsePtrOutputWithContext(context.Background())
}

func (i *containerResourceRequirementsResponsePtrType) ToContainerResourceRequirementsResponsePtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsResponsePtrOutput)
}

// The resource requirements for the container (cpu and memory).
type ContainerResourceRequirementsResponseOutput struct{ *pulumi.OutputState }

func (ContainerResourceRequirementsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResourceRequirementsResponse)(nil)).Elem()
}

func (o ContainerResourceRequirementsResponseOutput) ToContainerResourceRequirementsResponseOutput() ContainerResourceRequirementsResponseOutput {
	return o
}

func (o ContainerResourceRequirementsResponseOutput) ToContainerResourceRequirementsResponseOutputWithContext(ctx context.Context) ContainerResourceRequirementsResponseOutput {
	return o
}

func (o ContainerResourceRequirementsResponseOutput) ToContainerResourceRequirementsResponsePtrOutput() ContainerResourceRequirementsResponsePtrOutput {
	return o.ToContainerResourceRequirementsResponsePtrOutputWithContext(context.Background())
}

func (o ContainerResourceRequirementsResponseOutput) ToContainerResourceRequirementsResponsePtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsResponsePtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsResponse) *ContainerResourceRequirementsResponse {
		return &v
	}).(ContainerResourceRequirementsResponsePtrOutput)
}

// The number of CPU cores on the container.
func (o ContainerResourceRequirementsResponseOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsResponse) *float64 { return v.Cpu }).(pulumi.Float64PtrOutput)
}

// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
func (o ContainerResourceRequirementsResponseOutput) Fpga() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsResponse) *int { return v.Fpga }).(pulumi.IntPtrOutput)
}

// The number of GPU cores in the container.
func (o ContainerResourceRequirementsResponseOutput) Gpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsResponse) *int { return v.Gpu }).(pulumi.IntPtrOutput)
}

// The amount of memory on the container in GB.
func (o ContainerResourceRequirementsResponseOutput) MemoryInGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsResponse) *float64 { return v.MemoryInGB }).(pulumi.Float64PtrOutput)
}

type ContainerResourceRequirementsResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerResourceRequirementsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResourceRequirementsResponse)(nil)).Elem()
}

func (o ContainerResourceRequirementsResponsePtrOutput) ToContainerResourceRequirementsResponsePtrOutput() ContainerResourceRequirementsResponsePtrOutput {
	return o
}

func (o ContainerResourceRequirementsResponsePtrOutput) ToContainerResourceRequirementsResponsePtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsResponsePtrOutput {
	return o
}

func (o ContainerResourceRequirementsResponsePtrOutput) Elem() ContainerResourceRequirementsResponseOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) ContainerResourceRequirementsResponse { return *v }).(ContainerResourceRequirementsResponseOutput)
}

// The number of CPU cores on the container.
func (o ContainerResourceRequirementsResponsePtrOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.Float64PtrOutput)
}

// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
func (o ContainerResourceRequirementsResponsePtrOutput) Fpga() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Fpga
	}).(pulumi.IntPtrOutput)
}

// The number of GPU cores in the container.
func (o ContainerResourceRequirementsResponsePtrOutput) Gpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Gpu
	}).(pulumi.IntPtrOutput)
}

// The amount of memory on the container in GB.
func (o ContainerResourceRequirementsResponsePtrOutput) MemoryInGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MemoryInGB
	}).(pulumi.Float64PtrOutput)
}

// The Environment, models and assets needed for inferencing.
type CreateServiceRequestEnvironmentImageRequest struct {
	// The list of assets.
	Assets []ImageAsset `pulumi:"assets"`
	// The name of the driver file.
	DriverProgram *string `pulumi:"driverProgram"`
	// The details of the AZURE ML environment.
	Environment *EnvironmentImageRequestEnvironment `pulumi:"environment"`
	// The unique identifying details of the AZURE ML environment.
	EnvironmentReference *EnvironmentImageRequestEnvironmentReference `pulumi:"environmentReference"`
	// The list of model Ids.
	ModelIds []string `pulumi:"modelIds"`
	// The list of models.
	Models []Model `pulumi:"models"`
}

// CreateServiceRequestEnvironmentImageRequestInput is an input type that accepts CreateServiceRequestEnvironmentImageRequestArgs and CreateServiceRequestEnvironmentImageRequestOutput values.
// You can construct a concrete instance of `CreateServiceRequestEnvironmentImageRequestInput` via:
//
//          CreateServiceRequestEnvironmentImageRequestArgs{...}
type CreateServiceRequestEnvironmentImageRequestInput interface {
	pulumi.Input

	ToCreateServiceRequestEnvironmentImageRequestOutput() CreateServiceRequestEnvironmentImageRequestOutput
	ToCreateServiceRequestEnvironmentImageRequestOutputWithContext(context.Context) CreateServiceRequestEnvironmentImageRequestOutput
}

// The Environment, models and assets needed for inferencing.
type CreateServiceRequestEnvironmentImageRequestArgs struct {
	// The list of assets.
	Assets ImageAssetArrayInput `pulumi:"assets"`
	// The name of the driver file.
	DriverProgram pulumi.StringPtrInput `pulumi:"driverProgram"`
	// The details of the AZURE ML environment.
	Environment EnvironmentImageRequestEnvironmentPtrInput `pulumi:"environment"`
	// The unique identifying details of the AZURE ML environment.
	EnvironmentReference EnvironmentImageRequestEnvironmentReferencePtrInput `pulumi:"environmentReference"`
	// The list of model Ids.
	ModelIds pulumi.StringArrayInput `pulumi:"modelIds"`
	// The list of models.
	Models ModelArrayInput `pulumi:"models"`
}

func (CreateServiceRequestEnvironmentImageRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateServiceRequestEnvironmentImageRequest)(nil)).Elem()
}

func (i CreateServiceRequestEnvironmentImageRequestArgs) ToCreateServiceRequestEnvironmentImageRequestOutput() CreateServiceRequestEnvironmentImageRequestOutput {
	return i.ToCreateServiceRequestEnvironmentImageRequestOutputWithContext(context.Background())
}

func (i CreateServiceRequestEnvironmentImageRequestArgs) ToCreateServiceRequestEnvironmentImageRequestOutputWithContext(ctx context.Context) CreateServiceRequestEnvironmentImageRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateServiceRequestEnvironmentImageRequestOutput)
}

func (i CreateServiceRequestEnvironmentImageRequestArgs) ToCreateServiceRequestEnvironmentImageRequestPtrOutput() CreateServiceRequestEnvironmentImageRequestPtrOutput {
	return i.ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (i CreateServiceRequestEnvironmentImageRequestArgs) ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) CreateServiceRequestEnvironmentImageRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateServiceRequestEnvironmentImageRequestOutput).ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(ctx)
}

// CreateServiceRequestEnvironmentImageRequestPtrInput is an input type that accepts CreateServiceRequestEnvironmentImageRequestArgs, CreateServiceRequestEnvironmentImageRequestPtr and CreateServiceRequestEnvironmentImageRequestPtrOutput values.
// You can construct a concrete instance of `CreateServiceRequestEnvironmentImageRequestPtrInput` via:
//
//          CreateServiceRequestEnvironmentImageRequestArgs{...}
//
//  or:
//
//          nil
type CreateServiceRequestEnvironmentImageRequestPtrInput interface {
	pulumi.Input

	ToCreateServiceRequestEnvironmentImageRequestPtrOutput() CreateServiceRequestEnvironmentImageRequestPtrOutput
	ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(context.Context) CreateServiceRequestEnvironmentImageRequestPtrOutput
}

type createServiceRequestEnvironmentImageRequestPtrType CreateServiceRequestEnvironmentImageRequestArgs

func CreateServiceRequestEnvironmentImageRequestPtr(v *CreateServiceRequestEnvironmentImageRequestArgs) CreateServiceRequestEnvironmentImageRequestPtrInput {
	return (*createServiceRequestEnvironmentImageRequestPtrType)(v)
}

func (*createServiceRequestEnvironmentImageRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateServiceRequestEnvironmentImageRequest)(nil)).Elem()
}

func (i *createServiceRequestEnvironmentImageRequestPtrType) ToCreateServiceRequestEnvironmentImageRequestPtrOutput() CreateServiceRequestEnvironmentImageRequestPtrOutput {
	return i.ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (i *createServiceRequestEnvironmentImageRequestPtrType) ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) CreateServiceRequestEnvironmentImageRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateServiceRequestEnvironmentImageRequestPtrOutput)
}

// The Environment, models and assets needed for inferencing.
type CreateServiceRequestEnvironmentImageRequestOutput struct{ *pulumi.OutputState }

func (CreateServiceRequestEnvironmentImageRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateServiceRequestEnvironmentImageRequest)(nil)).Elem()
}

func (o CreateServiceRequestEnvironmentImageRequestOutput) ToCreateServiceRequestEnvironmentImageRequestOutput() CreateServiceRequestEnvironmentImageRequestOutput {
	return o
}

func (o CreateServiceRequestEnvironmentImageRequestOutput) ToCreateServiceRequestEnvironmentImageRequestOutputWithContext(ctx context.Context) CreateServiceRequestEnvironmentImageRequestOutput {
	return o
}

func (o CreateServiceRequestEnvironmentImageRequestOutput) ToCreateServiceRequestEnvironmentImageRequestPtrOutput() CreateServiceRequestEnvironmentImageRequestPtrOutput {
	return o.ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(context.Background())
}

func (o CreateServiceRequestEnvironmentImageRequestOutput) ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) CreateServiceRequestEnvironmentImageRequestPtrOutput {
	return o.ApplyT(func(v CreateServiceRequestEnvironmentImageRequest) *CreateServiceRequestEnvironmentImageRequest {
		return &v
	}).(CreateServiceRequestEnvironmentImageRequestPtrOutput)
}

// The list of assets.
func (o CreateServiceRequestEnvironmentImageRequestOutput) Assets() ImageAssetArrayOutput {
	return o.ApplyT(func(v CreateServiceRequestEnvironmentImageRequest) []ImageAsset { return v.Assets }).(ImageAssetArrayOutput)
}

// The name of the driver file.
func (o CreateServiceRequestEnvironmentImageRequestOutput) DriverProgram() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreateServiceRequestEnvironmentImageRequest) *string { return v.DriverProgram }).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
func (o CreateServiceRequestEnvironmentImageRequestOutput) Environment() EnvironmentImageRequestEnvironmentPtrOutput {
	return o.ApplyT(func(v CreateServiceRequestEnvironmentImageRequest) *EnvironmentImageRequestEnvironment {
		return v.Environment
	}).(EnvironmentImageRequestEnvironmentPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
func (o CreateServiceRequestEnvironmentImageRequestOutput) EnvironmentReference() EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v CreateServiceRequestEnvironmentImageRequest) *EnvironmentImageRequestEnvironmentReference {
		return v.EnvironmentReference
	}).(EnvironmentImageRequestEnvironmentReferencePtrOutput)
}

// The list of model Ids.
func (o CreateServiceRequestEnvironmentImageRequestOutput) ModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CreateServiceRequestEnvironmentImageRequest) []string { return v.ModelIds }).(pulumi.StringArrayOutput)
}

// The list of models.
func (o CreateServiceRequestEnvironmentImageRequestOutput) Models() ModelArrayOutput {
	return o.ApplyT(func(v CreateServiceRequestEnvironmentImageRequest) []Model { return v.Models }).(ModelArrayOutput)
}

type CreateServiceRequestEnvironmentImageRequestPtrOutput struct{ *pulumi.OutputState }

func (CreateServiceRequestEnvironmentImageRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateServiceRequestEnvironmentImageRequest)(nil)).Elem()
}

func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) ToCreateServiceRequestEnvironmentImageRequestPtrOutput() CreateServiceRequestEnvironmentImageRequestPtrOutput {
	return o
}

func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) ToCreateServiceRequestEnvironmentImageRequestPtrOutputWithContext(ctx context.Context) CreateServiceRequestEnvironmentImageRequestPtrOutput {
	return o
}

func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) Elem() CreateServiceRequestEnvironmentImageRequestOutput {
	return o.ApplyT(func(v *CreateServiceRequestEnvironmentImageRequest) CreateServiceRequestEnvironmentImageRequest {
		return *v
	}).(CreateServiceRequestEnvironmentImageRequestOutput)
}

// The list of assets.
func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) Assets() ImageAssetArrayOutput {
	return o.ApplyT(func(v *CreateServiceRequestEnvironmentImageRequest) []ImageAsset {
		if v == nil {
			return nil
		}
		return v.Assets
	}).(ImageAssetArrayOutput)
}

// The name of the driver file.
func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) DriverProgram() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CreateServiceRequestEnvironmentImageRequest) *string {
		if v == nil {
			return nil
		}
		return v.DriverProgram
	}).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) Environment() EnvironmentImageRequestEnvironmentPtrOutput {
	return o.ApplyT(func(v *CreateServiceRequestEnvironmentImageRequest) *EnvironmentImageRequestEnvironment {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(EnvironmentImageRequestEnvironmentPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) EnvironmentReference() EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v *CreateServiceRequestEnvironmentImageRequest) *EnvironmentImageRequestEnvironmentReference {
		if v == nil {
			return nil
		}
		return v.EnvironmentReference
	}).(EnvironmentImageRequestEnvironmentReferencePtrOutput)
}

// The list of model Ids.
func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) ModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CreateServiceRequestEnvironmentImageRequest) []string {
		if v == nil {
			return nil
		}
		return v.ModelIds
	}).(pulumi.StringArrayOutput)
}

// The list of models.
func (o CreateServiceRequestEnvironmentImageRequestPtrOutput) Models() ModelArrayOutput {
	return o.ApplyT(func(v *CreateServiceRequestEnvironmentImageRequest) []Model {
		if v == nil {
			return nil
		}
		return v.Models
	}).(ModelArrayOutput)
}

// The authentication keys.
type CreateServiceRequestKeys struct {
	// The primary key.
	PrimaryKey *string `pulumi:"primaryKey"`
	// The secondary key.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

// CreateServiceRequestKeysInput is an input type that accepts CreateServiceRequestKeysArgs and CreateServiceRequestKeysOutput values.
// You can construct a concrete instance of `CreateServiceRequestKeysInput` via:
//
//          CreateServiceRequestKeysArgs{...}
type CreateServiceRequestKeysInput interface {
	pulumi.Input

	ToCreateServiceRequestKeysOutput() CreateServiceRequestKeysOutput
	ToCreateServiceRequestKeysOutputWithContext(context.Context) CreateServiceRequestKeysOutput
}

// The authentication keys.
type CreateServiceRequestKeysArgs struct {
	// The primary key.
	PrimaryKey pulumi.StringPtrInput `pulumi:"primaryKey"`
	// The secondary key.
	SecondaryKey pulumi.StringPtrInput `pulumi:"secondaryKey"`
}

func (CreateServiceRequestKeysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateServiceRequestKeys)(nil)).Elem()
}

func (i CreateServiceRequestKeysArgs) ToCreateServiceRequestKeysOutput() CreateServiceRequestKeysOutput {
	return i.ToCreateServiceRequestKeysOutputWithContext(context.Background())
}

func (i CreateServiceRequestKeysArgs) ToCreateServiceRequestKeysOutputWithContext(ctx context.Context) CreateServiceRequestKeysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateServiceRequestKeysOutput)
}

func (i CreateServiceRequestKeysArgs) ToCreateServiceRequestKeysPtrOutput() CreateServiceRequestKeysPtrOutput {
	return i.ToCreateServiceRequestKeysPtrOutputWithContext(context.Background())
}

func (i CreateServiceRequestKeysArgs) ToCreateServiceRequestKeysPtrOutputWithContext(ctx context.Context) CreateServiceRequestKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateServiceRequestKeysOutput).ToCreateServiceRequestKeysPtrOutputWithContext(ctx)
}

// CreateServiceRequestKeysPtrInput is an input type that accepts CreateServiceRequestKeysArgs, CreateServiceRequestKeysPtr and CreateServiceRequestKeysPtrOutput values.
// You can construct a concrete instance of `CreateServiceRequestKeysPtrInput` via:
//
//          CreateServiceRequestKeysArgs{...}
//
//  or:
//
//          nil
type CreateServiceRequestKeysPtrInput interface {
	pulumi.Input

	ToCreateServiceRequestKeysPtrOutput() CreateServiceRequestKeysPtrOutput
	ToCreateServiceRequestKeysPtrOutputWithContext(context.Context) CreateServiceRequestKeysPtrOutput
}

type createServiceRequestKeysPtrType CreateServiceRequestKeysArgs

func CreateServiceRequestKeysPtr(v *CreateServiceRequestKeysArgs) CreateServiceRequestKeysPtrInput {
	return (*createServiceRequestKeysPtrType)(v)
}

func (*createServiceRequestKeysPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateServiceRequestKeys)(nil)).Elem()
}

func (i *createServiceRequestKeysPtrType) ToCreateServiceRequestKeysPtrOutput() CreateServiceRequestKeysPtrOutput {
	return i.ToCreateServiceRequestKeysPtrOutputWithContext(context.Background())
}

func (i *createServiceRequestKeysPtrType) ToCreateServiceRequestKeysPtrOutputWithContext(ctx context.Context) CreateServiceRequestKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateServiceRequestKeysPtrOutput)
}

// The authentication keys.
type CreateServiceRequestKeysOutput struct{ *pulumi.OutputState }

func (CreateServiceRequestKeysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateServiceRequestKeys)(nil)).Elem()
}

func (o CreateServiceRequestKeysOutput) ToCreateServiceRequestKeysOutput() CreateServiceRequestKeysOutput {
	return o
}

func (o CreateServiceRequestKeysOutput) ToCreateServiceRequestKeysOutputWithContext(ctx context.Context) CreateServiceRequestKeysOutput {
	return o
}

func (o CreateServiceRequestKeysOutput) ToCreateServiceRequestKeysPtrOutput() CreateServiceRequestKeysPtrOutput {
	return o.ToCreateServiceRequestKeysPtrOutputWithContext(context.Background())
}

func (o CreateServiceRequestKeysOutput) ToCreateServiceRequestKeysPtrOutputWithContext(ctx context.Context) CreateServiceRequestKeysPtrOutput {
	return o.ApplyT(func(v CreateServiceRequestKeys) *CreateServiceRequestKeys {
		return &v
	}).(CreateServiceRequestKeysPtrOutput)
}

// The primary key.
func (o CreateServiceRequestKeysOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreateServiceRequestKeys) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// The secondary key.
func (o CreateServiceRequestKeysOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreateServiceRequestKeys) *string { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

type CreateServiceRequestKeysPtrOutput struct{ *pulumi.OutputState }

func (CreateServiceRequestKeysPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateServiceRequestKeys)(nil)).Elem()
}

func (o CreateServiceRequestKeysPtrOutput) ToCreateServiceRequestKeysPtrOutput() CreateServiceRequestKeysPtrOutput {
	return o
}

func (o CreateServiceRequestKeysPtrOutput) ToCreateServiceRequestKeysPtrOutputWithContext(ctx context.Context) CreateServiceRequestKeysPtrOutput {
	return o
}

func (o CreateServiceRequestKeysPtrOutput) Elem() CreateServiceRequestKeysOutput {
	return o.ApplyT(func(v *CreateServiceRequestKeys) CreateServiceRequestKeys { return *v }).(CreateServiceRequestKeysOutput)
}

// The primary key.
func (o CreateServiceRequestKeysPtrOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CreateServiceRequestKeys) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryKey
	}).(pulumi.StringPtrOutput)
}

// The secondary key.
func (o CreateServiceRequestKeysPtrOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CreateServiceRequestKeys) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryKey
	}).(pulumi.StringPtrOutput)
}

// A DataFactory compute.
type DataFactory struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataFactory'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DataFactoryInput is an input type that accepts DataFactoryArgs and DataFactoryOutput values.
// You can construct a concrete instance of `DataFactoryInput` via:
//
//          DataFactoryArgs{...}
type DataFactoryInput interface {
	pulumi.Input

	ToDataFactoryOutput() DataFactoryOutput
	ToDataFactoryOutputWithContext(context.Context) DataFactoryOutput
}

// A DataFactory compute.
type DataFactoryArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataFactory'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DataFactoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFactory)(nil)).Elem()
}

func (i DataFactoryArgs) ToDataFactoryOutput() DataFactoryOutput {
	return i.ToDataFactoryOutputWithContext(context.Background())
}

func (i DataFactoryArgs) ToDataFactoryOutputWithContext(ctx context.Context) DataFactoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFactoryOutput)
}

// A DataFactory compute.
type DataFactoryOutput struct{ *pulumi.OutputState }

func (DataFactoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFactory)(nil)).Elem()
}

func (o DataFactoryOutput) ToDataFactoryOutput() DataFactoryOutput {
	return o
}

func (o DataFactoryOutput) ToDataFactoryOutputWithContext(ctx context.Context) DataFactoryOutput {
	return o
}

// Location for the underlying compute
func (o DataFactoryOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactory) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'DataFactory'.
func (o DataFactoryOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataFactory) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DataFactoryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactory) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// ARM resource id of the underlying compute
func (o DataFactoryOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactory) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// A DataFactory compute.
type DataFactoryInvokeResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataFactory'.
	ComputeType string `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorInvokeResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DataFactoryInvokeResponseInput is an input type that accepts DataFactoryInvokeResponseArgs and DataFactoryInvokeResponseOutput values.
// You can construct a concrete instance of `DataFactoryInvokeResponseInput` via:
//
//          DataFactoryInvokeResponseArgs{...}
type DataFactoryInvokeResponseInput interface {
	pulumi.Input

	ToDataFactoryInvokeResponseOutput() DataFactoryInvokeResponseOutput
	ToDataFactoryInvokeResponseOutputWithContext(context.Context) DataFactoryInvokeResponseOutput
}

// A DataFactory compute.
type DataFactoryInvokeResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataFactory'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn pulumi.StringInput `pulumi:"modifiedOn"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorInvokeResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DataFactoryInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFactoryInvokeResponse)(nil)).Elem()
}

func (i DataFactoryInvokeResponseArgs) ToDataFactoryInvokeResponseOutput() DataFactoryInvokeResponseOutput {
	return i.ToDataFactoryInvokeResponseOutputWithContext(context.Background())
}

func (i DataFactoryInvokeResponseArgs) ToDataFactoryInvokeResponseOutputWithContext(ctx context.Context) DataFactoryInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFactoryInvokeResponseOutput)
}

// A DataFactory compute.
type DataFactoryInvokeResponseOutput struct{ *pulumi.OutputState }

func (DataFactoryInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFactoryInvokeResponse)(nil)).Elem()
}

func (o DataFactoryInvokeResponseOutput) ToDataFactoryInvokeResponseOutput() DataFactoryInvokeResponseOutput {
	return o
}

func (o DataFactoryInvokeResponseOutput) ToDataFactoryInvokeResponseOutputWithContext(ctx context.Context) DataFactoryInvokeResponseOutput {
	return o
}

// Location for the underlying compute
func (o DataFactoryInvokeResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactoryInvokeResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'DataFactory'.
func (o DataFactoryInvokeResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataFactoryInvokeResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The date and time when the compute was created.
func (o DataFactoryInvokeResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataFactoryInvokeResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DataFactoryInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactoryInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o DataFactoryInvokeResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v DataFactoryInvokeResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The date and time when the compute was last modified.
func (o DataFactoryInvokeResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataFactoryInvokeResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// Errors during provisioning
func (o DataFactoryInvokeResponseOutput) ProvisioningErrors() MachineLearningServiceErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v DataFactoryInvokeResponse) []MachineLearningServiceErrorInvokeResponse {
		return v.ProvisioningErrors
	}).(MachineLearningServiceErrorInvokeResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o DataFactoryInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DataFactoryInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o DataFactoryInvokeResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactoryInvokeResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// A DataFactory compute.
type DataFactoryResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataFactory'.
	ComputeType string `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DataFactoryResponseInput is an input type that accepts DataFactoryResponseArgs and DataFactoryResponseOutput values.
// You can construct a concrete instance of `DataFactoryResponseInput` via:
//
//          DataFactoryResponseArgs{...}
type DataFactoryResponseInput interface {
	pulumi.Input

	ToDataFactoryResponseOutput() DataFactoryResponseOutput
	ToDataFactoryResponseOutputWithContext(context.Context) DataFactoryResponseOutput
}

// A DataFactory compute.
type DataFactoryResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataFactory'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn pulumi.StringInput `pulumi:"modifiedOn"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DataFactoryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFactoryResponse)(nil)).Elem()
}

func (i DataFactoryResponseArgs) ToDataFactoryResponseOutput() DataFactoryResponseOutput {
	return i.ToDataFactoryResponseOutputWithContext(context.Background())
}

func (i DataFactoryResponseArgs) ToDataFactoryResponseOutputWithContext(ctx context.Context) DataFactoryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFactoryResponseOutput)
}

// A DataFactory compute.
type DataFactoryResponseOutput struct{ *pulumi.OutputState }

func (DataFactoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFactoryResponse)(nil)).Elem()
}

func (o DataFactoryResponseOutput) ToDataFactoryResponseOutput() DataFactoryResponseOutput {
	return o
}

func (o DataFactoryResponseOutput) ToDataFactoryResponseOutputWithContext(ctx context.Context) DataFactoryResponseOutput {
	return o
}

// Location for the underlying compute
func (o DataFactoryResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactoryResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'DataFactory'.
func (o DataFactoryResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataFactoryResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The date and time when the compute was created.
func (o DataFactoryResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataFactoryResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DataFactoryResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactoryResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o DataFactoryResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v DataFactoryResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The date and time when the compute was last modified.
func (o DataFactoryResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataFactoryResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// Errors during provisioning
func (o DataFactoryResponseOutput) ProvisioningErrors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v DataFactoryResponse) []MachineLearningServiceErrorResponse { return v.ProvisioningErrors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o DataFactoryResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DataFactoryResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o DataFactoryResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFactoryResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// A DataLakeAnalytics compute.
type DataLakeAnalytics struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataLakeAnalytics'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string                      `pulumi:"description"`
	Properties  *DataLakeAnalyticsProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DataLakeAnalyticsInput is an input type that accepts DataLakeAnalyticsArgs and DataLakeAnalyticsOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsInput` via:
//
//          DataLakeAnalyticsArgs{...}
type DataLakeAnalyticsInput interface {
	pulumi.Input

	ToDataLakeAnalyticsOutput() DataLakeAnalyticsOutput
	ToDataLakeAnalyticsOutputWithContext(context.Context) DataLakeAnalyticsOutput
}

// A DataLakeAnalytics compute.
type DataLakeAnalyticsArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataLakeAnalytics'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput               `pulumi:"description"`
	Properties  DataLakeAnalyticsPropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DataLakeAnalyticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalytics)(nil)).Elem()
}

func (i DataLakeAnalyticsArgs) ToDataLakeAnalyticsOutput() DataLakeAnalyticsOutput {
	return i.ToDataLakeAnalyticsOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsArgs) ToDataLakeAnalyticsOutputWithContext(ctx context.Context) DataLakeAnalyticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsOutput)
}

// A DataLakeAnalytics compute.
type DataLakeAnalyticsOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalytics)(nil)).Elem()
}

func (o DataLakeAnalyticsOutput) ToDataLakeAnalyticsOutput() DataLakeAnalyticsOutput {
	return o
}

func (o DataLakeAnalyticsOutput) ToDataLakeAnalyticsOutputWithContext(ctx context.Context) DataLakeAnalyticsOutput {
	return o
}

// Location for the underlying compute
func (o DataLakeAnalyticsOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalytics) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'DataLakeAnalytics'.
func (o DataLakeAnalyticsOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalytics) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DataLakeAnalyticsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalytics) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DataLakeAnalyticsOutput) Properties() DataLakeAnalyticsPropertiesPtrOutput {
	return o.ApplyT(func(v DataLakeAnalytics) *DataLakeAnalyticsProperties { return v.Properties }).(DataLakeAnalyticsPropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o DataLakeAnalyticsOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalytics) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// A DataLakeAnalytics compute.
type DataLakeAnalyticsInvokeResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataLakeAnalytics'.
	ComputeType string `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn string                                     `pulumi:"modifiedOn"`
	Properties *DataLakeAnalyticsInvokeResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorInvokeResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DataLakeAnalyticsInvokeResponseInput is an input type that accepts DataLakeAnalyticsInvokeResponseArgs and DataLakeAnalyticsInvokeResponseOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsInvokeResponseInput` via:
//
//          DataLakeAnalyticsInvokeResponseArgs{...}
type DataLakeAnalyticsInvokeResponseInput interface {
	pulumi.Input

	ToDataLakeAnalyticsInvokeResponseOutput() DataLakeAnalyticsInvokeResponseOutput
	ToDataLakeAnalyticsInvokeResponseOutputWithContext(context.Context) DataLakeAnalyticsInvokeResponseOutput
}

// A DataLakeAnalytics compute.
type DataLakeAnalyticsInvokeResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataLakeAnalytics'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn pulumi.StringInput                                `pulumi:"modifiedOn"`
	Properties DataLakeAnalyticsInvokeResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorInvokeResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DataLakeAnalyticsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsInvokeResponse)(nil)).Elem()
}

func (i DataLakeAnalyticsInvokeResponseArgs) ToDataLakeAnalyticsInvokeResponseOutput() DataLakeAnalyticsInvokeResponseOutput {
	return i.ToDataLakeAnalyticsInvokeResponseOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsInvokeResponseArgs) ToDataLakeAnalyticsInvokeResponseOutputWithContext(ctx context.Context) DataLakeAnalyticsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsInvokeResponseOutput)
}

// A DataLakeAnalytics compute.
type DataLakeAnalyticsInvokeResponseOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsInvokeResponse)(nil)).Elem()
}

func (o DataLakeAnalyticsInvokeResponseOutput) ToDataLakeAnalyticsInvokeResponseOutput() DataLakeAnalyticsInvokeResponseOutput {
	return o
}

func (o DataLakeAnalyticsInvokeResponseOutput) ToDataLakeAnalyticsInvokeResponseOutputWithContext(ctx context.Context) DataLakeAnalyticsInvokeResponseOutput {
	return o
}

// Location for the underlying compute
func (o DataLakeAnalyticsInvokeResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsInvokeResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'DataLakeAnalytics'.
func (o DataLakeAnalyticsInvokeResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsInvokeResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The date and time when the compute was created.
func (o DataLakeAnalyticsInvokeResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsInvokeResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DataLakeAnalyticsInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o DataLakeAnalyticsInvokeResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v DataLakeAnalyticsInvokeResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The date and time when the compute was last modified.
func (o DataLakeAnalyticsInvokeResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsInvokeResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

func (o DataLakeAnalyticsInvokeResponseOutput) Properties() DataLakeAnalyticsInvokeResponsePropertiesPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsInvokeResponse) *DataLakeAnalyticsInvokeResponseProperties {
		return v.Properties
	}).(DataLakeAnalyticsInvokeResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o DataLakeAnalyticsInvokeResponseOutput) ProvisioningErrors() MachineLearningServiceErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v DataLakeAnalyticsInvokeResponse) []MachineLearningServiceErrorInvokeResponse {
		return v.ProvisioningErrors
	}).(MachineLearningServiceErrorInvokeResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o DataLakeAnalyticsInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o DataLakeAnalyticsInvokeResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsInvokeResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type DataLakeAnalyticsInvokeResponseProperties struct {
	// DataLake Store Account Name
	DataLakeStoreAccountName *string `pulumi:"dataLakeStoreAccountName"`
}

// DataLakeAnalyticsInvokeResponsePropertiesInput is an input type that accepts DataLakeAnalyticsInvokeResponsePropertiesArgs and DataLakeAnalyticsInvokeResponsePropertiesOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsInvokeResponsePropertiesInput` via:
//
//          DataLakeAnalyticsInvokeResponsePropertiesArgs{...}
type DataLakeAnalyticsInvokeResponsePropertiesInput interface {
	pulumi.Input

	ToDataLakeAnalyticsInvokeResponsePropertiesOutput() DataLakeAnalyticsInvokeResponsePropertiesOutput
	ToDataLakeAnalyticsInvokeResponsePropertiesOutputWithContext(context.Context) DataLakeAnalyticsInvokeResponsePropertiesOutput
}

type DataLakeAnalyticsInvokeResponsePropertiesArgs struct {
	// DataLake Store Account Name
	DataLakeStoreAccountName pulumi.StringPtrInput `pulumi:"dataLakeStoreAccountName"`
}

func (DataLakeAnalyticsInvokeResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsInvokeResponseProperties)(nil)).Elem()
}

func (i DataLakeAnalyticsInvokeResponsePropertiesArgs) ToDataLakeAnalyticsInvokeResponsePropertiesOutput() DataLakeAnalyticsInvokeResponsePropertiesOutput {
	return i.ToDataLakeAnalyticsInvokeResponsePropertiesOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsInvokeResponsePropertiesArgs) ToDataLakeAnalyticsInvokeResponsePropertiesOutputWithContext(ctx context.Context) DataLakeAnalyticsInvokeResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsInvokeResponsePropertiesOutput)
}

func (i DataLakeAnalyticsInvokeResponsePropertiesArgs) ToDataLakeAnalyticsInvokeResponsePropertiesPtrOutput() DataLakeAnalyticsInvokeResponsePropertiesPtrOutput {
	return i.ToDataLakeAnalyticsInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsInvokeResponsePropertiesArgs) ToDataLakeAnalyticsInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsInvokeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsInvokeResponsePropertiesOutput).ToDataLakeAnalyticsInvokeResponsePropertiesPtrOutputWithContext(ctx)
}

// DataLakeAnalyticsInvokeResponsePropertiesPtrInput is an input type that accepts DataLakeAnalyticsInvokeResponsePropertiesArgs, DataLakeAnalyticsInvokeResponsePropertiesPtr and DataLakeAnalyticsInvokeResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsInvokeResponsePropertiesPtrInput` via:
//
//          DataLakeAnalyticsInvokeResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type DataLakeAnalyticsInvokeResponsePropertiesPtrInput interface {
	pulumi.Input

	ToDataLakeAnalyticsInvokeResponsePropertiesPtrOutput() DataLakeAnalyticsInvokeResponsePropertiesPtrOutput
	ToDataLakeAnalyticsInvokeResponsePropertiesPtrOutputWithContext(context.Context) DataLakeAnalyticsInvokeResponsePropertiesPtrOutput
}

type dataLakeAnalyticsInvokeResponsePropertiesPtrType DataLakeAnalyticsInvokeResponsePropertiesArgs

func DataLakeAnalyticsInvokeResponsePropertiesPtr(v *DataLakeAnalyticsInvokeResponsePropertiesArgs) DataLakeAnalyticsInvokeResponsePropertiesPtrInput {
	return (*dataLakeAnalyticsInvokeResponsePropertiesPtrType)(v)
}

func (*dataLakeAnalyticsInvokeResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAnalyticsInvokeResponseProperties)(nil)).Elem()
}

func (i *dataLakeAnalyticsInvokeResponsePropertiesPtrType) ToDataLakeAnalyticsInvokeResponsePropertiesPtrOutput() DataLakeAnalyticsInvokeResponsePropertiesPtrOutput {
	return i.ToDataLakeAnalyticsInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *dataLakeAnalyticsInvokeResponsePropertiesPtrType) ToDataLakeAnalyticsInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsInvokeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsInvokeResponsePropertiesPtrOutput)
}

type DataLakeAnalyticsInvokeResponsePropertiesOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsInvokeResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsInvokeResponseProperties)(nil)).Elem()
}

func (o DataLakeAnalyticsInvokeResponsePropertiesOutput) ToDataLakeAnalyticsInvokeResponsePropertiesOutput() DataLakeAnalyticsInvokeResponsePropertiesOutput {
	return o
}

func (o DataLakeAnalyticsInvokeResponsePropertiesOutput) ToDataLakeAnalyticsInvokeResponsePropertiesOutputWithContext(ctx context.Context) DataLakeAnalyticsInvokeResponsePropertiesOutput {
	return o
}

func (o DataLakeAnalyticsInvokeResponsePropertiesOutput) ToDataLakeAnalyticsInvokeResponsePropertiesPtrOutput() DataLakeAnalyticsInvokeResponsePropertiesPtrOutput {
	return o.ToDataLakeAnalyticsInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o DataLakeAnalyticsInvokeResponsePropertiesOutput) ToDataLakeAnalyticsInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsInvokeResponsePropertiesPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsInvokeResponseProperties) *DataLakeAnalyticsInvokeResponseProperties {
		return &v
	}).(DataLakeAnalyticsInvokeResponsePropertiesPtrOutput)
}

// DataLake Store Account Name
func (o DataLakeAnalyticsInvokeResponsePropertiesOutput) DataLakeStoreAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsInvokeResponseProperties) *string { return v.DataLakeStoreAccountName }).(pulumi.StringPtrOutput)
}

type DataLakeAnalyticsInvokeResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsInvokeResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAnalyticsInvokeResponseProperties)(nil)).Elem()
}

func (o DataLakeAnalyticsInvokeResponsePropertiesPtrOutput) ToDataLakeAnalyticsInvokeResponsePropertiesPtrOutput() DataLakeAnalyticsInvokeResponsePropertiesPtrOutput {
	return o
}

func (o DataLakeAnalyticsInvokeResponsePropertiesPtrOutput) ToDataLakeAnalyticsInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsInvokeResponsePropertiesPtrOutput {
	return o
}

func (o DataLakeAnalyticsInvokeResponsePropertiesPtrOutput) Elem() DataLakeAnalyticsInvokeResponsePropertiesOutput {
	return o.ApplyT(func(v *DataLakeAnalyticsInvokeResponseProperties) DataLakeAnalyticsInvokeResponseProperties {
		return *v
	}).(DataLakeAnalyticsInvokeResponsePropertiesOutput)
}

// DataLake Store Account Name
func (o DataLakeAnalyticsInvokeResponsePropertiesPtrOutput) DataLakeStoreAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAnalyticsInvokeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataLakeStoreAccountName
	}).(pulumi.StringPtrOutput)
}

type DataLakeAnalyticsProperties struct {
	// DataLake Store Account Name
	DataLakeStoreAccountName *string `pulumi:"dataLakeStoreAccountName"`
}

// DataLakeAnalyticsPropertiesInput is an input type that accepts DataLakeAnalyticsPropertiesArgs and DataLakeAnalyticsPropertiesOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsPropertiesInput` via:
//
//          DataLakeAnalyticsPropertiesArgs{...}
type DataLakeAnalyticsPropertiesInput interface {
	pulumi.Input

	ToDataLakeAnalyticsPropertiesOutput() DataLakeAnalyticsPropertiesOutput
	ToDataLakeAnalyticsPropertiesOutputWithContext(context.Context) DataLakeAnalyticsPropertiesOutput
}

type DataLakeAnalyticsPropertiesArgs struct {
	// DataLake Store Account Name
	DataLakeStoreAccountName pulumi.StringPtrInput `pulumi:"dataLakeStoreAccountName"`
}

func (DataLakeAnalyticsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsProperties)(nil)).Elem()
}

func (i DataLakeAnalyticsPropertiesArgs) ToDataLakeAnalyticsPropertiesOutput() DataLakeAnalyticsPropertiesOutput {
	return i.ToDataLakeAnalyticsPropertiesOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsPropertiesArgs) ToDataLakeAnalyticsPropertiesOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsPropertiesOutput)
}

func (i DataLakeAnalyticsPropertiesArgs) ToDataLakeAnalyticsPropertiesPtrOutput() DataLakeAnalyticsPropertiesPtrOutput {
	return i.ToDataLakeAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsPropertiesArgs) ToDataLakeAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsPropertiesOutput).ToDataLakeAnalyticsPropertiesPtrOutputWithContext(ctx)
}

// DataLakeAnalyticsPropertiesPtrInput is an input type that accepts DataLakeAnalyticsPropertiesArgs, DataLakeAnalyticsPropertiesPtr and DataLakeAnalyticsPropertiesPtrOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsPropertiesPtrInput` via:
//
//          DataLakeAnalyticsPropertiesArgs{...}
//
//  or:
//
//          nil
type DataLakeAnalyticsPropertiesPtrInput interface {
	pulumi.Input

	ToDataLakeAnalyticsPropertiesPtrOutput() DataLakeAnalyticsPropertiesPtrOutput
	ToDataLakeAnalyticsPropertiesPtrOutputWithContext(context.Context) DataLakeAnalyticsPropertiesPtrOutput
}

type dataLakeAnalyticsPropertiesPtrType DataLakeAnalyticsPropertiesArgs

func DataLakeAnalyticsPropertiesPtr(v *DataLakeAnalyticsPropertiesArgs) DataLakeAnalyticsPropertiesPtrInput {
	return (*dataLakeAnalyticsPropertiesPtrType)(v)
}

func (*dataLakeAnalyticsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAnalyticsProperties)(nil)).Elem()
}

func (i *dataLakeAnalyticsPropertiesPtrType) ToDataLakeAnalyticsPropertiesPtrOutput() DataLakeAnalyticsPropertiesPtrOutput {
	return i.ToDataLakeAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (i *dataLakeAnalyticsPropertiesPtrType) ToDataLakeAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsPropertiesPtrOutput)
}

type DataLakeAnalyticsPropertiesOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsProperties)(nil)).Elem()
}

func (o DataLakeAnalyticsPropertiesOutput) ToDataLakeAnalyticsPropertiesOutput() DataLakeAnalyticsPropertiesOutput {
	return o
}

func (o DataLakeAnalyticsPropertiesOutput) ToDataLakeAnalyticsPropertiesOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesOutput {
	return o
}

func (o DataLakeAnalyticsPropertiesOutput) ToDataLakeAnalyticsPropertiesPtrOutput() DataLakeAnalyticsPropertiesPtrOutput {
	return o.ToDataLakeAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (o DataLakeAnalyticsPropertiesOutput) ToDataLakeAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsProperties) *DataLakeAnalyticsProperties {
		return &v
	}).(DataLakeAnalyticsPropertiesPtrOutput)
}

// DataLake Store Account Name
func (o DataLakeAnalyticsPropertiesOutput) DataLakeStoreAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsProperties) *string { return v.DataLakeStoreAccountName }).(pulumi.StringPtrOutput)
}

type DataLakeAnalyticsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAnalyticsProperties)(nil)).Elem()
}

func (o DataLakeAnalyticsPropertiesPtrOutput) ToDataLakeAnalyticsPropertiesPtrOutput() DataLakeAnalyticsPropertiesPtrOutput {
	return o
}

func (o DataLakeAnalyticsPropertiesPtrOutput) ToDataLakeAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsPropertiesPtrOutput {
	return o
}

func (o DataLakeAnalyticsPropertiesPtrOutput) Elem() DataLakeAnalyticsPropertiesOutput {
	return o.ApplyT(func(v *DataLakeAnalyticsProperties) DataLakeAnalyticsProperties { return *v }).(DataLakeAnalyticsPropertiesOutput)
}

// DataLake Store Account Name
func (o DataLakeAnalyticsPropertiesPtrOutput) DataLakeStoreAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAnalyticsProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataLakeStoreAccountName
	}).(pulumi.StringPtrOutput)
}

// A DataLakeAnalytics compute.
type DataLakeAnalyticsResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataLakeAnalytics'.
	ComputeType string `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn string                               `pulumi:"modifiedOn"`
	Properties *DataLakeAnalyticsResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DataLakeAnalyticsResponseInput is an input type that accepts DataLakeAnalyticsResponseArgs and DataLakeAnalyticsResponseOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsResponseInput` via:
//
//          DataLakeAnalyticsResponseArgs{...}
type DataLakeAnalyticsResponseInput interface {
	pulumi.Input

	ToDataLakeAnalyticsResponseOutput() DataLakeAnalyticsResponseOutput
	ToDataLakeAnalyticsResponseOutputWithContext(context.Context) DataLakeAnalyticsResponseOutput
}

// A DataLakeAnalytics compute.
type DataLakeAnalyticsResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'DataLakeAnalytics'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn pulumi.StringInput                          `pulumi:"modifiedOn"`
	Properties DataLakeAnalyticsResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DataLakeAnalyticsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsResponse)(nil)).Elem()
}

func (i DataLakeAnalyticsResponseArgs) ToDataLakeAnalyticsResponseOutput() DataLakeAnalyticsResponseOutput {
	return i.ToDataLakeAnalyticsResponseOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsResponseArgs) ToDataLakeAnalyticsResponseOutputWithContext(ctx context.Context) DataLakeAnalyticsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsResponseOutput)
}

// A DataLakeAnalytics compute.
type DataLakeAnalyticsResponseOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsResponse)(nil)).Elem()
}

func (o DataLakeAnalyticsResponseOutput) ToDataLakeAnalyticsResponseOutput() DataLakeAnalyticsResponseOutput {
	return o
}

func (o DataLakeAnalyticsResponseOutput) ToDataLakeAnalyticsResponseOutputWithContext(ctx context.Context) DataLakeAnalyticsResponseOutput {
	return o
}

// Location for the underlying compute
func (o DataLakeAnalyticsResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'DataLakeAnalytics'.
func (o DataLakeAnalyticsResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The date and time when the compute was created.
func (o DataLakeAnalyticsResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DataLakeAnalyticsResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o DataLakeAnalyticsResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The date and time when the compute was last modified.
func (o DataLakeAnalyticsResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

func (o DataLakeAnalyticsResponseOutput) Properties() DataLakeAnalyticsResponsePropertiesPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) *DataLakeAnalyticsResponseProperties { return v.Properties }).(DataLakeAnalyticsResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o DataLakeAnalyticsResponseOutput) ProvisioningErrors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) []MachineLearningServiceErrorResponse { return v.ProvisioningErrors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o DataLakeAnalyticsResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o DataLakeAnalyticsResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type DataLakeAnalyticsResponseProperties struct {
	// DataLake Store Account Name
	DataLakeStoreAccountName *string `pulumi:"dataLakeStoreAccountName"`
}

// DataLakeAnalyticsResponsePropertiesInput is an input type that accepts DataLakeAnalyticsResponsePropertiesArgs and DataLakeAnalyticsResponsePropertiesOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsResponsePropertiesInput` via:
//
//          DataLakeAnalyticsResponsePropertiesArgs{...}
type DataLakeAnalyticsResponsePropertiesInput interface {
	pulumi.Input

	ToDataLakeAnalyticsResponsePropertiesOutput() DataLakeAnalyticsResponsePropertiesOutput
	ToDataLakeAnalyticsResponsePropertiesOutputWithContext(context.Context) DataLakeAnalyticsResponsePropertiesOutput
}

type DataLakeAnalyticsResponsePropertiesArgs struct {
	// DataLake Store Account Name
	DataLakeStoreAccountName pulumi.StringPtrInput `pulumi:"dataLakeStoreAccountName"`
}

func (DataLakeAnalyticsResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsResponseProperties)(nil)).Elem()
}

func (i DataLakeAnalyticsResponsePropertiesArgs) ToDataLakeAnalyticsResponsePropertiesOutput() DataLakeAnalyticsResponsePropertiesOutput {
	return i.ToDataLakeAnalyticsResponsePropertiesOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsResponsePropertiesArgs) ToDataLakeAnalyticsResponsePropertiesOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsResponsePropertiesOutput)
}

func (i DataLakeAnalyticsResponsePropertiesArgs) ToDataLakeAnalyticsResponsePropertiesPtrOutput() DataLakeAnalyticsResponsePropertiesPtrOutput {
	return i.ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i DataLakeAnalyticsResponsePropertiesArgs) ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsResponsePropertiesOutput).ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(ctx)
}

// DataLakeAnalyticsResponsePropertiesPtrInput is an input type that accepts DataLakeAnalyticsResponsePropertiesArgs, DataLakeAnalyticsResponsePropertiesPtr and DataLakeAnalyticsResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `DataLakeAnalyticsResponsePropertiesPtrInput` via:
//
//          DataLakeAnalyticsResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type DataLakeAnalyticsResponsePropertiesPtrInput interface {
	pulumi.Input

	ToDataLakeAnalyticsResponsePropertiesPtrOutput() DataLakeAnalyticsResponsePropertiesPtrOutput
	ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(context.Context) DataLakeAnalyticsResponsePropertiesPtrOutput
}

type dataLakeAnalyticsResponsePropertiesPtrType DataLakeAnalyticsResponsePropertiesArgs

func DataLakeAnalyticsResponsePropertiesPtr(v *DataLakeAnalyticsResponsePropertiesArgs) DataLakeAnalyticsResponsePropertiesPtrInput {
	return (*dataLakeAnalyticsResponsePropertiesPtrType)(v)
}

func (*dataLakeAnalyticsResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAnalyticsResponseProperties)(nil)).Elem()
}

func (i *dataLakeAnalyticsResponsePropertiesPtrType) ToDataLakeAnalyticsResponsePropertiesPtrOutput() DataLakeAnalyticsResponsePropertiesPtrOutput {
	return i.ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *dataLakeAnalyticsResponsePropertiesPtrType) ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAnalyticsResponsePropertiesPtrOutput)
}

type DataLakeAnalyticsResponsePropertiesOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAnalyticsResponseProperties)(nil)).Elem()
}

func (o DataLakeAnalyticsResponsePropertiesOutput) ToDataLakeAnalyticsResponsePropertiesOutput() DataLakeAnalyticsResponsePropertiesOutput {
	return o
}

func (o DataLakeAnalyticsResponsePropertiesOutput) ToDataLakeAnalyticsResponsePropertiesOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesOutput {
	return o
}

func (o DataLakeAnalyticsResponsePropertiesOutput) ToDataLakeAnalyticsResponsePropertiesPtrOutput() DataLakeAnalyticsResponsePropertiesPtrOutput {
	return o.ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o DataLakeAnalyticsResponsePropertiesOutput) ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponseProperties) *DataLakeAnalyticsResponseProperties {
		return &v
	}).(DataLakeAnalyticsResponsePropertiesPtrOutput)
}

// DataLake Store Account Name
func (o DataLakeAnalyticsResponsePropertiesOutput) DataLakeStoreAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAnalyticsResponseProperties) *string { return v.DataLakeStoreAccountName }).(pulumi.StringPtrOutput)
}

type DataLakeAnalyticsResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataLakeAnalyticsResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAnalyticsResponseProperties)(nil)).Elem()
}

func (o DataLakeAnalyticsResponsePropertiesPtrOutput) ToDataLakeAnalyticsResponsePropertiesPtrOutput() DataLakeAnalyticsResponsePropertiesPtrOutput {
	return o
}

func (o DataLakeAnalyticsResponsePropertiesPtrOutput) ToDataLakeAnalyticsResponsePropertiesPtrOutputWithContext(ctx context.Context) DataLakeAnalyticsResponsePropertiesPtrOutput {
	return o
}

func (o DataLakeAnalyticsResponsePropertiesPtrOutput) Elem() DataLakeAnalyticsResponsePropertiesOutput {
	return o.ApplyT(func(v *DataLakeAnalyticsResponseProperties) DataLakeAnalyticsResponseProperties { return *v }).(DataLakeAnalyticsResponsePropertiesOutput)
}

// DataLake Store Account Name
func (o DataLakeAnalyticsResponsePropertiesPtrOutput) DataLakeStoreAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAnalyticsResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataLakeStoreAccountName
	}).(pulumi.StringPtrOutput)
}

// A DataFactory compute.
type Databricks struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Databricks'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string               `pulumi:"description"`
	Properties  *DatabricksProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DatabricksInput is an input type that accepts DatabricksArgs and DatabricksOutput values.
// You can construct a concrete instance of `DatabricksInput` via:
//
//          DatabricksArgs{...}
type DatabricksInput interface {
	pulumi.Input

	ToDatabricksOutput() DatabricksOutput
	ToDatabricksOutputWithContext(context.Context) DatabricksOutput
}

// A DataFactory compute.
type DatabricksArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Databricks'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput        `pulumi:"description"`
	Properties  DatabricksPropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DatabricksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Databricks)(nil)).Elem()
}

func (i DatabricksArgs) ToDatabricksOutput() DatabricksOutput {
	return i.ToDatabricksOutputWithContext(context.Background())
}

func (i DatabricksArgs) ToDatabricksOutputWithContext(ctx context.Context) DatabricksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksOutput)
}

// A DataFactory compute.
type DatabricksOutput struct{ *pulumi.OutputState }

func (DatabricksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Databricks)(nil)).Elem()
}

func (o DatabricksOutput) ToDatabricksOutput() DatabricksOutput {
	return o
}

func (o DatabricksOutput) ToDatabricksOutputWithContext(ctx context.Context) DatabricksOutput {
	return o
}

// Location for the underlying compute
func (o DatabricksOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Databricks) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'Databricks'.
func (o DatabricksOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v Databricks) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DatabricksOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Databricks) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DatabricksOutput) Properties() DatabricksPropertiesPtrOutput {
	return o.ApplyT(func(v Databricks) *DatabricksProperties { return v.Properties }).(DatabricksPropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o DatabricksOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Databricks) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// A DataFactory compute.
type DatabricksInvokeResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Databricks'.
	ComputeType string `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn string                              `pulumi:"modifiedOn"`
	Properties *DatabricksInvokeResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorInvokeResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DatabricksInvokeResponseInput is an input type that accepts DatabricksInvokeResponseArgs and DatabricksInvokeResponseOutput values.
// You can construct a concrete instance of `DatabricksInvokeResponseInput` via:
//
//          DatabricksInvokeResponseArgs{...}
type DatabricksInvokeResponseInput interface {
	pulumi.Input

	ToDatabricksInvokeResponseOutput() DatabricksInvokeResponseOutput
	ToDatabricksInvokeResponseOutputWithContext(context.Context) DatabricksInvokeResponseOutput
}

// A DataFactory compute.
type DatabricksInvokeResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Databricks'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn pulumi.StringInput                         `pulumi:"modifiedOn"`
	Properties DatabricksInvokeResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorInvokeResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DatabricksInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksInvokeResponse)(nil)).Elem()
}

func (i DatabricksInvokeResponseArgs) ToDatabricksInvokeResponseOutput() DatabricksInvokeResponseOutput {
	return i.ToDatabricksInvokeResponseOutputWithContext(context.Background())
}

func (i DatabricksInvokeResponseArgs) ToDatabricksInvokeResponseOutputWithContext(ctx context.Context) DatabricksInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksInvokeResponseOutput)
}

// A DataFactory compute.
type DatabricksInvokeResponseOutput struct{ *pulumi.OutputState }

func (DatabricksInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksInvokeResponse)(nil)).Elem()
}

func (o DatabricksInvokeResponseOutput) ToDatabricksInvokeResponseOutput() DatabricksInvokeResponseOutput {
	return o
}

func (o DatabricksInvokeResponseOutput) ToDatabricksInvokeResponseOutputWithContext(ctx context.Context) DatabricksInvokeResponseOutput {
	return o
}

// Location for the underlying compute
func (o DatabricksInvokeResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksInvokeResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'Databricks'.
func (o DatabricksInvokeResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksInvokeResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The date and time when the compute was created.
func (o DatabricksInvokeResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksInvokeResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DatabricksInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o DatabricksInvokeResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v DatabricksInvokeResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The date and time when the compute was last modified.
func (o DatabricksInvokeResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksInvokeResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

func (o DatabricksInvokeResponseOutput) Properties() DatabricksInvokeResponsePropertiesPtrOutput {
	return o.ApplyT(func(v DatabricksInvokeResponse) *DatabricksInvokeResponseProperties { return v.Properties }).(DatabricksInvokeResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o DatabricksInvokeResponseOutput) ProvisioningErrors() MachineLearningServiceErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v DatabricksInvokeResponse) []MachineLearningServiceErrorInvokeResponse {
		return v.ProvisioningErrors
	}).(MachineLearningServiceErrorInvokeResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o DatabricksInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o DatabricksInvokeResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksInvokeResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type DatabricksInvokeResponseProperties struct {
	// Databricks access token
	DatabricksAccessToken *string `pulumi:"databricksAccessToken"`
}

// DatabricksInvokeResponsePropertiesInput is an input type that accepts DatabricksInvokeResponsePropertiesArgs and DatabricksInvokeResponsePropertiesOutput values.
// You can construct a concrete instance of `DatabricksInvokeResponsePropertiesInput` via:
//
//          DatabricksInvokeResponsePropertiesArgs{...}
type DatabricksInvokeResponsePropertiesInput interface {
	pulumi.Input

	ToDatabricksInvokeResponsePropertiesOutput() DatabricksInvokeResponsePropertiesOutput
	ToDatabricksInvokeResponsePropertiesOutputWithContext(context.Context) DatabricksInvokeResponsePropertiesOutput
}

type DatabricksInvokeResponsePropertiesArgs struct {
	// Databricks access token
	DatabricksAccessToken pulumi.StringPtrInput `pulumi:"databricksAccessToken"`
}

func (DatabricksInvokeResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksInvokeResponseProperties)(nil)).Elem()
}

func (i DatabricksInvokeResponsePropertiesArgs) ToDatabricksInvokeResponsePropertiesOutput() DatabricksInvokeResponsePropertiesOutput {
	return i.ToDatabricksInvokeResponsePropertiesOutputWithContext(context.Background())
}

func (i DatabricksInvokeResponsePropertiesArgs) ToDatabricksInvokeResponsePropertiesOutputWithContext(ctx context.Context) DatabricksInvokeResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksInvokeResponsePropertiesOutput)
}

func (i DatabricksInvokeResponsePropertiesArgs) ToDatabricksInvokeResponsePropertiesPtrOutput() DatabricksInvokeResponsePropertiesPtrOutput {
	return i.ToDatabricksInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i DatabricksInvokeResponsePropertiesArgs) ToDatabricksInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) DatabricksInvokeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksInvokeResponsePropertiesOutput).ToDatabricksInvokeResponsePropertiesPtrOutputWithContext(ctx)
}

// DatabricksInvokeResponsePropertiesPtrInput is an input type that accepts DatabricksInvokeResponsePropertiesArgs, DatabricksInvokeResponsePropertiesPtr and DatabricksInvokeResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `DatabricksInvokeResponsePropertiesPtrInput` via:
//
//          DatabricksInvokeResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type DatabricksInvokeResponsePropertiesPtrInput interface {
	pulumi.Input

	ToDatabricksInvokeResponsePropertiesPtrOutput() DatabricksInvokeResponsePropertiesPtrOutput
	ToDatabricksInvokeResponsePropertiesPtrOutputWithContext(context.Context) DatabricksInvokeResponsePropertiesPtrOutput
}

type databricksInvokeResponsePropertiesPtrType DatabricksInvokeResponsePropertiesArgs

func DatabricksInvokeResponsePropertiesPtr(v *DatabricksInvokeResponsePropertiesArgs) DatabricksInvokeResponsePropertiesPtrInput {
	return (*databricksInvokeResponsePropertiesPtrType)(v)
}

func (*databricksInvokeResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabricksInvokeResponseProperties)(nil)).Elem()
}

func (i *databricksInvokeResponsePropertiesPtrType) ToDatabricksInvokeResponsePropertiesPtrOutput() DatabricksInvokeResponsePropertiesPtrOutput {
	return i.ToDatabricksInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *databricksInvokeResponsePropertiesPtrType) ToDatabricksInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) DatabricksInvokeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksInvokeResponsePropertiesPtrOutput)
}

type DatabricksInvokeResponsePropertiesOutput struct{ *pulumi.OutputState }

func (DatabricksInvokeResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksInvokeResponseProperties)(nil)).Elem()
}

func (o DatabricksInvokeResponsePropertiesOutput) ToDatabricksInvokeResponsePropertiesOutput() DatabricksInvokeResponsePropertiesOutput {
	return o
}

func (o DatabricksInvokeResponsePropertiesOutput) ToDatabricksInvokeResponsePropertiesOutputWithContext(ctx context.Context) DatabricksInvokeResponsePropertiesOutput {
	return o
}

func (o DatabricksInvokeResponsePropertiesOutput) ToDatabricksInvokeResponsePropertiesPtrOutput() DatabricksInvokeResponsePropertiesPtrOutput {
	return o.ToDatabricksInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o DatabricksInvokeResponsePropertiesOutput) ToDatabricksInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) DatabricksInvokeResponsePropertiesPtrOutput {
	return o.ApplyT(func(v DatabricksInvokeResponseProperties) *DatabricksInvokeResponseProperties {
		return &v
	}).(DatabricksInvokeResponsePropertiesPtrOutput)
}

// Databricks access token
func (o DatabricksInvokeResponsePropertiesOutput) DatabricksAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksInvokeResponseProperties) *string { return v.DatabricksAccessToken }).(pulumi.StringPtrOutput)
}

type DatabricksInvokeResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DatabricksInvokeResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabricksInvokeResponseProperties)(nil)).Elem()
}

func (o DatabricksInvokeResponsePropertiesPtrOutput) ToDatabricksInvokeResponsePropertiesPtrOutput() DatabricksInvokeResponsePropertiesPtrOutput {
	return o
}

func (o DatabricksInvokeResponsePropertiesPtrOutput) ToDatabricksInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) DatabricksInvokeResponsePropertiesPtrOutput {
	return o
}

func (o DatabricksInvokeResponsePropertiesPtrOutput) Elem() DatabricksInvokeResponsePropertiesOutput {
	return o.ApplyT(func(v *DatabricksInvokeResponseProperties) DatabricksInvokeResponseProperties { return *v }).(DatabricksInvokeResponsePropertiesOutput)
}

// Databricks access token
func (o DatabricksInvokeResponsePropertiesPtrOutput) DatabricksAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabricksInvokeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DatabricksAccessToken
	}).(pulumi.StringPtrOutput)
}

type DatabricksProperties struct {
	// Databricks access token
	DatabricksAccessToken *string `pulumi:"databricksAccessToken"`
}

// DatabricksPropertiesInput is an input type that accepts DatabricksPropertiesArgs and DatabricksPropertiesOutput values.
// You can construct a concrete instance of `DatabricksPropertiesInput` via:
//
//          DatabricksPropertiesArgs{...}
type DatabricksPropertiesInput interface {
	pulumi.Input

	ToDatabricksPropertiesOutput() DatabricksPropertiesOutput
	ToDatabricksPropertiesOutputWithContext(context.Context) DatabricksPropertiesOutput
}

type DatabricksPropertiesArgs struct {
	// Databricks access token
	DatabricksAccessToken pulumi.StringPtrInput `pulumi:"databricksAccessToken"`
}

func (DatabricksPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksProperties)(nil)).Elem()
}

func (i DatabricksPropertiesArgs) ToDatabricksPropertiesOutput() DatabricksPropertiesOutput {
	return i.ToDatabricksPropertiesOutputWithContext(context.Background())
}

func (i DatabricksPropertiesArgs) ToDatabricksPropertiesOutputWithContext(ctx context.Context) DatabricksPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksPropertiesOutput)
}

func (i DatabricksPropertiesArgs) ToDatabricksPropertiesPtrOutput() DatabricksPropertiesPtrOutput {
	return i.ToDatabricksPropertiesPtrOutputWithContext(context.Background())
}

func (i DatabricksPropertiesArgs) ToDatabricksPropertiesPtrOutputWithContext(ctx context.Context) DatabricksPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksPropertiesOutput).ToDatabricksPropertiesPtrOutputWithContext(ctx)
}

// DatabricksPropertiesPtrInput is an input type that accepts DatabricksPropertiesArgs, DatabricksPropertiesPtr and DatabricksPropertiesPtrOutput values.
// You can construct a concrete instance of `DatabricksPropertiesPtrInput` via:
//
//          DatabricksPropertiesArgs{...}
//
//  or:
//
//          nil
type DatabricksPropertiesPtrInput interface {
	pulumi.Input

	ToDatabricksPropertiesPtrOutput() DatabricksPropertiesPtrOutput
	ToDatabricksPropertiesPtrOutputWithContext(context.Context) DatabricksPropertiesPtrOutput
}

type databricksPropertiesPtrType DatabricksPropertiesArgs

func DatabricksPropertiesPtr(v *DatabricksPropertiesArgs) DatabricksPropertiesPtrInput {
	return (*databricksPropertiesPtrType)(v)
}

func (*databricksPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabricksProperties)(nil)).Elem()
}

func (i *databricksPropertiesPtrType) ToDatabricksPropertiesPtrOutput() DatabricksPropertiesPtrOutput {
	return i.ToDatabricksPropertiesPtrOutputWithContext(context.Background())
}

func (i *databricksPropertiesPtrType) ToDatabricksPropertiesPtrOutputWithContext(ctx context.Context) DatabricksPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksPropertiesPtrOutput)
}

type DatabricksPropertiesOutput struct{ *pulumi.OutputState }

func (DatabricksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksProperties)(nil)).Elem()
}

func (o DatabricksPropertiesOutput) ToDatabricksPropertiesOutput() DatabricksPropertiesOutput {
	return o
}

func (o DatabricksPropertiesOutput) ToDatabricksPropertiesOutputWithContext(ctx context.Context) DatabricksPropertiesOutput {
	return o
}

func (o DatabricksPropertiesOutput) ToDatabricksPropertiesPtrOutput() DatabricksPropertiesPtrOutput {
	return o.ToDatabricksPropertiesPtrOutputWithContext(context.Background())
}

func (o DatabricksPropertiesOutput) ToDatabricksPropertiesPtrOutputWithContext(ctx context.Context) DatabricksPropertiesPtrOutput {
	return o.ApplyT(func(v DatabricksProperties) *DatabricksProperties {
		return &v
	}).(DatabricksPropertiesPtrOutput)
}

// Databricks access token
func (o DatabricksPropertiesOutput) DatabricksAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksProperties) *string { return v.DatabricksAccessToken }).(pulumi.StringPtrOutput)
}

type DatabricksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DatabricksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabricksProperties)(nil)).Elem()
}

func (o DatabricksPropertiesPtrOutput) ToDatabricksPropertiesPtrOutput() DatabricksPropertiesPtrOutput {
	return o
}

func (o DatabricksPropertiesPtrOutput) ToDatabricksPropertiesPtrOutputWithContext(ctx context.Context) DatabricksPropertiesPtrOutput {
	return o
}

func (o DatabricksPropertiesPtrOutput) Elem() DatabricksPropertiesOutput {
	return o.ApplyT(func(v *DatabricksProperties) DatabricksProperties { return *v }).(DatabricksPropertiesOutput)
}

// Databricks access token
func (o DatabricksPropertiesPtrOutput) DatabricksAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabricksProperties) *string {
		if v == nil {
			return nil
		}
		return v.DatabricksAccessToken
	}).(pulumi.StringPtrOutput)
}

// A DataFactory compute.
type DatabricksResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Databricks'.
	ComputeType string `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn string                        `pulumi:"modifiedOn"`
	Properties *DatabricksResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// DatabricksResponseInput is an input type that accepts DatabricksResponseArgs and DatabricksResponseOutput values.
// You can construct a concrete instance of `DatabricksResponseInput` via:
//
//          DatabricksResponseArgs{...}
type DatabricksResponseInput interface {
	pulumi.Input

	ToDatabricksResponseOutput() DatabricksResponseOutput
	ToDatabricksResponseOutputWithContext(context.Context) DatabricksResponseOutput
}

// A DataFactory compute.
type DatabricksResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'Databricks'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn pulumi.StringInput                   `pulumi:"modifiedOn"`
	Properties DatabricksResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DatabricksResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksResponse)(nil)).Elem()
}

func (i DatabricksResponseArgs) ToDatabricksResponseOutput() DatabricksResponseOutput {
	return i.ToDatabricksResponseOutputWithContext(context.Background())
}

func (i DatabricksResponseArgs) ToDatabricksResponseOutputWithContext(ctx context.Context) DatabricksResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksResponseOutput)
}

// A DataFactory compute.
type DatabricksResponseOutput struct{ *pulumi.OutputState }

func (DatabricksResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksResponse)(nil)).Elem()
}

func (o DatabricksResponseOutput) ToDatabricksResponseOutput() DatabricksResponseOutput {
	return o
}

func (o DatabricksResponseOutput) ToDatabricksResponseOutputWithContext(ctx context.Context) DatabricksResponseOutput {
	return o
}

// Location for the underlying compute
func (o DatabricksResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'Databricks'.
func (o DatabricksResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The date and time when the compute was created.
func (o DatabricksResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o DatabricksResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o DatabricksResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v DatabricksResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The date and time when the compute was last modified.
func (o DatabricksResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

func (o DatabricksResponseOutput) Properties() DatabricksResponsePropertiesPtrOutput {
	return o.ApplyT(func(v DatabricksResponse) *DatabricksResponseProperties { return v.Properties }).(DatabricksResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o DatabricksResponseOutput) ProvisioningErrors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v DatabricksResponse) []MachineLearningServiceErrorResponse { return v.ProvisioningErrors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o DatabricksResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DatabricksResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o DatabricksResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type DatabricksResponseProperties struct {
	// Databricks access token
	DatabricksAccessToken *string `pulumi:"databricksAccessToken"`
}

// DatabricksResponsePropertiesInput is an input type that accepts DatabricksResponsePropertiesArgs and DatabricksResponsePropertiesOutput values.
// You can construct a concrete instance of `DatabricksResponsePropertiesInput` via:
//
//          DatabricksResponsePropertiesArgs{...}
type DatabricksResponsePropertiesInput interface {
	pulumi.Input

	ToDatabricksResponsePropertiesOutput() DatabricksResponsePropertiesOutput
	ToDatabricksResponsePropertiesOutputWithContext(context.Context) DatabricksResponsePropertiesOutput
}

type DatabricksResponsePropertiesArgs struct {
	// Databricks access token
	DatabricksAccessToken pulumi.StringPtrInput `pulumi:"databricksAccessToken"`
}

func (DatabricksResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksResponseProperties)(nil)).Elem()
}

func (i DatabricksResponsePropertiesArgs) ToDatabricksResponsePropertiesOutput() DatabricksResponsePropertiesOutput {
	return i.ToDatabricksResponsePropertiesOutputWithContext(context.Background())
}

func (i DatabricksResponsePropertiesArgs) ToDatabricksResponsePropertiesOutputWithContext(ctx context.Context) DatabricksResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksResponsePropertiesOutput)
}

func (i DatabricksResponsePropertiesArgs) ToDatabricksResponsePropertiesPtrOutput() DatabricksResponsePropertiesPtrOutput {
	return i.ToDatabricksResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i DatabricksResponsePropertiesArgs) ToDatabricksResponsePropertiesPtrOutputWithContext(ctx context.Context) DatabricksResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksResponsePropertiesOutput).ToDatabricksResponsePropertiesPtrOutputWithContext(ctx)
}

// DatabricksResponsePropertiesPtrInput is an input type that accepts DatabricksResponsePropertiesArgs, DatabricksResponsePropertiesPtr and DatabricksResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `DatabricksResponsePropertiesPtrInput` via:
//
//          DatabricksResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type DatabricksResponsePropertiesPtrInput interface {
	pulumi.Input

	ToDatabricksResponsePropertiesPtrOutput() DatabricksResponsePropertiesPtrOutput
	ToDatabricksResponsePropertiesPtrOutputWithContext(context.Context) DatabricksResponsePropertiesPtrOutput
}

type databricksResponsePropertiesPtrType DatabricksResponsePropertiesArgs

func DatabricksResponsePropertiesPtr(v *DatabricksResponsePropertiesArgs) DatabricksResponsePropertiesPtrInput {
	return (*databricksResponsePropertiesPtrType)(v)
}

func (*databricksResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabricksResponseProperties)(nil)).Elem()
}

func (i *databricksResponsePropertiesPtrType) ToDatabricksResponsePropertiesPtrOutput() DatabricksResponsePropertiesPtrOutput {
	return i.ToDatabricksResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *databricksResponsePropertiesPtrType) ToDatabricksResponsePropertiesPtrOutputWithContext(ctx context.Context) DatabricksResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabricksResponsePropertiesPtrOutput)
}

type DatabricksResponsePropertiesOutput struct{ *pulumi.OutputState }

func (DatabricksResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabricksResponseProperties)(nil)).Elem()
}

func (o DatabricksResponsePropertiesOutput) ToDatabricksResponsePropertiesOutput() DatabricksResponsePropertiesOutput {
	return o
}

func (o DatabricksResponsePropertiesOutput) ToDatabricksResponsePropertiesOutputWithContext(ctx context.Context) DatabricksResponsePropertiesOutput {
	return o
}

func (o DatabricksResponsePropertiesOutput) ToDatabricksResponsePropertiesPtrOutput() DatabricksResponsePropertiesPtrOutput {
	return o.ToDatabricksResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o DatabricksResponsePropertiesOutput) ToDatabricksResponsePropertiesPtrOutputWithContext(ctx context.Context) DatabricksResponsePropertiesPtrOutput {
	return o.ApplyT(func(v DatabricksResponseProperties) *DatabricksResponseProperties {
		return &v
	}).(DatabricksResponsePropertiesPtrOutput)
}

// Databricks access token
func (o DatabricksResponsePropertiesOutput) DatabricksAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabricksResponseProperties) *string { return v.DatabricksAccessToken }).(pulumi.StringPtrOutput)
}

type DatabricksResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DatabricksResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabricksResponseProperties)(nil)).Elem()
}

func (o DatabricksResponsePropertiesPtrOutput) ToDatabricksResponsePropertiesPtrOutput() DatabricksResponsePropertiesPtrOutput {
	return o
}

func (o DatabricksResponsePropertiesPtrOutput) ToDatabricksResponsePropertiesPtrOutputWithContext(ctx context.Context) DatabricksResponsePropertiesPtrOutput {
	return o
}

func (o DatabricksResponsePropertiesPtrOutput) Elem() DatabricksResponsePropertiesOutput {
	return o.ApplyT(func(v *DatabricksResponseProperties) DatabricksResponseProperties { return *v }).(DatabricksResponsePropertiesOutput)
}

// Databricks access token
func (o DatabricksResponsePropertiesPtrOutput) DatabricksAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabricksResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DatabricksAccessToken
	}).(pulumi.StringPtrOutput)
}

// The dataset reference object.
type DatasetReference struct {
	// The id of the dataset reference.
	Id *string `pulumi:"id"`
	// The name of the dataset reference.
	Name *string `pulumi:"name"`
}

// DatasetReferenceInput is an input type that accepts DatasetReferenceArgs and DatasetReferenceOutput values.
// You can construct a concrete instance of `DatasetReferenceInput` via:
//
//          DatasetReferenceArgs{...}
type DatasetReferenceInput interface {
	pulumi.Input

	ToDatasetReferenceOutput() DatasetReferenceOutput
	ToDatasetReferenceOutputWithContext(context.Context) DatasetReferenceOutput
}

// The dataset reference object.
type DatasetReferenceArgs struct {
	// The id of the dataset reference.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the dataset reference.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DatasetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetReference)(nil)).Elem()
}

func (i DatasetReferenceArgs) ToDatasetReferenceOutput() DatasetReferenceOutput {
	return i.ToDatasetReferenceOutputWithContext(context.Background())
}

func (i DatasetReferenceArgs) ToDatasetReferenceOutputWithContext(ctx context.Context) DatasetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetReferenceOutput)
}

// DatasetReferenceArrayInput is an input type that accepts DatasetReferenceArray and DatasetReferenceArrayOutput values.
// You can construct a concrete instance of `DatasetReferenceArrayInput` via:
//
//          DatasetReferenceArray{ DatasetReferenceArgs{...} }
type DatasetReferenceArrayInput interface {
	pulumi.Input

	ToDatasetReferenceArrayOutput() DatasetReferenceArrayOutput
	ToDatasetReferenceArrayOutputWithContext(context.Context) DatasetReferenceArrayOutput
}

type DatasetReferenceArray []DatasetReferenceInput

func (DatasetReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetReference)(nil)).Elem()
}

func (i DatasetReferenceArray) ToDatasetReferenceArrayOutput() DatasetReferenceArrayOutput {
	return i.ToDatasetReferenceArrayOutputWithContext(context.Background())
}

func (i DatasetReferenceArray) ToDatasetReferenceArrayOutputWithContext(ctx context.Context) DatasetReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetReferenceArrayOutput)
}

// The dataset reference object.
type DatasetReferenceOutput struct{ *pulumi.OutputState }

func (DatasetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetReference)(nil)).Elem()
}

func (o DatasetReferenceOutput) ToDatasetReferenceOutput() DatasetReferenceOutput {
	return o
}

func (o DatasetReferenceOutput) ToDatasetReferenceOutputWithContext(ctx context.Context) DatasetReferenceOutput {
	return o
}

// The id of the dataset reference.
func (o DatasetReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the dataset reference.
func (o DatasetReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DatasetReferenceArrayOutput struct{ *pulumi.OutputState }

func (DatasetReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetReference)(nil)).Elem()
}

func (o DatasetReferenceArrayOutput) ToDatasetReferenceArrayOutput() DatasetReferenceArrayOutput {
	return o
}

func (o DatasetReferenceArrayOutput) ToDatasetReferenceArrayOutputWithContext(ctx context.Context) DatasetReferenceArrayOutput {
	return o
}

func (o DatasetReferenceArrayOutput) Index(i pulumi.IntInput) DatasetReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetReference {
		return vs[0].([]DatasetReference)[vs[1].(int)]
	}).(DatasetReferenceOutput)
}

// The dataset reference object.
type DatasetReferenceInvokeResponse struct {
	// The id of the dataset reference.
	Id *string `pulumi:"id"`
	// The name of the dataset reference.
	Name *string `pulumi:"name"`
}

// DatasetReferenceInvokeResponseInput is an input type that accepts DatasetReferenceInvokeResponseArgs and DatasetReferenceInvokeResponseOutput values.
// You can construct a concrete instance of `DatasetReferenceInvokeResponseInput` via:
//
//          DatasetReferenceInvokeResponseArgs{...}
type DatasetReferenceInvokeResponseInput interface {
	pulumi.Input

	ToDatasetReferenceInvokeResponseOutput() DatasetReferenceInvokeResponseOutput
	ToDatasetReferenceInvokeResponseOutputWithContext(context.Context) DatasetReferenceInvokeResponseOutput
}

// The dataset reference object.
type DatasetReferenceInvokeResponseArgs struct {
	// The id of the dataset reference.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the dataset reference.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DatasetReferenceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetReferenceInvokeResponse)(nil)).Elem()
}

func (i DatasetReferenceInvokeResponseArgs) ToDatasetReferenceInvokeResponseOutput() DatasetReferenceInvokeResponseOutput {
	return i.ToDatasetReferenceInvokeResponseOutputWithContext(context.Background())
}

func (i DatasetReferenceInvokeResponseArgs) ToDatasetReferenceInvokeResponseOutputWithContext(ctx context.Context) DatasetReferenceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetReferenceInvokeResponseOutput)
}

// DatasetReferenceInvokeResponseArrayInput is an input type that accepts DatasetReferenceInvokeResponseArray and DatasetReferenceInvokeResponseArrayOutput values.
// You can construct a concrete instance of `DatasetReferenceInvokeResponseArrayInput` via:
//
//          DatasetReferenceInvokeResponseArray{ DatasetReferenceInvokeResponseArgs{...} }
type DatasetReferenceInvokeResponseArrayInput interface {
	pulumi.Input

	ToDatasetReferenceInvokeResponseArrayOutput() DatasetReferenceInvokeResponseArrayOutput
	ToDatasetReferenceInvokeResponseArrayOutputWithContext(context.Context) DatasetReferenceInvokeResponseArrayOutput
}

type DatasetReferenceInvokeResponseArray []DatasetReferenceInvokeResponseInput

func (DatasetReferenceInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetReferenceInvokeResponse)(nil)).Elem()
}

func (i DatasetReferenceInvokeResponseArray) ToDatasetReferenceInvokeResponseArrayOutput() DatasetReferenceInvokeResponseArrayOutput {
	return i.ToDatasetReferenceInvokeResponseArrayOutputWithContext(context.Background())
}

func (i DatasetReferenceInvokeResponseArray) ToDatasetReferenceInvokeResponseArrayOutputWithContext(ctx context.Context) DatasetReferenceInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetReferenceInvokeResponseArrayOutput)
}

// The dataset reference object.
type DatasetReferenceInvokeResponseOutput struct{ *pulumi.OutputState }

func (DatasetReferenceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetReferenceInvokeResponse)(nil)).Elem()
}

func (o DatasetReferenceInvokeResponseOutput) ToDatasetReferenceInvokeResponseOutput() DatasetReferenceInvokeResponseOutput {
	return o
}

func (o DatasetReferenceInvokeResponseOutput) ToDatasetReferenceInvokeResponseOutputWithContext(ctx context.Context) DatasetReferenceInvokeResponseOutput {
	return o
}

// The id of the dataset reference.
func (o DatasetReferenceInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetReferenceInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the dataset reference.
func (o DatasetReferenceInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetReferenceInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DatasetReferenceInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (DatasetReferenceInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetReferenceInvokeResponse)(nil)).Elem()
}

func (o DatasetReferenceInvokeResponseArrayOutput) ToDatasetReferenceInvokeResponseArrayOutput() DatasetReferenceInvokeResponseArrayOutput {
	return o
}

func (o DatasetReferenceInvokeResponseArrayOutput) ToDatasetReferenceInvokeResponseArrayOutputWithContext(ctx context.Context) DatasetReferenceInvokeResponseArrayOutput {
	return o
}

func (o DatasetReferenceInvokeResponseArrayOutput) Index(i pulumi.IntInput) DatasetReferenceInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetReferenceInvokeResponse {
		return vs[0].([]DatasetReferenceInvokeResponse)[vs[1].(int)]
	}).(DatasetReferenceInvokeResponseOutput)
}

// The dataset reference object.
type DatasetReferenceResponse struct {
	// The id of the dataset reference.
	Id *string `pulumi:"id"`
	// The name of the dataset reference.
	Name *string `pulumi:"name"`
}

// DatasetReferenceResponseInput is an input type that accepts DatasetReferenceResponseArgs and DatasetReferenceResponseOutput values.
// You can construct a concrete instance of `DatasetReferenceResponseInput` via:
//
//          DatasetReferenceResponseArgs{...}
type DatasetReferenceResponseInput interface {
	pulumi.Input

	ToDatasetReferenceResponseOutput() DatasetReferenceResponseOutput
	ToDatasetReferenceResponseOutputWithContext(context.Context) DatasetReferenceResponseOutput
}

// The dataset reference object.
type DatasetReferenceResponseArgs struct {
	// The id of the dataset reference.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the dataset reference.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DatasetReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetReferenceResponse)(nil)).Elem()
}

func (i DatasetReferenceResponseArgs) ToDatasetReferenceResponseOutput() DatasetReferenceResponseOutput {
	return i.ToDatasetReferenceResponseOutputWithContext(context.Background())
}

func (i DatasetReferenceResponseArgs) ToDatasetReferenceResponseOutputWithContext(ctx context.Context) DatasetReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetReferenceResponseOutput)
}

// DatasetReferenceResponseArrayInput is an input type that accepts DatasetReferenceResponseArray and DatasetReferenceResponseArrayOutput values.
// You can construct a concrete instance of `DatasetReferenceResponseArrayInput` via:
//
//          DatasetReferenceResponseArray{ DatasetReferenceResponseArgs{...} }
type DatasetReferenceResponseArrayInput interface {
	pulumi.Input

	ToDatasetReferenceResponseArrayOutput() DatasetReferenceResponseArrayOutput
	ToDatasetReferenceResponseArrayOutputWithContext(context.Context) DatasetReferenceResponseArrayOutput
}

type DatasetReferenceResponseArray []DatasetReferenceResponseInput

func (DatasetReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetReferenceResponse)(nil)).Elem()
}

func (i DatasetReferenceResponseArray) ToDatasetReferenceResponseArrayOutput() DatasetReferenceResponseArrayOutput {
	return i.ToDatasetReferenceResponseArrayOutputWithContext(context.Background())
}

func (i DatasetReferenceResponseArray) ToDatasetReferenceResponseArrayOutputWithContext(ctx context.Context) DatasetReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetReferenceResponseArrayOutput)
}

// The dataset reference object.
type DatasetReferenceResponseOutput struct{ *pulumi.OutputState }

func (DatasetReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetReferenceResponse)(nil)).Elem()
}

func (o DatasetReferenceResponseOutput) ToDatasetReferenceResponseOutput() DatasetReferenceResponseOutput {
	return o
}

func (o DatasetReferenceResponseOutput) ToDatasetReferenceResponseOutputWithContext(ctx context.Context) DatasetReferenceResponseOutput {
	return o
}

// The id of the dataset reference.
func (o DatasetReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the dataset reference.
func (o DatasetReferenceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetReferenceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DatasetReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (DatasetReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetReferenceResponse)(nil)).Elem()
}

func (o DatasetReferenceResponseArrayOutput) ToDatasetReferenceResponseArrayOutput() DatasetReferenceResponseArrayOutput {
	return o
}

func (o DatasetReferenceResponseArrayOutput) ToDatasetReferenceResponseArrayOutputWithContext(ctx context.Context) DatasetReferenceResponseArrayOutput {
	return o
}

func (o DatasetReferenceResponseArrayOutput) Index(i pulumi.IntInput) DatasetReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetReferenceResponse {
		return vs[0].([]DatasetReferenceResponse)[vs[1].(int)]
	}).(DatasetReferenceResponseOutput)
}

type EncryptionProperty struct {
	// Customer Key vault properties.
	KeyVaultProperties KeyVaultProperties `pulumi:"keyVaultProperties"`
	// Indicates whether or not the encryption is enabled for the workspace.
	Status string `pulumi:"status"`
}

// EncryptionPropertyInput is an input type that accepts EncryptionPropertyArgs and EncryptionPropertyOutput values.
// You can construct a concrete instance of `EncryptionPropertyInput` via:
//
//          EncryptionPropertyArgs{...}
type EncryptionPropertyInput interface {
	pulumi.Input

	ToEncryptionPropertyOutput() EncryptionPropertyOutput
	ToEncryptionPropertyOutputWithContext(context.Context) EncryptionPropertyOutput
}

type EncryptionPropertyArgs struct {
	// Customer Key vault properties.
	KeyVaultProperties KeyVaultPropertiesInput `pulumi:"keyVaultProperties"`
	// Indicates whether or not the encryption is enabled for the workspace.
	Status pulumi.StringInput `pulumi:"status"`
}

func (EncryptionPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionProperty)(nil)).Elem()
}

func (i EncryptionPropertyArgs) ToEncryptionPropertyOutput() EncryptionPropertyOutput {
	return i.ToEncryptionPropertyOutputWithContext(context.Background())
}

func (i EncryptionPropertyArgs) ToEncryptionPropertyOutputWithContext(ctx context.Context) EncryptionPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyOutput)
}

func (i EncryptionPropertyArgs) ToEncryptionPropertyPtrOutput() EncryptionPropertyPtrOutput {
	return i.ToEncryptionPropertyPtrOutputWithContext(context.Background())
}

func (i EncryptionPropertyArgs) ToEncryptionPropertyPtrOutputWithContext(ctx context.Context) EncryptionPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyOutput).ToEncryptionPropertyPtrOutputWithContext(ctx)
}

// EncryptionPropertyPtrInput is an input type that accepts EncryptionPropertyArgs, EncryptionPropertyPtr and EncryptionPropertyPtrOutput values.
// You can construct a concrete instance of `EncryptionPropertyPtrInput` via:
//
//          EncryptionPropertyArgs{...}
//
//  or:
//
//          nil
type EncryptionPropertyPtrInput interface {
	pulumi.Input

	ToEncryptionPropertyPtrOutput() EncryptionPropertyPtrOutput
	ToEncryptionPropertyPtrOutputWithContext(context.Context) EncryptionPropertyPtrOutput
}

type encryptionPropertyPtrType EncryptionPropertyArgs

func EncryptionPropertyPtr(v *EncryptionPropertyArgs) EncryptionPropertyPtrInput {
	return (*encryptionPropertyPtrType)(v)
}

func (*encryptionPropertyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionProperty)(nil)).Elem()
}

func (i *encryptionPropertyPtrType) ToEncryptionPropertyPtrOutput() EncryptionPropertyPtrOutput {
	return i.ToEncryptionPropertyPtrOutputWithContext(context.Background())
}

func (i *encryptionPropertyPtrType) ToEncryptionPropertyPtrOutputWithContext(ctx context.Context) EncryptionPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyPtrOutput)
}

type EncryptionPropertyOutput struct{ *pulumi.OutputState }

func (EncryptionPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionProperty)(nil)).Elem()
}

func (o EncryptionPropertyOutput) ToEncryptionPropertyOutput() EncryptionPropertyOutput {
	return o
}

func (o EncryptionPropertyOutput) ToEncryptionPropertyOutputWithContext(ctx context.Context) EncryptionPropertyOutput {
	return o
}

func (o EncryptionPropertyOutput) ToEncryptionPropertyPtrOutput() EncryptionPropertyPtrOutput {
	return o.ToEncryptionPropertyPtrOutputWithContext(context.Background())
}

func (o EncryptionPropertyOutput) ToEncryptionPropertyPtrOutputWithContext(ctx context.Context) EncryptionPropertyPtrOutput {
	return o.ApplyT(func(v EncryptionProperty) *EncryptionProperty {
		return &v
	}).(EncryptionPropertyPtrOutput)
}

// Customer Key vault properties.
func (o EncryptionPropertyOutput) KeyVaultProperties() KeyVaultPropertiesOutput {
	return o.ApplyT(func(v EncryptionProperty) KeyVaultProperties { return v.KeyVaultProperties }).(KeyVaultPropertiesOutput)
}

// Indicates whether or not the encryption is enabled for the workspace.
func (o EncryptionPropertyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionProperty) string { return v.Status }).(pulumi.StringOutput)
}

type EncryptionPropertyPtrOutput struct{ *pulumi.OutputState }

func (EncryptionPropertyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionProperty)(nil)).Elem()
}

func (o EncryptionPropertyPtrOutput) ToEncryptionPropertyPtrOutput() EncryptionPropertyPtrOutput {
	return o
}

func (o EncryptionPropertyPtrOutput) ToEncryptionPropertyPtrOutputWithContext(ctx context.Context) EncryptionPropertyPtrOutput {
	return o
}

func (o EncryptionPropertyPtrOutput) Elem() EncryptionPropertyOutput {
	return o.ApplyT(func(v *EncryptionProperty) EncryptionProperty { return *v }).(EncryptionPropertyOutput)
}

// Customer Key vault properties.
func (o EncryptionPropertyPtrOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v *EncryptionProperty) *KeyVaultProperties {
		if v == nil {
			return nil
		}
		return &v.KeyVaultProperties
	}).(KeyVaultPropertiesPtrOutput)
}

// Indicates whether or not the encryption is enabled for the workspace.
func (o EncryptionPropertyPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionProperty) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

type EncryptionPropertyInvokeResponse struct {
	// Customer Key vault properties.
	KeyVaultProperties KeyVaultPropertiesInvokeResponse `pulumi:"keyVaultProperties"`
	// Indicates whether or not the encryption is enabled for the workspace.
	Status string `pulumi:"status"`
}

// EncryptionPropertyInvokeResponseInput is an input type that accepts EncryptionPropertyInvokeResponseArgs and EncryptionPropertyInvokeResponseOutput values.
// You can construct a concrete instance of `EncryptionPropertyInvokeResponseInput` via:
//
//          EncryptionPropertyInvokeResponseArgs{...}
type EncryptionPropertyInvokeResponseInput interface {
	pulumi.Input

	ToEncryptionPropertyInvokeResponseOutput() EncryptionPropertyInvokeResponseOutput
	ToEncryptionPropertyInvokeResponseOutputWithContext(context.Context) EncryptionPropertyInvokeResponseOutput
}

type EncryptionPropertyInvokeResponseArgs struct {
	// Customer Key vault properties.
	KeyVaultProperties KeyVaultPropertiesInvokeResponseInput `pulumi:"keyVaultProperties"`
	// Indicates whether or not the encryption is enabled for the workspace.
	Status pulumi.StringInput `pulumi:"status"`
}

func (EncryptionPropertyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPropertyInvokeResponse)(nil)).Elem()
}

func (i EncryptionPropertyInvokeResponseArgs) ToEncryptionPropertyInvokeResponseOutput() EncryptionPropertyInvokeResponseOutput {
	return i.ToEncryptionPropertyInvokeResponseOutputWithContext(context.Background())
}

func (i EncryptionPropertyInvokeResponseArgs) ToEncryptionPropertyInvokeResponseOutputWithContext(ctx context.Context) EncryptionPropertyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyInvokeResponseOutput)
}

type EncryptionPropertyInvokeResponseOutput struct{ *pulumi.OutputState }

func (EncryptionPropertyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPropertyInvokeResponse)(nil)).Elem()
}

func (o EncryptionPropertyInvokeResponseOutput) ToEncryptionPropertyInvokeResponseOutput() EncryptionPropertyInvokeResponseOutput {
	return o
}

func (o EncryptionPropertyInvokeResponseOutput) ToEncryptionPropertyInvokeResponseOutputWithContext(ctx context.Context) EncryptionPropertyInvokeResponseOutput {
	return o
}

// Customer Key vault properties.
func (o EncryptionPropertyInvokeResponseOutput) KeyVaultProperties() KeyVaultPropertiesInvokeResponseOutput {
	return o.ApplyT(func(v EncryptionPropertyInvokeResponse) KeyVaultPropertiesInvokeResponse { return v.KeyVaultProperties }).(KeyVaultPropertiesInvokeResponseOutput)
}

// Indicates whether or not the encryption is enabled for the workspace.
func (o EncryptionPropertyInvokeResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionPropertyInvokeResponse) string { return v.Status }).(pulumi.StringOutput)
}

type EncryptionPropertyResponse struct {
	// Customer Key vault properties.
	KeyVaultProperties KeyVaultPropertiesResponse `pulumi:"keyVaultProperties"`
	// Indicates whether or not the encryption is enabled for the workspace.
	Status string `pulumi:"status"`
}

// EncryptionPropertyResponseInput is an input type that accepts EncryptionPropertyResponseArgs and EncryptionPropertyResponseOutput values.
// You can construct a concrete instance of `EncryptionPropertyResponseInput` via:
//
//          EncryptionPropertyResponseArgs{...}
type EncryptionPropertyResponseInput interface {
	pulumi.Input

	ToEncryptionPropertyResponseOutput() EncryptionPropertyResponseOutput
	ToEncryptionPropertyResponseOutputWithContext(context.Context) EncryptionPropertyResponseOutput
}

type EncryptionPropertyResponseArgs struct {
	// Customer Key vault properties.
	KeyVaultProperties KeyVaultPropertiesResponseInput `pulumi:"keyVaultProperties"`
	// Indicates whether or not the encryption is enabled for the workspace.
	Status pulumi.StringInput `pulumi:"status"`
}

func (EncryptionPropertyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPropertyResponse)(nil)).Elem()
}

func (i EncryptionPropertyResponseArgs) ToEncryptionPropertyResponseOutput() EncryptionPropertyResponseOutput {
	return i.ToEncryptionPropertyResponseOutputWithContext(context.Background())
}

func (i EncryptionPropertyResponseArgs) ToEncryptionPropertyResponseOutputWithContext(ctx context.Context) EncryptionPropertyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyResponseOutput)
}

func (i EncryptionPropertyResponseArgs) ToEncryptionPropertyResponsePtrOutput() EncryptionPropertyResponsePtrOutput {
	return i.ToEncryptionPropertyResponsePtrOutputWithContext(context.Background())
}

func (i EncryptionPropertyResponseArgs) ToEncryptionPropertyResponsePtrOutputWithContext(ctx context.Context) EncryptionPropertyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyResponseOutput).ToEncryptionPropertyResponsePtrOutputWithContext(ctx)
}

// EncryptionPropertyResponsePtrInput is an input type that accepts EncryptionPropertyResponseArgs, EncryptionPropertyResponsePtr and EncryptionPropertyResponsePtrOutput values.
// You can construct a concrete instance of `EncryptionPropertyResponsePtrInput` via:
//
//          EncryptionPropertyResponseArgs{...}
//
//  or:
//
//          nil
type EncryptionPropertyResponsePtrInput interface {
	pulumi.Input

	ToEncryptionPropertyResponsePtrOutput() EncryptionPropertyResponsePtrOutput
	ToEncryptionPropertyResponsePtrOutputWithContext(context.Context) EncryptionPropertyResponsePtrOutput
}

type encryptionPropertyResponsePtrType EncryptionPropertyResponseArgs

func EncryptionPropertyResponsePtr(v *EncryptionPropertyResponseArgs) EncryptionPropertyResponsePtrInput {
	return (*encryptionPropertyResponsePtrType)(v)
}

func (*encryptionPropertyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPropertyResponse)(nil)).Elem()
}

func (i *encryptionPropertyResponsePtrType) ToEncryptionPropertyResponsePtrOutput() EncryptionPropertyResponsePtrOutput {
	return i.ToEncryptionPropertyResponsePtrOutputWithContext(context.Background())
}

func (i *encryptionPropertyResponsePtrType) ToEncryptionPropertyResponsePtrOutputWithContext(ctx context.Context) EncryptionPropertyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertyResponsePtrOutput)
}

type EncryptionPropertyResponseOutput struct{ *pulumi.OutputState }

func (EncryptionPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPropertyResponse)(nil)).Elem()
}

func (o EncryptionPropertyResponseOutput) ToEncryptionPropertyResponseOutput() EncryptionPropertyResponseOutput {
	return o
}

func (o EncryptionPropertyResponseOutput) ToEncryptionPropertyResponseOutputWithContext(ctx context.Context) EncryptionPropertyResponseOutput {
	return o
}

func (o EncryptionPropertyResponseOutput) ToEncryptionPropertyResponsePtrOutput() EncryptionPropertyResponsePtrOutput {
	return o.ToEncryptionPropertyResponsePtrOutputWithContext(context.Background())
}

func (o EncryptionPropertyResponseOutput) ToEncryptionPropertyResponsePtrOutputWithContext(ctx context.Context) EncryptionPropertyResponsePtrOutput {
	return o.ApplyT(func(v EncryptionPropertyResponse) *EncryptionPropertyResponse {
		return &v
	}).(EncryptionPropertyResponsePtrOutput)
}

// Customer Key vault properties.
func (o EncryptionPropertyResponseOutput) KeyVaultProperties() KeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v EncryptionPropertyResponse) KeyVaultPropertiesResponse { return v.KeyVaultProperties }).(KeyVaultPropertiesResponseOutput)
}

// Indicates whether or not the encryption is enabled for the workspace.
func (o EncryptionPropertyResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionPropertyResponse) string { return v.Status }).(pulumi.StringOutput)
}

type EncryptionPropertyResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionPropertyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPropertyResponse)(nil)).Elem()
}

func (o EncryptionPropertyResponsePtrOutput) ToEncryptionPropertyResponsePtrOutput() EncryptionPropertyResponsePtrOutput {
	return o
}

func (o EncryptionPropertyResponsePtrOutput) ToEncryptionPropertyResponsePtrOutputWithContext(ctx context.Context) EncryptionPropertyResponsePtrOutput {
	return o
}

func (o EncryptionPropertyResponsePtrOutput) Elem() EncryptionPropertyResponseOutput {
	return o.ApplyT(func(v *EncryptionPropertyResponse) EncryptionPropertyResponse { return *v }).(EncryptionPropertyResponseOutput)
}

// Customer Key vault properties.
func (o EncryptionPropertyResponsePtrOutput) KeyVaultProperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionPropertyResponse) *KeyVaultPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.KeyVaultProperties
	}).(KeyVaultPropertiesResponsePtrOutput)
}

// Indicates whether or not the encryption is enabled for the workspace.
func (o EncryptionPropertyResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionPropertyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
type EnvironmentImageRequestEnvironment struct {
	// The definition of a Docker container.
	Docker *ModelEnvironmentDefinitionDocker `pulumi:"docker"`
	// Definition of environment variables to be defined in the environment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
	InferencingStackVersion *string `pulumi:"inferencingStackVersion"`
	// The name of the environment.
	Name *string `pulumi:"name"`
	// Settings for a Python environment.
	Python *ModelEnvironmentDefinitionPython `pulumi:"python"`
	// Settings for a R environment.
	R *ModelEnvironmentDefinitionR `pulumi:"r"`
	// The configuration for a Spark environment.
	Spark *ModelEnvironmentDefinitionSpark `pulumi:"spark"`
	// The environment version.
	Version *string `pulumi:"version"`
}

// EnvironmentImageRequestEnvironmentInput is an input type that accepts EnvironmentImageRequestEnvironmentArgs and EnvironmentImageRequestEnvironmentOutput values.
// You can construct a concrete instance of `EnvironmentImageRequestEnvironmentInput` via:
//
//          EnvironmentImageRequestEnvironmentArgs{...}
type EnvironmentImageRequestEnvironmentInput interface {
	pulumi.Input

	ToEnvironmentImageRequestEnvironmentOutput() EnvironmentImageRequestEnvironmentOutput
	ToEnvironmentImageRequestEnvironmentOutputWithContext(context.Context) EnvironmentImageRequestEnvironmentOutput
}

// The details of the AZURE ML environment.
type EnvironmentImageRequestEnvironmentArgs struct {
	// The definition of a Docker container.
	Docker ModelEnvironmentDefinitionDockerPtrInput `pulumi:"docker"`
	// Definition of environment variables to be defined in the environment.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
	InferencingStackVersion pulumi.StringPtrInput `pulumi:"inferencingStackVersion"`
	// The name of the environment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Settings for a Python environment.
	Python ModelEnvironmentDefinitionPythonPtrInput `pulumi:"python"`
	// Settings for a R environment.
	R ModelEnvironmentDefinitionRPtrInput `pulumi:"r"`
	// The configuration for a Spark environment.
	Spark ModelEnvironmentDefinitionSparkPtrInput `pulumi:"spark"`
	// The environment version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (EnvironmentImageRequestEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageRequestEnvironment)(nil)).Elem()
}

func (i EnvironmentImageRequestEnvironmentArgs) ToEnvironmentImageRequestEnvironmentOutput() EnvironmentImageRequestEnvironmentOutput {
	return i.ToEnvironmentImageRequestEnvironmentOutputWithContext(context.Background())
}

func (i EnvironmentImageRequestEnvironmentArgs) ToEnvironmentImageRequestEnvironmentOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageRequestEnvironmentOutput)
}

func (i EnvironmentImageRequestEnvironmentArgs) ToEnvironmentImageRequestEnvironmentPtrOutput() EnvironmentImageRequestEnvironmentPtrOutput {
	return i.ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(context.Background())
}

func (i EnvironmentImageRequestEnvironmentArgs) ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageRequestEnvironmentOutput).ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(ctx)
}

// EnvironmentImageRequestEnvironmentPtrInput is an input type that accepts EnvironmentImageRequestEnvironmentArgs, EnvironmentImageRequestEnvironmentPtr and EnvironmentImageRequestEnvironmentPtrOutput values.
// You can construct a concrete instance of `EnvironmentImageRequestEnvironmentPtrInput` via:
//
//          EnvironmentImageRequestEnvironmentArgs{...}
//
//  or:
//
//          nil
type EnvironmentImageRequestEnvironmentPtrInput interface {
	pulumi.Input

	ToEnvironmentImageRequestEnvironmentPtrOutput() EnvironmentImageRequestEnvironmentPtrOutput
	ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(context.Context) EnvironmentImageRequestEnvironmentPtrOutput
}

type environmentImageRequestEnvironmentPtrType EnvironmentImageRequestEnvironmentArgs

func EnvironmentImageRequestEnvironmentPtr(v *EnvironmentImageRequestEnvironmentArgs) EnvironmentImageRequestEnvironmentPtrInput {
	return (*environmentImageRequestEnvironmentPtrType)(v)
}

func (*environmentImageRequestEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageRequestEnvironment)(nil)).Elem()
}

func (i *environmentImageRequestEnvironmentPtrType) ToEnvironmentImageRequestEnvironmentPtrOutput() EnvironmentImageRequestEnvironmentPtrOutput {
	return i.ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(context.Background())
}

func (i *environmentImageRequestEnvironmentPtrType) ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageRequestEnvironmentPtrOutput)
}

// The details of the AZURE ML environment.
type EnvironmentImageRequestEnvironmentOutput struct{ *pulumi.OutputState }

func (EnvironmentImageRequestEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageRequestEnvironment)(nil)).Elem()
}

func (o EnvironmentImageRequestEnvironmentOutput) ToEnvironmentImageRequestEnvironmentOutput() EnvironmentImageRequestEnvironmentOutput {
	return o
}

func (o EnvironmentImageRequestEnvironmentOutput) ToEnvironmentImageRequestEnvironmentOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentOutput {
	return o
}

func (o EnvironmentImageRequestEnvironmentOutput) ToEnvironmentImageRequestEnvironmentPtrOutput() EnvironmentImageRequestEnvironmentPtrOutput {
	return o.ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(context.Background())
}

func (o EnvironmentImageRequestEnvironmentOutput) ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironment) *EnvironmentImageRequestEnvironment {
		return &v
	}).(EnvironmentImageRequestEnvironmentPtrOutput)
}

// The definition of a Docker container.
func (o EnvironmentImageRequestEnvironmentOutput) Docker() ModelEnvironmentDefinitionDockerPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironment) *ModelEnvironmentDefinitionDocker { return v.Docker }).(ModelEnvironmentDefinitionDockerPtrOutput)
}

// Definition of environment variables to be defined in the environment.
func (o EnvironmentImageRequestEnvironmentOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironment) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
func (o EnvironmentImageRequestEnvironmentOutput) InferencingStackVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironment) *string { return v.InferencingStackVersion }).(pulumi.StringPtrOutput)
}

// The name of the environment.
func (o EnvironmentImageRequestEnvironmentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironment) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Settings for a Python environment.
func (o EnvironmentImageRequestEnvironmentOutput) Python() ModelEnvironmentDefinitionPythonPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironment) *ModelEnvironmentDefinitionPython { return v.Python }).(ModelEnvironmentDefinitionPythonPtrOutput)
}

// Settings for a R environment.
func (o EnvironmentImageRequestEnvironmentOutput) R() ModelEnvironmentDefinitionRPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironment) *ModelEnvironmentDefinitionR { return v.R }).(ModelEnvironmentDefinitionRPtrOutput)
}

// The configuration for a Spark environment.
func (o EnvironmentImageRequestEnvironmentOutput) Spark() ModelEnvironmentDefinitionSparkPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironment) *ModelEnvironmentDefinitionSpark { return v.Spark }).(ModelEnvironmentDefinitionSparkPtrOutput)
}

// The environment version.
func (o EnvironmentImageRequestEnvironmentOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironment) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type EnvironmentImageRequestEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentImageRequestEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageRequestEnvironment)(nil)).Elem()
}

func (o EnvironmentImageRequestEnvironmentPtrOutput) ToEnvironmentImageRequestEnvironmentPtrOutput() EnvironmentImageRequestEnvironmentPtrOutput {
	return o
}

func (o EnvironmentImageRequestEnvironmentPtrOutput) ToEnvironmentImageRequestEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentPtrOutput {
	return o
}

func (o EnvironmentImageRequestEnvironmentPtrOutput) Elem() EnvironmentImageRequestEnvironmentOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) EnvironmentImageRequestEnvironment { return *v }).(EnvironmentImageRequestEnvironmentOutput)
}

// The definition of a Docker container.
func (o EnvironmentImageRequestEnvironmentPtrOutput) Docker() ModelEnvironmentDefinitionDockerPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) *ModelEnvironmentDefinitionDocker {
		if v == nil {
			return nil
		}
		return v.Docker
	}).(ModelEnvironmentDefinitionDockerPtrOutput)
}

// Definition of environment variables to be defined in the environment.
func (o EnvironmentImageRequestEnvironmentPtrOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
func (o EnvironmentImageRequestEnvironmentPtrOutput) InferencingStackVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.InferencingStackVersion
	}).(pulumi.StringPtrOutput)
}

// The name of the environment.
func (o EnvironmentImageRequestEnvironmentPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Settings for a Python environment.
func (o EnvironmentImageRequestEnvironmentPtrOutput) Python() ModelEnvironmentDefinitionPythonPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) *ModelEnvironmentDefinitionPython {
		if v == nil {
			return nil
		}
		return v.Python
	}).(ModelEnvironmentDefinitionPythonPtrOutput)
}

// Settings for a R environment.
func (o EnvironmentImageRequestEnvironmentPtrOutput) R() ModelEnvironmentDefinitionRPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) *ModelEnvironmentDefinitionR {
		if v == nil {
			return nil
		}
		return v.R
	}).(ModelEnvironmentDefinitionRPtrOutput)
}

// The configuration for a Spark environment.
func (o EnvironmentImageRequestEnvironmentPtrOutput) Spark() ModelEnvironmentDefinitionSparkPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) *ModelEnvironmentDefinitionSpark {
		if v == nil {
			return nil
		}
		return v.Spark
	}).(ModelEnvironmentDefinitionSparkPtrOutput)
}

// The environment version.
func (o EnvironmentImageRequestEnvironmentPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
type EnvironmentImageRequestEnvironmentReference struct {
	// Name of the environment.
	Name *string `pulumi:"name"`
	// Version of the environment.
	Version *string `pulumi:"version"`
}

// EnvironmentImageRequestEnvironmentReferenceInput is an input type that accepts EnvironmentImageRequestEnvironmentReferenceArgs and EnvironmentImageRequestEnvironmentReferenceOutput values.
// You can construct a concrete instance of `EnvironmentImageRequestEnvironmentReferenceInput` via:
//
//          EnvironmentImageRequestEnvironmentReferenceArgs{...}
type EnvironmentImageRequestEnvironmentReferenceInput interface {
	pulumi.Input

	ToEnvironmentImageRequestEnvironmentReferenceOutput() EnvironmentImageRequestEnvironmentReferenceOutput
	ToEnvironmentImageRequestEnvironmentReferenceOutputWithContext(context.Context) EnvironmentImageRequestEnvironmentReferenceOutput
}

// The unique identifying details of the AZURE ML environment.
type EnvironmentImageRequestEnvironmentReferenceArgs struct {
	// Name of the environment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Version of the environment.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (EnvironmentImageRequestEnvironmentReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageRequestEnvironmentReference)(nil)).Elem()
}

func (i EnvironmentImageRequestEnvironmentReferenceArgs) ToEnvironmentImageRequestEnvironmentReferenceOutput() EnvironmentImageRequestEnvironmentReferenceOutput {
	return i.ToEnvironmentImageRequestEnvironmentReferenceOutputWithContext(context.Background())
}

func (i EnvironmentImageRequestEnvironmentReferenceArgs) ToEnvironmentImageRequestEnvironmentReferenceOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageRequestEnvironmentReferenceOutput)
}

func (i EnvironmentImageRequestEnvironmentReferenceArgs) ToEnvironmentImageRequestEnvironmentReferencePtrOutput() EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return i.ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (i EnvironmentImageRequestEnvironmentReferenceArgs) ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageRequestEnvironmentReferenceOutput).ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(ctx)
}

// EnvironmentImageRequestEnvironmentReferencePtrInput is an input type that accepts EnvironmentImageRequestEnvironmentReferenceArgs, EnvironmentImageRequestEnvironmentReferencePtr and EnvironmentImageRequestEnvironmentReferencePtrOutput values.
// You can construct a concrete instance of `EnvironmentImageRequestEnvironmentReferencePtrInput` via:
//
//          EnvironmentImageRequestEnvironmentReferenceArgs{...}
//
//  or:
//
//          nil
type EnvironmentImageRequestEnvironmentReferencePtrInput interface {
	pulumi.Input

	ToEnvironmentImageRequestEnvironmentReferencePtrOutput() EnvironmentImageRequestEnvironmentReferencePtrOutput
	ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(context.Context) EnvironmentImageRequestEnvironmentReferencePtrOutput
}

type environmentImageRequestEnvironmentReferencePtrType EnvironmentImageRequestEnvironmentReferenceArgs

func EnvironmentImageRequestEnvironmentReferencePtr(v *EnvironmentImageRequestEnvironmentReferenceArgs) EnvironmentImageRequestEnvironmentReferencePtrInput {
	return (*environmentImageRequestEnvironmentReferencePtrType)(v)
}

func (*environmentImageRequestEnvironmentReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageRequestEnvironmentReference)(nil)).Elem()
}

func (i *environmentImageRequestEnvironmentReferencePtrType) ToEnvironmentImageRequestEnvironmentReferencePtrOutput() EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return i.ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (i *environmentImageRequestEnvironmentReferencePtrType) ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageRequestEnvironmentReferencePtrOutput)
}

// The unique identifying details of the AZURE ML environment.
type EnvironmentImageRequestEnvironmentReferenceOutput struct{ *pulumi.OutputState }

func (EnvironmentImageRequestEnvironmentReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageRequestEnvironmentReference)(nil)).Elem()
}

func (o EnvironmentImageRequestEnvironmentReferenceOutput) ToEnvironmentImageRequestEnvironmentReferenceOutput() EnvironmentImageRequestEnvironmentReferenceOutput {
	return o
}

func (o EnvironmentImageRequestEnvironmentReferenceOutput) ToEnvironmentImageRequestEnvironmentReferenceOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentReferenceOutput {
	return o
}

func (o EnvironmentImageRequestEnvironmentReferenceOutput) ToEnvironmentImageRequestEnvironmentReferencePtrOutput() EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return o.ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (o EnvironmentImageRequestEnvironmentReferenceOutput) ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironmentReference) *EnvironmentImageRequestEnvironmentReference {
		return &v
	}).(EnvironmentImageRequestEnvironmentReferencePtrOutput)
}

// Name of the environment.
func (o EnvironmentImageRequestEnvironmentReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironmentReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Version of the environment.
func (o EnvironmentImageRequestEnvironmentReferenceOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageRequestEnvironmentReference) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type EnvironmentImageRequestEnvironmentReferencePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentImageRequestEnvironmentReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageRequestEnvironmentReference)(nil)).Elem()
}

func (o EnvironmentImageRequestEnvironmentReferencePtrOutput) ToEnvironmentImageRequestEnvironmentReferencePtrOutput() EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return o
}

func (o EnvironmentImageRequestEnvironmentReferencePtrOutput) ToEnvironmentImageRequestEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageRequestEnvironmentReferencePtrOutput {
	return o
}

func (o EnvironmentImageRequestEnvironmentReferencePtrOutput) Elem() EnvironmentImageRequestEnvironmentReferenceOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironmentReference) EnvironmentImageRequestEnvironmentReference {
		return *v
	}).(EnvironmentImageRequestEnvironmentReferenceOutput)
}

// Name of the environment.
func (o EnvironmentImageRequestEnvironmentReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironmentReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Version of the environment.
func (o EnvironmentImageRequestEnvironmentReferencePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageRequestEnvironmentReference) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
type EnvironmentImageResponseInvokeResponseEnvironment struct {
	// The definition of a Docker container.
	Docker *ModelEnvironmentDefinitionResponseInvokeResponseDocker `pulumi:"docker"`
	// Definition of environment variables to be defined in the environment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
	InferencingStackVersion *string `pulumi:"inferencingStackVersion"`
	// The name of the environment.
	Name *string `pulumi:"name"`
	// Settings for a Python environment.
	Python *ModelEnvironmentDefinitionResponseInvokeResponsePython `pulumi:"python"`
	// Settings for a R environment.
	R *ModelEnvironmentDefinitionResponseInvokeResponseR `pulumi:"r"`
	// The configuration for a Spark environment.
	Spark *ModelEnvironmentDefinitionResponseInvokeResponseSpark `pulumi:"spark"`
	// The environment version.
	Version *string `pulumi:"version"`
}

// EnvironmentImageResponseInvokeResponseEnvironmentInput is an input type that accepts EnvironmentImageResponseInvokeResponseEnvironmentArgs and EnvironmentImageResponseInvokeResponseEnvironmentOutput values.
// You can construct a concrete instance of `EnvironmentImageResponseInvokeResponseEnvironmentInput` via:
//
//          EnvironmentImageResponseInvokeResponseEnvironmentArgs{...}
type EnvironmentImageResponseInvokeResponseEnvironmentInput interface {
	pulumi.Input

	ToEnvironmentImageResponseInvokeResponseEnvironmentOutput() EnvironmentImageResponseInvokeResponseEnvironmentOutput
	ToEnvironmentImageResponseInvokeResponseEnvironmentOutputWithContext(context.Context) EnvironmentImageResponseInvokeResponseEnvironmentOutput
}

// The details of the AZURE ML environment.
type EnvironmentImageResponseInvokeResponseEnvironmentArgs struct {
	// The definition of a Docker container.
	Docker ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrInput `pulumi:"docker"`
	// Definition of environment variables to be defined in the environment.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
	InferencingStackVersion pulumi.StringPtrInput `pulumi:"inferencingStackVersion"`
	// The name of the environment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Settings for a Python environment.
	Python ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrInput `pulumi:"python"`
	// Settings for a R environment.
	R ModelEnvironmentDefinitionResponseInvokeResponseRPtrInput `pulumi:"r"`
	// The configuration for a Spark environment.
	Spark ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrInput `pulumi:"spark"`
	// The environment version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (EnvironmentImageResponseInvokeResponseEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageResponseInvokeResponseEnvironment)(nil)).Elem()
}

func (i EnvironmentImageResponseInvokeResponseEnvironmentArgs) ToEnvironmentImageResponseInvokeResponseEnvironmentOutput() EnvironmentImageResponseInvokeResponseEnvironmentOutput {
	return i.ToEnvironmentImageResponseInvokeResponseEnvironmentOutputWithContext(context.Background())
}

func (i EnvironmentImageResponseInvokeResponseEnvironmentArgs) ToEnvironmentImageResponseInvokeResponseEnvironmentOutputWithContext(ctx context.Context) EnvironmentImageResponseInvokeResponseEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseInvokeResponseEnvironmentOutput)
}

func (i EnvironmentImageResponseInvokeResponseEnvironmentArgs) ToEnvironmentImageResponseInvokeResponseEnvironmentPtrOutput() EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput {
	return i.ToEnvironmentImageResponseInvokeResponseEnvironmentPtrOutputWithContext(context.Background())
}

func (i EnvironmentImageResponseInvokeResponseEnvironmentArgs) ToEnvironmentImageResponseInvokeResponseEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseInvokeResponseEnvironmentOutput).ToEnvironmentImageResponseInvokeResponseEnvironmentPtrOutputWithContext(ctx)
}

// EnvironmentImageResponseInvokeResponseEnvironmentPtrInput is an input type that accepts EnvironmentImageResponseInvokeResponseEnvironmentArgs, EnvironmentImageResponseInvokeResponseEnvironmentPtr and EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput values.
// You can construct a concrete instance of `EnvironmentImageResponseInvokeResponseEnvironmentPtrInput` via:
//
//          EnvironmentImageResponseInvokeResponseEnvironmentArgs{...}
//
//  or:
//
//          nil
type EnvironmentImageResponseInvokeResponseEnvironmentPtrInput interface {
	pulumi.Input

	ToEnvironmentImageResponseInvokeResponseEnvironmentPtrOutput() EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput
	ToEnvironmentImageResponseInvokeResponseEnvironmentPtrOutputWithContext(context.Context) EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput
}

type environmentImageResponseInvokeResponseEnvironmentPtrType EnvironmentImageResponseInvokeResponseEnvironmentArgs

func EnvironmentImageResponseInvokeResponseEnvironmentPtr(v *EnvironmentImageResponseInvokeResponseEnvironmentArgs) EnvironmentImageResponseInvokeResponseEnvironmentPtrInput {
	return (*environmentImageResponseInvokeResponseEnvironmentPtrType)(v)
}

func (*environmentImageResponseInvokeResponseEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageResponseInvokeResponseEnvironment)(nil)).Elem()
}

func (i *environmentImageResponseInvokeResponseEnvironmentPtrType) ToEnvironmentImageResponseInvokeResponseEnvironmentPtrOutput() EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput {
	return i.ToEnvironmentImageResponseInvokeResponseEnvironmentPtrOutputWithContext(context.Background())
}

func (i *environmentImageResponseInvokeResponseEnvironmentPtrType) ToEnvironmentImageResponseInvokeResponseEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput)
}

// The details of the AZURE ML environment.
type EnvironmentImageResponseInvokeResponseEnvironmentOutput struct{ *pulumi.OutputState }

func (EnvironmentImageResponseInvokeResponseEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageResponseInvokeResponseEnvironment)(nil)).Elem()
}

func (o EnvironmentImageResponseInvokeResponseEnvironmentOutput) ToEnvironmentImageResponseInvokeResponseEnvironmentOutput() EnvironmentImageResponseInvokeResponseEnvironmentOutput {
	return o
}

func (o EnvironmentImageResponseInvokeResponseEnvironmentOutput) ToEnvironmentImageResponseInvokeResponseEnvironmentOutputWithContext(ctx context.Context) EnvironmentImageResponseInvokeResponseEnvironmentOutput {
	return o
}

func (o EnvironmentImageResponseInvokeResponseEnvironmentOutput) ToEnvironmentImageResponseInvokeResponseEnvironmentPtrOutput() EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput {
	return o.ToEnvironmentImageResponseInvokeResponseEnvironmentPtrOutputWithContext(context.Background())
}

func (o EnvironmentImageResponseInvokeResponseEnvironmentOutput) ToEnvironmentImageResponseInvokeResponseEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseInvokeResponseEnvironment) *EnvironmentImageResponseInvokeResponseEnvironment {
		return &v
	}).(EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput)
}

// The definition of a Docker container.
func (o EnvironmentImageResponseInvokeResponseEnvironmentOutput) Docker() ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseInvokeResponseEnvironment) *ModelEnvironmentDefinitionResponseInvokeResponseDocker {
		return v.Docker
	}).(ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput)
}

// Definition of environment variables to be defined in the environment.
func (o EnvironmentImageResponseInvokeResponseEnvironmentOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentImageResponseInvokeResponseEnvironment) map[string]string {
		return v.EnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
func (o EnvironmentImageResponseInvokeResponseEnvironmentOutput) InferencingStackVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseInvokeResponseEnvironment) *string { return v.InferencingStackVersion }).(pulumi.StringPtrOutput)
}

// The name of the environment.
func (o EnvironmentImageResponseInvokeResponseEnvironmentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseInvokeResponseEnvironment) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Settings for a Python environment.
func (o EnvironmentImageResponseInvokeResponseEnvironmentOutput) Python() ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseInvokeResponseEnvironment) *ModelEnvironmentDefinitionResponseInvokeResponsePython {
		return v.Python
	}).(ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput)
}

// Settings for a R environment.
func (o EnvironmentImageResponseInvokeResponseEnvironmentOutput) R() ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseInvokeResponseEnvironment) *ModelEnvironmentDefinitionResponseInvokeResponseR {
		return v.R
	}).(ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput)
}

// The configuration for a Spark environment.
func (o EnvironmentImageResponseInvokeResponseEnvironmentOutput) Spark() ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseInvokeResponseEnvironment) *ModelEnvironmentDefinitionResponseInvokeResponseSpark {
		return v.Spark
	}).(ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput)
}

// The environment version.
func (o EnvironmentImageResponseInvokeResponseEnvironmentOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseInvokeResponseEnvironment) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageResponseInvokeResponseEnvironment)(nil)).Elem()
}

func (o EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput) ToEnvironmentImageResponseInvokeResponseEnvironmentPtrOutput() EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput {
	return o
}

func (o EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput) ToEnvironmentImageResponseInvokeResponseEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput {
	return o
}

func (o EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput) Elem() EnvironmentImageResponseInvokeResponseEnvironmentOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseInvokeResponseEnvironment) EnvironmentImageResponseInvokeResponseEnvironment {
		return *v
	}).(EnvironmentImageResponseInvokeResponseEnvironmentOutput)
}

// The definition of a Docker container.
func (o EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput) Docker() ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseInvokeResponseEnvironment) *ModelEnvironmentDefinitionResponseInvokeResponseDocker {
		if v == nil {
			return nil
		}
		return v.Docker
	}).(ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput)
}

// Definition of environment variables to be defined in the environment.
func (o EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseInvokeResponseEnvironment) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
func (o EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput) InferencingStackVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseInvokeResponseEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.InferencingStackVersion
	}).(pulumi.StringPtrOutput)
}

// The name of the environment.
func (o EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseInvokeResponseEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Settings for a Python environment.
func (o EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput) Python() ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseInvokeResponseEnvironment) *ModelEnvironmentDefinitionResponseInvokeResponsePython {
		if v == nil {
			return nil
		}
		return v.Python
	}).(ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput)
}

// Settings for a R environment.
func (o EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput) R() ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseInvokeResponseEnvironment) *ModelEnvironmentDefinitionResponseInvokeResponseR {
		if v == nil {
			return nil
		}
		return v.R
	}).(ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput)
}

// The configuration for a Spark environment.
func (o EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput) Spark() ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseInvokeResponseEnvironment) *ModelEnvironmentDefinitionResponseInvokeResponseSpark {
		if v == nil {
			return nil
		}
		return v.Spark
	}).(ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput)
}

// The environment version.
func (o EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseInvokeResponseEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
type EnvironmentImageResponseInvokeResponseEnvironmentReference struct {
	// Name of the environment.
	Name *string `pulumi:"name"`
	// Version of the environment.
	Version *string `pulumi:"version"`
}

// EnvironmentImageResponseInvokeResponseEnvironmentReferenceInput is an input type that accepts EnvironmentImageResponseInvokeResponseEnvironmentReferenceArgs and EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput values.
// You can construct a concrete instance of `EnvironmentImageResponseInvokeResponseEnvironmentReferenceInput` via:
//
//          EnvironmentImageResponseInvokeResponseEnvironmentReferenceArgs{...}
type EnvironmentImageResponseInvokeResponseEnvironmentReferenceInput interface {
	pulumi.Input

	ToEnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput() EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput
	ToEnvironmentImageResponseInvokeResponseEnvironmentReferenceOutputWithContext(context.Context) EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput
}

// The unique identifying details of the AZURE ML environment.
type EnvironmentImageResponseInvokeResponseEnvironmentReferenceArgs struct {
	// Name of the environment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Version of the environment.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (EnvironmentImageResponseInvokeResponseEnvironmentReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageResponseInvokeResponseEnvironmentReference)(nil)).Elem()
}

func (i EnvironmentImageResponseInvokeResponseEnvironmentReferenceArgs) ToEnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput() EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput {
	return i.ToEnvironmentImageResponseInvokeResponseEnvironmentReferenceOutputWithContext(context.Background())
}

func (i EnvironmentImageResponseInvokeResponseEnvironmentReferenceArgs) ToEnvironmentImageResponseInvokeResponseEnvironmentReferenceOutputWithContext(ctx context.Context) EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput)
}

func (i EnvironmentImageResponseInvokeResponseEnvironmentReferenceArgs) ToEnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput() EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput {
	return i.ToEnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (i EnvironmentImageResponseInvokeResponseEnvironmentReferenceArgs) ToEnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput).ToEnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutputWithContext(ctx)
}

// EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrInput is an input type that accepts EnvironmentImageResponseInvokeResponseEnvironmentReferenceArgs, EnvironmentImageResponseInvokeResponseEnvironmentReferencePtr and EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput values.
// You can construct a concrete instance of `EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrInput` via:
//
//          EnvironmentImageResponseInvokeResponseEnvironmentReferenceArgs{...}
//
//  or:
//
//          nil
type EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrInput interface {
	pulumi.Input

	ToEnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput() EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput
	ToEnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutputWithContext(context.Context) EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput
}

type environmentImageResponseInvokeResponseEnvironmentReferencePtrType EnvironmentImageResponseInvokeResponseEnvironmentReferenceArgs

func EnvironmentImageResponseInvokeResponseEnvironmentReferencePtr(v *EnvironmentImageResponseInvokeResponseEnvironmentReferenceArgs) EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrInput {
	return (*environmentImageResponseInvokeResponseEnvironmentReferencePtrType)(v)
}

func (*environmentImageResponseInvokeResponseEnvironmentReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageResponseInvokeResponseEnvironmentReference)(nil)).Elem()
}

func (i *environmentImageResponseInvokeResponseEnvironmentReferencePtrType) ToEnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput() EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput {
	return i.ToEnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (i *environmentImageResponseInvokeResponseEnvironmentReferencePtrType) ToEnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput)
}

// The unique identifying details of the AZURE ML environment.
type EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput struct{ *pulumi.OutputState }

func (EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageResponseInvokeResponseEnvironmentReference)(nil)).Elem()
}

func (o EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput) ToEnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput() EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput {
	return o
}

func (o EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput) ToEnvironmentImageResponseInvokeResponseEnvironmentReferenceOutputWithContext(ctx context.Context) EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput {
	return o
}

func (o EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput) ToEnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput() EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput {
	return o.ToEnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (o EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput) ToEnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseInvokeResponseEnvironmentReference) *EnvironmentImageResponseInvokeResponseEnvironmentReference {
		return &v
	}).(EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput)
}

// Name of the environment.
func (o EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseInvokeResponseEnvironmentReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Version of the environment.
func (o EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseInvokeResponseEnvironmentReference) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageResponseInvokeResponseEnvironmentReference)(nil)).Elem()
}

func (o EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput) ToEnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput() EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput {
	return o
}

func (o EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput) ToEnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput {
	return o
}

func (o EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput) Elem() EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseInvokeResponseEnvironmentReference) EnvironmentImageResponseInvokeResponseEnvironmentReference {
		return *v
	}).(EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput)
}

// Name of the environment.
func (o EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseInvokeResponseEnvironmentReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Version of the environment.
func (o EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseInvokeResponseEnvironmentReference) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The details of the AZURE ML environment.
type EnvironmentImageResponseResponseEnvironment struct {
	// The definition of a Docker container.
	Docker *ModelEnvironmentDefinitionResponseResponseDocker `pulumi:"docker"`
	// Definition of environment variables to be defined in the environment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
	InferencingStackVersion *string `pulumi:"inferencingStackVersion"`
	// The name of the environment.
	Name *string `pulumi:"name"`
	// Settings for a Python environment.
	Python *ModelEnvironmentDefinitionResponseResponsePython `pulumi:"python"`
	// Settings for a R environment.
	R *ModelEnvironmentDefinitionResponseResponseR `pulumi:"r"`
	// The configuration for a Spark environment.
	Spark *ModelEnvironmentDefinitionResponseResponseSpark `pulumi:"spark"`
	// The environment version.
	Version *string `pulumi:"version"`
}

// EnvironmentImageResponseResponseEnvironmentInput is an input type that accepts EnvironmentImageResponseResponseEnvironmentArgs and EnvironmentImageResponseResponseEnvironmentOutput values.
// You can construct a concrete instance of `EnvironmentImageResponseResponseEnvironmentInput` via:
//
//          EnvironmentImageResponseResponseEnvironmentArgs{...}
type EnvironmentImageResponseResponseEnvironmentInput interface {
	pulumi.Input

	ToEnvironmentImageResponseResponseEnvironmentOutput() EnvironmentImageResponseResponseEnvironmentOutput
	ToEnvironmentImageResponseResponseEnvironmentOutputWithContext(context.Context) EnvironmentImageResponseResponseEnvironmentOutput
}

// The details of the AZURE ML environment.
type EnvironmentImageResponseResponseEnvironmentArgs struct {
	// The definition of a Docker container.
	Docker ModelEnvironmentDefinitionResponseResponseDockerPtrInput `pulumi:"docker"`
	// Definition of environment variables to be defined in the environment.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
	InferencingStackVersion pulumi.StringPtrInput `pulumi:"inferencingStackVersion"`
	// The name of the environment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Settings for a Python environment.
	Python ModelEnvironmentDefinitionResponseResponsePythonPtrInput `pulumi:"python"`
	// Settings for a R environment.
	R ModelEnvironmentDefinitionResponseResponseRPtrInput `pulumi:"r"`
	// The configuration for a Spark environment.
	Spark ModelEnvironmentDefinitionResponseResponseSparkPtrInput `pulumi:"spark"`
	// The environment version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (EnvironmentImageResponseResponseEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageResponseResponseEnvironment)(nil)).Elem()
}

func (i EnvironmentImageResponseResponseEnvironmentArgs) ToEnvironmentImageResponseResponseEnvironmentOutput() EnvironmentImageResponseResponseEnvironmentOutput {
	return i.ToEnvironmentImageResponseResponseEnvironmentOutputWithContext(context.Background())
}

func (i EnvironmentImageResponseResponseEnvironmentArgs) ToEnvironmentImageResponseResponseEnvironmentOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseResponseEnvironmentOutput)
}

func (i EnvironmentImageResponseResponseEnvironmentArgs) ToEnvironmentImageResponseResponseEnvironmentPtrOutput() EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return i.ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(context.Background())
}

func (i EnvironmentImageResponseResponseEnvironmentArgs) ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseResponseEnvironmentOutput).ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(ctx)
}

// EnvironmentImageResponseResponseEnvironmentPtrInput is an input type that accepts EnvironmentImageResponseResponseEnvironmentArgs, EnvironmentImageResponseResponseEnvironmentPtr and EnvironmentImageResponseResponseEnvironmentPtrOutput values.
// You can construct a concrete instance of `EnvironmentImageResponseResponseEnvironmentPtrInput` via:
//
//          EnvironmentImageResponseResponseEnvironmentArgs{...}
//
//  or:
//
//          nil
type EnvironmentImageResponseResponseEnvironmentPtrInput interface {
	pulumi.Input

	ToEnvironmentImageResponseResponseEnvironmentPtrOutput() EnvironmentImageResponseResponseEnvironmentPtrOutput
	ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(context.Context) EnvironmentImageResponseResponseEnvironmentPtrOutput
}

type environmentImageResponseResponseEnvironmentPtrType EnvironmentImageResponseResponseEnvironmentArgs

func EnvironmentImageResponseResponseEnvironmentPtr(v *EnvironmentImageResponseResponseEnvironmentArgs) EnvironmentImageResponseResponseEnvironmentPtrInput {
	return (*environmentImageResponseResponseEnvironmentPtrType)(v)
}

func (*environmentImageResponseResponseEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageResponseResponseEnvironment)(nil)).Elem()
}

func (i *environmentImageResponseResponseEnvironmentPtrType) ToEnvironmentImageResponseResponseEnvironmentPtrOutput() EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return i.ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(context.Background())
}

func (i *environmentImageResponseResponseEnvironmentPtrType) ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseResponseEnvironmentPtrOutput)
}

// The details of the AZURE ML environment.
type EnvironmentImageResponseResponseEnvironmentOutput struct{ *pulumi.OutputState }

func (EnvironmentImageResponseResponseEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageResponseResponseEnvironment)(nil)).Elem()
}

func (o EnvironmentImageResponseResponseEnvironmentOutput) ToEnvironmentImageResponseResponseEnvironmentOutput() EnvironmentImageResponseResponseEnvironmentOutput {
	return o
}

func (o EnvironmentImageResponseResponseEnvironmentOutput) ToEnvironmentImageResponseResponseEnvironmentOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentOutput {
	return o
}

func (o EnvironmentImageResponseResponseEnvironmentOutput) ToEnvironmentImageResponseResponseEnvironmentPtrOutput() EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return o.ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(context.Background())
}

func (o EnvironmentImageResponseResponseEnvironmentOutput) ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironment) *EnvironmentImageResponseResponseEnvironment {
		return &v
	}).(EnvironmentImageResponseResponseEnvironmentPtrOutput)
}

// The definition of a Docker container.
func (o EnvironmentImageResponseResponseEnvironmentOutput) Docker() ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironment) *ModelEnvironmentDefinitionResponseResponseDocker {
		return v.Docker
	}).(ModelEnvironmentDefinitionResponseResponseDockerPtrOutput)
}

// Definition of environment variables to be defined in the environment.
func (o EnvironmentImageResponseResponseEnvironmentOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironment) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
func (o EnvironmentImageResponseResponseEnvironmentOutput) InferencingStackVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironment) *string { return v.InferencingStackVersion }).(pulumi.StringPtrOutput)
}

// The name of the environment.
func (o EnvironmentImageResponseResponseEnvironmentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironment) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Settings for a Python environment.
func (o EnvironmentImageResponseResponseEnvironmentOutput) Python() ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironment) *ModelEnvironmentDefinitionResponseResponsePython {
		return v.Python
	}).(ModelEnvironmentDefinitionResponseResponsePythonPtrOutput)
}

// Settings for a R environment.
func (o EnvironmentImageResponseResponseEnvironmentOutput) R() ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironment) *ModelEnvironmentDefinitionResponseResponseR {
		return v.R
	}).(ModelEnvironmentDefinitionResponseResponseRPtrOutput)
}

// The configuration for a Spark environment.
func (o EnvironmentImageResponseResponseEnvironmentOutput) Spark() ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironment) *ModelEnvironmentDefinitionResponseResponseSpark {
		return v.Spark
	}).(ModelEnvironmentDefinitionResponseResponseSparkPtrOutput)
}

// The environment version.
func (o EnvironmentImageResponseResponseEnvironmentOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironment) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type EnvironmentImageResponseResponseEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentImageResponseResponseEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageResponseResponseEnvironment)(nil)).Elem()
}

func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) ToEnvironmentImageResponseResponseEnvironmentPtrOutput() EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return o
}

func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) ToEnvironmentImageResponseResponseEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentPtrOutput {
	return o
}

func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) Elem() EnvironmentImageResponseResponseEnvironmentOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) EnvironmentImageResponseResponseEnvironment {
		return *v
	}).(EnvironmentImageResponseResponseEnvironmentOutput)
}

// The definition of a Docker container.
func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) Docker() ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) *ModelEnvironmentDefinitionResponseResponseDocker {
		if v == nil {
			return nil
		}
		return v.Docker
	}).(ModelEnvironmentDefinitionResponseResponseDockerPtrOutput)
}

// Definition of environment variables to be defined in the environment.
func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".
func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) InferencingStackVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.InferencingStackVersion
	}).(pulumi.StringPtrOutput)
}

// The name of the environment.
func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Settings for a Python environment.
func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) Python() ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) *ModelEnvironmentDefinitionResponseResponsePython {
		if v == nil {
			return nil
		}
		return v.Python
	}).(ModelEnvironmentDefinitionResponseResponsePythonPtrOutput)
}

// Settings for a R environment.
func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) R() ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) *ModelEnvironmentDefinitionResponseResponseR {
		if v == nil {
			return nil
		}
		return v.R
	}).(ModelEnvironmentDefinitionResponseResponseRPtrOutput)
}

// The configuration for a Spark environment.
func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) Spark() ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) *ModelEnvironmentDefinitionResponseResponseSpark {
		if v == nil {
			return nil
		}
		return v.Spark
	}).(ModelEnvironmentDefinitionResponseResponseSparkPtrOutput)
}

// The environment version.
func (o EnvironmentImageResponseResponseEnvironmentPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The unique identifying details of the AZURE ML environment.
type EnvironmentImageResponseResponseEnvironmentReference struct {
	// Name of the environment.
	Name *string `pulumi:"name"`
	// Version of the environment.
	Version *string `pulumi:"version"`
}

// EnvironmentImageResponseResponseEnvironmentReferenceInput is an input type that accepts EnvironmentImageResponseResponseEnvironmentReferenceArgs and EnvironmentImageResponseResponseEnvironmentReferenceOutput values.
// You can construct a concrete instance of `EnvironmentImageResponseResponseEnvironmentReferenceInput` via:
//
//          EnvironmentImageResponseResponseEnvironmentReferenceArgs{...}
type EnvironmentImageResponseResponseEnvironmentReferenceInput interface {
	pulumi.Input

	ToEnvironmentImageResponseResponseEnvironmentReferenceOutput() EnvironmentImageResponseResponseEnvironmentReferenceOutput
	ToEnvironmentImageResponseResponseEnvironmentReferenceOutputWithContext(context.Context) EnvironmentImageResponseResponseEnvironmentReferenceOutput
}

// The unique identifying details of the AZURE ML environment.
type EnvironmentImageResponseResponseEnvironmentReferenceArgs struct {
	// Name of the environment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Version of the environment.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (EnvironmentImageResponseResponseEnvironmentReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageResponseResponseEnvironmentReference)(nil)).Elem()
}

func (i EnvironmentImageResponseResponseEnvironmentReferenceArgs) ToEnvironmentImageResponseResponseEnvironmentReferenceOutput() EnvironmentImageResponseResponseEnvironmentReferenceOutput {
	return i.ToEnvironmentImageResponseResponseEnvironmentReferenceOutputWithContext(context.Background())
}

func (i EnvironmentImageResponseResponseEnvironmentReferenceArgs) ToEnvironmentImageResponseResponseEnvironmentReferenceOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseResponseEnvironmentReferenceOutput)
}

func (i EnvironmentImageResponseResponseEnvironmentReferenceArgs) ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutput() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return i.ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (i EnvironmentImageResponseResponseEnvironmentReferenceArgs) ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseResponseEnvironmentReferenceOutput).ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(ctx)
}

// EnvironmentImageResponseResponseEnvironmentReferencePtrInput is an input type that accepts EnvironmentImageResponseResponseEnvironmentReferenceArgs, EnvironmentImageResponseResponseEnvironmentReferencePtr and EnvironmentImageResponseResponseEnvironmentReferencePtrOutput values.
// You can construct a concrete instance of `EnvironmentImageResponseResponseEnvironmentReferencePtrInput` via:
//
//          EnvironmentImageResponseResponseEnvironmentReferenceArgs{...}
//
//  or:
//
//          nil
type EnvironmentImageResponseResponseEnvironmentReferencePtrInput interface {
	pulumi.Input

	ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutput() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput
	ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(context.Context) EnvironmentImageResponseResponseEnvironmentReferencePtrOutput
}

type environmentImageResponseResponseEnvironmentReferencePtrType EnvironmentImageResponseResponseEnvironmentReferenceArgs

func EnvironmentImageResponseResponseEnvironmentReferencePtr(v *EnvironmentImageResponseResponseEnvironmentReferenceArgs) EnvironmentImageResponseResponseEnvironmentReferencePtrInput {
	return (*environmentImageResponseResponseEnvironmentReferencePtrType)(v)
}

func (*environmentImageResponseResponseEnvironmentReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageResponseResponseEnvironmentReference)(nil)).Elem()
}

func (i *environmentImageResponseResponseEnvironmentReferencePtrType) ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutput() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return i.ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (i *environmentImageResponseResponseEnvironmentReferencePtrType) ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentImageResponseResponseEnvironmentReferencePtrOutput)
}

// The unique identifying details of the AZURE ML environment.
type EnvironmentImageResponseResponseEnvironmentReferenceOutput struct{ *pulumi.OutputState }

func (EnvironmentImageResponseResponseEnvironmentReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentImageResponseResponseEnvironmentReference)(nil)).Elem()
}

func (o EnvironmentImageResponseResponseEnvironmentReferenceOutput) ToEnvironmentImageResponseResponseEnvironmentReferenceOutput() EnvironmentImageResponseResponseEnvironmentReferenceOutput {
	return o
}

func (o EnvironmentImageResponseResponseEnvironmentReferenceOutput) ToEnvironmentImageResponseResponseEnvironmentReferenceOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentReferenceOutput {
	return o
}

func (o EnvironmentImageResponseResponseEnvironmentReferenceOutput) ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutput() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return o.ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (o EnvironmentImageResponseResponseEnvironmentReferenceOutput) ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironmentReference) *EnvironmentImageResponseResponseEnvironmentReference {
		return &v
	}).(EnvironmentImageResponseResponseEnvironmentReferencePtrOutput)
}

// Name of the environment.
func (o EnvironmentImageResponseResponseEnvironmentReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironmentReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Version of the environment.
func (o EnvironmentImageResponseResponseEnvironmentReferenceOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentImageResponseResponseEnvironmentReference) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type EnvironmentImageResponseResponseEnvironmentReferencePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentImageResponseResponseEnvironmentReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentImageResponseResponseEnvironmentReference)(nil)).Elem()
}

func (o EnvironmentImageResponseResponseEnvironmentReferencePtrOutput) ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutput() EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return o
}

func (o EnvironmentImageResponseResponseEnvironmentReferencePtrOutput) ToEnvironmentImageResponseResponseEnvironmentReferencePtrOutputWithContext(ctx context.Context) EnvironmentImageResponseResponseEnvironmentReferencePtrOutput {
	return o
}

func (o EnvironmentImageResponseResponseEnvironmentReferencePtrOutput) Elem() EnvironmentImageResponseResponseEnvironmentReferenceOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironmentReference) EnvironmentImageResponseResponseEnvironmentReference {
		return *v
	}).(EnvironmentImageResponseResponseEnvironmentReferenceOutput)
}

// Name of the environment.
func (o EnvironmentImageResponseResponseEnvironmentReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironmentReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Version of the environment.
func (o EnvironmentImageResponseResponseEnvironmentReferencePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentImageResponseResponseEnvironmentReference) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Error detail information.
type ErrorDetailInvokeResponse struct {
	// Error code.
	Code string `pulumi:"code"`
	// Error message.
	Message string `pulumi:"message"`
}

// ErrorDetailInvokeResponseInput is an input type that accepts ErrorDetailInvokeResponseArgs and ErrorDetailInvokeResponseOutput values.
// You can construct a concrete instance of `ErrorDetailInvokeResponseInput` via:
//
//          ErrorDetailInvokeResponseArgs{...}
type ErrorDetailInvokeResponseInput interface {
	pulumi.Input

	ToErrorDetailInvokeResponseOutput() ErrorDetailInvokeResponseOutput
	ToErrorDetailInvokeResponseOutputWithContext(context.Context) ErrorDetailInvokeResponseOutput
}

// Error detail information.
type ErrorDetailInvokeResponseArgs struct {
	// Error code.
	Code pulumi.StringInput `pulumi:"code"`
	// Error message.
	Message pulumi.StringInput `pulumi:"message"`
}

func (ErrorDetailInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailInvokeResponse)(nil)).Elem()
}

func (i ErrorDetailInvokeResponseArgs) ToErrorDetailInvokeResponseOutput() ErrorDetailInvokeResponseOutput {
	return i.ToErrorDetailInvokeResponseOutputWithContext(context.Background())
}

func (i ErrorDetailInvokeResponseArgs) ToErrorDetailInvokeResponseOutputWithContext(ctx context.Context) ErrorDetailInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorDetailInvokeResponseOutput)
}

// ErrorDetailInvokeResponseArrayInput is an input type that accepts ErrorDetailInvokeResponseArray and ErrorDetailInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ErrorDetailInvokeResponseArrayInput` via:
//
//          ErrorDetailInvokeResponseArray{ ErrorDetailInvokeResponseArgs{...} }
type ErrorDetailInvokeResponseArrayInput interface {
	pulumi.Input

	ToErrorDetailInvokeResponseArrayOutput() ErrorDetailInvokeResponseArrayOutput
	ToErrorDetailInvokeResponseArrayOutputWithContext(context.Context) ErrorDetailInvokeResponseArrayOutput
}

type ErrorDetailInvokeResponseArray []ErrorDetailInvokeResponseInput

func (ErrorDetailInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorDetailInvokeResponse)(nil)).Elem()
}

func (i ErrorDetailInvokeResponseArray) ToErrorDetailInvokeResponseArrayOutput() ErrorDetailInvokeResponseArrayOutput {
	return i.ToErrorDetailInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ErrorDetailInvokeResponseArray) ToErrorDetailInvokeResponseArrayOutputWithContext(ctx context.Context) ErrorDetailInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorDetailInvokeResponseArrayOutput)
}

// Error detail information.
type ErrorDetailInvokeResponseOutput struct{ *pulumi.OutputState }

func (ErrorDetailInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailInvokeResponse)(nil)).Elem()
}

func (o ErrorDetailInvokeResponseOutput) ToErrorDetailInvokeResponseOutput() ErrorDetailInvokeResponseOutput {
	return o
}

func (o ErrorDetailInvokeResponseOutput) ToErrorDetailInvokeResponseOutputWithContext(ctx context.Context) ErrorDetailInvokeResponseOutput {
	return o
}

// Error code.
func (o ErrorDetailInvokeResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailInvokeResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Error message.
func (o ErrorDetailInvokeResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailInvokeResponse) string { return v.Message }).(pulumi.StringOutput)
}

type ErrorDetailInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorDetailInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorDetailInvokeResponse)(nil)).Elem()
}

func (o ErrorDetailInvokeResponseArrayOutput) ToErrorDetailInvokeResponseArrayOutput() ErrorDetailInvokeResponseArrayOutput {
	return o
}

func (o ErrorDetailInvokeResponseArrayOutput) ToErrorDetailInvokeResponseArrayOutputWithContext(ctx context.Context) ErrorDetailInvokeResponseArrayOutput {
	return o
}

func (o ErrorDetailInvokeResponseArrayOutput) Index(i pulumi.IntInput) ErrorDetailInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorDetailInvokeResponse {
		return vs[0].([]ErrorDetailInvokeResponse)[vs[1].(int)]
	}).(ErrorDetailInvokeResponseOutput)
}

// Error detail information.
type ErrorDetailResponse struct {
	// Error code.
	Code string `pulumi:"code"`
	// Error message.
	Message string `pulumi:"message"`
}

// ErrorDetailResponseInput is an input type that accepts ErrorDetailResponseArgs and ErrorDetailResponseOutput values.
// You can construct a concrete instance of `ErrorDetailResponseInput` via:
//
//          ErrorDetailResponseArgs{...}
type ErrorDetailResponseInput interface {
	pulumi.Input

	ToErrorDetailResponseOutput() ErrorDetailResponseOutput
	ToErrorDetailResponseOutputWithContext(context.Context) ErrorDetailResponseOutput
}

// Error detail information.
type ErrorDetailResponseArgs struct {
	// Error code.
	Code pulumi.StringInput `pulumi:"code"`
	// Error message.
	Message pulumi.StringInput `pulumi:"message"`
}

func (ErrorDetailResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailResponse)(nil)).Elem()
}

func (i ErrorDetailResponseArgs) ToErrorDetailResponseOutput() ErrorDetailResponseOutput {
	return i.ToErrorDetailResponseOutputWithContext(context.Background())
}

func (i ErrorDetailResponseArgs) ToErrorDetailResponseOutputWithContext(ctx context.Context) ErrorDetailResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorDetailResponseOutput)
}

// ErrorDetailResponseArrayInput is an input type that accepts ErrorDetailResponseArray and ErrorDetailResponseArrayOutput values.
// You can construct a concrete instance of `ErrorDetailResponseArrayInput` via:
//
//          ErrorDetailResponseArray{ ErrorDetailResponseArgs{...} }
type ErrorDetailResponseArrayInput interface {
	pulumi.Input

	ToErrorDetailResponseArrayOutput() ErrorDetailResponseArrayOutput
	ToErrorDetailResponseArrayOutputWithContext(context.Context) ErrorDetailResponseArrayOutput
}

type ErrorDetailResponseArray []ErrorDetailResponseInput

func (ErrorDetailResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorDetailResponse)(nil)).Elem()
}

func (i ErrorDetailResponseArray) ToErrorDetailResponseArrayOutput() ErrorDetailResponseArrayOutput {
	return i.ToErrorDetailResponseArrayOutputWithContext(context.Background())
}

func (i ErrorDetailResponseArray) ToErrorDetailResponseArrayOutputWithContext(ctx context.Context) ErrorDetailResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorDetailResponseArrayOutput)
}

// Error detail information.
type ErrorDetailResponseOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutput() ErrorDetailResponseOutput {
	return o
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutputWithContext(ctx context.Context) ErrorDetailResponseOutput {
	return o
}

// Error code.
func (o ErrorDetailResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Error message.
func (o ErrorDetailResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Message }).(pulumi.StringOutput)
}

type ErrorDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseArrayOutput) ToErrorDetailResponseArrayOutput() ErrorDetailResponseArrayOutput {
	return o
}

func (o ErrorDetailResponseArrayOutput) ToErrorDetailResponseArrayOutputWithContext(ctx context.Context) ErrorDetailResponseArrayOutput {
	return o
}

func (o ErrorDetailResponseArrayOutput) Index(i pulumi.IntInput) ErrorDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorDetailResponse {
		return vs[0].([]ErrorDetailResponse)[vs[1].(int)]
	}).(ErrorDetailResponseOutput)
}

// Error response information.
type ErrorResponseInvokeResponse struct {
	// Error code.
	Code string `pulumi:"code"`
	// An array of error detail objects.
	Details []ErrorDetailInvokeResponse `pulumi:"details"`
	// Error message.
	Message string `pulumi:"message"`
}

// ErrorResponseInvokeResponseInput is an input type that accepts ErrorResponseInvokeResponseArgs and ErrorResponseInvokeResponseOutput values.
// You can construct a concrete instance of `ErrorResponseInvokeResponseInput` via:
//
//          ErrorResponseInvokeResponseArgs{...}
type ErrorResponseInvokeResponseInput interface {
	pulumi.Input

	ToErrorResponseInvokeResponseOutput() ErrorResponseInvokeResponseOutput
	ToErrorResponseInvokeResponseOutputWithContext(context.Context) ErrorResponseInvokeResponseOutput
}

// Error response information.
type ErrorResponseInvokeResponseArgs struct {
	// Error code.
	Code pulumi.StringInput `pulumi:"code"`
	// An array of error detail objects.
	Details ErrorDetailInvokeResponseArrayInput `pulumi:"details"`
	// Error message.
	Message pulumi.StringInput `pulumi:"message"`
}

func (ErrorResponseInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponseInvokeResponse)(nil)).Elem()
}

func (i ErrorResponseInvokeResponseArgs) ToErrorResponseInvokeResponseOutput() ErrorResponseInvokeResponseOutput {
	return i.ToErrorResponseInvokeResponseOutputWithContext(context.Background())
}

func (i ErrorResponseInvokeResponseArgs) ToErrorResponseInvokeResponseOutputWithContext(ctx context.Context) ErrorResponseInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorResponseInvokeResponseOutput)
}

// Error response information.
type ErrorResponseInvokeResponseOutput struct{ *pulumi.OutputState }

func (ErrorResponseInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponseInvokeResponse)(nil)).Elem()
}

func (o ErrorResponseInvokeResponseOutput) ToErrorResponseInvokeResponseOutput() ErrorResponseInvokeResponseOutput {
	return o
}

func (o ErrorResponseInvokeResponseOutput) ToErrorResponseInvokeResponseOutputWithContext(ctx context.Context) ErrorResponseInvokeResponseOutput {
	return o
}

// Error code.
func (o ErrorResponseInvokeResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorResponseInvokeResponse) string { return v.Code }).(pulumi.StringOutput)
}

// An array of error detail objects.
func (o ErrorResponseInvokeResponseOutput) Details() ErrorDetailInvokeResponseArrayOutput {
	return o.ApplyT(func(v ErrorResponseInvokeResponse) []ErrorDetailInvokeResponse { return v.Details }).(ErrorDetailInvokeResponseArrayOutput)
}

// Error message.
func (o ErrorResponseInvokeResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorResponseInvokeResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Error response information.
type ErrorResponseResponse struct {
	// Error code.
	Code string `pulumi:"code"`
	// An array of error detail objects.
	Details []ErrorDetailResponse `pulumi:"details"`
	// Error message.
	Message string `pulumi:"message"`
}

// ErrorResponseResponseInput is an input type that accepts ErrorResponseResponseArgs and ErrorResponseResponseOutput values.
// You can construct a concrete instance of `ErrorResponseResponseInput` via:
//
//          ErrorResponseResponseArgs{...}
type ErrorResponseResponseInput interface {
	pulumi.Input

	ToErrorResponseResponseOutput() ErrorResponseResponseOutput
	ToErrorResponseResponseOutputWithContext(context.Context) ErrorResponseResponseOutput
}

// Error response information.
type ErrorResponseResponseArgs struct {
	// Error code.
	Code pulumi.StringInput `pulumi:"code"`
	// An array of error detail objects.
	Details ErrorDetailResponseArrayInput `pulumi:"details"`
	// Error message.
	Message pulumi.StringInput `pulumi:"message"`
}

func (ErrorResponseResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponseResponse)(nil)).Elem()
}

func (i ErrorResponseResponseArgs) ToErrorResponseResponseOutput() ErrorResponseResponseOutput {
	return i.ToErrorResponseResponseOutputWithContext(context.Background())
}

func (i ErrorResponseResponseArgs) ToErrorResponseResponseOutputWithContext(ctx context.Context) ErrorResponseResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorResponseResponseOutput)
}

// Error response information.
type ErrorResponseResponseOutput struct{ *pulumi.OutputState }

func (ErrorResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponseResponse)(nil)).Elem()
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponseOutput() ErrorResponseResponseOutput {
	return o
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponseOutputWithContext(ctx context.Context) ErrorResponseResponseOutput {
	return o
}

// Error code.
func (o ErrorResponseResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorResponseResponse) string { return v.Code }).(pulumi.StringOutput)
}

// An array of error detail objects.
func (o ErrorResponseResponseOutput) Details() ErrorDetailResponseArrayOutput {
	return o.ApplyT(func(v ErrorResponseResponse) []ErrorDetailResponse { return v.Details }).(ErrorDetailResponseArrayOutput)
}

// Error message.
func (o ErrorResponseResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorResponseResponse) string { return v.Message }).(pulumi.StringOutput)
}

// A HDInsight compute.
type HDInsight struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'HDInsight'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string              `pulumi:"description"`
	Properties  *HDInsightProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// HDInsightInput is an input type that accepts HDInsightArgs and HDInsightOutput values.
// You can construct a concrete instance of `HDInsightInput` via:
//
//          HDInsightArgs{...}
type HDInsightInput interface {
	pulumi.Input

	ToHDInsightOutput() HDInsightOutput
	ToHDInsightOutputWithContext(context.Context) HDInsightOutput
}

// A HDInsight compute.
type HDInsightArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'HDInsight'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput       `pulumi:"description"`
	Properties  HDInsightPropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (HDInsightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsight)(nil)).Elem()
}

func (i HDInsightArgs) ToHDInsightOutput() HDInsightOutput {
	return i.ToHDInsightOutputWithContext(context.Background())
}

func (i HDInsightArgs) ToHDInsightOutputWithContext(ctx context.Context) HDInsightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightOutput)
}

// A HDInsight compute.
type HDInsightOutput struct{ *pulumi.OutputState }

func (HDInsightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsight)(nil)).Elem()
}

func (o HDInsightOutput) ToHDInsightOutput() HDInsightOutput {
	return o
}

func (o HDInsightOutput) ToHDInsightOutputWithContext(ctx context.Context) HDInsightOutput {
	return o
}

// Location for the underlying compute
func (o HDInsightOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsight) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'HDInsight'.
func (o HDInsightOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsight) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o HDInsightOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsight) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o HDInsightOutput) Properties() HDInsightPropertiesPtrOutput {
	return o.ApplyT(func(v HDInsight) *HDInsightProperties { return v.Properties }).(HDInsightPropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o HDInsightOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsight) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// A HDInsight compute.
type HDInsightInvokeResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'HDInsight'.
	ComputeType string `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn string                             `pulumi:"modifiedOn"`
	Properties *HDInsightInvokeResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorInvokeResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// HDInsightInvokeResponseInput is an input type that accepts HDInsightInvokeResponseArgs and HDInsightInvokeResponseOutput values.
// You can construct a concrete instance of `HDInsightInvokeResponseInput` via:
//
//          HDInsightInvokeResponseArgs{...}
type HDInsightInvokeResponseInput interface {
	pulumi.Input

	ToHDInsightInvokeResponseOutput() HDInsightInvokeResponseOutput
	ToHDInsightInvokeResponseOutputWithContext(context.Context) HDInsightInvokeResponseOutput
}

// A HDInsight compute.
type HDInsightInvokeResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'HDInsight'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn pulumi.StringInput                        `pulumi:"modifiedOn"`
	Properties HDInsightInvokeResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorInvokeResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (HDInsightInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightInvokeResponse)(nil)).Elem()
}

func (i HDInsightInvokeResponseArgs) ToHDInsightInvokeResponseOutput() HDInsightInvokeResponseOutput {
	return i.ToHDInsightInvokeResponseOutputWithContext(context.Background())
}

func (i HDInsightInvokeResponseArgs) ToHDInsightInvokeResponseOutputWithContext(ctx context.Context) HDInsightInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightInvokeResponseOutput)
}

// A HDInsight compute.
type HDInsightInvokeResponseOutput struct{ *pulumi.OutputState }

func (HDInsightInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightInvokeResponse)(nil)).Elem()
}

func (o HDInsightInvokeResponseOutput) ToHDInsightInvokeResponseOutput() HDInsightInvokeResponseOutput {
	return o
}

func (o HDInsightInvokeResponseOutput) ToHDInsightInvokeResponseOutputWithContext(ctx context.Context) HDInsightInvokeResponseOutput {
	return o
}

// Location for the underlying compute
func (o HDInsightInvokeResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightInvokeResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'HDInsight'.
func (o HDInsightInvokeResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightInvokeResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The date and time when the compute was created.
func (o HDInsightInvokeResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightInvokeResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o HDInsightInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o HDInsightInvokeResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v HDInsightInvokeResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The date and time when the compute was last modified.
func (o HDInsightInvokeResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightInvokeResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

func (o HDInsightInvokeResponseOutput) Properties() HDInsightInvokeResponsePropertiesPtrOutput {
	return o.ApplyT(func(v HDInsightInvokeResponse) *HDInsightInvokeResponseProperties { return v.Properties }).(HDInsightInvokeResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o HDInsightInvokeResponseOutput) ProvisioningErrors() MachineLearningServiceErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v HDInsightInvokeResponse) []MachineLearningServiceErrorInvokeResponse {
		return v.ProvisioningErrors
	}).(MachineLearningServiceErrorInvokeResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o HDInsightInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o HDInsightInvokeResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightInvokeResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type HDInsightInvokeResponseProperties struct {
	// Public IP address of the master node of the cluster.
	Address *string `pulumi:"address"`
	// Admin credentials for master node of the cluster
	AdministratorAccount *VirtualMachineSshCredentialsInvokeResponse `pulumi:"administratorAccount"`
	// Port open for ssh connections on the master node of the cluster.
	SshPort *int `pulumi:"sshPort"`
}

// HDInsightInvokeResponsePropertiesInput is an input type that accepts HDInsightInvokeResponsePropertiesArgs and HDInsightInvokeResponsePropertiesOutput values.
// You can construct a concrete instance of `HDInsightInvokeResponsePropertiesInput` via:
//
//          HDInsightInvokeResponsePropertiesArgs{...}
type HDInsightInvokeResponsePropertiesInput interface {
	pulumi.Input

	ToHDInsightInvokeResponsePropertiesOutput() HDInsightInvokeResponsePropertiesOutput
	ToHDInsightInvokeResponsePropertiesOutputWithContext(context.Context) HDInsightInvokeResponsePropertiesOutput
}

type HDInsightInvokeResponsePropertiesArgs struct {
	// Public IP address of the master node of the cluster.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Admin credentials for master node of the cluster
	AdministratorAccount VirtualMachineSshCredentialsInvokeResponsePtrInput `pulumi:"administratorAccount"`
	// Port open for ssh connections on the master node of the cluster.
	SshPort pulumi.IntPtrInput `pulumi:"sshPort"`
}

func (HDInsightInvokeResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightInvokeResponseProperties)(nil)).Elem()
}

func (i HDInsightInvokeResponsePropertiesArgs) ToHDInsightInvokeResponsePropertiesOutput() HDInsightInvokeResponsePropertiesOutput {
	return i.ToHDInsightInvokeResponsePropertiesOutputWithContext(context.Background())
}

func (i HDInsightInvokeResponsePropertiesArgs) ToHDInsightInvokeResponsePropertiesOutputWithContext(ctx context.Context) HDInsightInvokeResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightInvokeResponsePropertiesOutput)
}

func (i HDInsightInvokeResponsePropertiesArgs) ToHDInsightInvokeResponsePropertiesPtrOutput() HDInsightInvokeResponsePropertiesPtrOutput {
	return i.ToHDInsightInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i HDInsightInvokeResponsePropertiesArgs) ToHDInsightInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) HDInsightInvokeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightInvokeResponsePropertiesOutput).ToHDInsightInvokeResponsePropertiesPtrOutputWithContext(ctx)
}

// HDInsightInvokeResponsePropertiesPtrInput is an input type that accepts HDInsightInvokeResponsePropertiesArgs, HDInsightInvokeResponsePropertiesPtr and HDInsightInvokeResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `HDInsightInvokeResponsePropertiesPtrInput` via:
//
//          HDInsightInvokeResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type HDInsightInvokeResponsePropertiesPtrInput interface {
	pulumi.Input

	ToHDInsightInvokeResponsePropertiesPtrOutput() HDInsightInvokeResponsePropertiesPtrOutput
	ToHDInsightInvokeResponsePropertiesPtrOutputWithContext(context.Context) HDInsightInvokeResponsePropertiesPtrOutput
}

type hdinsightInvokeResponsePropertiesPtrType HDInsightInvokeResponsePropertiesArgs

func HDInsightInvokeResponsePropertiesPtr(v *HDInsightInvokeResponsePropertiesArgs) HDInsightInvokeResponsePropertiesPtrInput {
	return (*hdinsightInvokeResponsePropertiesPtrType)(v)
}

func (*hdinsightInvokeResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HDInsightInvokeResponseProperties)(nil)).Elem()
}

func (i *hdinsightInvokeResponsePropertiesPtrType) ToHDInsightInvokeResponsePropertiesPtrOutput() HDInsightInvokeResponsePropertiesPtrOutput {
	return i.ToHDInsightInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *hdinsightInvokeResponsePropertiesPtrType) ToHDInsightInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) HDInsightInvokeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightInvokeResponsePropertiesPtrOutput)
}

type HDInsightInvokeResponsePropertiesOutput struct{ *pulumi.OutputState }

func (HDInsightInvokeResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightInvokeResponseProperties)(nil)).Elem()
}

func (o HDInsightInvokeResponsePropertiesOutput) ToHDInsightInvokeResponsePropertiesOutput() HDInsightInvokeResponsePropertiesOutput {
	return o
}

func (o HDInsightInvokeResponsePropertiesOutput) ToHDInsightInvokeResponsePropertiesOutputWithContext(ctx context.Context) HDInsightInvokeResponsePropertiesOutput {
	return o
}

func (o HDInsightInvokeResponsePropertiesOutput) ToHDInsightInvokeResponsePropertiesPtrOutput() HDInsightInvokeResponsePropertiesPtrOutput {
	return o.ToHDInsightInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o HDInsightInvokeResponsePropertiesOutput) ToHDInsightInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) HDInsightInvokeResponsePropertiesPtrOutput {
	return o.ApplyT(func(v HDInsightInvokeResponseProperties) *HDInsightInvokeResponseProperties {
		return &v
	}).(HDInsightInvokeResponsePropertiesPtrOutput)
}

// Public IP address of the master node of the cluster.
func (o HDInsightInvokeResponsePropertiesOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightInvokeResponseProperties) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Admin credentials for master node of the cluster
func (o HDInsightInvokeResponsePropertiesOutput) AdministratorAccount() VirtualMachineSshCredentialsInvokeResponsePtrOutput {
	return o.ApplyT(func(v HDInsightInvokeResponseProperties) *VirtualMachineSshCredentialsInvokeResponse {
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsInvokeResponsePtrOutput)
}

// Port open for ssh connections on the master node of the cluster.
func (o HDInsightInvokeResponsePropertiesOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HDInsightInvokeResponseProperties) *int { return v.SshPort }).(pulumi.IntPtrOutput)
}

type HDInsightInvokeResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (HDInsightInvokeResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HDInsightInvokeResponseProperties)(nil)).Elem()
}

func (o HDInsightInvokeResponsePropertiesPtrOutput) ToHDInsightInvokeResponsePropertiesPtrOutput() HDInsightInvokeResponsePropertiesPtrOutput {
	return o
}

func (o HDInsightInvokeResponsePropertiesPtrOutput) ToHDInsightInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) HDInsightInvokeResponsePropertiesPtrOutput {
	return o
}

func (o HDInsightInvokeResponsePropertiesPtrOutput) Elem() HDInsightInvokeResponsePropertiesOutput {
	return o.ApplyT(func(v *HDInsightInvokeResponseProperties) HDInsightInvokeResponseProperties { return *v }).(HDInsightInvokeResponsePropertiesOutput)
}

// Public IP address of the master node of the cluster.
func (o HDInsightInvokeResponsePropertiesPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HDInsightInvokeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for master node of the cluster
func (o HDInsightInvokeResponsePropertiesPtrOutput) AdministratorAccount() VirtualMachineSshCredentialsInvokeResponsePtrOutput {
	return o.ApplyT(func(v *HDInsightInvokeResponseProperties) *VirtualMachineSshCredentialsInvokeResponse {
		if v == nil {
			return nil
		}
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsInvokeResponsePtrOutput)
}

// Port open for ssh connections on the master node of the cluster.
func (o HDInsightInvokeResponsePropertiesPtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HDInsightInvokeResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.SshPort
	}).(pulumi.IntPtrOutput)
}

type HDInsightProperties struct {
	// Public IP address of the master node of the cluster.
	Address *string `pulumi:"address"`
	// Admin credentials for master node of the cluster
	AdministratorAccount *VirtualMachineSshCredentials `pulumi:"administratorAccount"`
	// Port open for ssh connections on the master node of the cluster.
	SshPort *int `pulumi:"sshPort"`
}

// HDInsightPropertiesInput is an input type that accepts HDInsightPropertiesArgs and HDInsightPropertiesOutput values.
// You can construct a concrete instance of `HDInsightPropertiesInput` via:
//
//          HDInsightPropertiesArgs{...}
type HDInsightPropertiesInput interface {
	pulumi.Input

	ToHDInsightPropertiesOutput() HDInsightPropertiesOutput
	ToHDInsightPropertiesOutputWithContext(context.Context) HDInsightPropertiesOutput
}

type HDInsightPropertiesArgs struct {
	// Public IP address of the master node of the cluster.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Admin credentials for master node of the cluster
	AdministratorAccount VirtualMachineSshCredentialsPtrInput `pulumi:"administratorAccount"`
	// Port open for ssh connections on the master node of the cluster.
	SshPort pulumi.IntPtrInput `pulumi:"sshPort"`
}

func (HDInsightPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightProperties)(nil)).Elem()
}

func (i HDInsightPropertiesArgs) ToHDInsightPropertiesOutput() HDInsightPropertiesOutput {
	return i.ToHDInsightPropertiesOutputWithContext(context.Background())
}

func (i HDInsightPropertiesArgs) ToHDInsightPropertiesOutputWithContext(ctx context.Context) HDInsightPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightPropertiesOutput)
}

func (i HDInsightPropertiesArgs) ToHDInsightPropertiesPtrOutput() HDInsightPropertiesPtrOutput {
	return i.ToHDInsightPropertiesPtrOutputWithContext(context.Background())
}

func (i HDInsightPropertiesArgs) ToHDInsightPropertiesPtrOutputWithContext(ctx context.Context) HDInsightPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightPropertiesOutput).ToHDInsightPropertiesPtrOutputWithContext(ctx)
}

// HDInsightPropertiesPtrInput is an input type that accepts HDInsightPropertiesArgs, HDInsightPropertiesPtr and HDInsightPropertiesPtrOutput values.
// You can construct a concrete instance of `HDInsightPropertiesPtrInput` via:
//
//          HDInsightPropertiesArgs{...}
//
//  or:
//
//          nil
type HDInsightPropertiesPtrInput interface {
	pulumi.Input

	ToHDInsightPropertiesPtrOutput() HDInsightPropertiesPtrOutput
	ToHDInsightPropertiesPtrOutputWithContext(context.Context) HDInsightPropertiesPtrOutput
}

type hdinsightPropertiesPtrType HDInsightPropertiesArgs

func HDInsightPropertiesPtr(v *HDInsightPropertiesArgs) HDInsightPropertiesPtrInput {
	return (*hdinsightPropertiesPtrType)(v)
}

func (*hdinsightPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HDInsightProperties)(nil)).Elem()
}

func (i *hdinsightPropertiesPtrType) ToHDInsightPropertiesPtrOutput() HDInsightPropertiesPtrOutput {
	return i.ToHDInsightPropertiesPtrOutputWithContext(context.Background())
}

func (i *hdinsightPropertiesPtrType) ToHDInsightPropertiesPtrOutputWithContext(ctx context.Context) HDInsightPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightPropertiesPtrOutput)
}

type HDInsightPropertiesOutput struct{ *pulumi.OutputState }

func (HDInsightPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightProperties)(nil)).Elem()
}

func (o HDInsightPropertiesOutput) ToHDInsightPropertiesOutput() HDInsightPropertiesOutput {
	return o
}

func (o HDInsightPropertiesOutput) ToHDInsightPropertiesOutputWithContext(ctx context.Context) HDInsightPropertiesOutput {
	return o
}

func (o HDInsightPropertiesOutput) ToHDInsightPropertiesPtrOutput() HDInsightPropertiesPtrOutput {
	return o.ToHDInsightPropertiesPtrOutputWithContext(context.Background())
}

func (o HDInsightPropertiesOutput) ToHDInsightPropertiesPtrOutputWithContext(ctx context.Context) HDInsightPropertiesPtrOutput {
	return o.ApplyT(func(v HDInsightProperties) *HDInsightProperties {
		return &v
	}).(HDInsightPropertiesPtrOutput)
}

// Public IP address of the master node of the cluster.
func (o HDInsightPropertiesOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightProperties) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Admin credentials for master node of the cluster
func (o HDInsightPropertiesOutput) AdministratorAccount() VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyT(func(v HDInsightProperties) *VirtualMachineSshCredentials { return v.AdministratorAccount }).(VirtualMachineSshCredentialsPtrOutput)
}

// Port open for ssh connections on the master node of the cluster.
func (o HDInsightPropertiesOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HDInsightProperties) *int { return v.SshPort }).(pulumi.IntPtrOutput)
}

type HDInsightPropertiesPtrOutput struct{ *pulumi.OutputState }

func (HDInsightPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HDInsightProperties)(nil)).Elem()
}

func (o HDInsightPropertiesPtrOutput) ToHDInsightPropertiesPtrOutput() HDInsightPropertiesPtrOutput {
	return o
}

func (o HDInsightPropertiesPtrOutput) ToHDInsightPropertiesPtrOutputWithContext(ctx context.Context) HDInsightPropertiesPtrOutput {
	return o
}

func (o HDInsightPropertiesPtrOutput) Elem() HDInsightPropertiesOutput {
	return o.ApplyT(func(v *HDInsightProperties) HDInsightProperties { return *v }).(HDInsightPropertiesOutput)
}

// Public IP address of the master node of the cluster.
func (o HDInsightPropertiesPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HDInsightProperties) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for master node of the cluster
func (o HDInsightPropertiesPtrOutput) AdministratorAccount() VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyT(func(v *HDInsightProperties) *VirtualMachineSshCredentials {
		if v == nil {
			return nil
		}
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsPtrOutput)
}

// Port open for ssh connections on the master node of the cluster.
func (o HDInsightPropertiesPtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HDInsightProperties) *int {
		if v == nil {
			return nil
		}
		return v.SshPort
	}).(pulumi.IntPtrOutput)
}

// A HDInsight compute.
type HDInsightResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'HDInsight'.
	ComputeType string `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn string                       `pulumi:"modifiedOn"`
	Properties *HDInsightResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// HDInsightResponseInput is an input type that accepts HDInsightResponseArgs and HDInsightResponseOutput values.
// You can construct a concrete instance of `HDInsightResponseInput` via:
//
//          HDInsightResponseArgs{...}
type HDInsightResponseInput interface {
	pulumi.Input

	ToHDInsightResponseOutput() HDInsightResponseOutput
	ToHDInsightResponseOutputWithContext(context.Context) HDInsightResponseOutput
}

// A HDInsight compute.
type HDInsightResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'HDInsight'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn pulumi.StringInput                  `pulumi:"modifiedOn"`
	Properties HDInsightResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (HDInsightResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightResponse)(nil)).Elem()
}

func (i HDInsightResponseArgs) ToHDInsightResponseOutput() HDInsightResponseOutput {
	return i.ToHDInsightResponseOutputWithContext(context.Background())
}

func (i HDInsightResponseArgs) ToHDInsightResponseOutputWithContext(ctx context.Context) HDInsightResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightResponseOutput)
}

// A HDInsight compute.
type HDInsightResponseOutput struct{ *pulumi.OutputState }

func (HDInsightResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightResponse)(nil)).Elem()
}

func (o HDInsightResponseOutput) ToHDInsightResponseOutput() HDInsightResponseOutput {
	return o
}

func (o HDInsightResponseOutput) ToHDInsightResponseOutputWithContext(ctx context.Context) HDInsightResponseOutput {
	return o
}

// Location for the underlying compute
func (o HDInsightResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'HDInsight'.
func (o HDInsightResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The date and time when the compute was created.
func (o HDInsightResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o HDInsightResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o HDInsightResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v HDInsightResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The date and time when the compute was last modified.
func (o HDInsightResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

func (o HDInsightResponseOutput) Properties() HDInsightResponsePropertiesPtrOutput {
	return o.ApplyT(func(v HDInsightResponse) *HDInsightResponseProperties { return v.Properties }).(HDInsightResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o HDInsightResponseOutput) ProvisioningErrors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v HDInsightResponse) []MachineLearningServiceErrorResponse { return v.ProvisioningErrors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o HDInsightResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v HDInsightResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o HDInsightResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type HDInsightResponseProperties struct {
	// Public IP address of the master node of the cluster.
	Address *string `pulumi:"address"`
	// Admin credentials for master node of the cluster
	AdministratorAccount *VirtualMachineSshCredentialsResponse `pulumi:"administratorAccount"`
	// Port open for ssh connections on the master node of the cluster.
	SshPort *int `pulumi:"sshPort"`
}

// HDInsightResponsePropertiesInput is an input type that accepts HDInsightResponsePropertiesArgs and HDInsightResponsePropertiesOutput values.
// You can construct a concrete instance of `HDInsightResponsePropertiesInput` via:
//
//          HDInsightResponsePropertiesArgs{...}
type HDInsightResponsePropertiesInput interface {
	pulumi.Input

	ToHDInsightResponsePropertiesOutput() HDInsightResponsePropertiesOutput
	ToHDInsightResponsePropertiesOutputWithContext(context.Context) HDInsightResponsePropertiesOutput
}

type HDInsightResponsePropertiesArgs struct {
	// Public IP address of the master node of the cluster.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Admin credentials for master node of the cluster
	AdministratorAccount VirtualMachineSshCredentialsResponsePtrInput `pulumi:"administratorAccount"`
	// Port open for ssh connections on the master node of the cluster.
	SshPort pulumi.IntPtrInput `pulumi:"sshPort"`
}

func (HDInsightResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightResponseProperties)(nil)).Elem()
}

func (i HDInsightResponsePropertiesArgs) ToHDInsightResponsePropertiesOutput() HDInsightResponsePropertiesOutput {
	return i.ToHDInsightResponsePropertiesOutputWithContext(context.Background())
}

func (i HDInsightResponsePropertiesArgs) ToHDInsightResponsePropertiesOutputWithContext(ctx context.Context) HDInsightResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightResponsePropertiesOutput)
}

func (i HDInsightResponsePropertiesArgs) ToHDInsightResponsePropertiesPtrOutput() HDInsightResponsePropertiesPtrOutput {
	return i.ToHDInsightResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i HDInsightResponsePropertiesArgs) ToHDInsightResponsePropertiesPtrOutputWithContext(ctx context.Context) HDInsightResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightResponsePropertiesOutput).ToHDInsightResponsePropertiesPtrOutputWithContext(ctx)
}

// HDInsightResponsePropertiesPtrInput is an input type that accepts HDInsightResponsePropertiesArgs, HDInsightResponsePropertiesPtr and HDInsightResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `HDInsightResponsePropertiesPtrInput` via:
//
//          HDInsightResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type HDInsightResponsePropertiesPtrInput interface {
	pulumi.Input

	ToHDInsightResponsePropertiesPtrOutput() HDInsightResponsePropertiesPtrOutput
	ToHDInsightResponsePropertiesPtrOutputWithContext(context.Context) HDInsightResponsePropertiesPtrOutput
}

type hdinsightResponsePropertiesPtrType HDInsightResponsePropertiesArgs

func HDInsightResponsePropertiesPtr(v *HDInsightResponsePropertiesArgs) HDInsightResponsePropertiesPtrInput {
	return (*hdinsightResponsePropertiesPtrType)(v)
}

func (*hdinsightResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HDInsightResponseProperties)(nil)).Elem()
}

func (i *hdinsightResponsePropertiesPtrType) ToHDInsightResponsePropertiesPtrOutput() HDInsightResponsePropertiesPtrOutput {
	return i.ToHDInsightResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *hdinsightResponsePropertiesPtrType) ToHDInsightResponsePropertiesPtrOutputWithContext(ctx context.Context) HDInsightResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HDInsightResponsePropertiesPtrOutput)
}

type HDInsightResponsePropertiesOutput struct{ *pulumi.OutputState }

func (HDInsightResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HDInsightResponseProperties)(nil)).Elem()
}

func (o HDInsightResponsePropertiesOutput) ToHDInsightResponsePropertiesOutput() HDInsightResponsePropertiesOutput {
	return o
}

func (o HDInsightResponsePropertiesOutput) ToHDInsightResponsePropertiesOutputWithContext(ctx context.Context) HDInsightResponsePropertiesOutput {
	return o
}

func (o HDInsightResponsePropertiesOutput) ToHDInsightResponsePropertiesPtrOutput() HDInsightResponsePropertiesPtrOutput {
	return o.ToHDInsightResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o HDInsightResponsePropertiesOutput) ToHDInsightResponsePropertiesPtrOutputWithContext(ctx context.Context) HDInsightResponsePropertiesPtrOutput {
	return o.ApplyT(func(v HDInsightResponseProperties) *HDInsightResponseProperties {
		return &v
	}).(HDInsightResponsePropertiesPtrOutput)
}

// Public IP address of the master node of the cluster.
func (o HDInsightResponsePropertiesOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HDInsightResponseProperties) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Admin credentials for master node of the cluster
func (o HDInsightResponsePropertiesOutput) AdministratorAccount() VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ApplyT(func(v HDInsightResponseProperties) *VirtualMachineSshCredentialsResponse {
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Port open for ssh connections on the master node of the cluster.
func (o HDInsightResponsePropertiesOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HDInsightResponseProperties) *int { return v.SshPort }).(pulumi.IntPtrOutput)
}

type HDInsightResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (HDInsightResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HDInsightResponseProperties)(nil)).Elem()
}

func (o HDInsightResponsePropertiesPtrOutput) ToHDInsightResponsePropertiesPtrOutput() HDInsightResponsePropertiesPtrOutput {
	return o
}

func (o HDInsightResponsePropertiesPtrOutput) ToHDInsightResponsePropertiesPtrOutputWithContext(ctx context.Context) HDInsightResponsePropertiesPtrOutput {
	return o
}

func (o HDInsightResponsePropertiesPtrOutput) Elem() HDInsightResponsePropertiesOutput {
	return o.ApplyT(func(v *HDInsightResponseProperties) HDInsightResponseProperties { return *v }).(HDInsightResponsePropertiesOutput)
}

// Public IP address of the master node of the cluster.
func (o HDInsightResponsePropertiesPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HDInsightResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for master node of the cluster
func (o HDInsightResponsePropertiesPtrOutput) AdministratorAccount() VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ApplyT(func(v *HDInsightResponseProperties) *VirtualMachineSshCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Port open for ssh connections on the master node of the cluster.
func (o HDInsightResponsePropertiesPtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HDInsightResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.SshPort
	}).(pulumi.IntPtrOutput)
}

// Identity for the resource.
type Identity struct {
	// The identity type.
	Type *string `pulumi:"type"`
	// The user assigned identities associated with the resource.
	UserAssignedIdentities map[string]interface{} `pulumi:"userAssignedIdentities"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//          IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Identity for the resource.
type IdentityArgs struct {
	// The identity type.
	Type ResourceIdentityType `pulumi:"type"`
	// The user assigned identities associated with the resource.
	UserAssignedIdentities pulumi.MapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//          IdentityArgs{...}
//
//  or:
//
//          nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Identity for the resource.
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyT(func(v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// The identity type.
func (o IdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Identity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The user assigned identities associated with the resource.
func (o IdentityOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v Identity) map[string]interface{} { return v.UserAssignedIdentities }).(pulumi.MapOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity { return *v }).(IdentityOutput)
}

// The identity type.
func (o IdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The user assigned identities associated with the resource.
func (o IdentityPtrOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v *Identity) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.MapOutput)
}

// Identity for the resource.
type IdentityInvokeResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
	// The user assigned identities associated with the resource.
	UserAssignedIdentities map[string]UserAssignedIdentityInvokeResponse `pulumi:"userAssignedIdentities"`
}

// IdentityInvokeResponseInput is an input type that accepts IdentityInvokeResponseArgs and IdentityInvokeResponseOutput values.
// You can construct a concrete instance of `IdentityInvokeResponseInput` via:
//
//          IdentityInvokeResponseArgs{...}
type IdentityInvokeResponseInput interface {
	pulumi.Input

	ToIdentityInvokeResponseOutput() IdentityInvokeResponseOutput
	ToIdentityInvokeResponseOutputWithContext(context.Context) IdentityInvokeResponseOutput
}

// Identity for the resource.
type IdentityInvokeResponseArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The user assigned identities associated with the resource.
	UserAssignedIdentities UserAssignedIdentityInvokeResponseMapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityInvokeResponse)(nil)).Elem()
}

func (i IdentityInvokeResponseArgs) ToIdentityInvokeResponseOutput() IdentityInvokeResponseOutput {
	return i.ToIdentityInvokeResponseOutputWithContext(context.Background())
}

func (i IdentityInvokeResponseArgs) ToIdentityInvokeResponseOutputWithContext(ctx context.Context) IdentityInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityInvokeResponseOutput)
}

func (i IdentityInvokeResponseArgs) ToIdentityInvokeResponsePtrOutput() IdentityInvokeResponsePtrOutput {
	return i.ToIdentityInvokeResponsePtrOutputWithContext(context.Background())
}

func (i IdentityInvokeResponseArgs) ToIdentityInvokeResponsePtrOutputWithContext(ctx context.Context) IdentityInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityInvokeResponseOutput).ToIdentityInvokeResponsePtrOutputWithContext(ctx)
}

// IdentityInvokeResponsePtrInput is an input type that accepts IdentityInvokeResponseArgs, IdentityInvokeResponsePtr and IdentityInvokeResponsePtrOutput values.
// You can construct a concrete instance of `IdentityInvokeResponsePtrInput` via:
//
//          IdentityInvokeResponseArgs{...}
//
//  or:
//
//          nil
type IdentityInvokeResponsePtrInput interface {
	pulumi.Input

	ToIdentityInvokeResponsePtrOutput() IdentityInvokeResponsePtrOutput
	ToIdentityInvokeResponsePtrOutputWithContext(context.Context) IdentityInvokeResponsePtrOutput
}

type identityInvokeResponsePtrType IdentityInvokeResponseArgs

func IdentityInvokeResponsePtr(v *IdentityInvokeResponseArgs) IdentityInvokeResponsePtrInput {
	return (*identityInvokeResponsePtrType)(v)
}

func (*identityInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityInvokeResponse)(nil)).Elem()
}

func (i *identityInvokeResponsePtrType) ToIdentityInvokeResponsePtrOutput() IdentityInvokeResponsePtrOutput {
	return i.ToIdentityInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *identityInvokeResponsePtrType) ToIdentityInvokeResponsePtrOutputWithContext(ctx context.Context) IdentityInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityInvokeResponsePtrOutput)
}

// Identity for the resource.
type IdentityInvokeResponseOutput struct{ *pulumi.OutputState }

func (IdentityInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityInvokeResponse)(nil)).Elem()
}

func (o IdentityInvokeResponseOutput) ToIdentityInvokeResponseOutput() IdentityInvokeResponseOutput {
	return o
}

func (o IdentityInvokeResponseOutput) ToIdentityInvokeResponseOutputWithContext(ctx context.Context) IdentityInvokeResponseOutput {
	return o
}

func (o IdentityInvokeResponseOutput) ToIdentityInvokeResponsePtrOutput() IdentityInvokeResponsePtrOutput {
	return o.ToIdentityInvokeResponsePtrOutputWithContext(context.Background())
}

func (o IdentityInvokeResponseOutput) ToIdentityInvokeResponsePtrOutputWithContext(ctx context.Context) IdentityInvokeResponsePtrOutput {
	return o.ApplyT(func(v IdentityInvokeResponse) *IdentityInvokeResponse {
		return &v
	}).(IdentityInvokeResponsePtrOutput)
}

// The principal ID of resource identity.
func (o IdentityInvokeResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityInvokeResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityInvokeResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityInvokeResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type.
func (o IdentityInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The user assigned identities associated with the resource.
func (o IdentityInvokeResponseOutput) UserAssignedIdentities() UserAssignedIdentityInvokeResponseMapOutput {
	return o.ApplyT(func(v IdentityInvokeResponse) map[string]UserAssignedIdentityInvokeResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityInvokeResponseMapOutput)
}

type IdentityInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityInvokeResponse)(nil)).Elem()
}

func (o IdentityInvokeResponsePtrOutput) ToIdentityInvokeResponsePtrOutput() IdentityInvokeResponsePtrOutput {
	return o
}

func (o IdentityInvokeResponsePtrOutput) ToIdentityInvokeResponsePtrOutputWithContext(ctx context.Context) IdentityInvokeResponsePtrOutput {
	return o
}

func (o IdentityInvokeResponsePtrOutput) Elem() IdentityInvokeResponseOutput {
	return o.ApplyT(func(v *IdentityInvokeResponse) IdentityInvokeResponse { return *v }).(IdentityInvokeResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityInvokeResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityInvokeResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityInvokeResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The user assigned identities associated with the resource.
func (o IdentityInvokeResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityInvokeResponseMapOutput {
	return o.ApplyT(func(v *IdentityInvokeResponse) map[string]UserAssignedIdentityInvokeResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityInvokeResponseMapOutput)
}

// Identity for the resource.
type IdentityResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
	// The user assigned identities associated with the resource.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// IdentityResponseInput is an input type that accepts IdentityResponseArgs and IdentityResponseOutput values.
// You can construct a concrete instance of `IdentityResponseInput` via:
//
//          IdentityResponseArgs{...}
type IdentityResponseInput interface {
	pulumi.Input

	ToIdentityResponseOutput() IdentityResponseOutput
	ToIdentityResponseOutputWithContext(context.Context) IdentityResponseOutput
}

// Identity for the resource.
type IdentityResponseArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The user assigned identities associated with the resource.
	UserAssignedIdentities UserAssignedIdentityResponseMapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (i IdentityResponseArgs) ToIdentityResponseOutput() IdentityResponseOutput {
	return i.ToIdentityResponseOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput)
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput).ToIdentityResponsePtrOutputWithContext(ctx)
}

// IdentityResponsePtrInput is an input type that accepts IdentityResponseArgs, IdentityResponsePtr and IdentityResponsePtrOutput values.
// You can construct a concrete instance of `IdentityResponsePtrInput` via:
//
//          IdentityResponseArgs{...}
//
//  or:
//
//          nil
type IdentityResponsePtrInput interface {
	pulumi.Input

	ToIdentityResponsePtrOutput() IdentityResponsePtrOutput
	ToIdentityResponsePtrOutputWithContext(context.Context) IdentityResponsePtrOutput
}

type identityResponsePtrType IdentityResponseArgs

func IdentityResponsePtr(v *IdentityResponseArgs) IdentityResponsePtrInput {
	return (*identityResponsePtrType)(v)
}

func (*identityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponsePtrOutput)
}

// Identity for the resource.
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o.ApplyT(func(v IdentityResponse) *IdentityResponse {
		return &v
	}).(IdentityResponsePtrOutput)
}

// The principal ID of resource identity.
func (o IdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type.
func (o IdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The user assigned identities associated with the resource.
func (o IdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v IdentityResponse) map[string]UserAssignedIdentityResponse { return v.UserAssignedIdentities }).(UserAssignedIdentityResponseMapOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse { return *v }).(IdentityResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The user assigned identities associated with the resource.
func (o IdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *IdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// An Image asset.
type ImageAsset struct {
	// The Asset Id.
	Id *string `pulumi:"id"`
	// The mime type.
	MimeType *string `pulumi:"mimeType"`
	// Whether the Asset is unpacked.
	Unpack *bool `pulumi:"unpack"`
	// The Url of the Asset.
	Url *string `pulumi:"url"`
}

// ImageAssetInput is an input type that accepts ImageAssetArgs and ImageAssetOutput values.
// You can construct a concrete instance of `ImageAssetInput` via:
//
//          ImageAssetArgs{...}
type ImageAssetInput interface {
	pulumi.Input

	ToImageAssetOutput() ImageAssetOutput
	ToImageAssetOutputWithContext(context.Context) ImageAssetOutput
}

// An Image asset.
type ImageAssetArgs struct {
	// The Asset Id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The mime type.
	MimeType pulumi.StringPtrInput `pulumi:"mimeType"`
	// Whether the Asset is unpacked.
	Unpack pulumi.BoolPtrInput `pulumi:"unpack"`
	// The Url of the Asset.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ImageAssetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageAsset)(nil)).Elem()
}

func (i ImageAssetArgs) ToImageAssetOutput() ImageAssetOutput {
	return i.ToImageAssetOutputWithContext(context.Background())
}

func (i ImageAssetArgs) ToImageAssetOutputWithContext(ctx context.Context) ImageAssetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageAssetOutput)
}

// ImageAssetArrayInput is an input type that accepts ImageAssetArray and ImageAssetArrayOutput values.
// You can construct a concrete instance of `ImageAssetArrayInput` via:
//
//          ImageAssetArray{ ImageAssetArgs{...} }
type ImageAssetArrayInput interface {
	pulumi.Input

	ToImageAssetArrayOutput() ImageAssetArrayOutput
	ToImageAssetArrayOutputWithContext(context.Context) ImageAssetArrayOutput
}

type ImageAssetArray []ImageAssetInput

func (ImageAssetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageAsset)(nil)).Elem()
}

func (i ImageAssetArray) ToImageAssetArrayOutput() ImageAssetArrayOutput {
	return i.ToImageAssetArrayOutputWithContext(context.Background())
}

func (i ImageAssetArray) ToImageAssetArrayOutputWithContext(ctx context.Context) ImageAssetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageAssetArrayOutput)
}

// An Image asset.
type ImageAssetOutput struct{ *pulumi.OutputState }

func (ImageAssetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageAsset)(nil)).Elem()
}

func (o ImageAssetOutput) ToImageAssetOutput() ImageAssetOutput {
	return o
}

func (o ImageAssetOutput) ToImageAssetOutputWithContext(ctx context.Context) ImageAssetOutput {
	return o
}

// The Asset Id.
func (o ImageAssetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageAsset) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The mime type.
func (o ImageAssetOutput) MimeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageAsset) *string { return v.MimeType }).(pulumi.StringPtrOutput)
}

// Whether the Asset is unpacked.
func (o ImageAssetOutput) Unpack() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ImageAsset) *bool { return v.Unpack }).(pulumi.BoolPtrOutput)
}

// The Url of the Asset.
func (o ImageAssetOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageAsset) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ImageAssetArrayOutput struct{ *pulumi.OutputState }

func (ImageAssetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageAsset)(nil)).Elem()
}

func (o ImageAssetArrayOutput) ToImageAssetArrayOutput() ImageAssetArrayOutput {
	return o
}

func (o ImageAssetArrayOutput) ToImageAssetArrayOutputWithContext(ctx context.Context) ImageAssetArrayOutput {
	return o
}

func (o ImageAssetArrayOutput) Index(i pulumi.IntInput) ImageAssetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageAsset {
		return vs[0].([]ImageAsset)[vs[1].(int)]
	}).(ImageAssetOutput)
}

// An Image asset.
type ImageAssetInvokeResponse struct {
	// The Asset Id.
	Id *string `pulumi:"id"`
	// The mime type.
	MimeType *string `pulumi:"mimeType"`
	// Whether the Asset is unpacked.
	Unpack *bool `pulumi:"unpack"`
	// The Url of the Asset.
	Url *string `pulumi:"url"`
}

// ImageAssetInvokeResponseInput is an input type that accepts ImageAssetInvokeResponseArgs and ImageAssetInvokeResponseOutput values.
// You can construct a concrete instance of `ImageAssetInvokeResponseInput` via:
//
//          ImageAssetInvokeResponseArgs{...}
type ImageAssetInvokeResponseInput interface {
	pulumi.Input

	ToImageAssetInvokeResponseOutput() ImageAssetInvokeResponseOutput
	ToImageAssetInvokeResponseOutputWithContext(context.Context) ImageAssetInvokeResponseOutput
}

// An Image asset.
type ImageAssetInvokeResponseArgs struct {
	// The Asset Id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The mime type.
	MimeType pulumi.StringPtrInput `pulumi:"mimeType"`
	// Whether the Asset is unpacked.
	Unpack pulumi.BoolPtrInput `pulumi:"unpack"`
	// The Url of the Asset.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ImageAssetInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageAssetInvokeResponse)(nil)).Elem()
}

func (i ImageAssetInvokeResponseArgs) ToImageAssetInvokeResponseOutput() ImageAssetInvokeResponseOutput {
	return i.ToImageAssetInvokeResponseOutputWithContext(context.Background())
}

func (i ImageAssetInvokeResponseArgs) ToImageAssetInvokeResponseOutputWithContext(ctx context.Context) ImageAssetInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageAssetInvokeResponseOutput)
}

// ImageAssetInvokeResponseArrayInput is an input type that accepts ImageAssetInvokeResponseArray and ImageAssetInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ImageAssetInvokeResponseArrayInput` via:
//
//          ImageAssetInvokeResponseArray{ ImageAssetInvokeResponseArgs{...} }
type ImageAssetInvokeResponseArrayInput interface {
	pulumi.Input

	ToImageAssetInvokeResponseArrayOutput() ImageAssetInvokeResponseArrayOutput
	ToImageAssetInvokeResponseArrayOutputWithContext(context.Context) ImageAssetInvokeResponseArrayOutput
}

type ImageAssetInvokeResponseArray []ImageAssetInvokeResponseInput

func (ImageAssetInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageAssetInvokeResponse)(nil)).Elem()
}

func (i ImageAssetInvokeResponseArray) ToImageAssetInvokeResponseArrayOutput() ImageAssetInvokeResponseArrayOutput {
	return i.ToImageAssetInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ImageAssetInvokeResponseArray) ToImageAssetInvokeResponseArrayOutputWithContext(ctx context.Context) ImageAssetInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageAssetInvokeResponseArrayOutput)
}

// An Image asset.
type ImageAssetInvokeResponseOutput struct{ *pulumi.OutputState }

func (ImageAssetInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageAssetInvokeResponse)(nil)).Elem()
}

func (o ImageAssetInvokeResponseOutput) ToImageAssetInvokeResponseOutput() ImageAssetInvokeResponseOutput {
	return o
}

func (o ImageAssetInvokeResponseOutput) ToImageAssetInvokeResponseOutputWithContext(ctx context.Context) ImageAssetInvokeResponseOutput {
	return o
}

// The Asset Id.
func (o ImageAssetInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageAssetInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The mime type.
func (o ImageAssetInvokeResponseOutput) MimeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageAssetInvokeResponse) *string { return v.MimeType }).(pulumi.StringPtrOutput)
}

// Whether the Asset is unpacked.
func (o ImageAssetInvokeResponseOutput) Unpack() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ImageAssetInvokeResponse) *bool { return v.Unpack }).(pulumi.BoolPtrOutput)
}

// The Url of the Asset.
func (o ImageAssetInvokeResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageAssetInvokeResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ImageAssetInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ImageAssetInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageAssetInvokeResponse)(nil)).Elem()
}

func (o ImageAssetInvokeResponseArrayOutput) ToImageAssetInvokeResponseArrayOutput() ImageAssetInvokeResponseArrayOutput {
	return o
}

func (o ImageAssetInvokeResponseArrayOutput) ToImageAssetInvokeResponseArrayOutputWithContext(ctx context.Context) ImageAssetInvokeResponseArrayOutput {
	return o
}

func (o ImageAssetInvokeResponseArrayOutput) Index(i pulumi.IntInput) ImageAssetInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageAssetInvokeResponse {
		return vs[0].([]ImageAssetInvokeResponse)[vs[1].(int)]
	}).(ImageAssetInvokeResponseOutput)
}

// An Image asset.
type ImageAssetResponse struct {
	// The Asset Id.
	Id *string `pulumi:"id"`
	// The mime type.
	MimeType *string `pulumi:"mimeType"`
	// Whether the Asset is unpacked.
	Unpack *bool `pulumi:"unpack"`
	// The Url of the Asset.
	Url *string `pulumi:"url"`
}

// ImageAssetResponseInput is an input type that accepts ImageAssetResponseArgs and ImageAssetResponseOutput values.
// You can construct a concrete instance of `ImageAssetResponseInput` via:
//
//          ImageAssetResponseArgs{...}
type ImageAssetResponseInput interface {
	pulumi.Input

	ToImageAssetResponseOutput() ImageAssetResponseOutput
	ToImageAssetResponseOutputWithContext(context.Context) ImageAssetResponseOutput
}

// An Image asset.
type ImageAssetResponseArgs struct {
	// The Asset Id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The mime type.
	MimeType pulumi.StringPtrInput `pulumi:"mimeType"`
	// Whether the Asset is unpacked.
	Unpack pulumi.BoolPtrInput `pulumi:"unpack"`
	// The Url of the Asset.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ImageAssetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageAssetResponse)(nil)).Elem()
}

func (i ImageAssetResponseArgs) ToImageAssetResponseOutput() ImageAssetResponseOutput {
	return i.ToImageAssetResponseOutputWithContext(context.Background())
}

func (i ImageAssetResponseArgs) ToImageAssetResponseOutputWithContext(ctx context.Context) ImageAssetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageAssetResponseOutput)
}

// ImageAssetResponseArrayInput is an input type that accepts ImageAssetResponseArray and ImageAssetResponseArrayOutput values.
// You can construct a concrete instance of `ImageAssetResponseArrayInput` via:
//
//          ImageAssetResponseArray{ ImageAssetResponseArgs{...} }
type ImageAssetResponseArrayInput interface {
	pulumi.Input

	ToImageAssetResponseArrayOutput() ImageAssetResponseArrayOutput
	ToImageAssetResponseArrayOutputWithContext(context.Context) ImageAssetResponseArrayOutput
}

type ImageAssetResponseArray []ImageAssetResponseInput

func (ImageAssetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageAssetResponse)(nil)).Elem()
}

func (i ImageAssetResponseArray) ToImageAssetResponseArrayOutput() ImageAssetResponseArrayOutput {
	return i.ToImageAssetResponseArrayOutputWithContext(context.Background())
}

func (i ImageAssetResponseArray) ToImageAssetResponseArrayOutputWithContext(ctx context.Context) ImageAssetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageAssetResponseArrayOutput)
}

// An Image asset.
type ImageAssetResponseOutput struct{ *pulumi.OutputState }

func (ImageAssetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageAssetResponse)(nil)).Elem()
}

func (o ImageAssetResponseOutput) ToImageAssetResponseOutput() ImageAssetResponseOutput {
	return o
}

func (o ImageAssetResponseOutput) ToImageAssetResponseOutputWithContext(ctx context.Context) ImageAssetResponseOutput {
	return o
}

// The Asset Id.
func (o ImageAssetResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageAssetResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The mime type.
func (o ImageAssetResponseOutput) MimeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageAssetResponse) *string { return v.MimeType }).(pulumi.StringPtrOutput)
}

// Whether the Asset is unpacked.
func (o ImageAssetResponseOutput) Unpack() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ImageAssetResponse) *bool { return v.Unpack }).(pulumi.BoolPtrOutput)
}

// The Url of the Asset.
func (o ImageAssetResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageAssetResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ImageAssetResponseArrayOutput struct{ *pulumi.OutputState }

func (ImageAssetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageAssetResponse)(nil)).Elem()
}

func (o ImageAssetResponseArrayOutput) ToImageAssetResponseArrayOutput() ImageAssetResponseArrayOutput {
	return o
}

func (o ImageAssetResponseArrayOutput) ToImageAssetResponseArrayOutputWithContext(ctx context.Context) ImageAssetResponseArrayOutput {
	return o
}

func (o ImageAssetResponseArrayOutput) Index(i pulumi.IntInput) ImageAssetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageAssetResponse {
		return vs[0].([]ImageAssetResponse)[vs[1].(int)]
	}).(ImageAssetResponseOutput)
}

type KeyVaultProperties struct {
	// For future use - The client id of the identity which will be used to access key vault.
	IdentityClientId *string `pulumi:"identityClientId"`
	// Key vault uri to access the encryption key.
	KeyIdentifier string `pulumi:"keyIdentifier"`
	// The ArmId of the keyVault where the customer owned encryption key is present.
	KeyVaultArmId string `pulumi:"keyVaultArmId"`
}

// KeyVaultPropertiesInput is an input type that accepts KeyVaultPropertiesArgs and KeyVaultPropertiesOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesInput` via:
//
//          KeyVaultPropertiesArgs{...}
type KeyVaultPropertiesInput interface {
	pulumi.Input

	ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput
	ToKeyVaultPropertiesOutputWithContext(context.Context) KeyVaultPropertiesOutput
}

type KeyVaultPropertiesArgs struct {
	// For future use - The client id of the identity which will be used to access key vault.
	IdentityClientId pulumi.StringPtrInput `pulumi:"identityClientId"`
	// Key vault uri to access the encryption key.
	KeyIdentifier pulumi.StringInput `pulumi:"keyIdentifier"`
	// The ArmId of the keyVault where the customer owned encryption key is present.
	KeyVaultArmId pulumi.StringInput `pulumi:"keyVaultArmId"`
}

func (KeyVaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return i.ToKeyVaultPropertiesOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput)
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput).ToKeyVaultPropertiesPtrOutputWithContext(ctx)
}

// KeyVaultPropertiesPtrInput is an input type that accepts KeyVaultPropertiesArgs, KeyVaultPropertiesPtr and KeyVaultPropertiesPtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesPtrInput` via:
//
//          KeyVaultPropertiesArgs{...}
//
//  or:
//
//          nil
type KeyVaultPropertiesPtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput
	ToKeyVaultPropertiesPtrOutputWithContext(context.Context) KeyVaultPropertiesPtrOutput
}

type keyVaultPropertiesPtrType KeyVaultPropertiesArgs

func KeyVaultPropertiesPtr(v *KeyVaultPropertiesArgs) KeyVaultPropertiesPtrInput {
	return (*keyVaultPropertiesPtrType)(v)
}

func (*keyVaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesPtrOutput)
}

type KeyVaultPropertiesOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *KeyVaultProperties {
		return &v
	}).(KeyVaultPropertiesPtrOutput)
}

// For future use - The client id of the identity which will be used to access key vault.
func (o KeyVaultPropertiesOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// Key vault uri to access the encryption key.
func (o KeyVaultPropertiesOutput) KeyIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultProperties) string { return v.KeyIdentifier }).(pulumi.StringOutput)
}

// The ArmId of the keyVault where the customer owned encryption key is present.
func (o KeyVaultPropertiesOutput) KeyVaultArmId() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultProperties) string { return v.KeyVaultArmId }).(pulumi.StringOutput)
}

type KeyVaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) Elem() KeyVaultPropertiesOutput {
	return o.ApplyT(func(v *KeyVaultProperties) KeyVaultProperties { return *v }).(KeyVaultPropertiesOutput)
}

// For future use - The client id of the identity which will be used to access key vault.
func (o KeyVaultPropertiesPtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// Key vault uri to access the encryption key.
func (o KeyVaultPropertiesPtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// The ArmId of the keyVault where the customer owned encryption key is present.
func (o KeyVaultPropertiesPtrOutput) KeyVaultArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultArmId
	}).(pulumi.StringPtrOutput)
}

type KeyVaultPropertiesInvokeResponse struct {
	// For future use - The client id of the identity which will be used to access key vault.
	IdentityClientId *string `pulumi:"identityClientId"`
	// Key vault uri to access the encryption key.
	KeyIdentifier string `pulumi:"keyIdentifier"`
	// The ArmId of the keyVault where the customer owned encryption key is present.
	KeyVaultArmId string `pulumi:"keyVaultArmId"`
}

// KeyVaultPropertiesInvokeResponseInput is an input type that accepts KeyVaultPropertiesInvokeResponseArgs and KeyVaultPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesInvokeResponseInput` via:
//
//          KeyVaultPropertiesInvokeResponseArgs{...}
type KeyVaultPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToKeyVaultPropertiesInvokeResponseOutput() KeyVaultPropertiesInvokeResponseOutput
	ToKeyVaultPropertiesInvokeResponseOutputWithContext(context.Context) KeyVaultPropertiesInvokeResponseOutput
}

type KeyVaultPropertiesInvokeResponseArgs struct {
	// For future use - The client id of the identity which will be used to access key vault.
	IdentityClientId pulumi.StringPtrInput `pulumi:"identityClientId"`
	// Key vault uri to access the encryption key.
	KeyIdentifier pulumi.StringInput `pulumi:"keyIdentifier"`
	// The ArmId of the keyVault where the customer owned encryption key is present.
	KeyVaultArmId pulumi.StringInput `pulumi:"keyVaultArmId"`
}

func (KeyVaultPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesInvokeResponse)(nil)).Elem()
}

func (i KeyVaultPropertiesInvokeResponseArgs) ToKeyVaultPropertiesInvokeResponseOutput() KeyVaultPropertiesInvokeResponseOutput {
	return i.ToKeyVaultPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesInvokeResponseArgs) ToKeyVaultPropertiesInvokeResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesInvokeResponseOutput)
}

type KeyVaultPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesInvokeResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesInvokeResponseOutput) ToKeyVaultPropertiesInvokeResponseOutput() KeyVaultPropertiesInvokeResponseOutput {
	return o
}

func (o KeyVaultPropertiesInvokeResponseOutput) ToKeyVaultPropertiesInvokeResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesInvokeResponseOutput {
	return o
}

// For future use - The client id of the identity which will be used to access key vault.
func (o KeyVaultPropertiesInvokeResponseOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesInvokeResponse) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// Key vault uri to access the encryption key.
func (o KeyVaultPropertiesInvokeResponseOutput) KeyIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultPropertiesInvokeResponse) string { return v.KeyIdentifier }).(pulumi.StringOutput)
}

// The ArmId of the keyVault where the customer owned encryption key is present.
func (o KeyVaultPropertiesInvokeResponseOutput) KeyVaultArmId() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultPropertiesInvokeResponse) string { return v.KeyVaultArmId }).(pulumi.StringOutput)
}

type KeyVaultPropertiesResponse struct {
	// For future use - The client id of the identity which will be used to access key vault.
	IdentityClientId *string `pulumi:"identityClientId"`
	// Key vault uri to access the encryption key.
	KeyIdentifier string `pulumi:"keyIdentifier"`
	// The ArmId of the keyVault where the customer owned encryption key is present.
	KeyVaultArmId string `pulumi:"keyVaultArmId"`
}

// KeyVaultPropertiesResponseInput is an input type that accepts KeyVaultPropertiesResponseArgs and KeyVaultPropertiesResponseOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesResponseInput` via:
//
//          KeyVaultPropertiesResponseArgs{...}
type KeyVaultPropertiesResponseInput interface {
	pulumi.Input

	ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput
	ToKeyVaultPropertiesResponseOutputWithContext(context.Context) KeyVaultPropertiesResponseOutput
}

type KeyVaultPropertiesResponseArgs struct {
	// For future use - The client id of the identity which will be used to access key vault.
	IdentityClientId pulumi.StringPtrInput `pulumi:"identityClientId"`
	// Key vault uri to access the encryption key.
	KeyIdentifier pulumi.StringInput `pulumi:"keyIdentifier"`
	// The ArmId of the keyVault where the customer owned encryption key is present.
	KeyVaultArmId pulumi.StringInput `pulumi:"keyVaultArmId"`
}

func (KeyVaultPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return i.ToKeyVaultPropertiesResponseOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponseOutput)
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return i.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponseOutput).ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx)
}

// KeyVaultPropertiesResponsePtrInput is an input type that accepts KeyVaultPropertiesResponseArgs, KeyVaultPropertiesResponsePtr and KeyVaultPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesResponsePtrInput` via:
//
//          KeyVaultPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type KeyVaultPropertiesResponsePtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput
	ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Context) KeyVaultPropertiesResponsePtrOutput
}

type keyVaultPropertiesResponsePtrType KeyVaultPropertiesResponseArgs

func KeyVaultPropertiesResponsePtr(v *KeyVaultPropertiesResponseArgs) KeyVaultPropertiesResponsePtrInput {
	return (*keyVaultPropertiesResponsePtrType)(v)
}

func (*keyVaultPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (i *keyVaultPropertiesResponsePtrType) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return i.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesResponsePtrType) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponsePtrOutput)
}

type KeyVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *KeyVaultPropertiesResponse {
		return &v
	}).(KeyVaultPropertiesResponsePtrOutput)
}

// For future use - The client id of the identity which will be used to access key vault.
func (o KeyVaultPropertiesResponseOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// Key vault uri to access the encryption key.
func (o KeyVaultPropertiesResponseOutput) KeyIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) string { return v.KeyIdentifier }).(pulumi.StringOutput)
}

// The ArmId of the keyVault where the customer owned encryption key is present.
func (o KeyVaultPropertiesResponseOutput) KeyVaultArmId() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) string { return v.KeyVaultArmId }).(pulumi.StringOutput)
}

type KeyVaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) Elem() KeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) KeyVaultPropertiesResponse { return *v }).(KeyVaultPropertiesResponseOutput)
}

// For future use - The client id of the identity which will be used to access key vault.
func (o KeyVaultPropertiesResponsePtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// Key vault uri to access the encryption key.
func (o KeyVaultPropertiesResponsePtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// The ArmId of the keyVault where the customer owned encryption key is present.
func (o KeyVaultPropertiesResponsePtrOutput) KeyVaultArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultArmId
	}).(pulumi.StringPtrOutput)
}

// LinkedWorkspace specific properties.
type LinkedWorkspaceProps struct {
	// ResourceId of the link target of the linked workspace.
	LinkedWorkspaceResourceId *string `pulumi:"linkedWorkspaceResourceId"`
	// ResourceId of the user assigned identity for the linked workspace.
	UserAssignedIdentityResourceId *string `pulumi:"userAssignedIdentityResourceId"`
}

// LinkedWorkspacePropsInput is an input type that accepts LinkedWorkspacePropsArgs and LinkedWorkspacePropsOutput values.
// You can construct a concrete instance of `LinkedWorkspacePropsInput` via:
//
//          LinkedWorkspacePropsArgs{...}
type LinkedWorkspacePropsInput interface {
	pulumi.Input

	ToLinkedWorkspacePropsOutput() LinkedWorkspacePropsOutput
	ToLinkedWorkspacePropsOutputWithContext(context.Context) LinkedWorkspacePropsOutput
}

// LinkedWorkspace specific properties.
type LinkedWorkspacePropsArgs struct {
	// ResourceId of the link target of the linked workspace.
	LinkedWorkspaceResourceId pulumi.StringPtrInput `pulumi:"linkedWorkspaceResourceId"`
	// ResourceId of the user assigned identity for the linked workspace.
	UserAssignedIdentityResourceId pulumi.StringPtrInput `pulumi:"userAssignedIdentityResourceId"`
}

func (LinkedWorkspacePropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedWorkspaceProps)(nil)).Elem()
}

func (i LinkedWorkspacePropsArgs) ToLinkedWorkspacePropsOutput() LinkedWorkspacePropsOutput {
	return i.ToLinkedWorkspacePropsOutputWithContext(context.Background())
}

func (i LinkedWorkspacePropsArgs) ToLinkedWorkspacePropsOutputWithContext(ctx context.Context) LinkedWorkspacePropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedWorkspacePropsOutput)
}

func (i LinkedWorkspacePropsArgs) ToLinkedWorkspacePropsPtrOutput() LinkedWorkspacePropsPtrOutput {
	return i.ToLinkedWorkspacePropsPtrOutputWithContext(context.Background())
}

func (i LinkedWorkspacePropsArgs) ToLinkedWorkspacePropsPtrOutputWithContext(ctx context.Context) LinkedWorkspacePropsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedWorkspacePropsOutput).ToLinkedWorkspacePropsPtrOutputWithContext(ctx)
}

// LinkedWorkspacePropsPtrInput is an input type that accepts LinkedWorkspacePropsArgs, LinkedWorkspacePropsPtr and LinkedWorkspacePropsPtrOutput values.
// You can construct a concrete instance of `LinkedWorkspacePropsPtrInput` via:
//
//          LinkedWorkspacePropsArgs{...}
//
//  or:
//
//          nil
type LinkedWorkspacePropsPtrInput interface {
	pulumi.Input

	ToLinkedWorkspacePropsPtrOutput() LinkedWorkspacePropsPtrOutput
	ToLinkedWorkspacePropsPtrOutputWithContext(context.Context) LinkedWorkspacePropsPtrOutput
}

type linkedWorkspacePropsPtrType LinkedWorkspacePropsArgs

func LinkedWorkspacePropsPtr(v *LinkedWorkspacePropsArgs) LinkedWorkspacePropsPtrInput {
	return (*linkedWorkspacePropsPtrType)(v)
}

func (*linkedWorkspacePropsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedWorkspaceProps)(nil)).Elem()
}

func (i *linkedWorkspacePropsPtrType) ToLinkedWorkspacePropsPtrOutput() LinkedWorkspacePropsPtrOutput {
	return i.ToLinkedWorkspacePropsPtrOutputWithContext(context.Background())
}

func (i *linkedWorkspacePropsPtrType) ToLinkedWorkspacePropsPtrOutputWithContext(ctx context.Context) LinkedWorkspacePropsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedWorkspacePropsPtrOutput)
}

// LinkedWorkspace specific properties.
type LinkedWorkspacePropsOutput struct{ *pulumi.OutputState }

func (LinkedWorkspacePropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedWorkspaceProps)(nil)).Elem()
}

func (o LinkedWorkspacePropsOutput) ToLinkedWorkspacePropsOutput() LinkedWorkspacePropsOutput {
	return o
}

func (o LinkedWorkspacePropsOutput) ToLinkedWorkspacePropsOutputWithContext(ctx context.Context) LinkedWorkspacePropsOutput {
	return o
}

func (o LinkedWorkspacePropsOutput) ToLinkedWorkspacePropsPtrOutput() LinkedWorkspacePropsPtrOutput {
	return o.ToLinkedWorkspacePropsPtrOutputWithContext(context.Background())
}

func (o LinkedWorkspacePropsOutput) ToLinkedWorkspacePropsPtrOutputWithContext(ctx context.Context) LinkedWorkspacePropsPtrOutput {
	return o.ApplyT(func(v LinkedWorkspaceProps) *LinkedWorkspaceProps {
		return &v
	}).(LinkedWorkspacePropsPtrOutput)
}

// ResourceId of the link target of the linked workspace.
func (o LinkedWorkspacePropsOutput) LinkedWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedWorkspaceProps) *string { return v.LinkedWorkspaceResourceId }).(pulumi.StringPtrOutput)
}

// ResourceId of the user assigned identity for the linked workspace.
func (o LinkedWorkspacePropsOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedWorkspaceProps) *string { return v.UserAssignedIdentityResourceId }).(pulumi.StringPtrOutput)
}

type LinkedWorkspacePropsPtrOutput struct{ *pulumi.OutputState }

func (LinkedWorkspacePropsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedWorkspaceProps)(nil)).Elem()
}

func (o LinkedWorkspacePropsPtrOutput) ToLinkedWorkspacePropsPtrOutput() LinkedWorkspacePropsPtrOutput {
	return o
}

func (o LinkedWorkspacePropsPtrOutput) ToLinkedWorkspacePropsPtrOutputWithContext(ctx context.Context) LinkedWorkspacePropsPtrOutput {
	return o
}

func (o LinkedWorkspacePropsPtrOutput) Elem() LinkedWorkspacePropsOutput {
	return o.ApplyT(func(v *LinkedWorkspaceProps) LinkedWorkspaceProps { return *v }).(LinkedWorkspacePropsOutput)
}

// ResourceId of the link target of the linked workspace.
func (o LinkedWorkspacePropsPtrOutput) LinkedWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedWorkspaceProps) *string {
		if v == nil {
			return nil
		}
		return v.LinkedWorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// ResourceId of the user assigned identity for the linked workspace.
func (o LinkedWorkspacePropsPtrOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedWorkspaceProps) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityResourceId
	}).(pulumi.StringPtrOutput)
}

// LinkedWorkspace specific properties.
type LinkedWorkspacePropsInvokeResponse struct {
	// ResourceId of the link target of the linked workspace.
	LinkedWorkspaceResourceId *string `pulumi:"linkedWorkspaceResourceId"`
	// ResourceId of the user assigned identity for the linked workspace.
	UserAssignedIdentityResourceId *string `pulumi:"userAssignedIdentityResourceId"`
}

// LinkedWorkspacePropsInvokeResponseInput is an input type that accepts LinkedWorkspacePropsInvokeResponseArgs and LinkedWorkspacePropsInvokeResponseOutput values.
// You can construct a concrete instance of `LinkedWorkspacePropsInvokeResponseInput` via:
//
//          LinkedWorkspacePropsInvokeResponseArgs{...}
type LinkedWorkspacePropsInvokeResponseInput interface {
	pulumi.Input

	ToLinkedWorkspacePropsInvokeResponseOutput() LinkedWorkspacePropsInvokeResponseOutput
	ToLinkedWorkspacePropsInvokeResponseOutputWithContext(context.Context) LinkedWorkspacePropsInvokeResponseOutput
}

// LinkedWorkspace specific properties.
type LinkedWorkspacePropsInvokeResponseArgs struct {
	// ResourceId of the link target of the linked workspace.
	LinkedWorkspaceResourceId pulumi.StringPtrInput `pulumi:"linkedWorkspaceResourceId"`
	// ResourceId of the user assigned identity for the linked workspace.
	UserAssignedIdentityResourceId pulumi.StringPtrInput `pulumi:"userAssignedIdentityResourceId"`
}

func (LinkedWorkspacePropsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedWorkspacePropsInvokeResponse)(nil)).Elem()
}

func (i LinkedWorkspacePropsInvokeResponseArgs) ToLinkedWorkspacePropsInvokeResponseOutput() LinkedWorkspacePropsInvokeResponseOutput {
	return i.ToLinkedWorkspacePropsInvokeResponseOutputWithContext(context.Background())
}

func (i LinkedWorkspacePropsInvokeResponseArgs) ToLinkedWorkspacePropsInvokeResponseOutputWithContext(ctx context.Context) LinkedWorkspacePropsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedWorkspacePropsInvokeResponseOutput)
}

// LinkedWorkspace specific properties.
type LinkedWorkspacePropsInvokeResponseOutput struct{ *pulumi.OutputState }

func (LinkedWorkspacePropsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedWorkspacePropsInvokeResponse)(nil)).Elem()
}

func (o LinkedWorkspacePropsInvokeResponseOutput) ToLinkedWorkspacePropsInvokeResponseOutput() LinkedWorkspacePropsInvokeResponseOutput {
	return o
}

func (o LinkedWorkspacePropsInvokeResponseOutput) ToLinkedWorkspacePropsInvokeResponseOutputWithContext(ctx context.Context) LinkedWorkspacePropsInvokeResponseOutput {
	return o
}

// ResourceId of the link target of the linked workspace.
func (o LinkedWorkspacePropsInvokeResponseOutput) LinkedWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedWorkspacePropsInvokeResponse) *string { return v.LinkedWorkspaceResourceId }).(pulumi.StringPtrOutput)
}

// ResourceId of the user assigned identity for the linked workspace.
func (o LinkedWorkspacePropsInvokeResponseOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedWorkspacePropsInvokeResponse) *string { return v.UserAssignedIdentityResourceId }).(pulumi.StringPtrOutput)
}

// LinkedWorkspace specific properties.
type LinkedWorkspacePropsResponse struct {
	// ResourceId of the link target of the linked workspace.
	LinkedWorkspaceResourceId *string `pulumi:"linkedWorkspaceResourceId"`
	// ResourceId of the user assigned identity for the linked workspace.
	UserAssignedIdentityResourceId *string `pulumi:"userAssignedIdentityResourceId"`
}

// LinkedWorkspacePropsResponseInput is an input type that accepts LinkedWorkspacePropsResponseArgs and LinkedWorkspacePropsResponseOutput values.
// You can construct a concrete instance of `LinkedWorkspacePropsResponseInput` via:
//
//          LinkedWorkspacePropsResponseArgs{...}
type LinkedWorkspacePropsResponseInput interface {
	pulumi.Input

	ToLinkedWorkspacePropsResponseOutput() LinkedWorkspacePropsResponseOutput
	ToLinkedWorkspacePropsResponseOutputWithContext(context.Context) LinkedWorkspacePropsResponseOutput
}

// LinkedWorkspace specific properties.
type LinkedWorkspacePropsResponseArgs struct {
	// ResourceId of the link target of the linked workspace.
	LinkedWorkspaceResourceId pulumi.StringPtrInput `pulumi:"linkedWorkspaceResourceId"`
	// ResourceId of the user assigned identity for the linked workspace.
	UserAssignedIdentityResourceId pulumi.StringPtrInput `pulumi:"userAssignedIdentityResourceId"`
}

func (LinkedWorkspacePropsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedWorkspacePropsResponse)(nil)).Elem()
}

func (i LinkedWorkspacePropsResponseArgs) ToLinkedWorkspacePropsResponseOutput() LinkedWorkspacePropsResponseOutput {
	return i.ToLinkedWorkspacePropsResponseOutputWithContext(context.Background())
}

func (i LinkedWorkspacePropsResponseArgs) ToLinkedWorkspacePropsResponseOutputWithContext(ctx context.Context) LinkedWorkspacePropsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedWorkspacePropsResponseOutput)
}

func (i LinkedWorkspacePropsResponseArgs) ToLinkedWorkspacePropsResponsePtrOutput() LinkedWorkspacePropsResponsePtrOutput {
	return i.ToLinkedWorkspacePropsResponsePtrOutputWithContext(context.Background())
}

func (i LinkedWorkspacePropsResponseArgs) ToLinkedWorkspacePropsResponsePtrOutputWithContext(ctx context.Context) LinkedWorkspacePropsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedWorkspacePropsResponseOutput).ToLinkedWorkspacePropsResponsePtrOutputWithContext(ctx)
}

// LinkedWorkspacePropsResponsePtrInput is an input type that accepts LinkedWorkspacePropsResponseArgs, LinkedWorkspacePropsResponsePtr and LinkedWorkspacePropsResponsePtrOutput values.
// You can construct a concrete instance of `LinkedWorkspacePropsResponsePtrInput` via:
//
//          LinkedWorkspacePropsResponseArgs{...}
//
//  or:
//
//          nil
type LinkedWorkspacePropsResponsePtrInput interface {
	pulumi.Input

	ToLinkedWorkspacePropsResponsePtrOutput() LinkedWorkspacePropsResponsePtrOutput
	ToLinkedWorkspacePropsResponsePtrOutputWithContext(context.Context) LinkedWorkspacePropsResponsePtrOutput
}

type linkedWorkspacePropsResponsePtrType LinkedWorkspacePropsResponseArgs

func LinkedWorkspacePropsResponsePtr(v *LinkedWorkspacePropsResponseArgs) LinkedWorkspacePropsResponsePtrInput {
	return (*linkedWorkspacePropsResponsePtrType)(v)
}

func (*linkedWorkspacePropsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedWorkspacePropsResponse)(nil)).Elem()
}

func (i *linkedWorkspacePropsResponsePtrType) ToLinkedWorkspacePropsResponsePtrOutput() LinkedWorkspacePropsResponsePtrOutput {
	return i.ToLinkedWorkspacePropsResponsePtrOutputWithContext(context.Background())
}

func (i *linkedWorkspacePropsResponsePtrType) ToLinkedWorkspacePropsResponsePtrOutputWithContext(ctx context.Context) LinkedWorkspacePropsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedWorkspacePropsResponsePtrOutput)
}

// LinkedWorkspace specific properties.
type LinkedWorkspacePropsResponseOutput struct{ *pulumi.OutputState }

func (LinkedWorkspacePropsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedWorkspacePropsResponse)(nil)).Elem()
}

func (o LinkedWorkspacePropsResponseOutput) ToLinkedWorkspacePropsResponseOutput() LinkedWorkspacePropsResponseOutput {
	return o
}

func (o LinkedWorkspacePropsResponseOutput) ToLinkedWorkspacePropsResponseOutputWithContext(ctx context.Context) LinkedWorkspacePropsResponseOutput {
	return o
}

func (o LinkedWorkspacePropsResponseOutput) ToLinkedWorkspacePropsResponsePtrOutput() LinkedWorkspacePropsResponsePtrOutput {
	return o.ToLinkedWorkspacePropsResponsePtrOutputWithContext(context.Background())
}

func (o LinkedWorkspacePropsResponseOutput) ToLinkedWorkspacePropsResponsePtrOutputWithContext(ctx context.Context) LinkedWorkspacePropsResponsePtrOutput {
	return o.ApplyT(func(v LinkedWorkspacePropsResponse) *LinkedWorkspacePropsResponse {
		return &v
	}).(LinkedWorkspacePropsResponsePtrOutput)
}

// ResourceId of the link target of the linked workspace.
func (o LinkedWorkspacePropsResponseOutput) LinkedWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedWorkspacePropsResponse) *string { return v.LinkedWorkspaceResourceId }).(pulumi.StringPtrOutput)
}

// ResourceId of the user assigned identity for the linked workspace.
func (o LinkedWorkspacePropsResponseOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedWorkspacePropsResponse) *string { return v.UserAssignedIdentityResourceId }).(pulumi.StringPtrOutput)
}

type LinkedWorkspacePropsResponsePtrOutput struct{ *pulumi.OutputState }

func (LinkedWorkspacePropsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedWorkspacePropsResponse)(nil)).Elem()
}

func (o LinkedWorkspacePropsResponsePtrOutput) ToLinkedWorkspacePropsResponsePtrOutput() LinkedWorkspacePropsResponsePtrOutput {
	return o
}

func (o LinkedWorkspacePropsResponsePtrOutput) ToLinkedWorkspacePropsResponsePtrOutputWithContext(ctx context.Context) LinkedWorkspacePropsResponsePtrOutput {
	return o
}

func (o LinkedWorkspacePropsResponsePtrOutput) Elem() LinkedWorkspacePropsResponseOutput {
	return o.ApplyT(func(v *LinkedWorkspacePropsResponse) LinkedWorkspacePropsResponse { return *v }).(LinkedWorkspacePropsResponseOutput)
}

// ResourceId of the link target of the linked workspace.
func (o LinkedWorkspacePropsResponsePtrOutput) LinkedWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedWorkspacePropsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinkedWorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// ResourceId of the user assigned identity for the linked workspace.
func (o LinkedWorkspacePropsResponsePtrOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedWorkspacePropsResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityResourceId
	}).(pulumi.StringPtrOutput)
}

// Wrapper for error response to follow ARM guidelines.
type MachineLearningServiceErrorInvokeResponse struct {
	// The error response.
	Error ErrorResponseInvokeResponse `pulumi:"error"`
}

// MachineLearningServiceErrorInvokeResponseInput is an input type that accepts MachineLearningServiceErrorInvokeResponseArgs and MachineLearningServiceErrorInvokeResponseOutput values.
// You can construct a concrete instance of `MachineLearningServiceErrorInvokeResponseInput` via:
//
//          MachineLearningServiceErrorInvokeResponseArgs{...}
type MachineLearningServiceErrorInvokeResponseInput interface {
	pulumi.Input

	ToMachineLearningServiceErrorInvokeResponseOutput() MachineLearningServiceErrorInvokeResponseOutput
	ToMachineLearningServiceErrorInvokeResponseOutputWithContext(context.Context) MachineLearningServiceErrorInvokeResponseOutput
}

// Wrapper for error response to follow ARM guidelines.
type MachineLearningServiceErrorInvokeResponseArgs struct {
	// The error response.
	Error ErrorResponseInvokeResponseInput `pulumi:"error"`
}

func (MachineLearningServiceErrorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineLearningServiceErrorInvokeResponse)(nil)).Elem()
}

func (i MachineLearningServiceErrorInvokeResponseArgs) ToMachineLearningServiceErrorInvokeResponseOutput() MachineLearningServiceErrorInvokeResponseOutput {
	return i.ToMachineLearningServiceErrorInvokeResponseOutputWithContext(context.Background())
}

func (i MachineLearningServiceErrorInvokeResponseArgs) ToMachineLearningServiceErrorInvokeResponseOutputWithContext(ctx context.Context) MachineLearningServiceErrorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineLearningServiceErrorInvokeResponseOutput)
}

// MachineLearningServiceErrorInvokeResponseArrayInput is an input type that accepts MachineLearningServiceErrorInvokeResponseArray and MachineLearningServiceErrorInvokeResponseArrayOutput values.
// You can construct a concrete instance of `MachineLearningServiceErrorInvokeResponseArrayInput` via:
//
//          MachineLearningServiceErrorInvokeResponseArray{ MachineLearningServiceErrorInvokeResponseArgs{...} }
type MachineLearningServiceErrorInvokeResponseArrayInput interface {
	pulumi.Input

	ToMachineLearningServiceErrorInvokeResponseArrayOutput() MachineLearningServiceErrorInvokeResponseArrayOutput
	ToMachineLearningServiceErrorInvokeResponseArrayOutputWithContext(context.Context) MachineLearningServiceErrorInvokeResponseArrayOutput
}

type MachineLearningServiceErrorInvokeResponseArray []MachineLearningServiceErrorInvokeResponseInput

func (MachineLearningServiceErrorInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineLearningServiceErrorInvokeResponse)(nil)).Elem()
}

func (i MachineLearningServiceErrorInvokeResponseArray) ToMachineLearningServiceErrorInvokeResponseArrayOutput() MachineLearningServiceErrorInvokeResponseArrayOutput {
	return i.ToMachineLearningServiceErrorInvokeResponseArrayOutputWithContext(context.Background())
}

func (i MachineLearningServiceErrorInvokeResponseArray) ToMachineLearningServiceErrorInvokeResponseArrayOutputWithContext(ctx context.Context) MachineLearningServiceErrorInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineLearningServiceErrorInvokeResponseArrayOutput)
}

// Wrapper for error response to follow ARM guidelines.
type MachineLearningServiceErrorInvokeResponseOutput struct{ *pulumi.OutputState }

func (MachineLearningServiceErrorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineLearningServiceErrorInvokeResponse)(nil)).Elem()
}

func (o MachineLearningServiceErrorInvokeResponseOutput) ToMachineLearningServiceErrorInvokeResponseOutput() MachineLearningServiceErrorInvokeResponseOutput {
	return o
}

func (o MachineLearningServiceErrorInvokeResponseOutput) ToMachineLearningServiceErrorInvokeResponseOutputWithContext(ctx context.Context) MachineLearningServiceErrorInvokeResponseOutput {
	return o
}

// The error response.
func (o MachineLearningServiceErrorInvokeResponseOutput) Error() ErrorResponseInvokeResponseOutput {
	return o.ApplyT(func(v MachineLearningServiceErrorInvokeResponse) ErrorResponseInvokeResponse { return v.Error }).(ErrorResponseInvokeResponseOutput)
}

type MachineLearningServiceErrorInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (MachineLearningServiceErrorInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineLearningServiceErrorInvokeResponse)(nil)).Elem()
}

func (o MachineLearningServiceErrorInvokeResponseArrayOutput) ToMachineLearningServiceErrorInvokeResponseArrayOutput() MachineLearningServiceErrorInvokeResponseArrayOutput {
	return o
}

func (o MachineLearningServiceErrorInvokeResponseArrayOutput) ToMachineLearningServiceErrorInvokeResponseArrayOutputWithContext(ctx context.Context) MachineLearningServiceErrorInvokeResponseArrayOutput {
	return o
}

func (o MachineLearningServiceErrorInvokeResponseArrayOutput) Index(i pulumi.IntInput) MachineLearningServiceErrorInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachineLearningServiceErrorInvokeResponse {
		return vs[0].([]MachineLearningServiceErrorInvokeResponse)[vs[1].(int)]
	}).(MachineLearningServiceErrorInvokeResponseOutput)
}

// Wrapper for error response to follow ARM guidelines.
type MachineLearningServiceErrorResponse struct {
	// The error response.
	Error ErrorResponseResponse `pulumi:"error"`
}

// MachineLearningServiceErrorResponseInput is an input type that accepts MachineLearningServiceErrorResponseArgs and MachineLearningServiceErrorResponseOutput values.
// You can construct a concrete instance of `MachineLearningServiceErrorResponseInput` via:
//
//          MachineLearningServiceErrorResponseArgs{...}
type MachineLearningServiceErrorResponseInput interface {
	pulumi.Input

	ToMachineLearningServiceErrorResponseOutput() MachineLearningServiceErrorResponseOutput
	ToMachineLearningServiceErrorResponseOutputWithContext(context.Context) MachineLearningServiceErrorResponseOutput
}

// Wrapper for error response to follow ARM guidelines.
type MachineLearningServiceErrorResponseArgs struct {
	// The error response.
	Error ErrorResponseResponseInput `pulumi:"error"`
}

func (MachineLearningServiceErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineLearningServiceErrorResponse)(nil)).Elem()
}

func (i MachineLearningServiceErrorResponseArgs) ToMachineLearningServiceErrorResponseOutput() MachineLearningServiceErrorResponseOutput {
	return i.ToMachineLearningServiceErrorResponseOutputWithContext(context.Background())
}

func (i MachineLearningServiceErrorResponseArgs) ToMachineLearningServiceErrorResponseOutputWithContext(ctx context.Context) MachineLearningServiceErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineLearningServiceErrorResponseOutput)
}

// MachineLearningServiceErrorResponseArrayInput is an input type that accepts MachineLearningServiceErrorResponseArray and MachineLearningServiceErrorResponseArrayOutput values.
// You can construct a concrete instance of `MachineLearningServiceErrorResponseArrayInput` via:
//
//          MachineLearningServiceErrorResponseArray{ MachineLearningServiceErrorResponseArgs{...} }
type MachineLearningServiceErrorResponseArrayInput interface {
	pulumi.Input

	ToMachineLearningServiceErrorResponseArrayOutput() MachineLearningServiceErrorResponseArrayOutput
	ToMachineLearningServiceErrorResponseArrayOutputWithContext(context.Context) MachineLearningServiceErrorResponseArrayOutput
}

type MachineLearningServiceErrorResponseArray []MachineLearningServiceErrorResponseInput

func (MachineLearningServiceErrorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineLearningServiceErrorResponse)(nil)).Elem()
}

func (i MachineLearningServiceErrorResponseArray) ToMachineLearningServiceErrorResponseArrayOutput() MachineLearningServiceErrorResponseArrayOutput {
	return i.ToMachineLearningServiceErrorResponseArrayOutputWithContext(context.Background())
}

func (i MachineLearningServiceErrorResponseArray) ToMachineLearningServiceErrorResponseArrayOutputWithContext(ctx context.Context) MachineLearningServiceErrorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineLearningServiceErrorResponseArrayOutput)
}

// Wrapper for error response to follow ARM guidelines.
type MachineLearningServiceErrorResponseOutput struct{ *pulumi.OutputState }

func (MachineLearningServiceErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineLearningServiceErrorResponse)(nil)).Elem()
}

func (o MachineLearningServiceErrorResponseOutput) ToMachineLearningServiceErrorResponseOutput() MachineLearningServiceErrorResponseOutput {
	return o
}

func (o MachineLearningServiceErrorResponseOutput) ToMachineLearningServiceErrorResponseOutputWithContext(ctx context.Context) MachineLearningServiceErrorResponseOutput {
	return o
}

// The error response.
func (o MachineLearningServiceErrorResponseOutput) Error() ErrorResponseResponseOutput {
	return o.ApplyT(func(v MachineLearningServiceErrorResponse) ErrorResponseResponse { return v.Error }).(ErrorResponseResponseOutput)
}

type MachineLearningServiceErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (MachineLearningServiceErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineLearningServiceErrorResponse)(nil)).Elem()
}

func (o MachineLearningServiceErrorResponseArrayOutput) ToMachineLearningServiceErrorResponseArrayOutput() MachineLearningServiceErrorResponseArrayOutput {
	return o
}

func (o MachineLearningServiceErrorResponseArrayOutput) ToMachineLearningServiceErrorResponseArrayOutputWithContext(ctx context.Context) MachineLearningServiceErrorResponseArrayOutput {
	return o
}

func (o MachineLearningServiceErrorResponseArrayOutput) Index(i pulumi.IntInput) MachineLearningServiceErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachineLearningServiceErrorResponse {
		return vs[0].([]MachineLearningServiceErrorResponse)[vs[1].(int)]
	}).(MachineLearningServiceErrorResponseOutput)
}

// An Azure Machine Learning Model.
type Model struct {
	// The Model creation time (UTC).
	CreatedTime *string `pulumi:"createdTime"`
	// The list of datasets associated with the model.
	Datasets []DatasetReference `pulumi:"datasets"`
	// Models derived from this model
	DerivedModelIds []string `pulumi:"derivedModelIds"`
	// The Model description text.
	Description *string `pulumi:"description"`
	// The name of the experiment where this model was created.
	ExperimentName *string `pulumi:"experimentName"`
	// The Model framework.
	Framework *string `pulumi:"framework"`
	// The Model framework version.
	FrameworkVersion *string `pulumi:"frameworkVersion"`
	// The Model Id.
	Id *string `pulumi:"id"`
	// The Model tag dictionary. Items are mutable.
	KvTags map[string]string `pulumi:"kvTags"`
	// The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
	MimeType string `pulumi:"mimeType"`
	// The Model last modified time (UTC).
	ModifiedTime *string `pulumi:"modifiedTime"`
	// The Model name.
	Name string `pulumi:"name"`
	// The Parent Model Id.
	ParentModelId *string `pulumi:"parentModelId"`
	// The Model property dictionary. Properties are immutable.
	Properties map[string]string `pulumi:"properties"`
	// Resource requirements for the model
	ResourceRequirements *ContainerResourceRequirements `pulumi:"resourceRequirements"`
	// The RunId that created this model.
	RunId *string `pulumi:"runId"`
	// Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleInputData *string `pulumi:"sampleInputData"`
	// Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleOutputData *string `pulumi:"sampleOutputData"`
	// Indicates whether we need to unpack the Model during docker Image creation.
	Unpack *bool `pulumi:"unpack"`
	// The URL of the Model. Usually a SAS URL.
	Url string `pulumi:"url"`
	// The Model version assigned by Model Management Service.
	Version *float64 `pulumi:"version"`
}

// ModelInput is an input type that accepts ModelArgs and ModelOutput values.
// You can construct a concrete instance of `ModelInput` via:
//
//          ModelArgs{...}
type ModelInput interface {
	pulumi.Input

	ToModelOutput() ModelOutput
	ToModelOutputWithContext(context.Context) ModelOutput
}

// An Azure Machine Learning Model.
type ModelArgs struct {
	// The Model creation time (UTC).
	CreatedTime pulumi.StringPtrInput `pulumi:"createdTime"`
	// The list of datasets associated with the model.
	Datasets DatasetReferenceArrayInput `pulumi:"datasets"`
	// Models derived from this model
	DerivedModelIds pulumi.StringArrayInput `pulumi:"derivedModelIds"`
	// The Model description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the experiment where this model was created.
	ExperimentName pulumi.StringPtrInput `pulumi:"experimentName"`
	// The Model framework.
	Framework pulumi.StringPtrInput `pulumi:"framework"`
	// The Model framework version.
	FrameworkVersion pulumi.StringPtrInput `pulumi:"frameworkVersion"`
	// The Model Id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Model tag dictionary. Items are mutable.
	KvTags pulumi.StringMapInput `pulumi:"kvTags"`
	// The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
	MimeType pulumi.StringInput `pulumi:"mimeType"`
	// The Model last modified time (UTC).
	ModifiedTime pulumi.StringPtrInput `pulumi:"modifiedTime"`
	// The Model name.
	Name pulumi.StringInput `pulumi:"name"`
	// The Parent Model Id.
	ParentModelId pulumi.StringPtrInput `pulumi:"parentModelId"`
	// The Model property dictionary. Properties are immutable.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Resource requirements for the model
	ResourceRequirements ContainerResourceRequirementsPtrInput `pulumi:"resourceRequirements"`
	// The RunId that created this model.
	RunId pulumi.StringPtrInput `pulumi:"runId"`
	// Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleInputData pulumi.StringPtrInput `pulumi:"sampleInputData"`
	// Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleOutputData pulumi.StringPtrInput `pulumi:"sampleOutputData"`
	// Indicates whether we need to unpack the Model during docker Image creation.
	Unpack pulumi.BoolPtrInput `pulumi:"unpack"`
	// The URL of the Model. Usually a SAS URL.
	Url pulumi.StringInput `pulumi:"url"`
	// The Model version assigned by Model Management Service.
	Version pulumi.Float64PtrInput `pulumi:"version"`
}

func (ModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Model)(nil)).Elem()
}

func (i ModelArgs) ToModelOutput() ModelOutput {
	return i.ToModelOutputWithContext(context.Background())
}

func (i ModelArgs) ToModelOutputWithContext(ctx context.Context) ModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelOutput)
}

// ModelArrayInput is an input type that accepts ModelArray and ModelArrayOutput values.
// You can construct a concrete instance of `ModelArrayInput` via:
//
//          ModelArray{ ModelArgs{...} }
type ModelArrayInput interface {
	pulumi.Input

	ToModelArrayOutput() ModelArrayOutput
	ToModelArrayOutputWithContext(context.Context) ModelArrayOutput
}

type ModelArray []ModelInput

func (ModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Model)(nil)).Elem()
}

func (i ModelArray) ToModelArrayOutput() ModelArrayOutput {
	return i.ToModelArrayOutputWithContext(context.Background())
}

func (i ModelArray) ToModelArrayOutputWithContext(ctx context.Context) ModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelArrayOutput)
}

// An Azure Machine Learning Model.
type ModelOutput struct{ *pulumi.OutputState }

func (ModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Model)(nil)).Elem()
}

func (o ModelOutput) ToModelOutput() ModelOutput {
	return o
}

func (o ModelOutput) ToModelOutputWithContext(ctx context.Context) ModelOutput {
	return o
}

// The Model creation time (UTC).
func (o ModelOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

// The list of datasets associated with the model.
func (o ModelOutput) Datasets() DatasetReferenceArrayOutput {
	return o.ApplyT(func(v Model) []DatasetReference { return v.Datasets }).(DatasetReferenceArrayOutput)
}

// Models derived from this model
func (o ModelOutput) DerivedModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Model) []string { return v.DerivedModelIds }).(pulumi.StringArrayOutput)
}

// The Model description text.
func (o ModelOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the experiment where this model was created.
func (o ModelOutput) ExperimentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.ExperimentName }).(pulumi.StringPtrOutput)
}

// The Model framework.
func (o ModelOutput) Framework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.Framework }).(pulumi.StringPtrOutput)
}

// The Model framework version.
func (o ModelOutput) FrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.FrameworkVersion }).(pulumi.StringPtrOutput)
}

// The Model Id.
func (o ModelOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Model tag dictionary. Items are mutable.
func (o ModelOutput) KvTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v Model) map[string]string { return v.KvTags }).(pulumi.StringMapOutput)
}

// The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
func (o ModelOutput) MimeType() pulumi.StringOutput {
	return o.ApplyT(func(v Model) string { return v.MimeType }).(pulumi.StringOutput)
}

// The Model last modified time (UTC).
func (o ModelOutput) ModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.ModifiedTime }).(pulumi.StringPtrOutput)
}

// The Model name.
func (o ModelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Model) string { return v.Name }).(pulumi.StringOutput)
}

// The Parent Model Id.
func (o ModelOutput) ParentModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.ParentModelId }).(pulumi.StringPtrOutput)
}

// The Model property dictionary. Properties are immutable.
func (o ModelOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v Model) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Resource requirements for the model
func (o ModelOutput) ResourceRequirements() ContainerResourceRequirementsPtrOutput {
	return o.ApplyT(func(v Model) *ContainerResourceRequirements { return v.ResourceRequirements }).(ContainerResourceRequirementsPtrOutput)
}

// The RunId that created this model.
func (o ModelOutput) RunId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.RunId }).(pulumi.StringPtrOutput)
}

// Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
func (o ModelOutput) SampleInputData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.SampleInputData }).(pulumi.StringPtrOutput)
}

// Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
func (o ModelOutput) SampleOutputData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Model) *string { return v.SampleOutputData }).(pulumi.StringPtrOutput)
}

// Indicates whether we need to unpack the Model during docker Image creation.
func (o ModelOutput) Unpack() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Model) *bool { return v.Unpack }).(pulumi.BoolPtrOutput)
}

// The URL of the Model. Usually a SAS URL.
func (o ModelOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v Model) string { return v.Url }).(pulumi.StringOutput)
}

// The Model version assigned by Model Management Service.
func (o ModelOutput) Version() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v Model) *float64 { return v.Version }).(pulumi.Float64PtrOutput)
}

type ModelArrayOutput struct{ *pulumi.OutputState }

func (ModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Model)(nil)).Elem()
}

func (o ModelArrayOutput) ToModelArrayOutput() ModelArrayOutput {
	return o
}

func (o ModelArrayOutput) ToModelArrayOutputWithContext(ctx context.Context) ModelArrayOutput {
	return o
}

func (o ModelArrayOutput) Index(i pulumi.IntInput) ModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Model {
		return vs[0].([]Model)[vs[1].(int)]
	}).(ModelOutput)
}

// Image registry that contains the base image.
type ModelDockerSectionBaseImageRegistry struct {
	Address  *string `pulumi:"address"`
	Password *string `pulumi:"password"`
	Username *string `pulumi:"username"`
}

// ModelDockerSectionBaseImageRegistryInput is an input type that accepts ModelDockerSectionBaseImageRegistryArgs and ModelDockerSectionBaseImageRegistryOutput values.
// You can construct a concrete instance of `ModelDockerSectionBaseImageRegistryInput` via:
//
//          ModelDockerSectionBaseImageRegistryArgs{...}
type ModelDockerSectionBaseImageRegistryInput interface {
	pulumi.Input

	ToModelDockerSectionBaseImageRegistryOutput() ModelDockerSectionBaseImageRegistryOutput
	ToModelDockerSectionBaseImageRegistryOutputWithContext(context.Context) ModelDockerSectionBaseImageRegistryOutput
}

// Image registry that contains the base image.
type ModelDockerSectionBaseImageRegistryArgs struct {
	Address  pulumi.StringPtrInput `pulumi:"address"`
	Password pulumi.StringPtrInput `pulumi:"password"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ModelDockerSectionBaseImageRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelDockerSectionBaseImageRegistry)(nil)).Elem()
}

func (i ModelDockerSectionBaseImageRegistryArgs) ToModelDockerSectionBaseImageRegistryOutput() ModelDockerSectionBaseImageRegistryOutput {
	return i.ToModelDockerSectionBaseImageRegistryOutputWithContext(context.Background())
}

func (i ModelDockerSectionBaseImageRegistryArgs) ToModelDockerSectionBaseImageRegistryOutputWithContext(ctx context.Context) ModelDockerSectionBaseImageRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDockerSectionBaseImageRegistryOutput)
}

func (i ModelDockerSectionBaseImageRegistryArgs) ToModelDockerSectionBaseImageRegistryPtrOutput() ModelDockerSectionBaseImageRegistryPtrOutput {
	return i.ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(context.Background())
}

func (i ModelDockerSectionBaseImageRegistryArgs) ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionBaseImageRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDockerSectionBaseImageRegistryOutput).ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(ctx)
}

// ModelDockerSectionBaseImageRegistryPtrInput is an input type that accepts ModelDockerSectionBaseImageRegistryArgs, ModelDockerSectionBaseImageRegistryPtr and ModelDockerSectionBaseImageRegistryPtrOutput values.
// You can construct a concrete instance of `ModelDockerSectionBaseImageRegistryPtrInput` via:
//
//          ModelDockerSectionBaseImageRegistryArgs{...}
//
//  or:
//
//          nil
type ModelDockerSectionBaseImageRegistryPtrInput interface {
	pulumi.Input

	ToModelDockerSectionBaseImageRegistryPtrOutput() ModelDockerSectionBaseImageRegistryPtrOutput
	ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(context.Context) ModelDockerSectionBaseImageRegistryPtrOutput
}

type modelDockerSectionBaseImageRegistryPtrType ModelDockerSectionBaseImageRegistryArgs

func ModelDockerSectionBaseImageRegistryPtr(v *ModelDockerSectionBaseImageRegistryArgs) ModelDockerSectionBaseImageRegistryPtrInput {
	return (*modelDockerSectionBaseImageRegistryPtrType)(v)
}

func (*modelDockerSectionBaseImageRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelDockerSectionBaseImageRegistry)(nil)).Elem()
}

func (i *modelDockerSectionBaseImageRegistryPtrType) ToModelDockerSectionBaseImageRegistryPtrOutput() ModelDockerSectionBaseImageRegistryPtrOutput {
	return i.ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(context.Background())
}

func (i *modelDockerSectionBaseImageRegistryPtrType) ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionBaseImageRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDockerSectionBaseImageRegistryPtrOutput)
}

// Image registry that contains the base image.
type ModelDockerSectionBaseImageRegistryOutput struct{ *pulumi.OutputState }

func (ModelDockerSectionBaseImageRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelDockerSectionBaseImageRegistry)(nil)).Elem()
}

func (o ModelDockerSectionBaseImageRegistryOutput) ToModelDockerSectionBaseImageRegistryOutput() ModelDockerSectionBaseImageRegistryOutput {
	return o
}

func (o ModelDockerSectionBaseImageRegistryOutput) ToModelDockerSectionBaseImageRegistryOutputWithContext(ctx context.Context) ModelDockerSectionBaseImageRegistryOutput {
	return o
}

func (o ModelDockerSectionBaseImageRegistryOutput) ToModelDockerSectionBaseImageRegistryPtrOutput() ModelDockerSectionBaseImageRegistryPtrOutput {
	return o.ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(context.Background())
}

func (o ModelDockerSectionBaseImageRegistryOutput) ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionBaseImageRegistryPtrOutput {
	return o.ApplyT(func(v ModelDockerSectionBaseImageRegistry) *ModelDockerSectionBaseImageRegistry {
		return &v
	}).(ModelDockerSectionBaseImageRegistryPtrOutput)
}
func (o ModelDockerSectionBaseImageRegistryOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelDockerSectionBaseImageRegistry) *string { return v.Address }).(pulumi.StringPtrOutput)
}

func (o ModelDockerSectionBaseImageRegistryOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelDockerSectionBaseImageRegistry) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ModelDockerSectionBaseImageRegistryOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelDockerSectionBaseImageRegistry) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ModelDockerSectionBaseImageRegistryPtrOutput struct{ *pulumi.OutputState }

func (ModelDockerSectionBaseImageRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelDockerSectionBaseImageRegistry)(nil)).Elem()
}

func (o ModelDockerSectionBaseImageRegistryPtrOutput) ToModelDockerSectionBaseImageRegistryPtrOutput() ModelDockerSectionBaseImageRegistryPtrOutput {
	return o
}

func (o ModelDockerSectionBaseImageRegistryPtrOutput) ToModelDockerSectionBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionBaseImageRegistryPtrOutput {
	return o
}

func (o ModelDockerSectionBaseImageRegistryPtrOutput) Elem() ModelDockerSectionBaseImageRegistryOutput {
	return o.ApplyT(func(v *ModelDockerSectionBaseImageRegistry) ModelDockerSectionBaseImageRegistry { return *v }).(ModelDockerSectionBaseImageRegistryOutput)
}

func (o ModelDockerSectionBaseImageRegistryPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelDockerSectionBaseImageRegistry) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

func (o ModelDockerSectionBaseImageRegistryPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelDockerSectionBaseImageRegistry) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ModelDockerSectionBaseImageRegistryPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelDockerSectionBaseImageRegistry) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Image registry that contains the base image.
type ModelDockerSectionResponseInvokeResponseBaseImageRegistry struct {
	Address *string `pulumi:"address"`
}

// ModelDockerSectionResponseInvokeResponseBaseImageRegistryInput is an input type that accepts ModelDockerSectionResponseInvokeResponseBaseImageRegistryArgs and ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput values.
// You can construct a concrete instance of `ModelDockerSectionResponseInvokeResponseBaseImageRegistryInput` via:
//
//          ModelDockerSectionResponseInvokeResponseBaseImageRegistryArgs{...}
type ModelDockerSectionResponseInvokeResponseBaseImageRegistryInput interface {
	pulumi.Input

	ToModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput() ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput
	ToModelDockerSectionResponseInvokeResponseBaseImageRegistryOutputWithContext(context.Context) ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput
}

// Image registry that contains the base image.
type ModelDockerSectionResponseInvokeResponseBaseImageRegistryArgs struct {
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (ModelDockerSectionResponseInvokeResponseBaseImageRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelDockerSectionResponseInvokeResponseBaseImageRegistry)(nil)).Elem()
}

func (i ModelDockerSectionResponseInvokeResponseBaseImageRegistryArgs) ToModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput() ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput {
	return i.ToModelDockerSectionResponseInvokeResponseBaseImageRegistryOutputWithContext(context.Background())
}

func (i ModelDockerSectionResponseInvokeResponseBaseImageRegistryArgs) ToModelDockerSectionResponseInvokeResponseBaseImageRegistryOutputWithContext(ctx context.Context) ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput)
}

func (i ModelDockerSectionResponseInvokeResponseBaseImageRegistryArgs) ToModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput() ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput {
	return i.ToModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutputWithContext(context.Background())
}

func (i ModelDockerSectionResponseInvokeResponseBaseImageRegistryArgs) ToModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput).ToModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutputWithContext(ctx)
}

// ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrInput is an input type that accepts ModelDockerSectionResponseInvokeResponseBaseImageRegistryArgs, ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtr and ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput values.
// You can construct a concrete instance of `ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrInput` via:
//
//          ModelDockerSectionResponseInvokeResponseBaseImageRegistryArgs{...}
//
//  or:
//
//          nil
type ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrInput interface {
	pulumi.Input

	ToModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput() ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput
	ToModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutputWithContext(context.Context) ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput
}

type modelDockerSectionResponseInvokeResponseBaseImageRegistryPtrType ModelDockerSectionResponseInvokeResponseBaseImageRegistryArgs

func ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtr(v *ModelDockerSectionResponseInvokeResponseBaseImageRegistryArgs) ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrInput {
	return (*modelDockerSectionResponseInvokeResponseBaseImageRegistryPtrType)(v)
}

func (*modelDockerSectionResponseInvokeResponseBaseImageRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelDockerSectionResponseInvokeResponseBaseImageRegistry)(nil)).Elem()
}

func (i *modelDockerSectionResponseInvokeResponseBaseImageRegistryPtrType) ToModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput() ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput {
	return i.ToModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutputWithContext(context.Background())
}

func (i *modelDockerSectionResponseInvokeResponseBaseImageRegistryPtrType) ToModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput)
}

// Image registry that contains the base image.
type ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput struct{ *pulumi.OutputState }

func (ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelDockerSectionResponseInvokeResponseBaseImageRegistry)(nil)).Elem()
}

func (o ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput) ToModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput() ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput {
	return o
}

func (o ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput) ToModelDockerSectionResponseInvokeResponseBaseImageRegistryOutputWithContext(ctx context.Context) ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput {
	return o
}

func (o ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput) ToModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput() ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput {
	return o.ToModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutputWithContext(context.Background())
}

func (o ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput) ToModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput {
	return o.ApplyT(func(v ModelDockerSectionResponseInvokeResponseBaseImageRegistry) *ModelDockerSectionResponseInvokeResponseBaseImageRegistry {
		return &v
	}).(ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput)
}
func (o ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelDockerSectionResponseInvokeResponseBaseImageRegistry) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput struct{ *pulumi.OutputState }

func (ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelDockerSectionResponseInvokeResponseBaseImageRegistry)(nil)).Elem()
}

func (o ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput) ToModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput() ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput {
	return o
}

func (o ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput) ToModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput {
	return o
}

func (o ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput) Elem() ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput {
	return o.ApplyT(func(v *ModelDockerSectionResponseInvokeResponseBaseImageRegistry) ModelDockerSectionResponseInvokeResponseBaseImageRegistry {
		return *v
	}).(ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput)
}

func (o ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelDockerSectionResponseInvokeResponseBaseImageRegistry) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Image registry that contains the base image.
type ModelDockerSectionResponseResponseBaseImageRegistry struct {
	Address *string `pulumi:"address"`
}

// ModelDockerSectionResponseResponseBaseImageRegistryInput is an input type that accepts ModelDockerSectionResponseResponseBaseImageRegistryArgs and ModelDockerSectionResponseResponseBaseImageRegistryOutput values.
// You can construct a concrete instance of `ModelDockerSectionResponseResponseBaseImageRegistryInput` via:
//
//          ModelDockerSectionResponseResponseBaseImageRegistryArgs{...}
type ModelDockerSectionResponseResponseBaseImageRegistryInput interface {
	pulumi.Input

	ToModelDockerSectionResponseResponseBaseImageRegistryOutput() ModelDockerSectionResponseResponseBaseImageRegistryOutput
	ToModelDockerSectionResponseResponseBaseImageRegistryOutputWithContext(context.Context) ModelDockerSectionResponseResponseBaseImageRegistryOutput
}

// Image registry that contains the base image.
type ModelDockerSectionResponseResponseBaseImageRegistryArgs struct {
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (ModelDockerSectionResponseResponseBaseImageRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelDockerSectionResponseResponseBaseImageRegistry)(nil)).Elem()
}

func (i ModelDockerSectionResponseResponseBaseImageRegistryArgs) ToModelDockerSectionResponseResponseBaseImageRegistryOutput() ModelDockerSectionResponseResponseBaseImageRegistryOutput {
	return i.ToModelDockerSectionResponseResponseBaseImageRegistryOutputWithContext(context.Background())
}

func (i ModelDockerSectionResponseResponseBaseImageRegistryArgs) ToModelDockerSectionResponseResponseBaseImageRegistryOutputWithContext(ctx context.Context) ModelDockerSectionResponseResponseBaseImageRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDockerSectionResponseResponseBaseImageRegistryOutput)
}

func (i ModelDockerSectionResponseResponseBaseImageRegistryArgs) ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutput() ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return i.ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(context.Background())
}

func (i ModelDockerSectionResponseResponseBaseImageRegistryArgs) ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDockerSectionResponseResponseBaseImageRegistryOutput).ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(ctx)
}

// ModelDockerSectionResponseResponseBaseImageRegistryPtrInput is an input type that accepts ModelDockerSectionResponseResponseBaseImageRegistryArgs, ModelDockerSectionResponseResponseBaseImageRegistryPtr and ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput values.
// You can construct a concrete instance of `ModelDockerSectionResponseResponseBaseImageRegistryPtrInput` via:
//
//          ModelDockerSectionResponseResponseBaseImageRegistryArgs{...}
//
//  or:
//
//          nil
type ModelDockerSectionResponseResponseBaseImageRegistryPtrInput interface {
	pulumi.Input

	ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutput() ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput
	ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(context.Context) ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput
}

type modelDockerSectionResponseResponseBaseImageRegistryPtrType ModelDockerSectionResponseResponseBaseImageRegistryArgs

func ModelDockerSectionResponseResponseBaseImageRegistryPtr(v *ModelDockerSectionResponseResponseBaseImageRegistryArgs) ModelDockerSectionResponseResponseBaseImageRegistryPtrInput {
	return (*modelDockerSectionResponseResponseBaseImageRegistryPtrType)(v)
}

func (*modelDockerSectionResponseResponseBaseImageRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelDockerSectionResponseResponseBaseImageRegistry)(nil)).Elem()
}

func (i *modelDockerSectionResponseResponseBaseImageRegistryPtrType) ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutput() ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return i.ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(context.Background())
}

func (i *modelDockerSectionResponseResponseBaseImageRegistryPtrType) ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput)
}

// Image registry that contains the base image.
type ModelDockerSectionResponseResponseBaseImageRegistryOutput struct{ *pulumi.OutputState }

func (ModelDockerSectionResponseResponseBaseImageRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelDockerSectionResponseResponseBaseImageRegistry)(nil)).Elem()
}

func (o ModelDockerSectionResponseResponseBaseImageRegistryOutput) ToModelDockerSectionResponseResponseBaseImageRegistryOutput() ModelDockerSectionResponseResponseBaseImageRegistryOutput {
	return o
}

func (o ModelDockerSectionResponseResponseBaseImageRegistryOutput) ToModelDockerSectionResponseResponseBaseImageRegistryOutputWithContext(ctx context.Context) ModelDockerSectionResponseResponseBaseImageRegistryOutput {
	return o
}

func (o ModelDockerSectionResponseResponseBaseImageRegistryOutput) ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutput() ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return o.ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(context.Background())
}

func (o ModelDockerSectionResponseResponseBaseImageRegistryOutput) ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return o.ApplyT(func(v ModelDockerSectionResponseResponseBaseImageRegistry) *ModelDockerSectionResponseResponseBaseImageRegistry {
		return &v
	}).(ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput)
}
func (o ModelDockerSectionResponseResponseBaseImageRegistryOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelDockerSectionResponseResponseBaseImageRegistry) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput struct{ *pulumi.OutputState }

func (ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelDockerSectionResponseResponseBaseImageRegistry)(nil)).Elem()
}

func (o ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput) ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutput() ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return o
}

func (o ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput) ToModelDockerSectionResponseResponseBaseImageRegistryPtrOutputWithContext(ctx context.Context) ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return o
}

func (o ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput) Elem() ModelDockerSectionResponseResponseBaseImageRegistryOutput {
	return o.ApplyT(func(v *ModelDockerSectionResponseResponseBaseImageRegistry) ModelDockerSectionResponseResponseBaseImageRegistry {
		return *v
	}).(ModelDockerSectionResponseResponseBaseImageRegistryOutput)
}

func (o ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelDockerSectionResponseResponseBaseImageRegistry) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The definition of a Docker container.
type ModelEnvironmentDefinitionDocker struct {
	// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
	BaseDockerfile *string `pulumi:"baseDockerfile"`
	// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
	BaseImage *string `pulumi:"baseImage"`
	// Image registry that contains the base image.
	BaseImageRegistry *ModelDockerSectionBaseImageRegistry `pulumi:"baseImageRegistry"`
}

// ModelEnvironmentDefinitionDockerInput is an input type that accepts ModelEnvironmentDefinitionDockerArgs and ModelEnvironmentDefinitionDockerOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionDockerInput` via:
//
//          ModelEnvironmentDefinitionDockerArgs{...}
type ModelEnvironmentDefinitionDockerInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionDockerOutput() ModelEnvironmentDefinitionDockerOutput
	ToModelEnvironmentDefinitionDockerOutputWithContext(context.Context) ModelEnvironmentDefinitionDockerOutput
}

// The definition of a Docker container.
type ModelEnvironmentDefinitionDockerArgs struct {
	// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
	BaseDockerfile pulumi.StringPtrInput `pulumi:"baseDockerfile"`
	// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
	BaseImage pulumi.StringPtrInput `pulumi:"baseImage"`
	// Image registry that contains the base image.
	BaseImageRegistry ModelDockerSectionBaseImageRegistryPtrInput `pulumi:"baseImageRegistry"`
}

func (ModelEnvironmentDefinitionDockerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionDocker)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionDockerArgs) ToModelEnvironmentDefinitionDockerOutput() ModelEnvironmentDefinitionDockerOutput {
	return i.ToModelEnvironmentDefinitionDockerOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionDockerArgs) ToModelEnvironmentDefinitionDockerOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionDockerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionDockerOutput)
}

func (i ModelEnvironmentDefinitionDockerArgs) ToModelEnvironmentDefinitionDockerPtrOutput() ModelEnvironmentDefinitionDockerPtrOutput {
	return i.ToModelEnvironmentDefinitionDockerPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionDockerArgs) ToModelEnvironmentDefinitionDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionDockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionDockerOutput).ToModelEnvironmentDefinitionDockerPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionDockerPtrInput is an input type that accepts ModelEnvironmentDefinitionDockerArgs, ModelEnvironmentDefinitionDockerPtr and ModelEnvironmentDefinitionDockerPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionDockerPtrInput` via:
//
//          ModelEnvironmentDefinitionDockerArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionDockerPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionDockerPtrOutput() ModelEnvironmentDefinitionDockerPtrOutput
	ToModelEnvironmentDefinitionDockerPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionDockerPtrOutput
}

type modelEnvironmentDefinitionDockerPtrType ModelEnvironmentDefinitionDockerArgs

func ModelEnvironmentDefinitionDockerPtr(v *ModelEnvironmentDefinitionDockerArgs) ModelEnvironmentDefinitionDockerPtrInput {
	return (*modelEnvironmentDefinitionDockerPtrType)(v)
}

func (*modelEnvironmentDefinitionDockerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionDocker)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionDockerPtrType) ToModelEnvironmentDefinitionDockerPtrOutput() ModelEnvironmentDefinitionDockerPtrOutput {
	return i.ToModelEnvironmentDefinitionDockerPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionDockerPtrType) ToModelEnvironmentDefinitionDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionDockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionDockerPtrOutput)
}

// The definition of a Docker container.
type ModelEnvironmentDefinitionDockerOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionDockerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionDocker)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionDockerOutput) ToModelEnvironmentDefinitionDockerOutput() ModelEnvironmentDefinitionDockerOutput {
	return o
}

func (o ModelEnvironmentDefinitionDockerOutput) ToModelEnvironmentDefinitionDockerOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionDockerOutput {
	return o
}

func (o ModelEnvironmentDefinitionDockerOutput) ToModelEnvironmentDefinitionDockerPtrOutput() ModelEnvironmentDefinitionDockerPtrOutput {
	return o.ToModelEnvironmentDefinitionDockerPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionDockerOutput) ToModelEnvironmentDefinitionDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionDockerPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionDocker) *ModelEnvironmentDefinitionDocker {
		return &v
	}).(ModelEnvironmentDefinitionDockerPtrOutput)
}

// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
func (o ModelEnvironmentDefinitionDockerOutput) BaseDockerfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionDocker) *string { return v.BaseDockerfile }).(pulumi.StringPtrOutput)
}

// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
func (o ModelEnvironmentDefinitionDockerOutput) BaseImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionDocker) *string { return v.BaseImage }).(pulumi.StringPtrOutput)
}

// Image registry that contains the base image.
func (o ModelEnvironmentDefinitionDockerOutput) BaseImageRegistry() ModelDockerSectionBaseImageRegistryPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionDocker) *ModelDockerSectionBaseImageRegistry {
		return v.BaseImageRegistry
	}).(ModelDockerSectionBaseImageRegistryPtrOutput)
}

type ModelEnvironmentDefinitionDockerPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionDockerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionDocker)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionDockerPtrOutput) ToModelEnvironmentDefinitionDockerPtrOutput() ModelEnvironmentDefinitionDockerPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionDockerPtrOutput) ToModelEnvironmentDefinitionDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionDockerPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionDockerPtrOutput) Elem() ModelEnvironmentDefinitionDockerOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionDocker) ModelEnvironmentDefinitionDocker { return *v }).(ModelEnvironmentDefinitionDockerOutput)
}

// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
func (o ModelEnvironmentDefinitionDockerPtrOutput) BaseDockerfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionDocker) *string {
		if v == nil {
			return nil
		}
		return v.BaseDockerfile
	}).(pulumi.StringPtrOutput)
}

// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
func (o ModelEnvironmentDefinitionDockerPtrOutput) BaseImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionDocker) *string {
		if v == nil {
			return nil
		}
		return v.BaseImage
	}).(pulumi.StringPtrOutput)
}

// Image registry that contains the base image.
func (o ModelEnvironmentDefinitionDockerPtrOutput) BaseImageRegistry() ModelDockerSectionBaseImageRegistryPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionDocker) *ModelDockerSectionBaseImageRegistry {
		if v == nil {
			return nil
		}
		return v.BaseImageRegistry
	}).(ModelDockerSectionBaseImageRegistryPtrOutput)
}

// Settings for a Python environment.
type ModelEnvironmentDefinitionPython struct {
	BaseCondaEnvironment *string `pulumi:"baseCondaEnvironment"`
	// A JObject containing Conda dependencies.
	CondaDependencies interface{} `pulumi:"condaDependencies"`
	// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
	InterpreterPath *string `pulumi:"interpreterPath"`
	// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
	UserManagedDependencies *bool `pulumi:"userManagedDependencies"`
}

// ModelEnvironmentDefinitionPythonInput is an input type that accepts ModelEnvironmentDefinitionPythonArgs and ModelEnvironmentDefinitionPythonOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionPythonInput` via:
//
//          ModelEnvironmentDefinitionPythonArgs{...}
type ModelEnvironmentDefinitionPythonInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionPythonOutput() ModelEnvironmentDefinitionPythonOutput
	ToModelEnvironmentDefinitionPythonOutputWithContext(context.Context) ModelEnvironmentDefinitionPythonOutput
}

// Settings for a Python environment.
type ModelEnvironmentDefinitionPythonArgs struct {
	BaseCondaEnvironment pulumi.StringPtrInput `pulumi:"baseCondaEnvironment"`
	// A JObject containing Conda dependencies.
	CondaDependencies pulumi.Input `pulumi:"condaDependencies"`
	// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
	InterpreterPath pulumi.StringPtrInput `pulumi:"interpreterPath"`
	// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
	UserManagedDependencies pulumi.BoolPtrInput `pulumi:"userManagedDependencies"`
}

func (ModelEnvironmentDefinitionPythonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionPython)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionPythonArgs) ToModelEnvironmentDefinitionPythonOutput() ModelEnvironmentDefinitionPythonOutput {
	return i.ToModelEnvironmentDefinitionPythonOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionPythonArgs) ToModelEnvironmentDefinitionPythonOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionPythonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionPythonOutput)
}

func (i ModelEnvironmentDefinitionPythonArgs) ToModelEnvironmentDefinitionPythonPtrOutput() ModelEnvironmentDefinitionPythonPtrOutput {
	return i.ToModelEnvironmentDefinitionPythonPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionPythonArgs) ToModelEnvironmentDefinitionPythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionPythonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionPythonOutput).ToModelEnvironmentDefinitionPythonPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionPythonPtrInput is an input type that accepts ModelEnvironmentDefinitionPythonArgs, ModelEnvironmentDefinitionPythonPtr and ModelEnvironmentDefinitionPythonPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionPythonPtrInput` via:
//
//          ModelEnvironmentDefinitionPythonArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionPythonPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionPythonPtrOutput() ModelEnvironmentDefinitionPythonPtrOutput
	ToModelEnvironmentDefinitionPythonPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionPythonPtrOutput
}

type modelEnvironmentDefinitionPythonPtrType ModelEnvironmentDefinitionPythonArgs

func ModelEnvironmentDefinitionPythonPtr(v *ModelEnvironmentDefinitionPythonArgs) ModelEnvironmentDefinitionPythonPtrInput {
	return (*modelEnvironmentDefinitionPythonPtrType)(v)
}

func (*modelEnvironmentDefinitionPythonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionPython)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionPythonPtrType) ToModelEnvironmentDefinitionPythonPtrOutput() ModelEnvironmentDefinitionPythonPtrOutput {
	return i.ToModelEnvironmentDefinitionPythonPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionPythonPtrType) ToModelEnvironmentDefinitionPythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionPythonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionPythonPtrOutput)
}

// Settings for a Python environment.
type ModelEnvironmentDefinitionPythonOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionPythonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionPython)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionPythonOutput) ToModelEnvironmentDefinitionPythonOutput() ModelEnvironmentDefinitionPythonOutput {
	return o
}

func (o ModelEnvironmentDefinitionPythonOutput) ToModelEnvironmentDefinitionPythonOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionPythonOutput {
	return o
}

func (o ModelEnvironmentDefinitionPythonOutput) ToModelEnvironmentDefinitionPythonPtrOutput() ModelEnvironmentDefinitionPythonPtrOutput {
	return o.ToModelEnvironmentDefinitionPythonPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionPythonOutput) ToModelEnvironmentDefinitionPythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionPythonPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionPython) *ModelEnvironmentDefinitionPython {
		return &v
	}).(ModelEnvironmentDefinitionPythonPtrOutput)
}
func (o ModelEnvironmentDefinitionPythonOutput) BaseCondaEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionPython) *string { return v.BaseCondaEnvironment }).(pulumi.StringPtrOutput)
}

// A JObject containing Conda dependencies.
func (o ModelEnvironmentDefinitionPythonOutput) CondaDependencies() pulumi.AnyOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionPython) interface{} { return v.CondaDependencies }).(pulumi.AnyOutput)
}

// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionPythonOutput) InterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionPython) *string { return v.InterpreterPath }).(pulumi.StringPtrOutput)
}

// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
func (o ModelEnvironmentDefinitionPythonOutput) UserManagedDependencies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionPython) *bool { return v.UserManagedDependencies }).(pulumi.BoolPtrOutput)
}

type ModelEnvironmentDefinitionPythonPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionPythonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionPython)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionPythonPtrOutput) ToModelEnvironmentDefinitionPythonPtrOutput() ModelEnvironmentDefinitionPythonPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionPythonPtrOutput) ToModelEnvironmentDefinitionPythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionPythonPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionPythonPtrOutput) Elem() ModelEnvironmentDefinitionPythonOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionPython) ModelEnvironmentDefinitionPython { return *v }).(ModelEnvironmentDefinitionPythonOutput)
}

func (o ModelEnvironmentDefinitionPythonPtrOutput) BaseCondaEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionPython) *string {
		if v == nil {
			return nil
		}
		return v.BaseCondaEnvironment
	}).(pulumi.StringPtrOutput)
}

// A JObject containing Conda dependencies.
func (o ModelEnvironmentDefinitionPythonPtrOutput) CondaDependencies() pulumi.AnyOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionPython) interface{} {
		if v == nil {
			return nil
		}
		return v.CondaDependencies
	}).(pulumi.AnyOutput)
}

// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionPythonPtrOutput) InterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionPython) *string {
		if v == nil {
			return nil
		}
		return v.InterpreterPath
	}).(pulumi.StringPtrOutput)
}

// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
func (o ModelEnvironmentDefinitionPythonPtrOutput) UserManagedDependencies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionPython) *bool {
		if v == nil {
			return nil
		}
		return v.UserManagedDependencies
	}).(pulumi.BoolPtrOutput)
}

// Settings for a R environment.
type ModelEnvironmentDefinitionR struct {
	// The packages from Bioconductor.
	BioConductorPackages []string `pulumi:"bioConductorPackages"`
	// The CRAN packages to use.
	CranPackages []RCranPackage `pulumi:"cranPackages"`
	// The packages from custom urls.
	CustomUrlPackages []string `pulumi:"customUrlPackages"`
	// The packages directly from GitHub.
	GitHubPackages []RGitHubPackage `pulumi:"gitHubPackages"`
	// The version of R to be installed
	RVersion *string `pulumi:"rVersion"`
	// The Rscript path to use if an environment build is not required.
	// The path specified gets used to call the user script.
	RscriptPath *string `pulumi:"rscriptPath"`
	// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
	SnapshotDate *string `pulumi:"snapshotDate"`
	// Indicates whether the environment is managed by user or by AzureML.
	UserManaged *bool `pulumi:"userManaged"`
}

// ModelEnvironmentDefinitionRInput is an input type that accepts ModelEnvironmentDefinitionRArgs and ModelEnvironmentDefinitionROutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionRInput` via:
//
//          ModelEnvironmentDefinitionRArgs{...}
type ModelEnvironmentDefinitionRInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionROutput() ModelEnvironmentDefinitionROutput
	ToModelEnvironmentDefinitionROutputWithContext(context.Context) ModelEnvironmentDefinitionROutput
}

// Settings for a R environment.
type ModelEnvironmentDefinitionRArgs struct {
	// The packages from Bioconductor.
	BioConductorPackages pulumi.StringArrayInput `pulumi:"bioConductorPackages"`
	// The CRAN packages to use.
	CranPackages RCranPackageArrayInput `pulumi:"cranPackages"`
	// The packages from custom urls.
	CustomUrlPackages pulumi.StringArrayInput `pulumi:"customUrlPackages"`
	// The packages directly from GitHub.
	GitHubPackages RGitHubPackageArrayInput `pulumi:"gitHubPackages"`
	// The version of R to be installed
	RVersion pulumi.StringPtrInput `pulumi:"rVersion"`
	// The Rscript path to use if an environment build is not required.
	// The path specified gets used to call the user script.
	RscriptPath pulumi.StringPtrInput `pulumi:"rscriptPath"`
	// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
	SnapshotDate pulumi.StringPtrInput `pulumi:"snapshotDate"`
	// Indicates whether the environment is managed by user or by AzureML.
	UserManaged pulumi.BoolPtrInput `pulumi:"userManaged"`
}

func (ModelEnvironmentDefinitionRArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionR)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionRArgs) ToModelEnvironmentDefinitionROutput() ModelEnvironmentDefinitionROutput {
	return i.ToModelEnvironmentDefinitionROutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionRArgs) ToModelEnvironmentDefinitionROutputWithContext(ctx context.Context) ModelEnvironmentDefinitionROutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionROutput)
}

func (i ModelEnvironmentDefinitionRArgs) ToModelEnvironmentDefinitionRPtrOutput() ModelEnvironmentDefinitionRPtrOutput {
	return i.ToModelEnvironmentDefinitionRPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionRArgs) ToModelEnvironmentDefinitionRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionRPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionROutput).ToModelEnvironmentDefinitionRPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionRPtrInput is an input type that accepts ModelEnvironmentDefinitionRArgs, ModelEnvironmentDefinitionRPtr and ModelEnvironmentDefinitionRPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionRPtrInput` via:
//
//          ModelEnvironmentDefinitionRArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionRPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionRPtrOutput() ModelEnvironmentDefinitionRPtrOutput
	ToModelEnvironmentDefinitionRPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionRPtrOutput
}

type modelEnvironmentDefinitionRPtrType ModelEnvironmentDefinitionRArgs

func ModelEnvironmentDefinitionRPtr(v *ModelEnvironmentDefinitionRArgs) ModelEnvironmentDefinitionRPtrInput {
	return (*modelEnvironmentDefinitionRPtrType)(v)
}

func (*modelEnvironmentDefinitionRPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionR)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionRPtrType) ToModelEnvironmentDefinitionRPtrOutput() ModelEnvironmentDefinitionRPtrOutput {
	return i.ToModelEnvironmentDefinitionRPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionRPtrType) ToModelEnvironmentDefinitionRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionRPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionRPtrOutput)
}

// Settings for a R environment.
type ModelEnvironmentDefinitionROutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionROutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionR)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionROutput) ToModelEnvironmentDefinitionROutput() ModelEnvironmentDefinitionROutput {
	return o
}

func (o ModelEnvironmentDefinitionROutput) ToModelEnvironmentDefinitionROutputWithContext(ctx context.Context) ModelEnvironmentDefinitionROutput {
	return o
}

func (o ModelEnvironmentDefinitionROutput) ToModelEnvironmentDefinitionRPtrOutput() ModelEnvironmentDefinitionRPtrOutput {
	return o.ToModelEnvironmentDefinitionRPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionROutput) ToModelEnvironmentDefinitionRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionRPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionR) *ModelEnvironmentDefinitionR {
		return &v
	}).(ModelEnvironmentDefinitionRPtrOutput)
}

// The packages from Bioconductor.
func (o ModelEnvironmentDefinitionROutput) BioConductorPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionR) []string { return v.BioConductorPackages }).(pulumi.StringArrayOutput)
}

// The CRAN packages to use.
func (o ModelEnvironmentDefinitionROutput) CranPackages() RCranPackageArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionR) []RCranPackage { return v.CranPackages }).(RCranPackageArrayOutput)
}

// The packages from custom urls.
func (o ModelEnvironmentDefinitionROutput) CustomUrlPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionR) []string { return v.CustomUrlPackages }).(pulumi.StringArrayOutput)
}

// The packages directly from GitHub.
func (o ModelEnvironmentDefinitionROutput) GitHubPackages() RGitHubPackageArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionR) []RGitHubPackage { return v.GitHubPackages }).(RGitHubPackageArrayOutput)
}

// The version of R to be installed
func (o ModelEnvironmentDefinitionROutput) RVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionR) *string { return v.RVersion }).(pulumi.StringPtrOutput)
}

// The Rscript path to use if an environment build is not required.
// The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionROutput) RscriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionR) *string { return v.RscriptPath }).(pulumi.StringPtrOutput)
}

// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
func (o ModelEnvironmentDefinitionROutput) SnapshotDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionR) *string { return v.SnapshotDate }).(pulumi.StringPtrOutput)
}

// Indicates whether the environment is managed by user or by AzureML.
func (o ModelEnvironmentDefinitionROutput) UserManaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionR) *bool { return v.UserManaged }).(pulumi.BoolPtrOutput)
}

type ModelEnvironmentDefinitionRPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionRPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionR)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionRPtrOutput) ToModelEnvironmentDefinitionRPtrOutput() ModelEnvironmentDefinitionRPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionRPtrOutput) ToModelEnvironmentDefinitionRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionRPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionRPtrOutput) Elem() ModelEnvironmentDefinitionROutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) ModelEnvironmentDefinitionR { return *v }).(ModelEnvironmentDefinitionROutput)
}

// The packages from Bioconductor.
func (o ModelEnvironmentDefinitionRPtrOutput) BioConductorPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) []string {
		if v == nil {
			return nil
		}
		return v.BioConductorPackages
	}).(pulumi.StringArrayOutput)
}

// The CRAN packages to use.
func (o ModelEnvironmentDefinitionRPtrOutput) CranPackages() RCranPackageArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) []RCranPackage {
		if v == nil {
			return nil
		}
		return v.CranPackages
	}).(RCranPackageArrayOutput)
}

// The packages from custom urls.
func (o ModelEnvironmentDefinitionRPtrOutput) CustomUrlPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) []string {
		if v == nil {
			return nil
		}
		return v.CustomUrlPackages
	}).(pulumi.StringArrayOutput)
}

// The packages directly from GitHub.
func (o ModelEnvironmentDefinitionRPtrOutput) GitHubPackages() RGitHubPackageArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) []RGitHubPackage {
		if v == nil {
			return nil
		}
		return v.GitHubPackages
	}).(RGitHubPackageArrayOutput)
}

// The version of R to be installed
func (o ModelEnvironmentDefinitionRPtrOutput) RVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) *string {
		if v == nil {
			return nil
		}
		return v.RVersion
	}).(pulumi.StringPtrOutput)
}

// The Rscript path to use if an environment build is not required.
// The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionRPtrOutput) RscriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) *string {
		if v == nil {
			return nil
		}
		return v.RscriptPath
	}).(pulumi.StringPtrOutput)
}

// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
func (o ModelEnvironmentDefinitionRPtrOutput) SnapshotDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotDate
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the environment is managed by user or by AzureML.
func (o ModelEnvironmentDefinitionRPtrOutput) UserManaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionR) *bool {
		if v == nil {
			return nil
		}
		return v.UserManaged
	}).(pulumi.BoolPtrOutput)
}

// The definition of a Docker container.
type ModelEnvironmentDefinitionResponseInvokeResponseDocker struct {
	// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
	BaseDockerfile *string `pulumi:"baseDockerfile"`
	// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
	BaseImage *string `pulumi:"baseImage"`
	// Image registry that contains the base image.
	BaseImageRegistry *ModelDockerSectionResponseInvokeResponseBaseImageRegistry `pulumi:"baseImageRegistry"`
}

// ModelEnvironmentDefinitionResponseInvokeResponseDockerInput is an input type that accepts ModelEnvironmentDefinitionResponseInvokeResponseDockerArgs and ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseInvokeResponseDockerInput` via:
//
//          ModelEnvironmentDefinitionResponseInvokeResponseDockerArgs{...}
type ModelEnvironmentDefinitionResponseInvokeResponseDockerInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseInvokeResponseDockerOutput() ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput
	ToModelEnvironmentDefinitionResponseInvokeResponseDockerOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput
}

// The definition of a Docker container.
type ModelEnvironmentDefinitionResponseInvokeResponseDockerArgs struct {
	// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
	BaseDockerfile pulumi.StringPtrInput `pulumi:"baseDockerfile"`
	// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
	BaseImage pulumi.StringPtrInput `pulumi:"baseImage"`
	// Image registry that contains the base image.
	BaseImageRegistry ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrInput `pulumi:"baseImageRegistry"`
}

func (ModelEnvironmentDefinitionResponseInvokeResponseDockerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseInvokeResponseDocker)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionResponseInvokeResponseDockerArgs) ToModelEnvironmentDefinitionResponseInvokeResponseDockerOutput() ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput {
	return i.ToModelEnvironmentDefinitionResponseInvokeResponseDockerOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseInvokeResponseDockerArgs) ToModelEnvironmentDefinitionResponseInvokeResponseDockerOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput)
}

func (i ModelEnvironmentDefinitionResponseInvokeResponseDockerArgs) ToModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseInvokeResponseDockerArgs) ToModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput).ToModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrInput is an input type that accepts ModelEnvironmentDefinitionResponseInvokeResponseDockerArgs, ModelEnvironmentDefinitionResponseInvokeResponseDockerPtr and ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrInput` via:
//
//          ModelEnvironmentDefinitionResponseInvokeResponseDockerArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput
	ToModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput
}

type modelEnvironmentDefinitionResponseInvokeResponseDockerPtrType ModelEnvironmentDefinitionResponseInvokeResponseDockerArgs

func ModelEnvironmentDefinitionResponseInvokeResponseDockerPtr(v *ModelEnvironmentDefinitionResponseInvokeResponseDockerArgs) ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrInput {
	return (*modelEnvironmentDefinitionResponseInvokeResponseDockerPtrType)(v)
}

func (*modelEnvironmentDefinitionResponseInvokeResponseDockerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseInvokeResponseDocker)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionResponseInvokeResponseDockerPtrType) ToModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionResponseInvokeResponseDockerPtrType) ToModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput)
}

// The definition of a Docker container.
type ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseInvokeResponseDocker)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput) ToModelEnvironmentDefinitionResponseInvokeResponseDockerOutput() ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput) ToModelEnvironmentDefinitionResponseInvokeResponseDockerOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput) ToModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput {
	return o.ToModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput) ToModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponseDocker) *ModelEnvironmentDefinitionResponseInvokeResponseDocker {
		return &v
	}).(ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput)
}

// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
func (o ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput) BaseDockerfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponseDocker) *string { return v.BaseDockerfile }).(pulumi.StringPtrOutput)
}

// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
func (o ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput) BaseImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponseDocker) *string { return v.BaseImage }).(pulumi.StringPtrOutput)
}

// Image registry that contains the base image.
func (o ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput) BaseImageRegistry() ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponseDocker) *ModelDockerSectionResponseInvokeResponseBaseImageRegistry {
		return v.BaseImageRegistry
	}).(ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput)
}

type ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseInvokeResponseDocker)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput) ToModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput) ToModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput) Elem() ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponseDocker) ModelEnvironmentDefinitionResponseInvokeResponseDocker {
		return *v
	}).(ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput)
}

// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
func (o ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput) BaseDockerfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponseDocker) *string {
		if v == nil {
			return nil
		}
		return v.BaseDockerfile
	}).(pulumi.StringPtrOutput)
}

// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
func (o ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput) BaseImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponseDocker) *string {
		if v == nil {
			return nil
		}
		return v.BaseImage
	}).(pulumi.StringPtrOutput)
}

// Image registry that contains the base image.
func (o ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput) BaseImageRegistry() ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponseDocker) *ModelDockerSectionResponseInvokeResponseBaseImageRegistry {
		if v == nil {
			return nil
		}
		return v.BaseImageRegistry
	}).(ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput)
}

// Settings for a Python environment.
type ModelEnvironmentDefinitionResponseInvokeResponsePython struct {
	BaseCondaEnvironment *string `pulumi:"baseCondaEnvironment"`
	// A JObject containing Conda dependencies.
	CondaDependencies interface{} `pulumi:"condaDependencies"`
	// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
	InterpreterPath *string `pulumi:"interpreterPath"`
	// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
	UserManagedDependencies *bool `pulumi:"userManagedDependencies"`
}

// ModelEnvironmentDefinitionResponseInvokeResponsePythonInput is an input type that accepts ModelEnvironmentDefinitionResponseInvokeResponsePythonArgs and ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseInvokeResponsePythonInput` via:
//
//          ModelEnvironmentDefinitionResponseInvokeResponsePythonArgs{...}
type ModelEnvironmentDefinitionResponseInvokeResponsePythonInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseInvokeResponsePythonOutput() ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput
	ToModelEnvironmentDefinitionResponseInvokeResponsePythonOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput
}

// Settings for a Python environment.
type ModelEnvironmentDefinitionResponseInvokeResponsePythonArgs struct {
	BaseCondaEnvironment pulumi.StringPtrInput `pulumi:"baseCondaEnvironment"`
	// A JObject containing Conda dependencies.
	CondaDependencies pulumi.Input `pulumi:"condaDependencies"`
	// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
	InterpreterPath pulumi.StringPtrInput `pulumi:"interpreterPath"`
	// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
	UserManagedDependencies pulumi.BoolPtrInput `pulumi:"userManagedDependencies"`
}

func (ModelEnvironmentDefinitionResponseInvokeResponsePythonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseInvokeResponsePython)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionResponseInvokeResponsePythonArgs) ToModelEnvironmentDefinitionResponseInvokeResponsePythonOutput() ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput {
	return i.ToModelEnvironmentDefinitionResponseInvokeResponsePythonOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseInvokeResponsePythonArgs) ToModelEnvironmentDefinitionResponseInvokeResponsePythonOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput)
}

func (i ModelEnvironmentDefinitionResponseInvokeResponsePythonArgs) ToModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseInvokeResponsePythonArgs) ToModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput).ToModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrInput is an input type that accepts ModelEnvironmentDefinitionResponseInvokeResponsePythonArgs, ModelEnvironmentDefinitionResponseInvokeResponsePythonPtr and ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrInput` via:
//
//          ModelEnvironmentDefinitionResponseInvokeResponsePythonArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput
	ToModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput
}

type modelEnvironmentDefinitionResponseInvokeResponsePythonPtrType ModelEnvironmentDefinitionResponseInvokeResponsePythonArgs

func ModelEnvironmentDefinitionResponseInvokeResponsePythonPtr(v *ModelEnvironmentDefinitionResponseInvokeResponsePythonArgs) ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrInput {
	return (*modelEnvironmentDefinitionResponseInvokeResponsePythonPtrType)(v)
}

func (*modelEnvironmentDefinitionResponseInvokeResponsePythonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseInvokeResponsePython)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionResponseInvokeResponsePythonPtrType) ToModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionResponseInvokeResponsePythonPtrType) ToModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput)
}

// Settings for a Python environment.
type ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseInvokeResponsePython)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput) ToModelEnvironmentDefinitionResponseInvokeResponsePythonOutput() ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput) ToModelEnvironmentDefinitionResponseInvokeResponsePythonOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput) ToModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput {
	return o.ToModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput) ToModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponsePython) *ModelEnvironmentDefinitionResponseInvokeResponsePython {
		return &v
	}).(ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput)
}
func (o ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput) BaseCondaEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponsePython) *string { return v.BaseCondaEnvironment }).(pulumi.StringPtrOutput)
}

// A JObject containing Conda dependencies.
func (o ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput) CondaDependencies() pulumi.AnyOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponsePython) interface{} { return v.CondaDependencies }).(pulumi.AnyOutput)
}

// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput) InterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponsePython) *string { return v.InterpreterPath }).(pulumi.StringPtrOutput)
}

// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
func (o ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput) UserManagedDependencies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponsePython) *bool { return v.UserManagedDependencies }).(pulumi.BoolPtrOutput)
}

type ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseInvokeResponsePython)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput) ToModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput) ToModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput) Elem() ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponsePython) ModelEnvironmentDefinitionResponseInvokeResponsePython {
		return *v
	}).(ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput)
}

func (o ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput) BaseCondaEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponsePython) *string {
		if v == nil {
			return nil
		}
		return v.BaseCondaEnvironment
	}).(pulumi.StringPtrOutput)
}

// A JObject containing Conda dependencies.
func (o ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput) CondaDependencies() pulumi.AnyOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponsePython) interface{} {
		if v == nil {
			return nil
		}
		return v.CondaDependencies
	}).(pulumi.AnyOutput)
}

// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput) InterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponsePython) *string {
		if v == nil {
			return nil
		}
		return v.InterpreterPath
	}).(pulumi.StringPtrOutput)
}

// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
func (o ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput) UserManagedDependencies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponsePython) *bool {
		if v == nil {
			return nil
		}
		return v.UserManagedDependencies
	}).(pulumi.BoolPtrOutput)
}

// Settings for a R environment.
type ModelEnvironmentDefinitionResponseInvokeResponseR struct {
	// The packages from Bioconductor.
	BioConductorPackages []string `pulumi:"bioConductorPackages"`
	// The CRAN packages to use.
	CranPackages []RCranPackageInvokeResponse `pulumi:"cranPackages"`
	// The packages from custom urls.
	CustomUrlPackages []string `pulumi:"customUrlPackages"`
	// The packages directly from GitHub.
	GitHubPackages []RGitHubPackageResponseInvokeResponse `pulumi:"gitHubPackages"`
	// The version of R to be installed
	RVersion *string `pulumi:"rVersion"`
	// The Rscript path to use if an environment build is not required.
	// The path specified gets used to call the user script.
	RscriptPath *string `pulumi:"rscriptPath"`
	// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
	SnapshotDate *string `pulumi:"snapshotDate"`
	// Indicates whether the environment is managed by user or by AzureML.
	UserManaged *bool `pulumi:"userManaged"`
}

// ModelEnvironmentDefinitionResponseInvokeResponseRInput is an input type that accepts ModelEnvironmentDefinitionResponseInvokeResponseRArgs and ModelEnvironmentDefinitionResponseInvokeResponseROutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseInvokeResponseRInput` via:
//
//          ModelEnvironmentDefinitionResponseInvokeResponseRArgs{...}
type ModelEnvironmentDefinitionResponseInvokeResponseRInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseInvokeResponseROutput() ModelEnvironmentDefinitionResponseInvokeResponseROutput
	ToModelEnvironmentDefinitionResponseInvokeResponseROutputWithContext(context.Context) ModelEnvironmentDefinitionResponseInvokeResponseROutput
}

// Settings for a R environment.
type ModelEnvironmentDefinitionResponseInvokeResponseRArgs struct {
	// The packages from Bioconductor.
	BioConductorPackages pulumi.StringArrayInput `pulumi:"bioConductorPackages"`
	// The CRAN packages to use.
	CranPackages RCranPackageInvokeResponseArrayInput `pulumi:"cranPackages"`
	// The packages from custom urls.
	CustomUrlPackages pulumi.StringArrayInput `pulumi:"customUrlPackages"`
	// The packages directly from GitHub.
	GitHubPackages RGitHubPackageResponseInvokeResponseArrayInput `pulumi:"gitHubPackages"`
	// The version of R to be installed
	RVersion pulumi.StringPtrInput `pulumi:"rVersion"`
	// The Rscript path to use if an environment build is not required.
	// The path specified gets used to call the user script.
	RscriptPath pulumi.StringPtrInput `pulumi:"rscriptPath"`
	// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
	SnapshotDate pulumi.StringPtrInput `pulumi:"snapshotDate"`
	// Indicates whether the environment is managed by user or by AzureML.
	UserManaged pulumi.BoolPtrInput `pulumi:"userManaged"`
}

func (ModelEnvironmentDefinitionResponseInvokeResponseRArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseInvokeResponseR)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionResponseInvokeResponseRArgs) ToModelEnvironmentDefinitionResponseInvokeResponseROutput() ModelEnvironmentDefinitionResponseInvokeResponseROutput {
	return i.ToModelEnvironmentDefinitionResponseInvokeResponseROutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseInvokeResponseRArgs) ToModelEnvironmentDefinitionResponseInvokeResponseROutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseROutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseInvokeResponseROutput)
}

func (i ModelEnvironmentDefinitionResponseInvokeResponseRArgs) ToModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseInvokeResponseRPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseInvokeResponseRArgs) ToModelEnvironmentDefinitionResponseInvokeResponseRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseInvokeResponseROutput).ToModelEnvironmentDefinitionResponseInvokeResponseRPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionResponseInvokeResponseRPtrInput is an input type that accepts ModelEnvironmentDefinitionResponseInvokeResponseRArgs, ModelEnvironmentDefinitionResponseInvokeResponseRPtr and ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseInvokeResponseRPtrInput` via:
//
//          ModelEnvironmentDefinitionResponseInvokeResponseRArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionResponseInvokeResponseRPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput
	ToModelEnvironmentDefinitionResponseInvokeResponseRPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput
}

type modelEnvironmentDefinitionResponseInvokeResponseRPtrType ModelEnvironmentDefinitionResponseInvokeResponseRArgs

func ModelEnvironmentDefinitionResponseInvokeResponseRPtr(v *ModelEnvironmentDefinitionResponseInvokeResponseRArgs) ModelEnvironmentDefinitionResponseInvokeResponseRPtrInput {
	return (*modelEnvironmentDefinitionResponseInvokeResponseRPtrType)(v)
}

func (*modelEnvironmentDefinitionResponseInvokeResponseRPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseInvokeResponseR)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionResponseInvokeResponseRPtrType) ToModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseInvokeResponseRPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionResponseInvokeResponseRPtrType) ToModelEnvironmentDefinitionResponseInvokeResponseRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput)
}

// Settings for a R environment.
type ModelEnvironmentDefinitionResponseInvokeResponseROutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseInvokeResponseROutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseInvokeResponseR)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseROutput) ToModelEnvironmentDefinitionResponseInvokeResponseROutput() ModelEnvironmentDefinitionResponseInvokeResponseROutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseROutput) ToModelEnvironmentDefinitionResponseInvokeResponseROutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseROutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseROutput) ToModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput {
	return o.ToModelEnvironmentDefinitionResponseInvokeResponseRPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseROutput) ToModelEnvironmentDefinitionResponseInvokeResponseRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponseR) *ModelEnvironmentDefinitionResponseInvokeResponseR {
		return &v
	}).(ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput)
}

// The packages from Bioconductor.
func (o ModelEnvironmentDefinitionResponseInvokeResponseROutput) BioConductorPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponseR) []string { return v.BioConductorPackages }).(pulumi.StringArrayOutput)
}

// The CRAN packages to use.
func (o ModelEnvironmentDefinitionResponseInvokeResponseROutput) CranPackages() RCranPackageInvokeResponseArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponseR) []RCranPackageInvokeResponse {
		return v.CranPackages
	}).(RCranPackageInvokeResponseArrayOutput)
}

// The packages from custom urls.
func (o ModelEnvironmentDefinitionResponseInvokeResponseROutput) CustomUrlPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponseR) []string { return v.CustomUrlPackages }).(pulumi.StringArrayOutput)
}

// The packages directly from GitHub.
func (o ModelEnvironmentDefinitionResponseInvokeResponseROutput) GitHubPackages() RGitHubPackageResponseInvokeResponseArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponseR) []RGitHubPackageResponseInvokeResponse {
		return v.GitHubPackages
	}).(RGitHubPackageResponseInvokeResponseArrayOutput)
}

// The version of R to be installed
func (o ModelEnvironmentDefinitionResponseInvokeResponseROutput) RVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponseR) *string { return v.RVersion }).(pulumi.StringPtrOutput)
}

// The Rscript path to use if an environment build is not required.
// The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionResponseInvokeResponseROutput) RscriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponseR) *string { return v.RscriptPath }).(pulumi.StringPtrOutput)
}

// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
func (o ModelEnvironmentDefinitionResponseInvokeResponseROutput) SnapshotDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponseR) *string { return v.SnapshotDate }).(pulumi.StringPtrOutput)
}

// Indicates whether the environment is managed by user or by AzureML.
func (o ModelEnvironmentDefinitionResponseInvokeResponseROutput) UserManaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponseR) *bool { return v.UserManaged }).(pulumi.BoolPtrOutput)
}

type ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseInvokeResponseR)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput) ToModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput) ToModelEnvironmentDefinitionResponseInvokeResponseRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput) Elem() ModelEnvironmentDefinitionResponseInvokeResponseROutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponseR) ModelEnvironmentDefinitionResponseInvokeResponseR {
		return *v
	}).(ModelEnvironmentDefinitionResponseInvokeResponseROutput)
}

// The packages from Bioconductor.
func (o ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput) BioConductorPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponseR) []string {
		if v == nil {
			return nil
		}
		return v.BioConductorPackages
	}).(pulumi.StringArrayOutput)
}

// The CRAN packages to use.
func (o ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput) CranPackages() RCranPackageInvokeResponseArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponseR) []RCranPackageInvokeResponse {
		if v == nil {
			return nil
		}
		return v.CranPackages
	}).(RCranPackageInvokeResponseArrayOutput)
}

// The packages from custom urls.
func (o ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput) CustomUrlPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponseR) []string {
		if v == nil {
			return nil
		}
		return v.CustomUrlPackages
	}).(pulumi.StringArrayOutput)
}

// The packages directly from GitHub.
func (o ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput) GitHubPackages() RGitHubPackageResponseInvokeResponseArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponseR) []RGitHubPackageResponseInvokeResponse {
		if v == nil {
			return nil
		}
		return v.GitHubPackages
	}).(RGitHubPackageResponseInvokeResponseArrayOutput)
}

// The version of R to be installed
func (o ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput) RVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponseR) *string {
		if v == nil {
			return nil
		}
		return v.RVersion
	}).(pulumi.StringPtrOutput)
}

// The Rscript path to use if an environment build is not required.
// The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput) RscriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponseR) *string {
		if v == nil {
			return nil
		}
		return v.RscriptPath
	}).(pulumi.StringPtrOutput)
}

// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
func (o ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput) SnapshotDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponseR) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotDate
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the environment is managed by user or by AzureML.
func (o ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput) UserManaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponseR) *bool {
		if v == nil {
			return nil
		}
		return v.UserManaged
	}).(pulumi.BoolPtrOutput)
}

// The configuration for a Spark environment.
type ModelEnvironmentDefinitionResponseInvokeResponseSpark struct {
	// The Spark packages to use.
	Packages []SparkMavenPackageInvokeResponse `pulumi:"packages"`
	// Whether to precache the packages.
	PrecachePackages *bool `pulumi:"precachePackages"`
	// The list of spark repositories.
	Repositories []string `pulumi:"repositories"`
}

// ModelEnvironmentDefinitionResponseInvokeResponseSparkInput is an input type that accepts ModelEnvironmentDefinitionResponseInvokeResponseSparkArgs and ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseInvokeResponseSparkInput` via:
//
//          ModelEnvironmentDefinitionResponseInvokeResponseSparkArgs{...}
type ModelEnvironmentDefinitionResponseInvokeResponseSparkInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseInvokeResponseSparkOutput() ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput
	ToModelEnvironmentDefinitionResponseInvokeResponseSparkOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput
}

// The configuration for a Spark environment.
type ModelEnvironmentDefinitionResponseInvokeResponseSparkArgs struct {
	// The Spark packages to use.
	Packages SparkMavenPackageInvokeResponseArrayInput `pulumi:"packages"`
	// Whether to precache the packages.
	PrecachePackages pulumi.BoolPtrInput `pulumi:"precachePackages"`
	// The list of spark repositories.
	Repositories pulumi.StringArrayInput `pulumi:"repositories"`
}

func (ModelEnvironmentDefinitionResponseInvokeResponseSparkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseInvokeResponseSpark)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionResponseInvokeResponseSparkArgs) ToModelEnvironmentDefinitionResponseInvokeResponseSparkOutput() ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput {
	return i.ToModelEnvironmentDefinitionResponseInvokeResponseSparkOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseInvokeResponseSparkArgs) ToModelEnvironmentDefinitionResponseInvokeResponseSparkOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput)
}

func (i ModelEnvironmentDefinitionResponseInvokeResponseSparkArgs) ToModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseInvokeResponseSparkArgs) ToModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput).ToModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrInput is an input type that accepts ModelEnvironmentDefinitionResponseInvokeResponseSparkArgs, ModelEnvironmentDefinitionResponseInvokeResponseSparkPtr and ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrInput` via:
//
//          ModelEnvironmentDefinitionResponseInvokeResponseSparkArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput
	ToModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput
}

type modelEnvironmentDefinitionResponseInvokeResponseSparkPtrType ModelEnvironmentDefinitionResponseInvokeResponseSparkArgs

func ModelEnvironmentDefinitionResponseInvokeResponseSparkPtr(v *ModelEnvironmentDefinitionResponseInvokeResponseSparkArgs) ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrInput {
	return (*modelEnvironmentDefinitionResponseInvokeResponseSparkPtrType)(v)
}

func (*modelEnvironmentDefinitionResponseInvokeResponseSparkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseInvokeResponseSpark)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionResponseInvokeResponseSparkPtrType) ToModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionResponseInvokeResponseSparkPtrType) ToModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput)
}

// The configuration for a Spark environment.
type ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseInvokeResponseSpark)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput) ToModelEnvironmentDefinitionResponseInvokeResponseSparkOutput() ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput) ToModelEnvironmentDefinitionResponseInvokeResponseSparkOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput) ToModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput {
	return o.ToModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput) ToModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponseSpark) *ModelEnvironmentDefinitionResponseInvokeResponseSpark {
		return &v
	}).(ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput)
}

// The Spark packages to use.
func (o ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput) Packages() SparkMavenPackageInvokeResponseArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponseSpark) []SparkMavenPackageInvokeResponse {
		return v.Packages
	}).(SparkMavenPackageInvokeResponseArrayOutput)
}

// Whether to precache the packages.
func (o ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput) PrecachePackages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponseSpark) *bool { return v.PrecachePackages }).(pulumi.BoolPtrOutput)
}

// The list of spark repositories.
func (o ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput) Repositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseInvokeResponseSpark) []string { return v.Repositories }).(pulumi.StringArrayOutput)
}

type ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseInvokeResponseSpark)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput) ToModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput() ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput) ToModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput) Elem() ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponseSpark) ModelEnvironmentDefinitionResponseInvokeResponseSpark {
		return *v
	}).(ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput)
}

// The Spark packages to use.
func (o ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput) Packages() SparkMavenPackageInvokeResponseArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponseSpark) []SparkMavenPackageInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Packages
	}).(SparkMavenPackageInvokeResponseArrayOutput)
}

// Whether to precache the packages.
func (o ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput) PrecachePackages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponseSpark) *bool {
		if v == nil {
			return nil
		}
		return v.PrecachePackages
	}).(pulumi.BoolPtrOutput)
}

// The list of spark repositories.
func (o ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput) Repositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseInvokeResponseSpark) []string {
		if v == nil {
			return nil
		}
		return v.Repositories
	}).(pulumi.StringArrayOutput)
}

// The definition of a Docker container.
type ModelEnvironmentDefinitionResponseResponseDocker struct {
	// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
	BaseDockerfile *string `pulumi:"baseDockerfile"`
	// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
	BaseImage *string `pulumi:"baseImage"`
	// Image registry that contains the base image.
	BaseImageRegistry *ModelDockerSectionResponseResponseBaseImageRegistry `pulumi:"baseImageRegistry"`
}

// ModelEnvironmentDefinitionResponseResponseDockerInput is an input type that accepts ModelEnvironmentDefinitionResponseResponseDockerArgs and ModelEnvironmentDefinitionResponseResponseDockerOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseResponseDockerInput` via:
//
//          ModelEnvironmentDefinitionResponseResponseDockerArgs{...}
type ModelEnvironmentDefinitionResponseResponseDockerInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseResponseDockerOutput() ModelEnvironmentDefinitionResponseResponseDockerOutput
	ToModelEnvironmentDefinitionResponseResponseDockerOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseResponseDockerOutput
}

// The definition of a Docker container.
type ModelEnvironmentDefinitionResponseResponseDockerArgs struct {
	// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
	BaseDockerfile pulumi.StringPtrInput `pulumi:"baseDockerfile"`
	// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
	BaseImage pulumi.StringPtrInput `pulumi:"baseImage"`
	// Image registry that contains the base image.
	BaseImageRegistry ModelDockerSectionResponseResponseBaseImageRegistryPtrInput `pulumi:"baseImageRegistry"`
}

func (ModelEnvironmentDefinitionResponseResponseDockerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseResponseDocker)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionResponseResponseDockerArgs) ToModelEnvironmentDefinitionResponseResponseDockerOutput() ModelEnvironmentDefinitionResponseResponseDockerOutput {
	return i.ToModelEnvironmentDefinitionResponseResponseDockerOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseResponseDockerArgs) ToModelEnvironmentDefinitionResponseResponseDockerOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseDockerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseDockerOutput)
}

func (i ModelEnvironmentDefinitionResponseResponseDockerArgs) ToModelEnvironmentDefinitionResponseResponseDockerPtrOutput() ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseResponseDockerArgs) ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseDockerOutput).ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionResponseResponseDockerPtrInput is an input type that accepts ModelEnvironmentDefinitionResponseResponseDockerArgs, ModelEnvironmentDefinitionResponseResponseDockerPtr and ModelEnvironmentDefinitionResponseResponseDockerPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseResponseDockerPtrInput` via:
//
//          ModelEnvironmentDefinitionResponseResponseDockerArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionResponseResponseDockerPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseResponseDockerPtrOutput() ModelEnvironmentDefinitionResponseResponseDockerPtrOutput
	ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseResponseDockerPtrOutput
}

type modelEnvironmentDefinitionResponseResponseDockerPtrType ModelEnvironmentDefinitionResponseResponseDockerArgs

func ModelEnvironmentDefinitionResponseResponseDockerPtr(v *ModelEnvironmentDefinitionResponseResponseDockerArgs) ModelEnvironmentDefinitionResponseResponseDockerPtrInput {
	return (*modelEnvironmentDefinitionResponseResponseDockerPtrType)(v)
}

func (*modelEnvironmentDefinitionResponseResponseDockerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseResponseDocker)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionResponseResponseDockerPtrType) ToModelEnvironmentDefinitionResponseResponseDockerPtrOutput() ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionResponseResponseDockerPtrType) ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseDockerPtrOutput)
}

// The definition of a Docker container.
type ModelEnvironmentDefinitionResponseResponseDockerOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseResponseDockerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseResponseDocker)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseResponseDockerOutput) ToModelEnvironmentDefinitionResponseResponseDockerOutput() ModelEnvironmentDefinitionResponseResponseDockerOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseDockerOutput) ToModelEnvironmentDefinitionResponseResponseDockerOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseDockerOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseDockerOutput) ToModelEnvironmentDefinitionResponseResponseDockerPtrOutput() ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return o.ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionResponseResponseDockerOutput) ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseDocker) *ModelEnvironmentDefinitionResponseResponseDocker {
		return &v
	}).(ModelEnvironmentDefinitionResponseResponseDockerPtrOutput)
}

// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
func (o ModelEnvironmentDefinitionResponseResponseDockerOutput) BaseDockerfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseDocker) *string { return v.BaseDockerfile }).(pulumi.StringPtrOutput)
}

// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
func (o ModelEnvironmentDefinitionResponseResponseDockerOutput) BaseImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseDocker) *string { return v.BaseImage }).(pulumi.StringPtrOutput)
}

// Image registry that contains the base image.
func (o ModelEnvironmentDefinitionResponseResponseDockerOutput) BaseImageRegistry() ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseDocker) *ModelDockerSectionResponseResponseBaseImageRegistry {
		return v.BaseImageRegistry
	}).(ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput)
}

type ModelEnvironmentDefinitionResponseResponseDockerPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseResponseDockerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseResponseDocker)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseResponseDockerPtrOutput) ToModelEnvironmentDefinitionResponseResponseDockerPtrOutput() ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseDockerPtrOutput) ToModelEnvironmentDefinitionResponseResponseDockerPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseDockerPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseDockerPtrOutput) Elem() ModelEnvironmentDefinitionResponseResponseDockerOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseDocker) ModelEnvironmentDefinitionResponseResponseDocker {
		return *v
	}).(ModelEnvironmentDefinitionResponseResponseDockerOutput)
}

// Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
func (o ModelEnvironmentDefinitionResponseResponseDockerPtrOutput) BaseDockerfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseDocker) *string {
		if v == nil {
			return nil
		}
		return v.BaseDockerfile
	}).(pulumi.StringPtrOutput)
}

// Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
func (o ModelEnvironmentDefinitionResponseResponseDockerPtrOutput) BaseImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseDocker) *string {
		if v == nil {
			return nil
		}
		return v.BaseImage
	}).(pulumi.StringPtrOutput)
}

// Image registry that contains the base image.
func (o ModelEnvironmentDefinitionResponseResponseDockerPtrOutput) BaseImageRegistry() ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseDocker) *ModelDockerSectionResponseResponseBaseImageRegistry {
		if v == nil {
			return nil
		}
		return v.BaseImageRegistry
	}).(ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput)
}

// Settings for a Python environment.
type ModelEnvironmentDefinitionResponseResponsePython struct {
	BaseCondaEnvironment *string `pulumi:"baseCondaEnvironment"`
	// A JObject containing Conda dependencies.
	CondaDependencies interface{} `pulumi:"condaDependencies"`
	// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
	InterpreterPath *string `pulumi:"interpreterPath"`
	// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
	UserManagedDependencies *bool `pulumi:"userManagedDependencies"`
}

// ModelEnvironmentDefinitionResponseResponsePythonInput is an input type that accepts ModelEnvironmentDefinitionResponseResponsePythonArgs and ModelEnvironmentDefinitionResponseResponsePythonOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseResponsePythonInput` via:
//
//          ModelEnvironmentDefinitionResponseResponsePythonArgs{...}
type ModelEnvironmentDefinitionResponseResponsePythonInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseResponsePythonOutput() ModelEnvironmentDefinitionResponseResponsePythonOutput
	ToModelEnvironmentDefinitionResponseResponsePythonOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseResponsePythonOutput
}

// Settings for a Python environment.
type ModelEnvironmentDefinitionResponseResponsePythonArgs struct {
	BaseCondaEnvironment pulumi.StringPtrInput `pulumi:"baseCondaEnvironment"`
	// A JObject containing Conda dependencies.
	CondaDependencies pulumi.Input `pulumi:"condaDependencies"`
	// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
	InterpreterPath pulumi.StringPtrInput `pulumi:"interpreterPath"`
	// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
	UserManagedDependencies pulumi.BoolPtrInput `pulumi:"userManagedDependencies"`
}

func (ModelEnvironmentDefinitionResponseResponsePythonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseResponsePython)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionResponseResponsePythonArgs) ToModelEnvironmentDefinitionResponseResponsePythonOutput() ModelEnvironmentDefinitionResponseResponsePythonOutput {
	return i.ToModelEnvironmentDefinitionResponseResponsePythonOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseResponsePythonArgs) ToModelEnvironmentDefinitionResponseResponsePythonOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponsePythonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponsePythonOutput)
}

func (i ModelEnvironmentDefinitionResponseResponsePythonArgs) ToModelEnvironmentDefinitionResponseResponsePythonPtrOutput() ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseResponsePythonArgs) ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponsePythonOutput).ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionResponseResponsePythonPtrInput is an input type that accepts ModelEnvironmentDefinitionResponseResponsePythonArgs, ModelEnvironmentDefinitionResponseResponsePythonPtr and ModelEnvironmentDefinitionResponseResponsePythonPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseResponsePythonPtrInput` via:
//
//          ModelEnvironmentDefinitionResponseResponsePythonArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionResponseResponsePythonPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseResponsePythonPtrOutput() ModelEnvironmentDefinitionResponseResponsePythonPtrOutput
	ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseResponsePythonPtrOutput
}

type modelEnvironmentDefinitionResponseResponsePythonPtrType ModelEnvironmentDefinitionResponseResponsePythonArgs

func ModelEnvironmentDefinitionResponseResponsePythonPtr(v *ModelEnvironmentDefinitionResponseResponsePythonArgs) ModelEnvironmentDefinitionResponseResponsePythonPtrInput {
	return (*modelEnvironmentDefinitionResponseResponsePythonPtrType)(v)
}

func (*modelEnvironmentDefinitionResponseResponsePythonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseResponsePython)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionResponseResponsePythonPtrType) ToModelEnvironmentDefinitionResponseResponsePythonPtrOutput() ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionResponseResponsePythonPtrType) ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponsePythonPtrOutput)
}

// Settings for a Python environment.
type ModelEnvironmentDefinitionResponseResponsePythonOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseResponsePythonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseResponsePython)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseResponsePythonOutput) ToModelEnvironmentDefinitionResponseResponsePythonOutput() ModelEnvironmentDefinitionResponseResponsePythonOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponsePythonOutput) ToModelEnvironmentDefinitionResponseResponsePythonOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponsePythonOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponsePythonOutput) ToModelEnvironmentDefinitionResponseResponsePythonPtrOutput() ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return o.ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionResponseResponsePythonOutput) ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponsePython) *ModelEnvironmentDefinitionResponseResponsePython {
		return &v
	}).(ModelEnvironmentDefinitionResponseResponsePythonPtrOutput)
}
func (o ModelEnvironmentDefinitionResponseResponsePythonOutput) BaseCondaEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponsePython) *string { return v.BaseCondaEnvironment }).(pulumi.StringPtrOutput)
}

// A JObject containing Conda dependencies.
func (o ModelEnvironmentDefinitionResponseResponsePythonOutput) CondaDependencies() pulumi.AnyOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponsePython) interface{} { return v.CondaDependencies }).(pulumi.AnyOutput)
}

// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionResponseResponsePythonOutput) InterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponsePython) *string { return v.InterpreterPath }).(pulumi.StringPtrOutput)
}

// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
func (o ModelEnvironmentDefinitionResponseResponsePythonOutput) UserManagedDependencies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponsePython) *bool { return v.UserManagedDependencies }).(pulumi.BoolPtrOutput)
}

type ModelEnvironmentDefinitionResponseResponsePythonPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseResponsePythonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseResponsePython)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseResponsePythonPtrOutput) ToModelEnvironmentDefinitionResponseResponsePythonPtrOutput() ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponsePythonPtrOutput) ToModelEnvironmentDefinitionResponseResponsePythonPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponsePythonPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponsePythonPtrOutput) Elem() ModelEnvironmentDefinitionResponseResponsePythonOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponsePython) ModelEnvironmentDefinitionResponseResponsePython {
		return *v
	}).(ModelEnvironmentDefinitionResponseResponsePythonOutput)
}

func (o ModelEnvironmentDefinitionResponseResponsePythonPtrOutput) BaseCondaEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponsePython) *string {
		if v == nil {
			return nil
		}
		return v.BaseCondaEnvironment
	}).(pulumi.StringPtrOutput)
}

// A JObject containing Conda dependencies.
func (o ModelEnvironmentDefinitionResponseResponsePythonPtrOutput) CondaDependencies() pulumi.AnyOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponsePython) interface{} {
		if v == nil {
			return nil
		}
		return v.CondaDependencies
	}).(pulumi.AnyOutput)
}

// The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionResponseResponsePythonPtrOutput) InterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponsePython) *string {
		if v == nil {
			return nil
		}
		return v.InterpreterPath
	}).(pulumi.StringPtrOutput)
}

// True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
func (o ModelEnvironmentDefinitionResponseResponsePythonPtrOutput) UserManagedDependencies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponsePython) *bool {
		if v == nil {
			return nil
		}
		return v.UserManagedDependencies
	}).(pulumi.BoolPtrOutput)
}

// Settings for a R environment.
type ModelEnvironmentDefinitionResponseResponseR struct {
	// The packages from Bioconductor.
	BioConductorPackages []string `pulumi:"bioConductorPackages"`
	// The CRAN packages to use.
	CranPackages []RCranPackageResponse `pulumi:"cranPackages"`
	// The packages from custom urls.
	CustomUrlPackages []string `pulumi:"customUrlPackages"`
	// The packages directly from GitHub.
	GitHubPackages []RGitHubPackageResponseResponse `pulumi:"gitHubPackages"`
	// The version of R to be installed
	RVersion *string `pulumi:"rVersion"`
	// The Rscript path to use if an environment build is not required.
	// The path specified gets used to call the user script.
	RscriptPath *string `pulumi:"rscriptPath"`
	// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
	SnapshotDate *string `pulumi:"snapshotDate"`
	// Indicates whether the environment is managed by user or by AzureML.
	UserManaged *bool `pulumi:"userManaged"`
}

// ModelEnvironmentDefinitionResponseResponseRInput is an input type that accepts ModelEnvironmentDefinitionResponseResponseRArgs and ModelEnvironmentDefinitionResponseResponseROutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseResponseRInput` via:
//
//          ModelEnvironmentDefinitionResponseResponseRArgs{...}
type ModelEnvironmentDefinitionResponseResponseRInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseResponseROutput() ModelEnvironmentDefinitionResponseResponseROutput
	ToModelEnvironmentDefinitionResponseResponseROutputWithContext(context.Context) ModelEnvironmentDefinitionResponseResponseROutput
}

// Settings for a R environment.
type ModelEnvironmentDefinitionResponseResponseRArgs struct {
	// The packages from Bioconductor.
	BioConductorPackages pulumi.StringArrayInput `pulumi:"bioConductorPackages"`
	// The CRAN packages to use.
	CranPackages RCranPackageResponseArrayInput `pulumi:"cranPackages"`
	// The packages from custom urls.
	CustomUrlPackages pulumi.StringArrayInput `pulumi:"customUrlPackages"`
	// The packages directly from GitHub.
	GitHubPackages RGitHubPackageResponseResponseArrayInput `pulumi:"gitHubPackages"`
	// The version of R to be installed
	RVersion pulumi.StringPtrInput `pulumi:"rVersion"`
	// The Rscript path to use if an environment build is not required.
	// The path specified gets used to call the user script.
	RscriptPath pulumi.StringPtrInput `pulumi:"rscriptPath"`
	// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
	SnapshotDate pulumi.StringPtrInput `pulumi:"snapshotDate"`
	// Indicates whether the environment is managed by user or by AzureML.
	UserManaged pulumi.BoolPtrInput `pulumi:"userManaged"`
}

func (ModelEnvironmentDefinitionResponseResponseRArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseResponseR)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionResponseResponseRArgs) ToModelEnvironmentDefinitionResponseResponseROutput() ModelEnvironmentDefinitionResponseResponseROutput {
	return i.ToModelEnvironmentDefinitionResponseResponseROutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseResponseRArgs) ToModelEnvironmentDefinitionResponseResponseROutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseROutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseROutput)
}

func (i ModelEnvironmentDefinitionResponseResponseRArgs) ToModelEnvironmentDefinitionResponseResponseRPtrOutput() ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseResponseRArgs) ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseROutput).ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionResponseResponseRPtrInput is an input type that accepts ModelEnvironmentDefinitionResponseResponseRArgs, ModelEnvironmentDefinitionResponseResponseRPtr and ModelEnvironmentDefinitionResponseResponseRPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseResponseRPtrInput` via:
//
//          ModelEnvironmentDefinitionResponseResponseRArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionResponseResponseRPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseResponseRPtrOutput() ModelEnvironmentDefinitionResponseResponseRPtrOutput
	ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseResponseRPtrOutput
}

type modelEnvironmentDefinitionResponseResponseRPtrType ModelEnvironmentDefinitionResponseResponseRArgs

func ModelEnvironmentDefinitionResponseResponseRPtr(v *ModelEnvironmentDefinitionResponseResponseRArgs) ModelEnvironmentDefinitionResponseResponseRPtrInput {
	return (*modelEnvironmentDefinitionResponseResponseRPtrType)(v)
}

func (*modelEnvironmentDefinitionResponseResponseRPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseResponseR)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionResponseResponseRPtrType) ToModelEnvironmentDefinitionResponseResponseRPtrOutput() ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionResponseResponseRPtrType) ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseRPtrOutput)
}

// Settings for a R environment.
type ModelEnvironmentDefinitionResponseResponseROutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseResponseROutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseResponseR)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseResponseROutput) ToModelEnvironmentDefinitionResponseResponseROutput() ModelEnvironmentDefinitionResponseResponseROutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseROutput) ToModelEnvironmentDefinitionResponseResponseROutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseROutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseROutput) ToModelEnvironmentDefinitionResponseResponseRPtrOutput() ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return o.ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionResponseResponseROutput) ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseR) *ModelEnvironmentDefinitionResponseResponseR {
		return &v
	}).(ModelEnvironmentDefinitionResponseResponseRPtrOutput)
}

// The packages from Bioconductor.
func (o ModelEnvironmentDefinitionResponseResponseROutput) BioConductorPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseR) []string { return v.BioConductorPackages }).(pulumi.StringArrayOutput)
}

// The CRAN packages to use.
func (o ModelEnvironmentDefinitionResponseResponseROutput) CranPackages() RCranPackageResponseArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseR) []RCranPackageResponse { return v.CranPackages }).(RCranPackageResponseArrayOutput)
}

// The packages from custom urls.
func (o ModelEnvironmentDefinitionResponseResponseROutput) CustomUrlPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseR) []string { return v.CustomUrlPackages }).(pulumi.StringArrayOutput)
}

// The packages directly from GitHub.
func (o ModelEnvironmentDefinitionResponseResponseROutput) GitHubPackages() RGitHubPackageResponseResponseArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseR) []RGitHubPackageResponseResponse {
		return v.GitHubPackages
	}).(RGitHubPackageResponseResponseArrayOutput)
}

// The version of R to be installed
func (o ModelEnvironmentDefinitionResponseResponseROutput) RVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseR) *string { return v.RVersion }).(pulumi.StringPtrOutput)
}

// The Rscript path to use if an environment build is not required.
// The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionResponseResponseROutput) RscriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseR) *string { return v.RscriptPath }).(pulumi.StringPtrOutput)
}

// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
func (o ModelEnvironmentDefinitionResponseResponseROutput) SnapshotDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseR) *string { return v.SnapshotDate }).(pulumi.StringPtrOutput)
}

// Indicates whether the environment is managed by user or by AzureML.
func (o ModelEnvironmentDefinitionResponseResponseROutput) UserManaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseR) *bool { return v.UserManaged }).(pulumi.BoolPtrOutput)
}

type ModelEnvironmentDefinitionResponseResponseRPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseResponseRPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseResponseR)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) ToModelEnvironmentDefinitionResponseResponseRPtrOutput() ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) ToModelEnvironmentDefinitionResponseResponseRPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseRPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) Elem() ModelEnvironmentDefinitionResponseResponseROutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) ModelEnvironmentDefinitionResponseResponseR {
		return *v
	}).(ModelEnvironmentDefinitionResponseResponseROutput)
}

// The packages from Bioconductor.
func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) BioConductorPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) []string {
		if v == nil {
			return nil
		}
		return v.BioConductorPackages
	}).(pulumi.StringArrayOutput)
}

// The CRAN packages to use.
func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) CranPackages() RCranPackageResponseArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) []RCranPackageResponse {
		if v == nil {
			return nil
		}
		return v.CranPackages
	}).(RCranPackageResponseArrayOutput)
}

// The packages from custom urls.
func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) CustomUrlPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) []string {
		if v == nil {
			return nil
		}
		return v.CustomUrlPackages
	}).(pulumi.StringArrayOutput)
}

// The packages directly from GitHub.
func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) GitHubPackages() RGitHubPackageResponseResponseArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) []RGitHubPackageResponseResponse {
		if v == nil {
			return nil
		}
		return v.GitHubPackages
	}).(RGitHubPackageResponseResponseArrayOutput)
}

// The version of R to be installed
func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) RVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) *string {
		if v == nil {
			return nil
		}
		return v.RVersion
	}).(pulumi.StringPtrOutput)
}

// The Rscript path to use if an environment build is not required.
// The path specified gets used to call the user script.
func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) RscriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) *string {
		if v == nil {
			return nil
		}
		return v.RscriptPath
	}).(pulumi.StringPtrOutput)
}

// Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) SnapshotDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotDate
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the environment is managed by user or by AzureML.
func (o ModelEnvironmentDefinitionResponseResponseRPtrOutput) UserManaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseR) *bool {
		if v == nil {
			return nil
		}
		return v.UserManaged
	}).(pulumi.BoolPtrOutput)
}

// The configuration for a Spark environment.
type ModelEnvironmentDefinitionResponseResponseSpark struct {
	// The Spark packages to use.
	Packages []SparkMavenPackageResponse `pulumi:"packages"`
	// Whether to precache the packages.
	PrecachePackages *bool `pulumi:"precachePackages"`
	// The list of spark repositories.
	Repositories []string `pulumi:"repositories"`
}

// ModelEnvironmentDefinitionResponseResponseSparkInput is an input type that accepts ModelEnvironmentDefinitionResponseResponseSparkArgs and ModelEnvironmentDefinitionResponseResponseSparkOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseResponseSparkInput` via:
//
//          ModelEnvironmentDefinitionResponseResponseSparkArgs{...}
type ModelEnvironmentDefinitionResponseResponseSparkInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseResponseSparkOutput() ModelEnvironmentDefinitionResponseResponseSparkOutput
	ToModelEnvironmentDefinitionResponseResponseSparkOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseResponseSparkOutput
}

// The configuration for a Spark environment.
type ModelEnvironmentDefinitionResponseResponseSparkArgs struct {
	// The Spark packages to use.
	Packages SparkMavenPackageResponseArrayInput `pulumi:"packages"`
	// Whether to precache the packages.
	PrecachePackages pulumi.BoolPtrInput `pulumi:"precachePackages"`
	// The list of spark repositories.
	Repositories pulumi.StringArrayInput `pulumi:"repositories"`
}

func (ModelEnvironmentDefinitionResponseResponseSparkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseResponseSpark)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionResponseResponseSparkArgs) ToModelEnvironmentDefinitionResponseResponseSparkOutput() ModelEnvironmentDefinitionResponseResponseSparkOutput {
	return i.ToModelEnvironmentDefinitionResponseResponseSparkOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseResponseSparkArgs) ToModelEnvironmentDefinitionResponseResponseSparkOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseSparkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseSparkOutput)
}

func (i ModelEnvironmentDefinitionResponseResponseSparkArgs) ToModelEnvironmentDefinitionResponseResponseSparkPtrOutput() ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionResponseResponseSparkArgs) ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseSparkOutput).ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionResponseResponseSparkPtrInput is an input type that accepts ModelEnvironmentDefinitionResponseResponseSparkArgs, ModelEnvironmentDefinitionResponseResponseSparkPtr and ModelEnvironmentDefinitionResponseResponseSparkPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionResponseResponseSparkPtrInput` via:
//
//          ModelEnvironmentDefinitionResponseResponseSparkArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionResponseResponseSparkPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionResponseResponseSparkPtrOutput() ModelEnvironmentDefinitionResponseResponseSparkPtrOutput
	ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionResponseResponseSparkPtrOutput
}

type modelEnvironmentDefinitionResponseResponseSparkPtrType ModelEnvironmentDefinitionResponseResponseSparkArgs

func ModelEnvironmentDefinitionResponseResponseSparkPtr(v *ModelEnvironmentDefinitionResponseResponseSparkArgs) ModelEnvironmentDefinitionResponseResponseSparkPtrInput {
	return (*modelEnvironmentDefinitionResponseResponseSparkPtrType)(v)
}

func (*modelEnvironmentDefinitionResponseResponseSparkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseResponseSpark)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionResponseResponseSparkPtrType) ToModelEnvironmentDefinitionResponseResponseSparkPtrOutput() ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return i.ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionResponseResponseSparkPtrType) ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionResponseResponseSparkPtrOutput)
}

// The configuration for a Spark environment.
type ModelEnvironmentDefinitionResponseResponseSparkOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseResponseSparkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionResponseResponseSpark)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseResponseSparkOutput) ToModelEnvironmentDefinitionResponseResponseSparkOutput() ModelEnvironmentDefinitionResponseResponseSparkOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseSparkOutput) ToModelEnvironmentDefinitionResponseResponseSparkOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseSparkOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseSparkOutput) ToModelEnvironmentDefinitionResponseResponseSparkPtrOutput() ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return o.ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionResponseResponseSparkOutput) ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseSpark) *ModelEnvironmentDefinitionResponseResponseSpark {
		return &v
	}).(ModelEnvironmentDefinitionResponseResponseSparkPtrOutput)
}

// The Spark packages to use.
func (o ModelEnvironmentDefinitionResponseResponseSparkOutput) Packages() SparkMavenPackageResponseArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseSpark) []SparkMavenPackageResponse { return v.Packages }).(SparkMavenPackageResponseArrayOutput)
}

// Whether to precache the packages.
func (o ModelEnvironmentDefinitionResponseResponseSparkOutput) PrecachePackages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseSpark) *bool { return v.PrecachePackages }).(pulumi.BoolPtrOutput)
}

// The list of spark repositories.
func (o ModelEnvironmentDefinitionResponseResponseSparkOutput) Repositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionResponseResponseSpark) []string { return v.Repositories }).(pulumi.StringArrayOutput)
}

type ModelEnvironmentDefinitionResponseResponseSparkPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionResponseResponseSparkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionResponseResponseSpark)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionResponseResponseSparkPtrOutput) ToModelEnvironmentDefinitionResponseResponseSparkPtrOutput() ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseSparkPtrOutput) ToModelEnvironmentDefinitionResponseResponseSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionResponseResponseSparkPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionResponseResponseSparkPtrOutput) Elem() ModelEnvironmentDefinitionResponseResponseSparkOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseSpark) ModelEnvironmentDefinitionResponseResponseSpark {
		return *v
	}).(ModelEnvironmentDefinitionResponseResponseSparkOutput)
}

// The Spark packages to use.
func (o ModelEnvironmentDefinitionResponseResponseSparkPtrOutput) Packages() SparkMavenPackageResponseArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseSpark) []SparkMavenPackageResponse {
		if v == nil {
			return nil
		}
		return v.Packages
	}).(SparkMavenPackageResponseArrayOutput)
}

// Whether to precache the packages.
func (o ModelEnvironmentDefinitionResponseResponseSparkPtrOutput) PrecachePackages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseSpark) *bool {
		if v == nil {
			return nil
		}
		return v.PrecachePackages
	}).(pulumi.BoolPtrOutput)
}

// The list of spark repositories.
func (o ModelEnvironmentDefinitionResponseResponseSparkPtrOutput) Repositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionResponseResponseSpark) []string {
		if v == nil {
			return nil
		}
		return v.Repositories
	}).(pulumi.StringArrayOutput)
}

// The configuration for a Spark environment.
type ModelEnvironmentDefinitionSpark struct {
	// The Spark packages to use.
	Packages []SparkMavenPackage `pulumi:"packages"`
	// Whether to precache the packages.
	PrecachePackages *bool `pulumi:"precachePackages"`
	// The list of spark repositories.
	Repositories []string `pulumi:"repositories"`
}

// ModelEnvironmentDefinitionSparkInput is an input type that accepts ModelEnvironmentDefinitionSparkArgs and ModelEnvironmentDefinitionSparkOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionSparkInput` via:
//
//          ModelEnvironmentDefinitionSparkArgs{...}
type ModelEnvironmentDefinitionSparkInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionSparkOutput() ModelEnvironmentDefinitionSparkOutput
	ToModelEnvironmentDefinitionSparkOutputWithContext(context.Context) ModelEnvironmentDefinitionSparkOutput
}

// The configuration for a Spark environment.
type ModelEnvironmentDefinitionSparkArgs struct {
	// The Spark packages to use.
	Packages SparkMavenPackageArrayInput `pulumi:"packages"`
	// Whether to precache the packages.
	PrecachePackages pulumi.BoolPtrInput `pulumi:"precachePackages"`
	// The list of spark repositories.
	Repositories pulumi.StringArrayInput `pulumi:"repositories"`
}

func (ModelEnvironmentDefinitionSparkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionSpark)(nil)).Elem()
}

func (i ModelEnvironmentDefinitionSparkArgs) ToModelEnvironmentDefinitionSparkOutput() ModelEnvironmentDefinitionSparkOutput {
	return i.ToModelEnvironmentDefinitionSparkOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionSparkArgs) ToModelEnvironmentDefinitionSparkOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionSparkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionSparkOutput)
}

func (i ModelEnvironmentDefinitionSparkArgs) ToModelEnvironmentDefinitionSparkPtrOutput() ModelEnvironmentDefinitionSparkPtrOutput {
	return i.ToModelEnvironmentDefinitionSparkPtrOutputWithContext(context.Background())
}

func (i ModelEnvironmentDefinitionSparkArgs) ToModelEnvironmentDefinitionSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionSparkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionSparkOutput).ToModelEnvironmentDefinitionSparkPtrOutputWithContext(ctx)
}

// ModelEnvironmentDefinitionSparkPtrInput is an input type that accepts ModelEnvironmentDefinitionSparkArgs, ModelEnvironmentDefinitionSparkPtr and ModelEnvironmentDefinitionSparkPtrOutput values.
// You can construct a concrete instance of `ModelEnvironmentDefinitionSparkPtrInput` via:
//
//          ModelEnvironmentDefinitionSparkArgs{...}
//
//  or:
//
//          nil
type ModelEnvironmentDefinitionSparkPtrInput interface {
	pulumi.Input

	ToModelEnvironmentDefinitionSparkPtrOutput() ModelEnvironmentDefinitionSparkPtrOutput
	ToModelEnvironmentDefinitionSparkPtrOutputWithContext(context.Context) ModelEnvironmentDefinitionSparkPtrOutput
}

type modelEnvironmentDefinitionSparkPtrType ModelEnvironmentDefinitionSparkArgs

func ModelEnvironmentDefinitionSparkPtr(v *ModelEnvironmentDefinitionSparkArgs) ModelEnvironmentDefinitionSparkPtrInput {
	return (*modelEnvironmentDefinitionSparkPtrType)(v)
}

func (*modelEnvironmentDefinitionSparkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionSpark)(nil)).Elem()
}

func (i *modelEnvironmentDefinitionSparkPtrType) ToModelEnvironmentDefinitionSparkPtrOutput() ModelEnvironmentDefinitionSparkPtrOutput {
	return i.ToModelEnvironmentDefinitionSparkPtrOutputWithContext(context.Background())
}

func (i *modelEnvironmentDefinitionSparkPtrType) ToModelEnvironmentDefinitionSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionSparkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelEnvironmentDefinitionSparkPtrOutput)
}

// The configuration for a Spark environment.
type ModelEnvironmentDefinitionSparkOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionSparkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelEnvironmentDefinitionSpark)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionSparkOutput) ToModelEnvironmentDefinitionSparkOutput() ModelEnvironmentDefinitionSparkOutput {
	return o
}

func (o ModelEnvironmentDefinitionSparkOutput) ToModelEnvironmentDefinitionSparkOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionSparkOutput {
	return o
}

func (o ModelEnvironmentDefinitionSparkOutput) ToModelEnvironmentDefinitionSparkPtrOutput() ModelEnvironmentDefinitionSparkPtrOutput {
	return o.ToModelEnvironmentDefinitionSparkPtrOutputWithContext(context.Background())
}

func (o ModelEnvironmentDefinitionSparkOutput) ToModelEnvironmentDefinitionSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionSparkPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionSpark) *ModelEnvironmentDefinitionSpark {
		return &v
	}).(ModelEnvironmentDefinitionSparkPtrOutput)
}

// The Spark packages to use.
func (o ModelEnvironmentDefinitionSparkOutput) Packages() SparkMavenPackageArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionSpark) []SparkMavenPackage { return v.Packages }).(SparkMavenPackageArrayOutput)
}

// Whether to precache the packages.
func (o ModelEnvironmentDefinitionSparkOutput) PrecachePackages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionSpark) *bool { return v.PrecachePackages }).(pulumi.BoolPtrOutput)
}

// The list of spark repositories.
func (o ModelEnvironmentDefinitionSparkOutput) Repositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelEnvironmentDefinitionSpark) []string { return v.Repositories }).(pulumi.StringArrayOutput)
}

type ModelEnvironmentDefinitionSparkPtrOutput struct{ *pulumi.OutputState }

func (ModelEnvironmentDefinitionSparkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelEnvironmentDefinitionSpark)(nil)).Elem()
}

func (o ModelEnvironmentDefinitionSparkPtrOutput) ToModelEnvironmentDefinitionSparkPtrOutput() ModelEnvironmentDefinitionSparkPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionSparkPtrOutput) ToModelEnvironmentDefinitionSparkPtrOutputWithContext(ctx context.Context) ModelEnvironmentDefinitionSparkPtrOutput {
	return o
}

func (o ModelEnvironmentDefinitionSparkPtrOutput) Elem() ModelEnvironmentDefinitionSparkOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionSpark) ModelEnvironmentDefinitionSpark { return *v }).(ModelEnvironmentDefinitionSparkOutput)
}

// The Spark packages to use.
func (o ModelEnvironmentDefinitionSparkPtrOutput) Packages() SparkMavenPackageArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionSpark) []SparkMavenPackage {
		if v == nil {
			return nil
		}
		return v.Packages
	}).(SparkMavenPackageArrayOutput)
}

// Whether to precache the packages.
func (o ModelEnvironmentDefinitionSparkPtrOutput) PrecachePackages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionSpark) *bool {
		if v == nil {
			return nil
		}
		return v.PrecachePackages
	}).(pulumi.BoolPtrOutput)
}

// The list of spark repositories.
func (o ModelEnvironmentDefinitionSparkPtrOutput) Repositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelEnvironmentDefinitionSpark) []string {
		if v == nil {
			return nil
		}
		return v.Repositories
	}).(pulumi.StringArrayOutput)
}

// An Azure Machine Learning Model.
type ModelInvokeResponse struct {
	// The Model creation time (UTC).
	CreatedTime *string `pulumi:"createdTime"`
	// The list of datasets associated with the model.
	Datasets []DatasetReferenceInvokeResponse `pulumi:"datasets"`
	// Models derived from this model
	DerivedModelIds []string `pulumi:"derivedModelIds"`
	// The Model description text.
	Description *string `pulumi:"description"`
	// The name of the experiment where this model was created.
	ExperimentName *string `pulumi:"experimentName"`
	// The Model framework.
	Framework *string `pulumi:"framework"`
	// The Model framework version.
	FrameworkVersion *string `pulumi:"frameworkVersion"`
	// The Model Id.
	Id *string `pulumi:"id"`
	// The Model tag dictionary. Items are mutable.
	KvTags map[string]string `pulumi:"kvTags"`
	// The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
	MimeType string `pulumi:"mimeType"`
	// The Model last modified time (UTC).
	ModifiedTime *string `pulumi:"modifiedTime"`
	// The Model name.
	Name string `pulumi:"name"`
	// The Parent Model Id.
	ParentModelId *string `pulumi:"parentModelId"`
	// The Model property dictionary. Properties are immutable.
	Properties map[string]string `pulumi:"properties"`
	// Resource requirements for the model
	ResourceRequirements *ContainerResourceRequirementsInvokeResponse `pulumi:"resourceRequirements"`
	// The RunId that created this model.
	RunId *string `pulumi:"runId"`
	// Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleInputData *string `pulumi:"sampleInputData"`
	// Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleOutputData *string `pulumi:"sampleOutputData"`
	// Indicates whether we need to unpack the Model during docker Image creation.
	Unpack *bool `pulumi:"unpack"`
	// The URL of the Model. Usually a SAS URL.
	Url string `pulumi:"url"`
	// The Model version assigned by Model Management Service.
	Version *float64 `pulumi:"version"`
}

// ModelInvokeResponseInput is an input type that accepts ModelInvokeResponseArgs and ModelInvokeResponseOutput values.
// You can construct a concrete instance of `ModelInvokeResponseInput` via:
//
//          ModelInvokeResponseArgs{...}
type ModelInvokeResponseInput interface {
	pulumi.Input

	ToModelInvokeResponseOutput() ModelInvokeResponseOutput
	ToModelInvokeResponseOutputWithContext(context.Context) ModelInvokeResponseOutput
}

// An Azure Machine Learning Model.
type ModelInvokeResponseArgs struct {
	// The Model creation time (UTC).
	CreatedTime pulumi.StringPtrInput `pulumi:"createdTime"`
	// The list of datasets associated with the model.
	Datasets DatasetReferenceInvokeResponseArrayInput `pulumi:"datasets"`
	// Models derived from this model
	DerivedModelIds pulumi.StringArrayInput `pulumi:"derivedModelIds"`
	// The Model description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the experiment where this model was created.
	ExperimentName pulumi.StringPtrInput `pulumi:"experimentName"`
	// The Model framework.
	Framework pulumi.StringPtrInput `pulumi:"framework"`
	// The Model framework version.
	FrameworkVersion pulumi.StringPtrInput `pulumi:"frameworkVersion"`
	// The Model Id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Model tag dictionary. Items are mutable.
	KvTags pulumi.StringMapInput `pulumi:"kvTags"`
	// The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
	MimeType pulumi.StringInput `pulumi:"mimeType"`
	// The Model last modified time (UTC).
	ModifiedTime pulumi.StringPtrInput `pulumi:"modifiedTime"`
	// The Model name.
	Name pulumi.StringInput `pulumi:"name"`
	// The Parent Model Id.
	ParentModelId pulumi.StringPtrInput `pulumi:"parentModelId"`
	// The Model property dictionary. Properties are immutable.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Resource requirements for the model
	ResourceRequirements ContainerResourceRequirementsInvokeResponsePtrInput `pulumi:"resourceRequirements"`
	// The RunId that created this model.
	RunId pulumi.StringPtrInput `pulumi:"runId"`
	// Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleInputData pulumi.StringPtrInput `pulumi:"sampleInputData"`
	// Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleOutputData pulumi.StringPtrInput `pulumi:"sampleOutputData"`
	// Indicates whether we need to unpack the Model during docker Image creation.
	Unpack pulumi.BoolPtrInput `pulumi:"unpack"`
	// The URL of the Model. Usually a SAS URL.
	Url pulumi.StringInput `pulumi:"url"`
	// The Model version assigned by Model Management Service.
	Version pulumi.Float64PtrInput `pulumi:"version"`
}

func (ModelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelInvokeResponse)(nil)).Elem()
}

func (i ModelInvokeResponseArgs) ToModelInvokeResponseOutput() ModelInvokeResponseOutput {
	return i.ToModelInvokeResponseOutputWithContext(context.Background())
}

func (i ModelInvokeResponseArgs) ToModelInvokeResponseOutputWithContext(ctx context.Context) ModelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelInvokeResponseOutput)
}

// ModelInvokeResponseArrayInput is an input type that accepts ModelInvokeResponseArray and ModelInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ModelInvokeResponseArrayInput` via:
//
//          ModelInvokeResponseArray{ ModelInvokeResponseArgs{...} }
type ModelInvokeResponseArrayInput interface {
	pulumi.Input

	ToModelInvokeResponseArrayOutput() ModelInvokeResponseArrayOutput
	ToModelInvokeResponseArrayOutputWithContext(context.Context) ModelInvokeResponseArrayOutput
}

type ModelInvokeResponseArray []ModelInvokeResponseInput

func (ModelInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelInvokeResponse)(nil)).Elem()
}

func (i ModelInvokeResponseArray) ToModelInvokeResponseArrayOutput() ModelInvokeResponseArrayOutput {
	return i.ToModelInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ModelInvokeResponseArray) ToModelInvokeResponseArrayOutputWithContext(ctx context.Context) ModelInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelInvokeResponseArrayOutput)
}

// An Azure Machine Learning Model.
type ModelInvokeResponseOutput struct{ *pulumi.OutputState }

func (ModelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelInvokeResponse)(nil)).Elem()
}

func (o ModelInvokeResponseOutput) ToModelInvokeResponseOutput() ModelInvokeResponseOutput {
	return o
}

func (o ModelInvokeResponseOutput) ToModelInvokeResponseOutputWithContext(ctx context.Context) ModelInvokeResponseOutput {
	return o
}

// The Model creation time (UTC).
func (o ModelInvokeResponseOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelInvokeResponse) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

// The list of datasets associated with the model.
func (o ModelInvokeResponseOutput) Datasets() DatasetReferenceInvokeResponseArrayOutput {
	return o.ApplyT(func(v ModelInvokeResponse) []DatasetReferenceInvokeResponse { return v.Datasets }).(DatasetReferenceInvokeResponseArrayOutput)
}

// Models derived from this model
func (o ModelInvokeResponseOutput) DerivedModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelInvokeResponse) []string { return v.DerivedModelIds }).(pulumi.StringArrayOutput)
}

// The Model description text.
func (o ModelInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the experiment where this model was created.
func (o ModelInvokeResponseOutput) ExperimentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelInvokeResponse) *string { return v.ExperimentName }).(pulumi.StringPtrOutput)
}

// The Model framework.
func (o ModelInvokeResponseOutput) Framework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelInvokeResponse) *string { return v.Framework }).(pulumi.StringPtrOutput)
}

// The Model framework version.
func (o ModelInvokeResponseOutput) FrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelInvokeResponse) *string { return v.FrameworkVersion }).(pulumi.StringPtrOutput)
}

// The Model Id.
func (o ModelInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Model tag dictionary. Items are mutable.
func (o ModelInvokeResponseOutput) KvTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelInvokeResponse) map[string]string { return v.KvTags }).(pulumi.StringMapOutput)
}

// The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
func (o ModelInvokeResponseOutput) MimeType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelInvokeResponse) string { return v.MimeType }).(pulumi.StringOutput)
}

// The Model last modified time (UTC).
func (o ModelInvokeResponseOutput) ModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelInvokeResponse) *string { return v.ModifiedTime }).(pulumi.StringPtrOutput)
}

// The Model name.
func (o ModelInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ModelInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The Parent Model Id.
func (o ModelInvokeResponseOutput) ParentModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelInvokeResponse) *string { return v.ParentModelId }).(pulumi.StringPtrOutput)
}

// The Model property dictionary. Properties are immutable.
func (o ModelInvokeResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelInvokeResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Resource requirements for the model
func (o ModelInvokeResponseOutput) ResourceRequirements() ContainerResourceRequirementsInvokeResponsePtrOutput {
	return o.ApplyT(func(v ModelInvokeResponse) *ContainerResourceRequirementsInvokeResponse {
		return v.ResourceRequirements
	}).(ContainerResourceRequirementsInvokeResponsePtrOutput)
}

// The RunId that created this model.
func (o ModelInvokeResponseOutput) RunId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelInvokeResponse) *string { return v.RunId }).(pulumi.StringPtrOutput)
}

// Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
func (o ModelInvokeResponseOutput) SampleInputData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelInvokeResponse) *string { return v.SampleInputData }).(pulumi.StringPtrOutput)
}

// Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
func (o ModelInvokeResponseOutput) SampleOutputData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelInvokeResponse) *string { return v.SampleOutputData }).(pulumi.StringPtrOutput)
}

// Indicates whether we need to unpack the Model during docker Image creation.
func (o ModelInvokeResponseOutput) Unpack() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelInvokeResponse) *bool { return v.Unpack }).(pulumi.BoolPtrOutput)
}

// The URL of the Model. Usually a SAS URL.
func (o ModelInvokeResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ModelInvokeResponse) string { return v.Url }).(pulumi.StringOutput)
}

// The Model version assigned by Model Management Service.
func (o ModelInvokeResponseOutput) Version() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelInvokeResponse) *float64 { return v.Version }).(pulumi.Float64PtrOutput)
}

type ModelInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ModelInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelInvokeResponse)(nil)).Elem()
}

func (o ModelInvokeResponseArrayOutput) ToModelInvokeResponseArrayOutput() ModelInvokeResponseArrayOutput {
	return o
}

func (o ModelInvokeResponseArrayOutput) ToModelInvokeResponseArrayOutputWithContext(ctx context.Context) ModelInvokeResponseArrayOutput {
	return o
}

func (o ModelInvokeResponseArrayOutput) Index(i pulumi.IntInput) ModelInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelInvokeResponse {
		return vs[0].([]ModelInvokeResponse)[vs[1].(int)]
	}).(ModelInvokeResponseOutput)
}

// An Azure Machine Learning Model.
type ModelResponse struct {
	// The Model creation time (UTC).
	CreatedTime *string `pulumi:"createdTime"`
	// The list of datasets associated with the model.
	Datasets []DatasetReferenceResponse `pulumi:"datasets"`
	// Models derived from this model
	DerivedModelIds []string `pulumi:"derivedModelIds"`
	// The Model description text.
	Description *string `pulumi:"description"`
	// The name of the experiment where this model was created.
	ExperimentName *string `pulumi:"experimentName"`
	// The Model framework.
	Framework *string `pulumi:"framework"`
	// The Model framework version.
	FrameworkVersion *string `pulumi:"frameworkVersion"`
	// The Model Id.
	Id *string `pulumi:"id"`
	// The Model tag dictionary. Items are mutable.
	KvTags map[string]string `pulumi:"kvTags"`
	// The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
	MimeType string `pulumi:"mimeType"`
	// The Model last modified time (UTC).
	ModifiedTime *string `pulumi:"modifiedTime"`
	// The Model name.
	Name string `pulumi:"name"`
	// The Parent Model Id.
	ParentModelId *string `pulumi:"parentModelId"`
	// The Model property dictionary. Properties are immutable.
	Properties map[string]string `pulumi:"properties"`
	// Resource requirements for the model
	ResourceRequirements *ContainerResourceRequirementsResponse `pulumi:"resourceRequirements"`
	// The RunId that created this model.
	RunId *string `pulumi:"runId"`
	// Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleInputData *string `pulumi:"sampleInputData"`
	// Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleOutputData *string `pulumi:"sampleOutputData"`
	// Indicates whether we need to unpack the Model during docker Image creation.
	Unpack *bool `pulumi:"unpack"`
	// The URL of the Model. Usually a SAS URL.
	Url string `pulumi:"url"`
	// The Model version assigned by Model Management Service.
	Version *float64 `pulumi:"version"`
}

// ModelResponseInput is an input type that accepts ModelResponseArgs and ModelResponseOutput values.
// You can construct a concrete instance of `ModelResponseInput` via:
//
//          ModelResponseArgs{...}
type ModelResponseInput interface {
	pulumi.Input

	ToModelResponseOutput() ModelResponseOutput
	ToModelResponseOutputWithContext(context.Context) ModelResponseOutput
}

// An Azure Machine Learning Model.
type ModelResponseArgs struct {
	// The Model creation time (UTC).
	CreatedTime pulumi.StringPtrInput `pulumi:"createdTime"`
	// The list of datasets associated with the model.
	Datasets DatasetReferenceResponseArrayInput `pulumi:"datasets"`
	// Models derived from this model
	DerivedModelIds pulumi.StringArrayInput `pulumi:"derivedModelIds"`
	// The Model description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the experiment where this model was created.
	ExperimentName pulumi.StringPtrInput `pulumi:"experimentName"`
	// The Model framework.
	Framework pulumi.StringPtrInput `pulumi:"framework"`
	// The Model framework version.
	FrameworkVersion pulumi.StringPtrInput `pulumi:"frameworkVersion"`
	// The Model Id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Model tag dictionary. Items are mutable.
	KvTags pulumi.StringMapInput `pulumi:"kvTags"`
	// The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
	MimeType pulumi.StringInput `pulumi:"mimeType"`
	// The Model last modified time (UTC).
	ModifiedTime pulumi.StringPtrInput `pulumi:"modifiedTime"`
	// The Model name.
	Name pulumi.StringInput `pulumi:"name"`
	// The Parent Model Id.
	ParentModelId pulumi.StringPtrInput `pulumi:"parentModelId"`
	// The Model property dictionary. Properties are immutable.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Resource requirements for the model
	ResourceRequirements ContainerResourceRequirementsResponsePtrInput `pulumi:"resourceRequirements"`
	// The RunId that created this model.
	RunId pulumi.StringPtrInput `pulumi:"runId"`
	// Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleInputData pulumi.StringPtrInput `pulumi:"sampleInputData"`
	// Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
	SampleOutputData pulumi.StringPtrInput `pulumi:"sampleOutputData"`
	// Indicates whether we need to unpack the Model during docker Image creation.
	Unpack pulumi.BoolPtrInput `pulumi:"unpack"`
	// The URL of the Model. Usually a SAS URL.
	Url pulumi.StringInput `pulumi:"url"`
	// The Model version assigned by Model Management Service.
	Version pulumi.Float64PtrInput `pulumi:"version"`
}

func (ModelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelResponse)(nil)).Elem()
}

func (i ModelResponseArgs) ToModelResponseOutput() ModelResponseOutput {
	return i.ToModelResponseOutputWithContext(context.Background())
}

func (i ModelResponseArgs) ToModelResponseOutputWithContext(ctx context.Context) ModelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelResponseOutput)
}

// ModelResponseArrayInput is an input type that accepts ModelResponseArray and ModelResponseArrayOutput values.
// You can construct a concrete instance of `ModelResponseArrayInput` via:
//
//          ModelResponseArray{ ModelResponseArgs{...} }
type ModelResponseArrayInput interface {
	pulumi.Input

	ToModelResponseArrayOutput() ModelResponseArrayOutput
	ToModelResponseArrayOutputWithContext(context.Context) ModelResponseArrayOutput
}

type ModelResponseArray []ModelResponseInput

func (ModelResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelResponse)(nil)).Elem()
}

func (i ModelResponseArray) ToModelResponseArrayOutput() ModelResponseArrayOutput {
	return i.ToModelResponseArrayOutputWithContext(context.Background())
}

func (i ModelResponseArray) ToModelResponseArrayOutputWithContext(ctx context.Context) ModelResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelResponseArrayOutput)
}

// An Azure Machine Learning Model.
type ModelResponseOutput struct{ *pulumi.OutputState }

func (ModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelResponse)(nil)).Elem()
}

func (o ModelResponseOutput) ToModelResponseOutput() ModelResponseOutput {
	return o
}

func (o ModelResponseOutput) ToModelResponseOutputWithContext(ctx context.Context) ModelResponseOutput {
	return o
}

// The Model creation time (UTC).
func (o ModelResponseOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

// The list of datasets associated with the model.
func (o ModelResponseOutput) Datasets() DatasetReferenceResponseArrayOutput {
	return o.ApplyT(func(v ModelResponse) []DatasetReferenceResponse { return v.Datasets }).(DatasetReferenceResponseArrayOutput)
}

// Models derived from this model
func (o ModelResponseOutput) DerivedModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelResponse) []string { return v.DerivedModelIds }).(pulumi.StringArrayOutput)
}

// The Model description text.
func (o ModelResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the experiment where this model was created.
func (o ModelResponseOutput) ExperimentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.ExperimentName }).(pulumi.StringPtrOutput)
}

// The Model framework.
func (o ModelResponseOutput) Framework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.Framework }).(pulumi.StringPtrOutput)
}

// The Model framework version.
func (o ModelResponseOutput) FrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.FrameworkVersion }).(pulumi.StringPtrOutput)
}

// The Model Id.
func (o ModelResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Model tag dictionary. Items are mutable.
func (o ModelResponseOutput) KvTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelResponse) map[string]string { return v.KvTags }).(pulumi.StringMapOutput)
}

// The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
func (o ModelResponseOutput) MimeType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelResponse) string { return v.MimeType }).(pulumi.StringOutput)
}

// The Model last modified time (UTC).
func (o ModelResponseOutput) ModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.ModifiedTime }).(pulumi.StringPtrOutput)
}

// The Model name.
func (o ModelResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ModelResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The Parent Model Id.
func (o ModelResponseOutput) ParentModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.ParentModelId }).(pulumi.StringPtrOutput)
}

// The Model property dictionary. Properties are immutable.
func (o ModelResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Resource requirements for the model
func (o ModelResponseOutput) ResourceRequirements() ContainerResourceRequirementsResponsePtrOutput {
	return o.ApplyT(func(v ModelResponse) *ContainerResourceRequirementsResponse { return v.ResourceRequirements }).(ContainerResourceRequirementsResponsePtrOutput)
}

// The RunId that created this model.
func (o ModelResponseOutput) RunId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.RunId }).(pulumi.StringPtrOutput)
}

// Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
func (o ModelResponseOutput) SampleInputData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.SampleInputData }).(pulumi.StringPtrOutput)
}

// Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
func (o ModelResponseOutput) SampleOutputData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelResponse) *string { return v.SampleOutputData }).(pulumi.StringPtrOutput)
}

// Indicates whether we need to unpack the Model during docker Image creation.
func (o ModelResponseOutput) Unpack() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelResponse) *bool { return v.Unpack }).(pulumi.BoolPtrOutput)
}

// The URL of the Model. Usually a SAS URL.
func (o ModelResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ModelResponse) string { return v.Url }).(pulumi.StringOutput)
}

// The Model version assigned by Model Management Service.
func (o ModelResponseOutput) Version() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelResponse) *float64 { return v.Version }).(pulumi.Float64PtrOutput)
}

type ModelResponseArrayOutput struct{ *pulumi.OutputState }

func (ModelResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelResponse)(nil)).Elem()
}

func (o ModelResponseArrayOutput) ToModelResponseArrayOutput() ModelResponseArrayOutput {
	return o
}

func (o ModelResponseArrayOutput) ToModelResponseArrayOutputWithContext(ctx context.Context) ModelResponseArrayOutput {
	return o
}

func (o ModelResponseArrayOutput) Index(i pulumi.IntInput) ModelResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelResponse {
		return vs[0].([]ModelResponse)[vs[1].(int)]
	}).(ModelResponseOutput)
}

// Counts of various compute node states on the amlCompute.
type NodeStateCountsInvokeResponse struct {
	// Number of compute nodes in idle state.
	IdleNodeCount int `pulumi:"idleNodeCount"`
	// Number of compute nodes which are leaving the amlCompute.
	LeavingNodeCount int `pulumi:"leavingNodeCount"`
	// Number of compute nodes which are in preempted state.
	PreemptedNodeCount int `pulumi:"preemptedNodeCount"`
	// Number of compute nodes which are being prepared.
	PreparingNodeCount int `pulumi:"preparingNodeCount"`
	// Number of compute nodes which are running jobs.
	RunningNodeCount int `pulumi:"runningNodeCount"`
	// Number of compute nodes which are in unusable state.
	UnusableNodeCount int `pulumi:"unusableNodeCount"`
}

// NodeStateCountsInvokeResponseInput is an input type that accepts NodeStateCountsInvokeResponseArgs and NodeStateCountsInvokeResponseOutput values.
// You can construct a concrete instance of `NodeStateCountsInvokeResponseInput` via:
//
//          NodeStateCountsInvokeResponseArgs{...}
type NodeStateCountsInvokeResponseInput interface {
	pulumi.Input

	ToNodeStateCountsInvokeResponseOutput() NodeStateCountsInvokeResponseOutput
	ToNodeStateCountsInvokeResponseOutputWithContext(context.Context) NodeStateCountsInvokeResponseOutput
}

// Counts of various compute node states on the amlCompute.
type NodeStateCountsInvokeResponseArgs struct {
	// Number of compute nodes in idle state.
	IdleNodeCount pulumi.IntInput `pulumi:"idleNodeCount"`
	// Number of compute nodes which are leaving the amlCompute.
	LeavingNodeCount pulumi.IntInput `pulumi:"leavingNodeCount"`
	// Number of compute nodes which are in preempted state.
	PreemptedNodeCount pulumi.IntInput `pulumi:"preemptedNodeCount"`
	// Number of compute nodes which are being prepared.
	PreparingNodeCount pulumi.IntInput `pulumi:"preparingNodeCount"`
	// Number of compute nodes which are running jobs.
	RunningNodeCount pulumi.IntInput `pulumi:"runningNodeCount"`
	// Number of compute nodes which are in unusable state.
	UnusableNodeCount pulumi.IntInput `pulumi:"unusableNodeCount"`
}

func (NodeStateCountsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeStateCountsInvokeResponse)(nil)).Elem()
}

func (i NodeStateCountsInvokeResponseArgs) ToNodeStateCountsInvokeResponseOutput() NodeStateCountsInvokeResponseOutput {
	return i.ToNodeStateCountsInvokeResponseOutputWithContext(context.Background())
}

func (i NodeStateCountsInvokeResponseArgs) ToNodeStateCountsInvokeResponseOutputWithContext(ctx context.Context) NodeStateCountsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStateCountsInvokeResponseOutput)
}

func (i NodeStateCountsInvokeResponseArgs) ToNodeStateCountsInvokeResponsePtrOutput() NodeStateCountsInvokeResponsePtrOutput {
	return i.ToNodeStateCountsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i NodeStateCountsInvokeResponseArgs) ToNodeStateCountsInvokeResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStateCountsInvokeResponseOutput).ToNodeStateCountsInvokeResponsePtrOutputWithContext(ctx)
}

// NodeStateCountsInvokeResponsePtrInput is an input type that accepts NodeStateCountsInvokeResponseArgs, NodeStateCountsInvokeResponsePtr and NodeStateCountsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `NodeStateCountsInvokeResponsePtrInput` via:
//
//          NodeStateCountsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type NodeStateCountsInvokeResponsePtrInput interface {
	pulumi.Input

	ToNodeStateCountsInvokeResponsePtrOutput() NodeStateCountsInvokeResponsePtrOutput
	ToNodeStateCountsInvokeResponsePtrOutputWithContext(context.Context) NodeStateCountsInvokeResponsePtrOutput
}

type nodeStateCountsInvokeResponsePtrType NodeStateCountsInvokeResponseArgs

func NodeStateCountsInvokeResponsePtr(v *NodeStateCountsInvokeResponseArgs) NodeStateCountsInvokeResponsePtrInput {
	return (*nodeStateCountsInvokeResponsePtrType)(v)
}

func (*nodeStateCountsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeStateCountsInvokeResponse)(nil)).Elem()
}

func (i *nodeStateCountsInvokeResponsePtrType) ToNodeStateCountsInvokeResponsePtrOutput() NodeStateCountsInvokeResponsePtrOutput {
	return i.ToNodeStateCountsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *nodeStateCountsInvokeResponsePtrType) ToNodeStateCountsInvokeResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStateCountsInvokeResponsePtrOutput)
}

// Counts of various compute node states on the amlCompute.
type NodeStateCountsInvokeResponseOutput struct{ *pulumi.OutputState }

func (NodeStateCountsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeStateCountsInvokeResponse)(nil)).Elem()
}

func (o NodeStateCountsInvokeResponseOutput) ToNodeStateCountsInvokeResponseOutput() NodeStateCountsInvokeResponseOutput {
	return o
}

func (o NodeStateCountsInvokeResponseOutput) ToNodeStateCountsInvokeResponseOutputWithContext(ctx context.Context) NodeStateCountsInvokeResponseOutput {
	return o
}

func (o NodeStateCountsInvokeResponseOutput) ToNodeStateCountsInvokeResponsePtrOutput() NodeStateCountsInvokeResponsePtrOutput {
	return o.ToNodeStateCountsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o NodeStateCountsInvokeResponseOutput) ToNodeStateCountsInvokeResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsInvokeResponsePtrOutput {
	return o.ApplyT(func(v NodeStateCountsInvokeResponse) *NodeStateCountsInvokeResponse {
		return &v
	}).(NodeStateCountsInvokeResponsePtrOutput)
}

// Number of compute nodes in idle state.
func (o NodeStateCountsInvokeResponseOutput) IdleNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsInvokeResponse) int { return v.IdleNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are leaving the amlCompute.
func (o NodeStateCountsInvokeResponseOutput) LeavingNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsInvokeResponse) int { return v.LeavingNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are in preempted state.
func (o NodeStateCountsInvokeResponseOutput) PreemptedNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsInvokeResponse) int { return v.PreemptedNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are being prepared.
func (o NodeStateCountsInvokeResponseOutput) PreparingNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsInvokeResponse) int { return v.PreparingNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are running jobs.
func (o NodeStateCountsInvokeResponseOutput) RunningNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsInvokeResponse) int { return v.RunningNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are in unusable state.
func (o NodeStateCountsInvokeResponseOutput) UnusableNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsInvokeResponse) int { return v.UnusableNodeCount }).(pulumi.IntOutput)
}

type NodeStateCountsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (NodeStateCountsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeStateCountsInvokeResponse)(nil)).Elem()
}

func (o NodeStateCountsInvokeResponsePtrOutput) ToNodeStateCountsInvokeResponsePtrOutput() NodeStateCountsInvokeResponsePtrOutput {
	return o
}

func (o NodeStateCountsInvokeResponsePtrOutput) ToNodeStateCountsInvokeResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsInvokeResponsePtrOutput {
	return o
}

func (o NodeStateCountsInvokeResponsePtrOutput) Elem() NodeStateCountsInvokeResponseOutput {
	return o.ApplyT(func(v *NodeStateCountsInvokeResponse) NodeStateCountsInvokeResponse { return *v }).(NodeStateCountsInvokeResponseOutput)
}

// Number of compute nodes in idle state.
func (o NodeStateCountsInvokeResponsePtrOutput) IdleNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return &v.IdleNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are leaving the amlCompute.
func (o NodeStateCountsInvokeResponsePtrOutput) LeavingNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return &v.LeavingNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are in preempted state.
func (o NodeStateCountsInvokeResponsePtrOutput) PreemptedNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return &v.PreemptedNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are being prepared.
func (o NodeStateCountsInvokeResponsePtrOutput) PreparingNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return &v.PreparingNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are running jobs.
func (o NodeStateCountsInvokeResponsePtrOutput) RunningNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return &v.RunningNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are in unusable state.
func (o NodeStateCountsInvokeResponsePtrOutput) UnusableNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return &v.UnusableNodeCount
	}).(pulumi.IntPtrOutput)
}

// Counts of various compute node states on the amlCompute.
type NodeStateCountsResponse struct {
	// Number of compute nodes in idle state.
	IdleNodeCount int `pulumi:"idleNodeCount"`
	// Number of compute nodes which are leaving the amlCompute.
	LeavingNodeCount int `pulumi:"leavingNodeCount"`
	// Number of compute nodes which are in preempted state.
	PreemptedNodeCount int `pulumi:"preemptedNodeCount"`
	// Number of compute nodes which are being prepared.
	PreparingNodeCount int `pulumi:"preparingNodeCount"`
	// Number of compute nodes which are running jobs.
	RunningNodeCount int `pulumi:"runningNodeCount"`
	// Number of compute nodes which are in unusable state.
	UnusableNodeCount int `pulumi:"unusableNodeCount"`
}

// NodeStateCountsResponseInput is an input type that accepts NodeStateCountsResponseArgs and NodeStateCountsResponseOutput values.
// You can construct a concrete instance of `NodeStateCountsResponseInput` via:
//
//          NodeStateCountsResponseArgs{...}
type NodeStateCountsResponseInput interface {
	pulumi.Input

	ToNodeStateCountsResponseOutput() NodeStateCountsResponseOutput
	ToNodeStateCountsResponseOutputWithContext(context.Context) NodeStateCountsResponseOutput
}

// Counts of various compute node states on the amlCompute.
type NodeStateCountsResponseArgs struct {
	// Number of compute nodes in idle state.
	IdleNodeCount pulumi.IntInput `pulumi:"idleNodeCount"`
	// Number of compute nodes which are leaving the amlCompute.
	LeavingNodeCount pulumi.IntInput `pulumi:"leavingNodeCount"`
	// Number of compute nodes which are in preempted state.
	PreemptedNodeCount pulumi.IntInput `pulumi:"preemptedNodeCount"`
	// Number of compute nodes which are being prepared.
	PreparingNodeCount pulumi.IntInput `pulumi:"preparingNodeCount"`
	// Number of compute nodes which are running jobs.
	RunningNodeCount pulumi.IntInput `pulumi:"runningNodeCount"`
	// Number of compute nodes which are in unusable state.
	UnusableNodeCount pulumi.IntInput `pulumi:"unusableNodeCount"`
}

func (NodeStateCountsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeStateCountsResponse)(nil)).Elem()
}

func (i NodeStateCountsResponseArgs) ToNodeStateCountsResponseOutput() NodeStateCountsResponseOutput {
	return i.ToNodeStateCountsResponseOutputWithContext(context.Background())
}

func (i NodeStateCountsResponseArgs) ToNodeStateCountsResponseOutputWithContext(ctx context.Context) NodeStateCountsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStateCountsResponseOutput)
}

func (i NodeStateCountsResponseArgs) ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput {
	return i.ToNodeStateCountsResponsePtrOutputWithContext(context.Background())
}

func (i NodeStateCountsResponseArgs) ToNodeStateCountsResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStateCountsResponseOutput).ToNodeStateCountsResponsePtrOutputWithContext(ctx)
}

// NodeStateCountsResponsePtrInput is an input type that accepts NodeStateCountsResponseArgs, NodeStateCountsResponsePtr and NodeStateCountsResponsePtrOutput values.
// You can construct a concrete instance of `NodeStateCountsResponsePtrInput` via:
//
//          NodeStateCountsResponseArgs{...}
//
//  or:
//
//          nil
type NodeStateCountsResponsePtrInput interface {
	pulumi.Input

	ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput
	ToNodeStateCountsResponsePtrOutputWithContext(context.Context) NodeStateCountsResponsePtrOutput
}

type nodeStateCountsResponsePtrType NodeStateCountsResponseArgs

func NodeStateCountsResponsePtr(v *NodeStateCountsResponseArgs) NodeStateCountsResponsePtrInput {
	return (*nodeStateCountsResponsePtrType)(v)
}

func (*nodeStateCountsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeStateCountsResponse)(nil)).Elem()
}

func (i *nodeStateCountsResponsePtrType) ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput {
	return i.ToNodeStateCountsResponsePtrOutputWithContext(context.Background())
}

func (i *nodeStateCountsResponsePtrType) ToNodeStateCountsResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStateCountsResponsePtrOutput)
}

// Counts of various compute node states on the amlCompute.
type NodeStateCountsResponseOutput struct{ *pulumi.OutputState }

func (NodeStateCountsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeStateCountsResponse)(nil)).Elem()
}

func (o NodeStateCountsResponseOutput) ToNodeStateCountsResponseOutput() NodeStateCountsResponseOutput {
	return o
}

func (o NodeStateCountsResponseOutput) ToNodeStateCountsResponseOutputWithContext(ctx context.Context) NodeStateCountsResponseOutput {
	return o
}

func (o NodeStateCountsResponseOutput) ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput {
	return o.ToNodeStateCountsResponsePtrOutputWithContext(context.Background())
}

func (o NodeStateCountsResponseOutput) ToNodeStateCountsResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsResponsePtrOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) *NodeStateCountsResponse {
		return &v
	}).(NodeStateCountsResponsePtrOutput)
}

// Number of compute nodes in idle state.
func (o NodeStateCountsResponseOutput) IdleNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.IdleNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are leaving the amlCompute.
func (o NodeStateCountsResponseOutput) LeavingNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.LeavingNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are in preempted state.
func (o NodeStateCountsResponseOutput) PreemptedNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.PreemptedNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are being prepared.
func (o NodeStateCountsResponseOutput) PreparingNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.PreparingNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are running jobs.
func (o NodeStateCountsResponseOutput) RunningNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.RunningNodeCount }).(pulumi.IntOutput)
}

// Number of compute nodes which are in unusable state.
func (o NodeStateCountsResponseOutput) UnusableNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.UnusableNodeCount }).(pulumi.IntOutput)
}

type NodeStateCountsResponsePtrOutput struct{ *pulumi.OutputState }

func (NodeStateCountsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeStateCountsResponse)(nil)).Elem()
}

func (o NodeStateCountsResponsePtrOutput) ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput {
	return o
}

func (o NodeStateCountsResponsePtrOutput) ToNodeStateCountsResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsResponsePtrOutput {
	return o
}

func (o NodeStateCountsResponsePtrOutput) Elem() NodeStateCountsResponseOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) NodeStateCountsResponse { return *v }).(NodeStateCountsResponseOutput)
}

// Number of compute nodes in idle state.
func (o NodeStateCountsResponsePtrOutput) IdleNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.IdleNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are leaving the amlCompute.
func (o NodeStateCountsResponsePtrOutput) LeavingNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.LeavingNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are in preempted state.
func (o NodeStateCountsResponsePtrOutput) PreemptedNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.PreemptedNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are being prepared.
func (o NodeStateCountsResponsePtrOutput) PreparingNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.PreparingNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are running jobs.
func (o NodeStateCountsResponsePtrOutput) RunningNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.RunningNodeCount
	}).(pulumi.IntPtrOutput)
}

// Number of compute nodes which are in unusable state.
func (o NodeStateCountsResponsePtrOutput) UnusableNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.UnusableNodeCount
	}).(pulumi.IntPtrOutput)
}

type PasswordInvokeResponse struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// PasswordInvokeResponseInput is an input type that accepts PasswordInvokeResponseArgs and PasswordInvokeResponseOutput values.
// You can construct a concrete instance of `PasswordInvokeResponseInput` via:
//
//          PasswordInvokeResponseArgs{...}
type PasswordInvokeResponseInput interface {
	pulumi.Input

	ToPasswordInvokeResponseOutput() PasswordInvokeResponseOutput
	ToPasswordInvokeResponseOutputWithContext(context.Context) PasswordInvokeResponseOutput
}

type PasswordInvokeResponseArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (PasswordInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PasswordInvokeResponse)(nil)).Elem()
}

func (i PasswordInvokeResponseArgs) ToPasswordInvokeResponseOutput() PasswordInvokeResponseOutput {
	return i.ToPasswordInvokeResponseOutputWithContext(context.Background())
}

func (i PasswordInvokeResponseArgs) ToPasswordInvokeResponseOutputWithContext(ctx context.Context) PasswordInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PasswordInvokeResponseOutput)
}

// PasswordInvokeResponseArrayInput is an input type that accepts PasswordInvokeResponseArray and PasswordInvokeResponseArrayOutput values.
// You can construct a concrete instance of `PasswordInvokeResponseArrayInput` via:
//
//          PasswordInvokeResponseArray{ PasswordInvokeResponseArgs{...} }
type PasswordInvokeResponseArrayInput interface {
	pulumi.Input

	ToPasswordInvokeResponseArrayOutput() PasswordInvokeResponseArrayOutput
	ToPasswordInvokeResponseArrayOutputWithContext(context.Context) PasswordInvokeResponseArrayOutput
}

type PasswordInvokeResponseArray []PasswordInvokeResponseInput

func (PasswordInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PasswordInvokeResponse)(nil)).Elem()
}

func (i PasswordInvokeResponseArray) ToPasswordInvokeResponseArrayOutput() PasswordInvokeResponseArrayOutput {
	return i.ToPasswordInvokeResponseArrayOutputWithContext(context.Background())
}

func (i PasswordInvokeResponseArray) ToPasswordInvokeResponseArrayOutputWithContext(ctx context.Context) PasswordInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PasswordInvokeResponseArrayOutput)
}

type PasswordInvokeResponseOutput struct{ *pulumi.OutputState }

func (PasswordInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PasswordInvokeResponse)(nil)).Elem()
}

func (o PasswordInvokeResponseOutput) ToPasswordInvokeResponseOutput() PasswordInvokeResponseOutput {
	return o
}

func (o PasswordInvokeResponseOutput) ToPasswordInvokeResponseOutputWithContext(ctx context.Context) PasswordInvokeResponseOutput {
	return o
}

func (o PasswordInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PasswordInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o PasswordInvokeResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PasswordInvokeResponse) string { return v.Value }).(pulumi.StringOutput)
}

type PasswordInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (PasswordInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PasswordInvokeResponse)(nil)).Elem()
}

func (o PasswordInvokeResponseArrayOutput) ToPasswordInvokeResponseArrayOutput() PasswordInvokeResponseArrayOutput {
	return o
}

func (o PasswordInvokeResponseArrayOutput) ToPasswordInvokeResponseArrayOutputWithContext(ctx context.Context) PasswordInvokeResponseArrayOutput {
	return o
}

func (o PasswordInvokeResponseArrayOutput) Index(i pulumi.IntInput) PasswordInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PasswordInvokeResponse {
		return vs[0].([]PasswordInvokeResponse)[vs[1].(int)]
	}).(PasswordInvokeResponseOutput)
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionInvokeResponse struct {
	// Specifies the resource ID.
	Id string `pulumi:"id"`
	// The identity of the resource.
	Identity *IdentityInvokeResponse `pulumi:"identity"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// Specifies the name of the resource.
	Name string `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint *PrivateEndpointInvokeResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateInvokeResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The sku of the workspace.
	Sku *SkuInvokeResponse `pulumi:"sku"`
	// Contains resource tags defined as key/value pairs.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the type of the resource.
	Type string `pulumi:"type"`
}

// PrivateEndpointConnectionInvokeResponseInput is an input type that accepts PrivateEndpointConnectionInvokeResponseArgs and PrivateEndpointConnectionInvokeResponseOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionInvokeResponseInput` via:
//
//          PrivateEndpointConnectionInvokeResponseArgs{...}
type PrivateEndpointConnectionInvokeResponseInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionInvokeResponseOutput() PrivateEndpointConnectionInvokeResponseOutput
	ToPrivateEndpointConnectionInvokeResponseOutputWithContext(context.Context) PrivateEndpointConnectionInvokeResponseOutput
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionInvokeResponseArgs struct {
	// Specifies the resource ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The identity of the resource.
	Identity IdentityInvokeResponsePtrInput `pulumi:"identity"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Specifies the name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint PrivateEndpointInvokeResponsePtrInput `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateInvokeResponseInput `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The sku of the workspace.
	Sku SkuInvokeResponsePtrInput `pulumi:"sku"`
	// Contains resource tags defined as key/value pairs.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Specifies the type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PrivateEndpointConnectionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionInvokeResponse)(nil)).Elem()
}

func (i PrivateEndpointConnectionInvokeResponseArgs) ToPrivateEndpointConnectionInvokeResponseOutput() PrivateEndpointConnectionInvokeResponseOutput {
	return i.ToPrivateEndpointConnectionInvokeResponseOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionInvokeResponseArgs) ToPrivateEndpointConnectionInvokeResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionInvokeResponseOutput)
}

// PrivateEndpointConnectionInvokeResponseArrayInput is an input type that accepts PrivateEndpointConnectionInvokeResponseArray and PrivateEndpointConnectionInvokeResponseArrayOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionInvokeResponseArrayInput` via:
//
//          PrivateEndpointConnectionInvokeResponseArray{ PrivateEndpointConnectionInvokeResponseArgs{...} }
type PrivateEndpointConnectionInvokeResponseArrayInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionInvokeResponseArrayOutput() PrivateEndpointConnectionInvokeResponseArrayOutput
	ToPrivateEndpointConnectionInvokeResponseArrayOutputWithContext(context.Context) PrivateEndpointConnectionInvokeResponseArrayOutput
}

type PrivateEndpointConnectionInvokeResponseArray []PrivateEndpointConnectionInvokeResponseInput

func (PrivateEndpointConnectionInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionInvokeResponse)(nil)).Elem()
}

func (i PrivateEndpointConnectionInvokeResponseArray) ToPrivateEndpointConnectionInvokeResponseArrayOutput() PrivateEndpointConnectionInvokeResponseArrayOutput {
	return i.ToPrivateEndpointConnectionInvokeResponseArrayOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionInvokeResponseArray) ToPrivateEndpointConnectionInvokeResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionInvokeResponseArrayOutput)
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionInvokeResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionInvokeResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionInvokeResponseOutput) ToPrivateEndpointConnectionInvokeResponseOutput() PrivateEndpointConnectionInvokeResponseOutput {
	return o
}

func (o PrivateEndpointConnectionInvokeResponseOutput) ToPrivateEndpointConnectionInvokeResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionInvokeResponseOutput {
	return o
}

// Specifies the resource ID.
func (o PrivateEndpointConnectionInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The identity of the resource.
func (o PrivateEndpointConnectionInvokeResponseOutput) Identity() IdentityInvokeResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionInvokeResponse) *IdentityInvokeResponse { return v.Identity }).(IdentityInvokeResponsePtrOutput)
}

// Specifies the location of the resource.
func (o PrivateEndpointConnectionInvokeResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionInvokeResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Specifies the name of the resource.
func (o PrivateEndpointConnectionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The resource of private end point.
func (o PrivateEndpointConnectionInvokeResponseOutput) PrivateEndpoint() PrivateEndpointInvokeResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionInvokeResponse) *PrivateEndpointInvokeResponse {
		return v.PrivateEndpoint
	}).(PrivateEndpointInvokeResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionInvokeResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateInvokeResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionInvokeResponse) PrivateLinkServiceConnectionStateInvokeResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateInvokeResponseOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The sku of the workspace.
func (o PrivateEndpointConnectionInvokeResponseOutput) Sku() SkuInvokeResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionInvokeResponse) *SkuInvokeResponse { return v.Sku }).(SkuInvokeResponsePtrOutput)
}

// Contains resource tags defined as key/value pairs.
func (o PrivateEndpointConnectionInvokeResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionInvokeResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the type of the resource.
func (o PrivateEndpointConnectionInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionInvokeResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionInvokeResponseArrayOutput) ToPrivateEndpointConnectionInvokeResponseArrayOutput() PrivateEndpointConnectionInvokeResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionInvokeResponseArrayOutput) ToPrivateEndpointConnectionInvokeResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionInvokeResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionInvokeResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionInvokeResponse {
		return vs[0].([]PrivateEndpointConnectionInvokeResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionInvokeResponseOutput)
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponse struct {
	// Specifies the resource ID.
	Id string `pulumi:"id"`
	// The identity of the resource.
	Identity *IdentityResponse `pulumi:"identity"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// Specifies the name of the resource.
	Name string `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The sku of the workspace.
	Sku *SkuResponse `pulumi:"sku"`
	// Contains resource tags defined as key/value pairs.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the type of the resource.
	Type string `pulumi:"type"`
}

// PrivateEndpointConnectionResponseInput is an input type that accepts PrivateEndpointConnectionResponseArgs and PrivateEndpointConnectionResponseOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionResponseInput` via:
//
//          PrivateEndpointConnectionResponseArgs{...}
type PrivateEndpointConnectionResponseInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput
	ToPrivateEndpointConnectionResponseOutputWithContext(context.Context) PrivateEndpointConnectionResponseOutput
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponseArgs struct {
	// Specifies the resource ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The identity of the resource.
	Identity IdentityResponsePtrInput `pulumi:"identity"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Specifies the name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint PrivateEndpointResponsePtrInput `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponseInput `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The sku of the workspace.
	Sku SkuResponsePtrInput `pulumi:"sku"`
	// Contains resource tags defined as key/value pairs.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Specifies the type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PrivateEndpointConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (i PrivateEndpointConnectionResponseArgs) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return i.ToPrivateEndpointConnectionResponseOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionResponseArgs) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionResponseOutput)
}

// PrivateEndpointConnectionResponseArrayInput is an input type that accepts PrivateEndpointConnectionResponseArray and PrivateEndpointConnectionResponseArrayOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionResponseArrayInput` via:
//
//          PrivateEndpointConnectionResponseArray{ PrivateEndpointConnectionResponseArgs{...} }
type PrivateEndpointConnectionResponseArrayInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput
	ToPrivateEndpointConnectionResponseArrayOutputWithContext(context.Context) PrivateEndpointConnectionResponseArrayOutput
}

type PrivateEndpointConnectionResponseArray []PrivateEndpointConnectionResponseInput

func (PrivateEndpointConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (i PrivateEndpointConnectionResponseArray) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return i.ToPrivateEndpointConnectionResponseArrayOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionResponseArray) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionResponseArrayOutput)
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// Specifies the resource ID.
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The identity of the resource.
func (o PrivateEndpointConnectionResponseOutput) Identity() IdentityResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *IdentityResponse { return v.Identity }).(IdentityResponsePtrOutput)
}

// Specifies the location of the resource.
func (o PrivateEndpointConnectionResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Specifies the name of the resource.
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The resource of private end point.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The sku of the workspace.
func (o PrivateEndpointConnectionResponseOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// Contains resource tags defined as key/value pairs.
func (o PrivateEndpointConnectionResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the type of the resource.
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// The Private Endpoint resource.
type PrivateEndpointInvokeResponse struct {
	// The ARM identifier for Private Endpoint
	Id string `pulumi:"id"`
}

// PrivateEndpointInvokeResponseInput is an input type that accepts PrivateEndpointInvokeResponseArgs and PrivateEndpointInvokeResponseOutput values.
// You can construct a concrete instance of `PrivateEndpointInvokeResponseInput` via:
//
//          PrivateEndpointInvokeResponseArgs{...}
type PrivateEndpointInvokeResponseInput interface {
	pulumi.Input

	ToPrivateEndpointInvokeResponseOutput() PrivateEndpointInvokeResponseOutput
	ToPrivateEndpointInvokeResponseOutputWithContext(context.Context) PrivateEndpointInvokeResponseOutput
}

// The Private Endpoint resource.
type PrivateEndpointInvokeResponseArgs struct {
	// The ARM identifier for Private Endpoint
	Id pulumi.StringInput `pulumi:"id"`
}

func (PrivateEndpointInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointInvokeResponse)(nil)).Elem()
}

func (i PrivateEndpointInvokeResponseArgs) ToPrivateEndpointInvokeResponseOutput() PrivateEndpointInvokeResponseOutput {
	return i.ToPrivateEndpointInvokeResponseOutputWithContext(context.Background())
}

func (i PrivateEndpointInvokeResponseArgs) ToPrivateEndpointInvokeResponseOutputWithContext(ctx context.Context) PrivateEndpointInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointInvokeResponseOutput)
}

func (i PrivateEndpointInvokeResponseArgs) ToPrivateEndpointInvokeResponsePtrOutput() PrivateEndpointInvokeResponsePtrOutput {
	return i.ToPrivateEndpointInvokeResponsePtrOutputWithContext(context.Background())
}

func (i PrivateEndpointInvokeResponseArgs) ToPrivateEndpointInvokeResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointInvokeResponseOutput).ToPrivateEndpointInvokeResponsePtrOutputWithContext(ctx)
}

// PrivateEndpointInvokeResponsePtrInput is an input type that accepts PrivateEndpointInvokeResponseArgs, PrivateEndpointInvokeResponsePtr and PrivateEndpointInvokeResponsePtrOutput values.
// You can construct a concrete instance of `PrivateEndpointInvokeResponsePtrInput` via:
//
//          PrivateEndpointInvokeResponseArgs{...}
//
//  or:
//
//          nil
type PrivateEndpointInvokeResponsePtrInput interface {
	pulumi.Input

	ToPrivateEndpointInvokeResponsePtrOutput() PrivateEndpointInvokeResponsePtrOutput
	ToPrivateEndpointInvokeResponsePtrOutputWithContext(context.Context) PrivateEndpointInvokeResponsePtrOutput
}

type privateEndpointInvokeResponsePtrType PrivateEndpointInvokeResponseArgs

func PrivateEndpointInvokeResponsePtr(v *PrivateEndpointInvokeResponseArgs) PrivateEndpointInvokeResponsePtrInput {
	return (*privateEndpointInvokeResponsePtrType)(v)
}

func (*privateEndpointInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointInvokeResponse)(nil)).Elem()
}

func (i *privateEndpointInvokeResponsePtrType) ToPrivateEndpointInvokeResponsePtrOutput() PrivateEndpointInvokeResponsePtrOutput {
	return i.ToPrivateEndpointInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *privateEndpointInvokeResponsePtrType) ToPrivateEndpointInvokeResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointInvokeResponsePtrOutput)
}

// The Private Endpoint resource.
type PrivateEndpointInvokeResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointInvokeResponse)(nil)).Elem()
}

func (o PrivateEndpointInvokeResponseOutput) ToPrivateEndpointInvokeResponseOutput() PrivateEndpointInvokeResponseOutput {
	return o
}

func (o PrivateEndpointInvokeResponseOutput) ToPrivateEndpointInvokeResponseOutputWithContext(ctx context.Context) PrivateEndpointInvokeResponseOutput {
	return o
}

func (o PrivateEndpointInvokeResponseOutput) ToPrivateEndpointInvokeResponsePtrOutput() PrivateEndpointInvokeResponsePtrOutput {
	return o.ToPrivateEndpointInvokeResponsePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointInvokeResponseOutput) ToPrivateEndpointInvokeResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointInvokeResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointInvokeResponse) *PrivateEndpointInvokeResponse {
		return &v
	}).(PrivateEndpointInvokeResponsePtrOutput)
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointInvokeResponse)(nil)).Elem()
}

func (o PrivateEndpointInvokeResponsePtrOutput) ToPrivateEndpointInvokeResponsePtrOutput() PrivateEndpointInvokeResponsePtrOutput {
	return o
}

func (o PrivateEndpointInvokeResponsePtrOutput) ToPrivateEndpointInvokeResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointInvokeResponsePtrOutput {
	return o
}

func (o PrivateEndpointInvokeResponsePtrOutput) Elem() PrivateEndpointInvokeResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointInvokeResponse) PrivateEndpointInvokeResponse { return *v }).(PrivateEndpointInvokeResponseOutput)
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The Private Endpoint resource.
type PrivateEndpointResponse struct {
	// The ARM identifier for Private Endpoint
	Id string `pulumi:"id"`
}

// PrivateEndpointResponseInput is an input type that accepts PrivateEndpointResponseArgs and PrivateEndpointResponseOutput values.
// You can construct a concrete instance of `PrivateEndpointResponseInput` via:
//
//          PrivateEndpointResponseArgs{...}
type PrivateEndpointResponseInput interface {
	pulumi.Input

	ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput
	ToPrivateEndpointResponseOutputWithContext(context.Context) PrivateEndpointResponseOutput
}

// The Private Endpoint resource.
type PrivateEndpointResponseArgs struct {
	// The ARM identifier for Private Endpoint
	Id pulumi.StringInput `pulumi:"id"`
}

func (PrivateEndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return i.ToPrivateEndpointResponseOutputWithContext(context.Background())
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponseOutput)
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return i.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponseOutput).ToPrivateEndpointResponsePtrOutputWithContext(ctx)
}

// PrivateEndpointResponsePtrInput is an input type that accepts PrivateEndpointResponseArgs, PrivateEndpointResponsePtr and PrivateEndpointResponsePtrOutput values.
// You can construct a concrete instance of `PrivateEndpointResponsePtrInput` via:
//
//          PrivateEndpointResponseArgs{...}
//
//  or:
//
//          nil
type PrivateEndpointResponsePtrInput interface {
	pulumi.Input

	ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput
	ToPrivateEndpointResponsePtrOutputWithContext(context.Context) PrivateEndpointResponsePtrOutput
}

type privateEndpointResponsePtrType PrivateEndpointResponseArgs

func PrivateEndpointResponsePtr(v *PrivateEndpointResponseArgs) PrivateEndpointResponsePtrInput {
	return (*privateEndpointResponsePtrType)(v)
}

func (*privateEndpointResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (i *privateEndpointResponsePtrType) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return i.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (i *privateEndpointResponsePtrType) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponsePtrOutput)
}

// The Private Endpoint resource.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *PrivateEndpointResponse {
		return &v
	}).(PrivateEndpointResponsePtrOutput)
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse { return *v }).(PrivateEndpointResponseOutput)
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//          PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput).ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStatePtrInput is an input type that accepts PrivateLinkServiceConnectionStateArgs, PrivateLinkServiceConnectionStatePtr and PrivateLinkServiceConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStatePtrInput` via:
//
//          PrivateLinkServiceConnectionStateArgs{...}
//
//  or:
//
//          nil
type PrivateLinkServiceConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput
	ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStatePtrOutput
}

type privateLinkServiceConnectionStatePtrType PrivateLinkServiceConnectionStateArgs

func PrivateLinkServiceConnectionStatePtr(v *PrivateLinkServiceConnectionStateArgs) PrivateLinkServiceConnectionStatePtrInput {
	return (*privateLinkServiceConnectionStatePtrType)(v)
}

func (*privateLinkServiceConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStatePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *PrivateLinkServiceConnectionState {
		return &v
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) Elem() PrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) PrivateLinkServiceConnectionState { return *v }).(PrivateLinkServiceConnectionStateOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateInvokeResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInvokeResponseInput is an input type that accepts PrivateLinkServiceConnectionStateInvokeResponseArgs and PrivateLinkServiceConnectionStateInvokeResponseOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInvokeResponseInput` via:
//
//          PrivateLinkServiceConnectionStateInvokeResponseArgs{...}
type PrivateLinkServiceConnectionStateInvokeResponseInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateInvokeResponseOutput() PrivateLinkServiceConnectionStateInvokeResponseOutput
	ToPrivateLinkServiceConnectionStateInvokeResponseOutputWithContext(context.Context) PrivateLinkServiceConnectionStateInvokeResponseOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateInvokeResponseArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateInvokeResponse)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateInvokeResponseArgs) ToPrivateLinkServiceConnectionStateInvokeResponseOutput() PrivateLinkServiceConnectionStateInvokeResponseOutput {
	return i.ToPrivateLinkServiceConnectionStateInvokeResponseOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateInvokeResponseArgs) ToPrivateLinkServiceConnectionStateInvokeResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateInvokeResponseOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateInvokeResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateInvokeResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateInvokeResponseOutput) ToPrivateLinkServiceConnectionStateInvokeResponseOutput() PrivateLinkServiceConnectionStateInvokeResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateInvokeResponseOutput) ToPrivateLinkServiceConnectionStateInvokeResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateInvokeResponseOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateInvokeResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateInvokeResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateResponseInput is an input type that accepts PrivateLinkServiceConnectionStateResponseArgs and PrivateLinkServiceConnectionStateResponseOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateResponseInput` via:
//
//          PrivateLinkServiceConnectionStateResponseArgs{...}
type PrivateLinkServiceConnectionStateResponseInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput
	ToPrivateLinkServiceConnectionStateResponseOutputWithContext(context.Context) PrivateLinkServiceConnectionStateResponseOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return i.ToPrivateLinkServiceConnectionStateResponseOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateResponseOutput)
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return i.ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateResponseOutput).ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStateResponsePtrInput is an input type that accepts PrivateLinkServiceConnectionStateResponseArgs, PrivateLinkServiceConnectionStateResponsePtr and PrivateLinkServiceConnectionStateResponsePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateResponsePtrInput` via:
//
//          PrivateLinkServiceConnectionStateResponseArgs{...}
//
//  or:
//
//          nil
type PrivateLinkServiceConnectionStateResponsePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput
	ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput
}

type privateLinkServiceConnectionStateResponsePtrType PrivateLinkServiceConnectionStateResponseArgs

func PrivateLinkServiceConnectionStateResponsePtr(v *PrivateLinkServiceConnectionStateResponseArgs) PrivateLinkServiceConnectionStateResponsePtrInput {
	return (*privateLinkServiceConnectionStateResponsePtrType)(v)
}

func (*privateLinkServiceConnectionStateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStateResponsePtrType) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return i.ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStateResponsePtrType) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *PrivateLinkServiceConnectionStateResponse {
		return &v
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Elem() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) PrivateLinkServiceConnectionStateResponse {
		return *v
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type RCranPackage struct {
	// The package name.
	Name *string `pulumi:"name"`
	// The repository name.
	Repository *string `pulumi:"repository"`
}

// RCranPackageInput is an input type that accepts RCranPackageArgs and RCranPackageOutput values.
// You can construct a concrete instance of `RCranPackageInput` via:
//
//          RCranPackageArgs{...}
type RCranPackageInput interface {
	pulumi.Input

	ToRCranPackageOutput() RCranPackageOutput
	ToRCranPackageOutputWithContext(context.Context) RCranPackageOutput
}

type RCranPackageArgs struct {
	// The package name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The repository name.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
}

func (RCranPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RCranPackage)(nil)).Elem()
}

func (i RCranPackageArgs) ToRCranPackageOutput() RCranPackageOutput {
	return i.ToRCranPackageOutputWithContext(context.Background())
}

func (i RCranPackageArgs) ToRCranPackageOutputWithContext(ctx context.Context) RCranPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RCranPackageOutput)
}

// RCranPackageArrayInput is an input type that accepts RCranPackageArray and RCranPackageArrayOutput values.
// You can construct a concrete instance of `RCranPackageArrayInput` via:
//
//          RCranPackageArray{ RCranPackageArgs{...} }
type RCranPackageArrayInput interface {
	pulumi.Input

	ToRCranPackageArrayOutput() RCranPackageArrayOutput
	ToRCranPackageArrayOutputWithContext(context.Context) RCranPackageArrayOutput
}

type RCranPackageArray []RCranPackageInput

func (RCranPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RCranPackage)(nil)).Elem()
}

func (i RCranPackageArray) ToRCranPackageArrayOutput() RCranPackageArrayOutput {
	return i.ToRCranPackageArrayOutputWithContext(context.Background())
}

func (i RCranPackageArray) ToRCranPackageArrayOutputWithContext(ctx context.Context) RCranPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RCranPackageArrayOutput)
}

type RCranPackageOutput struct{ *pulumi.OutputState }

func (RCranPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RCranPackage)(nil)).Elem()
}

func (o RCranPackageOutput) ToRCranPackageOutput() RCranPackageOutput {
	return o
}

func (o RCranPackageOutput) ToRCranPackageOutputWithContext(ctx context.Context) RCranPackageOutput {
	return o
}

// The package name.
func (o RCranPackageOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RCranPackage) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The repository name.
func (o RCranPackageOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RCranPackage) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

type RCranPackageArrayOutput struct{ *pulumi.OutputState }

func (RCranPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RCranPackage)(nil)).Elem()
}

func (o RCranPackageArrayOutput) ToRCranPackageArrayOutput() RCranPackageArrayOutput {
	return o
}

func (o RCranPackageArrayOutput) ToRCranPackageArrayOutputWithContext(ctx context.Context) RCranPackageArrayOutput {
	return o
}

func (o RCranPackageArrayOutput) Index(i pulumi.IntInput) RCranPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RCranPackage {
		return vs[0].([]RCranPackage)[vs[1].(int)]
	}).(RCranPackageOutput)
}

type RCranPackageInvokeResponse struct {
	// The package name.
	Name *string `pulumi:"name"`
	// The repository name.
	Repository *string `pulumi:"repository"`
}

// RCranPackageInvokeResponseInput is an input type that accepts RCranPackageInvokeResponseArgs and RCranPackageInvokeResponseOutput values.
// You can construct a concrete instance of `RCranPackageInvokeResponseInput` via:
//
//          RCranPackageInvokeResponseArgs{...}
type RCranPackageInvokeResponseInput interface {
	pulumi.Input

	ToRCranPackageInvokeResponseOutput() RCranPackageInvokeResponseOutput
	ToRCranPackageInvokeResponseOutputWithContext(context.Context) RCranPackageInvokeResponseOutput
}

type RCranPackageInvokeResponseArgs struct {
	// The package name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The repository name.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
}

func (RCranPackageInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RCranPackageInvokeResponse)(nil)).Elem()
}

func (i RCranPackageInvokeResponseArgs) ToRCranPackageInvokeResponseOutput() RCranPackageInvokeResponseOutput {
	return i.ToRCranPackageInvokeResponseOutputWithContext(context.Background())
}

func (i RCranPackageInvokeResponseArgs) ToRCranPackageInvokeResponseOutputWithContext(ctx context.Context) RCranPackageInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RCranPackageInvokeResponseOutput)
}

// RCranPackageInvokeResponseArrayInput is an input type that accepts RCranPackageInvokeResponseArray and RCranPackageInvokeResponseArrayOutput values.
// You can construct a concrete instance of `RCranPackageInvokeResponseArrayInput` via:
//
//          RCranPackageInvokeResponseArray{ RCranPackageInvokeResponseArgs{...} }
type RCranPackageInvokeResponseArrayInput interface {
	pulumi.Input

	ToRCranPackageInvokeResponseArrayOutput() RCranPackageInvokeResponseArrayOutput
	ToRCranPackageInvokeResponseArrayOutputWithContext(context.Context) RCranPackageInvokeResponseArrayOutput
}

type RCranPackageInvokeResponseArray []RCranPackageInvokeResponseInput

func (RCranPackageInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RCranPackageInvokeResponse)(nil)).Elem()
}

func (i RCranPackageInvokeResponseArray) ToRCranPackageInvokeResponseArrayOutput() RCranPackageInvokeResponseArrayOutput {
	return i.ToRCranPackageInvokeResponseArrayOutputWithContext(context.Background())
}

func (i RCranPackageInvokeResponseArray) ToRCranPackageInvokeResponseArrayOutputWithContext(ctx context.Context) RCranPackageInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RCranPackageInvokeResponseArrayOutput)
}

type RCranPackageInvokeResponseOutput struct{ *pulumi.OutputState }

func (RCranPackageInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RCranPackageInvokeResponse)(nil)).Elem()
}

func (o RCranPackageInvokeResponseOutput) ToRCranPackageInvokeResponseOutput() RCranPackageInvokeResponseOutput {
	return o
}

func (o RCranPackageInvokeResponseOutput) ToRCranPackageInvokeResponseOutputWithContext(ctx context.Context) RCranPackageInvokeResponseOutput {
	return o
}

// The package name.
func (o RCranPackageInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RCranPackageInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The repository name.
func (o RCranPackageInvokeResponseOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RCranPackageInvokeResponse) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

type RCranPackageInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (RCranPackageInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RCranPackageInvokeResponse)(nil)).Elem()
}

func (o RCranPackageInvokeResponseArrayOutput) ToRCranPackageInvokeResponseArrayOutput() RCranPackageInvokeResponseArrayOutput {
	return o
}

func (o RCranPackageInvokeResponseArrayOutput) ToRCranPackageInvokeResponseArrayOutputWithContext(ctx context.Context) RCranPackageInvokeResponseArrayOutput {
	return o
}

func (o RCranPackageInvokeResponseArrayOutput) Index(i pulumi.IntInput) RCranPackageInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RCranPackageInvokeResponse {
		return vs[0].([]RCranPackageInvokeResponse)[vs[1].(int)]
	}).(RCranPackageInvokeResponseOutput)
}

type RCranPackageResponse struct {
	// The package name.
	Name *string `pulumi:"name"`
	// The repository name.
	Repository *string `pulumi:"repository"`
}

// RCranPackageResponseInput is an input type that accepts RCranPackageResponseArgs and RCranPackageResponseOutput values.
// You can construct a concrete instance of `RCranPackageResponseInput` via:
//
//          RCranPackageResponseArgs{...}
type RCranPackageResponseInput interface {
	pulumi.Input

	ToRCranPackageResponseOutput() RCranPackageResponseOutput
	ToRCranPackageResponseOutputWithContext(context.Context) RCranPackageResponseOutput
}

type RCranPackageResponseArgs struct {
	// The package name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The repository name.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
}

func (RCranPackageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RCranPackageResponse)(nil)).Elem()
}

func (i RCranPackageResponseArgs) ToRCranPackageResponseOutput() RCranPackageResponseOutput {
	return i.ToRCranPackageResponseOutputWithContext(context.Background())
}

func (i RCranPackageResponseArgs) ToRCranPackageResponseOutputWithContext(ctx context.Context) RCranPackageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RCranPackageResponseOutput)
}

// RCranPackageResponseArrayInput is an input type that accepts RCranPackageResponseArray and RCranPackageResponseArrayOutput values.
// You can construct a concrete instance of `RCranPackageResponseArrayInput` via:
//
//          RCranPackageResponseArray{ RCranPackageResponseArgs{...} }
type RCranPackageResponseArrayInput interface {
	pulumi.Input

	ToRCranPackageResponseArrayOutput() RCranPackageResponseArrayOutput
	ToRCranPackageResponseArrayOutputWithContext(context.Context) RCranPackageResponseArrayOutput
}

type RCranPackageResponseArray []RCranPackageResponseInput

func (RCranPackageResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RCranPackageResponse)(nil)).Elem()
}

func (i RCranPackageResponseArray) ToRCranPackageResponseArrayOutput() RCranPackageResponseArrayOutput {
	return i.ToRCranPackageResponseArrayOutputWithContext(context.Background())
}

func (i RCranPackageResponseArray) ToRCranPackageResponseArrayOutputWithContext(ctx context.Context) RCranPackageResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RCranPackageResponseArrayOutput)
}

type RCranPackageResponseOutput struct{ *pulumi.OutputState }

func (RCranPackageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RCranPackageResponse)(nil)).Elem()
}

func (o RCranPackageResponseOutput) ToRCranPackageResponseOutput() RCranPackageResponseOutput {
	return o
}

func (o RCranPackageResponseOutput) ToRCranPackageResponseOutputWithContext(ctx context.Context) RCranPackageResponseOutput {
	return o
}

// The package name.
func (o RCranPackageResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RCranPackageResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The repository name.
func (o RCranPackageResponseOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RCranPackageResponse) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

type RCranPackageResponseArrayOutput struct{ *pulumi.OutputState }

func (RCranPackageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RCranPackageResponse)(nil)).Elem()
}

func (o RCranPackageResponseArrayOutput) ToRCranPackageResponseArrayOutput() RCranPackageResponseArrayOutput {
	return o
}

func (o RCranPackageResponseArrayOutput) ToRCranPackageResponseArrayOutputWithContext(ctx context.Context) RCranPackageResponseArrayOutput {
	return o
}

func (o RCranPackageResponseArrayOutput) Index(i pulumi.IntInput) RCranPackageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RCranPackageResponse {
		return vs[0].([]RCranPackageResponse)[vs[1].(int)]
	}).(RCranPackageResponseOutput)
}

type RGitHubPackage struct {
	// Personal access token to install from a private repo
	AuthToken *string `pulumi:"authToken"`
	// Repository address in the format username/repo[/subdir][@ref|#pull].
	Repository *string `pulumi:"repository"`
}

// RGitHubPackageInput is an input type that accepts RGitHubPackageArgs and RGitHubPackageOutput values.
// You can construct a concrete instance of `RGitHubPackageInput` via:
//
//          RGitHubPackageArgs{...}
type RGitHubPackageInput interface {
	pulumi.Input

	ToRGitHubPackageOutput() RGitHubPackageOutput
	ToRGitHubPackageOutputWithContext(context.Context) RGitHubPackageOutput
}

type RGitHubPackageArgs struct {
	// Personal access token to install from a private repo
	AuthToken pulumi.StringPtrInput `pulumi:"authToken"`
	// Repository address in the format username/repo[/subdir][@ref|#pull].
	Repository pulumi.StringPtrInput `pulumi:"repository"`
}

func (RGitHubPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RGitHubPackage)(nil)).Elem()
}

func (i RGitHubPackageArgs) ToRGitHubPackageOutput() RGitHubPackageOutput {
	return i.ToRGitHubPackageOutputWithContext(context.Background())
}

func (i RGitHubPackageArgs) ToRGitHubPackageOutputWithContext(ctx context.Context) RGitHubPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RGitHubPackageOutput)
}

// RGitHubPackageArrayInput is an input type that accepts RGitHubPackageArray and RGitHubPackageArrayOutput values.
// You can construct a concrete instance of `RGitHubPackageArrayInput` via:
//
//          RGitHubPackageArray{ RGitHubPackageArgs{...} }
type RGitHubPackageArrayInput interface {
	pulumi.Input

	ToRGitHubPackageArrayOutput() RGitHubPackageArrayOutput
	ToRGitHubPackageArrayOutputWithContext(context.Context) RGitHubPackageArrayOutput
}

type RGitHubPackageArray []RGitHubPackageInput

func (RGitHubPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RGitHubPackage)(nil)).Elem()
}

func (i RGitHubPackageArray) ToRGitHubPackageArrayOutput() RGitHubPackageArrayOutput {
	return i.ToRGitHubPackageArrayOutputWithContext(context.Background())
}

func (i RGitHubPackageArray) ToRGitHubPackageArrayOutputWithContext(ctx context.Context) RGitHubPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RGitHubPackageArrayOutput)
}

type RGitHubPackageOutput struct{ *pulumi.OutputState }

func (RGitHubPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RGitHubPackage)(nil)).Elem()
}

func (o RGitHubPackageOutput) ToRGitHubPackageOutput() RGitHubPackageOutput {
	return o
}

func (o RGitHubPackageOutput) ToRGitHubPackageOutputWithContext(ctx context.Context) RGitHubPackageOutput {
	return o
}

// Personal access token to install from a private repo
func (o RGitHubPackageOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RGitHubPackage) *string { return v.AuthToken }).(pulumi.StringPtrOutput)
}

// Repository address in the format username/repo[/subdir][@ref|#pull].
func (o RGitHubPackageOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RGitHubPackage) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

type RGitHubPackageArrayOutput struct{ *pulumi.OutputState }

func (RGitHubPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RGitHubPackage)(nil)).Elem()
}

func (o RGitHubPackageArrayOutput) ToRGitHubPackageArrayOutput() RGitHubPackageArrayOutput {
	return o
}

func (o RGitHubPackageArrayOutput) ToRGitHubPackageArrayOutputWithContext(ctx context.Context) RGitHubPackageArrayOutput {
	return o
}

func (o RGitHubPackageArrayOutput) Index(i pulumi.IntInput) RGitHubPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RGitHubPackage {
		return vs[0].([]RGitHubPackage)[vs[1].(int)]
	}).(RGitHubPackageOutput)
}

type RGitHubPackageResponseInvokeResponse struct {
	// Repository address in the format username/repo[/subdir][@ref|#pull].
	Repository *string `pulumi:"repository"`
}

// RGitHubPackageResponseInvokeResponseInput is an input type that accepts RGitHubPackageResponseInvokeResponseArgs and RGitHubPackageResponseInvokeResponseOutput values.
// You can construct a concrete instance of `RGitHubPackageResponseInvokeResponseInput` via:
//
//          RGitHubPackageResponseInvokeResponseArgs{...}
type RGitHubPackageResponseInvokeResponseInput interface {
	pulumi.Input

	ToRGitHubPackageResponseInvokeResponseOutput() RGitHubPackageResponseInvokeResponseOutput
	ToRGitHubPackageResponseInvokeResponseOutputWithContext(context.Context) RGitHubPackageResponseInvokeResponseOutput
}

type RGitHubPackageResponseInvokeResponseArgs struct {
	// Repository address in the format username/repo[/subdir][@ref|#pull].
	Repository pulumi.StringPtrInput `pulumi:"repository"`
}

func (RGitHubPackageResponseInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RGitHubPackageResponseInvokeResponse)(nil)).Elem()
}

func (i RGitHubPackageResponseInvokeResponseArgs) ToRGitHubPackageResponseInvokeResponseOutput() RGitHubPackageResponseInvokeResponseOutput {
	return i.ToRGitHubPackageResponseInvokeResponseOutputWithContext(context.Background())
}

func (i RGitHubPackageResponseInvokeResponseArgs) ToRGitHubPackageResponseInvokeResponseOutputWithContext(ctx context.Context) RGitHubPackageResponseInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RGitHubPackageResponseInvokeResponseOutput)
}

// RGitHubPackageResponseInvokeResponseArrayInput is an input type that accepts RGitHubPackageResponseInvokeResponseArray and RGitHubPackageResponseInvokeResponseArrayOutput values.
// You can construct a concrete instance of `RGitHubPackageResponseInvokeResponseArrayInput` via:
//
//          RGitHubPackageResponseInvokeResponseArray{ RGitHubPackageResponseInvokeResponseArgs{...} }
type RGitHubPackageResponseInvokeResponseArrayInput interface {
	pulumi.Input

	ToRGitHubPackageResponseInvokeResponseArrayOutput() RGitHubPackageResponseInvokeResponseArrayOutput
	ToRGitHubPackageResponseInvokeResponseArrayOutputWithContext(context.Context) RGitHubPackageResponseInvokeResponseArrayOutput
}

type RGitHubPackageResponseInvokeResponseArray []RGitHubPackageResponseInvokeResponseInput

func (RGitHubPackageResponseInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RGitHubPackageResponseInvokeResponse)(nil)).Elem()
}

func (i RGitHubPackageResponseInvokeResponseArray) ToRGitHubPackageResponseInvokeResponseArrayOutput() RGitHubPackageResponseInvokeResponseArrayOutput {
	return i.ToRGitHubPackageResponseInvokeResponseArrayOutputWithContext(context.Background())
}

func (i RGitHubPackageResponseInvokeResponseArray) ToRGitHubPackageResponseInvokeResponseArrayOutputWithContext(ctx context.Context) RGitHubPackageResponseInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RGitHubPackageResponseInvokeResponseArrayOutput)
}

type RGitHubPackageResponseInvokeResponseOutput struct{ *pulumi.OutputState }

func (RGitHubPackageResponseInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RGitHubPackageResponseInvokeResponse)(nil)).Elem()
}

func (o RGitHubPackageResponseInvokeResponseOutput) ToRGitHubPackageResponseInvokeResponseOutput() RGitHubPackageResponseInvokeResponseOutput {
	return o
}

func (o RGitHubPackageResponseInvokeResponseOutput) ToRGitHubPackageResponseInvokeResponseOutputWithContext(ctx context.Context) RGitHubPackageResponseInvokeResponseOutput {
	return o
}

// Repository address in the format username/repo[/subdir][@ref|#pull].
func (o RGitHubPackageResponseInvokeResponseOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RGitHubPackageResponseInvokeResponse) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

type RGitHubPackageResponseInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (RGitHubPackageResponseInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RGitHubPackageResponseInvokeResponse)(nil)).Elem()
}

func (o RGitHubPackageResponseInvokeResponseArrayOutput) ToRGitHubPackageResponseInvokeResponseArrayOutput() RGitHubPackageResponseInvokeResponseArrayOutput {
	return o
}

func (o RGitHubPackageResponseInvokeResponseArrayOutput) ToRGitHubPackageResponseInvokeResponseArrayOutputWithContext(ctx context.Context) RGitHubPackageResponseInvokeResponseArrayOutput {
	return o
}

func (o RGitHubPackageResponseInvokeResponseArrayOutput) Index(i pulumi.IntInput) RGitHubPackageResponseInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RGitHubPackageResponseInvokeResponse {
		return vs[0].([]RGitHubPackageResponseInvokeResponse)[vs[1].(int)]
	}).(RGitHubPackageResponseInvokeResponseOutput)
}

type RGitHubPackageResponseResponse struct {
	// Repository address in the format username/repo[/subdir][@ref|#pull].
	Repository *string `pulumi:"repository"`
}

// RGitHubPackageResponseResponseInput is an input type that accepts RGitHubPackageResponseResponseArgs and RGitHubPackageResponseResponseOutput values.
// You can construct a concrete instance of `RGitHubPackageResponseResponseInput` via:
//
//          RGitHubPackageResponseResponseArgs{...}
type RGitHubPackageResponseResponseInput interface {
	pulumi.Input

	ToRGitHubPackageResponseResponseOutput() RGitHubPackageResponseResponseOutput
	ToRGitHubPackageResponseResponseOutputWithContext(context.Context) RGitHubPackageResponseResponseOutput
}

type RGitHubPackageResponseResponseArgs struct {
	// Repository address in the format username/repo[/subdir][@ref|#pull].
	Repository pulumi.StringPtrInput `pulumi:"repository"`
}

func (RGitHubPackageResponseResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RGitHubPackageResponseResponse)(nil)).Elem()
}

func (i RGitHubPackageResponseResponseArgs) ToRGitHubPackageResponseResponseOutput() RGitHubPackageResponseResponseOutput {
	return i.ToRGitHubPackageResponseResponseOutputWithContext(context.Background())
}

func (i RGitHubPackageResponseResponseArgs) ToRGitHubPackageResponseResponseOutputWithContext(ctx context.Context) RGitHubPackageResponseResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RGitHubPackageResponseResponseOutput)
}

// RGitHubPackageResponseResponseArrayInput is an input type that accepts RGitHubPackageResponseResponseArray and RGitHubPackageResponseResponseArrayOutput values.
// You can construct a concrete instance of `RGitHubPackageResponseResponseArrayInput` via:
//
//          RGitHubPackageResponseResponseArray{ RGitHubPackageResponseResponseArgs{...} }
type RGitHubPackageResponseResponseArrayInput interface {
	pulumi.Input

	ToRGitHubPackageResponseResponseArrayOutput() RGitHubPackageResponseResponseArrayOutput
	ToRGitHubPackageResponseResponseArrayOutputWithContext(context.Context) RGitHubPackageResponseResponseArrayOutput
}

type RGitHubPackageResponseResponseArray []RGitHubPackageResponseResponseInput

func (RGitHubPackageResponseResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RGitHubPackageResponseResponse)(nil)).Elem()
}

func (i RGitHubPackageResponseResponseArray) ToRGitHubPackageResponseResponseArrayOutput() RGitHubPackageResponseResponseArrayOutput {
	return i.ToRGitHubPackageResponseResponseArrayOutputWithContext(context.Background())
}

func (i RGitHubPackageResponseResponseArray) ToRGitHubPackageResponseResponseArrayOutputWithContext(ctx context.Context) RGitHubPackageResponseResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RGitHubPackageResponseResponseArrayOutput)
}

type RGitHubPackageResponseResponseOutput struct{ *pulumi.OutputState }

func (RGitHubPackageResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RGitHubPackageResponseResponse)(nil)).Elem()
}

func (o RGitHubPackageResponseResponseOutput) ToRGitHubPackageResponseResponseOutput() RGitHubPackageResponseResponseOutput {
	return o
}

func (o RGitHubPackageResponseResponseOutput) ToRGitHubPackageResponseResponseOutputWithContext(ctx context.Context) RGitHubPackageResponseResponseOutput {
	return o
}

// Repository address in the format username/repo[/subdir][@ref|#pull].
func (o RGitHubPackageResponseResponseOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RGitHubPackageResponseResponse) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

type RGitHubPackageResponseResponseArrayOutput struct{ *pulumi.OutputState }

func (RGitHubPackageResponseResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RGitHubPackageResponseResponse)(nil)).Elem()
}

func (o RGitHubPackageResponseResponseArrayOutput) ToRGitHubPackageResponseResponseArrayOutput() RGitHubPackageResponseResponseArrayOutput {
	return o
}

func (o RGitHubPackageResponseResponseArrayOutput) ToRGitHubPackageResponseResponseArrayOutputWithContext(ctx context.Context) RGitHubPackageResponseResponseArrayOutput {
	return o
}

func (o RGitHubPackageResponseResponseArrayOutput) Index(i pulumi.IntInput) RGitHubPackageResponseResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RGitHubPackageResponseResponse {
		return vs[0].([]RGitHubPackageResponseResponse)[vs[1].(int)]
	}).(RGitHubPackageResponseResponseOutput)
}

type RegistryListCredentialsResultInvokeResponse struct {
	Location  string                   `pulumi:"location"`
	Passwords []PasswordInvokeResponse `pulumi:"passwords"`
	Username  string                   `pulumi:"username"`
}

// RegistryListCredentialsResultInvokeResponseInput is an input type that accepts RegistryListCredentialsResultInvokeResponseArgs and RegistryListCredentialsResultInvokeResponseOutput values.
// You can construct a concrete instance of `RegistryListCredentialsResultInvokeResponseInput` via:
//
//          RegistryListCredentialsResultInvokeResponseArgs{...}
type RegistryListCredentialsResultInvokeResponseInput interface {
	pulumi.Input

	ToRegistryListCredentialsResultInvokeResponseOutput() RegistryListCredentialsResultInvokeResponseOutput
	ToRegistryListCredentialsResultInvokeResponseOutputWithContext(context.Context) RegistryListCredentialsResultInvokeResponseOutput
}

type RegistryListCredentialsResultInvokeResponseArgs struct {
	Location  pulumi.StringInput               `pulumi:"location"`
	Passwords PasswordInvokeResponseArrayInput `pulumi:"passwords"`
	Username  pulumi.StringInput               `pulumi:"username"`
}

func (RegistryListCredentialsResultInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryListCredentialsResultInvokeResponse)(nil)).Elem()
}

func (i RegistryListCredentialsResultInvokeResponseArgs) ToRegistryListCredentialsResultInvokeResponseOutput() RegistryListCredentialsResultInvokeResponseOutput {
	return i.ToRegistryListCredentialsResultInvokeResponseOutputWithContext(context.Background())
}

func (i RegistryListCredentialsResultInvokeResponseArgs) ToRegistryListCredentialsResultInvokeResponseOutputWithContext(ctx context.Context) RegistryListCredentialsResultInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryListCredentialsResultInvokeResponseOutput)
}

type RegistryListCredentialsResultInvokeResponseOutput struct{ *pulumi.OutputState }

func (RegistryListCredentialsResultInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryListCredentialsResultInvokeResponse)(nil)).Elem()
}

func (o RegistryListCredentialsResultInvokeResponseOutput) ToRegistryListCredentialsResultInvokeResponseOutput() RegistryListCredentialsResultInvokeResponseOutput {
	return o
}

func (o RegistryListCredentialsResultInvokeResponseOutput) ToRegistryListCredentialsResultInvokeResponseOutputWithContext(ctx context.Context) RegistryListCredentialsResultInvokeResponseOutput {
	return o
}

func (o RegistryListCredentialsResultInvokeResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryListCredentialsResultInvokeResponse) string { return v.Location }).(pulumi.StringOutput)
}

func (o RegistryListCredentialsResultInvokeResponseOutput) Passwords() PasswordInvokeResponseArrayOutput {
	return o.ApplyT(func(v RegistryListCredentialsResultInvokeResponse) []PasswordInvokeResponse { return v.Passwords }).(PasswordInvokeResponseArrayOutput)
}

func (o RegistryListCredentialsResultInvokeResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryListCredentialsResultInvokeResponse) string { return v.Username }).(pulumi.StringOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceId struct {
	// The ID of the resource
	Id string `pulumi:"id"`
}

// ResourceIdInput is an input type that accepts ResourceIdArgs and ResourceIdOutput values.
// You can construct a concrete instance of `ResourceIdInput` via:
//
//          ResourceIdArgs{...}
type ResourceIdInput interface {
	pulumi.Input

	ToResourceIdOutput() ResourceIdOutput
	ToResourceIdOutputWithContext(context.Context) ResourceIdOutput
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdArgs struct {
	// The ID of the resource
	Id pulumi.StringInput `pulumi:"id"`
}

func (ResourceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceId)(nil)).Elem()
}

func (i ResourceIdArgs) ToResourceIdOutput() ResourceIdOutput {
	return i.ToResourceIdOutputWithContext(context.Background())
}

func (i ResourceIdArgs) ToResourceIdOutputWithContext(ctx context.Context) ResourceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdOutput)
}

func (i ResourceIdArgs) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return i.ToResourceIdPtrOutputWithContext(context.Background())
}

func (i ResourceIdArgs) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdOutput).ToResourceIdPtrOutputWithContext(ctx)
}

// ResourceIdPtrInput is an input type that accepts ResourceIdArgs, ResourceIdPtr and ResourceIdPtrOutput values.
// You can construct a concrete instance of `ResourceIdPtrInput` via:
//
//          ResourceIdArgs{...}
//
//  or:
//
//          nil
type ResourceIdPtrInput interface {
	pulumi.Input

	ToResourceIdPtrOutput() ResourceIdPtrOutput
	ToResourceIdPtrOutputWithContext(context.Context) ResourceIdPtrOutput
}

type resourceIdPtrType ResourceIdArgs

func ResourceIdPtr(v *ResourceIdArgs) ResourceIdPtrInput {
	return (*resourceIdPtrType)(v)
}

func (*resourceIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceId)(nil)).Elem()
}

func (i *resourceIdPtrType) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return i.ToResourceIdPtrOutputWithContext(context.Background())
}

func (i *resourceIdPtrType) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdPtrOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdOutput struct{ *pulumi.OutputState }

func (ResourceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceId)(nil)).Elem()
}

func (o ResourceIdOutput) ToResourceIdOutput() ResourceIdOutput {
	return o
}

func (o ResourceIdOutput) ToResourceIdOutputWithContext(ctx context.Context) ResourceIdOutput {
	return o
}

func (o ResourceIdOutput) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return o.ToResourceIdPtrOutputWithContext(context.Background())
}

func (o ResourceIdOutput) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return o.ApplyT(func(v ResourceId) *ResourceId {
		return &v
	}).(ResourceIdPtrOutput)
}

// The ID of the resource
func (o ResourceIdOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceId) string { return v.Id }).(pulumi.StringOutput)
}

type ResourceIdPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceId)(nil)).Elem()
}

func (o ResourceIdPtrOutput) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return o
}

func (o ResourceIdPtrOutput) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return o
}

func (o ResourceIdPtrOutput) Elem() ResourceIdOutput {
	return o.ApplyT(func(v *ResourceId) ResourceId { return *v }).(ResourceIdOutput)
}

// The ID of the resource
func (o ResourceIdPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceId) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdInvokeResponse struct {
	// The ID of the resource
	Id string `pulumi:"id"`
}

// ResourceIdInvokeResponseInput is an input type that accepts ResourceIdInvokeResponseArgs and ResourceIdInvokeResponseOutput values.
// You can construct a concrete instance of `ResourceIdInvokeResponseInput` via:
//
//          ResourceIdInvokeResponseArgs{...}
type ResourceIdInvokeResponseInput interface {
	pulumi.Input

	ToResourceIdInvokeResponseOutput() ResourceIdInvokeResponseOutput
	ToResourceIdInvokeResponseOutputWithContext(context.Context) ResourceIdInvokeResponseOutput
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdInvokeResponseArgs struct {
	// The ID of the resource
	Id pulumi.StringInput `pulumi:"id"`
}

func (ResourceIdInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdInvokeResponse)(nil)).Elem()
}

func (i ResourceIdInvokeResponseArgs) ToResourceIdInvokeResponseOutput() ResourceIdInvokeResponseOutput {
	return i.ToResourceIdInvokeResponseOutputWithContext(context.Background())
}

func (i ResourceIdInvokeResponseArgs) ToResourceIdInvokeResponseOutputWithContext(ctx context.Context) ResourceIdInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdInvokeResponseOutput)
}

func (i ResourceIdInvokeResponseArgs) ToResourceIdInvokeResponsePtrOutput() ResourceIdInvokeResponsePtrOutput {
	return i.ToResourceIdInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ResourceIdInvokeResponseArgs) ToResourceIdInvokeResponsePtrOutputWithContext(ctx context.Context) ResourceIdInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdInvokeResponseOutput).ToResourceIdInvokeResponsePtrOutputWithContext(ctx)
}

// ResourceIdInvokeResponsePtrInput is an input type that accepts ResourceIdInvokeResponseArgs, ResourceIdInvokeResponsePtr and ResourceIdInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ResourceIdInvokeResponsePtrInput` via:
//
//          ResourceIdInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ResourceIdInvokeResponsePtrInput interface {
	pulumi.Input

	ToResourceIdInvokeResponsePtrOutput() ResourceIdInvokeResponsePtrOutput
	ToResourceIdInvokeResponsePtrOutputWithContext(context.Context) ResourceIdInvokeResponsePtrOutput
}

type resourceIdInvokeResponsePtrType ResourceIdInvokeResponseArgs

func ResourceIdInvokeResponsePtr(v *ResourceIdInvokeResponseArgs) ResourceIdInvokeResponsePtrInput {
	return (*resourceIdInvokeResponsePtrType)(v)
}

func (*resourceIdInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdInvokeResponse)(nil)).Elem()
}

func (i *resourceIdInvokeResponsePtrType) ToResourceIdInvokeResponsePtrOutput() ResourceIdInvokeResponsePtrOutput {
	return i.ToResourceIdInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *resourceIdInvokeResponsePtrType) ToResourceIdInvokeResponsePtrOutputWithContext(ctx context.Context) ResourceIdInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdInvokeResponsePtrOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdInvokeResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdInvokeResponse)(nil)).Elem()
}

func (o ResourceIdInvokeResponseOutput) ToResourceIdInvokeResponseOutput() ResourceIdInvokeResponseOutput {
	return o
}

func (o ResourceIdInvokeResponseOutput) ToResourceIdInvokeResponseOutputWithContext(ctx context.Context) ResourceIdInvokeResponseOutput {
	return o
}

func (o ResourceIdInvokeResponseOutput) ToResourceIdInvokeResponsePtrOutput() ResourceIdInvokeResponsePtrOutput {
	return o.ToResourceIdInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ResourceIdInvokeResponseOutput) ToResourceIdInvokeResponsePtrOutputWithContext(ctx context.Context) ResourceIdInvokeResponsePtrOutput {
	return o.ApplyT(func(v ResourceIdInvokeResponse) *ResourceIdInvokeResponse {
		return &v
	}).(ResourceIdInvokeResponsePtrOutput)
}

// The ID of the resource
func (o ResourceIdInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

type ResourceIdInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdInvokeResponse)(nil)).Elem()
}

func (o ResourceIdInvokeResponsePtrOutput) ToResourceIdInvokeResponsePtrOutput() ResourceIdInvokeResponsePtrOutput {
	return o
}

func (o ResourceIdInvokeResponsePtrOutput) ToResourceIdInvokeResponsePtrOutputWithContext(ctx context.Context) ResourceIdInvokeResponsePtrOutput {
	return o
}

func (o ResourceIdInvokeResponsePtrOutput) Elem() ResourceIdInvokeResponseOutput {
	return o.ApplyT(func(v *ResourceIdInvokeResponse) ResourceIdInvokeResponse { return *v }).(ResourceIdInvokeResponseOutput)
}

// The ID of the resource
func (o ResourceIdInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdResponse struct {
	// The ID of the resource
	Id string `pulumi:"id"`
}

// ResourceIdResponseInput is an input type that accepts ResourceIdResponseArgs and ResourceIdResponseOutput values.
// You can construct a concrete instance of `ResourceIdResponseInput` via:
//
//          ResourceIdResponseArgs{...}
type ResourceIdResponseInput interface {
	pulumi.Input

	ToResourceIdResponseOutput() ResourceIdResponseOutput
	ToResourceIdResponseOutputWithContext(context.Context) ResourceIdResponseOutput
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdResponseArgs struct {
	// The ID of the resource
	Id pulumi.StringInput `pulumi:"id"`
}

func (ResourceIdResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdResponse)(nil)).Elem()
}

func (i ResourceIdResponseArgs) ToResourceIdResponseOutput() ResourceIdResponseOutput {
	return i.ToResourceIdResponseOutputWithContext(context.Background())
}

func (i ResourceIdResponseArgs) ToResourceIdResponseOutputWithContext(ctx context.Context) ResourceIdResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdResponseOutput)
}

func (i ResourceIdResponseArgs) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return i.ToResourceIdResponsePtrOutputWithContext(context.Background())
}

func (i ResourceIdResponseArgs) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdResponseOutput).ToResourceIdResponsePtrOutputWithContext(ctx)
}

// ResourceIdResponsePtrInput is an input type that accepts ResourceIdResponseArgs, ResourceIdResponsePtr and ResourceIdResponsePtrOutput values.
// You can construct a concrete instance of `ResourceIdResponsePtrInput` via:
//
//          ResourceIdResponseArgs{...}
//
//  or:
//
//          nil
type ResourceIdResponsePtrInput interface {
	pulumi.Input

	ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput
	ToResourceIdResponsePtrOutputWithContext(context.Context) ResourceIdResponsePtrOutput
}

type resourceIdResponsePtrType ResourceIdResponseArgs

func ResourceIdResponsePtr(v *ResourceIdResponseArgs) ResourceIdResponsePtrInput {
	return (*resourceIdResponsePtrType)(v)
}

func (*resourceIdResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdResponse)(nil)).Elem()
}

func (i *resourceIdResponsePtrType) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return i.ToResourceIdResponsePtrOutputWithContext(context.Background())
}

func (i *resourceIdResponsePtrType) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdResponsePtrOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdResponse)(nil)).Elem()
}

func (o ResourceIdResponseOutput) ToResourceIdResponseOutput() ResourceIdResponseOutput {
	return o
}

func (o ResourceIdResponseOutput) ToResourceIdResponseOutputWithContext(ctx context.Context) ResourceIdResponseOutput {
	return o
}

func (o ResourceIdResponseOutput) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return o.ToResourceIdResponsePtrOutputWithContext(context.Background())
}

func (o ResourceIdResponseOutput) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return o.ApplyT(func(v ResourceIdResponse) *ResourceIdResponse {
		return &v
	}).(ResourceIdResponsePtrOutput)
}

// The ID of the resource
func (o ResourceIdResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdResponse) string { return v.Id }).(pulumi.StringOutput)
}

type ResourceIdResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdResponse)(nil)).Elem()
}

func (o ResourceIdResponsePtrOutput) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return o
}

func (o ResourceIdResponsePtrOutput) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return o
}

func (o ResourceIdResponsePtrOutput) Elem() ResourceIdResponseOutput {
	return o.ApplyT(func(v *ResourceIdResponse) ResourceIdResponse { return *v }).(ResourceIdResponseOutput)
}

// The ID of the resource
func (o ResourceIdResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// scale settings for AML Compute
type ScaleSettings struct {
	// Max number of nodes to use
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Min number of nodes to use
	MinNodeCount *int `pulumi:"minNodeCount"`
	// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
	NodeIdleTimeBeforeScaleDown *string `pulumi:"nodeIdleTimeBeforeScaleDown"`
}

// ScaleSettingsInput is an input type that accepts ScaleSettingsArgs and ScaleSettingsOutput values.
// You can construct a concrete instance of `ScaleSettingsInput` via:
//
//          ScaleSettingsArgs{...}
type ScaleSettingsInput interface {
	pulumi.Input

	ToScaleSettingsOutput() ScaleSettingsOutput
	ToScaleSettingsOutputWithContext(context.Context) ScaleSettingsOutput
}

// scale settings for AML Compute
type ScaleSettingsArgs struct {
	// Max number of nodes to use
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// Min number of nodes to use
	MinNodeCount pulumi.IntPtrInput `pulumi:"minNodeCount"`
	// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
	NodeIdleTimeBeforeScaleDown pulumi.StringPtrInput `pulumi:"nodeIdleTimeBeforeScaleDown"`
}

func (ScaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettings)(nil)).Elem()
}

func (i ScaleSettingsArgs) ToScaleSettingsOutput() ScaleSettingsOutput {
	return i.ToScaleSettingsOutputWithContext(context.Background())
}

func (i ScaleSettingsArgs) ToScaleSettingsOutputWithContext(ctx context.Context) ScaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsOutput)
}

func (i ScaleSettingsArgs) ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput {
	return i.ToScaleSettingsPtrOutputWithContext(context.Background())
}

func (i ScaleSettingsArgs) ToScaleSettingsPtrOutputWithContext(ctx context.Context) ScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsOutput).ToScaleSettingsPtrOutputWithContext(ctx)
}

// ScaleSettingsPtrInput is an input type that accepts ScaleSettingsArgs, ScaleSettingsPtr and ScaleSettingsPtrOutput values.
// You can construct a concrete instance of `ScaleSettingsPtrInput` via:
//
//          ScaleSettingsArgs{...}
//
//  or:
//
//          nil
type ScaleSettingsPtrInput interface {
	pulumi.Input

	ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput
	ToScaleSettingsPtrOutputWithContext(context.Context) ScaleSettingsPtrOutput
}

type scaleSettingsPtrType ScaleSettingsArgs

func ScaleSettingsPtr(v *ScaleSettingsArgs) ScaleSettingsPtrInput {
	return (*scaleSettingsPtrType)(v)
}

func (*scaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettings)(nil)).Elem()
}

func (i *scaleSettingsPtrType) ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput {
	return i.ToScaleSettingsPtrOutputWithContext(context.Background())
}

func (i *scaleSettingsPtrType) ToScaleSettingsPtrOutputWithContext(ctx context.Context) ScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsPtrOutput)
}

// scale settings for AML Compute
type ScaleSettingsOutput struct{ *pulumi.OutputState }

func (ScaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettings)(nil)).Elem()
}

func (o ScaleSettingsOutput) ToScaleSettingsOutput() ScaleSettingsOutput {
	return o
}

func (o ScaleSettingsOutput) ToScaleSettingsOutputWithContext(ctx context.Context) ScaleSettingsOutput {
	return o
}

func (o ScaleSettingsOutput) ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput {
	return o.ToScaleSettingsPtrOutputWithContext(context.Background())
}

func (o ScaleSettingsOutput) ToScaleSettingsPtrOutputWithContext(ctx context.Context) ScaleSettingsPtrOutput {
	return o.ApplyT(func(v ScaleSettings) *ScaleSettings {
		return &v
	}).(ScaleSettingsPtrOutput)
}

// Max number of nodes to use
func (o ScaleSettingsOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ScaleSettings) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// Min number of nodes to use
func (o ScaleSettingsOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleSettings) *int { return v.MinNodeCount }).(pulumi.IntPtrOutput)
}

// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
func (o ScaleSettingsOutput) NodeIdleTimeBeforeScaleDown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSettings) *string { return v.NodeIdleTimeBeforeScaleDown }).(pulumi.StringPtrOutput)
}

type ScaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (ScaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettings)(nil)).Elem()
}

func (o ScaleSettingsPtrOutput) ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput {
	return o
}

func (o ScaleSettingsPtrOutput) ToScaleSettingsPtrOutputWithContext(ctx context.Context) ScaleSettingsPtrOutput {
	return o
}

func (o ScaleSettingsPtrOutput) Elem() ScaleSettingsOutput {
	return o.ApplyT(func(v *ScaleSettings) ScaleSettings { return *v }).(ScaleSettingsOutput)
}

// Max number of nodes to use
func (o ScaleSettingsPtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSettings) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// Min number of nodes to use
func (o ScaleSettingsPtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
func (o ScaleSettingsPtrOutput) NodeIdleTimeBeforeScaleDown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSettings) *string {
		if v == nil {
			return nil
		}
		return v.NodeIdleTimeBeforeScaleDown
	}).(pulumi.StringPtrOutput)
}

// scale settings for AML Compute
type ScaleSettingsInvokeResponse struct {
	// Max number of nodes to use
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Min number of nodes to use
	MinNodeCount *int `pulumi:"minNodeCount"`
	// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
	NodeIdleTimeBeforeScaleDown *string `pulumi:"nodeIdleTimeBeforeScaleDown"`
}

// ScaleSettingsInvokeResponseInput is an input type that accepts ScaleSettingsInvokeResponseArgs and ScaleSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `ScaleSettingsInvokeResponseInput` via:
//
//          ScaleSettingsInvokeResponseArgs{...}
type ScaleSettingsInvokeResponseInput interface {
	pulumi.Input

	ToScaleSettingsInvokeResponseOutput() ScaleSettingsInvokeResponseOutput
	ToScaleSettingsInvokeResponseOutputWithContext(context.Context) ScaleSettingsInvokeResponseOutput
}

// scale settings for AML Compute
type ScaleSettingsInvokeResponseArgs struct {
	// Max number of nodes to use
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// Min number of nodes to use
	MinNodeCount pulumi.IntPtrInput `pulumi:"minNodeCount"`
	// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
	NodeIdleTimeBeforeScaleDown pulumi.StringPtrInput `pulumi:"nodeIdleTimeBeforeScaleDown"`
}

func (ScaleSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettingsInvokeResponse)(nil)).Elem()
}

func (i ScaleSettingsInvokeResponseArgs) ToScaleSettingsInvokeResponseOutput() ScaleSettingsInvokeResponseOutput {
	return i.ToScaleSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i ScaleSettingsInvokeResponseArgs) ToScaleSettingsInvokeResponseOutputWithContext(ctx context.Context) ScaleSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsInvokeResponseOutput)
}

func (i ScaleSettingsInvokeResponseArgs) ToScaleSettingsInvokeResponsePtrOutput() ScaleSettingsInvokeResponsePtrOutput {
	return i.ToScaleSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ScaleSettingsInvokeResponseArgs) ToScaleSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsInvokeResponseOutput).ToScaleSettingsInvokeResponsePtrOutputWithContext(ctx)
}

// ScaleSettingsInvokeResponsePtrInput is an input type that accepts ScaleSettingsInvokeResponseArgs, ScaleSettingsInvokeResponsePtr and ScaleSettingsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ScaleSettingsInvokeResponsePtrInput` via:
//
//          ScaleSettingsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ScaleSettingsInvokeResponsePtrInput interface {
	pulumi.Input

	ToScaleSettingsInvokeResponsePtrOutput() ScaleSettingsInvokeResponsePtrOutput
	ToScaleSettingsInvokeResponsePtrOutputWithContext(context.Context) ScaleSettingsInvokeResponsePtrOutput
}

type scaleSettingsInvokeResponsePtrType ScaleSettingsInvokeResponseArgs

func ScaleSettingsInvokeResponsePtr(v *ScaleSettingsInvokeResponseArgs) ScaleSettingsInvokeResponsePtrInput {
	return (*scaleSettingsInvokeResponsePtrType)(v)
}

func (*scaleSettingsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettingsInvokeResponse)(nil)).Elem()
}

func (i *scaleSettingsInvokeResponsePtrType) ToScaleSettingsInvokeResponsePtrOutput() ScaleSettingsInvokeResponsePtrOutput {
	return i.ToScaleSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *scaleSettingsInvokeResponsePtrType) ToScaleSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsInvokeResponsePtrOutput)
}

// scale settings for AML Compute
type ScaleSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (ScaleSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettingsInvokeResponse)(nil)).Elem()
}

func (o ScaleSettingsInvokeResponseOutput) ToScaleSettingsInvokeResponseOutput() ScaleSettingsInvokeResponseOutput {
	return o
}

func (o ScaleSettingsInvokeResponseOutput) ToScaleSettingsInvokeResponseOutputWithContext(ctx context.Context) ScaleSettingsInvokeResponseOutput {
	return o
}

func (o ScaleSettingsInvokeResponseOutput) ToScaleSettingsInvokeResponsePtrOutput() ScaleSettingsInvokeResponsePtrOutput {
	return o.ToScaleSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ScaleSettingsInvokeResponseOutput) ToScaleSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v ScaleSettingsInvokeResponse) *ScaleSettingsInvokeResponse {
		return &v
	}).(ScaleSettingsInvokeResponsePtrOutput)
}

// Max number of nodes to use
func (o ScaleSettingsInvokeResponseOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ScaleSettingsInvokeResponse) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// Min number of nodes to use
func (o ScaleSettingsInvokeResponseOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleSettingsInvokeResponse) *int { return v.MinNodeCount }).(pulumi.IntPtrOutput)
}

// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
func (o ScaleSettingsInvokeResponseOutput) NodeIdleTimeBeforeScaleDown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSettingsInvokeResponse) *string { return v.NodeIdleTimeBeforeScaleDown }).(pulumi.StringPtrOutput)
}

type ScaleSettingsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ScaleSettingsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettingsInvokeResponse)(nil)).Elem()
}

func (o ScaleSettingsInvokeResponsePtrOutput) ToScaleSettingsInvokeResponsePtrOutput() ScaleSettingsInvokeResponsePtrOutput {
	return o
}

func (o ScaleSettingsInvokeResponsePtrOutput) ToScaleSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsInvokeResponsePtrOutput {
	return o
}

func (o ScaleSettingsInvokeResponsePtrOutput) Elem() ScaleSettingsInvokeResponseOutput {
	return o.ApplyT(func(v *ScaleSettingsInvokeResponse) ScaleSettingsInvokeResponse { return *v }).(ScaleSettingsInvokeResponseOutput)
}

// Max number of nodes to use
func (o ScaleSettingsInvokeResponsePtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSettingsInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// Min number of nodes to use
func (o ScaleSettingsInvokeResponsePtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSettingsInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
func (o ScaleSettingsInvokeResponsePtrOutput) NodeIdleTimeBeforeScaleDown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.NodeIdleTimeBeforeScaleDown
	}).(pulumi.StringPtrOutput)
}

// scale settings for AML Compute
type ScaleSettingsResponse struct {
	// Max number of nodes to use
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Min number of nodes to use
	MinNodeCount *int `pulumi:"minNodeCount"`
	// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
	NodeIdleTimeBeforeScaleDown *string `pulumi:"nodeIdleTimeBeforeScaleDown"`
}

// ScaleSettingsResponseInput is an input type that accepts ScaleSettingsResponseArgs and ScaleSettingsResponseOutput values.
// You can construct a concrete instance of `ScaleSettingsResponseInput` via:
//
//          ScaleSettingsResponseArgs{...}
type ScaleSettingsResponseInput interface {
	pulumi.Input

	ToScaleSettingsResponseOutput() ScaleSettingsResponseOutput
	ToScaleSettingsResponseOutputWithContext(context.Context) ScaleSettingsResponseOutput
}

// scale settings for AML Compute
type ScaleSettingsResponseArgs struct {
	// Max number of nodes to use
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// Min number of nodes to use
	MinNodeCount pulumi.IntPtrInput `pulumi:"minNodeCount"`
	// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
	NodeIdleTimeBeforeScaleDown pulumi.StringPtrInput `pulumi:"nodeIdleTimeBeforeScaleDown"`
}

func (ScaleSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettingsResponse)(nil)).Elem()
}

func (i ScaleSettingsResponseArgs) ToScaleSettingsResponseOutput() ScaleSettingsResponseOutput {
	return i.ToScaleSettingsResponseOutputWithContext(context.Background())
}

func (i ScaleSettingsResponseArgs) ToScaleSettingsResponseOutputWithContext(ctx context.Context) ScaleSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsResponseOutput)
}

func (i ScaleSettingsResponseArgs) ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput {
	return i.ToScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ScaleSettingsResponseArgs) ToScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsResponseOutput).ToScaleSettingsResponsePtrOutputWithContext(ctx)
}

// ScaleSettingsResponsePtrInput is an input type that accepts ScaleSettingsResponseArgs, ScaleSettingsResponsePtr and ScaleSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ScaleSettingsResponsePtrInput` via:
//
//          ScaleSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ScaleSettingsResponsePtrInput interface {
	pulumi.Input

	ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput
	ToScaleSettingsResponsePtrOutputWithContext(context.Context) ScaleSettingsResponsePtrOutput
}

type scaleSettingsResponsePtrType ScaleSettingsResponseArgs

func ScaleSettingsResponsePtr(v *ScaleSettingsResponseArgs) ScaleSettingsResponsePtrInput {
	return (*scaleSettingsResponsePtrType)(v)
}

func (*scaleSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettingsResponse)(nil)).Elem()
}

func (i *scaleSettingsResponsePtrType) ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput {
	return i.ToScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *scaleSettingsResponsePtrType) ToScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsResponsePtrOutput)
}

// scale settings for AML Compute
type ScaleSettingsResponseOutput struct{ *pulumi.OutputState }

func (ScaleSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettingsResponse)(nil)).Elem()
}

func (o ScaleSettingsResponseOutput) ToScaleSettingsResponseOutput() ScaleSettingsResponseOutput {
	return o
}

func (o ScaleSettingsResponseOutput) ToScaleSettingsResponseOutputWithContext(ctx context.Context) ScaleSettingsResponseOutput {
	return o
}

func (o ScaleSettingsResponseOutput) ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput {
	return o.ToScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ScaleSettingsResponseOutput) ToScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v ScaleSettingsResponse) *ScaleSettingsResponse {
		return &v
	}).(ScaleSettingsResponsePtrOutput)
}

// Max number of nodes to use
func (o ScaleSettingsResponseOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ScaleSettingsResponse) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// Min number of nodes to use
func (o ScaleSettingsResponseOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleSettingsResponse) *int { return v.MinNodeCount }).(pulumi.IntPtrOutput)
}

// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
func (o ScaleSettingsResponseOutput) NodeIdleTimeBeforeScaleDown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSettingsResponse) *string { return v.NodeIdleTimeBeforeScaleDown }).(pulumi.StringPtrOutput)
}

type ScaleSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ScaleSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettingsResponse)(nil)).Elem()
}

func (o ScaleSettingsResponsePtrOutput) ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput {
	return o
}

func (o ScaleSettingsResponsePtrOutput) ToScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsResponsePtrOutput {
	return o
}

func (o ScaleSettingsResponsePtrOutput) Elem() ScaleSettingsResponseOutput {
	return o.ApplyT(func(v *ScaleSettingsResponse) ScaleSettingsResponse { return *v }).(ScaleSettingsResponseOutput)
}

// Max number of nodes to use
func (o ScaleSettingsResponsePtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// Min number of nodes to use
func (o ScaleSettingsResponsePtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
func (o ScaleSettingsResponsePtrOutput) NodeIdleTimeBeforeScaleDown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.NodeIdleTimeBeforeScaleDown
	}).(pulumi.StringPtrOutput)
}

// The error details.
type ServiceResponseBaseInvokeResponseError struct {
	// Error code.
	Code string `pulumi:"code"`
	// An array of error detail objects.
	Details []ErrorDetailInvokeResponse `pulumi:"details"`
	// Error message.
	Message string `pulumi:"message"`
}

// ServiceResponseBaseInvokeResponseErrorInput is an input type that accepts ServiceResponseBaseInvokeResponseErrorArgs and ServiceResponseBaseInvokeResponseErrorOutput values.
// You can construct a concrete instance of `ServiceResponseBaseInvokeResponseErrorInput` via:
//
//          ServiceResponseBaseInvokeResponseErrorArgs{...}
type ServiceResponseBaseInvokeResponseErrorInput interface {
	pulumi.Input

	ToServiceResponseBaseInvokeResponseErrorOutput() ServiceResponseBaseInvokeResponseErrorOutput
	ToServiceResponseBaseInvokeResponseErrorOutputWithContext(context.Context) ServiceResponseBaseInvokeResponseErrorOutput
}

// The error details.
type ServiceResponseBaseInvokeResponseErrorArgs struct {
	// Error code.
	Code pulumi.StringInput `pulumi:"code"`
	// An array of error detail objects.
	Details ErrorDetailInvokeResponseArrayInput `pulumi:"details"`
	// Error message.
	Message pulumi.StringInput `pulumi:"message"`
}

func (ServiceResponseBaseInvokeResponseErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceResponseBaseInvokeResponseError)(nil)).Elem()
}

func (i ServiceResponseBaseInvokeResponseErrorArgs) ToServiceResponseBaseInvokeResponseErrorOutput() ServiceResponseBaseInvokeResponseErrorOutput {
	return i.ToServiceResponseBaseInvokeResponseErrorOutputWithContext(context.Background())
}

func (i ServiceResponseBaseInvokeResponseErrorArgs) ToServiceResponseBaseInvokeResponseErrorOutputWithContext(ctx context.Context) ServiceResponseBaseInvokeResponseErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceResponseBaseInvokeResponseErrorOutput)
}

// The error details.
type ServiceResponseBaseInvokeResponseErrorOutput struct{ *pulumi.OutputState }

func (ServiceResponseBaseInvokeResponseErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceResponseBaseInvokeResponseError)(nil)).Elem()
}

func (o ServiceResponseBaseInvokeResponseErrorOutput) ToServiceResponseBaseInvokeResponseErrorOutput() ServiceResponseBaseInvokeResponseErrorOutput {
	return o
}

func (o ServiceResponseBaseInvokeResponseErrorOutput) ToServiceResponseBaseInvokeResponseErrorOutputWithContext(ctx context.Context) ServiceResponseBaseInvokeResponseErrorOutput {
	return o
}

// Error code.
func (o ServiceResponseBaseInvokeResponseErrorOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponseBaseInvokeResponseError) string { return v.Code }).(pulumi.StringOutput)
}

// An array of error detail objects.
func (o ServiceResponseBaseInvokeResponseErrorOutput) Details() ErrorDetailInvokeResponseArrayOutput {
	return o.ApplyT(func(v ServiceResponseBaseInvokeResponseError) []ErrorDetailInvokeResponse { return v.Details }).(ErrorDetailInvokeResponseArrayOutput)
}

// Error message.
func (o ServiceResponseBaseInvokeResponseErrorOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponseBaseInvokeResponseError) string { return v.Message }).(pulumi.StringOutput)
}

// The error details.
type ServiceResponseBaseResponseError struct {
	// Error code.
	Code string `pulumi:"code"`
	// An array of error detail objects.
	Details []ErrorDetailResponse `pulumi:"details"`
	// Error message.
	Message string `pulumi:"message"`
}

// ServiceResponseBaseResponseErrorInput is an input type that accepts ServiceResponseBaseResponseErrorArgs and ServiceResponseBaseResponseErrorOutput values.
// You can construct a concrete instance of `ServiceResponseBaseResponseErrorInput` via:
//
//          ServiceResponseBaseResponseErrorArgs{...}
type ServiceResponseBaseResponseErrorInput interface {
	pulumi.Input

	ToServiceResponseBaseResponseErrorOutput() ServiceResponseBaseResponseErrorOutput
	ToServiceResponseBaseResponseErrorOutputWithContext(context.Context) ServiceResponseBaseResponseErrorOutput
}

// The error details.
type ServiceResponseBaseResponseErrorArgs struct {
	// Error code.
	Code pulumi.StringInput `pulumi:"code"`
	// An array of error detail objects.
	Details ErrorDetailResponseArrayInput `pulumi:"details"`
	// Error message.
	Message pulumi.StringInput `pulumi:"message"`
}

func (ServiceResponseBaseResponseErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceResponseBaseResponseError)(nil)).Elem()
}

func (i ServiceResponseBaseResponseErrorArgs) ToServiceResponseBaseResponseErrorOutput() ServiceResponseBaseResponseErrorOutput {
	return i.ToServiceResponseBaseResponseErrorOutputWithContext(context.Background())
}

func (i ServiceResponseBaseResponseErrorArgs) ToServiceResponseBaseResponseErrorOutputWithContext(ctx context.Context) ServiceResponseBaseResponseErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceResponseBaseResponseErrorOutput)
}

// The error details.
type ServiceResponseBaseResponseErrorOutput struct{ *pulumi.OutputState }

func (ServiceResponseBaseResponseErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceResponseBaseResponseError)(nil)).Elem()
}

func (o ServiceResponseBaseResponseErrorOutput) ToServiceResponseBaseResponseErrorOutput() ServiceResponseBaseResponseErrorOutput {
	return o
}

func (o ServiceResponseBaseResponseErrorOutput) ToServiceResponseBaseResponseErrorOutputWithContext(ctx context.Context) ServiceResponseBaseResponseErrorOutput {
	return o
}

// Error code.
func (o ServiceResponseBaseResponseErrorOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponseBaseResponseError) string { return v.Code }).(pulumi.StringOutput)
}

// An array of error detail objects.
func (o ServiceResponseBaseResponseErrorOutput) Details() ErrorDetailResponseArrayOutput {
	return o.ApplyT(func(v ServiceResponseBaseResponseError) []ErrorDetailResponse { return v.Details }).(ErrorDetailResponseArrayOutput)
}

// Error message.
func (o ServiceResponseBaseResponseErrorOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponseBaseResponseError) string { return v.Message }).(pulumi.StringOutput)
}

type SharedPrivateLinkResource struct {
	// The private link resource group id.
	GroupId *string `pulumi:"groupId"`
	// Unique name of the private link.
	Name *string `pulumi:"name"`
	// The resource id that private link links to.
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Request message.
	RequestMessage *string `pulumi:"requestMessage"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// SharedPrivateLinkResourceInput is an input type that accepts SharedPrivateLinkResourceArgs and SharedPrivateLinkResourceOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceInput` via:
//
//          SharedPrivateLinkResourceArgs{...}
type SharedPrivateLinkResourceInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput
	ToSharedPrivateLinkResourceOutputWithContext(context.Context) SharedPrivateLinkResourceOutput
}

type SharedPrivateLinkResourceArgs struct {
	// The private link resource group id.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Unique name of the private link.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource id that private link links to.
	PrivateLinkResourceId pulumi.StringPtrInput `pulumi:"privateLinkResourceId"`
	// Request message.
	RequestMessage pulumi.StringPtrInput `pulumi:"requestMessage"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SharedPrivateLinkResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResource)(nil)).Elem()
}

func (i SharedPrivateLinkResourceArgs) ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput {
	return i.ToSharedPrivateLinkResourceOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceArgs) ToSharedPrivateLinkResourceOutputWithContext(ctx context.Context) SharedPrivateLinkResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceOutput)
}

// SharedPrivateLinkResourceArrayInput is an input type that accepts SharedPrivateLinkResourceArray and SharedPrivateLinkResourceArrayOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceArrayInput` via:
//
//          SharedPrivateLinkResourceArray{ SharedPrivateLinkResourceArgs{...} }
type SharedPrivateLinkResourceArrayInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceArrayOutput() SharedPrivateLinkResourceArrayOutput
	ToSharedPrivateLinkResourceArrayOutputWithContext(context.Context) SharedPrivateLinkResourceArrayOutput
}

type SharedPrivateLinkResourceArray []SharedPrivateLinkResourceInput

func (SharedPrivateLinkResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResource)(nil)).Elem()
}

func (i SharedPrivateLinkResourceArray) ToSharedPrivateLinkResourceArrayOutput() SharedPrivateLinkResourceArrayOutput {
	return i.ToSharedPrivateLinkResourceArrayOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceArray) ToSharedPrivateLinkResourceArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceArrayOutput)
}

type SharedPrivateLinkResourceOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResource)(nil)).Elem()
}

func (o SharedPrivateLinkResourceOutput) ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput {
	return o
}

func (o SharedPrivateLinkResourceOutput) ToSharedPrivateLinkResourceOutputWithContext(ctx context.Context) SharedPrivateLinkResourceOutput {
	return o
}

// The private link resource group id.
func (o SharedPrivateLinkResourceOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Unique name of the private link.
func (o SharedPrivateLinkResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource id that private link links to.
func (o SharedPrivateLinkResourceOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Request message.
func (o SharedPrivateLinkResourceOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o SharedPrivateLinkResourceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SharedPrivateLinkResourceArrayOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResource)(nil)).Elem()
}

func (o SharedPrivateLinkResourceArrayOutput) ToSharedPrivateLinkResourceArrayOutput() SharedPrivateLinkResourceArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceArrayOutput) ToSharedPrivateLinkResourceArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceArrayOutput) Index(i pulumi.IntInput) SharedPrivateLinkResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedPrivateLinkResource {
		return vs[0].([]SharedPrivateLinkResource)[vs[1].(int)]
	}).(SharedPrivateLinkResourceOutput)
}

type SharedPrivateLinkResourceInvokeResponse struct {
	// The private link resource group id.
	GroupId *string `pulumi:"groupId"`
	// Unique name of the private link.
	Name *string `pulumi:"name"`
	// The resource id that private link links to.
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Request message.
	RequestMessage *string `pulumi:"requestMessage"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// SharedPrivateLinkResourceInvokeResponseInput is an input type that accepts SharedPrivateLinkResourceInvokeResponseArgs and SharedPrivateLinkResourceInvokeResponseOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceInvokeResponseInput` via:
//
//          SharedPrivateLinkResourceInvokeResponseArgs{...}
type SharedPrivateLinkResourceInvokeResponseInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceInvokeResponseOutput() SharedPrivateLinkResourceInvokeResponseOutput
	ToSharedPrivateLinkResourceInvokeResponseOutputWithContext(context.Context) SharedPrivateLinkResourceInvokeResponseOutput
}

type SharedPrivateLinkResourceInvokeResponseArgs struct {
	// The private link resource group id.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Unique name of the private link.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource id that private link links to.
	PrivateLinkResourceId pulumi.StringPtrInput `pulumi:"privateLinkResourceId"`
	// Request message.
	RequestMessage pulumi.StringPtrInput `pulumi:"requestMessage"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SharedPrivateLinkResourceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResourceInvokeResponse)(nil)).Elem()
}

func (i SharedPrivateLinkResourceInvokeResponseArgs) ToSharedPrivateLinkResourceInvokeResponseOutput() SharedPrivateLinkResourceInvokeResponseOutput {
	return i.ToSharedPrivateLinkResourceInvokeResponseOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceInvokeResponseArgs) ToSharedPrivateLinkResourceInvokeResponseOutputWithContext(ctx context.Context) SharedPrivateLinkResourceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceInvokeResponseOutput)
}

// SharedPrivateLinkResourceInvokeResponseArrayInput is an input type that accepts SharedPrivateLinkResourceInvokeResponseArray and SharedPrivateLinkResourceInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceInvokeResponseArrayInput` via:
//
//          SharedPrivateLinkResourceInvokeResponseArray{ SharedPrivateLinkResourceInvokeResponseArgs{...} }
type SharedPrivateLinkResourceInvokeResponseArrayInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceInvokeResponseArrayOutput() SharedPrivateLinkResourceInvokeResponseArrayOutput
	ToSharedPrivateLinkResourceInvokeResponseArrayOutputWithContext(context.Context) SharedPrivateLinkResourceInvokeResponseArrayOutput
}

type SharedPrivateLinkResourceInvokeResponseArray []SharedPrivateLinkResourceInvokeResponseInput

func (SharedPrivateLinkResourceInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResourceInvokeResponse)(nil)).Elem()
}

func (i SharedPrivateLinkResourceInvokeResponseArray) ToSharedPrivateLinkResourceInvokeResponseArrayOutput() SharedPrivateLinkResourceInvokeResponseArrayOutput {
	return i.ToSharedPrivateLinkResourceInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceInvokeResponseArray) ToSharedPrivateLinkResourceInvokeResponseArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceInvokeResponseArrayOutput)
}

type SharedPrivateLinkResourceInvokeResponseOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResourceInvokeResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourceInvokeResponseOutput) ToSharedPrivateLinkResourceInvokeResponseOutput() SharedPrivateLinkResourceInvokeResponseOutput {
	return o
}

func (o SharedPrivateLinkResourceInvokeResponseOutput) ToSharedPrivateLinkResourceInvokeResponseOutputWithContext(ctx context.Context) SharedPrivateLinkResourceInvokeResponseOutput {
	return o
}

// The private link resource group id.
func (o SharedPrivateLinkResourceInvokeResponseOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceInvokeResponse) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Unique name of the private link.
func (o SharedPrivateLinkResourceInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource id that private link links to.
func (o SharedPrivateLinkResourceInvokeResponseOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceInvokeResponse) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Request message.
func (o SharedPrivateLinkResourceInvokeResponseOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceInvokeResponse) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o SharedPrivateLinkResourceInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SharedPrivateLinkResourceInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResourceInvokeResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourceInvokeResponseArrayOutput) ToSharedPrivateLinkResourceInvokeResponseArrayOutput() SharedPrivateLinkResourceInvokeResponseArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceInvokeResponseArrayOutput) ToSharedPrivateLinkResourceInvokeResponseArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceInvokeResponseArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceInvokeResponseArrayOutput) Index(i pulumi.IntInput) SharedPrivateLinkResourceInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedPrivateLinkResourceInvokeResponse {
		return vs[0].([]SharedPrivateLinkResourceInvokeResponse)[vs[1].(int)]
	}).(SharedPrivateLinkResourceInvokeResponseOutput)
}

type SharedPrivateLinkResourceResponse struct {
	// The private link resource group id.
	GroupId *string `pulumi:"groupId"`
	// Unique name of the private link.
	Name *string `pulumi:"name"`
	// The resource id that private link links to.
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Request message.
	RequestMessage *string `pulumi:"requestMessage"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// SharedPrivateLinkResourceResponseInput is an input type that accepts SharedPrivateLinkResourceResponseArgs and SharedPrivateLinkResourceResponseOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceResponseInput` via:
//
//          SharedPrivateLinkResourceResponseArgs{...}
type SharedPrivateLinkResourceResponseInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceResponseOutput() SharedPrivateLinkResourceResponseOutput
	ToSharedPrivateLinkResourceResponseOutputWithContext(context.Context) SharedPrivateLinkResourceResponseOutput
}

type SharedPrivateLinkResourceResponseArgs struct {
	// The private link resource group id.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Unique name of the private link.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource id that private link links to.
	PrivateLinkResourceId pulumi.StringPtrInput `pulumi:"privateLinkResourceId"`
	// Request message.
	RequestMessage pulumi.StringPtrInput `pulumi:"requestMessage"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SharedPrivateLinkResourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (i SharedPrivateLinkResourceResponseArgs) ToSharedPrivateLinkResourceResponseOutput() SharedPrivateLinkResourceResponseOutput {
	return i.ToSharedPrivateLinkResourceResponseOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceResponseArgs) ToSharedPrivateLinkResourceResponseOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceResponseOutput)
}

// SharedPrivateLinkResourceResponseArrayInput is an input type that accepts SharedPrivateLinkResourceResponseArray and SharedPrivateLinkResourceResponseArrayOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceResponseArrayInput` via:
//
//          SharedPrivateLinkResourceResponseArray{ SharedPrivateLinkResourceResponseArgs{...} }
type SharedPrivateLinkResourceResponseArrayInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceResponseArrayOutput() SharedPrivateLinkResourceResponseArrayOutput
	ToSharedPrivateLinkResourceResponseArrayOutputWithContext(context.Context) SharedPrivateLinkResourceResponseArrayOutput
}

type SharedPrivateLinkResourceResponseArray []SharedPrivateLinkResourceResponseInput

func (SharedPrivateLinkResourceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (i SharedPrivateLinkResourceResponseArray) ToSharedPrivateLinkResourceResponseArrayOutput() SharedPrivateLinkResourceResponseArrayOutput {
	return i.ToSharedPrivateLinkResourceResponseArrayOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceResponseArray) ToSharedPrivateLinkResourceResponseArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceResponseArrayOutput)
}

type SharedPrivateLinkResourceResponseOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourceResponseOutput) ToSharedPrivateLinkResourceResponseOutput() SharedPrivateLinkResourceResponseOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseOutput) ToSharedPrivateLinkResourceResponseOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseOutput {
	return o
}

// The private link resource group id.
func (o SharedPrivateLinkResourceResponseOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Unique name of the private link.
func (o SharedPrivateLinkResourceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource id that private link links to.
func (o SharedPrivateLinkResourceResponseOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Request message.
func (o SharedPrivateLinkResourceResponseOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o SharedPrivateLinkResourceResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SharedPrivateLinkResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourceResponseArrayOutput) ToSharedPrivateLinkResourceResponseArrayOutput() SharedPrivateLinkResourceResponseArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseArrayOutput) ToSharedPrivateLinkResourceResponseArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseArrayOutput) Index(i pulumi.IntInput) SharedPrivateLinkResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedPrivateLinkResourceResponse {
		return vs[0].([]SharedPrivateLinkResourceResponse)[vs[1].(int)]
	}).(SharedPrivateLinkResourceResponseOutput)
}

// Sku of the resource
type Sku struct {
	// Name of the sku
	Name *string `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Sku of the resource
type SkuArgs struct {
	// Name of the sku
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// Sku of the resource
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// Name of the sku
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// Name of the sku
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Sku of the resource
type SkuInvokeResponse struct {
	// Name of the sku
	Name *string `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier *string `pulumi:"tier"`
}

// SkuInvokeResponseInput is an input type that accepts SkuInvokeResponseArgs and SkuInvokeResponseOutput values.
// You can construct a concrete instance of `SkuInvokeResponseInput` via:
//
//          SkuInvokeResponseArgs{...}
type SkuInvokeResponseInput interface {
	pulumi.Input

	ToSkuInvokeResponseOutput() SkuInvokeResponseOutput
	ToSkuInvokeResponseOutputWithContext(context.Context) SkuInvokeResponseOutput
}

// Sku of the resource
type SkuInvokeResponseArgs struct {
	// Name of the sku
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuInvokeResponse)(nil)).Elem()
}

func (i SkuInvokeResponseArgs) ToSkuInvokeResponseOutput() SkuInvokeResponseOutput {
	return i.ToSkuInvokeResponseOutputWithContext(context.Background())
}

func (i SkuInvokeResponseArgs) ToSkuInvokeResponseOutputWithContext(ctx context.Context) SkuInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuInvokeResponseOutput)
}

func (i SkuInvokeResponseArgs) ToSkuInvokeResponsePtrOutput() SkuInvokeResponsePtrOutput {
	return i.ToSkuInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SkuInvokeResponseArgs) ToSkuInvokeResponsePtrOutputWithContext(ctx context.Context) SkuInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuInvokeResponseOutput).ToSkuInvokeResponsePtrOutputWithContext(ctx)
}

// SkuInvokeResponsePtrInput is an input type that accepts SkuInvokeResponseArgs, SkuInvokeResponsePtr and SkuInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SkuInvokeResponsePtrInput` via:
//
//          SkuInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SkuInvokeResponsePtrInput interface {
	pulumi.Input

	ToSkuInvokeResponsePtrOutput() SkuInvokeResponsePtrOutput
	ToSkuInvokeResponsePtrOutputWithContext(context.Context) SkuInvokeResponsePtrOutput
}

type skuInvokeResponsePtrType SkuInvokeResponseArgs

func SkuInvokeResponsePtr(v *SkuInvokeResponseArgs) SkuInvokeResponsePtrInput {
	return (*skuInvokeResponsePtrType)(v)
}

func (*skuInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuInvokeResponse)(nil)).Elem()
}

func (i *skuInvokeResponsePtrType) ToSkuInvokeResponsePtrOutput() SkuInvokeResponsePtrOutput {
	return i.ToSkuInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *skuInvokeResponsePtrType) ToSkuInvokeResponsePtrOutputWithContext(ctx context.Context) SkuInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuInvokeResponsePtrOutput)
}

// Sku of the resource
type SkuInvokeResponseOutput struct{ *pulumi.OutputState }

func (SkuInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuInvokeResponse)(nil)).Elem()
}

func (o SkuInvokeResponseOutput) ToSkuInvokeResponseOutput() SkuInvokeResponseOutput {
	return o
}

func (o SkuInvokeResponseOutput) ToSkuInvokeResponseOutputWithContext(ctx context.Context) SkuInvokeResponseOutput {
	return o
}

func (o SkuInvokeResponseOutput) ToSkuInvokeResponsePtrOutput() SkuInvokeResponsePtrOutput {
	return o.ToSkuInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SkuInvokeResponseOutput) ToSkuInvokeResponsePtrOutputWithContext(ctx context.Context) SkuInvokeResponsePtrOutput {
	return o.ApplyT(func(v SkuInvokeResponse) *SkuInvokeResponse {
		return &v
	}).(SkuInvokeResponsePtrOutput)
}

// Name of the sku
func (o SkuInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuInvokeResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuInvokeResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuInvokeResponse)(nil)).Elem()
}

func (o SkuInvokeResponsePtrOutput) ToSkuInvokeResponsePtrOutput() SkuInvokeResponsePtrOutput {
	return o
}

func (o SkuInvokeResponsePtrOutput) ToSkuInvokeResponsePtrOutputWithContext(ctx context.Context) SkuInvokeResponsePtrOutput {
	return o
}

func (o SkuInvokeResponsePtrOutput) Elem() SkuInvokeResponseOutput {
	return o.ApplyT(func(v *SkuInvokeResponse) SkuInvokeResponse { return *v }).(SkuInvokeResponseOutput)
}

// Name of the sku
func (o SkuInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuInvokeResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Sku of the resource
type SkuResponse struct {
	// Name of the sku
	Name *string `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier *string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// Sku of the resource
type SkuResponseArgs struct {
	// Name of the sku
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// Sku of the resource
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// Name of the sku
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// Name of the sku
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

type SparkMavenPackage struct {
	Artifact *string `pulumi:"artifact"`
	Group    *string `pulumi:"group"`
	Version  *string `pulumi:"version"`
}

// SparkMavenPackageInput is an input type that accepts SparkMavenPackageArgs and SparkMavenPackageOutput values.
// You can construct a concrete instance of `SparkMavenPackageInput` via:
//
//          SparkMavenPackageArgs{...}
type SparkMavenPackageInput interface {
	pulumi.Input

	ToSparkMavenPackageOutput() SparkMavenPackageOutput
	ToSparkMavenPackageOutputWithContext(context.Context) SparkMavenPackageOutput
}

type SparkMavenPackageArgs struct {
	Artifact pulumi.StringPtrInput `pulumi:"artifact"`
	Group    pulumi.StringPtrInput `pulumi:"group"`
	Version  pulumi.StringPtrInput `pulumi:"version"`
}

func (SparkMavenPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkMavenPackage)(nil)).Elem()
}

func (i SparkMavenPackageArgs) ToSparkMavenPackageOutput() SparkMavenPackageOutput {
	return i.ToSparkMavenPackageOutputWithContext(context.Background())
}

func (i SparkMavenPackageArgs) ToSparkMavenPackageOutputWithContext(ctx context.Context) SparkMavenPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkMavenPackageOutput)
}

// SparkMavenPackageArrayInput is an input type that accepts SparkMavenPackageArray and SparkMavenPackageArrayOutput values.
// You can construct a concrete instance of `SparkMavenPackageArrayInput` via:
//
//          SparkMavenPackageArray{ SparkMavenPackageArgs{...} }
type SparkMavenPackageArrayInput interface {
	pulumi.Input

	ToSparkMavenPackageArrayOutput() SparkMavenPackageArrayOutput
	ToSparkMavenPackageArrayOutputWithContext(context.Context) SparkMavenPackageArrayOutput
}

type SparkMavenPackageArray []SparkMavenPackageInput

func (SparkMavenPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SparkMavenPackage)(nil)).Elem()
}

func (i SparkMavenPackageArray) ToSparkMavenPackageArrayOutput() SparkMavenPackageArrayOutput {
	return i.ToSparkMavenPackageArrayOutputWithContext(context.Background())
}

func (i SparkMavenPackageArray) ToSparkMavenPackageArrayOutputWithContext(ctx context.Context) SparkMavenPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkMavenPackageArrayOutput)
}

type SparkMavenPackageOutput struct{ *pulumi.OutputState }

func (SparkMavenPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkMavenPackage)(nil)).Elem()
}

func (o SparkMavenPackageOutput) ToSparkMavenPackageOutput() SparkMavenPackageOutput {
	return o
}

func (o SparkMavenPackageOutput) ToSparkMavenPackageOutputWithContext(ctx context.Context) SparkMavenPackageOutput {
	return o
}

func (o SparkMavenPackageOutput) Artifact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkMavenPackage) *string { return v.Artifact }).(pulumi.StringPtrOutput)
}

func (o SparkMavenPackageOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkMavenPackage) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o SparkMavenPackageOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkMavenPackage) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SparkMavenPackageArrayOutput struct{ *pulumi.OutputState }

func (SparkMavenPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SparkMavenPackage)(nil)).Elem()
}

func (o SparkMavenPackageArrayOutput) ToSparkMavenPackageArrayOutput() SparkMavenPackageArrayOutput {
	return o
}

func (o SparkMavenPackageArrayOutput) ToSparkMavenPackageArrayOutputWithContext(ctx context.Context) SparkMavenPackageArrayOutput {
	return o
}

func (o SparkMavenPackageArrayOutput) Index(i pulumi.IntInput) SparkMavenPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SparkMavenPackage {
		return vs[0].([]SparkMavenPackage)[vs[1].(int)]
	}).(SparkMavenPackageOutput)
}

type SparkMavenPackageInvokeResponse struct {
	Artifact *string `pulumi:"artifact"`
	Group    *string `pulumi:"group"`
	Version  *string `pulumi:"version"`
}

// SparkMavenPackageInvokeResponseInput is an input type that accepts SparkMavenPackageInvokeResponseArgs and SparkMavenPackageInvokeResponseOutput values.
// You can construct a concrete instance of `SparkMavenPackageInvokeResponseInput` via:
//
//          SparkMavenPackageInvokeResponseArgs{...}
type SparkMavenPackageInvokeResponseInput interface {
	pulumi.Input

	ToSparkMavenPackageInvokeResponseOutput() SparkMavenPackageInvokeResponseOutput
	ToSparkMavenPackageInvokeResponseOutputWithContext(context.Context) SparkMavenPackageInvokeResponseOutput
}

type SparkMavenPackageInvokeResponseArgs struct {
	Artifact pulumi.StringPtrInput `pulumi:"artifact"`
	Group    pulumi.StringPtrInput `pulumi:"group"`
	Version  pulumi.StringPtrInput `pulumi:"version"`
}

func (SparkMavenPackageInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkMavenPackageInvokeResponse)(nil)).Elem()
}

func (i SparkMavenPackageInvokeResponseArgs) ToSparkMavenPackageInvokeResponseOutput() SparkMavenPackageInvokeResponseOutput {
	return i.ToSparkMavenPackageInvokeResponseOutputWithContext(context.Background())
}

func (i SparkMavenPackageInvokeResponseArgs) ToSparkMavenPackageInvokeResponseOutputWithContext(ctx context.Context) SparkMavenPackageInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkMavenPackageInvokeResponseOutput)
}

// SparkMavenPackageInvokeResponseArrayInput is an input type that accepts SparkMavenPackageInvokeResponseArray and SparkMavenPackageInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SparkMavenPackageInvokeResponseArrayInput` via:
//
//          SparkMavenPackageInvokeResponseArray{ SparkMavenPackageInvokeResponseArgs{...} }
type SparkMavenPackageInvokeResponseArrayInput interface {
	pulumi.Input

	ToSparkMavenPackageInvokeResponseArrayOutput() SparkMavenPackageInvokeResponseArrayOutput
	ToSparkMavenPackageInvokeResponseArrayOutputWithContext(context.Context) SparkMavenPackageInvokeResponseArrayOutput
}

type SparkMavenPackageInvokeResponseArray []SparkMavenPackageInvokeResponseInput

func (SparkMavenPackageInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SparkMavenPackageInvokeResponse)(nil)).Elem()
}

func (i SparkMavenPackageInvokeResponseArray) ToSparkMavenPackageInvokeResponseArrayOutput() SparkMavenPackageInvokeResponseArrayOutput {
	return i.ToSparkMavenPackageInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SparkMavenPackageInvokeResponseArray) ToSparkMavenPackageInvokeResponseArrayOutputWithContext(ctx context.Context) SparkMavenPackageInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkMavenPackageInvokeResponseArrayOutput)
}

type SparkMavenPackageInvokeResponseOutput struct{ *pulumi.OutputState }

func (SparkMavenPackageInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkMavenPackageInvokeResponse)(nil)).Elem()
}

func (o SparkMavenPackageInvokeResponseOutput) ToSparkMavenPackageInvokeResponseOutput() SparkMavenPackageInvokeResponseOutput {
	return o
}

func (o SparkMavenPackageInvokeResponseOutput) ToSparkMavenPackageInvokeResponseOutputWithContext(ctx context.Context) SparkMavenPackageInvokeResponseOutput {
	return o
}

func (o SparkMavenPackageInvokeResponseOutput) Artifact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkMavenPackageInvokeResponse) *string { return v.Artifact }).(pulumi.StringPtrOutput)
}

func (o SparkMavenPackageInvokeResponseOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkMavenPackageInvokeResponse) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o SparkMavenPackageInvokeResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkMavenPackageInvokeResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SparkMavenPackageInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SparkMavenPackageInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SparkMavenPackageInvokeResponse)(nil)).Elem()
}

func (o SparkMavenPackageInvokeResponseArrayOutput) ToSparkMavenPackageInvokeResponseArrayOutput() SparkMavenPackageInvokeResponseArrayOutput {
	return o
}

func (o SparkMavenPackageInvokeResponseArrayOutput) ToSparkMavenPackageInvokeResponseArrayOutputWithContext(ctx context.Context) SparkMavenPackageInvokeResponseArrayOutput {
	return o
}

func (o SparkMavenPackageInvokeResponseArrayOutput) Index(i pulumi.IntInput) SparkMavenPackageInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SparkMavenPackageInvokeResponse {
		return vs[0].([]SparkMavenPackageInvokeResponse)[vs[1].(int)]
	}).(SparkMavenPackageInvokeResponseOutput)
}

type SparkMavenPackageResponse struct {
	Artifact *string `pulumi:"artifact"`
	Group    *string `pulumi:"group"`
	Version  *string `pulumi:"version"`
}

// SparkMavenPackageResponseInput is an input type that accepts SparkMavenPackageResponseArgs and SparkMavenPackageResponseOutput values.
// You can construct a concrete instance of `SparkMavenPackageResponseInput` via:
//
//          SparkMavenPackageResponseArgs{...}
type SparkMavenPackageResponseInput interface {
	pulumi.Input

	ToSparkMavenPackageResponseOutput() SparkMavenPackageResponseOutput
	ToSparkMavenPackageResponseOutputWithContext(context.Context) SparkMavenPackageResponseOutput
}

type SparkMavenPackageResponseArgs struct {
	Artifact pulumi.StringPtrInput `pulumi:"artifact"`
	Group    pulumi.StringPtrInput `pulumi:"group"`
	Version  pulumi.StringPtrInput `pulumi:"version"`
}

func (SparkMavenPackageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkMavenPackageResponse)(nil)).Elem()
}

func (i SparkMavenPackageResponseArgs) ToSparkMavenPackageResponseOutput() SparkMavenPackageResponseOutput {
	return i.ToSparkMavenPackageResponseOutputWithContext(context.Background())
}

func (i SparkMavenPackageResponseArgs) ToSparkMavenPackageResponseOutputWithContext(ctx context.Context) SparkMavenPackageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkMavenPackageResponseOutput)
}

// SparkMavenPackageResponseArrayInput is an input type that accepts SparkMavenPackageResponseArray and SparkMavenPackageResponseArrayOutput values.
// You can construct a concrete instance of `SparkMavenPackageResponseArrayInput` via:
//
//          SparkMavenPackageResponseArray{ SparkMavenPackageResponseArgs{...} }
type SparkMavenPackageResponseArrayInput interface {
	pulumi.Input

	ToSparkMavenPackageResponseArrayOutput() SparkMavenPackageResponseArrayOutput
	ToSparkMavenPackageResponseArrayOutputWithContext(context.Context) SparkMavenPackageResponseArrayOutput
}

type SparkMavenPackageResponseArray []SparkMavenPackageResponseInput

func (SparkMavenPackageResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SparkMavenPackageResponse)(nil)).Elem()
}

func (i SparkMavenPackageResponseArray) ToSparkMavenPackageResponseArrayOutput() SparkMavenPackageResponseArrayOutput {
	return i.ToSparkMavenPackageResponseArrayOutputWithContext(context.Background())
}

func (i SparkMavenPackageResponseArray) ToSparkMavenPackageResponseArrayOutputWithContext(ctx context.Context) SparkMavenPackageResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkMavenPackageResponseArrayOutput)
}

type SparkMavenPackageResponseOutput struct{ *pulumi.OutputState }

func (SparkMavenPackageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkMavenPackageResponse)(nil)).Elem()
}

func (o SparkMavenPackageResponseOutput) ToSparkMavenPackageResponseOutput() SparkMavenPackageResponseOutput {
	return o
}

func (o SparkMavenPackageResponseOutput) ToSparkMavenPackageResponseOutputWithContext(ctx context.Context) SparkMavenPackageResponseOutput {
	return o
}

func (o SparkMavenPackageResponseOutput) Artifact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkMavenPackageResponse) *string { return v.Artifact }).(pulumi.StringPtrOutput)
}

func (o SparkMavenPackageResponseOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkMavenPackageResponse) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o SparkMavenPackageResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkMavenPackageResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SparkMavenPackageResponseArrayOutput struct{ *pulumi.OutputState }

func (SparkMavenPackageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SparkMavenPackageResponse)(nil)).Elem()
}

func (o SparkMavenPackageResponseArrayOutput) ToSparkMavenPackageResponseArrayOutput() SparkMavenPackageResponseArrayOutput {
	return o
}

func (o SparkMavenPackageResponseArrayOutput) ToSparkMavenPackageResponseArrayOutputWithContext(ctx context.Context) SparkMavenPackageResponseArrayOutput {
	return o
}

func (o SparkMavenPackageResponseArrayOutput) Index(i pulumi.IntInput) SparkMavenPackageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SparkMavenPackageResponse {
		return vs[0].([]SparkMavenPackageResponse)[vs[1].(int)]
	}).(SparkMavenPackageResponseOutput)
}

// The ssl configuration for scoring
type SslConfiguration struct {
	// Cert data
	Cert *string `pulumi:"cert"`
	// CNAME of the cert
	Cname *string `pulumi:"cname"`
	// Key data
	Key *string `pulumi:"key"`
	// Enable or disable ssl for scoring
	Status *string `pulumi:"status"`
}

// SslConfigurationInput is an input type that accepts SslConfigurationArgs and SslConfigurationOutput values.
// You can construct a concrete instance of `SslConfigurationInput` via:
//
//          SslConfigurationArgs{...}
type SslConfigurationInput interface {
	pulumi.Input

	ToSslConfigurationOutput() SslConfigurationOutput
	ToSslConfigurationOutputWithContext(context.Context) SslConfigurationOutput
}

// The ssl configuration for scoring
type SslConfigurationArgs struct {
	// Cert data
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// CNAME of the cert
	Cname pulumi.StringPtrInput `pulumi:"cname"`
	// Key data
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Enable or disable ssl for scoring
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SslConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfiguration)(nil)).Elem()
}

func (i SslConfigurationArgs) ToSslConfigurationOutput() SslConfigurationOutput {
	return i.ToSslConfigurationOutputWithContext(context.Background())
}

func (i SslConfigurationArgs) ToSslConfigurationOutputWithContext(ctx context.Context) SslConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationOutput)
}

func (i SslConfigurationArgs) ToSslConfigurationPtrOutput() SslConfigurationPtrOutput {
	return i.ToSslConfigurationPtrOutputWithContext(context.Background())
}

func (i SslConfigurationArgs) ToSslConfigurationPtrOutputWithContext(ctx context.Context) SslConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationOutput).ToSslConfigurationPtrOutputWithContext(ctx)
}

// SslConfigurationPtrInput is an input type that accepts SslConfigurationArgs, SslConfigurationPtr and SslConfigurationPtrOutput values.
// You can construct a concrete instance of `SslConfigurationPtrInput` via:
//
//          SslConfigurationArgs{...}
//
//  or:
//
//          nil
type SslConfigurationPtrInput interface {
	pulumi.Input

	ToSslConfigurationPtrOutput() SslConfigurationPtrOutput
	ToSslConfigurationPtrOutputWithContext(context.Context) SslConfigurationPtrOutput
}

type sslConfigurationPtrType SslConfigurationArgs

func SslConfigurationPtr(v *SslConfigurationArgs) SslConfigurationPtrInput {
	return (*sslConfigurationPtrType)(v)
}

func (*sslConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfiguration)(nil)).Elem()
}

func (i *sslConfigurationPtrType) ToSslConfigurationPtrOutput() SslConfigurationPtrOutput {
	return i.ToSslConfigurationPtrOutputWithContext(context.Background())
}

func (i *sslConfigurationPtrType) ToSslConfigurationPtrOutputWithContext(ctx context.Context) SslConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationPtrOutput)
}

// The ssl configuration for scoring
type SslConfigurationOutput struct{ *pulumi.OutputState }

func (SslConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfiguration)(nil)).Elem()
}

func (o SslConfigurationOutput) ToSslConfigurationOutput() SslConfigurationOutput {
	return o
}

func (o SslConfigurationOutput) ToSslConfigurationOutputWithContext(ctx context.Context) SslConfigurationOutput {
	return o
}

func (o SslConfigurationOutput) ToSslConfigurationPtrOutput() SslConfigurationPtrOutput {
	return o.ToSslConfigurationPtrOutputWithContext(context.Background())
}

func (o SslConfigurationOutput) ToSslConfigurationPtrOutputWithContext(ctx context.Context) SslConfigurationPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *SslConfiguration {
		return &v
	}).(SslConfigurationPtrOutput)
}

// Cert data
func (o SslConfigurationOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// CNAME of the cert
func (o SslConfigurationOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

// Key data
func (o SslConfigurationOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Enable or disable ssl for scoring
func (o SslConfigurationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfiguration) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SslConfigurationPtrOutput struct{ *pulumi.OutputState }

func (SslConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfiguration)(nil)).Elem()
}

func (o SslConfigurationPtrOutput) ToSslConfigurationPtrOutput() SslConfigurationPtrOutput {
	return o
}

func (o SslConfigurationPtrOutput) ToSslConfigurationPtrOutputWithContext(ctx context.Context) SslConfigurationPtrOutput {
	return o
}

func (o SslConfigurationPtrOutput) Elem() SslConfigurationOutput {
	return o.ApplyT(func(v *SslConfiguration) SslConfiguration { return *v }).(SslConfigurationOutput)
}

// Cert data
func (o SslConfigurationPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// CNAME of the cert
func (o SslConfigurationPtrOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Cname
	}).(pulumi.StringPtrOutput)
}

// Key data
func (o SslConfigurationPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Enable or disable ssl for scoring
func (o SslConfigurationPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The ssl configuration for scoring
type SslConfigurationInvokeResponse struct {
	// Cert data
	Cert *string `pulumi:"cert"`
	// CNAME of the cert
	Cname *string `pulumi:"cname"`
	// Key data
	Key *string `pulumi:"key"`
	// Enable or disable ssl for scoring
	Status *string `pulumi:"status"`
}

// SslConfigurationInvokeResponseInput is an input type that accepts SslConfigurationInvokeResponseArgs and SslConfigurationInvokeResponseOutput values.
// You can construct a concrete instance of `SslConfigurationInvokeResponseInput` via:
//
//          SslConfigurationInvokeResponseArgs{...}
type SslConfigurationInvokeResponseInput interface {
	pulumi.Input

	ToSslConfigurationInvokeResponseOutput() SslConfigurationInvokeResponseOutput
	ToSslConfigurationInvokeResponseOutputWithContext(context.Context) SslConfigurationInvokeResponseOutput
}

// The ssl configuration for scoring
type SslConfigurationInvokeResponseArgs struct {
	// Cert data
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// CNAME of the cert
	Cname pulumi.StringPtrInput `pulumi:"cname"`
	// Key data
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Enable or disable ssl for scoring
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SslConfigurationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigurationInvokeResponse)(nil)).Elem()
}

func (i SslConfigurationInvokeResponseArgs) ToSslConfigurationInvokeResponseOutput() SslConfigurationInvokeResponseOutput {
	return i.ToSslConfigurationInvokeResponseOutputWithContext(context.Background())
}

func (i SslConfigurationInvokeResponseArgs) ToSslConfigurationInvokeResponseOutputWithContext(ctx context.Context) SslConfigurationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationInvokeResponseOutput)
}

func (i SslConfigurationInvokeResponseArgs) ToSslConfigurationInvokeResponsePtrOutput() SslConfigurationInvokeResponsePtrOutput {
	return i.ToSslConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SslConfigurationInvokeResponseArgs) ToSslConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) SslConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationInvokeResponseOutput).ToSslConfigurationInvokeResponsePtrOutputWithContext(ctx)
}

// SslConfigurationInvokeResponsePtrInput is an input type that accepts SslConfigurationInvokeResponseArgs, SslConfigurationInvokeResponsePtr and SslConfigurationInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SslConfigurationInvokeResponsePtrInput` via:
//
//          SslConfigurationInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SslConfigurationInvokeResponsePtrInput interface {
	pulumi.Input

	ToSslConfigurationInvokeResponsePtrOutput() SslConfigurationInvokeResponsePtrOutput
	ToSslConfigurationInvokeResponsePtrOutputWithContext(context.Context) SslConfigurationInvokeResponsePtrOutput
}

type sslConfigurationInvokeResponsePtrType SslConfigurationInvokeResponseArgs

func SslConfigurationInvokeResponsePtr(v *SslConfigurationInvokeResponseArgs) SslConfigurationInvokeResponsePtrInput {
	return (*sslConfigurationInvokeResponsePtrType)(v)
}

func (*sslConfigurationInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfigurationInvokeResponse)(nil)).Elem()
}

func (i *sslConfigurationInvokeResponsePtrType) ToSslConfigurationInvokeResponsePtrOutput() SslConfigurationInvokeResponsePtrOutput {
	return i.ToSslConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *sslConfigurationInvokeResponsePtrType) ToSslConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) SslConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationInvokeResponsePtrOutput)
}

// The ssl configuration for scoring
type SslConfigurationInvokeResponseOutput struct{ *pulumi.OutputState }

func (SslConfigurationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigurationInvokeResponse)(nil)).Elem()
}

func (o SslConfigurationInvokeResponseOutput) ToSslConfigurationInvokeResponseOutput() SslConfigurationInvokeResponseOutput {
	return o
}

func (o SslConfigurationInvokeResponseOutput) ToSslConfigurationInvokeResponseOutputWithContext(ctx context.Context) SslConfigurationInvokeResponseOutput {
	return o
}

func (o SslConfigurationInvokeResponseOutput) ToSslConfigurationInvokeResponsePtrOutput() SslConfigurationInvokeResponsePtrOutput {
	return o.ToSslConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SslConfigurationInvokeResponseOutput) ToSslConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) SslConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v SslConfigurationInvokeResponse) *SslConfigurationInvokeResponse {
		return &v
	}).(SslConfigurationInvokeResponsePtrOutput)
}

// Cert data
func (o SslConfigurationInvokeResponseOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationInvokeResponse) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// CNAME of the cert
func (o SslConfigurationInvokeResponseOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationInvokeResponse) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

// Key data
func (o SslConfigurationInvokeResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationInvokeResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Enable or disable ssl for scoring
func (o SslConfigurationInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SslConfigurationInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SslConfigurationInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfigurationInvokeResponse)(nil)).Elem()
}

func (o SslConfigurationInvokeResponsePtrOutput) ToSslConfigurationInvokeResponsePtrOutput() SslConfigurationInvokeResponsePtrOutput {
	return o
}

func (o SslConfigurationInvokeResponsePtrOutput) ToSslConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) SslConfigurationInvokeResponsePtrOutput {
	return o
}

func (o SslConfigurationInvokeResponsePtrOutput) Elem() SslConfigurationInvokeResponseOutput {
	return o.ApplyT(func(v *SslConfigurationInvokeResponse) SslConfigurationInvokeResponse { return *v }).(SslConfigurationInvokeResponseOutput)
}

// Cert data
func (o SslConfigurationInvokeResponsePtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// CNAME of the cert
func (o SslConfigurationInvokeResponsePtrOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cname
	}).(pulumi.StringPtrOutput)
}

// Key data
func (o SslConfigurationInvokeResponsePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Enable or disable ssl for scoring
func (o SslConfigurationInvokeResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The ssl configuration for scoring
type SslConfigurationResponse struct {
	// Cert data
	Cert *string `pulumi:"cert"`
	// CNAME of the cert
	Cname *string `pulumi:"cname"`
	// Key data
	Key *string `pulumi:"key"`
	// Enable or disable ssl for scoring
	Status *string `pulumi:"status"`
}

// SslConfigurationResponseInput is an input type that accepts SslConfigurationResponseArgs and SslConfigurationResponseOutput values.
// You can construct a concrete instance of `SslConfigurationResponseInput` via:
//
//          SslConfigurationResponseArgs{...}
type SslConfigurationResponseInput interface {
	pulumi.Input

	ToSslConfigurationResponseOutput() SslConfigurationResponseOutput
	ToSslConfigurationResponseOutputWithContext(context.Context) SslConfigurationResponseOutput
}

// The ssl configuration for scoring
type SslConfigurationResponseArgs struct {
	// Cert data
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// CNAME of the cert
	Cname pulumi.StringPtrInput `pulumi:"cname"`
	// Key data
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Enable or disable ssl for scoring
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SslConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigurationResponse)(nil)).Elem()
}

func (i SslConfigurationResponseArgs) ToSslConfigurationResponseOutput() SslConfigurationResponseOutput {
	return i.ToSslConfigurationResponseOutputWithContext(context.Background())
}

func (i SslConfigurationResponseArgs) ToSslConfigurationResponseOutputWithContext(ctx context.Context) SslConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationResponseOutput)
}

func (i SslConfigurationResponseArgs) ToSslConfigurationResponsePtrOutput() SslConfigurationResponsePtrOutput {
	return i.ToSslConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i SslConfigurationResponseArgs) ToSslConfigurationResponsePtrOutputWithContext(ctx context.Context) SslConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationResponseOutput).ToSslConfigurationResponsePtrOutputWithContext(ctx)
}

// SslConfigurationResponsePtrInput is an input type that accepts SslConfigurationResponseArgs, SslConfigurationResponsePtr and SslConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `SslConfigurationResponsePtrInput` via:
//
//          SslConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type SslConfigurationResponsePtrInput interface {
	pulumi.Input

	ToSslConfigurationResponsePtrOutput() SslConfigurationResponsePtrOutput
	ToSslConfigurationResponsePtrOutputWithContext(context.Context) SslConfigurationResponsePtrOutput
}

type sslConfigurationResponsePtrType SslConfigurationResponseArgs

func SslConfigurationResponsePtr(v *SslConfigurationResponseArgs) SslConfigurationResponsePtrInput {
	return (*sslConfigurationResponsePtrType)(v)
}

func (*sslConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfigurationResponse)(nil)).Elem()
}

func (i *sslConfigurationResponsePtrType) ToSslConfigurationResponsePtrOutput() SslConfigurationResponsePtrOutput {
	return i.ToSslConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *sslConfigurationResponsePtrType) ToSslConfigurationResponsePtrOutputWithContext(ctx context.Context) SslConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslConfigurationResponsePtrOutput)
}

// The ssl configuration for scoring
type SslConfigurationResponseOutput struct{ *pulumi.OutputState }

func (SslConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigurationResponse)(nil)).Elem()
}

func (o SslConfigurationResponseOutput) ToSslConfigurationResponseOutput() SslConfigurationResponseOutput {
	return o
}

func (o SslConfigurationResponseOutput) ToSslConfigurationResponseOutputWithContext(ctx context.Context) SslConfigurationResponseOutput {
	return o
}

func (o SslConfigurationResponseOutput) ToSslConfigurationResponsePtrOutput() SslConfigurationResponsePtrOutput {
	return o.ToSslConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o SslConfigurationResponseOutput) ToSslConfigurationResponsePtrOutputWithContext(ctx context.Context) SslConfigurationResponsePtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *SslConfigurationResponse {
		return &v
	}).(SslConfigurationResponsePtrOutput)
}

// Cert data
func (o SslConfigurationResponseOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// CNAME of the cert
func (o SslConfigurationResponseOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

// Key data
func (o SslConfigurationResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Enable or disable ssl for scoring
func (o SslConfigurationResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslConfigurationResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SslConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (SslConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfigurationResponse)(nil)).Elem()
}

func (o SslConfigurationResponsePtrOutput) ToSslConfigurationResponsePtrOutput() SslConfigurationResponsePtrOutput {
	return o
}

func (o SslConfigurationResponsePtrOutput) ToSslConfigurationResponsePtrOutputWithContext(ctx context.Context) SslConfigurationResponsePtrOutput {
	return o
}

func (o SslConfigurationResponsePtrOutput) Elem() SslConfigurationResponseOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) SslConfigurationResponse { return *v }).(SslConfigurationResponseOutput)
}

// Cert data
func (o SslConfigurationResponsePtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// CNAME of the cert
func (o SslConfigurationResponsePtrOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cname
	}).(pulumi.StringPtrOutput)
}

// Key data
func (o SslConfigurationResponsePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Enable or disable ssl for scoring
func (o SslConfigurationResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// A system service running on a compute.
type SystemServiceInvokeResponse struct {
	// Public IP address
	PublicIpAddress string `pulumi:"publicIpAddress"`
	// The type of this system service.
	SystemServiceType string `pulumi:"systemServiceType"`
	// The version for this type.
	Version string `pulumi:"version"`
}

// SystemServiceInvokeResponseInput is an input type that accepts SystemServiceInvokeResponseArgs and SystemServiceInvokeResponseOutput values.
// You can construct a concrete instance of `SystemServiceInvokeResponseInput` via:
//
//          SystemServiceInvokeResponseArgs{...}
type SystemServiceInvokeResponseInput interface {
	pulumi.Input

	ToSystemServiceInvokeResponseOutput() SystemServiceInvokeResponseOutput
	ToSystemServiceInvokeResponseOutputWithContext(context.Context) SystemServiceInvokeResponseOutput
}

// A system service running on a compute.
type SystemServiceInvokeResponseArgs struct {
	// Public IP address
	PublicIpAddress pulumi.StringInput `pulumi:"publicIpAddress"`
	// The type of this system service.
	SystemServiceType pulumi.StringInput `pulumi:"systemServiceType"`
	// The version for this type.
	Version pulumi.StringInput `pulumi:"version"`
}

func (SystemServiceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemServiceInvokeResponse)(nil)).Elem()
}

func (i SystemServiceInvokeResponseArgs) ToSystemServiceInvokeResponseOutput() SystemServiceInvokeResponseOutput {
	return i.ToSystemServiceInvokeResponseOutputWithContext(context.Background())
}

func (i SystemServiceInvokeResponseArgs) ToSystemServiceInvokeResponseOutputWithContext(ctx context.Context) SystemServiceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemServiceInvokeResponseOutput)
}

// SystemServiceInvokeResponseArrayInput is an input type that accepts SystemServiceInvokeResponseArray and SystemServiceInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SystemServiceInvokeResponseArrayInput` via:
//
//          SystemServiceInvokeResponseArray{ SystemServiceInvokeResponseArgs{...} }
type SystemServiceInvokeResponseArrayInput interface {
	pulumi.Input

	ToSystemServiceInvokeResponseArrayOutput() SystemServiceInvokeResponseArrayOutput
	ToSystemServiceInvokeResponseArrayOutputWithContext(context.Context) SystemServiceInvokeResponseArrayOutput
}

type SystemServiceInvokeResponseArray []SystemServiceInvokeResponseInput

func (SystemServiceInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemServiceInvokeResponse)(nil)).Elem()
}

func (i SystemServiceInvokeResponseArray) ToSystemServiceInvokeResponseArrayOutput() SystemServiceInvokeResponseArrayOutput {
	return i.ToSystemServiceInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SystemServiceInvokeResponseArray) ToSystemServiceInvokeResponseArrayOutputWithContext(ctx context.Context) SystemServiceInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemServiceInvokeResponseArrayOutput)
}

// A system service running on a compute.
type SystemServiceInvokeResponseOutput struct{ *pulumi.OutputState }

func (SystemServiceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemServiceInvokeResponse)(nil)).Elem()
}

func (o SystemServiceInvokeResponseOutput) ToSystemServiceInvokeResponseOutput() SystemServiceInvokeResponseOutput {
	return o
}

func (o SystemServiceInvokeResponseOutput) ToSystemServiceInvokeResponseOutputWithContext(ctx context.Context) SystemServiceInvokeResponseOutput {
	return o
}

// Public IP address
func (o SystemServiceInvokeResponseOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v SystemServiceInvokeResponse) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

// The type of this system service.
func (o SystemServiceInvokeResponseOutput) SystemServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v SystemServiceInvokeResponse) string { return v.SystemServiceType }).(pulumi.StringOutput)
}

// The version for this type.
func (o SystemServiceInvokeResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v SystemServiceInvokeResponse) string { return v.Version }).(pulumi.StringOutput)
}

type SystemServiceInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SystemServiceInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemServiceInvokeResponse)(nil)).Elem()
}

func (o SystemServiceInvokeResponseArrayOutput) ToSystemServiceInvokeResponseArrayOutput() SystemServiceInvokeResponseArrayOutput {
	return o
}

func (o SystemServiceInvokeResponseArrayOutput) ToSystemServiceInvokeResponseArrayOutputWithContext(ctx context.Context) SystemServiceInvokeResponseArrayOutput {
	return o
}

func (o SystemServiceInvokeResponseArrayOutput) Index(i pulumi.IntInput) SystemServiceInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemServiceInvokeResponse {
		return vs[0].([]SystemServiceInvokeResponse)[vs[1].(int)]
	}).(SystemServiceInvokeResponseOutput)
}

// A system service running on a compute.
type SystemServiceResponse struct {
	// Public IP address
	PublicIpAddress string `pulumi:"publicIpAddress"`
	// The type of this system service.
	SystemServiceType string `pulumi:"systemServiceType"`
	// The version for this type.
	Version string `pulumi:"version"`
}

// SystemServiceResponseInput is an input type that accepts SystemServiceResponseArgs and SystemServiceResponseOutput values.
// You can construct a concrete instance of `SystemServiceResponseInput` via:
//
//          SystemServiceResponseArgs{...}
type SystemServiceResponseInput interface {
	pulumi.Input

	ToSystemServiceResponseOutput() SystemServiceResponseOutput
	ToSystemServiceResponseOutputWithContext(context.Context) SystemServiceResponseOutput
}

// A system service running on a compute.
type SystemServiceResponseArgs struct {
	// Public IP address
	PublicIpAddress pulumi.StringInput `pulumi:"publicIpAddress"`
	// The type of this system service.
	SystemServiceType pulumi.StringInput `pulumi:"systemServiceType"`
	// The version for this type.
	Version pulumi.StringInput `pulumi:"version"`
}

func (SystemServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemServiceResponse)(nil)).Elem()
}

func (i SystemServiceResponseArgs) ToSystemServiceResponseOutput() SystemServiceResponseOutput {
	return i.ToSystemServiceResponseOutputWithContext(context.Background())
}

func (i SystemServiceResponseArgs) ToSystemServiceResponseOutputWithContext(ctx context.Context) SystemServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemServiceResponseOutput)
}

// SystemServiceResponseArrayInput is an input type that accepts SystemServiceResponseArray and SystemServiceResponseArrayOutput values.
// You can construct a concrete instance of `SystemServiceResponseArrayInput` via:
//
//          SystemServiceResponseArray{ SystemServiceResponseArgs{...} }
type SystemServiceResponseArrayInput interface {
	pulumi.Input

	ToSystemServiceResponseArrayOutput() SystemServiceResponseArrayOutput
	ToSystemServiceResponseArrayOutputWithContext(context.Context) SystemServiceResponseArrayOutput
}

type SystemServiceResponseArray []SystemServiceResponseInput

func (SystemServiceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemServiceResponse)(nil)).Elem()
}

func (i SystemServiceResponseArray) ToSystemServiceResponseArrayOutput() SystemServiceResponseArrayOutput {
	return i.ToSystemServiceResponseArrayOutputWithContext(context.Background())
}

func (i SystemServiceResponseArray) ToSystemServiceResponseArrayOutputWithContext(ctx context.Context) SystemServiceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemServiceResponseArrayOutput)
}

// A system service running on a compute.
type SystemServiceResponseOutput struct{ *pulumi.OutputState }

func (SystemServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemServiceResponse)(nil)).Elem()
}

func (o SystemServiceResponseOutput) ToSystemServiceResponseOutput() SystemServiceResponseOutput {
	return o
}

func (o SystemServiceResponseOutput) ToSystemServiceResponseOutputWithContext(ctx context.Context) SystemServiceResponseOutput {
	return o
}

// Public IP address
func (o SystemServiceResponseOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v SystemServiceResponse) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

// The type of this system service.
func (o SystemServiceResponseOutput) SystemServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v SystemServiceResponse) string { return v.SystemServiceType }).(pulumi.StringOutput)
}

// The version for this type.
func (o SystemServiceResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v SystemServiceResponse) string { return v.Version }).(pulumi.StringOutput)
}

type SystemServiceResponseArrayOutput struct{ *pulumi.OutputState }

func (SystemServiceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemServiceResponse)(nil)).Elem()
}

func (o SystemServiceResponseArrayOutput) ToSystemServiceResponseArrayOutput() SystemServiceResponseArrayOutput {
	return o
}

func (o SystemServiceResponseArrayOutput) ToSystemServiceResponseArrayOutputWithContext(ctx context.Context) SystemServiceResponseArrayOutput {
	return o
}

func (o SystemServiceResponseArrayOutput) Index(i pulumi.IntInput) SystemServiceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemServiceResponse {
		return vs[0].([]SystemServiceResponse)[vs[1].(int)]
	}).(SystemServiceResponseOutput)
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentials struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName string `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword *string `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey *string `pulumi:"adminUserSshPublicKey"`
}

// UserAccountCredentialsInput is an input type that accepts UserAccountCredentialsArgs and UserAccountCredentialsOutput values.
// You can construct a concrete instance of `UserAccountCredentialsInput` via:
//
//          UserAccountCredentialsArgs{...}
type UserAccountCredentialsInput interface {
	pulumi.Input

	ToUserAccountCredentialsOutput() UserAccountCredentialsOutput
	ToUserAccountCredentialsOutputWithContext(context.Context) UserAccountCredentialsOutput
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsArgs struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName pulumi.StringInput `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword pulumi.StringPtrInput `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey pulumi.StringPtrInput `pulumi:"adminUserSshPublicKey"`
}

func (UserAccountCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountCredentials)(nil)).Elem()
}

func (i UserAccountCredentialsArgs) ToUserAccountCredentialsOutput() UserAccountCredentialsOutput {
	return i.ToUserAccountCredentialsOutputWithContext(context.Background())
}

func (i UserAccountCredentialsArgs) ToUserAccountCredentialsOutputWithContext(ctx context.Context) UserAccountCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsOutput)
}

func (i UserAccountCredentialsArgs) ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput {
	return i.ToUserAccountCredentialsPtrOutputWithContext(context.Background())
}

func (i UserAccountCredentialsArgs) ToUserAccountCredentialsPtrOutputWithContext(ctx context.Context) UserAccountCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsOutput).ToUserAccountCredentialsPtrOutputWithContext(ctx)
}

// UserAccountCredentialsPtrInput is an input type that accepts UserAccountCredentialsArgs, UserAccountCredentialsPtr and UserAccountCredentialsPtrOutput values.
// You can construct a concrete instance of `UserAccountCredentialsPtrInput` via:
//
//          UserAccountCredentialsArgs{...}
//
//  or:
//
//          nil
type UserAccountCredentialsPtrInput interface {
	pulumi.Input

	ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput
	ToUserAccountCredentialsPtrOutputWithContext(context.Context) UserAccountCredentialsPtrOutput
}

type userAccountCredentialsPtrType UserAccountCredentialsArgs

func UserAccountCredentialsPtr(v *UserAccountCredentialsArgs) UserAccountCredentialsPtrInput {
	return (*userAccountCredentialsPtrType)(v)
}

func (*userAccountCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountCredentials)(nil)).Elem()
}

func (i *userAccountCredentialsPtrType) ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput {
	return i.ToUserAccountCredentialsPtrOutputWithContext(context.Background())
}

func (i *userAccountCredentialsPtrType) ToUserAccountCredentialsPtrOutputWithContext(ctx context.Context) UserAccountCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsPtrOutput)
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountCredentials)(nil)).Elem()
}

func (o UserAccountCredentialsOutput) ToUserAccountCredentialsOutput() UserAccountCredentialsOutput {
	return o
}

func (o UserAccountCredentialsOutput) ToUserAccountCredentialsOutputWithContext(ctx context.Context) UserAccountCredentialsOutput {
	return o
}

func (o UserAccountCredentialsOutput) ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput {
	return o.ToUserAccountCredentialsPtrOutputWithContext(context.Background())
}

func (o UserAccountCredentialsOutput) ToUserAccountCredentialsPtrOutputWithContext(ctx context.Context) UserAccountCredentialsPtrOutput {
	return o.ApplyT(func(v UserAccountCredentials) *UserAccountCredentials {
		return &v
	}).(UserAccountCredentialsPtrOutput)
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsOutput) AdminUserName() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccountCredentials) string { return v.AdminUserName }).(pulumi.StringOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentials) *string { return v.AdminUserPassword }).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentials) *string { return v.AdminUserSshPublicKey }).(pulumi.StringPtrOutput)
}

type UserAccountCredentialsPtrOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountCredentials)(nil)).Elem()
}

func (o UserAccountCredentialsPtrOutput) ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput {
	return o
}

func (o UserAccountCredentialsPtrOutput) ToUserAccountCredentialsPtrOutputWithContext(ctx context.Context) UserAccountCredentialsPtrOutput {
	return o
}

func (o UserAccountCredentialsPtrOutput) Elem() UserAccountCredentialsOutput {
	return o.ApplyT(func(v *UserAccountCredentials) UserAccountCredentials { return *v }).(UserAccountCredentialsOutput)
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsPtrOutput) AdminUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUserName
	}).(pulumi.StringPtrOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsPtrOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserPassword
	}).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsPtrOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserSshPublicKey
	}).(pulumi.StringPtrOutput)
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsInvokeResponse struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName string `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword *string `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey *string `pulumi:"adminUserSshPublicKey"`
}

// UserAccountCredentialsInvokeResponseInput is an input type that accepts UserAccountCredentialsInvokeResponseArgs and UserAccountCredentialsInvokeResponseOutput values.
// You can construct a concrete instance of `UserAccountCredentialsInvokeResponseInput` via:
//
//          UserAccountCredentialsInvokeResponseArgs{...}
type UserAccountCredentialsInvokeResponseInput interface {
	pulumi.Input

	ToUserAccountCredentialsInvokeResponseOutput() UserAccountCredentialsInvokeResponseOutput
	ToUserAccountCredentialsInvokeResponseOutputWithContext(context.Context) UserAccountCredentialsInvokeResponseOutput
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsInvokeResponseArgs struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName pulumi.StringInput `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword pulumi.StringPtrInput `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey pulumi.StringPtrInput `pulumi:"adminUserSshPublicKey"`
}

func (UserAccountCredentialsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountCredentialsInvokeResponse)(nil)).Elem()
}

func (i UserAccountCredentialsInvokeResponseArgs) ToUserAccountCredentialsInvokeResponseOutput() UserAccountCredentialsInvokeResponseOutput {
	return i.ToUserAccountCredentialsInvokeResponseOutputWithContext(context.Background())
}

func (i UserAccountCredentialsInvokeResponseArgs) ToUserAccountCredentialsInvokeResponseOutputWithContext(ctx context.Context) UserAccountCredentialsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsInvokeResponseOutput)
}

func (i UserAccountCredentialsInvokeResponseArgs) ToUserAccountCredentialsInvokeResponsePtrOutput() UserAccountCredentialsInvokeResponsePtrOutput {
	return i.ToUserAccountCredentialsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i UserAccountCredentialsInvokeResponseArgs) ToUserAccountCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) UserAccountCredentialsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsInvokeResponseOutput).ToUserAccountCredentialsInvokeResponsePtrOutputWithContext(ctx)
}

// UserAccountCredentialsInvokeResponsePtrInput is an input type that accepts UserAccountCredentialsInvokeResponseArgs, UserAccountCredentialsInvokeResponsePtr and UserAccountCredentialsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `UserAccountCredentialsInvokeResponsePtrInput` via:
//
//          UserAccountCredentialsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type UserAccountCredentialsInvokeResponsePtrInput interface {
	pulumi.Input

	ToUserAccountCredentialsInvokeResponsePtrOutput() UserAccountCredentialsInvokeResponsePtrOutput
	ToUserAccountCredentialsInvokeResponsePtrOutputWithContext(context.Context) UserAccountCredentialsInvokeResponsePtrOutput
}

type userAccountCredentialsInvokeResponsePtrType UserAccountCredentialsInvokeResponseArgs

func UserAccountCredentialsInvokeResponsePtr(v *UserAccountCredentialsInvokeResponseArgs) UserAccountCredentialsInvokeResponsePtrInput {
	return (*userAccountCredentialsInvokeResponsePtrType)(v)
}

func (*userAccountCredentialsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountCredentialsInvokeResponse)(nil)).Elem()
}

func (i *userAccountCredentialsInvokeResponsePtrType) ToUserAccountCredentialsInvokeResponsePtrOutput() UserAccountCredentialsInvokeResponsePtrOutput {
	return i.ToUserAccountCredentialsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *userAccountCredentialsInvokeResponsePtrType) ToUserAccountCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) UserAccountCredentialsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsInvokeResponsePtrOutput)
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsInvokeResponseOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountCredentialsInvokeResponse)(nil)).Elem()
}

func (o UserAccountCredentialsInvokeResponseOutput) ToUserAccountCredentialsInvokeResponseOutput() UserAccountCredentialsInvokeResponseOutput {
	return o
}

func (o UserAccountCredentialsInvokeResponseOutput) ToUserAccountCredentialsInvokeResponseOutputWithContext(ctx context.Context) UserAccountCredentialsInvokeResponseOutput {
	return o
}

func (o UserAccountCredentialsInvokeResponseOutput) ToUserAccountCredentialsInvokeResponsePtrOutput() UserAccountCredentialsInvokeResponsePtrOutput {
	return o.ToUserAccountCredentialsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o UserAccountCredentialsInvokeResponseOutput) ToUserAccountCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) UserAccountCredentialsInvokeResponsePtrOutput {
	return o.ApplyT(func(v UserAccountCredentialsInvokeResponse) *UserAccountCredentialsInvokeResponse {
		return &v
	}).(UserAccountCredentialsInvokeResponsePtrOutput)
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsInvokeResponseOutput) AdminUserName() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccountCredentialsInvokeResponse) string { return v.AdminUserName }).(pulumi.StringOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsInvokeResponseOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentialsInvokeResponse) *string { return v.AdminUserPassword }).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsInvokeResponseOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentialsInvokeResponse) *string { return v.AdminUserSshPublicKey }).(pulumi.StringPtrOutput)
}

type UserAccountCredentialsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountCredentialsInvokeResponse)(nil)).Elem()
}

func (o UserAccountCredentialsInvokeResponsePtrOutput) ToUserAccountCredentialsInvokeResponsePtrOutput() UserAccountCredentialsInvokeResponsePtrOutput {
	return o
}

func (o UserAccountCredentialsInvokeResponsePtrOutput) ToUserAccountCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) UserAccountCredentialsInvokeResponsePtrOutput {
	return o
}

func (o UserAccountCredentialsInvokeResponsePtrOutput) Elem() UserAccountCredentialsInvokeResponseOutput {
	return o.ApplyT(func(v *UserAccountCredentialsInvokeResponse) UserAccountCredentialsInvokeResponse { return *v }).(UserAccountCredentialsInvokeResponseOutput)
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsInvokeResponsePtrOutput) AdminUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentialsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUserName
	}).(pulumi.StringPtrOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsInvokeResponsePtrOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentialsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserPassword
	}).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsInvokeResponsePtrOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentialsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserSshPublicKey
	}).(pulumi.StringPtrOutput)
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsResponse struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName string `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword *string `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey *string `pulumi:"adminUserSshPublicKey"`
}

// UserAccountCredentialsResponseInput is an input type that accepts UserAccountCredentialsResponseArgs and UserAccountCredentialsResponseOutput values.
// You can construct a concrete instance of `UserAccountCredentialsResponseInput` via:
//
//          UserAccountCredentialsResponseArgs{...}
type UserAccountCredentialsResponseInput interface {
	pulumi.Input

	ToUserAccountCredentialsResponseOutput() UserAccountCredentialsResponseOutput
	ToUserAccountCredentialsResponseOutputWithContext(context.Context) UserAccountCredentialsResponseOutput
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsResponseArgs struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName pulumi.StringInput `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword pulumi.StringPtrInput `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey pulumi.StringPtrInput `pulumi:"adminUserSshPublicKey"`
}

func (UserAccountCredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountCredentialsResponse)(nil)).Elem()
}

func (i UserAccountCredentialsResponseArgs) ToUserAccountCredentialsResponseOutput() UserAccountCredentialsResponseOutput {
	return i.ToUserAccountCredentialsResponseOutputWithContext(context.Background())
}

func (i UserAccountCredentialsResponseArgs) ToUserAccountCredentialsResponseOutputWithContext(ctx context.Context) UserAccountCredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsResponseOutput)
}

func (i UserAccountCredentialsResponseArgs) ToUserAccountCredentialsResponsePtrOutput() UserAccountCredentialsResponsePtrOutput {
	return i.ToUserAccountCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i UserAccountCredentialsResponseArgs) ToUserAccountCredentialsResponsePtrOutputWithContext(ctx context.Context) UserAccountCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsResponseOutput).ToUserAccountCredentialsResponsePtrOutputWithContext(ctx)
}

// UserAccountCredentialsResponsePtrInput is an input type that accepts UserAccountCredentialsResponseArgs, UserAccountCredentialsResponsePtr and UserAccountCredentialsResponsePtrOutput values.
// You can construct a concrete instance of `UserAccountCredentialsResponsePtrInput` via:
//
//          UserAccountCredentialsResponseArgs{...}
//
//  or:
//
//          nil
type UserAccountCredentialsResponsePtrInput interface {
	pulumi.Input

	ToUserAccountCredentialsResponsePtrOutput() UserAccountCredentialsResponsePtrOutput
	ToUserAccountCredentialsResponsePtrOutputWithContext(context.Context) UserAccountCredentialsResponsePtrOutput
}

type userAccountCredentialsResponsePtrType UserAccountCredentialsResponseArgs

func UserAccountCredentialsResponsePtr(v *UserAccountCredentialsResponseArgs) UserAccountCredentialsResponsePtrInput {
	return (*userAccountCredentialsResponsePtrType)(v)
}

func (*userAccountCredentialsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountCredentialsResponse)(nil)).Elem()
}

func (i *userAccountCredentialsResponsePtrType) ToUserAccountCredentialsResponsePtrOutput() UserAccountCredentialsResponsePtrOutput {
	return i.ToUserAccountCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i *userAccountCredentialsResponsePtrType) ToUserAccountCredentialsResponsePtrOutputWithContext(ctx context.Context) UserAccountCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsResponsePtrOutput)
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsResponseOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountCredentialsResponse)(nil)).Elem()
}

func (o UserAccountCredentialsResponseOutput) ToUserAccountCredentialsResponseOutput() UserAccountCredentialsResponseOutput {
	return o
}

func (o UserAccountCredentialsResponseOutput) ToUserAccountCredentialsResponseOutputWithContext(ctx context.Context) UserAccountCredentialsResponseOutput {
	return o
}

func (o UserAccountCredentialsResponseOutput) ToUserAccountCredentialsResponsePtrOutput() UserAccountCredentialsResponsePtrOutput {
	return o.ToUserAccountCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o UserAccountCredentialsResponseOutput) ToUserAccountCredentialsResponsePtrOutputWithContext(ctx context.Context) UserAccountCredentialsResponsePtrOutput {
	return o.ApplyT(func(v UserAccountCredentialsResponse) *UserAccountCredentialsResponse {
		return &v
	}).(UserAccountCredentialsResponsePtrOutput)
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsResponseOutput) AdminUserName() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccountCredentialsResponse) string { return v.AdminUserName }).(pulumi.StringOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsResponseOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentialsResponse) *string { return v.AdminUserPassword }).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsResponseOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentialsResponse) *string { return v.AdminUserSshPublicKey }).(pulumi.StringPtrOutput)
}

type UserAccountCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountCredentialsResponse)(nil)).Elem()
}

func (o UserAccountCredentialsResponsePtrOutput) ToUserAccountCredentialsResponsePtrOutput() UserAccountCredentialsResponsePtrOutput {
	return o
}

func (o UserAccountCredentialsResponsePtrOutput) ToUserAccountCredentialsResponsePtrOutputWithContext(ctx context.Context) UserAccountCredentialsResponsePtrOutput {
	return o
}

func (o UserAccountCredentialsResponsePtrOutput) Elem() UserAccountCredentialsResponseOutput {
	return o.ApplyT(func(v *UserAccountCredentialsResponse) UserAccountCredentialsResponse { return *v }).(UserAccountCredentialsResponseOutput)
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsResponsePtrOutput) AdminUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUserName
	}).(pulumi.StringPtrOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsResponsePtrOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserPassword
	}).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsResponsePtrOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserSshPublicKey
	}).(pulumi.StringPtrOutput)
}

// User Assigned Identity
type UserAssignedIdentityInvokeResponse struct {
	// The clientId(aka appId) of the user assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the user assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the user assigned identity.
	TenantId string `pulumi:"tenantId"`
}

// UserAssignedIdentityInvokeResponseInput is an input type that accepts UserAssignedIdentityInvokeResponseArgs and UserAssignedIdentityInvokeResponseOutput values.
// You can construct a concrete instance of `UserAssignedIdentityInvokeResponseInput` via:
//
//          UserAssignedIdentityInvokeResponseArgs{...}
type UserAssignedIdentityInvokeResponseInput interface {
	pulumi.Input

	ToUserAssignedIdentityInvokeResponseOutput() UserAssignedIdentityInvokeResponseOutput
	ToUserAssignedIdentityInvokeResponseOutputWithContext(context.Context) UserAssignedIdentityInvokeResponseOutput
}

// User Assigned Identity
type UserAssignedIdentityInvokeResponseArgs struct {
	// The clientId(aka appId) of the user assigned identity.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The principal ID of the user assigned identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant ID of the user assigned identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (UserAssignedIdentityInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityInvokeResponse)(nil)).Elem()
}

func (i UserAssignedIdentityInvokeResponseArgs) ToUserAssignedIdentityInvokeResponseOutput() UserAssignedIdentityInvokeResponseOutput {
	return i.ToUserAssignedIdentityInvokeResponseOutputWithContext(context.Background())
}

func (i UserAssignedIdentityInvokeResponseArgs) ToUserAssignedIdentityInvokeResponseOutputWithContext(ctx context.Context) UserAssignedIdentityInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityInvokeResponseOutput)
}

// UserAssignedIdentityInvokeResponseMapInput is an input type that accepts UserAssignedIdentityInvokeResponseMap and UserAssignedIdentityInvokeResponseMapOutput values.
// You can construct a concrete instance of `UserAssignedIdentityInvokeResponseMapInput` via:
//
//          UserAssignedIdentityInvokeResponseMap{ "key": UserAssignedIdentityInvokeResponseArgs{...} }
type UserAssignedIdentityInvokeResponseMapInput interface {
	pulumi.Input

	ToUserAssignedIdentityInvokeResponseMapOutput() UserAssignedIdentityInvokeResponseMapOutput
	ToUserAssignedIdentityInvokeResponseMapOutputWithContext(context.Context) UserAssignedIdentityInvokeResponseMapOutput
}

type UserAssignedIdentityInvokeResponseMap map[string]UserAssignedIdentityInvokeResponseInput

func (UserAssignedIdentityInvokeResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityInvokeResponse)(nil)).Elem()
}

func (i UserAssignedIdentityInvokeResponseMap) ToUserAssignedIdentityInvokeResponseMapOutput() UserAssignedIdentityInvokeResponseMapOutput {
	return i.ToUserAssignedIdentityInvokeResponseMapOutputWithContext(context.Background())
}

func (i UserAssignedIdentityInvokeResponseMap) ToUserAssignedIdentityInvokeResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityInvokeResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityInvokeResponseMapOutput)
}

// User Assigned Identity
type UserAssignedIdentityInvokeResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityInvokeResponse)(nil)).Elem()
}

func (o UserAssignedIdentityInvokeResponseOutput) ToUserAssignedIdentityInvokeResponseOutput() UserAssignedIdentityInvokeResponseOutput {
	return o
}

func (o UserAssignedIdentityInvokeResponseOutput) ToUserAssignedIdentityInvokeResponseOutputWithContext(ctx context.Context) UserAssignedIdentityInvokeResponseOutput {
	return o
}

// The clientId(aka appId) of the user assigned identity.
func (o UserAssignedIdentityInvokeResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityInvokeResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the user assigned identity.
func (o UserAssignedIdentityInvokeResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityInvokeResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the user assigned identity.
func (o UserAssignedIdentityInvokeResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityInvokeResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

type UserAssignedIdentityInvokeResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityInvokeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityInvokeResponse)(nil)).Elem()
}

func (o UserAssignedIdentityInvokeResponseMapOutput) ToUserAssignedIdentityInvokeResponseMapOutput() UserAssignedIdentityInvokeResponseMapOutput {
	return o
}

func (o UserAssignedIdentityInvokeResponseMapOutput) ToUserAssignedIdentityInvokeResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityInvokeResponseMapOutput {
	return o
}

func (o UserAssignedIdentityInvokeResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityInvokeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityInvokeResponse {
		return vs[0].(map[string]UserAssignedIdentityInvokeResponse)[vs[1].(string)]
	}).(UserAssignedIdentityInvokeResponseOutput)
}

// User Assigned Identity
type UserAssignedIdentityResponse struct {
	// The clientId(aka appId) of the user assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the user assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the user assigned identity.
	TenantId string `pulumi:"tenantId"`
}

// UserAssignedIdentityResponseInput is an input type that accepts UserAssignedIdentityResponseArgs and UserAssignedIdentityResponseOutput values.
// You can construct a concrete instance of `UserAssignedIdentityResponseInput` via:
//
//          UserAssignedIdentityResponseArgs{...}
type UserAssignedIdentityResponseInput interface {
	pulumi.Input

	ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput
	ToUserAssignedIdentityResponseOutputWithContext(context.Context) UserAssignedIdentityResponseOutput
}

// User Assigned Identity
type UserAssignedIdentityResponseArgs struct {
	// The clientId(aka appId) of the user assigned identity.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The principal ID of the user assigned identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant ID of the user assigned identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (UserAssignedIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (i UserAssignedIdentityResponseArgs) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return i.ToUserAssignedIdentityResponseOutputWithContext(context.Background())
}

func (i UserAssignedIdentityResponseArgs) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityResponseOutput)
}

// UserAssignedIdentityResponseMapInput is an input type that accepts UserAssignedIdentityResponseMap and UserAssignedIdentityResponseMapOutput values.
// You can construct a concrete instance of `UserAssignedIdentityResponseMapInput` via:
//
//          UserAssignedIdentityResponseMap{ "key": UserAssignedIdentityResponseArgs{...} }
type UserAssignedIdentityResponseMapInput interface {
	pulumi.Input

	ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput
	ToUserAssignedIdentityResponseMapOutputWithContext(context.Context) UserAssignedIdentityResponseMapOutput
}

type UserAssignedIdentityResponseMap map[string]UserAssignedIdentityResponseInput

func (UserAssignedIdentityResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (i UserAssignedIdentityResponseMap) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return i.ToUserAssignedIdentityResponseMapOutputWithContext(context.Background())
}

func (i UserAssignedIdentityResponseMap) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityResponseMapOutput)
}

// User Assigned Identity
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The clientId(aka appId) of the user assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the user assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the user assigned identity.
func (o UserAssignedIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachine struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string                   `pulumi:"description"`
	Properties  *VirtualMachineProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// VirtualMachineInput is an input type that accepts VirtualMachineArgs and VirtualMachineOutput values.
// You can construct a concrete instance of `VirtualMachineInput` via:
//
//          VirtualMachineArgs{...}
type VirtualMachineInput interface {
	pulumi.Input

	ToVirtualMachineOutput() VirtualMachineOutput
	ToVirtualMachineOutputWithContext(context.Context) VirtualMachineOutput
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput            `pulumi:"description"`
	Properties  VirtualMachinePropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (VirtualMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachine)(nil)).Elem()
}

func (i VirtualMachineArgs) ToVirtualMachineOutput() VirtualMachineOutput {
	return i.ToVirtualMachineOutputWithContext(context.Background())
}

func (i VirtualMachineArgs) ToVirtualMachineOutputWithContext(ctx context.Context) VirtualMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOutput)
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineOutput struct{ *pulumi.OutputState }

func (VirtualMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachine)(nil)).Elem()
}

func (o VirtualMachineOutput) ToVirtualMachineOutput() VirtualMachineOutput {
	return o
}

func (o VirtualMachineOutput) ToVirtualMachineOutputWithContext(ctx context.Context) VirtualMachineOutput {
	return o
}

// Location for the underlying compute
func (o VirtualMachineOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'VirtualMachine'.
func (o VirtualMachineOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachine) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o VirtualMachineOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineOutput) Properties() VirtualMachinePropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *VirtualMachineProperties { return v.Properties }).(VirtualMachinePropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o VirtualMachineOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImage struct {
	// Virtual Machine image path
	Id string `pulumi:"id"`
}

// VirtualMachineImageInput is an input type that accepts VirtualMachineImageArgs and VirtualMachineImageOutput values.
// You can construct a concrete instance of `VirtualMachineImageInput` via:
//
//          VirtualMachineImageArgs{...}
type VirtualMachineImageInput interface {
	pulumi.Input

	ToVirtualMachineImageOutput() VirtualMachineImageOutput
	ToVirtualMachineImageOutputWithContext(context.Context) VirtualMachineImageOutput
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageArgs struct {
	// Virtual Machine image path
	Id pulumi.StringInput `pulumi:"id"`
}

func (VirtualMachineImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineImage)(nil)).Elem()
}

func (i VirtualMachineImageArgs) ToVirtualMachineImageOutput() VirtualMachineImageOutput {
	return i.ToVirtualMachineImageOutputWithContext(context.Background())
}

func (i VirtualMachineImageArgs) ToVirtualMachineImageOutputWithContext(ctx context.Context) VirtualMachineImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageOutput)
}

func (i VirtualMachineImageArgs) ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput {
	return i.ToVirtualMachineImagePtrOutputWithContext(context.Background())
}

func (i VirtualMachineImageArgs) ToVirtualMachineImagePtrOutputWithContext(ctx context.Context) VirtualMachineImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageOutput).ToVirtualMachineImagePtrOutputWithContext(ctx)
}

// VirtualMachineImagePtrInput is an input type that accepts VirtualMachineImageArgs, VirtualMachineImagePtr and VirtualMachineImagePtrOutput values.
// You can construct a concrete instance of `VirtualMachineImagePtrInput` via:
//
//          VirtualMachineImageArgs{...}
//
//  or:
//
//          nil
type VirtualMachineImagePtrInput interface {
	pulumi.Input

	ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput
	ToVirtualMachineImagePtrOutputWithContext(context.Context) VirtualMachineImagePtrOutput
}

type virtualMachineImagePtrType VirtualMachineImageArgs

func VirtualMachineImagePtr(v *VirtualMachineImageArgs) VirtualMachineImagePtrInput {
	return (*virtualMachineImagePtrType)(v)
}

func (*virtualMachineImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineImage)(nil)).Elem()
}

func (i *virtualMachineImagePtrType) ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput {
	return i.ToVirtualMachineImagePtrOutputWithContext(context.Background())
}

func (i *virtualMachineImagePtrType) ToVirtualMachineImagePtrOutputWithContext(ctx context.Context) VirtualMachineImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImagePtrOutput)
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageOutput struct{ *pulumi.OutputState }

func (VirtualMachineImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineImage)(nil)).Elem()
}

func (o VirtualMachineImageOutput) ToVirtualMachineImageOutput() VirtualMachineImageOutput {
	return o
}

func (o VirtualMachineImageOutput) ToVirtualMachineImageOutputWithContext(ctx context.Context) VirtualMachineImageOutput {
	return o
}

func (o VirtualMachineImageOutput) ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput {
	return o.ToVirtualMachineImagePtrOutputWithContext(context.Background())
}

func (o VirtualMachineImageOutput) ToVirtualMachineImagePtrOutputWithContext(ctx context.Context) VirtualMachineImagePtrOutput {
	return o.ApplyT(func(v VirtualMachineImage) *VirtualMachineImage {
		return &v
	}).(VirtualMachineImagePtrOutput)
}

// Virtual Machine image path
func (o VirtualMachineImageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineImage) string { return v.Id }).(pulumi.StringOutput)
}

type VirtualMachineImagePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineImage)(nil)).Elem()
}

func (o VirtualMachineImagePtrOutput) ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput {
	return o
}

func (o VirtualMachineImagePtrOutput) ToVirtualMachineImagePtrOutputWithContext(ctx context.Context) VirtualMachineImagePtrOutput {
	return o
}

func (o VirtualMachineImagePtrOutput) Elem() VirtualMachineImageOutput {
	return o.ApplyT(func(v *VirtualMachineImage) VirtualMachineImage { return *v }).(VirtualMachineImageOutput)
}

// Virtual Machine image path
func (o VirtualMachineImagePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineImage) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageInvokeResponse struct {
	// Virtual Machine image path
	Id string `pulumi:"id"`
}

// VirtualMachineImageInvokeResponseInput is an input type that accepts VirtualMachineImageInvokeResponseArgs and VirtualMachineImageInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineImageInvokeResponseInput` via:
//
//          VirtualMachineImageInvokeResponseArgs{...}
type VirtualMachineImageInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineImageInvokeResponseOutput() VirtualMachineImageInvokeResponseOutput
	ToVirtualMachineImageInvokeResponseOutputWithContext(context.Context) VirtualMachineImageInvokeResponseOutput
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageInvokeResponseArgs struct {
	// Virtual Machine image path
	Id pulumi.StringInput `pulumi:"id"`
}

func (VirtualMachineImageInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineImageInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineImageInvokeResponseArgs) ToVirtualMachineImageInvokeResponseOutput() VirtualMachineImageInvokeResponseOutput {
	return i.ToVirtualMachineImageInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineImageInvokeResponseArgs) ToVirtualMachineImageInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineImageInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageInvokeResponseOutput)
}

func (i VirtualMachineImageInvokeResponseArgs) ToVirtualMachineImageInvokeResponsePtrOutput() VirtualMachineImageInvokeResponsePtrOutput {
	return i.ToVirtualMachineImageInvokeResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineImageInvokeResponseArgs) ToVirtualMachineImageInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineImageInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageInvokeResponseOutput).ToVirtualMachineImageInvokeResponsePtrOutputWithContext(ctx)
}

// VirtualMachineImageInvokeResponsePtrInput is an input type that accepts VirtualMachineImageInvokeResponseArgs, VirtualMachineImageInvokeResponsePtr and VirtualMachineImageInvokeResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineImageInvokeResponsePtrInput` via:
//
//          VirtualMachineImageInvokeResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineImageInvokeResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineImageInvokeResponsePtrOutput() VirtualMachineImageInvokeResponsePtrOutput
	ToVirtualMachineImageInvokeResponsePtrOutputWithContext(context.Context) VirtualMachineImageInvokeResponsePtrOutput
}

type virtualMachineImageInvokeResponsePtrType VirtualMachineImageInvokeResponseArgs

func VirtualMachineImageInvokeResponsePtr(v *VirtualMachineImageInvokeResponseArgs) VirtualMachineImageInvokeResponsePtrInput {
	return (*virtualMachineImageInvokeResponsePtrType)(v)
}

func (*virtualMachineImageInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineImageInvokeResponse)(nil)).Elem()
}

func (i *virtualMachineImageInvokeResponsePtrType) ToVirtualMachineImageInvokeResponsePtrOutput() VirtualMachineImageInvokeResponsePtrOutput {
	return i.ToVirtualMachineImageInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineImageInvokeResponsePtrType) ToVirtualMachineImageInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineImageInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageInvokeResponsePtrOutput)
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineImageInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineImageInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineImageInvokeResponseOutput) ToVirtualMachineImageInvokeResponseOutput() VirtualMachineImageInvokeResponseOutput {
	return o
}

func (o VirtualMachineImageInvokeResponseOutput) ToVirtualMachineImageInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineImageInvokeResponseOutput {
	return o
}

func (o VirtualMachineImageInvokeResponseOutput) ToVirtualMachineImageInvokeResponsePtrOutput() VirtualMachineImageInvokeResponsePtrOutput {
	return o.ToVirtualMachineImageInvokeResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineImageInvokeResponseOutput) ToVirtualMachineImageInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineImageInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineImageInvokeResponse) *VirtualMachineImageInvokeResponse {
		return &v
	}).(VirtualMachineImageInvokeResponsePtrOutput)
}

// Virtual Machine image path
func (o VirtualMachineImageInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineImageInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

type VirtualMachineImageInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineImageInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineImageInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineImageInvokeResponsePtrOutput) ToVirtualMachineImageInvokeResponsePtrOutput() VirtualMachineImageInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineImageInvokeResponsePtrOutput) ToVirtualMachineImageInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineImageInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineImageInvokeResponsePtrOutput) Elem() VirtualMachineImageInvokeResponseOutput {
	return o.ApplyT(func(v *VirtualMachineImageInvokeResponse) VirtualMachineImageInvokeResponse { return *v }).(VirtualMachineImageInvokeResponseOutput)
}

// Virtual Machine image path
func (o VirtualMachineImageInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineImageInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageResponse struct {
	// Virtual Machine image path
	Id string `pulumi:"id"`
}

// VirtualMachineImageResponseInput is an input type that accepts VirtualMachineImageResponseArgs and VirtualMachineImageResponseOutput values.
// You can construct a concrete instance of `VirtualMachineImageResponseInput` via:
//
//          VirtualMachineImageResponseArgs{...}
type VirtualMachineImageResponseInput interface {
	pulumi.Input

	ToVirtualMachineImageResponseOutput() VirtualMachineImageResponseOutput
	ToVirtualMachineImageResponseOutputWithContext(context.Context) VirtualMachineImageResponseOutput
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageResponseArgs struct {
	// Virtual Machine image path
	Id pulumi.StringInput `pulumi:"id"`
}

func (VirtualMachineImageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineImageResponse)(nil)).Elem()
}

func (i VirtualMachineImageResponseArgs) ToVirtualMachineImageResponseOutput() VirtualMachineImageResponseOutput {
	return i.ToVirtualMachineImageResponseOutputWithContext(context.Background())
}

func (i VirtualMachineImageResponseArgs) ToVirtualMachineImageResponseOutputWithContext(ctx context.Context) VirtualMachineImageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageResponseOutput)
}

func (i VirtualMachineImageResponseArgs) ToVirtualMachineImageResponsePtrOutput() VirtualMachineImageResponsePtrOutput {
	return i.ToVirtualMachineImageResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineImageResponseArgs) ToVirtualMachineImageResponsePtrOutputWithContext(ctx context.Context) VirtualMachineImageResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageResponseOutput).ToVirtualMachineImageResponsePtrOutputWithContext(ctx)
}

// VirtualMachineImageResponsePtrInput is an input type that accepts VirtualMachineImageResponseArgs, VirtualMachineImageResponsePtr and VirtualMachineImageResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineImageResponsePtrInput` via:
//
//          VirtualMachineImageResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineImageResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineImageResponsePtrOutput() VirtualMachineImageResponsePtrOutput
	ToVirtualMachineImageResponsePtrOutputWithContext(context.Context) VirtualMachineImageResponsePtrOutput
}

type virtualMachineImageResponsePtrType VirtualMachineImageResponseArgs

func VirtualMachineImageResponsePtr(v *VirtualMachineImageResponseArgs) VirtualMachineImageResponsePtrInput {
	return (*virtualMachineImageResponsePtrType)(v)
}

func (*virtualMachineImageResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineImageResponse)(nil)).Elem()
}

func (i *virtualMachineImageResponsePtrType) ToVirtualMachineImageResponsePtrOutput() VirtualMachineImageResponsePtrOutput {
	return i.ToVirtualMachineImageResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineImageResponsePtrType) ToVirtualMachineImageResponsePtrOutputWithContext(ctx context.Context) VirtualMachineImageResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageResponsePtrOutput)
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineImageResponse)(nil)).Elem()
}

func (o VirtualMachineImageResponseOutput) ToVirtualMachineImageResponseOutput() VirtualMachineImageResponseOutput {
	return o
}

func (o VirtualMachineImageResponseOutput) ToVirtualMachineImageResponseOutputWithContext(ctx context.Context) VirtualMachineImageResponseOutput {
	return o
}

func (o VirtualMachineImageResponseOutput) ToVirtualMachineImageResponsePtrOutput() VirtualMachineImageResponsePtrOutput {
	return o.ToVirtualMachineImageResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineImageResponseOutput) ToVirtualMachineImageResponsePtrOutputWithContext(ctx context.Context) VirtualMachineImageResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineImageResponse) *VirtualMachineImageResponse {
		return &v
	}).(VirtualMachineImageResponsePtrOutput)
}

// Virtual Machine image path
func (o VirtualMachineImageResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineImageResponse) string { return v.Id }).(pulumi.StringOutput)
}

type VirtualMachineImageResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineImageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineImageResponse)(nil)).Elem()
}

func (o VirtualMachineImageResponsePtrOutput) ToVirtualMachineImageResponsePtrOutput() VirtualMachineImageResponsePtrOutput {
	return o
}

func (o VirtualMachineImageResponsePtrOutput) ToVirtualMachineImageResponsePtrOutputWithContext(ctx context.Context) VirtualMachineImageResponsePtrOutput {
	return o
}

func (o VirtualMachineImageResponsePtrOutput) Elem() VirtualMachineImageResponseOutput {
	return o.ApplyT(func(v *VirtualMachineImageResponse) VirtualMachineImageResponse { return *v }).(VirtualMachineImageResponseOutput)
}

// Virtual Machine image path
func (o VirtualMachineImageResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineImageResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineInvokeResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType string `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn string                                  `pulumi:"modifiedOn"`
	Properties *VirtualMachineInvokeResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorInvokeResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// VirtualMachineInvokeResponseInput is an input type that accepts VirtualMachineInvokeResponseArgs and VirtualMachineInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineInvokeResponseInput` via:
//
//          VirtualMachineInvokeResponseArgs{...}
type VirtualMachineInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineInvokeResponseOutput() VirtualMachineInvokeResponseOutput
	ToVirtualMachineInvokeResponseOutputWithContext(context.Context) VirtualMachineInvokeResponseOutput
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineInvokeResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn pulumi.StringInput                             `pulumi:"modifiedOn"`
	Properties VirtualMachineInvokeResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorInvokeResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (VirtualMachineInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineInvokeResponseArgs) ToVirtualMachineInvokeResponseOutput() VirtualMachineInvokeResponseOutput {
	return i.ToVirtualMachineInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineInvokeResponseArgs) ToVirtualMachineInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInvokeResponseOutput)
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineInvokeResponseOutput) ToVirtualMachineInvokeResponseOutput() VirtualMachineInvokeResponseOutput {
	return o
}

func (o VirtualMachineInvokeResponseOutput) ToVirtualMachineInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineInvokeResponseOutput {
	return o
}

// Location for the underlying compute
func (o VirtualMachineInvokeResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInvokeResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'VirtualMachine'.
func (o VirtualMachineInvokeResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineInvokeResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The date and time when the compute was created.
func (o VirtualMachineInvokeResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineInvokeResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o VirtualMachineInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o VirtualMachineInvokeResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualMachineInvokeResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The date and time when the compute was last modified.
func (o VirtualMachineInvokeResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineInvokeResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

func (o VirtualMachineInvokeResponseOutput) Properties() VirtualMachineInvokeResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachineInvokeResponse) *VirtualMachineInvokeResponseProperties { return v.Properties }).(VirtualMachineInvokeResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o VirtualMachineInvokeResponseOutput) ProvisioningErrors() MachineLearningServiceErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineInvokeResponse) []MachineLearningServiceErrorInvokeResponse {
		return v.ProvisioningErrors
	}).(MachineLearningServiceErrorInvokeResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o VirtualMachineInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o VirtualMachineInvokeResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInvokeResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type VirtualMachineInvokeResponseProperties struct {
	// Public IP address of the virtual machine.
	Address *string `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount *VirtualMachineSshCredentialsInvokeResponse `pulumi:"administratorAccount"`
	// Port open for ssh connections.
	SshPort *int `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize *string `pulumi:"virtualMachineSize"`
}

// VirtualMachineInvokeResponsePropertiesInput is an input type that accepts VirtualMachineInvokeResponsePropertiesArgs and VirtualMachineInvokeResponsePropertiesOutput values.
// You can construct a concrete instance of `VirtualMachineInvokeResponsePropertiesInput` via:
//
//          VirtualMachineInvokeResponsePropertiesArgs{...}
type VirtualMachineInvokeResponsePropertiesInput interface {
	pulumi.Input

	ToVirtualMachineInvokeResponsePropertiesOutput() VirtualMachineInvokeResponsePropertiesOutput
	ToVirtualMachineInvokeResponsePropertiesOutputWithContext(context.Context) VirtualMachineInvokeResponsePropertiesOutput
}

type VirtualMachineInvokeResponsePropertiesArgs struct {
	// Public IP address of the virtual machine.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount VirtualMachineSshCredentialsInvokeResponsePtrInput `pulumi:"administratorAccount"`
	// Port open for ssh connections.
	SshPort pulumi.IntPtrInput `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize pulumi.StringPtrInput `pulumi:"virtualMachineSize"`
}

func (VirtualMachineInvokeResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInvokeResponseProperties)(nil)).Elem()
}

func (i VirtualMachineInvokeResponsePropertiesArgs) ToVirtualMachineInvokeResponsePropertiesOutput() VirtualMachineInvokeResponsePropertiesOutput {
	return i.ToVirtualMachineInvokeResponsePropertiesOutputWithContext(context.Background())
}

func (i VirtualMachineInvokeResponsePropertiesArgs) ToVirtualMachineInvokeResponsePropertiesOutputWithContext(ctx context.Context) VirtualMachineInvokeResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInvokeResponsePropertiesOutput)
}

func (i VirtualMachineInvokeResponsePropertiesArgs) ToVirtualMachineInvokeResponsePropertiesPtrOutput() VirtualMachineInvokeResponsePropertiesPtrOutput {
	return i.ToVirtualMachineInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualMachineInvokeResponsePropertiesArgs) ToVirtualMachineInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineInvokeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInvokeResponsePropertiesOutput).ToVirtualMachineInvokeResponsePropertiesPtrOutputWithContext(ctx)
}

// VirtualMachineInvokeResponsePropertiesPtrInput is an input type that accepts VirtualMachineInvokeResponsePropertiesArgs, VirtualMachineInvokeResponsePropertiesPtr and VirtualMachineInvokeResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualMachineInvokeResponsePropertiesPtrInput` via:
//
//          VirtualMachineInvokeResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type VirtualMachineInvokeResponsePropertiesPtrInput interface {
	pulumi.Input

	ToVirtualMachineInvokeResponsePropertiesPtrOutput() VirtualMachineInvokeResponsePropertiesPtrOutput
	ToVirtualMachineInvokeResponsePropertiesPtrOutputWithContext(context.Context) VirtualMachineInvokeResponsePropertiesPtrOutput
}

type virtualMachineInvokeResponsePropertiesPtrType VirtualMachineInvokeResponsePropertiesArgs

func VirtualMachineInvokeResponsePropertiesPtr(v *VirtualMachineInvokeResponsePropertiesArgs) VirtualMachineInvokeResponsePropertiesPtrInput {
	return (*virtualMachineInvokeResponsePropertiesPtrType)(v)
}

func (*virtualMachineInvokeResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInvokeResponseProperties)(nil)).Elem()
}

func (i *virtualMachineInvokeResponsePropertiesPtrType) ToVirtualMachineInvokeResponsePropertiesPtrOutput() VirtualMachineInvokeResponsePropertiesPtrOutput {
	return i.ToVirtualMachineInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualMachineInvokeResponsePropertiesPtrType) ToVirtualMachineInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineInvokeResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInvokeResponsePropertiesPtrOutput)
}

type VirtualMachineInvokeResponsePropertiesOutput struct{ *pulumi.OutputState }

func (VirtualMachineInvokeResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInvokeResponseProperties)(nil)).Elem()
}

func (o VirtualMachineInvokeResponsePropertiesOutput) ToVirtualMachineInvokeResponsePropertiesOutput() VirtualMachineInvokeResponsePropertiesOutput {
	return o
}

func (o VirtualMachineInvokeResponsePropertiesOutput) ToVirtualMachineInvokeResponsePropertiesOutputWithContext(ctx context.Context) VirtualMachineInvokeResponsePropertiesOutput {
	return o
}

func (o VirtualMachineInvokeResponsePropertiesOutput) ToVirtualMachineInvokeResponsePropertiesPtrOutput() VirtualMachineInvokeResponsePropertiesPtrOutput {
	return o.ToVirtualMachineInvokeResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualMachineInvokeResponsePropertiesOutput) ToVirtualMachineInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineInvokeResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachineInvokeResponseProperties) *VirtualMachineInvokeResponseProperties {
		return &v
	}).(VirtualMachineInvokeResponsePropertiesPtrOutput)
}

// Public IP address of the virtual machine.
func (o VirtualMachineInvokeResponsePropertiesOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInvokeResponseProperties) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachineInvokeResponsePropertiesOutput) AdministratorAccount() VirtualMachineSshCredentialsInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineInvokeResponseProperties) *VirtualMachineSshCredentialsInvokeResponse {
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsInvokeResponsePtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachineInvokeResponsePropertiesOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineInvokeResponseProperties) *int { return v.SshPort }).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachineInvokeResponsePropertiesOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInvokeResponseProperties) *string { return v.VirtualMachineSize }).(pulumi.StringPtrOutput)
}

type VirtualMachineInvokeResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInvokeResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInvokeResponseProperties)(nil)).Elem()
}

func (o VirtualMachineInvokeResponsePropertiesPtrOutput) ToVirtualMachineInvokeResponsePropertiesPtrOutput() VirtualMachineInvokeResponsePropertiesPtrOutput {
	return o
}

func (o VirtualMachineInvokeResponsePropertiesPtrOutput) ToVirtualMachineInvokeResponsePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineInvokeResponsePropertiesPtrOutput {
	return o
}

func (o VirtualMachineInvokeResponsePropertiesPtrOutput) Elem() VirtualMachineInvokeResponsePropertiesOutput {
	return o.ApplyT(func(v *VirtualMachineInvokeResponseProperties) VirtualMachineInvokeResponseProperties { return *v }).(VirtualMachineInvokeResponsePropertiesOutput)
}

// Public IP address of the virtual machine.
func (o VirtualMachineInvokeResponsePropertiesPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInvokeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachineInvokeResponsePropertiesPtrOutput) AdministratorAccount() VirtualMachineSshCredentialsInvokeResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInvokeResponseProperties) *VirtualMachineSshCredentialsInvokeResponse {
		if v == nil {
			return nil
		}
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsInvokeResponsePtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachineInvokeResponsePropertiesPtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInvokeResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.SshPort
	}).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachineInvokeResponsePropertiesPtrOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInvokeResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineSize
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineProperties struct {
	// Public IP address of the virtual machine.
	Address *string `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount *VirtualMachineSshCredentials `pulumi:"administratorAccount"`
	// Port open for ssh connections.
	SshPort *int `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize *string `pulumi:"virtualMachineSize"`
}

// VirtualMachinePropertiesInput is an input type that accepts VirtualMachinePropertiesArgs and VirtualMachinePropertiesOutput values.
// You can construct a concrete instance of `VirtualMachinePropertiesInput` via:
//
//          VirtualMachinePropertiesArgs{...}
type VirtualMachinePropertiesInput interface {
	pulumi.Input

	ToVirtualMachinePropertiesOutput() VirtualMachinePropertiesOutput
	ToVirtualMachinePropertiesOutputWithContext(context.Context) VirtualMachinePropertiesOutput
}

type VirtualMachinePropertiesArgs struct {
	// Public IP address of the virtual machine.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount VirtualMachineSshCredentialsPtrInput `pulumi:"administratorAccount"`
	// Port open for ssh connections.
	SshPort pulumi.IntPtrInput `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize pulumi.StringPtrInput `pulumi:"virtualMachineSize"`
}

func (VirtualMachinePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineProperties)(nil)).Elem()
}

func (i VirtualMachinePropertiesArgs) ToVirtualMachinePropertiesOutput() VirtualMachinePropertiesOutput {
	return i.ToVirtualMachinePropertiesOutputWithContext(context.Background())
}

func (i VirtualMachinePropertiesArgs) ToVirtualMachinePropertiesOutputWithContext(ctx context.Context) VirtualMachinePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachinePropertiesOutput)
}

func (i VirtualMachinePropertiesArgs) ToVirtualMachinePropertiesPtrOutput() VirtualMachinePropertiesPtrOutput {
	return i.ToVirtualMachinePropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualMachinePropertiesArgs) ToVirtualMachinePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachinePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachinePropertiesOutput).ToVirtualMachinePropertiesPtrOutputWithContext(ctx)
}

// VirtualMachinePropertiesPtrInput is an input type that accepts VirtualMachinePropertiesArgs, VirtualMachinePropertiesPtr and VirtualMachinePropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualMachinePropertiesPtrInput` via:
//
//          VirtualMachinePropertiesArgs{...}
//
//  or:
//
//          nil
type VirtualMachinePropertiesPtrInput interface {
	pulumi.Input

	ToVirtualMachinePropertiesPtrOutput() VirtualMachinePropertiesPtrOutput
	ToVirtualMachinePropertiesPtrOutputWithContext(context.Context) VirtualMachinePropertiesPtrOutput
}

type virtualMachinePropertiesPtrType VirtualMachinePropertiesArgs

func VirtualMachinePropertiesPtr(v *VirtualMachinePropertiesArgs) VirtualMachinePropertiesPtrInput {
	return (*virtualMachinePropertiesPtrType)(v)
}

func (*virtualMachinePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineProperties)(nil)).Elem()
}

func (i *virtualMachinePropertiesPtrType) ToVirtualMachinePropertiesPtrOutput() VirtualMachinePropertiesPtrOutput {
	return i.ToVirtualMachinePropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualMachinePropertiesPtrType) ToVirtualMachinePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachinePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachinePropertiesPtrOutput)
}

type VirtualMachinePropertiesOutput struct{ *pulumi.OutputState }

func (VirtualMachinePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineProperties)(nil)).Elem()
}

func (o VirtualMachinePropertiesOutput) ToVirtualMachinePropertiesOutput() VirtualMachinePropertiesOutput {
	return o
}

func (o VirtualMachinePropertiesOutput) ToVirtualMachinePropertiesOutputWithContext(ctx context.Context) VirtualMachinePropertiesOutput {
	return o
}

func (o VirtualMachinePropertiesOutput) ToVirtualMachinePropertiesPtrOutput() VirtualMachinePropertiesPtrOutput {
	return o.ToVirtualMachinePropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualMachinePropertiesOutput) ToVirtualMachinePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachinePropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachineProperties) *VirtualMachineProperties {
		return &v
	}).(VirtualMachinePropertiesPtrOutput)
}

// Public IP address of the virtual machine.
func (o VirtualMachinePropertiesOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineProperties) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachinePropertiesOutput) AdministratorAccount() VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyT(func(v VirtualMachineProperties) *VirtualMachineSshCredentials { return v.AdministratorAccount }).(VirtualMachineSshCredentialsPtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachinePropertiesOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineProperties) *int { return v.SshPort }).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachinePropertiesOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineProperties) *string { return v.VirtualMachineSize }).(pulumi.StringPtrOutput)
}

type VirtualMachinePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachinePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineProperties)(nil)).Elem()
}

func (o VirtualMachinePropertiesPtrOutput) ToVirtualMachinePropertiesPtrOutput() VirtualMachinePropertiesPtrOutput {
	return o
}

func (o VirtualMachinePropertiesPtrOutput) ToVirtualMachinePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachinePropertiesPtrOutput {
	return o
}

func (o VirtualMachinePropertiesPtrOutput) Elem() VirtualMachinePropertiesOutput {
	return o.ApplyT(func(v *VirtualMachineProperties) VirtualMachineProperties { return *v }).(VirtualMachinePropertiesOutput)
}

// Public IP address of the virtual machine.
func (o VirtualMachinePropertiesPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineProperties) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachinePropertiesPtrOutput) AdministratorAccount() VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyT(func(v *VirtualMachineProperties) *VirtualMachineSshCredentials {
		if v == nil {
			return nil
		}
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsPtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachinePropertiesPtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineProperties) *int {
		if v == nil {
			return nil
		}
		return v.SshPort
	}).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachinePropertiesPtrOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineProperties) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineSize
	}).(pulumi.StringPtrOutput)
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType string `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn string                            `pulumi:"modifiedOn"`
	Properties *VirtualMachineResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// VirtualMachineResponseInput is an input type that accepts VirtualMachineResponseArgs and VirtualMachineResponseOutput values.
// You can construct a concrete instance of `VirtualMachineResponseInput` via:
//
//          VirtualMachineResponseArgs{...}
type VirtualMachineResponseInput interface {
	pulumi.Input

	ToVirtualMachineResponseOutput() VirtualMachineResponseOutput
	ToVirtualMachineResponseOutputWithContext(context.Context) VirtualMachineResponseOutput
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute pulumi.BoolInput `pulumi:"isAttachedCompute"`
	// The date and time when the compute was last modified.
	ModifiedOn pulumi.StringInput                       `pulumi:"modifiedOn"`
	Properties VirtualMachineResponsePropertiesPtrInput `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (VirtualMachineResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResponse)(nil)).Elem()
}

func (i VirtualMachineResponseArgs) ToVirtualMachineResponseOutput() VirtualMachineResponseOutput {
	return i.ToVirtualMachineResponseOutputWithContext(context.Background())
}

func (i VirtualMachineResponseArgs) ToVirtualMachineResponseOutputWithContext(ctx context.Context) VirtualMachineResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineResponseOutput)
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResponse)(nil)).Elem()
}

func (o VirtualMachineResponseOutput) ToVirtualMachineResponseOutput() VirtualMachineResponseOutput {
	return o
}

func (o VirtualMachineResponseOutput) ToVirtualMachineResponseOutputWithContext(ctx context.Context) VirtualMachineResponseOutput {
	return o
}

// Location for the underlying compute
func (o VirtualMachineResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'VirtualMachine'.
func (o VirtualMachineResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The date and time when the compute was created.
func (o VirtualMachineResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o VirtualMachineResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o VirtualMachineResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualMachineResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The date and time when the compute was last modified.
func (o VirtualMachineResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

func (o VirtualMachineResponseOutput) Properties() VirtualMachineResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *VirtualMachineResponseProperties { return v.Properties }).(VirtualMachineResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o VirtualMachineResponseOutput) ProvisioningErrors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineResponse) []MachineLearningServiceErrorResponse { return v.ProvisioningErrors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o VirtualMachineResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o VirtualMachineResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type VirtualMachineResponseProperties struct {
	// Public IP address of the virtual machine.
	Address *string `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount *VirtualMachineSshCredentialsResponse `pulumi:"administratorAccount"`
	// Port open for ssh connections.
	SshPort *int `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize *string `pulumi:"virtualMachineSize"`
}

// VirtualMachineResponsePropertiesInput is an input type that accepts VirtualMachineResponsePropertiesArgs and VirtualMachineResponsePropertiesOutput values.
// You can construct a concrete instance of `VirtualMachineResponsePropertiesInput` via:
//
//          VirtualMachineResponsePropertiesArgs{...}
type VirtualMachineResponsePropertiesInput interface {
	pulumi.Input

	ToVirtualMachineResponsePropertiesOutput() VirtualMachineResponsePropertiesOutput
	ToVirtualMachineResponsePropertiesOutputWithContext(context.Context) VirtualMachineResponsePropertiesOutput
}

type VirtualMachineResponsePropertiesArgs struct {
	// Public IP address of the virtual machine.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount VirtualMachineSshCredentialsResponsePtrInput `pulumi:"administratorAccount"`
	// Port open for ssh connections.
	SshPort pulumi.IntPtrInput `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize pulumi.StringPtrInput `pulumi:"virtualMachineSize"`
}

func (VirtualMachineResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResponseProperties)(nil)).Elem()
}

func (i VirtualMachineResponsePropertiesArgs) ToVirtualMachineResponsePropertiesOutput() VirtualMachineResponsePropertiesOutput {
	return i.ToVirtualMachineResponsePropertiesOutputWithContext(context.Background())
}

func (i VirtualMachineResponsePropertiesArgs) ToVirtualMachineResponsePropertiesOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineResponsePropertiesOutput)
}

func (i VirtualMachineResponsePropertiesArgs) ToVirtualMachineResponsePropertiesPtrOutput() VirtualMachineResponsePropertiesPtrOutput {
	return i.ToVirtualMachineResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualMachineResponsePropertiesArgs) ToVirtualMachineResponsePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineResponsePropertiesOutput).ToVirtualMachineResponsePropertiesPtrOutputWithContext(ctx)
}

// VirtualMachineResponsePropertiesPtrInput is an input type that accepts VirtualMachineResponsePropertiesArgs, VirtualMachineResponsePropertiesPtr and VirtualMachineResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualMachineResponsePropertiesPtrInput` via:
//
//          VirtualMachineResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type VirtualMachineResponsePropertiesPtrInput interface {
	pulumi.Input

	ToVirtualMachineResponsePropertiesPtrOutput() VirtualMachineResponsePropertiesPtrOutput
	ToVirtualMachineResponsePropertiesPtrOutputWithContext(context.Context) VirtualMachineResponsePropertiesPtrOutput
}

type virtualMachineResponsePropertiesPtrType VirtualMachineResponsePropertiesArgs

func VirtualMachineResponsePropertiesPtr(v *VirtualMachineResponsePropertiesArgs) VirtualMachineResponsePropertiesPtrInput {
	return (*virtualMachineResponsePropertiesPtrType)(v)
}

func (*virtualMachineResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineResponseProperties)(nil)).Elem()
}

func (i *virtualMachineResponsePropertiesPtrType) ToVirtualMachineResponsePropertiesPtrOutput() VirtualMachineResponsePropertiesPtrOutput {
	return i.ToVirtualMachineResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualMachineResponsePropertiesPtrType) ToVirtualMachineResponsePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineResponsePropertiesPtrOutput)
}

type VirtualMachineResponsePropertiesOutput struct{ *pulumi.OutputState }

func (VirtualMachineResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResponseProperties)(nil)).Elem()
}

func (o VirtualMachineResponsePropertiesOutput) ToVirtualMachineResponsePropertiesOutput() VirtualMachineResponsePropertiesOutput {
	return o
}

func (o VirtualMachineResponsePropertiesOutput) ToVirtualMachineResponsePropertiesOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesOutput {
	return o
}

func (o VirtualMachineResponsePropertiesOutput) ToVirtualMachineResponsePropertiesPtrOutput() VirtualMachineResponsePropertiesPtrOutput {
	return o.ToVirtualMachineResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualMachineResponsePropertiesOutput) ToVirtualMachineResponsePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponseProperties) *VirtualMachineResponseProperties {
		return &v
	}).(VirtualMachineResponsePropertiesPtrOutput)
}

// Public IP address of the virtual machine.
func (o VirtualMachineResponsePropertiesOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponseProperties) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachineResponsePropertiesOutput) AdministratorAccount() VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineResponseProperties) *VirtualMachineSshCredentialsResponse {
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachineResponsePropertiesOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponseProperties) *int { return v.SshPort }).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachineResponsePropertiesOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponseProperties) *string { return v.VirtualMachineSize }).(pulumi.StringPtrOutput)
}

type VirtualMachineResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineResponseProperties)(nil)).Elem()
}

func (o VirtualMachineResponsePropertiesPtrOutput) ToVirtualMachineResponsePropertiesPtrOutput() VirtualMachineResponsePropertiesPtrOutput {
	return o
}

func (o VirtualMachineResponsePropertiesPtrOutput) ToVirtualMachineResponsePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineResponsePropertiesPtrOutput {
	return o
}

func (o VirtualMachineResponsePropertiesPtrOutput) Elem() VirtualMachineResponsePropertiesOutput {
	return o.ApplyT(func(v *VirtualMachineResponseProperties) VirtualMachineResponseProperties { return *v }).(VirtualMachineResponsePropertiesOutput)
}

// Public IP address of the virtual machine.
func (o VirtualMachineResponsePropertiesPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachineResponsePropertiesPtrOutput) AdministratorAccount() VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineResponseProperties) *VirtualMachineSshCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachineResponsePropertiesPtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.SshPort
	}).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachineResponsePropertiesPtrOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineSize
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentials struct {
	// Password of admin account
	Password *string `pulumi:"password"`
	// Private key data
	PrivateKeyData *string `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData *string `pulumi:"publicKeyData"`
	// Username of admin account
	Username *string `pulumi:"username"`
}

// VirtualMachineSshCredentialsInput is an input type that accepts VirtualMachineSshCredentialsArgs and VirtualMachineSshCredentialsOutput values.
// You can construct a concrete instance of `VirtualMachineSshCredentialsInput` via:
//
//          VirtualMachineSshCredentialsArgs{...}
type VirtualMachineSshCredentialsInput interface {
	pulumi.Input

	ToVirtualMachineSshCredentialsOutput() VirtualMachineSshCredentialsOutput
	ToVirtualMachineSshCredentialsOutputWithContext(context.Context) VirtualMachineSshCredentialsOutput
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsArgs struct {
	// Password of admin account
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Private key data
	PrivateKeyData pulumi.StringPtrInput `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData pulumi.StringPtrInput `pulumi:"publicKeyData"`
	// Username of admin account
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (VirtualMachineSshCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSshCredentials)(nil)).Elem()
}

func (i VirtualMachineSshCredentialsArgs) ToVirtualMachineSshCredentialsOutput() VirtualMachineSshCredentialsOutput {
	return i.ToVirtualMachineSshCredentialsOutputWithContext(context.Background())
}

func (i VirtualMachineSshCredentialsArgs) ToVirtualMachineSshCredentialsOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsOutput)
}

func (i VirtualMachineSshCredentialsArgs) ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput {
	return i.ToVirtualMachineSshCredentialsPtrOutputWithContext(context.Background())
}

func (i VirtualMachineSshCredentialsArgs) ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsOutput).ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx)
}

// VirtualMachineSshCredentialsPtrInput is an input type that accepts VirtualMachineSshCredentialsArgs, VirtualMachineSshCredentialsPtr and VirtualMachineSshCredentialsPtrOutput values.
// You can construct a concrete instance of `VirtualMachineSshCredentialsPtrInput` via:
//
//          VirtualMachineSshCredentialsArgs{...}
//
//  or:
//
//          nil
type VirtualMachineSshCredentialsPtrInput interface {
	pulumi.Input

	ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput
	ToVirtualMachineSshCredentialsPtrOutputWithContext(context.Context) VirtualMachineSshCredentialsPtrOutput
}

type virtualMachineSshCredentialsPtrType VirtualMachineSshCredentialsArgs

func VirtualMachineSshCredentialsPtr(v *VirtualMachineSshCredentialsArgs) VirtualMachineSshCredentialsPtrInput {
	return (*virtualMachineSshCredentialsPtrType)(v)
}

func (*virtualMachineSshCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSshCredentials)(nil)).Elem()
}

func (i *virtualMachineSshCredentialsPtrType) ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput {
	return i.ToVirtualMachineSshCredentialsPtrOutputWithContext(context.Background())
}

func (i *virtualMachineSshCredentialsPtrType) ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsPtrOutput)
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSshCredentials)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsOutput) ToVirtualMachineSshCredentialsOutput() VirtualMachineSshCredentialsOutput {
	return o
}

func (o VirtualMachineSshCredentialsOutput) ToVirtualMachineSshCredentialsOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsOutput {
	return o
}

func (o VirtualMachineSshCredentialsOutput) ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput {
	return o.ToVirtualMachineSshCredentialsPtrOutputWithContext(context.Background())
}

func (o VirtualMachineSshCredentialsOutput) ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *VirtualMachineSshCredentials {
		return &v
	}).(VirtualMachineSshCredentialsPtrOutput)
}

// Password of admin account
func (o VirtualMachineSshCredentialsOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *string { return v.PrivateKeyData }).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *string { return v.PublicKeyData }).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type VirtualMachineSshCredentialsPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSshCredentials)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsPtrOutput) ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsPtrOutput) ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsPtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsPtrOutput) Elem() VirtualMachineSshCredentialsOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) VirtualMachineSshCredentials { return *v }).(VirtualMachineSshCredentialsOutput)
}

// Password of admin account
func (o VirtualMachineSshCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsPtrOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyData
	}).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsPtrOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) *string {
		if v == nil {
			return nil
		}
		return v.PublicKeyData
	}).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsInvokeResponse struct {
	// Password of admin account
	Password *string `pulumi:"password"`
	// Private key data
	PrivateKeyData *string `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData *string `pulumi:"publicKeyData"`
	// Username of admin account
	Username *string `pulumi:"username"`
}

// VirtualMachineSshCredentialsInvokeResponseInput is an input type that accepts VirtualMachineSshCredentialsInvokeResponseArgs and VirtualMachineSshCredentialsInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineSshCredentialsInvokeResponseInput` via:
//
//          VirtualMachineSshCredentialsInvokeResponseArgs{...}
type VirtualMachineSshCredentialsInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineSshCredentialsInvokeResponseOutput() VirtualMachineSshCredentialsInvokeResponseOutput
	ToVirtualMachineSshCredentialsInvokeResponseOutputWithContext(context.Context) VirtualMachineSshCredentialsInvokeResponseOutput
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsInvokeResponseArgs struct {
	// Password of admin account
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Private key data
	PrivateKeyData pulumi.StringPtrInput `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData pulumi.StringPtrInput `pulumi:"publicKeyData"`
	// Username of admin account
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (VirtualMachineSshCredentialsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSshCredentialsInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineSshCredentialsInvokeResponseArgs) ToVirtualMachineSshCredentialsInvokeResponseOutput() VirtualMachineSshCredentialsInvokeResponseOutput {
	return i.ToVirtualMachineSshCredentialsInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineSshCredentialsInvokeResponseArgs) ToVirtualMachineSshCredentialsInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsInvokeResponseOutput)
}

func (i VirtualMachineSshCredentialsInvokeResponseArgs) ToVirtualMachineSshCredentialsInvokeResponsePtrOutput() VirtualMachineSshCredentialsInvokeResponsePtrOutput {
	return i.ToVirtualMachineSshCredentialsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineSshCredentialsInvokeResponseArgs) ToVirtualMachineSshCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsInvokeResponseOutput).ToVirtualMachineSshCredentialsInvokeResponsePtrOutputWithContext(ctx)
}

// VirtualMachineSshCredentialsInvokeResponsePtrInput is an input type that accepts VirtualMachineSshCredentialsInvokeResponseArgs, VirtualMachineSshCredentialsInvokeResponsePtr and VirtualMachineSshCredentialsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineSshCredentialsInvokeResponsePtrInput` via:
//
//          VirtualMachineSshCredentialsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineSshCredentialsInvokeResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineSshCredentialsInvokeResponsePtrOutput() VirtualMachineSshCredentialsInvokeResponsePtrOutput
	ToVirtualMachineSshCredentialsInvokeResponsePtrOutputWithContext(context.Context) VirtualMachineSshCredentialsInvokeResponsePtrOutput
}

type virtualMachineSshCredentialsInvokeResponsePtrType VirtualMachineSshCredentialsInvokeResponseArgs

func VirtualMachineSshCredentialsInvokeResponsePtr(v *VirtualMachineSshCredentialsInvokeResponseArgs) VirtualMachineSshCredentialsInvokeResponsePtrInput {
	return (*virtualMachineSshCredentialsInvokeResponsePtrType)(v)
}

func (*virtualMachineSshCredentialsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSshCredentialsInvokeResponse)(nil)).Elem()
}

func (i *virtualMachineSshCredentialsInvokeResponsePtrType) ToVirtualMachineSshCredentialsInvokeResponsePtrOutput() VirtualMachineSshCredentialsInvokeResponsePtrOutput {
	return i.ToVirtualMachineSshCredentialsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineSshCredentialsInvokeResponsePtrType) ToVirtualMachineSshCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsInvokeResponsePtrOutput)
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSshCredentialsInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsInvokeResponseOutput) ToVirtualMachineSshCredentialsInvokeResponseOutput() VirtualMachineSshCredentialsInvokeResponseOutput {
	return o
}

func (o VirtualMachineSshCredentialsInvokeResponseOutput) ToVirtualMachineSshCredentialsInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsInvokeResponseOutput {
	return o
}

func (o VirtualMachineSshCredentialsInvokeResponseOutput) ToVirtualMachineSshCredentialsInvokeResponsePtrOutput() VirtualMachineSshCredentialsInvokeResponsePtrOutput {
	return o.ToVirtualMachineSshCredentialsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineSshCredentialsInvokeResponseOutput) ToVirtualMachineSshCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsInvokeResponse) *VirtualMachineSshCredentialsInvokeResponse {
		return &v
	}).(VirtualMachineSshCredentialsInvokeResponsePtrOutput)
}

// Password of admin account
func (o VirtualMachineSshCredentialsInvokeResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsInvokeResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsInvokeResponseOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsInvokeResponse) *string { return v.PrivateKeyData }).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsInvokeResponseOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsInvokeResponse) *string { return v.PublicKeyData }).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsInvokeResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsInvokeResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type VirtualMachineSshCredentialsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSshCredentialsInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsInvokeResponsePtrOutput) ToVirtualMachineSshCredentialsInvokeResponsePtrOutput() VirtualMachineSshCredentialsInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsInvokeResponsePtrOutput) ToVirtualMachineSshCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsInvokeResponsePtrOutput) Elem() VirtualMachineSshCredentialsInvokeResponseOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsInvokeResponse) VirtualMachineSshCredentialsInvokeResponse {
		return *v
	}).(VirtualMachineSshCredentialsInvokeResponseOutput)
}

// Password of admin account
func (o VirtualMachineSshCredentialsInvokeResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsInvokeResponsePtrOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyData
	}).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsInvokeResponsePtrOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicKeyData
	}).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsInvokeResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsResponse struct {
	// Password of admin account
	Password *string `pulumi:"password"`
	// Private key data
	PrivateKeyData *string `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData *string `pulumi:"publicKeyData"`
	// Username of admin account
	Username *string `pulumi:"username"`
}

// VirtualMachineSshCredentialsResponseInput is an input type that accepts VirtualMachineSshCredentialsResponseArgs and VirtualMachineSshCredentialsResponseOutput values.
// You can construct a concrete instance of `VirtualMachineSshCredentialsResponseInput` via:
//
//          VirtualMachineSshCredentialsResponseArgs{...}
type VirtualMachineSshCredentialsResponseInput interface {
	pulumi.Input

	ToVirtualMachineSshCredentialsResponseOutput() VirtualMachineSshCredentialsResponseOutput
	ToVirtualMachineSshCredentialsResponseOutputWithContext(context.Context) VirtualMachineSshCredentialsResponseOutput
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsResponseArgs struct {
	// Password of admin account
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Private key data
	PrivateKeyData pulumi.StringPtrInput `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData pulumi.StringPtrInput `pulumi:"publicKeyData"`
	// Username of admin account
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (VirtualMachineSshCredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSshCredentialsResponse)(nil)).Elem()
}

func (i VirtualMachineSshCredentialsResponseArgs) ToVirtualMachineSshCredentialsResponseOutput() VirtualMachineSshCredentialsResponseOutput {
	return i.ToVirtualMachineSshCredentialsResponseOutputWithContext(context.Background())
}

func (i VirtualMachineSshCredentialsResponseArgs) ToVirtualMachineSshCredentialsResponseOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsResponseOutput)
}

func (i VirtualMachineSshCredentialsResponseArgs) ToVirtualMachineSshCredentialsResponsePtrOutput() VirtualMachineSshCredentialsResponsePtrOutput {
	return i.ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineSshCredentialsResponseArgs) ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsResponseOutput).ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(ctx)
}

// VirtualMachineSshCredentialsResponsePtrInput is an input type that accepts VirtualMachineSshCredentialsResponseArgs, VirtualMachineSshCredentialsResponsePtr and VirtualMachineSshCredentialsResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineSshCredentialsResponsePtrInput` via:
//
//          VirtualMachineSshCredentialsResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineSshCredentialsResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineSshCredentialsResponsePtrOutput() VirtualMachineSshCredentialsResponsePtrOutput
	ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(context.Context) VirtualMachineSshCredentialsResponsePtrOutput
}

type virtualMachineSshCredentialsResponsePtrType VirtualMachineSshCredentialsResponseArgs

func VirtualMachineSshCredentialsResponsePtr(v *VirtualMachineSshCredentialsResponseArgs) VirtualMachineSshCredentialsResponsePtrInput {
	return (*virtualMachineSshCredentialsResponsePtrType)(v)
}

func (*virtualMachineSshCredentialsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSshCredentialsResponse)(nil)).Elem()
}

func (i *virtualMachineSshCredentialsResponsePtrType) ToVirtualMachineSshCredentialsResponsePtrOutput() VirtualMachineSshCredentialsResponsePtrOutput {
	return i.ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineSshCredentialsResponsePtrType) ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSshCredentialsResponse)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsResponseOutput) ToVirtualMachineSshCredentialsResponseOutput() VirtualMachineSshCredentialsResponseOutput {
	return o
}

func (o VirtualMachineSshCredentialsResponseOutput) ToVirtualMachineSshCredentialsResponseOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponseOutput {
	return o
}

func (o VirtualMachineSshCredentialsResponseOutput) ToVirtualMachineSshCredentialsResponsePtrOutput() VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineSshCredentialsResponseOutput) ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *VirtualMachineSshCredentialsResponse {
		return &v
	}).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Password of admin account
func (o VirtualMachineSshCredentialsResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsResponseOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *string { return v.PrivateKeyData }).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsResponseOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *string { return v.PublicKeyData }).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type VirtualMachineSshCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSshCredentialsResponse)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsResponsePtrOutput) ToVirtualMachineSshCredentialsResponsePtrOutput() VirtualMachineSshCredentialsResponsePtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsResponsePtrOutput) ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponsePtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsResponsePtrOutput) Elem() VirtualMachineSshCredentialsResponseOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) VirtualMachineSshCredentialsResponse { return *v }).(VirtualMachineSshCredentialsResponseOutput)
}

// Password of admin account
func (o VirtualMachineSshCredentialsResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsResponsePtrOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyData
	}).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsResponsePtrOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicKeyData
	}).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ACIServiceResponseInvokeResponseOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseInvokeResponseDataCollectionOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseInvokeResponseDataCollectionPtrOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseInvokeResponseEncryptionPropertiesOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseInvokeResponseEncryptionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseInvokeResponseEnvironmentImageRequestOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseInvokeResponseVnetConfigurationOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseInvokeResponseVnetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseDataCollectionOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseDataCollectionPtrOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseEncryptionPropertiesOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseEncryptionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseEnvironmentImageRequestOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseEnvironmentImageRequestPtrOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseVnetConfigurationOutput{})
	pulumi.RegisterOutputType(ACIServiceResponseResponseVnetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AKSOutput{})
	pulumi.RegisterOutputType(AKSInvokeResponseOutput{})
	pulumi.RegisterOutputType(AKSInvokeResponsePropertiesOutput{})
	pulumi.RegisterOutputType(AKSInvokeResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AKSPropertiesOutput{})
	pulumi.RegisterOutputType(AKSPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AKSReplicaStatusInvokeResponseErrorOutput{})
	pulumi.RegisterOutputType(AKSReplicaStatusInvokeResponseErrorPtrOutput{})
	pulumi.RegisterOutputType(AKSReplicaStatusResponseErrorOutput{})
	pulumi.RegisterOutputType(AKSReplicaStatusResponseErrorPtrOutput{})
	pulumi.RegisterOutputType(AKSResponseOutput{})
	pulumi.RegisterOutputType(AKSResponsePropertiesOutput{})
	pulumi.RegisterOutputType(AKSResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseInvokeResponseOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseInvokeResponseAutoScalerOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseInvokeResponseAutoScalerPtrOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseInvokeResponseDataCollectionOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseInvokeResponseDataCollectionPtrOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseInvokeResponseDeploymentStatusOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseInvokeResponseEnvironmentImageRequestOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseInvokeResponseEnvironmentImageRequestPtrOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseInvokeResponseLivenessProbeRequirementsOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseInvokeResponseLivenessProbeRequirementsPtrOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseAutoScalerOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseAutoScalerPtrOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseDataCollectionOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseDataCollectionPtrOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseDeploymentStatusOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseEnvironmentImageRequestOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseEnvironmentImageRequestPtrOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseLivenessProbeRequirementsOutput{})
	pulumi.RegisterOutputType(AKSServiceResponseResponseLivenessProbeRequirementsPtrOutput{})
	pulumi.RegisterOutputType(AKSVariantResponseInvokeResponseOutput{})
	pulumi.RegisterOutputType(AKSVariantResponseResponseOutput{})
	pulumi.RegisterOutputType(AksNetworkingConfigurationOutput{})
	pulumi.RegisterOutputType(AksNetworkingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AksNetworkingConfigurationInvokeResponseOutput{})
	pulumi.RegisterOutputType(AksNetworkingConfigurationInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(AksNetworkingConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AksNetworkingConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(AmlComputeOutput{})
	pulumi.RegisterOutputType(AmlComputeInvokeResponseOutput{})
	pulumi.RegisterOutputType(AmlComputeInvokeResponsePropertiesOutput{})
	pulumi.RegisterOutputType(AmlComputeInvokeResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AmlComputeNodeInformationInvokeResponseOutput{})
	pulumi.RegisterOutputType(AmlComputeNodeInformationInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(AmlComputePropertiesOutput{})
	pulumi.RegisterOutputType(AmlComputePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AmlComputeResponseOutput{})
	pulumi.RegisterOutputType(AmlComputeResponsePropertiesOutput{})
	pulumi.RegisterOutputType(AmlComputeResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ContainerResourceRequirementsOutput{})
	pulumi.RegisterOutputType(ContainerResourceRequirementsPtrOutput{})
	pulumi.RegisterOutputType(ContainerResourceRequirementsInvokeResponseOutput{})
	pulumi.RegisterOutputType(ContainerResourceRequirementsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerResourceRequirementsResponseOutput{})
	pulumi.RegisterOutputType(ContainerResourceRequirementsResponsePtrOutput{})
	pulumi.RegisterOutputType(CreateServiceRequestEnvironmentImageRequestOutput{})
	pulumi.RegisterOutputType(CreateServiceRequestEnvironmentImageRequestPtrOutput{})
	pulumi.RegisterOutputType(CreateServiceRequestKeysOutput{})
	pulumi.RegisterOutputType(CreateServiceRequestKeysPtrOutput{})
	pulumi.RegisterOutputType(DataFactoryOutput{})
	pulumi.RegisterOutputType(DataFactoryInvokeResponseOutput{})
	pulumi.RegisterOutputType(DataFactoryResponseOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsInvokeResponseOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsInvokeResponsePropertiesOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsInvokeResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsPropertiesOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsResponseOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsResponsePropertiesOutput{})
	pulumi.RegisterOutputType(DataLakeAnalyticsResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DatabricksOutput{})
	pulumi.RegisterOutputType(DatabricksInvokeResponseOutput{})
	pulumi.RegisterOutputType(DatabricksInvokeResponsePropertiesOutput{})
	pulumi.RegisterOutputType(DatabricksInvokeResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DatabricksPropertiesOutput{})
	pulumi.RegisterOutputType(DatabricksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DatabricksResponseOutput{})
	pulumi.RegisterOutputType(DatabricksResponsePropertiesOutput{})
	pulumi.RegisterOutputType(DatabricksResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DatasetReferenceOutput{})
	pulumi.RegisterOutputType(DatasetReferenceArrayOutput{})
	pulumi.RegisterOutputType(DatasetReferenceInvokeResponseOutput{})
	pulumi.RegisterOutputType(DatasetReferenceInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(DatasetReferenceResponseOutput{})
	pulumi.RegisterOutputType(DatasetReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(EncryptionPropertyOutput{})
	pulumi.RegisterOutputType(EncryptionPropertyPtrOutput{})
	pulumi.RegisterOutputType(EncryptionPropertyInvokeResponseOutput{})
	pulumi.RegisterOutputType(EncryptionPropertyResponseOutput{})
	pulumi.RegisterOutputType(EncryptionPropertyResponsePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentImageRequestEnvironmentOutput{})
	pulumi.RegisterOutputType(EnvironmentImageRequestEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentImageRequestEnvironmentReferenceOutput{})
	pulumi.RegisterOutputType(EnvironmentImageRequestEnvironmentReferencePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentImageResponseInvokeResponseEnvironmentOutput{})
	pulumi.RegisterOutputType(EnvironmentImageResponseInvokeResponseEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentImageResponseInvokeResponseEnvironmentReferenceOutput{})
	pulumi.RegisterOutputType(EnvironmentImageResponseInvokeResponseEnvironmentReferencePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentImageResponseResponseEnvironmentOutput{})
	pulumi.RegisterOutputType(EnvironmentImageResponseResponseEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentImageResponseResponseEnvironmentReferenceOutput{})
	pulumi.RegisterOutputType(EnvironmentImageResponseResponseEnvironmentReferencePtrOutput{})
	pulumi.RegisterOutputType(ErrorDetailInvokeResponseOutput{})
	pulumi.RegisterOutputType(ErrorDetailInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(ErrorResponseInvokeResponseOutput{})
	pulumi.RegisterOutputType(ErrorResponseResponseOutput{})
	pulumi.RegisterOutputType(HDInsightOutput{})
	pulumi.RegisterOutputType(HDInsightInvokeResponseOutput{})
	pulumi.RegisterOutputType(HDInsightInvokeResponsePropertiesOutput{})
	pulumi.RegisterOutputType(HDInsightInvokeResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(HDInsightPropertiesOutput{})
	pulumi.RegisterOutputType(HDInsightPropertiesPtrOutput{})
	pulumi.RegisterOutputType(HDInsightResponseOutput{})
	pulumi.RegisterOutputType(HDInsightResponsePropertiesOutput{})
	pulumi.RegisterOutputType(HDInsightResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityInvokeResponseOutput{})
	pulumi.RegisterOutputType(IdentityInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ImageAssetOutput{})
	pulumi.RegisterOutputType(ImageAssetArrayOutput{})
	pulumi.RegisterOutputType(ImageAssetInvokeResponseOutput{})
	pulumi.RegisterOutputType(ImageAssetInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ImageAssetResponseOutput{})
	pulumi.RegisterOutputType(ImageAssetResponseArrayOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LinkedWorkspacePropsOutput{})
	pulumi.RegisterOutputType(LinkedWorkspacePropsPtrOutput{})
	pulumi.RegisterOutputType(LinkedWorkspacePropsInvokeResponseOutput{})
	pulumi.RegisterOutputType(LinkedWorkspacePropsResponseOutput{})
	pulumi.RegisterOutputType(LinkedWorkspacePropsResponsePtrOutput{})
	pulumi.RegisterOutputType(MachineLearningServiceErrorInvokeResponseOutput{})
	pulumi.RegisterOutputType(MachineLearningServiceErrorInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(MachineLearningServiceErrorResponseOutput{})
	pulumi.RegisterOutputType(MachineLearningServiceErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(ModelOutput{})
	pulumi.RegisterOutputType(ModelArrayOutput{})
	pulumi.RegisterOutputType(ModelDockerSectionBaseImageRegistryOutput{})
	pulumi.RegisterOutputType(ModelDockerSectionBaseImageRegistryPtrOutput{})
	pulumi.RegisterOutputType(ModelDockerSectionResponseInvokeResponseBaseImageRegistryOutput{})
	pulumi.RegisterOutputType(ModelDockerSectionResponseInvokeResponseBaseImageRegistryPtrOutput{})
	pulumi.RegisterOutputType(ModelDockerSectionResponseResponseBaseImageRegistryOutput{})
	pulumi.RegisterOutputType(ModelDockerSectionResponseResponseBaseImageRegistryPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionDockerOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionDockerPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionPythonOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionPythonPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionROutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionRPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseInvokeResponseDockerOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseInvokeResponseDockerPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseInvokeResponsePythonOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseInvokeResponsePythonPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseInvokeResponseROutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseInvokeResponseRPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseInvokeResponseSparkOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseInvokeResponseSparkPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseResponseDockerOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseResponseDockerPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseResponsePythonOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseResponsePythonPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseResponseROutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseResponseRPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseResponseSparkOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionResponseResponseSparkPtrOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionSparkOutput{})
	pulumi.RegisterOutputType(ModelEnvironmentDefinitionSparkPtrOutput{})
	pulumi.RegisterOutputType(ModelInvokeResponseOutput{})
	pulumi.RegisterOutputType(ModelInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ModelResponseOutput{})
	pulumi.RegisterOutputType(ModelResponseArrayOutput{})
	pulumi.RegisterOutputType(NodeStateCountsInvokeResponseOutput{})
	pulumi.RegisterOutputType(NodeStateCountsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(NodeStateCountsResponseOutput{})
	pulumi.RegisterOutputType(NodeStateCountsResponsePtrOutput{})
	pulumi.RegisterOutputType(PasswordInvokeResponseOutput{})
	pulumi.RegisterOutputType(PasswordInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionInvokeResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointInvokeResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateInvokeResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(RCranPackageOutput{})
	pulumi.RegisterOutputType(RCranPackageArrayOutput{})
	pulumi.RegisterOutputType(RCranPackageInvokeResponseOutput{})
	pulumi.RegisterOutputType(RCranPackageInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(RCranPackageResponseOutput{})
	pulumi.RegisterOutputType(RCranPackageResponseArrayOutput{})
	pulumi.RegisterOutputType(RGitHubPackageOutput{})
	pulumi.RegisterOutputType(RGitHubPackageArrayOutput{})
	pulumi.RegisterOutputType(RGitHubPackageResponseInvokeResponseOutput{})
	pulumi.RegisterOutputType(RGitHubPackageResponseInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(RGitHubPackageResponseResponseOutput{})
	pulumi.RegisterOutputType(RGitHubPackageResponseResponseArrayOutput{})
	pulumi.RegisterOutputType(RegistryListCredentialsResultInvokeResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdOutput{})
	pulumi.RegisterOutputType(ResourceIdPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdInvokeResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdResponsePtrOutput{})
	pulumi.RegisterOutputType(ScaleSettingsOutput{})
	pulumi.RegisterOutputType(ScaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(ScaleSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(ScaleSettingsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ScaleSettingsResponseOutput{})
	pulumi.RegisterOutputType(ScaleSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceResponseBaseInvokeResponseErrorOutput{})
	pulumi.RegisterOutputType(ServiceResponseBaseResponseErrorOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceArrayOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceInvokeResponseOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceResponseOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuInvokeResponseOutput{})
	pulumi.RegisterOutputType(SkuInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SparkMavenPackageOutput{})
	pulumi.RegisterOutputType(SparkMavenPackageArrayOutput{})
	pulumi.RegisterOutputType(SparkMavenPackageInvokeResponseOutput{})
	pulumi.RegisterOutputType(SparkMavenPackageInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SparkMavenPackageResponseOutput{})
	pulumi.RegisterOutputType(SparkMavenPackageResponseArrayOutput{})
	pulumi.RegisterOutputType(SslConfigurationOutput{})
	pulumi.RegisterOutputType(SslConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SslConfigurationInvokeResponseOutput{})
	pulumi.RegisterOutputType(SslConfigurationInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SslConfigurationResponseOutput{})
	pulumi.RegisterOutputType(SslConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemServiceInvokeResponseOutput{})
	pulumi.RegisterOutputType(SystemServiceInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemServiceResponseOutput{})
	pulumi.RegisterOutputType(SystemServiceResponseArrayOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsPtrOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsInvokeResponseOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsResponseOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityInvokeResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityInvokeResponseMapOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(VirtualMachineOutput{})
	pulumi.RegisterOutputType(VirtualMachineImageOutput{})
	pulumi.RegisterOutputType(VirtualMachineImagePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineImageInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineImageInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineImageResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineImageResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineInvokeResponsePropertiesOutput{})
	pulumi.RegisterOutputType(VirtualMachineInvokeResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachinePropertiesOutput{})
	pulumi.RegisterOutputType(VirtualMachinePropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineResponsePropertiesOutput{})
	pulumi.RegisterOutputType(VirtualMachineResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsResponsePtrOutput{})
}
