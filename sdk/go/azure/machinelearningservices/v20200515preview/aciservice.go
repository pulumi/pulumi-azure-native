// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200515preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Machine Learning service object wrapped into ARM resource envelope.
type ACIService struct {
	pulumi.CustomResourceState

	// The identity of the resource.
	Identity IdentityResponsePtrOutput `pulumi:"identity"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Specifies the name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Service properties
	Properties pulumi.AnyOutput `pulumi:"properties"`
	// The sku of the workspace.
	Sku SkuResponsePtrOutput `pulumi:"sku"`
	// Contains resource tags defined as key/value pairs.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewACIService registers a new resource with the given unique name, arguments, and options.
func NewACIService(ctx *pulumi.Context,
	name string, args *ACIServiceArgs, opts ...pulumi.ResourceOption) (*ACIService, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ComputeType == nil {
		return nil, errors.New("invalid value for required argument 'ComputeType'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	if isZero(args.AppInsightsEnabled) {
		args.AppInsightsEnabled = pulumi.BoolPtr(false)
	}
	if isZero(args.AuthEnabled) {
		args.AuthEnabled = pulumi.BoolPtr(false)
	}
	args.ComputeType = pulumi.String("ACI")
	if isZero(args.SslEnabled) {
		args.SslEnabled = pulumi.BoolPtr(false)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:machinelearningservices:ACIService"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20200501preview:ACIService"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20200901preview:ACIService"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20210101:ACIService"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20210401:ACIService"),
		},
	})
	opts = append(opts, aliases)
	var resource ACIService
	err := ctx.RegisterResource("azure-native:machinelearningservices/v20200515preview:ACIService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetACIService gets an existing ACIService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetACIService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ACIServiceState, opts ...pulumi.ResourceOption) (*ACIService, error) {
	var resource ACIService
	err := ctx.ReadResource("azure-native:machinelearningservices/v20200515preview:ACIService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ACIService resources.
type aciserviceState struct {
}

type ACIServiceState struct {
}

func (ACIServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*aciserviceState)(nil)).Elem()
}

type aciserviceArgs struct {
	// Whether or not Application Insights is enabled.
	AppInsightsEnabled *bool `pulumi:"appInsightsEnabled"`
	// Whether or not authentication is enabled on the service.
	AuthEnabled *bool `pulumi:"authEnabled"`
	// The CName for the service.
	Cname *string `pulumi:"cname"`
	// The compute environment type for the service.
	// Expected value is 'ACI'.
	ComputeType string `pulumi:"computeType"`
	// The container resource requirements.
	ContainerResourceRequirements *ContainerResourceRequirements `pulumi:"containerResourceRequirements"`
	// Details of the data collection options specified.
	DataCollection *ACIServiceCreateRequestDataCollection `pulumi:"dataCollection"`
	// The description of the service.
	Description *string `pulumi:"description"`
	// The Dns label for the service.
	DnsNameLabel *string `pulumi:"dnsNameLabel"`
	// The encryption properties.
	EncryptionProperties *ACIServiceCreateRequestEncryptionProperties `pulumi:"encryptionProperties"`
	// The Environment, models and assets needed for inferencing.
	EnvironmentImageRequest *CreateServiceRequestEnvironmentImageRequest `pulumi:"environmentImageRequest"`
	// The authentication keys.
	Keys *CreateServiceRequestKeys `pulumi:"keys"`
	// The service tag dictionary. Tags are mutable.
	KvTags map[string]string `pulumi:"kvTags"`
	// The name of the Azure location/region.
	Location *string `pulumi:"location"`
	// The service properties dictionary. Properties are immutable.
	Properties map[string]string `pulumi:"properties"`
	// Name of the resource group in which workspace is located.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the Azure Machine Learning service.
	ServiceName *string `pulumi:"serviceName"`
	// The public SSL certificate in PEM format to use if SSL is enabled.
	SslCertificate *string `pulumi:"sslCertificate"`
	// Whether or not SSL is enabled.
	SslEnabled *bool `pulumi:"sslEnabled"`
	// The public SSL key in PEM format for the certificate.
	SslKey *string `pulumi:"sslKey"`
	// The virtual network configuration.
	VnetConfiguration *ACIServiceCreateRequestVnetConfiguration `pulumi:"vnetConfiguration"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a ACIService resource.
type ACIServiceArgs struct {
	// Whether or not Application Insights is enabled.
	AppInsightsEnabled pulumi.BoolPtrInput
	// Whether or not authentication is enabled on the service.
	AuthEnabled pulumi.BoolPtrInput
	// The CName for the service.
	Cname pulumi.StringPtrInput
	// The compute environment type for the service.
	// Expected value is 'ACI'.
	ComputeType pulumi.StringInput
	// The container resource requirements.
	ContainerResourceRequirements ContainerResourceRequirementsPtrInput
	// Details of the data collection options specified.
	DataCollection ACIServiceCreateRequestDataCollectionPtrInput
	// The description of the service.
	Description pulumi.StringPtrInput
	// The Dns label for the service.
	DnsNameLabel pulumi.StringPtrInput
	// The encryption properties.
	EncryptionProperties ACIServiceCreateRequestEncryptionPropertiesPtrInput
	// The Environment, models and assets needed for inferencing.
	EnvironmentImageRequest CreateServiceRequestEnvironmentImageRequestPtrInput
	// The authentication keys.
	Keys CreateServiceRequestKeysPtrInput
	// The service tag dictionary. Tags are mutable.
	KvTags pulumi.StringMapInput
	// The name of the Azure location/region.
	Location pulumi.StringPtrInput
	// The service properties dictionary. Properties are immutable.
	Properties pulumi.StringMapInput
	// Name of the resource group in which workspace is located.
	ResourceGroupName pulumi.StringInput
	// Name of the Azure Machine Learning service.
	ServiceName pulumi.StringPtrInput
	// The public SSL certificate in PEM format to use if SSL is enabled.
	SslCertificate pulumi.StringPtrInput
	// Whether or not SSL is enabled.
	SslEnabled pulumi.BoolPtrInput
	// The public SSL key in PEM format for the certificate.
	SslKey pulumi.StringPtrInput
	// The virtual network configuration.
	VnetConfiguration ACIServiceCreateRequestVnetConfigurationPtrInput
	// Name of Azure Machine Learning workspace.
	WorkspaceName pulumi.StringInput
}

func (ACIServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aciserviceArgs)(nil)).Elem()
}

type ACIServiceInput interface {
	pulumi.Input

	ToACIServiceOutput() ACIServiceOutput
	ToACIServiceOutputWithContext(ctx context.Context) ACIServiceOutput
}

func (*ACIService) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIService)(nil)).Elem()
}

func (i *ACIService) ToACIServiceOutput() ACIServiceOutput {
	return i.ToACIServiceOutputWithContext(context.Background())
}

func (i *ACIService) ToACIServiceOutputWithContext(ctx context.Context) ACIServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACIServiceOutput)
}

type ACIServiceOutput struct{ *pulumi.OutputState }

func (ACIServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACIService)(nil)).Elem()
}

func (o ACIServiceOutput) ToACIServiceOutput() ACIServiceOutput {
	return o
}

func (o ACIServiceOutput) ToACIServiceOutputWithContext(ctx context.Context) ACIServiceOutput {
	return o
}

// The identity of the resource.
func (o ACIServiceOutput) Identity() IdentityResponsePtrOutput {
	return o.ApplyT(func(v *ACIService) IdentityResponsePtrOutput { return v.Identity }).(IdentityResponsePtrOutput)
}

// Specifies the location of the resource.
func (o ACIServiceOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACIService) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Specifies the name of the resource.
func (o ACIServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ACIService) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Service properties
func (o ACIServiceOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v *ACIService) pulumi.AnyOutput { return v.Properties }).(pulumi.AnyOutput)
}

// The sku of the workspace.
func (o ACIServiceOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v *ACIService) SkuResponsePtrOutput { return v.Sku }).(SkuResponsePtrOutput)
}

// Contains resource tags defined as key/value pairs.
func (o ACIServiceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ACIService) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the type of the resource.
func (o ACIServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ACIService) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ACIServiceOutput{})
}
