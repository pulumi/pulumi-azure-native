// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200515preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Machine Learning service object wrapped into ARM resource envelope.
type AKSService struct {
	pulumi.CustomResourceState

	// The identity of the resource.
	Identity IdentityResponsePtrOutput `pulumi:"identity"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Specifies the name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Service properties
	Properties pulumi.AnyOutput `pulumi:"properties"`
	// The sku of the workspace.
	Sku SkuResponsePtrOutput `pulumi:"sku"`
	// Contains resource tags defined as key/value pairs.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAKSService registers a new resource with the given unique name, arguments, and options.
func NewAKSService(ctx *pulumi.Context,
	name string, args *AKSServiceArgs, opts ...pulumi.ResourceOption) (*AKSService, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ComputeType == nil {
		return nil, errors.New("invalid value for required argument 'ComputeType'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	args.ComputeType = pulumi.String("AKS")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:machinelearningservices:AKSService"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20200501preview:AKSService"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20200901preview:AKSService"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20210101:AKSService"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20210401:AKSService"),
		},
	})
	opts = append(opts, aliases)
	var resource AKSService
	err := ctx.RegisterResource("azure-native:machinelearningservices/v20200515preview:AKSService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAKSService gets an existing AKSService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAKSService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AKSServiceState, opts ...pulumi.ResourceOption) (*AKSService, error) {
	var resource AKSService
	err := ctx.ReadResource("azure-native:machinelearningservices/v20200515preview:AKSService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AKSService resources.
type aksserviceState struct {
}

type AKSServiceState struct {
}

func (AKSServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*aksserviceState)(nil)).Elem()
}

type aksserviceArgs struct {
	// Whether or not AAD authentication is enabled.
	AadAuthEnabled *bool `pulumi:"aadAuthEnabled"`
	// Whether or not Application Insights is enabled.
	AppInsightsEnabled *bool `pulumi:"appInsightsEnabled"`
	// Whether or not authentication is enabled.
	AuthEnabled *bool `pulumi:"authEnabled"`
	// The auto scaler properties.
	AutoScaler *AKSServiceCreateRequestAutoScaler `pulumi:"autoScaler"`
	// The name of the compute resource.
	ComputeName *string `pulumi:"computeName"`
	// The compute environment type for the service.
	// Expected value is 'AKS'.
	ComputeType string `pulumi:"computeType"`
	// The container resource requirements.
	ContainerResourceRequirements *ContainerResourceRequirements `pulumi:"containerResourceRequirements"`
	// Details of the data collection options specified.
	DataCollection *AKSServiceCreateRequestDataCollection `pulumi:"dataCollection"`
	// The description of the service.
	Description *string `pulumi:"description"`
	// The Environment, models and assets needed for inferencing.
	EnvironmentImageRequest *CreateServiceRequestEnvironmentImageRequest `pulumi:"environmentImageRequest"`
	// Is this the default variant.
	IsDefault *bool `pulumi:"isDefault"`
	// The authentication keys.
	Keys *CreateServiceRequestKeys `pulumi:"keys"`
	// The service tag dictionary. Tags are mutable.
	KvTags map[string]string `pulumi:"kvTags"`
	// The liveness probe requirements.
	LivenessProbeRequirements *AKSServiceCreateRequestLivenessProbeRequirements `pulumi:"livenessProbeRequirements"`
	// The name of the Azure location/region.
	Location *string `pulumi:"location"`
	// The maximum number of concurrent requests per container.
	MaxConcurrentRequestsPerContainer *int `pulumi:"maxConcurrentRequestsPerContainer"`
	// Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
	MaxQueueWaitMs *int `pulumi:"maxQueueWaitMs"`
	// Kubernetes namespace for the service.
	Namespace *string `pulumi:"namespace"`
	// The number of replicas on the cluster.
	NumReplicas *int `pulumi:"numReplicas"`
	// The service properties dictionary. Properties are immutable.
	Properties map[string]string `pulumi:"properties"`
	// Name of the resource group in which workspace is located.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The scoring timeout in milliseconds.
	ScoringTimeoutMs *int `pulumi:"scoringTimeoutMs"`
	// Name of the Azure Machine Learning service.
	ServiceName *string `pulumi:"serviceName"`
	// The amount of traffic variant receives.
	TrafficPercentile *float64 `pulumi:"trafficPercentile"`
	// The type of the variant.
	Type *string `pulumi:"type"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a AKSService resource.
type AKSServiceArgs struct {
	// Whether or not AAD authentication is enabled.
	AadAuthEnabled pulumi.BoolPtrInput
	// Whether or not Application Insights is enabled.
	AppInsightsEnabled pulumi.BoolPtrInput
	// Whether or not authentication is enabled.
	AuthEnabled pulumi.BoolPtrInput
	// The auto scaler properties.
	AutoScaler AKSServiceCreateRequestAutoScalerPtrInput
	// The name of the compute resource.
	ComputeName pulumi.StringPtrInput
	// The compute environment type for the service.
	// Expected value is 'AKS'.
	ComputeType pulumi.StringInput
	// The container resource requirements.
	ContainerResourceRequirements ContainerResourceRequirementsPtrInput
	// Details of the data collection options specified.
	DataCollection AKSServiceCreateRequestDataCollectionPtrInput
	// The description of the service.
	Description pulumi.StringPtrInput
	// The Environment, models and assets needed for inferencing.
	EnvironmentImageRequest CreateServiceRequestEnvironmentImageRequestPtrInput
	// Is this the default variant.
	IsDefault pulumi.BoolPtrInput
	// The authentication keys.
	Keys CreateServiceRequestKeysPtrInput
	// The service tag dictionary. Tags are mutable.
	KvTags pulumi.StringMapInput
	// The liveness probe requirements.
	LivenessProbeRequirements AKSServiceCreateRequestLivenessProbeRequirementsPtrInput
	// The name of the Azure location/region.
	Location pulumi.StringPtrInput
	// The maximum number of concurrent requests per container.
	MaxConcurrentRequestsPerContainer pulumi.IntPtrInput
	// Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
	MaxQueueWaitMs pulumi.IntPtrInput
	// Kubernetes namespace for the service.
	Namespace pulumi.StringPtrInput
	// The number of replicas on the cluster.
	NumReplicas pulumi.IntPtrInput
	// The service properties dictionary. Properties are immutable.
	Properties pulumi.StringMapInput
	// Name of the resource group in which workspace is located.
	ResourceGroupName pulumi.StringInput
	// The scoring timeout in milliseconds.
	ScoringTimeoutMs pulumi.IntPtrInput
	// Name of the Azure Machine Learning service.
	ServiceName pulumi.StringPtrInput
	// The amount of traffic variant receives.
	TrafficPercentile pulumi.Float64PtrInput
	// The type of the variant.
	Type pulumi.StringPtrInput
	// Name of Azure Machine Learning workspace.
	WorkspaceName pulumi.StringInput
}

func (AKSServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aksserviceArgs)(nil)).Elem()
}

type AKSServiceInput interface {
	pulumi.Input

	ToAKSServiceOutput() AKSServiceOutput
	ToAKSServiceOutputWithContext(ctx context.Context) AKSServiceOutput
}

func (*AKSService) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSService)(nil)).Elem()
}

func (i *AKSService) ToAKSServiceOutput() AKSServiceOutput {
	return i.ToAKSServiceOutputWithContext(context.Background())
}

func (i *AKSService) ToAKSServiceOutputWithContext(ctx context.Context) AKSServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AKSServiceOutput)
}

type AKSServiceOutput struct{ *pulumi.OutputState }

func (AKSServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AKSService)(nil)).Elem()
}

func (o AKSServiceOutput) ToAKSServiceOutput() AKSServiceOutput {
	return o
}

func (o AKSServiceOutput) ToAKSServiceOutputWithContext(ctx context.Context) AKSServiceOutput {
	return o
}

// The identity of the resource.
func (o AKSServiceOutput) Identity() IdentityResponsePtrOutput {
	return o.ApplyT(func(v *AKSService) IdentityResponsePtrOutput { return v.Identity }).(IdentityResponsePtrOutput)
}

// Specifies the location of the resource.
func (o AKSServiceOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AKSService) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Specifies the name of the resource.
func (o AKSServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AKSService) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Service properties
func (o AKSServiceOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v *AKSService) pulumi.AnyOutput { return v.Properties }).(pulumi.AnyOutput)
}

// The sku of the workspace.
func (o AKSServiceOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v *AKSService) SkuResponsePtrOutput { return v.Sku }).(SkuResponsePtrOutput)
}

// Contains resource tags defined as key/value pairs.
func (o AKSServiceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AKSService) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the type of the resource.
func (o AKSServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AKSService) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AKSServiceOutput{})
}
