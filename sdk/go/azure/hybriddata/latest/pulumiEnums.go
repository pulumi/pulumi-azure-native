// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// This is the preferred geo location for the job to run.
type RunLocation pulumi.String

const (
	RunLocationNone               = RunLocation("none")
	RunLocationAustraliaeast      = RunLocation("australiaeast")
	RunLocationAustraliasoutheast = RunLocation("australiasoutheast")
	RunLocationBrazilsouth        = RunLocation("brazilsouth")
	RunLocationCanadacentral      = RunLocation("canadacentral")
	RunLocationCanadaeast         = RunLocation("canadaeast")
	RunLocationCentralindia       = RunLocation("centralindia")
	RunLocationCentralus          = RunLocation("centralus")
	RunLocationEastasia           = RunLocation("eastasia")
	RunLocationEastus             = RunLocation("eastus")
	RunLocationEastus2            = RunLocation("eastus2")
	RunLocationJapaneast          = RunLocation("japaneast")
	RunLocationJapanwest          = RunLocation("japanwest")
	RunLocationKoreacentral       = RunLocation("koreacentral")
	RunLocationKoreasouth         = RunLocation("koreasouth")
	RunLocationSoutheastasia      = RunLocation("southeastasia")
	RunLocationSouthcentralus     = RunLocation("southcentralus")
	RunLocationSouthindia         = RunLocation("southindia")
	RunLocationNorthcentralus     = RunLocation("northcentralus")
	RunLocationNortheurope        = RunLocation("northeurope")
	RunLocationUksouth            = RunLocation("uksouth")
	RunLocationUkwest             = RunLocation("ukwest")
	RunLocationWestcentralus      = RunLocation("westcentralus")
	RunLocationWesteurope         = RunLocation("westeurope")
	RunLocationWestindia          = RunLocation("westindia")
	RunLocationWestus             = RunLocation("westus")
	RunLocationWestus2            = RunLocation("westus2")
)

func (RunLocation) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e RunLocation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RunLocation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RunLocation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RunLocation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// State of the job definition.
type State pulumi.String

const (
	StateDisabled  = State("Disabled")
	StateEnabled   = State("Enabled")
	StateSupported = State("Supported")
)

func (State) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e State) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e State) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e State) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e State) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The encryption algorithm used to encrypt data.
type SupportedAlgorithm pulumi.String

const (
	SupportedAlgorithmNone      = SupportedAlgorithm("None")
	SupportedAlgorithm_RSA1_5   = SupportedAlgorithm("RSA1_5")
	SupportedAlgorithm_RSA_OAEP = SupportedAlgorithm("RSA_OAEP")
	SupportedAlgorithmPlainText = SupportedAlgorithm("PlainText")
)

func (SupportedAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SupportedAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SupportedAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SupportedAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SupportedAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Enum to detect if user confirmation is required. If not passed will default to NotRequired.
type UserConfirmation pulumi.String

const (
	UserConfirmationNotRequired = UserConfirmation("NotRequired")
	UserConfirmationRequired    = UserConfirmation("Required")
)

func (UserConfirmation) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e UserConfirmation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserConfirmation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserConfirmation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UserConfirmation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
