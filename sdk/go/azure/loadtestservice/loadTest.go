// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loadtestservice

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// LoadTest details
// API Version: 2021-12-01-preview.
type LoadTest struct {
	pulumi.CustomResourceState

	// Resource data plane URI.
	DataPlaneURI pulumi.StringOutput `pulumi:"dataPlaneURI"`
	// Description of the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The type of identity used for the resource.
	Identity SystemAssignedServiceIdentityResponsePtrOutput `pulumi:"identity"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Resource provisioning state.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewLoadTest registers a new resource with the given unique name, arguments, and options.
func NewLoadTest(ctx *pulumi.Context,
	name string, args *LoadTestArgs, opts ...pulumi.ResourceOption) (*LoadTest, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:loadtestservice/v20211201preview:LoadTest"),
		},
		{
			Type: pulumi.String("azure-native:loadtestservice/v20220415preview:LoadTest"),
		},
	})
	opts = append(opts, aliases)
	var resource LoadTest
	err := ctx.RegisterResource("azure-native:loadtestservice:LoadTest", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadTest gets an existing LoadTest resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadTest(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadTestState, opts ...pulumi.ResourceOption) (*LoadTest, error) {
	var resource LoadTest
	err := ctx.ReadResource("azure-native:loadtestservice:LoadTest", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadTest resources.
type loadTestState struct {
}

type LoadTestState struct {
}

func (LoadTestState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadTestState)(nil)).Elem()
}

type loadTestArgs struct {
	// Description of the resource.
	Description *string `pulumi:"description"`
	// The type of identity used for the resource.
	Identity *SystemAssignedServiceIdentity `pulumi:"identity"`
	// Load Test resource name.
	LoadTestName *string `pulumi:"loadTestName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a LoadTest resource.
type LoadTestArgs struct {
	// Description of the resource.
	Description pulumi.StringPtrInput
	// The type of identity used for the resource.
	Identity SystemAssignedServiceIdentityPtrInput
	// Load Test resource name.
	LoadTestName pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (LoadTestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadTestArgs)(nil)).Elem()
}

type LoadTestInput interface {
	pulumi.Input

	ToLoadTestOutput() LoadTestOutput
	ToLoadTestOutputWithContext(ctx context.Context) LoadTestOutput
}

func (*LoadTest) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadTest)(nil)).Elem()
}

func (i *LoadTest) ToLoadTestOutput() LoadTestOutput {
	return i.ToLoadTestOutputWithContext(context.Background())
}

func (i *LoadTest) ToLoadTestOutputWithContext(ctx context.Context) LoadTestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadTestOutput)
}

type LoadTestOutput struct{ *pulumi.OutputState }

func (LoadTestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadTest)(nil)).Elem()
}

func (o LoadTestOutput) ToLoadTestOutput() LoadTestOutput {
	return o
}

func (o LoadTestOutput) ToLoadTestOutputWithContext(ctx context.Context) LoadTestOutput {
	return o
}

// Resource data plane URI.
func (o LoadTestOutput) DataPlaneURI() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadTest) pulumi.StringOutput { return v.DataPlaneURI }).(pulumi.StringOutput)
}

// Description of the resource.
func (o LoadTestOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadTest) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The type of identity used for the resource.
func (o LoadTestOutput) Identity() SystemAssignedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v *LoadTest) SystemAssignedServiceIdentityResponsePtrOutput { return v.Identity }).(SystemAssignedServiceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o LoadTestOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadTest) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LoadTestOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadTest) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Resource provisioning state.
func (o LoadTestOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadTest) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LoadTestOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *LoadTest) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LoadTestOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LoadTest) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LoadTestOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadTest) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LoadTestOutput{})
}
