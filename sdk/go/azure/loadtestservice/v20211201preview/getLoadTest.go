// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// LoadTest details
func LookupLoadTest(ctx *pulumi.Context, args *LookupLoadTestArgs, opts ...pulumi.InvokeOption) (*LookupLoadTestResult, error) {
	var rv LookupLoadTestResult
	err := ctx.Invoke("azure-native:loadtestservice/v20211201preview:getLoadTest", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLoadTestArgs struct {
	// Load Test resource name.
	LoadTestName string `pulumi:"loadTestName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// LoadTest details
type LookupLoadTestResult struct {
	// Resource data plane URI.
	DataPlaneURI string `pulumi:"dataPlaneURI"`
	// Description of the resource.
	Description *string `pulumi:"description"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The type of identity used for the resource.
	Identity *SystemAssignedServiceIdentityResponse `pulumi:"identity"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Resource provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupLoadTestOutput(ctx *pulumi.Context, args LookupLoadTestOutputArgs, opts ...pulumi.InvokeOption) LookupLoadTestResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLoadTestResult, error) {
			args := v.(LookupLoadTestArgs)
			r, err := LookupLoadTest(ctx, &args, opts...)
			var s LookupLoadTestResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLoadTestResultOutput)
}

type LookupLoadTestOutputArgs struct {
	// Load Test resource name.
	LoadTestName pulumi.StringInput `pulumi:"loadTestName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupLoadTestOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadTestArgs)(nil)).Elem()
}

// LoadTest details
type LookupLoadTestResultOutput struct{ *pulumi.OutputState }

func (LookupLoadTestResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadTestResult)(nil)).Elem()
}

func (o LookupLoadTestResultOutput) ToLookupLoadTestResultOutput() LookupLoadTestResultOutput {
	return o
}

func (o LookupLoadTestResultOutput) ToLookupLoadTestResultOutputWithContext(ctx context.Context) LookupLoadTestResultOutput {
	return o
}

// Resource data plane URI.
func (o LookupLoadTestResultOutput) DataPlaneURI() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadTestResult) string { return v.DataPlaneURI }).(pulumi.StringOutput)
}

// Description of the resource.
func (o LookupLoadTestResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadTestResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupLoadTestResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadTestResult) string { return v.Id }).(pulumi.StringOutput)
}

// The type of identity used for the resource.
func (o LookupLoadTestResultOutput) Identity() SystemAssignedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupLoadTestResult) *SystemAssignedServiceIdentityResponse { return v.Identity }).(SystemAssignedServiceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o LookupLoadTestResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadTestResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupLoadTestResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadTestResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resource provisioning state.
func (o LookupLoadTestResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadTestResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupLoadTestResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupLoadTestResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupLoadTestResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLoadTestResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupLoadTestResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadTestResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLoadTestResultOutput{})
}
