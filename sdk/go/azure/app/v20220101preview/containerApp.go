// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220101preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Container App.
type ContainerApp struct {
	pulumi.CustomResourceState

	// Non versioned Container App configuration properties.
	Configuration ConfigurationResponsePtrOutput `pulumi:"configuration"`
	// Id used to verify domain name ownership
	CustomDomainVerificationId pulumi.StringOutput `pulumi:"customDomainVerificationId"`
	// managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.
	Identity ManagedServiceIdentityResponsePtrOutput `pulumi:"identity"`
	// Fully Qualified Domain Name of the latest revision of the Container App.
	LatestRevisionFqdn pulumi.StringOutput `pulumi:"latestRevisionFqdn"`
	// Name of the latest revision of the Container App.
	LatestRevisionName pulumi.StringOutput `pulumi:"latestRevisionName"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource ID of the Container App's environment.
	ManagedEnvironmentId pulumi.StringPtrOutput `pulumi:"managedEnvironmentId"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Outbound IP Addresses for container app.
	OutboundIPAddresses pulumi.StringArrayOutput `pulumi:"outboundIPAddresses"`
	// Provisioning state of the Container App.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Container App versioned application definition.
	Template TemplateResponsePtrOutput `pulumi:"template"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewContainerApp registers a new resource with the given unique name, arguments, and options.
func NewContainerApp(ctx *pulumi.Context,
	name string, args *ContainerAppArgs, opts ...pulumi.ResourceOption) (*ContainerApp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Configuration != nil {
		args.Configuration = args.Configuration.ToConfigurationPtrOutput().ApplyT(func(v *Configuration) *Configuration { return v.Defaults() }).(ConfigurationPtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:app:ContainerApp"),
		},
		{
			Type: pulumi.String("azure-native:app/v20220301:ContainerApp"),
		},
	})
	opts = append(opts, aliases)
	var resource ContainerApp
	err := ctx.RegisterResource("azure-native:app/v20220101preview:ContainerApp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContainerApp gets an existing ContainerApp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContainerApp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContainerAppState, opts ...pulumi.ResourceOption) (*ContainerApp, error) {
	var resource ContainerApp
	err := ctx.ReadResource("azure-native:app/v20220101preview:ContainerApp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContainerApp resources.
type containerAppState struct {
}

type ContainerAppState struct {
}

func (ContainerAppState) ElementType() reflect.Type {
	return reflect.TypeOf((*containerAppState)(nil)).Elem()
}

type containerAppArgs struct {
	// Non versioned Container App configuration properties.
	Configuration *Configuration `pulumi:"configuration"`
	// managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.
	Identity *ManagedServiceIdentity `pulumi:"identity"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Resource ID of the Container App's environment.
	ManagedEnvironmentId *string `pulumi:"managedEnvironmentId"`
	// Name of the Container App.
	Name *string `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Container App versioned application definition.
	Template *Template `pulumi:"template"`
}

// The set of arguments for constructing a ContainerApp resource.
type ContainerAppArgs struct {
	// Non versioned Container App configuration properties.
	Configuration ConfigurationPtrInput
	// managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.
	Identity ManagedServiceIdentityPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Resource ID of the Container App's environment.
	ManagedEnvironmentId pulumi.StringPtrInput
	// Name of the Container App.
	Name pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Container App versioned application definition.
	Template TemplatePtrInput
}

func (ContainerAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*containerAppArgs)(nil)).Elem()
}

type ContainerAppInput interface {
	pulumi.Input

	ToContainerAppOutput() ContainerAppOutput
	ToContainerAppOutputWithContext(ctx context.Context) ContainerAppOutput
}

func (*ContainerApp) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerApp)(nil)).Elem()
}

func (i *ContainerApp) ToContainerAppOutput() ContainerAppOutput {
	return i.ToContainerAppOutputWithContext(context.Background())
}

func (i *ContainerApp) ToContainerAppOutputWithContext(ctx context.Context) ContainerAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerAppOutput)
}

type ContainerAppOutput struct{ *pulumi.OutputState }

func (ContainerAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerApp)(nil)).Elem()
}

func (o ContainerAppOutput) ToContainerAppOutput() ContainerAppOutput {
	return o
}

func (o ContainerAppOutput) ToContainerAppOutputWithContext(ctx context.Context) ContainerAppOutput {
	return o
}

// Non versioned Container App configuration properties.
func (o ContainerAppOutput) Configuration() ConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ContainerApp) ConfigurationResponsePtrOutput { return v.Configuration }).(ConfigurationResponsePtrOutput)
}

// Id used to verify domain name ownership
func (o ContainerAppOutput) CustomDomainVerificationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerApp) pulumi.StringOutput { return v.CustomDomainVerificationId }).(pulumi.StringOutput)
}

// managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.
func (o ContainerAppOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v *ContainerApp) ManagedServiceIdentityResponsePtrOutput { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// Fully Qualified Domain Name of the latest revision of the Container App.
func (o ContainerAppOutput) LatestRevisionFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerApp) pulumi.StringOutput { return v.LatestRevisionFqdn }).(pulumi.StringOutput)
}

// Name of the latest revision of the Container App.
func (o ContainerAppOutput) LatestRevisionName() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerApp) pulumi.StringOutput { return v.LatestRevisionName }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o ContainerAppOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerApp) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Resource ID of the Container App's environment.
func (o ContainerAppOutput) ManagedEnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerApp) pulumi.StringPtrOutput { return v.ManagedEnvironmentId }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o ContainerAppOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerApp) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Outbound IP Addresses for container app.
func (o ContainerAppOutput) OutboundIPAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerApp) pulumi.StringArrayOutput { return v.OutboundIPAddresses }).(pulumi.StringArrayOutput)
}

// Provisioning state of the Container App.
func (o ContainerAppOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerApp) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ContainerAppOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ContainerApp) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o ContainerAppOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContainerApp) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Container App versioned application definition.
func (o ContainerAppOutput) Template() TemplateResponsePtrOutput {
	return o.ApplyT(func(v *ContainerApp) TemplateResponsePtrOutput { return v.Template }).(TemplateResponsePtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ContainerAppOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerApp) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ContainerAppOutput{})
}
