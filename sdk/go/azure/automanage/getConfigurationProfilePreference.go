// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package automanage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of the configuration profile preference.
// API Version: 2020-06-30-preview.
func LookupConfigurationProfilePreference(ctx *pulumi.Context, args *LookupConfigurationProfilePreferenceArgs, opts ...pulumi.InvokeOption) (*LookupConfigurationProfilePreferenceResult, error) {
	var rv LookupConfigurationProfilePreferenceResult
	err := ctx.Invoke("azure-native:automanage:getConfigurationProfilePreference", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConfigurationProfilePreferenceArgs struct {
	// The configuration profile preference name.
	ConfigurationProfilePreferenceName string `pulumi:"configurationProfilePreferenceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Definition of the configuration profile preference.
type LookupConfigurationProfilePreferenceResult struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Properties of the configuration profile preference.
	Properties ConfigurationProfilePreferencePropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupConfigurationProfilePreferenceOutput(ctx *pulumi.Context, args LookupConfigurationProfilePreferenceOutputArgs, opts ...pulumi.InvokeOption) LookupConfigurationProfilePreferenceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConfigurationProfilePreferenceResult, error) {
			args := v.(LookupConfigurationProfilePreferenceArgs)
			r, err := LookupConfigurationProfilePreference(ctx, &args, opts...)
			var s LookupConfigurationProfilePreferenceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConfigurationProfilePreferenceResultOutput)
}

type LookupConfigurationProfilePreferenceOutputArgs struct {
	// The configuration profile preference name.
	ConfigurationProfilePreferenceName pulumi.StringInput `pulumi:"configurationProfilePreferenceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupConfigurationProfilePreferenceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationProfilePreferenceArgs)(nil)).Elem()
}

// Definition of the configuration profile preference.
type LookupConfigurationProfilePreferenceResultOutput struct{ *pulumi.OutputState }

func (LookupConfigurationProfilePreferenceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationProfilePreferenceResult)(nil)).Elem()
}

func (o LookupConfigurationProfilePreferenceResultOutput) ToLookupConfigurationProfilePreferenceResultOutput() LookupConfigurationProfilePreferenceResultOutput {
	return o
}

func (o LookupConfigurationProfilePreferenceResultOutput) ToLookupConfigurationProfilePreferenceResultOutputWithContext(ctx context.Context) LookupConfigurationProfilePreferenceResultOutput {
	return o
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupConfigurationProfilePreferenceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationProfilePreferenceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupConfigurationProfilePreferenceResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationProfilePreferenceResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupConfigurationProfilePreferenceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationProfilePreferenceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the configuration profile preference.
func (o LookupConfigurationProfilePreferenceResultOutput) Properties() ConfigurationProfilePreferencePropertiesResponseOutput {
	return o.ApplyT(func(v LookupConfigurationProfilePreferenceResult) ConfigurationProfilePreferencePropertiesResponse {
		return v.Properties
	}).(ConfigurationProfilePreferencePropertiesResponseOutput)
}

// Resource tags.
func (o LookupConfigurationProfilePreferenceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConfigurationProfilePreferenceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupConfigurationProfilePreferenceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationProfilePreferenceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigurationProfilePreferenceResultOutput{})
}
