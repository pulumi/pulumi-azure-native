// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Connector model definition
type CloudConnector struct {
	pulumi.CustomResourceState

	// Connector billing model
	BillingModel pulumi.StringPtrOutput `pulumi:"billingModel"`
	// Collection information
	CollectionInfo ConnectorCollectionInfoResponseOutput `pulumi:"collectionInfo"`
	// Connector definition creation datetime
	CreatedOn pulumi.StringOutput `pulumi:"createdOn"`
	// Credentials authentication key (eg AWS ARN)
	CredentialsKey pulumi.StringPtrOutput `pulumi:"credentialsKey"`
	// Number of days remaining of trial
	DaysTrialRemaining pulumi.IntOutput `pulumi:"daysTrialRemaining"`
	// Default ManagementGroupId
	DefaultManagementGroupId pulumi.StringPtrOutput `pulumi:"defaultManagementGroupId"`
	// Connector DisplayName
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Associated ExternalBillingAccountId
	ExternalBillingAccountId pulumi.StringOutput `pulumi:"externalBillingAccountId"`
	// Connector kind (eg aws)
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Connector last modified datetime
	ModifiedOn pulumi.StringOutput `pulumi:"modifiedOn"`
	// Connector name
	Name pulumi.StringOutput `pulumi:"name"`
	// The display name of the providerBillingAccountId as defined on the external provider
	ProviderBillingAccountDisplayName pulumi.StringOutput `pulumi:"providerBillingAccountDisplayName"`
	// Connector providerBillingAccountId, determined from credentials (eg AWS Consolidated account number)
	ProviderBillingAccountId pulumi.StringOutput `pulumi:"providerBillingAccountId"`
	// Identifying source report. (For AWS this is a CUR report name, defined with Daily and with Resources)
	ReportId pulumi.StringPtrOutput `pulumi:"reportId"`
	// Connector status
	Status pulumi.StringOutput `pulumi:"status"`
	// Billing SubscriptionId
	SubscriptionId pulumi.StringPtrOutput `pulumi:"subscriptionId"`
	// Connector type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCloudConnector registers a new resource with the given unique name, arguments, and options.
func NewCloudConnector(ctx *pulumi.Context,
	name string, args *CloudConnectorArgs, opts ...pulumi.ResourceOption) (*CloudConnector, error) {
	if args == nil {
		args = &CloudConnectorArgs{}
	}

	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:costmanagement:CloudConnector"),
		},
		{
			Type: pulumi.String("azure-native:costmanagement/v20180801preview:CloudConnector"),
		},
	})
	opts = append(opts, aliases)
	var resource CloudConnector
	err := ctx.RegisterResource("azure-native:costmanagement/v20190301preview:CloudConnector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudConnector gets an existing CloudConnector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudConnector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudConnectorState, opts ...pulumi.ResourceOption) (*CloudConnector, error) {
	var resource CloudConnector
	err := ctx.ReadResource("azure-native:costmanagement/v20190301preview:CloudConnector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudConnector resources.
type cloudConnectorState struct {
}

type CloudConnectorState struct {
}

func (CloudConnectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudConnectorState)(nil)).Elem()
}

type cloudConnectorArgs struct {
	// Connector billing model
	BillingModel *string `pulumi:"billingModel"`
	// Connector Name.
	ConnectorName *string `pulumi:"connectorName"`
	// Credentials authentication key (eg AWS ARN)
	CredentialsKey *string `pulumi:"credentialsKey"`
	// Credentials secret (eg AWS ExternalId)
	CredentialsSecret *string `pulumi:"credentialsSecret"`
	// Default ManagementGroupId
	DefaultManagementGroupId *string `pulumi:"defaultManagementGroupId"`
	// Connector DisplayName
	DisplayName *string `pulumi:"displayName"`
	// Connector kind (eg aws)
	Kind *string `pulumi:"kind"`
	// Identifying source report. (For AWS this is a CUR report name, defined with Daily and with Resources)
	ReportId *string `pulumi:"reportId"`
	// Billing SubscriptionId
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// The set of arguments for constructing a CloudConnector resource.
type CloudConnectorArgs struct {
	// Connector billing model
	BillingModel pulumi.StringPtrInput
	// Connector Name.
	ConnectorName pulumi.StringPtrInput
	// Credentials authentication key (eg AWS ARN)
	CredentialsKey pulumi.StringPtrInput
	// Credentials secret (eg AWS ExternalId)
	CredentialsSecret pulumi.StringPtrInput
	// Default ManagementGroupId
	DefaultManagementGroupId pulumi.StringPtrInput
	// Connector DisplayName
	DisplayName pulumi.StringPtrInput
	// Connector kind (eg aws)
	Kind pulumi.StringPtrInput
	// Identifying source report. (For AWS this is a CUR report name, defined with Daily and with Resources)
	ReportId pulumi.StringPtrInput
	// Billing SubscriptionId
	SubscriptionId pulumi.StringPtrInput
}

func (CloudConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudConnectorArgs)(nil)).Elem()
}

type CloudConnectorInput interface {
	pulumi.Input

	ToCloudConnectorOutput() CloudConnectorOutput
	ToCloudConnectorOutputWithContext(ctx context.Context) CloudConnectorOutput
}

func (*CloudConnector) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudConnector)(nil)).Elem()
}

func (i *CloudConnector) ToCloudConnectorOutput() CloudConnectorOutput {
	return i.ToCloudConnectorOutputWithContext(context.Background())
}

func (i *CloudConnector) ToCloudConnectorOutputWithContext(ctx context.Context) CloudConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudConnectorOutput)
}

type CloudConnectorOutput struct{ *pulumi.OutputState }

func (CloudConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudConnector)(nil)).Elem()
}

func (o CloudConnectorOutput) ToCloudConnectorOutput() CloudConnectorOutput {
	return o
}

func (o CloudConnectorOutput) ToCloudConnectorOutputWithContext(ctx context.Context) CloudConnectorOutput {
	return o
}

// Connector billing model
func (o CloudConnectorOutput) BillingModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudConnector) pulumi.StringPtrOutput { return v.BillingModel }).(pulumi.StringPtrOutput)
}

// Collection information
func (o CloudConnectorOutput) CollectionInfo() ConnectorCollectionInfoResponseOutput {
	return o.ApplyT(func(v *CloudConnector) ConnectorCollectionInfoResponseOutput { return v.CollectionInfo }).(ConnectorCollectionInfoResponseOutput)
}

// Connector definition creation datetime
func (o CloudConnectorOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudConnector) pulumi.StringOutput { return v.CreatedOn }).(pulumi.StringOutput)
}

// Credentials authentication key (eg AWS ARN)
func (o CloudConnectorOutput) CredentialsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudConnector) pulumi.StringPtrOutput { return v.CredentialsKey }).(pulumi.StringPtrOutput)
}

// Number of days remaining of trial
func (o CloudConnectorOutput) DaysTrialRemaining() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudConnector) pulumi.IntOutput { return v.DaysTrialRemaining }).(pulumi.IntOutput)
}

// Default ManagementGroupId
func (o CloudConnectorOutput) DefaultManagementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudConnector) pulumi.StringPtrOutput { return v.DefaultManagementGroupId }).(pulumi.StringPtrOutput)
}

// Connector DisplayName
func (o CloudConnectorOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudConnector) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Associated ExternalBillingAccountId
func (o CloudConnectorOutput) ExternalBillingAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudConnector) pulumi.StringOutput { return v.ExternalBillingAccountId }).(pulumi.StringOutput)
}

// Connector kind (eg aws)
func (o CloudConnectorOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudConnector) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Connector last modified datetime
func (o CloudConnectorOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudConnector) pulumi.StringOutput { return v.ModifiedOn }).(pulumi.StringOutput)
}

// Connector name
func (o CloudConnectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudConnector) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The display name of the providerBillingAccountId as defined on the external provider
func (o CloudConnectorOutput) ProviderBillingAccountDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudConnector) pulumi.StringOutput { return v.ProviderBillingAccountDisplayName }).(pulumi.StringOutput)
}

// Connector providerBillingAccountId, determined from credentials (eg AWS Consolidated account number)
func (o CloudConnectorOutput) ProviderBillingAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudConnector) pulumi.StringOutput { return v.ProviderBillingAccountId }).(pulumi.StringOutput)
}

// Identifying source report. (For AWS this is a CUR report name, defined with Daily and with Resources)
func (o CloudConnectorOutput) ReportId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudConnector) pulumi.StringPtrOutput { return v.ReportId }).(pulumi.StringPtrOutput)
}

// Connector status
func (o CloudConnectorOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudConnector) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Billing SubscriptionId
func (o CloudConnectorOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudConnector) pulumi.StringPtrOutput { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// Connector type
func (o CloudConnectorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudConnector) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(CloudConnectorOutput{})
}
