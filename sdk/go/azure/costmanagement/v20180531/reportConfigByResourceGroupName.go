// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180531

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A report config resource.
//
// Deprecated: Version 2018-05-31 will be removed in v2 of the provider.
type ReportConfigByResourceGroupName struct {
	pulumi.CustomResourceState

	// Has definition for the report config.
	Definition ReportConfigDefinitionResponseOutput `pulumi:"definition"`
	// Has delivery information for the report config.
	DeliveryInfo ReportConfigDeliveryInfoResponseOutput `pulumi:"deliveryInfo"`
	// The format of the report being delivered.
	Format pulumi.StringPtrOutput `pulumi:"format"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Has schedule information for the report config.
	Schedule ReportConfigScheduleResponsePtrOutput `pulumi:"schedule"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewReportConfigByResourceGroupName registers a new resource with the given unique name, arguments, and options.
func NewReportConfigByResourceGroupName(ctx *pulumi.Context,
	name string, args *ReportConfigByResourceGroupNameArgs, opts ...pulumi.ResourceOption) (*ReportConfigByResourceGroupName, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Definition == nil {
		return nil, errors.New("invalid value for required argument 'Definition'")
	}
	if args.DeliveryInfo == nil {
		return nil, errors.New("invalid value for required argument 'DeliveryInfo'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	var resource ReportConfigByResourceGroupName
	err := ctx.RegisterResource("azure-native:costmanagement/v20180531:ReportConfigByResourceGroupName", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReportConfigByResourceGroupName gets an existing ReportConfigByResourceGroupName resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReportConfigByResourceGroupName(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReportConfigByResourceGroupNameState, opts ...pulumi.ResourceOption) (*ReportConfigByResourceGroupName, error) {
	var resource ReportConfigByResourceGroupName
	err := ctx.ReadResource("azure-native:costmanagement/v20180531:ReportConfigByResourceGroupName", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReportConfigByResourceGroupName resources.
type reportConfigByResourceGroupNameState struct {
}

type ReportConfigByResourceGroupNameState struct {
}

func (ReportConfigByResourceGroupNameState) ElementType() reflect.Type {
	return reflect.TypeOf((*reportConfigByResourceGroupNameState)(nil)).Elem()
}

type reportConfigByResourceGroupNameArgs struct {
	// Has definition for the report config.
	Definition ReportConfigDefinition `pulumi:"definition"`
	// Has delivery information for the report config.
	DeliveryInfo ReportConfigDeliveryInfo `pulumi:"deliveryInfo"`
	// The format of the report being delivered.
	Format *string `pulumi:"format"`
	// Report Config Name.
	ReportConfigName *string `pulumi:"reportConfigName"`
	// Azure Resource Group Name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Has schedule information for the report config.
	Schedule *ReportConfigSchedule `pulumi:"schedule"`
}

// The set of arguments for constructing a ReportConfigByResourceGroupName resource.
type ReportConfigByResourceGroupNameArgs struct {
	// Has definition for the report config.
	Definition ReportConfigDefinitionInput
	// Has delivery information for the report config.
	DeliveryInfo ReportConfigDeliveryInfoInput
	// The format of the report being delivered.
	Format pulumi.StringPtrInput
	// Report Config Name.
	ReportConfigName pulumi.StringPtrInput
	// Azure Resource Group Name.
	ResourceGroupName pulumi.StringInput
	// Has schedule information for the report config.
	Schedule ReportConfigSchedulePtrInput
}

func (ReportConfigByResourceGroupNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*reportConfigByResourceGroupNameArgs)(nil)).Elem()
}

type ReportConfigByResourceGroupNameInput interface {
	pulumi.Input

	ToReportConfigByResourceGroupNameOutput() ReportConfigByResourceGroupNameOutput
	ToReportConfigByResourceGroupNameOutputWithContext(ctx context.Context) ReportConfigByResourceGroupNameOutput
}

func (*ReportConfigByResourceGroupName) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportConfigByResourceGroupName)(nil)).Elem()
}

func (i *ReportConfigByResourceGroupName) ToReportConfigByResourceGroupNameOutput() ReportConfigByResourceGroupNameOutput {
	return i.ToReportConfigByResourceGroupNameOutputWithContext(context.Background())
}

func (i *ReportConfigByResourceGroupName) ToReportConfigByResourceGroupNameOutputWithContext(ctx context.Context) ReportConfigByResourceGroupNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportConfigByResourceGroupNameOutput)
}

type ReportConfigByResourceGroupNameOutput struct{ *pulumi.OutputState }

func (ReportConfigByResourceGroupNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportConfigByResourceGroupName)(nil)).Elem()
}

func (o ReportConfigByResourceGroupNameOutput) ToReportConfigByResourceGroupNameOutput() ReportConfigByResourceGroupNameOutput {
	return o
}

func (o ReportConfigByResourceGroupNameOutput) ToReportConfigByResourceGroupNameOutputWithContext(ctx context.Context) ReportConfigByResourceGroupNameOutput {
	return o
}

// Has definition for the report config.
func (o ReportConfigByResourceGroupNameOutput) Definition() ReportConfigDefinitionResponseOutput {
	return o.ApplyT(func(v *ReportConfigByResourceGroupName) ReportConfigDefinitionResponseOutput { return v.Definition }).(ReportConfigDefinitionResponseOutput)
}

// Has delivery information for the report config.
func (o ReportConfigByResourceGroupNameOutput) DeliveryInfo() ReportConfigDeliveryInfoResponseOutput {
	return o.ApplyT(func(v *ReportConfigByResourceGroupName) ReportConfigDeliveryInfoResponseOutput { return v.DeliveryInfo }).(ReportConfigDeliveryInfoResponseOutput)
}

// The format of the report being delivered.
func (o ReportConfigByResourceGroupNameOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportConfigByResourceGroupName) pulumi.StringPtrOutput { return v.Format }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ReportConfigByResourceGroupNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportConfigByResourceGroupName) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Has schedule information for the report config.
func (o ReportConfigByResourceGroupNameOutput) Schedule() ReportConfigScheduleResponsePtrOutput {
	return o.ApplyT(func(v *ReportConfigByResourceGroupName) ReportConfigScheduleResponsePtrOutput { return v.Schedule }).(ReportConfigScheduleResponsePtrOutput)
}

// Resource tags.
func (o ReportConfigByResourceGroupNameOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ReportConfigByResourceGroupName) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ReportConfigByResourceGroupNameOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportConfigByResourceGroupName) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ReportConfigByResourceGroupNameOutput{})
}
