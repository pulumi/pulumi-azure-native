// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A report config resource.
type ReportConfigByResourceGroupName struct {
	pulumi.CustomResourceState

	// Has definition for the report config.
	Definition ReportConfigDefinitionResponseOutput `pulumi:"definition"`
	// Has delivery information for the report config.
	DeliveryInfo ReportConfigDeliveryInfoResponseOutput `pulumi:"deliveryInfo"`
	// The format of the report being delivered.
	Format pulumi.StringPtrOutput `pulumi:"format"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Has schedule information for the report config.
	Schedule ReportConfigScheduleResponsePtrOutput `pulumi:"schedule"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewReportConfigByResourceGroupName registers a new resource with the given unique name, arguments, and options.
func NewReportConfigByResourceGroupName(ctx *pulumi.Context,
	name string, args *ReportConfigByResourceGroupNameArgs, opts ...pulumi.ResourceOption) (*ReportConfigByResourceGroupName, error) {
	if args == nil || args.Definition == nil {
		return nil, errors.New("missing required argument 'Definition'")
	}
	if args == nil || args.DeliveryInfo == nil {
		return nil, errors.New("missing required argument 'DeliveryInfo'")
	}
	if args == nil || args.ReportConfigName == nil {
		return nil, errors.New("missing required argument 'ReportConfigName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &ReportConfigByResourceGroupNameArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:costmanagement/v20180531:ReportConfigByResourceGroupName"),
		},
	})
	opts = append(opts, aliases)
	var resource ReportConfigByResourceGroupName
	err := ctx.RegisterResource("azure-nextgen:costmanagement/latest:ReportConfigByResourceGroupName", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReportConfigByResourceGroupName gets an existing ReportConfigByResourceGroupName resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReportConfigByResourceGroupName(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReportConfigByResourceGroupNameState, opts ...pulumi.ResourceOption) (*ReportConfigByResourceGroupName, error) {
	var resource ReportConfigByResourceGroupName
	err := ctx.ReadResource("azure-nextgen:costmanagement/latest:ReportConfigByResourceGroupName", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReportConfigByResourceGroupName resources.
type reportConfigByResourceGroupNameState struct {
	// Has definition for the report config.
	Definition *ReportConfigDefinitionResponse `pulumi:"definition"`
	// Has delivery information for the report config.
	DeliveryInfo *ReportConfigDeliveryInfoResponse `pulumi:"deliveryInfo"`
	// The format of the report being delivered.
	Format *string `pulumi:"format"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Has schedule information for the report config.
	Schedule *ReportConfigScheduleResponse `pulumi:"schedule"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type ReportConfigByResourceGroupNameState struct {
	// Has definition for the report config.
	Definition ReportConfigDefinitionResponsePtrInput
	// Has delivery information for the report config.
	DeliveryInfo ReportConfigDeliveryInfoResponsePtrInput
	// The format of the report being delivered.
	Format pulumi.StringPtrInput
	// Resource name.
	Name pulumi.StringPtrInput
	// Has schedule information for the report config.
	Schedule ReportConfigScheduleResponsePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (ReportConfigByResourceGroupNameState) ElementType() reflect.Type {
	return reflect.TypeOf((*reportConfigByResourceGroupNameState)(nil)).Elem()
}

type reportConfigByResourceGroupNameArgs struct {
	// Has definition for the report config.
	Definition ReportConfigDefinition `pulumi:"definition"`
	// Has delivery information for the report config.
	DeliveryInfo ReportConfigDeliveryInfo `pulumi:"deliveryInfo"`
	// The format of the report being delivered.
	Format *string `pulumi:"format"`
	// Report Config Name.
	ReportConfigName string `pulumi:"reportConfigName"`
	// Azure Resource Group Name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Has schedule information for the report config.
	Schedule *ReportConfigSchedule `pulumi:"schedule"`
}

// The set of arguments for constructing a ReportConfigByResourceGroupName resource.
type ReportConfigByResourceGroupNameArgs struct {
	// Has definition for the report config.
	Definition ReportConfigDefinitionInput
	// Has delivery information for the report config.
	DeliveryInfo ReportConfigDeliveryInfoInput
	// The format of the report being delivered.
	Format pulumi.StringPtrInput
	// Report Config Name.
	ReportConfigName pulumi.StringInput
	// Azure Resource Group Name.
	ResourceGroupName pulumi.StringInput
	// Has schedule information for the report config.
	Schedule ReportConfigSchedulePtrInput
}

func (ReportConfigByResourceGroupNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*reportConfigByResourceGroupNameArgs)(nil)).Elem()
}
