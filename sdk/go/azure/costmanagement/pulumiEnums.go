// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package costmanagement

// Show costs accumulated over time.
type AccumulatedType string

const (
	AccumulatedTypeTrue  = AccumulatedType("true")
	AccumulatedTypeFalse = AccumulatedType("false")
)

// Chart type of the main view in Cost Analysis. Required.
type ChartType string

const (
	ChartTypeArea          = ChartType("Area")
	ChartTypeLine          = ChartType("Line")
	ChartTypeStackedColumn = ChartType("StackedColumn")
	ChartTypeGroupedColumn = ChartType("GroupedColumn")
	ChartTypeTable         = ChartType("Table")
)

// Connector billing model
type ConnectorBillingModel string

const (
	ConnectorBillingModelTrial       = ConnectorBillingModel("trial")
	ConnectorBillingModelAutoUpgrade = ConnectorBillingModel("autoUpgrade")
	ConnectorBillingModelPremium     = ConnectorBillingModel("premium")
	ConnectorBillingModelExpired     = ConnectorBillingModel("expired")
)

// Method of cost allocation for the rule
type CostAllocationPolicyType string

const (
	CostAllocationPolicyTypeFixedProportion = CostAllocationPolicyType("FixedProportion")
)

// Type of resources contained in this cost allocation rule
type CostAllocationResourceType string

const (
	// Indicates an Azure dimension such as a subscription id or resource group name is being used for allocation.
	CostAllocationResourceTypeDimension = CostAllocationResourceType("Dimension")
	// Allocates cost based on Azure Tag key value pairs.
	CostAllocationResourceTypeTag = CostAllocationResourceType("Tag")
)

// Days of Week.
type DaysOfWeek string

const (
	DaysOfWeekMonday    = DaysOfWeek("Monday")
	DaysOfWeekTuesday   = DaysOfWeek("Tuesday")
	DaysOfWeekWednesday = DaysOfWeek("Wednesday")
	DaysOfWeekThursday  = DaysOfWeek("Thursday")
	DaysOfWeekFriday    = DaysOfWeek("Friday")
	DaysOfWeekSaturday  = DaysOfWeek("Saturday")
	DaysOfWeekSunday    = DaysOfWeek("Sunday")
)

// The type of the export. Note that 'Usage' is equivalent to 'ActualCost' and is applicable to exports that do not yet provide data for charges or amortization for service reservations.
type ExportType string

const (
	ExportTypeUsage         = ExportType("Usage")
	ExportTypeActualCost    = ExportType("ActualCost")
	ExportTypeAmortizedCost = ExportType("AmortizedCost")
)

// Destination of the view data. Currently only csv format is supported.
type FileFormat string

const (
	FileFormatCsv = FileFormat("Csv")
)

// The format of the report being delivered.
type FormatType string

const (
	FormatTypeCsv = FormatType("Csv")
)

// The name of the aggregation function to use.
type FunctionType string

const (
	FunctionTypeAvg = FunctionType("Avg")
	FunctionTypeMax = FunctionType("Max")
	FunctionTypeMin = FunctionType("Min")
	FunctionTypeSum = FunctionType("Sum")
)

// The granularity of rows in the report.
type GranularityType string

const (
	GranularityTypeDaily  = GranularityType("Daily")
	GranularityTypeHourly = GranularityType("Hourly")
)

// KPI type (Forecast, Budget).
type KpiTypeType string

const (
	KpiTypeTypeForecast = KpiTypeType("Forecast")
	KpiTypeTypeBudget   = KpiTypeType("Budget")
)

// Metric to use when displaying costs.
type MetricType string

const (
	MetricTypeActualCost    = MetricType("ActualCost")
	MetricTypeAmortizedCost = MetricType("AmortizedCost")
	MetricTypeAHUB          = MetricType("AHUB")
)

// The operator to use for comparison.
type OperatorType string

const (
	OperatorTypeIn       = OperatorType("In")
	OperatorTypeContains = OperatorType("Contains")
)

// Data type to show in view.
type PivotTypeType string

const (
	PivotTypeTypeDimension = PivotTypeType("Dimension")
	PivotTypeTypeTagKey    = PivotTypeType("TagKey")
)

// The schedule recurrence.
type RecurrenceType string

const (
	RecurrenceTypeDaily    = RecurrenceType("Daily")
	RecurrenceTypeWeekly   = RecurrenceType("Weekly")
	RecurrenceTypeMonthly  = RecurrenceType("Monthly")
	RecurrenceTypeAnnually = RecurrenceType("Annually")
)

// Has type of the column to group.
type ReportColumnType string

const (
	ReportColumnTypeTag       = ReportColumnType("Tag")
	ReportColumnTypeDimension = ReportColumnType("Dimension")
)

// Has type of the column to group.
type ReportConfigColumnType string

const (
	ReportConfigColumnTypeTag       = ReportConfigColumnType("Tag")
	ReportConfigColumnTypeDimension = ReportConfigColumnType("Dimension")
)

// The granularity of rows in the report.
type ReportGranularityType string

const (
	ReportGranularityTypeDaily   = ReportGranularityType("Daily")
	ReportGranularityTypeMonthly = ReportGranularityType("Monthly")
)

// The time frame for pulling data for the report. If custom, then a specific time period must be provided.
type ReportTimeframeType string

const (
	ReportTimeframeTypeWeekToDate  = ReportTimeframeType("WeekToDate")
	ReportTimeframeTypeMonthToDate = ReportTimeframeType("MonthToDate")
	ReportTimeframeTypeYearToDate  = ReportTimeframeType("YearToDate")
	ReportTimeframeTypeCustom      = ReportTimeframeType("Custom")
)

// The type of the report. Usage represents actual usage, forecast represents forecasted data and UsageAndForecast represents both usage and forecasted data. Actual usage and forecasted data can be differentiated based on dates.
type ReportType string

const (
	ReportTypeUsage = ReportType("Usage")
)

// Status of the rule
type RuleStatus string

const (
	// Rule is saved but not used to allocate costs.
	RuleStatusNotActive = RuleStatus("NotActive")
	// Rule is saved and impacting cost allocation.
	RuleStatusActive = RuleStatus("Active")
	// Rule is saved and cost allocation is being updated. Readonly value that cannot be submitted in a put request.
	RuleStatusProcessing = RuleStatus("Processing")
)

// Frequency of the schedule.
type ScheduleFrequency string

const (
	// Cost analysis data will be emailed every day.
	ScheduleFrequencyDaily = ScheduleFrequency("Daily")
	// Cost analysis data will be emailed every week.
	ScheduleFrequencyWeekly = ScheduleFrequency("Weekly")
	// Cost analysis data will be emailed every month.
	ScheduleFrequencyMonthly = ScheduleFrequency("Monthly")
)

// Kind of the scheduled action.
type ScheduledActionKind string

const (
	// Cost analysis data will be emailed.
	ScheduledActionKindEmail = ScheduledActionKind("Email")
)

// Status of the scheduled action.
type ScheduledActionStatus string

const (
	// Scheduled action is saved but will not be executed.
	ScheduledActionStatusDisabled = ScheduledActionStatus("Disabled")
	// Scheduled action is saved and will be executed.
	ScheduledActionStatusEnabled = ScheduledActionStatus("Enabled")
)

// The status of the schedule. Whether active or not. If inactive, the report's scheduled execution is paused.
type StatusType string

const (
	StatusTypeActive   = StatusType("Active")
	StatusTypeInactive = StatusType("Inactive")
)

// The time frame for pulling data for the report. If custom, then a specific time period must be provided.
type TimeframeType string

const (
	TimeframeTypeWeekToDate  = TimeframeType("WeekToDate")
	TimeframeTypeMonthToDate = TimeframeType("MonthToDate")
	TimeframeTypeCustom      = TimeframeType("Custom")
)

// Weeks of month.
type WeeksOfMonth string

const (
	WeeksOfMonthFirst  = WeeksOfMonth("First")
	WeeksOfMonthSecond = WeeksOfMonth("Second")
	WeeksOfMonthThird  = WeeksOfMonth("Third")
	WeeksOfMonthFourth = WeeksOfMonth("Fourth")
	WeeksOfMonthLast   = WeeksOfMonth("Last")
)

func init() {
}
