// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Target resources and allocation
type CostAllocationProportion struct {
	// Target resource for cost allocation
	Name string `pulumi:"name"`
	// Percentage of source cost to allocate to this resource. This value can be specified to two decimal places and the total percentage of all resources in this rule must sum to 100.00.
	Percentage float64 `pulumi:"percentage"`
}

// CostAllocationProportionInput is an input type that accepts CostAllocationProportionArgs and CostAllocationProportionOutput values.
// You can construct a concrete instance of `CostAllocationProportionInput` via:
//
//          CostAllocationProportionArgs{...}
type CostAllocationProportionInput interface {
	pulumi.Input

	ToCostAllocationProportionOutput() CostAllocationProportionOutput
	ToCostAllocationProportionOutputWithContext(context.Context) CostAllocationProportionOutput
}

// Target resources and allocation
type CostAllocationProportionArgs struct {
	// Target resource for cost allocation
	Name pulumi.StringInput `pulumi:"name"`
	// Percentage of source cost to allocate to this resource. This value can be specified to two decimal places and the total percentage of all resources in this rule must sum to 100.00.
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (CostAllocationProportionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationProportion)(nil)).Elem()
}

func (i CostAllocationProportionArgs) ToCostAllocationProportionOutput() CostAllocationProportionOutput {
	return i.ToCostAllocationProportionOutputWithContext(context.Background())
}

func (i CostAllocationProportionArgs) ToCostAllocationProportionOutputWithContext(ctx context.Context) CostAllocationProportionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationProportionOutput)
}

// CostAllocationProportionArrayInput is an input type that accepts CostAllocationProportionArray and CostAllocationProportionArrayOutput values.
// You can construct a concrete instance of `CostAllocationProportionArrayInput` via:
//
//          CostAllocationProportionArray{ CostAllocationProportionArgs{...} }
type CostAllocationProportionArrayInput interface {
	pulumi.Input

	ToCostAllocationProportionArrayOutput() CostAllocationProportionArrayOutput
	ToCostAllocationProportionArrayOutputWithContext(context.Context) CostAllocationProportionArrayOutput
}

type CostAllocationProportionArray []CostAllocationProportionInput

func (CostAllocationProportionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CostAllocationProportion)(nil)).Elem()
}

func (i CostAllocationProportionArray) ToCostAllocationProportionArrayOutput() CostAllocationProportionArrayOutput {
	return i.ToCostAllocationProportionArrayOutputWithContext(context.Background())
}

func (i CostAllocationProportionArray) ToCostAllocationProportionArrayOutputWithContext(ctx context.Context) CostAllocationProportionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationProportionArrayOutput)
}

// Target resources and allocation
type CostAllocationProportionOutput struct{ *pulumi.OutputState }

func (CostAllocationProportionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationProportion)(nil)).Elem()
}

func (o CostAllocationProportionOutput) ToCostAllocationProportionOutput() CostAllocationProportionOutput {
	return o
}

func (o CostAllocationProportionOutput) ToCostAllocationProportionOutputWithContext(ctx context.Context) CostAllocationProportionOutput {
	return o
}

// Target resource for cost allocation
func (o CostAllocationProportionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CostAllocationProportion) string { return v.Name }).(pulumi.StringOutput)
}

// Percentage of source cost to allocate to this resource. This value can be specified to two decimal places and the total percentage of all resources in this rule must sum to 100.00.
func (o CostAllocationProportionOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v CostAllocationProportion) float64 { return v.Percentage }).(pulumi.Float64Output)
}

type CostAllocationProportionArrayOutput struct{ *pulumi.OutputState }

func (CostAllocationProportionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CostAllocationProportion)(nil)).Elem()
}

func (o CostAllocationProportionArrayOutput) ToCostAllocationProportionArrayOutput() CostAllocationProportionArrayOutput {
	return o
}

func (o CostAllocationProportionArrayOutput) ToCostAllocationProportionArrayOutputWithContext(ctx context.Context) CostAllocationProportionArrayOutput {
	return o
}

func (o CostAllocationProportionArrayOutput) Index(i pulumi.IntInput) CostAllocationProportionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CostAllocationProportion {
		return vs[0].([]CostAllocationProportion)[vs[1].(int)]
	}).(CostAllocationProportionOutput)
}

// Target resources and allocation
type CostAllocationProportionInvokeResponse struct {
	// Target resource for cost allocation
	Name string `pulumi:"name"`
	// Percentage of source cost to allocate to this resource. This value can be specified to two decimal places and the total percentage of all resources in this rule must sum to 100.00.
	Percentage float64 `pulumi:"percentage"`
}

// CostAllocationProportionInvokeResponseInput is an input type that accepts CostAllocationProportionInvokeResponseArgs and CostAllocationProportionInvokeResponseOutput values.
// You can construct a concrete instance of `CostAllocationProportionInvokeResponseInput` via:
//
//          CostAllocationProportionInvokeResponseArgs{...}
type CostAllocationProportionInvokeResponseInput interface {
	pulumi.Input

	ToCostAllocationProportionInvokeResponseOutput() CostAllocationProportionInvokeResponseOutput
	ToCostAllocationProportionInvokeResponseOutputWithContext(context.Context) CostAllocationProportionInvokeResponseOutput
}

// Target resources and allocation
type CostAllocationProportionInvokeResponseArgs struct {
	// Target resource for cost allocation
	Name pulumi.StringInput `pulumi:"name"`
	// Percentage of source cost to allocate to this resource. This value can be specified to two decimal places and the total percentage of all resources in this rule must sum to 100.00.
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (CostAllocationProportionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationProportionInvokeResponse)(nil)).Elem()
}

func (i CostAllocationProportionInvokeResponseArgs) ToCostAllocationProportionInvokeResponseOutput() CostAllocationProportionInvokeResponseOutput {
	return i.ToCostAllocationProportionInvokeResponseOutputWithContext(context.Background())
}

func (i CostAllocationProportionInvokeResponseArgs) ToCostAllocationProportionInvokeResponseOutputWithContext(ctx context.Context) CostAllocationProportionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationProportionInvokeResponseOutput)
}

// CostAllocationProportionInvokeResponseArrayInput is an input type that accepts CostAllocationProportionInvokeResponseArray and CostAllocationProportionInvokeResponseArrayOutput values.
// You can construct a concrete instance of `CostAllocationProportionInvokeResponseArrayInput` via:
//
//          CostAllocationProportionInvokeResponseArray{ CostAllocationProportionInvokeResponseArgs{...} }
type CostAllocationProportionInvokeResponseArrayInput interface {
	pulumi.Input

	ToCostAllocationProportionInvokeResponseArrayOutput() CostAllocationProportionInvokeResponseArrayOutput
	ToCostAllocationProportionInvokeResponseArrayOutputWithContext(context.Context) CostAllocationProportionInvokeResponseArrayOutput
}

type CostAllocationProportionInvokeResponseArray []CostAllocationProportionInvokeResponseInput

func (CostAllocationProportionInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CostAllocationProportionInvokeResponse)(nil)).Elem()
}

func (i CostAllocationProportionInvokeResponseArray) ToCostAllocationProportionInvokeResponseArrayOutput() CostAllocationProportionInvokeResponseArrayOutput {
	return i.ToCostAllocationProportionInvokeResponseArrayOutputWithContext(context.Background())
}

func (i CostAllocationProportionInvokeResponseArray) ToCostAllocationProportionInvokeResponseArrayOutputWithContext(ctx context.Context) CostAllocationProportionInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationProportionInvokeResponseArrayOutput)
}

// Target resources and allocation
type CostAllocationProportionInvokeResponseOutput struct{ *pulumi.OutputState }

func (CostAllocationProportionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationProportionInvokeResponse)(nil)).Elem()
}

func (o CostAllocationProportionInvokeResponseOutput) ToCostAllocationProportionInvokeResponseOutput() CostAllocationProportionInvokeResponseOutput {
	return o
}

func (o CostAllocationProportionInvokeResponseOutput) ToCostAllocationProportionInvokeResponseOutputWithContext(ctx context.Context) CostAllocationProportionInvokeResponseOutput {
	return o
}

// Target resource for cost allocation
func (o CostAllocationProportionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CostAllocationProportionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Percentage of source cost to allocate to this resource. This value can be specified to two decimal places and the total percentage of all resources in this rule must sum to 100.00.
func (o CostAllocationProportionInvokeResponseOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v CostAllocationProportionInvokeResponse) float64 { return v.Percentage }).(pulumi.Float64Output)
}

type CostAllocationProportionInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (CostAllocationProportionInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CostAllocationProportionInvokeResponse)(nil)).Elem()
}

func (o CostAllocationProportionInvokeResponseArrayOutput) ToCostAllocationProportionInvokeResponseArrayOutput() CostAllocationProportionInvokeResponseArrayOutput {
	return o
}

func (o CostAllocationProportionInvokeResponseArrayOutput) ToCostAllocationProportionInvokeResponseArrayOutputWithContext(ctx context.Context) CostAllocationProportionInvokeResponseArrayOutput {
	return o
}

func (o CostAllocationProportionInvokeResponseArrayOutput) Index(i pulumi.IntInput) CostAllocationProportionInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CostAllocationProportionInvokeResponse {
		return vs[0].([]CostAllocationProportionInvokeResponse)[vs[1].(int)]
	}).(CostAllocationProportionInvokeResponseOutput)
}

// Target resources and allocation
type CostAllocationProportionResponse struct {
	// Target resource for cost allocation
	Name string `pulumi:"name"`
	// Percentage of source cost to allocate to this resource. This value can be specified to two decimal places and the total percentage of all resources in this rule must sum to 100.00.
	Percentage float64 `pulumi:"percentage"`
}

// CostAllocationProportionResponseInput is an input type that accepts CostAllocationProportionResponseArgs and CostAllocationProportionResponseOutput values.
// You can construct a concrete instance of `CostAllocationProportionResponseInput` via:
//
//          CostAllocationProportionResponseArgs{...}
type CostAllocationProportionResponseInput interface {
	pulumi.Input

	ToCostAllocationProportionResponseOutput() CostAllocationProportionResponseOutput
	ToCostAllocationProportionResponseOutputWithContext(context.Context) CostAllocationProportionResponseOutput
}

// Target resources and allocation
type CostAllocationProportionResponseArgs struct {
	// Target resource for cost allocation
	Name pulumi.StringInput `pulumi:"name"`
	// Percentage of source cost to allocate to this resource. This value can be specified to two decimal places and the total percentage of all resources in this rule must sum to 100.00.
	Percentage pulumi.Float64Input `pulumi:"percentage"`
}

func (CostAllocationProportionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationProportionResponse)(nil)).Elem()
}

func (i CostAllocationProportionResponseArgs) ToCostAllocationProportionResponseOutput() CostAllocationProportionResponseOutput {
	return i.ToCostAllocationProportionResponseOutputWithContext(context.Background())
}

func (i CostAllocationProportionResponseArgs) ToCostAllocationProportionResponseOutputWithContext(ctx context.Context) CostAllocationProportionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationProportionResponseOutput)
}

// CostAllocationProportionResponseArrayInput is an input type that accepts CostAllocationProportionResponseArray and CostAllocationProportionResponseArrayOutput values.
// You can construct a concrete instance of `CostAllocationProportionResponseArrayInput` via:
//
//          CostAllocationProportionResponseArray{ CostAllocationProportionResponseArgs{...} }
type CostAllocationProportionResponseArrayInput interface {
	pulumi.Input

	ToCostAllocationProportionResponseArrayOutput() CostAllocationProportionResponseArrayOutput
	ToCostAllocationProportionResponseArrayOutputWithContext(context.Context) CostAllocationProportionResponseArrayOutput
}

type CostAllocationProportionResponseArray []CostAllocationProportionResponseInput

func (CostAllocationProportionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CostAllocationProportionResponse)(nil)).Elem()
}

func (i CostAllocationProportionResponseArray) ToCostAllocationProportionResponseArrayOutput() CostAllocationProportionResponseArrayOutput {
	return i.ToCostAllocationProportionResponseArrayOutputWithContext(context.Background())
}

func (i CostAllocationProportionResponseArray) ToCostAllocationProportionResponseArrayOutputWithContext(ctx context.Context) CostAllocationProportionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationProportionResponseArrayOutput)
}

// Target resources and allocation
type CostAllocationProportionResponseOutput struct{ *pulumi.OutputState }

func (CostAllocationProportionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationProportionResponse)(nil)).Elem()
}

func (o CostAllocationProportionResponseOutput) ToCostAllocationProportionResponseOutput() CostAllocationProportionResponseOutput {
	return o
}

func (o CostAllocationProportionResponseOutput) ToCostAllocationProportionResponseOutputWithContext(ctx context.Context) CostAllocationProportionResponseOutput {
	return o
}

// Target resource for cost allocation
func (o CostAllocationProportionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CostAllocationProportionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Percentage of source cost to allocate to this resource. This value can be specified to two decimal places and the total percentage of all resources in this rule must sum to 100.00.
func (o CostAllocationProportionResponseOutput) Percentage() pulumi.Float64Output {
	return o.ApplyT(func(v CostAllocationProportionResponse) float64 { return v.Percentage }).(pulumi.Float64Output)
}

type CostAllocationProportionResponseArrayOutput struct{ *pulumi.OutputState }

func (CostAllocationProportionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CostAllocationProportionResponse)(nil)).Elem()
}

func (o CostAllocationProportionResponseArrayOutput) ToCostAllocationProportionResponseArrayOutput() CostAllocationProportionResponseArrayOutput {
	return o
}

func (o CostAllocationProportionResponseArrayOutput) ToCostAllocationProportionResponseArrayOutputWithContext(ctx context.Context) CostAllocationProportionResponseArrayOutput {
	return o
}

func (o CostAllocationProportionResponseArrayOutput) Index(i pulumi.IntInput) CostAllocationProportionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CostAllocationProportionResponse {
		return vs[0].([]CostAllocationProportionResponse)[vs[1].(int)]
	}).(CostAllocationProportionResponseOutput)
}

// Resource details of the cost allocation rule
type CostAllocationRuleDetails struct {
	// Source resources for cost allocation. At this time, this list can contain no more than one element.
	SourceResources []SourceCostAllocationResource `pulumi:"sourceResources"`
	// Target resources for cost allocation. At this time, this list can contain no more than one element.
	TargetResources []TargetCostAllocationResource `pulumi:"targetResources"`
}

// CostAllocationRuleDetailsInput is an input type that accepts CostAllocationRuleDetailsArgs and CostAllocationRuleDetailsOutput values.
// You can construct a concrete instance of `CostAllocationRuleDetailsInput` via:
//
//          CostAllocationRuleDetailsArgs{...}
type CostAllocationRuleDetailsInput interface {
	pulumi.Input

	ToCostAllocationRuleDetailsOutput() CostAllocationRuleDetailsOutput
	ToCostAllocationRuleDetailsOutputWithContext(context.Context) CostAllocationRuleDetailsOutput
}

// Resource details of the cost allocation rule
type CostAllocationRuleDetailsArgs struct {
	// Source resources for cost allocation. At this time, this list can contain no more than one element.
	SourceResources SourceCostAllocationResourceArrayInput `pulumi:"sourceResources"`
	// Target resources for cost allocation. At this time, this list can contain no more than one element.
	TargetResources TargetCostAllocationResourceArrayInput `pulumi:"targetResources"`
}

func (CostAllocationRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationRuleDetails)(nil)).Elem()
}

func (i CostAllocationRuleDetailsArgs) ToCostAllocationRuleDetailsOutput() CostAllocationRuleDetailsOutput {
	return i.ToCostAllocationRuleDetailsOutputWithContext(context.Background())
}

func (i CostAllocationRuleDetailsArgs) ToCostAllocationRuleDetailsOutputWithContext(ctx context.Context) CostAllocationRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationRuleDetailsOutput)
}

func (i CostAllocationRuleDetailsArgs) ToCostAllocationRuleDetailsPtrOutput() CostAllocationRuleDetailsPtrOutput {
	return i.ToCostAllocationRuleDetailsPtrOutputWithContext(context.Background())
}

func (i CostAllocationRuleDetailsArgs) ToCostAllocationRuleDetailsPtrOutputWithContext(ctx context.Context) CostAllocationRuleDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationRuleDetailsOutput).ToCostAllocationRuleDetailsPtrOutputWithContext(ctx)
}

// CostAllocationRuleDetailsPtrInput is an input type that accepts CostAllocationRuleDetailsArgs, CostAllocationRuleDetailsPtr and CostAllocationRuleDetailsPtrOutput values.
// You can construct a concrete instance of `CostAllocationRuleDetailsPtrInput` via:
//
//          CostAllocationRuleDetailsArgs{...}
//
//  or:
//
//          nil
type CostAllocationRuleDetailsPtrInput interface {
	pulumi.Input

	ToCostAllocationRuleDetailsPtrOutput() CostAllocationRuleDetailsPtrOutput
	ToCostAllocationRuleDetailsPtrOutputWithContext(context.Context) CostAllocationRuleDetailsPtrOutput
}

type costAllocationRuleDetailsPtrType CostAllocationRuleDetailsArgs

func CostAllocationRuleDetailsPtr(v *CostAllocationRuleDetailsArgs) CostAllocationRuleDetailsPtrInput {
	return (*costAllocationRuleDetailsPtrType)(v)
}

func (*costAllocationRuleDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CostAllocationRuleDetails)(nil)).Elem()
}

func (i *costAllocationRuleDetailsPtrType) ToCostAllocationRuleDetailsPtrOutput() CostAllocationRuleDetailsPtrOutput {
	return i.ToCostAllocationRuleDetailsPtrOutputWithContext(context.Background())
}

func (i *costAllocationRuleDetailsPtrType) ToCostAllocationRuleDetailsPtrOutputWithContext(ctx context.Context) CostAllocationRuleDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationRuleDetailsPtrOutput)
}

// Resource details of the cost allocation rule
type CostAllocationRuleDetailsOutput struct{ *pulumi.OutputState }

func (CostAllocationRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationRuleDetails)(nil)).Elem()
}

func (o CostAllocationRuleDetailsOutput) ToCostAllocationRuleDetailsOutput() CostAllocationRuleDetailsOutput {
	return o
}

func (o CostAllocationRuleDetailsOutput) ToCostAllocationRuleDetailsOutputWithContext(ctx context.Context) CostAllocationRuleDetailsOutput {
	return o
}

func (o CostAllocationRuleDetailsOutput) ToCostAllocationRuleDetailsPtrOutput() CostAllocationRuleDetailsPtrOutput {
	return o.ToCostAllocationRuleDetailsPtrOutputWithContext(context.Background())
}

func (o CostAllocationRuleDetailsOutput) ToCostAllocationRuleDetailsPtrOutputWithContext(ctx context.Context) CostAllocationRuleDetailsPtrOutput {
	return o.ApplyT(func(v CostAllocationRuleDetails) *CostAllocationRuleDetails {
		return &v
	}).(CostAllocationRuleDetailsPtrOutput)
}

// Source resources for cost allocation. At this time, this list can contain no more than one element.
func (o CostAllocationRuleDetailsOutput) SourceResources() SourceCostAllocationResourceArrayOutput {
	return o.ApplyT(func(v CostAllocationRuleDetails) []SourceCostAllocationResource { return v.SourceResources }).(SourceCostAllocationResourceArrayOutput)
}

// Target resources for cost allocation. At this time, this list can contain no more than one element.
func (o CostAllocationRuleDetailsOutput) TargetResources() TargetCostAllocationResourceArrayOutput {
	return o.ApplyT(func(v CostAllocationRuleDetails) []TargetCostAllocationResource { return v.TargetResources }).(TargetCostAllocationResourceArrayOutput)
}

type CostAllocationRuleDetailsPtrOutput struct{ *pulumi.OutputState }

func (CostAllocationRuleDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CostAllocationRuleDetails)(nil)).Elem()
}

func (o CostAllocationRuleDetailsPtrOutput) ToCostAllocationRuleDetailsPtrOutput() CostAllocationRuleDetailsPtrOutput {
	return o
}

func (o CostAllocationRuleDetailsPtrOutput) ToCostAllocationRuleDetailsPtrOutputWithContext(ctx context.Context) CostAllocationRuleDetailsPtrOutput {
	return o
}

func (o CostAllocationRuleDetailsPtrOutput) Elem() CostAllocationRuleDetailsOutput {
	return o.ApplyT(func(v *CostAllocationRuleDetails) CostAllocationRuleDetails { return *v }).(CostAllocationRuleDetailsOutput)
}

// Source resources for cost allocation. At this time, this list can contain no more than one element.
func (o CostAllocationRuleDetailsPtrOutput) SourceResources() SourceCostAllocationResourceArrayOutput {
	return o.ApplyT(func(v *CostAllocationRuleDetails) []SourceCostAllocationResource {
		if v == nil {
			return nil
		}
		return v.SourceResources
	}).(SourceCostAllocationResourceArrayOutput)
}

// Target resources for cost allocation. At this time, this list can contain no more than one element.
func (o CostAllocationRuleDetailsPtrOutput) TargetResources() TargetCostAllocationResourceArrayOutput {
	return o.ApplyT(func(v *CostAllocationRuleDetails) []TargetCostAllocationResource {
		if v == nil {
			return nil
		}
		return v.TargetResources
	}).(TargetCostAllocationResourceArrayOutput)
}

// Resource details of the cost allocation rule
type CostAllocationRuleDetailsInvokeResponse struct {
	// Source resources for cost allocation. At this time, this list can contain no more than one element.
	SourceResources []SourceCostAllocationResourceInvokeResponse `pulumi:"sourceResources"`
	// Target resources for cost allocation. At this time, this list can contain no more than one element.
	TargetResources []TargetCostAllocationResourceInvokeResponse `pulumi:"targetResources"`
}

// CostAllocationRuleDetailsInvokeResponseInput is an input type that accepts CostAllocationRuleDetailsInvokeResponseArgs and CostAllocationRuleDetailsInvokeResponseOutput values.
// You can construct a concrete instance of `CostAllocationRuleDetailsInvokeResponseInput` via:
//
//          CostAllocationRuleDetailsInvokeResponseArgs{...}
type CostAllocationRuleDetailsInvokeResponseInput interface {
	pulumi.Input

	ToCostAllocationRuleDetailsInvokeResponseOutput() CostAllocationRuleDetailsInvokeResponseOutput
	ToCostAllocationRuleDetailsInvokeResponseOutputWithContext(context.Context) CostAllocationRuleDetailsInvokeResponseOutput
}

// Resource details of the cost allocation rule
type CostAllocationRuleDetailsInvokeResponseArgs struct {
	// Source resources for cost allocation. At this time, this list can contain no more than one element.
	SourceResources SourceCostAllocationResourceInvokeResponseArrayInput `pulumi:"sourceResources"`
	// Target resources for cost allocation. At this time, this list can contain no more than one element.
	TargetResources TargetCostAllocationResourceInvokeResponseArrayInput `pulumi:"targetResources"`
}

func (CostAllocationRuleDetailsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationRuleDetailsInvokeResponse)(nil)).Elem()
}

func (i CostAllocationRuleDetailsInvokeResponseArgs) ToCostAllocationRuleDetailsInvokeResponseOutput() CostAllocationRuleDetailsInvokeResponseOutput {
	return i.ToCostAllocationRuleDetailsInvokeResponseOutputWithContext(context.Background())
}

func (i CostAllocationRuleDetailsInvokeResponseArgs) ToCostAllocationRuleDetailsInvokeResponseOutputWithContext(ctx context.Context) CostAllocationRuleDetailsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationRuleDetailsInvokeResponseOutput)
}

// Resource details of the cost allocation rule
type CostAllocationRuleDetailsInvokeResponseOutput struct{ *pulumi.OutputState }

func (CostAllocationRuleDetailsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationRuleDetailsInvokeResponse)(nil)).Elem()
}

func (o CostAllocationRuleDetailsInvokeResponseOutput) ToCostAllocationRuleDetailsInvokeResponseOutput() CostAllocationRuleDetailsInvokeResponseOutput {
	return o
}

func (o CostAllocationRuleDetailsInvokeResponseOutput) ToCostAllocationRuleDetailsInvokeResponseOutputWithContext(ctx context.Context) CostAllocationRuleDetailsInvokeResponseOutput {
	return o
}

// Source resources for cost allocation. At this time, this list can contain no more than one element.
func (o CostAllocationRuleDetailsInvokeResponseOutput) SourceResources() SourceCostAllocationResourceInvokeResponseArrayOutput {
	return o.ApplyT(func(v CostAllocationRuleDetailsInvokeResponse) []SourceCostAllocationResourceInvokeResponse {
		return v.SourceResources
	}).(SourceCostAllocationResourceInvokeResponseArrayOutput)
}

// Target resources for cost allocation. At this time, this list can contain no more than one element.
func (o CostAllocationRuleDetailsInvokeResponseOutput) TargetResources() TargetCostAllocationResourceInvokeResponseArrayOutput {
	return o.ApplyT(func(v CostAllocationRuleDetailsInvokeResponse) []TargetCostAllocationResourceInvokeResponse {
		return v.TargetResources
	}).(TargetCostAllocationResourceInvokeResponseArrayOutput)
}

// Resource details of the cost allocation rule
type CostAllocationRuleDetailsResponse struct {
	// Source resources for cost allocation. At this time, this list can contain no more than one element.
	SourceResources []SourceCostAllocationResourceResponse `pulumi:"sourceResources"`
	// Target resources for cost allocation. At this time, this list can contain no more than one element.
	TargetResources []TargetCostAllocationResourceResponse `pulumi:"targetResources"`
}

// CostAllocationRuleDetailsResponseInput is an input type that accepts CostAllocationRuleDetailsResponseArgs and CostAllocationRuleDetailsResponseOutput values.
// You can construct a concrete instance of `CostAllocationRuleDetailsResponseInput` via:
//
//          CostAllocationRuleDetailsResponseArgs{...}
type CostAllocationRuleDetailsResponseInput interface {
	pulumi.Input

	ToCostAllocationRuleDetailsResponseOutput() CostAllocationRuleDetailsResponseOutput
	ToCostAllocationRuleDetailsResponseOutputWithContext(context.Context) CostAllocationRuleDetailsResponseOutput
}

// Resource details of the cost allocation rule
type CostAllocationRuleDetailsResponseArgs struct {
	// Source resources for cost allocation. At this time, this list can contain no more than one element.
	SourceResources SourceCostAllocationResourceResponseArrayInput `pulumi:"sourceResources"`
	// Target resources for cost allocation. At this time, this list can contain no more than one element.
	TargetResources TargetCostAllocationResourceResponseArrayInput `pulumi:"targetResources"`
}

func (CostAllocationRuleDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationRuleDetailsResponse)(nil)).Elem()
}

func (i CostAllocationRuleDetailsResponseArgs) ToCostAllocationRuleDetailsResponseOutput() CostAllocationRuleDetailsResponseOutput {
	return i.ToCostAllocationRuleDetailsResponseOutputWithContext(context.Background())
}

func (i CostAllocationRuleDetailsResponseArgs) ToCostAllocationRuleDetailsResponseOutputWithContext(ctx context.Context) CostAllocationRuleDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationRuleDetailsResponseOutput)
}

func (i CostAllocationRuleDetailsResponseArgs) ToCostAllocationRuleDetailsResponsePtrOutput() CostAllocationRuleDetailsResponsePtrOutput {
	return i.ToCostAllocationRuleDetailsResponsePtrOutputWithContext(context.Background())
}

func (i CostAllocationRuleDetailsResponseArgs) ToCostAllocationRuleDetailsResponsePtrOutputWithContext(ctx context.Context) CostAllocationRuleDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationRuleDetailsResponseOutput).ToCostAllocationRuleDetailsResponsePtrOutputWithContext(ctx)
}

// CostAllocationRuleDetailsResponsePtrInput is an input type that accepts CostAllocationRuleDetailsResponseArgs, CostAllocationRuleDetailsResponsePtr and CostAllocationRuleDetailsResponsePtrOutput values.
// You can construct a concrete instance of `CostAllocationRuleDetailsResponsePtrInput` via:
//
//          CostAllocationRuleDetailsResponseArgs{...}
//
//  or:
//
//          nil
type CostAllocationRuleDetailsResponsePtrInput interface {
	pulumi.Input

	ToCostAllocationRuleDetailsResponsePtrOutput() CostAllocationRuleDetailsResponsePtrOutput
	ToCostAllocationRuleDetailsResponsePtrOutputWithContext(context.Context) CostAllocationRuleDetailsResponsePtrOutput
}

type costAllocationRuleDetailsResponsePtrType CostAllocationRuleDetailsResponseArgs

func CostAllocationRuleDetailsResponsePtr(v *CostAllocationRuleDetailsResponseArgs) CostAllocationRuleDetailsResponsePtrInput {
	return (*costAllocationRuleDetailsResponsePtrType)(v)
}

func (*costAllocationRuleDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CostAllocationRuleDetailsResponse)(nil)).Elem()
}

func (i *costAllocationRuleDetailsResponsePtrType) ToCostAllocationRuleDetailsResponsePtrOutput() CostAllocationRuleDetailsResponsePtrOutput {
	return i.ToCostAllocationRuleDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *costAllocationRuleDetailsResponsePtrType) ToCostAllocationRuleDetailsResponsePtrOutputWithContext(ctx context.Context) CostAllocationRuleDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationRuleDetailsResponsePtrOutput)
}

// Resource details of the cost allocation rule
type CostAllocationRuleDetailsResponseOutput struct{ *pulumi.OutputState }

func (CostAllocationRuleDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationRuleDetailsResponse)(nil)).Elem()
}

func (o CostAllocationRuleDetailsResponseOutput) ToCostAllocationRuleDetailsResponseOutput() CostAllocationRuleDetailsResponseOutput {
	return o
}

func (o CostAllocationRuleDetailsResponseOutput) ToCostAllocationRuleDetailsResponseOutputWithContext(ctx context.Context) CostAllocationRuleDetailsResponseOutput {
	return o
}

func (o CostAllocationRuleDetailsResponseOutput) ToCostAllocationRuleDetailsResponsePtrOutput() CostAllocationRuleDetailsResponsePtrOutput {
	return o.ToCostAllocationRuleDetailsResponsePtrOutputWithContext(context.Background())
}

func (o CostAllocationRuleDetailsResponseOutput) ToCostAllocationRuleDetailsResponsePtrOutputWithContext(ctx context.Context) CostAllocationRuleDetailsResponsePtrOutput {
	return o.ApplyT(func(v CostAllocationRuleDetailsResponse) *CostAllocationRuleDetailsResponse {
		return &v
	}).(CostAllocationRuleDetailsResponsePtrOutput)
}

// Source resources for cost allocation. At this time, this list can contain no more than one element.
func (o CostAllocationRuleDetailsResponseOutput) SourceResources() SourceCostAllocationResourceResponseArrayOutput {
	return o.ApplyT(func(v CostAllocationRuleDetailsResponse) []SourceCostAllocationResourceResponse {
		return v.SourceResources
	}).(SourceCostAllocationResourceResponseArrayOutput)
}

// Target resources for cost allocation. At this time, this list can contain no more than one element.
func (o CostAllocationRuleDetailsResponseOutput) TargetResources() TargetCostAllocationResourceResponseArrayOutput {
	return o.ApplyT(func(v CostAllocationRuleDetailsResponse) []TargetCostAllocationResourceResponse {
		return v.TargetResources
	}).(TargetCostAllocationResourceResponseArrayOutput)
}

type CostAllocationRuleDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (CostAllocationRuleDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CostAllocationRuleDetailsResponse)(nil)).Elem()
}

func (o CostAllocationRuleDetailsResponsePtrOutput) ToCostAllocationRuleDetailsResponsePtrOutput() CostAllocationRuleDetailsResponsePtrOutput {
	return o
}

func (o CostAllocationRuleDetailsResponsePtrOutput) ToCostAllocationRuleDetailsResponsePtrOutputWithContext(ctx context.Context) CostAllocationRuleDetailsResponsePtrOutput {
	return o
}

func (o CostAllocationRuleDetailsResponsePtrOutput) Elem() CostAllocationRuleDetailsResponseOutput {
	return o.ApplyT(func(v *CostAllocationRuleDetailsResponse) CostAllocationRuleDetailsResponse { return *v }).(CostAllocationRuleDetailsResponseOutput)
}

// Source resources for cost allocation. At this time, this list can contain no more than one element.
func (o CostAllocationRuleDetailsResponsePtrOutput) SourceResources() SourceCostAllocationResourceResponseArrayOutput {
	return o.ApplyT(func(v *CostAllocationRuleDetailsResponse) []SourceCostAllocationResourceResponse {
		if v == nil {
			return nil
		}
		return v.SourceResources
	}).(SourceCostAllocationResourceResponseArrayOutput)
}

// Target resources for cost allocation. At this time, this list can contain no more than one element.
func (o CostAllocationRuleDetailsResponsePtrOutput) TargetResources() TargetCostAllocationResourceResponseArrayOutput {
	return o.ApplyT(func(v *CostAllocationRuleDetailsResponse) []TargetCostAllocationResourceResponse {
		if v == nil {
			return nil
		}
		return v.TargetResources
	}).(TargetCostAllocationResourceResponseArrayOutput)
}

// The properties of a cost allocation rule
type CostAllocationRuleProperties struct {
	// Description of a cost allocation rule.
	Description *string `pulumi:"description"`
	// Resource information for the cost allocation rule
	Details CostAllocationRuleDetails `pulumi:"details"`
	// Status of the rule
	Status string `pulumi:"status"`
}

// CostAllocationRulePropertiesInput is an input type that accepts CostAllocationRulePropertiesArgs and CostAllocationRulePropertiesOutput values.
// You can construct a concrete instance of `CostAllocationRulePropertiesInput` via:
//
//          CostAllocationRulePropertiesArgs{...}
type CostAllocationRulePropertiesInput interface {
	pulumi.Input

	ToCostAllocationRulePropertiesOutput() CostAllocationRulePropertiesOutput
	ToCostAllocationRulePropertiesOutputWithContext(context.Context) CostAllocationRulePropertiesOutput
}

// The properties of a cost allocation rule
type CostAllocationRulePropertiesArgs struct {
	// Description of a cost allocation rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Resource information for the cost allocation rule
	Details CostAllocationRuleDetailsInput `pulumi:"details"`
	// Status of the rule
	Status pulumi.StringInput `pulumi:"status"`
}

func (CostAllocationRulePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationRuleProperties)(nil)).Elem()
}

func (i CostAllocationRulePropertiesArgs) ToCostAllocationRulePropertiesOutput() CostAllocationRulePropertiesOutput {
	return i.ToCostAllocationRulePropertiesOutputWithContext(context.Background())
}

func (i CostAllocationRulePropertiesArgs) ToCostAllocationRulePropertiesOutputWithContext(ctx context.Context) CostAllocationRulePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationRulePropertiesOutput)
}

func (i CostAllocationRulePropertiesArgs) ToCostAllocationRulePropertiesPtrOutput() CostAllocationRulePropertiesPtrOutput {
	return i.ToCostAllocationRulePropertiesPtrOutputWithContext(context.Background())
}

func (i CostAllocationRulePropertiesArgs) ToCostAllocationRulePropertiesPtrOutputWithContext(ctx context.Context) CostAllocationRulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationRulePropertiesOutput).ToCostAllocationRulePropertiesPtrOutputWithContext(ctx)
}

// CostAllocationRulePropertiesPtrInput is an input type that accepts CostAllocationRulePropertiesArgs, CostAllocationRulePropertiesPtr and CostAllocationRulePropertiesPtrOutput values.
// You can construct a concrete instance of `CostAllocationRulePropertiesPtrInput` via:
//
//          CostAllocationRulePropertiesArgs{...}
//
//  or:
//
//          nil
type CostAllocationRulePropertiesPtrInput interface {
	pulumi.Input

	ToCostAllocationRulePropertiesPtrOutput() CostAllocationRulePropertiesPtrOutput
	ToCostAllocationRulePropertiesPtrOutputWithContext(context.Context) CostAllocationRulePropertiesPtrOutput
}

type costAllocationRulePropertiesPtrType CostAllocationRulePropertiesArgs

func CostAllocationRulePropertiesPtr(v *CostAllocationRulePropertiesArgs) CostAllocationRulePropertiesPtrInput {
	return (*costAllocationRulePropertiesPtrType)(v)
}

func (*costAllocationRulePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CostAllocationRuleProperties)(nil)).Elem()
}

func (i *costAllocationRulePropertiesPtrType) ToCostAllocationRulePropertiesPtrOutput() CostAllocationRulePropertiesPtrOutput {
	return i.ToCostAllocationRulePropertiesPtrOutputWithContext(context.Background())
}

func (i *costAllocationRulePropertiesPtrType) ToCostAllocationRulePropertiesPtrOutputWithContext(ctx context.Context) CostAllocationRulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationRulePropertiesPtrOutput)
}

// The properties of a cost allocation rule
type CostAllocationRulePropertiesOutput struct{ *pulumi.OutputState }

func (CostAllocationRulePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationRuleProperties)(nil)).Elem()
}

func (o CostAllocationRulePropertiesOutput) ToCostAllocationRulePropertiesOutput() CostAllocationRulePropertiesOutput {
	return o
}

func (o CostAllocationRulePropertiesOutput) ToCostAllocationRulePropertiesOutputWithContext(ctx context.Context) CostAllocationRulePropertiesOutput {
	return o
}

func (o CostAllocationRulePropertiesOutput) ToCostAllocationRulePropertiesPtrOutput() CostAllocationRulePropertiesPtrOutput {
	return o.ToCostAllocationRulePropertiesPtrOutputWithContext(context.Background())
}

func (o CostAllocationRulePropertiesOutput) ToCostAllocationRulePropertiesPtrOutputWithContext(ctx context.Context) CostAllocationRulePropertiesPtrOutput {
	return o.ApplyT(func(v CostAllocationRuleProperties) *CostAllocationRuleProperties {
		return &v
	}).(CostAllocationRulePropertiesPtrOutput)
}

// Description of a cost allocation rule.
func (o CostAllocationRulePropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CostAllocationRuleProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Resource information for the cost allocation rule
func (o CostAllocationRulePropertiesOutput) Details() CostAllocationRuleDetailsOutput {
	return o.ApplyT(func(v CostAllocationRuleProperties) CostAllocationRuleDetails { return v.Details }).(CostAllocationRuleDetailsOutput)
}

// Status of the rule
func (o CostAllocationRulePropertiesOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CostAllocationRuleProperties) string { return v.Status }).(pulumi.StringOutput)
}

type CostAllocationRulePropertiesPtrOutput struct{ *pulumi.OutputState }

func (CostAllocationRulePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CostAllocationRuleProperties)(nil)).Elem()
}

func (o CostAllocationRulePropertiesPtrOutput) ToCostAllocationRulePropertiesPtrOutput() CostAllocationRulePropertiesPtrOutput {
	return o
}

func (o CostAllocationRulePropertiesPtrOutput) ToCostAllocationRulePropertiesPtrOutputWithContext(ctx context.Context) CostAllocationRulePropertiesPtrOutput {
	return o
}

func (o CostAllocationRulePropertiesPtrOutput) Elem() CostAllocationRulePropertiesOutput {
	return o.ApplyT(func(v *CostAllocationRuleProperties) CostAllocationRuleProperties { return *v }).(CostAllocationRulePropertiesOutput)
}

// Description of a cost allocation rule.
func (o CostAllocationRulePropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CostAllocationRuleProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Resource information for the cost allocation rule
func (o CostAllocationRulePropertiesPtrOutput) Details() CostAllocationRuleDetailsPtrOutput {
	return o.ApplyT(func(v *CostAllocationRuleProperties) *CostAllocationRuleDetails {
		if v == nil {
			return nil
		}
		return &v.Details
	}).(CostAllocationRuleDetailsPtrOutput)
}

// Status of the rule
func (o CostAllocationRulePropertiesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CostAllocationRuleProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The properties of a cost allocation rule
type CostAllocationRulePropertiesInvokeResponse struct {
	// Time at which the rule was created. Rules that change cost for the same resource are applied in order of creation.
	CreatedDate string `pulumi:"createdDate"`
	// Description of a cost allocation rule.
	Description *string `pulumi:"description"`
	// Resource information for the cost allocation rule
	Details CostAllocationRuleDetailsInvokeResponse `pulumi:"details"`
	// Status of the rule
	Status string `pulumi:"status"`
	// Time at which the rule was last updated.
	UpdatedDate string `pulumi:"updatedDate"`
}

// CostAllocationRulePropertiesInvokeResponseInput is an input type that accepts CostAllocationRulePropertiesInvokeResponseArgs and CostAllocationRulePropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `CostAllocationRulePropertiesInvokeResponseInput` via:
//
//          CostAllocationRulePropertiesInvokeResponseArgs{...}
type CostAllocationRulePropertiesInvokeResponseInput interface {
	pulumi.Input

	ToCostAllocationRulePropertiesInvokeResponseOutput() CostAllocationRulePropertiesInvokeResponseOutput
	ToCostAllocationRulePropertiesInvokeResponseOutputWithContext(context.Context) CostAllocationRulePropertiesInvokeResponseOutput
}

// The properties of a cost allocation rule
type CostAllocationRulePropertiesInvokeResponseArgs struct {
	// Time at which the rule was created. Rules that change cost for the same resource are applied in order of creation.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// Description of a cost allocation rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Resource information for the cost allocation rule
	Details CostAllocationRuleDetailsInvokeResponseInput `pulumi:"details"`
	// Status of the rule
	Status pulumi.StringInput `pulumi:"status"`
	// Time at which the rule was last updated.
	UpdatedDate pulumi.StringInput `pulumi:"updatedDate"`
}

func (CostAllocationRulePropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationRulePropertiesInvokeResponse)(nil)).Elem()
}

func (i CostAllocationRulePropertiesInvokeResponseArgs) ToCostAllocationRulePropertiesInvokeResponseOutput() CostAllocationRulePropertiesInvokeResponseOutput {
	return i.ToCostAllocationRulePropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i CostAllocationRulePropertiesInvokeResponseArgs) ToCostAllocationRulePropertiesInvokeResponseOutputWithContext(ctx context.Context) CostAllocationRulePropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationRulePropertiesInvokeResponseOutput)
}

// The properties of a cost allocation rule
type CostAllocationRulePropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (CostAllocationRulePropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationRulePropertiesInvokeResponse)(nil)).Elem()
}

func (o CostAllocationRulePropertiesInvokeResponseOutput) ToCostAllocationRulePropertiesInvokeResponseOutput() CostAllocationRulePropertiesInvokeResponseOutput {
	return o
}

func (o CostAllocationRulePropertiesInvokeResponseOutput) ToCostAllocationRulePropertiesInvokeResponseOutputWithContext(ctx context.Context) CostAllocationRulePropertiesInvokeResponseOutput {
	return o
}

// Time at which the rule was created. Rules that change cost for the same resource are applied in order of creation.
func (o CostAllocationRulePropertiesInvokeResponseOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v CostAllocationRulePropertiesInvokeResponse) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// Description of a cost allocation rule.
func (o CostAllocationRulePropertiesInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CostAllocationRulePropertiesInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Resource information for the cost allocation rule
func (o CostAllocationRulePropertiesInvokeResponseOutput) Details() CostAllocationRuleDetailsInvokeResponseOutput {
	return o.ApplyT(func(v CostAllocationRulePropertiesInvokeResponse) CostAllocationRuleDetailsInvokeResponse {
		return v.Details
	}).(CostAllocationRuleDetailsInvokeResponseOutput)
}

// Status of the rule
func (o CostAllocationRulePropertiesInvokeResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CostAllocationRulePropertiesInvokeResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Time at which the rule was last updated.
func (o CostAllocationRulePropertiesInvokeResponseOutput) UpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v CostAllocationRulePropertiesInvokeResponse) string { return v.UpdatedDate }).(pulumi.StringOutput)
}

// The properties of a cost allocation rule
type CostAllocationRulePropertiesResponse struct {
	// Time at which the rule was created. Rules that change cost for the same resource are applied in order of creation.
	CreatedDate string `pulumi:"createdDate"`
	// Description of a cost allocation rule.
	Description *string `pulumi:"description"`
	// Resource information for the cost allocation rule
	Details CostAllocationRuleDetailsResponse `pulumi:"details"`
	// Status of the rule
	Status string `pulumi:"status"`
	// Time at which the rule was last updated.
	UpdatedDate string `pulumi:"updatedDate"`
}

// CostAllocationRulePropertiesResponseInput is an input type that accepts CostAllocationRulePropertiesResponseArgs and CostAllocationRulePropertiesResponseOutput values.
// You can construct a concrete instance of `CostAllocationRulePropertiesResponseInput` via:
//
//          CostAllocationRulePropertiesResponseArgs{...}
type CostAllocationRulePropertiesResponseInput interface {
	pulumi.Input

	ToCostAllocationRulePropertiesResponseOutput() CostAllocationRulePropertiesResponseOutput
	ToCostAllocationRulePropertiesResponseOutputWithContext(context.Context) CostAllocationRulePropertiesResponseOutput
}

// The properties of a cost allocation rule
type CostAllocationRulePropertiesResponseArgs struct {
	// Time at which the rule was created. Rules that change cost for the same resource are applied in order of creation.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// Description of a cost allocation rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Resource information for the cost allocation rule
	Details CostAllocationRuleDetailsResponseInput `pulumi:"details"`
	// Status of the rule
	Status pulumi.StringInput `pulumi:"status"`
	// Time at which the rule was last updated.
	UpdatedDate pulumi.StringInput `pulumi:"updatedDate"`
}

func (CostAllocationRulePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationRulePropertiesResponse)(nil)).Elem()
}

func (i CostAllocationRulePropertiesResponseArgs) ToCostAllocationRulePropertiesResponseOutput() CostAllocationRulePropertiesResponseOutput {
	return i.ToCostAllocationRulePropertiesResponseOutputWithContext(context.Background())
}

func (i CostAllocationRulePropertiesResponseArgs) ToCostAllocationRulePropertiesResponseOutputWithContext(ctx context.Context) CostAllocationRulePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationRulePropertiesResponseOutput)
}

func (i CostAllocationRulePropertiesResponseArgs) ToCostAllocationRulePropertiesResponsePtrOutput() CostAllocationRulePropertiesResponsePtrOutput {
	return i.ToCostAllocationRulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i CostAllocationRulePropertiesResponseArgs) ToCostAllocationRulePropertiesResponsePtrOutputWithContext(ctx context.Context) CostAllocationRulePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationRulePropertiesResponseOutput).ToCostAllocationRulePropertiesResponsePtrOutputWithContext(ctx)
}

// CostAllocationRulePropertiesResponsePtrInput is an input type that accepts CostAllocationRulePropertiesResponseArgs, CostAllocationRulePropertiesResponsePtr and CostAllocationRulePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `CostAllocationRulePropertiesResponsePtrInput` via:
//
//          CostAllocationRulePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type CostAllocationRulePropertiesResponsePtrInput interface {
	pulumi.Input

	ToCostAllocationRulePropertiesResponsePtrOutput() CostAllocationRulePropertiesResponsePtrOutput
	ToCostAllocationRulePropertiesResponsePtrOutputWithContext(context.Context) CostAllocationRulePropertiesResponsePtrOutput
}

type costAllocationRulePropertiesResponsePtrType CostAllocationRulePropertiesResponseArgs

func CostAllocationRulePropertiesResponsePtr(v *CostAllocationRulePropertiesResponseArgs) CostAllocationRulePropertiesResponsePtrInput {
	return (*costAllocationRulePropertiesResponsePtrType)(v)
}

func (*costAllocationRulePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CostAllocationRulePropertiesResponse)(nil)).Elem()
}

func (i *costAllocationRulePropertiesResponsePtrType) ToCostAllocationRulePropertiesResponsePtrOutput() CostAllocationRulePropertiesResponsePtrOutput {
	return i.ToCostAllocationRulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *costAllocationRulePropertiesResponsePtrType) ToCostAllocationRulePropertiesResponsePtrOutputWithContext(ctx context.Context) CostAllocationRulePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostAllocationRulePropertiesResponsePtrOutput)
}

// The properties of a cost allocation rule
type CostAllocationRulePropertiesResponseOutput struct{ *pulumi.OutputState }

func (CostAllocationRulePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CostAllocationRulePropertiesResponse)(nil)).Elem()
}

func (o CostAllocationRulePropertiesResponseOutput) ToCostAllocationRulePropertiesResponseOutput() CostAllocationRulePropertiesResponseOutput {
	return o
}

func (o CostAllocationRulePropertiesResponseOutput) ToCostAllocationRulePropertiesResponseOutputWithContext(ctx context.Context) CostAllocationRulePropertiesResponseOutput {
	return o
}

func (o CostAllocationRulePropertiesResponseOutput) ToCostAllocationRulePropertiesResponsePtrOutput() CostAllocationRulePropertiesResponsePtrOutput {
	return o.ToCostAllocationRulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o CostAllocationRulePropertiesResponseOutput) ToCostAllocationRulePropertiesResponsePtrOutputWithContext(ctx context.Context) CostAllocationRulePropertiesResponsePtrOutput {
	return o.ApplyT(func(v CostAllocationRulePropertiesResponse) *CostAllocationRulePropertiesResponse {
		return &v
	}).(CostAllocationRulePropertiesResponsePtrOutput)
}

// Time at which the rule was created. Rules that change cost for the same resource are applied in order of creation.
func (o CostAllocationRulePropertiesResponseOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v CostAllocationRulePropertiesResponse) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// Description of a cost allocation rule.
func (o CostAllocationRulePropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CostAllocationRulePropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Resource information for the cost allocation rule
func (o CostAllocationRulePropertiesResponseOutput) Details() CostAllocationRuleDetailsResponseOutput {
	return o.ApplyT(func(v CostAllocationRulePropertiesResponse) CostAllocationRuleDetailsResponse { return v.Details }).(CostAllocationRuleDetailsResponseOutput)
}

// Status of the rule
func (o CostAllocationRulePropertiesResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CostAllocationRulePropertiesResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Time at which the rule was last updated.
func (o CostAllocationRulePropertiesResponseOutput) UpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v CostAllocationRulePropertiesResponse) string { return v.UpdatedDate }).(pulumi.StringOutput)
}

type CostAllocationRulePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CostAllocationRulePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CostAllocationRulePropertiesResponse)(nil)).Elem()
}

func (o CostAllocationRulePropertiesResponsePtrOutput) ToCostAllocationRulePropertiesResponsePtrOutput() CostAllocationRulePropertiesResponsePtrOutput {
	return o
}

func (o CostAllocationRulePropertiesResponsePtrOutput) ToCostAllocationRulePropertiesResponsePtrOutputWithContext(ctx context.Context) CostAllocationRulePropertiesResponsePtrOutput {
	return o
}

func (o CostAllocationRulePropertiesResponsePtrOutput) Elem() CostAllocationRulePropertiesResponseOutput {
	return o.ApplyT(func(v *CostAllocationRulePropertiesResponse) CostAllocationRulePropertiesResponse { return *v }).(CostAllocationRulePropertiesResponseOutput)
}

// Time at which the rule was created. Rules that change cost for the same resource are applied in order of creation.
func (o CostAllocationRulePropertiesResponsePtrOutput) CreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CostAllocationRulePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedDate
	}).(pulumi.StringPtrOutput)
}

// Description of a cost allocation rule.
func (o CostAllocationRulePropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CostAllocationRulePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Resource information for the cost allocation rule
func (o CostAllocationRulePropertiesResponsePtrOutput) Details() CostAllocationRuleDetailsResponsePtrOutput {
	return o.ApplyT(func(v *CostAllocationRulePropertiesResponse) *CostAllocationRuleDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.Details
	}).(CostAllocationRuleDetailsResponsePtrOutput)
}

// Status of the rule
func (o CostAllocationRulePropertiesResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CostAllocationRulePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Time at which the rule was last updated.
func (o CostAllocationRulePropertiesResponsePtrOutput) UpdatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CostAllocationRulePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpdatedDate
	}).(pulumi.StringPtrOutput)
}

// Source resources for cost allocation
type SourceCostAllocationResource struct {
	// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
	Name string `pulumi:"name"`
	// Type of resources contained in this cost allocation rule
	ResourceType string `pulumi:"resourceType"`
	// Source Resources for cost allocation. This list cannot contain more than 25 values.
	Values []string `pulumi:"values"`
}

// SourceCostAllocationResourceInput is an input type that accepts SourceCostAllocationResourceArgs and SourceCostAllocationResourceOutput values.
// You can construct a concrete instance of `SourceCostAllocationResourceInput` via:
//
//          SourceCostAllocationResourceArgs{...}
type SourceCostAllocationResourceInput interface {
	pulumi.Input

	ToSourceCostAllocationResourceOutput() SourceCostAllocationResourceOutput
	ToSourceCostAllocationResourceOutputWithContext(context.Context) SourceCostAllocationResourceOutput
}

// Source resources for cost allocation
type SourceCostAllocationResourceArgs struct {
	// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
	Name pulumi.StringInput `pulumi:"name"`
	// Type of resources contained in this cost allocation rule
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Source Resources for cost allocation. This list cannot contain more than 25 values.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (SourceCostAllocationResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceCostAllocationResource)(nil)).Elem()
}

func (i SourceCostAllocationResourceArgs) ToSourceCostAllocationResourceOutput() SourceCostAllocationResourceOutput {
	return i.ToSourceCostAllocationResourceOutputWithContext(context.Background())
}

func (i SourceCostAllocationResourceArgs) ToSourceCostAllocationResourceOutputWithContext(ctx context.Context) SourceCostAllocationResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceCostAllocationResourceOutput)
}

// SourceCostAllocationResourceArrayInput is an input type that accepts SourceCostAllocationResourceArray and SourceCostAllocationResourceArrayOutput values.
// You can construct a concrete instance of `SourceCostAllocationResourceArrayInput` via:
//
//          SourceCostAllocationResourceArray{ SourceCostAllocationResourceArgs{...} }
type SourceCostAllocationResourceArrayInput interface {
	pulumi.Input

	ToSourceCostAllocationResourceArrayOutput() SourceCostAllocationResourceArrayOutput
	ToSourceCostAllocationResourceArrayOutputWithContext(context.Context) SourceCostAllocationResourceArrayOutput
}

type SourceCostAllocationResourceArray []SourceCostAllocationResourceInput

func (SourceCostAllocationResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceCostAllocationResource)(nil)).Elem()
}

func (i SourceCostAllocationResourceArray) ToSourceCostAllocationResourceArrayOutput() SourceCostAllocationResourceArrayOutput {
	return i.ToSourceCostAllocationResourceArrayOutputWithContext(context.Background())
}

func (i SourceCostAllocationResourceArray) ToSourceCostAllocationResourceArrayOutputWithContext(ctx context.Context) SourceCostAllocationResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceCostAllocationResourceArrayOutput)
}

// Source resources for cost allocation
type SourceCostAllocationResourceOutput struct{ *pulumi.OutputState }

func (SourceCostAllocationResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceCostAllocationResource)(nil)).Elem()
}

func (o SourceCostAllocationResourceOutput) ToSourceCostAllocationResourceOutput() SourceCostAllocationResourceOutput {
	return o
}

func (o SourceCostAllocationResourceOutput) ToSourceCostAllocationResourceOutputWithContext(ctx context.Context) SourceCostAllocationResourceOutput {
	return o
}

// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
func (o SourceCostAllocationResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SourceCostAllocationResource) string { return v.Name }).(pulumi.StringOutput)
}

// Type of resources contained in this cost allocation rule
func (o SourceCostAllocationResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v SourceCostAllocationResource) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Source Resources for cost allocation. This list cannot contain more than 25 values.
func (o SourceCostAllocationResourceOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SourceCostAllocationResource) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type SourceCostAllocationResourceArrayOutput struct{ *pulumi.OutputState }

func (SourceCostAllocationResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceCostAllocationResource)(nil)).Elem()
}

func (o SourceCostAllocationResourceArrayOutput) ToSourceCostAllocationResourceArrayOutput() SourceCostAllocationResourceArrayOutput {
	return o
}

func (o SourceCostAllocationResourceArrayOutput) ToSourceCostAllocationResourceArrayOutputWithContext(ctx context.Context) SourceCostAllocationResourceArrayOutput {
	return o
}

func (o SourceCostAllocationResourceArrayOutput) Index(i pulumi.IntInput) SourceCostAllocationResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SourceCostAllocationResource {
		return vs[0].([]SourceCostAllocationResource)[vs[1].(int)]
	}).(SourceCostAllocationResourceOutput)
}

// Source resources for cost allocation
type SourceCostAllocationResourceInvokeResponse struct {
	// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
	Name string `pulumi:"name"`
	// Type of resources contained in this cost allocation rule
	ResourceType string `pulumi:"resourceType"`
	// Source Resources for cost allocation. This list cannot contain more than 25 values.
	Values []string `pulumi:"values"`
}

// SourceCostAllocationResourceInvokeResponseInput is an input type that accepts SourceCostAllocationResourceInvokeResponseArgs and SourceCostAllocationResourceInvokeResponseOutput values.
// You can construct a concrete instance of `SourceCostAllocationResourceInvokeResponseInput` via:
//
//          SourceCostAllocationResourceInvokeResponseArgs{...}
type SourceCostAllocationResourceInvokeResponseInput interface {
	pulumi.Input

	ToSourceCostAllocationResourceInvokeResponseOutput() SourceCostAllocationResourceInvokeResponseOutput
	ToSourceCostAllocationResourceInvokeResponseOutputWithContext(context.Context) SourceCostAllocationResourceInvokeResponseOutput
}

// Source resources for cost allocation
type SourceCostAllocationResourceInvokeResponseArgs struct {
	// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
	Name pulumi.StringInput `pulumi:"name"`
	// Type of resources contained in this cost allocation rule
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Source Resources for cost allocation. This list cannot contain more than 25 values.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (SourceCostAllocationResourceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceCostAllocationResourceInvokeResponse)(nil)).Elem()
}

func (i SourceCostAllocationResourceInvokeResponseArgs) ToSourceCostAllocationResourceInvokeResponseOutput() SourceCostAllocationResourceInvokeResponseOutput {
	return i.ToSourceCostAllocationResourceInvokeResponseOutputWithContext(context.Background())
}

func (i SourceCostAllocationResourceInvokeResponseArgs) ToSourceCostAllocationResourceInvokeResponseOutputWithContext(ctx context.Context) SourceCostAllocationResourceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceCostAllocationResourceInvokeResponseOutput)
}

// SourceCostAllocationResourceInvokeResponseArrayInput is an input type that accepts SourceCostAllocationResourceInvokeResponseArray and SourceCostAllocationResourceInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SourceCostAllocationResourceInvokeResponseArrayInput` via:
//
//          SourceCostAllocationResourceInvokeResponseArray{ SourceCostAllocationResourceInvokeResponseArgs{...} }
type SourceCostAllocationResourceInvokeResponseArrayInput interface {
	pulumi.Input

	ToSourceCostAllocationResourceInvokeResponseArrayOutput() SourceCostAllocationResourceInvokeResponseArrayOutput
	ToSourceCostAllocationResourceInvokeResponseArrayOutputWithContext(context.Context) SourceCostAllocationResourceInvokeResponseArrayOutput
}

type SourceCostAllocationResourceInvokeResponseArray []SourceCostAllocationResourceInvokeResponseInput

func (SourceCostAllocationResourceInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceCostAllocationResourceInvokeResponse)(nil)).Elem()
}

func (i SourceCostAllocationResourceInvokeResponseArray) ToSourceCostAllocationResourceInvokeResponseArrayOutput() SourceCostAllocationResourceInvokeResponseArrayOutput {
	return i.ToSourceCostAllocationResourceInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SourceCostAllocationResourceInvokeResponseArray) ToSourceCostAllocationResourceInvokeResponseArrayOutputWithContext(ctx context.Context) SourceCostAllocationResourceInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceCostAllocationResourceInvokeResponseArrayOutput)
}

// Source resources for cost allocation
type SourceCostAllocationResourceInvokeResponseOutput struct{ *pulumi.OutputState }

func (SourceCostAllocationResourceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceCostAllocationResourceInvokeResponse)(nil)).Elem()
}

func (o SourceCostAllocationResourceInvokeResponseOutput) ToSourceCostAllocationResourceInvokeResponseOutput() SourceCostAllocationResourceInvokeResponseOutput {
	return o
}

func (o SourceCostAllocationResourceInvokeResponseOutput) ToSourceCostAllocationResourceInvokeResponseOutputWithContext(ctx context.Context) SourceCostAllocationResourceInvokeResponseOutput {
	return o
}

// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
func (o SourceCostAllocationResourceInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SourceCostAllocationResourceInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Type of resources contained in this cost allocation rule
func (o SourceCostAllocationResourceInvokeResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v SourceCostAllocationResourceInvokeResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Source Resources for cost allocation. This list cannot contain more than 25 values.
func (o SourceCostAllocationResourceInvokeResponseOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SourceCostAllocationResourceInvokeResponse) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type SourceCostAllocationResourceInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SourceCostAllocationResourceInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceCostAllocationResourceInvokeResponse)(nil)).Elem()
}

func (o SourceCostAllocationResourceInvokeResponseArrayOutput) ToSourceCostAllocationResourceInvokeResponseArrayOutput() SourceCostAllocationResourceInvokeResponseArrayOutput {
	return o
}

func (o SourceCostAllocationResourceInvokeResponseArrayOutput) ToSourceCostAllocationResourceInvokeResponseArrayOutputWithContext(ctx context.Context) SourceCostAllocationResourceInvokeResponseArrayOutput {
	return o
}

func (o SourceCostAllocationResourceInvokeResponseArrayOutput) Index(i pulumi.IntInput) SourceCostAllocationResourceInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SourceCostAllocationResourceInvokeResponse {
		return vs[0].([]SourceCostAllocationResourceInvokeResponse)[vs[1].(int)]
	}).(SourceCostAllocationResourceInvokeResponseOutput)
}

// Source resources for cost allocation
type SourceCostAllocationResourceResponse struct {
	// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
	Name string `pulumi:"name"`
	// Type of resources contained in this cost allocation rule
	ResourceType string `pulumi:"resourceType"`
	// Source Resources for cost allocation. This list cannot contain more than 25 values.
	Values []string `pulumi:"values"`
}

// SourceCostAllocationResourceResponseInput is an input type that accepts SourceCostAllocationResourceResponseArgs and SourceCostAllocationResourceResponseOutput values.
// You can construct a concrete instance of `SourceCostAllocationResourceResponseInput` via:
//
//          SourceCostAllocationResourceResponseArgs{...}
type SourceCostAllocationResourceResponseInput interface {
	pulumi.Input

	ToSourceCostAllocationResourceResponseOutput() SourceCostAllocationResourceResponseOutput
	ToSourceCostAllocationResourceResponseOutputWithContext(context.Context) SourceCostAllocationResourceResponseOutput
}

// Source resources for cost allocation
type SourceCostAllocationResourceResponseArgs struct {
	// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
	Name pulumi.StringInput `pulumi:"name"`
	// Type of resources contained in this cost allocation rule
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Source Resources for cost allocation. This list cannot contain more than 25 values.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (SourceCostAllocationResourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceCostAllocationResourceResponse)(nil)).Elem()
}

func (i SourceCostAllocationResourceResponseArgs) ToSourceCostAllocationResourceResponseOutput() SourceCostAllocationResourceResponseOutput {
	return i.ToSourceCostAllocationResourceResponseOutputWithContext(context.Background())
}

func (i SourceCostAllocationResourceResponseArgs) ToSourceCostAllocationResourceResponseOutputWithContext(ctx context.Context) SourceCostAllocationResourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceCostAllocationResourceResponseOutput)
}

// SourceCostAllocationResourceResponseArrayInput is an input type that accepts SourceCostAllocationResourceResponseArray and SourceCostAllocationResourceResponseArrayOutput values.
// You can construct a concrete instance of `SourceCostAllocationResourceResponseArrayInput` via:
//
//          SourceCostAllocationResourceResponseArray{ SourceCostAllocationResourceResponseArgs{...} }
type SourceCostAllocationResourceResponseArrayInput interface {
	pulumi.Input

	ToSourceCostAllocationResourceResponseArrayOutput() SourceCostAllocationResourceResponseArrayOutput
	ToSourceCostAllocationResourceResponseArrayOutputWithContext(context.Context) SourceCostAllocationResourceResponseArrayOutput
}

type SourceCostAllocationResourceResponseArray []SourceCostAllocationResourceResponseInput

func (SourceCostAllocationResourceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceCostAllocationResourceResponse)(nil)).Elem()
}

func (i SourceCostAllocationResourceResponseArray) ToSourceCostAllocationResourceResponseArrayOutput() SourceCostAllocationResourceResponseArrayOutput {
	return i.ToSourceCostAllocationResourceResponseArrayOutputWithContext(context.Background())
}

func (i SourceCostAllocationResourceResponseArray) ToSourceCostAllocationResourceResponseArrayOutputWithContext(ctx context.Context) SourceCostAllocationResourceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceCostAllocationResourceResponseArrayOutput)
}

// Source resources for cost allocation
type SourceCostAllocationResourceResponseOutput struct{ *pulumi.OutputState }

func (SourceCostAllocationResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceCostAllocationResourceResponse)(nil)).Elem()
}

func (o SourceCostAllocationResourceResponseOutput) ToSourceCostAllocationResourceResponseOutput() SourceCostAllocationResourceResponseOutput {
	return o
}

func (o SourceCostAllocationResourceResponseOutput) ToSourceCostAllocationResourceResponseOutputWithContext(ctx context.Context) SourceCostAllocationResourceResponseOutput {
	return o
}

// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
func (o SourceCostAllocationResourceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SourceCostAllocationResourceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Type of resources contained in this cost allocation rule
func (o SourceCostAllocationResourceResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v SourceCostAllocationResourceResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Source Resources for cost allocation. This list cannot contain more than 25 values.
func (o SourceCostAllocationResourceResponseOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SourceCostAllocationResourceResponse) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type SourceCostAllocationResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SourceCostAllocationResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceCostAllocationResourceResponse)(nil)).Elem()
}

func (o SourceCostAllocationResourceResponseArrayOutput) ToSourceCostAllocationResourceResponseArrayOutput() SourceCostAllocationResourceResponseArrayOutput {
	return o
}

func (o SourceCostAllocationResourceResponseArrayOutput) ToSourceCostAllocationResourceResponseArrayOutputWithContext(ctx context.Context) SourceCostAllocationResourceResponseArrayOutput {
	return o
}

func (o SourceCostAllocationResourceResponseArrayOutput) Index(i pulumi.IntInput) SourceCostAllocationResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SourceCostAllocationResourceResponse {
		return vs[0].([]SourceCostAllocationResourceResponse)[vs[1].(int)]
	}).(SourceCostAllocationResourceResponseOutput)
}

// Target resources for cost allocation.
type TargetCostAllocationResource struct {
	// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
	Name string `pulumi:"name"`
	// Method of cost allocation for the rule
	PolicyType string `pulumi:"policyType"`
	// Type of resources contained in this cost allocation rule
	ResourceType string `pulumi:"resourceType"`
	// Target resources for cost allocation. This list cannot contain more than 25 values.
	Values []CostAllocationProportion `pulumi:"values"`
}

// TargetCostAllocationResourceInput is an input type that accepts TargetCostAllocationResourceArgs and TargetCostAllocationResourceOutput values.
// You can construct a concrete instance of `TargetCostAllocationResourceInput` via:
//
//          TargetCostAllocationResourceArgs{...}
type TargetCostAllocationResourceInput interface {
	pulumi.Input

	ToTargetCostAllocationResourceOutput() TargetCostAllocationResourceOutput
	ToTargetCostAllocationResourceOutputWithContext(context.Context) TargetCostAllocationResourceOutput
}

// Target resources for cost allocation.
type TargetCostAllocationResourceArgs struct {
	// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
	Name pulumi.StringInput `pulumi:"name"`
	// Method of cost allocation for the rule
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// Type of resources contained in this cost allocation rule
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Target resources for cost allocation. This list cannot contain more than 25 values.
	Values CostAllocationProportionArrayInput `pulumi:"values"`
}

func (TargetCostAllocationResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetCostAllocationResource)(nil)).Elem()
}

func (i TargetCostAllocationResourceArgs) ToTargetCostAllocationResourceOutput() TargetCostAllocationResourceOutput {
	return i.ToTargetCostAllocationResourceOutputWithContext(context.Background())
}

func (i TargetCostAllocationResourceArgs) ToTargetCostAllocationResourceOutputWithContext(ctx context.Context) TargetCostAllocationResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetCostAllocationResourceOutput)
}

// TargetCostAllocationResourceArrayInput is an input type that accepts TargetCostAllocationResourceArray and TargetCostAllocationResourceArrayOutput values.
// You can construct a concrete instance of `TargetCostAllocationResourceArrayInput` via:
//
//          TargetCostAllocationResourceArray{ TargetCostAllocationResourceArgs{...} }
type TargetCostAllocationResourceArrayInput interface {
	pulumi.Input

	ToTargetCostAllocationResourceArrayOutput() TargetCostAllocationResourceArrayOutput
	ToTargetCostAllocationResourceArrayOutputWithContext(context.Context) TargetCostAllocationResourceArrayOutput
}

type TargetCostAllocationResourceArray []TargetCostAllocationResourceInput

func (TargetCostAllocationResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetCostAllocationResource)(nil)).Elem()
}

func (i TargetCostAllocationResourceArray) ToTargetCostAllocationResourceArrayOutput() TargetCostAllocationResourceArrayOutput {
	return i.ToTargetCostAllocationResourceArrayOutputWithContext(context.Background())
}

func (i TargetCostAllocationResourceArray) ToTargetCostAllocationResourceArrayOutputWithContext(ctx context.Context) TargetCostAllocationResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetCostAllocationResourceArrayOutput)
}

// Target resources for cost allocation.
type TargetCostAllocationResourceOutput struct{ *pulumi.OutputState }

func (TargetCostAllocationResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetCostAllocationResource)(nil)).Elem()
}

func (o TargetCostAllocationResourceOutput) ToTargetCostAllocationResourceOutput() TargetCostAllocationResourceOutput {
	return o
}

func (o TargetCostAllocationResourceOutput) ToTargetCostAllocationResourceOutputWithContext(ctx context.Context) TargetCostAllocationResourceOutput {
	return o
}

// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
func (o TargetCostAllocationResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TargetCostAllocationResource) string { return v.Name }).(pulumi.StringOutput)
}

// Method of cost allocation for the rule
func (o TargetCostAllocationResourceOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v TargetCostAllocationResource) string { return v.PolicyType }).(pulumi.StringOutput)
}

// Type of resources contained in this cost allocation rule
func (o TargetCostAllocationResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v TargetCostAllocationResource) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Target resources for cost allocation. This list cannot contain more than 25 values.
func (o TargetCostAllocationResourceOutput) Values() CostAllocationProportionArrayOutput {
	return o.ApplyT(func(v TargetCostAllocationResource) []CostAllocationProportion { return v.Values }).(CostAllocationProportionArrayOutput)
}

type TargetCostAllocationResourceArrayOutput struct{ *pulumi.OutputState }

func (TargetCostAllocationResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetCostAllocationResource)(nil)).Elem()
}

func (o TargetCostAllocationResourceArrayOutput) ToTargetCostAllocationResourceArrayOutput() TargetCostAllocationResourceArrayOutput {
	return o
}

func (o TargetCostAllocationResourceArrayOutput) ToTargetCostAllocationResourceArrayOutputWithContext(ctx context.Context) TargetCostAllocationResourceArrayOutput {
	return o
}

func (o TargetCostAllocationResourceArrayOutput) Index(i pulumi.IntInput) TargetCostAllocationResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetCostAllocationResource {
		return vs[0].([]TargetCostAllocationResource)[vs[1].(int)]
	}).(TargetCostAllocationResourceOutput)
}

// Target resources for cost allocation.
type TargetCostAllocationResourceInvokeResponse struct {
	// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
	Name string `pulumi:"name"`
	// Method of cost allocation for the rule
	PolicyType string `pulumi:"policyType"`
	// Type of resources contained in this cost allocation rule
	ResourceType string `pulumi:"resourceType"`
	// Target resources for cost allocation. This list cannot contain more than 25 values.
	Values []CostAllocationProportionInvokeResponse `pulumi:"values"`
}

// TargetCostAllocationResourceInvokeResponseInput is an input type that accepts TargetCostAllocationResourceInvokeResponseArgs and TargetCostAllocationResourceInvokeResponseOutput values.
// You can construct a concrete instance of `TargetCostAllocationResourceInvokeResponseInput` via:
//
//          TargetCostAllocationResourceInvokeResponseArgs{...}
type TargetCostAllocationResourceInvokeResponseInput interface {
	pulumi.Input

	ToTargetCostAllocationResourceInvokeResponseOutput() TargetCostAllocationResourceInvokeResponseOutput
	ToTargetCostAllocationResourceInvokeResponseOutputWithContext(context.Context) TargetCostAllocationResourceInvokeResponseOutput
}

// Target resources for cost allocation.
type TargetCostAllocationResourceInvokeResponseArgs struct {
	// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
	Name pulumi.StringInput `pulumi:"name"`
	// Method of cost allocation for the rule
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// Type of resources contained in this cost allocation rule
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Target resources for cost allocation. This list cannot contain more than 25 values.
	Values CostAllocationProportionInvokeResponseArrayInput `pulumi:"values"`
}

func (TargetCostAllocationResourceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetCostAllocationResourceInvokeResponse)(nil)).Elem()
}

func (i TargetCostAllocationResourceInvokeResponseArgs) ToTargetCostAllocationResourceInvokeResponseOutput() TargetCostAllocationResourceInvokeResponseOutput {
	return i.ToTargetCostAllocationResourceInvokeResponseOutputWithContext(context.Background())
}

func (i TargetCostAllocationResourceInvokeResponseArgs) ToTargetCostAllocationResourceInvokeResponseOutputWithContext(ctx context.Context) TargetCostAllocationResourceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetCostAllocationResourceInvokeResponseOutput)
}

// TargetCostAllocationResourceInvokeResponseArrayInput is an input type that accepts TargetCostAllocationResourceInvokeResponseArray and TargetCostAllocationResourceInvokeResponseArrayOutput values.
// You can construct a concrete instance of `TargetCostAllocationResourceInvokeResponseArrayInput` via:
//
//          TargetCostAllocationResourceInvokeResponseArray{ TargetCostAllocationResourceInvokeResponseArgs{...} }
type TargetCostAllocationResourceInvokeResponseArrayInput interface {
	pulumi.Input

	ToTargetCostAllocationResourceInvokeResponseArrayOutput() TargetCostAllocationResourceInvokeResponseArrayOutput
	ToTargetCostAllocationResourceInvokeResponseArrayOutputWithContext(context.Context) TargetCostAllocationResourceInvokeResponseArrayOutput
}

type TargetCostAllocationResourceInvokeResponseArray []TargetCostAllocationResourceInvokeResponseInput

func (TargetCostAllocationResourceInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetCostAllocationResourceInvokeResponse)(nil)).Elem()
}

func (i TargetCostAllocationResourceInvokeResponseArray) ToTargetCostAllocationResourceInvokeResponseArrayOutput() TargetCostAllocationResourceInvokeResponseArrayOutput {
	return i.ToTargetCostAllocationResourceInvokeResponseArrayOutputWithContext(context.Background())
}

func (i TargetCostAllocationResourceInvokeResponseArray) ToTargetCostAllocationResourceInvokeResponseArrayOutputWithContext(ctx context.Context) TargetCostAllocationResourceInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetCostAllocationResourceInvokeResponseArrayOutput)
}

// Target resources for cost allocation.
type TargetCostAllocationResourceInvokeResponseOutput struct{ *pulumi.OutputState }

func (TargetCostAllocationResourceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetCostAllocationResourceInvokeResponse)(nil)).Elem()
}

func (o TargetCostAllocationResourceInvokeResponseOutput) ToTargetCostAllocationResourceInvokeResponseOutput() TargetCostAllocationResourceInvokeResponseOutput {
	return o
}

func (o TargetCostAllocationResourceInvokeResponseOutput) ToTargetCostAllocationResourceInvokeResponseOutputWithContext(ctx context.Context) TargetCostAllocationResourceInvokeResponseOutput {
	return o
}

// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
func (o TargetCostAllocationResourceInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TargetCostAllocationResourceInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Method of cost allocation for the rule
func (o TargetCostAllocationResourceInvokeResponseOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v TargetCostAllocationResourceInvokeResponse) string { return v.PolicyType }).(pulumi.StringOutput)
}

// Type of resources contained in this cost allocation rule
func (o TargetCostAllocationResourceInvokeResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v TargetCostAllocationResourceInvokeResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Target resources for cost allocation. This list cannot contain more than 25 values.
func (o TargetCostAllocationResourceInvokeResponseOutput) Values() CostAllocationProportionInvokeResponseArrayOutput {
	return o.ApplyT(func(v TargetCostAllocationResourceInvokeResponse) []CostAllocationProportionInvokeResponse {
		return v.Values
	}).(CostAllocationProportionInvokeResponseArrayOutput)
}

type TargetCostAllocationResourceInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (TargetCostAllocationResourceInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetCostAllocationResourceInvokeResponse)(nil)).Elem()
}

func (o TargetCostAllocationResourceInvokeResponseArrayOutput) ToTargetCostAllocationResourceInvokeResponseArrayOutput() TargetCostAllocationResourceInvokeResponseArrayOutput {
	return o
}

func (o TargetCostAllocationResourceInvokeResponseArrayOutput) ToTargetCostAllocationResourceInvokeResponseArrayOutputWithContext(ctx context.Context) TargetCostAllocationResourceInvokeResponseArrayOutput {
	return o
}

func (o TargetCostAllocationResourceInvokeResponseArrayOutput) Index(i pulumi.IntInput) TargetCostAllocationResourceInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetCostAllocationResourceInvokeResponse {
		return vs[0].([]TargetCostAllocationResourceInvokeResponse)[vs[1].(int)]
	}).(TargetCostAllocationResourceInvokeResponseOutput)
}

// Target resources for cost allocation.
type TargetCostAllocationResourceResponse struct {
	// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
	Name string `pulumi:"name"`
	// Method of cost allocation for the rule
	PolicyType string `pulumi:"policyType"`
	// Type of resources contained in this cost allocation rule
	ResourceType string `pulumi:"resourceType"`
	// Target resources for cost allocation. This list cannot contain more than 25 values.
	Values []CostAllocationProportionResponse `pulumi:"values"`
}

// TargetCostAllocationResourceResponseInput is an input type that accepts TargetCostAllocationResourceResponseArgs and TargetCostAllocationResourceResponseOutput values.
// You can construct a concrete instance of `TargetCostAllocationResourceResponseInput` via:
//
//          TargetCostAllocationResourceResponseArgs{...}
type TargetCostAllocationResourceResponseInput interface {
	pulumi.Input

	ToTargetCostAllocationResourceResponseOutput() TargetCostAllocationResourceResponseOutput
	ToTargetCostAllocationResourceResponseOutputWithContext(context.Context) TargetCostAllocationResourceResponseOutput
}

// Target resources for cost allocation.
type TargetCostAllocationResourceResponseArgs struct {
	// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
	Name pulumi.StringInput `pulumi:"name"`
	// Method of cost allocation for the rule
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// Type of resources contained in this cost allocation rule
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Target resources for cost allocation. This list cannot contain more than 25 values.
	Values CostAllocationProportionResponseArrayInput `pulumi:"values"`
}

func (TargetCostAllocationResourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetCostAllocationResourceResponse)(nil)).Elem()
}

func (i TargetCostAllocationResourceResponseArgs) ToTargetCostAllocationResourceResponseOutput() TargetCostAllocationResourceResponseOutput {
	return i.ToTargetCostAllocationResourceResponseOutputWithContext(context.Background())
}

func (i TargetCostAllocationResourceResponseArgs) ToTargetCostAllocationResourceResponseOutputWithContext(ctx context.Context) TargetCostAllocationResourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetCostAllocationResourceResponseOutput)
}

// TargetCostAllocationResourceResponseArrayInput is an input type that accepts TargetCostAllocationResourceResponseArray and TargetCostAllocationResourceResponseArrayOutput values.
// You can construct a concrete instance of `TargetCostAllocationResourceResponseArrayInput` via:
//
//          TargetCostAllocationResourceResponseArray{ TargetCostAllocationResourceResponseArgs{...} }
type TargetCostAllocationResourceResponseArrayInput interface {
	pulumi.Input

	ToTargetCostAllocationResourceResponseArrayOutput() TargetCostAllocationResourceResponseArrayOutput
	ToTargetCostAllocationResourceResponseArrayOutputWithContext(context.Context) TargetCostAllocationResourceResponseArrayOutput
}

type TargetCostAllocationResourceResponseArray []TargetCostAllocationResourceResponseInput

func (TargetCostAllocationResourceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetCostAllocationResourceResponse)(nil)).Elem()
}

func (i TargetCostAllocationResourceResponseArray) ToTargetCostAllocationResourceResponseArrayOutput() TargetCostAllocationResourceResponseArrayOutput {
	return i.ToTargetCostAllocationResourceResponseArrayOutputWithContext(context.Background())
}

func (i TargetCostAllocationResourceResponseArray) ToTargetCostAllocationResourceResponseArrayOutputWithContext(ctx context.Context) TargetCostAllocationResourceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetCostAllocationResourceResponseArrayOutput)
}

// Target resources for cost allocation.
type TargetCostAllocationResourceResponseOutput struct{ *pulumi.OutputState }

func (TargetCostAllocationResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetCostAllocationResourceResponse)(nil)).Elem()
}

func (o TargetCostAllocationResourceResponseOutput) ToTargetCostAllocationResourceResponseOutput() TargetCostAllocationResourceResponseOutput {
	return o
}

func (o TargetCostAllocationResourceResponseOutput) ToTargetCostAllocationResourceResponseOutputWithContext(ctx context.Context) TargetCostAllocationResourceResponseOutput {
	return o
}

// If resource type is dimension, this must be either ResourceGroupName or SubscriptionId. If resource type is tag, this must be a valid Azure tag
func (o TargetCostAllocationResourceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TargetCostAllocationResourceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Method of cost allocation for the rule
func (o TargetCostAllocationResourceResponseOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v TargetCostAllocationResourceResponse) string { return v.PolicyType }).(pulumi.StringOutput)
}

// Type of resources contained in this cost allocation rule
func (o TargetCostAllocationResourceResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v TargetCostAllocationResourceResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Target resources for cost allocation. This list cannot contain more than 25 values.
func (o TargetCostAllocationResourceResponseOutput) Values() CostAllocationProportionResponseArrayOutput {
	return o.ApplyT(func(v TargetCostAllocationResourceResponse) []CostAllocationProportionResponse { return v.Values }).(CostAllocationProportionResponseArrayOutput)
}

type TargetCostAllocationResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (TargetCostAllocationResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetCostAllocationResourceResponse)(nil)).Elem()
}

func (o TargetCostAllocationResourceResponseArrayOutput) ToTargetCostAllocationResourceResponseArrayOutput() TargetCostAllocationResourceResponseArrayOutput {
	return o
}

func (o TargetCostAllocationResourceResponseArrayOutput) ToTargetCostAllocationResourceResponseArrayOutputWithContext(ctx context.Context) TargetCostAllocationResourceResponseArrayOutput {
	return o
}

func (o TargetCostAllocationResourceResponseArrayOutput) Index(i pulumi.IntInput) TargetCostAllocationResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetCostAllocationResourceResponse {
		return vs[0].([]TargetCostAllocationResourceResponse)[vs[1].(int)]
	}).(TargetCostAllocationResourceResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(CostAllocationProportionOutput{})
	pulumi.RegisterOutputType(CostAllocationProportionArrayOutput{})
	pulumi.RegisterOutputType(CostAllocationProportionInvokeResponseOutput{})
	pulumi.RegisterOutputType(CostAllocationProportionInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(CostAllocationProportionResponseOutput{})
	pulumi.RegisterOutputType(CostAllocationProportionResponseArrayOutput{})
	pulumi.RegisterOutputType(CostAllocationRuleDetailsOutput{})
	pulumi.RegisterOutputType(CostAllocationRuleDetailsPtrOutput{})
	pulumi.RegisterOutputType(CostAllocationRuleDetailsInvokeResponseOutput{})
	pulumi.RegisterOutputType(CostAllocationRuleDetailsResponseOutput{})
	pulumi.RegisterOutputType(CostAllocationRuleDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(CostAllocationRulePropertiesOutput{})
	pulumi.RegisterOutputType(CostAllocationRulePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CostAllocationRulePropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(CostAllocationRulePropertiesResponseOutput{})
	pulumi.RegisterOutputType(CostAllocationRulePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SourceCostAllocationResourceOutput{})
	pulumi.RegisterOutputType(SourceCostAllocationResourceArrayOutput{})
	pulumi.RegisterOutputType(SourceCostAllocationResourceInvokeResponseOutput{})
	pulumi.RegisterOutputType(SourceCostAllocationResourceInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SourceCostAllocationResourceResponseOutput{})
	pulumi.RegisterOutputType(SourceCostAllocationResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(TargetCostAllocationResourceOutput{})
	pulumi.RegisterOutputType(TargetCostAllocationResourceArrayOutput{})
	pulumi.RegisterOutputType(TargetCostAllocationResourceInvokeResponseOutput{})
	pulumi.RegisterOutputType(TargetCostAllocationResourceInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(TargetCostAllocationResourceResponseOutput{})
	pulumi.RegisterOutputType(TargetCostAllocationResourceResponseArrayOutput{})
}
