// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// EngagementFabric channel description
type ChannelTypeDescriptionResponse struct {
	// Text description for the channel
	ChannelDescription *string `pulumi:"channelDescription"`
	// All the available functions for the channel
	ChannelFunctions []string `pulumi:"channelFunctions"`
	// Channel type
	ChannelType *string `pulumi:"channelType"`
}

// ChannelTypeDescriptionResponseInput is an input type that accepts ChannelTypeDescriptionResponseArgs and ChannelTypeDescriptionResponseOutput values.
// You can construct a concrete instance of `ChannelTypeDescriptionResponseInput` via:
//
//          ChannelTypeDescriptionResponseArgs{...}
type ChannelTypeDescriptionResponseInput interface {
	pulumi.Input

	ToChannelTypeDescriptionResponseOutput() ChannelTypeDescriptionResponseOutput
	ToChannelTypeDescriptionResponseOutputWithContext(context.Context) ChannelTypeDescriptionResponseOutput
}

// EngagementFabric channel description
type ChannelTypeDescriptionResponseArgs struct {
	// Text description for the channel
	ChannelDescription pulumi.StringPtrInput `pulumi:"channelDescription"`
	// All the available functions for the channel
	ChannelFunctions pulumi.StringArrayInput `pulumi:"channelFunctions"`
	// Channel type
	ChannelType pulumi.StringPtrInput `pulumi:"channelType"`
}

func (ChannelTypeDescriptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTypeDescriptionResponse)(nil)).Elem()
}

func (i ChannelTypeDescriptionResponseArgs) ToChannelTypeDescriptionResponseOutput() ChannelTypeDescriptionResponseOutput {
	return i.ToChannelTypeDescriptionResponseOutputWithContext(context.Background())
}

func (i ChannelTypeDescriptionResponseArgs) ToChannelTypeDescriptionResponseOutputWithContext(ctx context.Context) ChannelTypeDescriptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTypeDescriptionResponseOutput)
}

// ChannelTypeDescriptionResponseArrayInput is an input type that accepts ChannelTypeDescriptionResponseArray and ChannelTypeDescriptionResponseArrayOutput values.
// You can construct a concrete instance of `ChannelTypeDescriptionResponseArrayInput` via:
//
//          ChannelTypeDescriptionResponseArray{ ChannelTypeDescriptionResponseArgs{...} }
type ChannelTypeDescriptionResponseArrayInput interface {
	pulumi.Input

	ToChannelTypeDescriptionResponseArrayOutput() ChannelTypeDescriptionResponseArrayOutput
	ToChannelTypeDescriptionResponseArrayOutputWithContext(context.Context) ChannelTypeDescriptionResponseArrayOutput
}

type ChannelTypeDescriptionResponseArray []ChannelTypeDescriptionResponseInput

func (ChannelTypeDescriptionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelTypeDescriptionResponse)(nil)).Elem()
}

func (i ChannelTypeDescriptionResponseArray) ToChannelTypeDescriptionResponseArrayOutput() ChannelTypeDescriptionResponseArrayOutput {
	return i.ToChannelTypeDescriptionResponseArrayOutputWithContext(context.Background())
}

func (i ChannelTypeDescriptionResponseArray) ToChannelTypeDescriptionResponseArrayOutputWithContext(ctx context.Context) ChannelTypeDescriptionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTypeDescriptionResponseArrayOutput)
}

// EngagementFabric channel description
type ChannelTypeDescriptionResponseOutput struct{ *pulumi.OutputState }

func (ChannelTypeDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTypeDescriptionResponse)(nil)).Elem()
}

func (o ChannelTypeDescriptionResponseOutput) ToChannelTypeDescriptionResponseOutput() ChannelTypeDescriptionResponseOutput {
	return o
}

func (o ChannelTypeDescriptionResponseOutput) ToChannelTypeDescriptionResponseOutputWithContext(ctx context.Context) ChannelTypeDescriptionResponseOutput {
	return o
}

// Text description for the channel
func (o ChannelTypeDescriptionResponseOutput) ChannelDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelTypeDescriptionResponse) *string { return v.ChannelDescription }).(pulumi.StringPtrOutput)
}

// All the available functions for the channel
func (o ChannelTypeDescriptionResponseOutput) ChannelFunctions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ChannelTypeDescriptionResponse) []string { return v.ChannelFunctions }).(pulumi.StringArrayOutput)
}

// Channel type
func (o ChannelTypeDescriptionResponseOutput) ChannelType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelTypeDescriptionResponse) *string { return v.ChannelType }).(pulumi.StringPtrOutput)
}

type ChannelTypeDescriptionResponseArrayOutput struct{ *pulumi.OutputState }

func (ChannelTypeDescriptionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelTypeDescriptionResponse)(nil)).Elem()
}

func (o ChannelTypeDescriptionResponseArrayOutput) ToChannelTypeDescriptionResponseArrayOutput() ChannelTypeDescriptionResponseArrayOutput {
	return o
}

func (o ChannelTypeDescriptionResponseArrayOutput) ToChannelTypeDescriptionResponseArrayOutputWithContext(ctx context.Context) ChannelTypeDescriptionResponseArrayOutput {
	return o
}

func (o ChannelTypeDescriptionResponseArrayOutput) Index(i pulumi.IntInput) ChannelTypeDescriptionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelTypeDescriptionResponse {
		return vs[0].([]ChannelTypeDescriptionResponse)[vs[1].(int)]
	}).(ChannelTypeDescriptionResponseOutput)
}

// The description of the EngagementFabric account key
type KeyDescriptionResponse struct {
	// The name of the key
	Name string `pulumi:"name"`
	// The rank of the key
	Rank string `pulumi:"rank"`
	// The value of the key
	Value string `pulumi:"value"`
}

// KeyDescriptionResponseInput is an input type that accepts KeyDescriptionResponseArgs and KeyDescriptionResponseOutput values.
// You can construct a concrete instance of `KeyDescriptionResponseInput` via:
//
//          KeyDescriptionResponseArgs{...}
type KeyDescriptionResponseInput interface {
	pulumi.Input

	ToKeyDescriptionResponseOutput() KeyDescriptionResponseOutput
	ToKeyDescriptionResponseOutputWithContext(context.Context) KeyDescriptionResponseOutput
}

// The description of the EngagementFabric account key
type KeyDescriptionResponseArgs struct {
	// The name of the key
	Name pulumi.StringInput `pulumi:"name"`
	// The rank of the key
	Rank pulumi.StringInput `pulumi:"rank"`
	// The value of the key
	Value pulumi.StringInput `pulumi:"value"`
}

func (KeyDescriptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyDescriptionResponse)(nil)).Elem()
}

func (i KeyDescriptionResponseArgs) ToKeyDescriptionResponseOutput() KeyDescriptionResponseOutput {
	return i.ToKeyDescriptionResponseOutputWithContext(context.Background())
}

func (i KeyDescriptionResponseArgs) ToKeyDescriptionResponseOutputWithContext(ctx context.Context) KeyDescriptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyDescriptionResponseOutput)
}

// KeyDescriptionResponseArrayInput is an input type that accepts KeyDescriptionResponseArray and KeyDescriptionResponseArrayOutput values.
// You can construct a concrete instance of `KeyDescriptionResponseArrayInput` via:
//
//          KeyDescriptionResponseArray{ KeyDescriptionResponseArgs{...} }
type KeyDescriptionResponseArrayInput interface {
	pulumi.Input

	ToKeyDescriptionResponseArrayOutput() KeyDescriptionResponseArrayOutput
	ToKeyDescriptionResponseArrayOutputWithContext(context.Context) KeyDescriptionResponseArrayOutput
}

type KeyDescriptionResponseArray []KeyDescriptionResponseInput

func (KeyDescriptionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeyDescriptionResponse)(nil)).Elem()
}

func (i KeyDescriptionResponseArray) ToKeyDescriptionResponseArrayOutput() KeyDescriptionResponseArrayOutput {
	return i.ToKeyDescriptionResponseArrayOutputWithContext(context.Background())
}

func (i KeyDescriptionResponseArray) ToKeyDescriptionResponseArrayOutputWithContext(ctx context.Context) KeyDescriptionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyDescriptionResponseArrayOutput)
}

// The description of the EngagementFabric account key
type KeyDescriptionResponseOutput struct{ *pulumi.OutputState }

func (KeyDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyDescriptionResponse)(nil)).Elem()
}

func (o KeyDescriptionResponseOutput) ToKeyDescriptionResponseOutput() KeyDescriptionResponseOutput {
	return o
}

func (o KeyDescriptionResponseOutput) ToKeyDescriptionResponseOutputWithContext(ctx context.Context) KeyDescriptionResponseOutput {
	return o
}

// The name of the key
func (o KeyDescriptionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KeyDescriptionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The rank of the key
func (o KeyDescriptionResponseOutput) Rank() pulumi.StringOutput {
	return o.ApplyT(func(v KeyDescriptionResponse) string { return v.Rank }).(pulumi.StringOutput)
}

// The value of the key
func (o KeyDescriptionResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v KeyDescriptionResponse) string { return v.Value }).(pulumi.StringOutput)
}

type KeyDescriptionResponseArrayOutput struct{ *pulumi.OutputState }

func (KeyDescriptionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeyDescriptionResponse)(nil)).Elem()
}

func (o KeyDescriptionResponseArrayOutput) ToKeyDescriptionResponseArrayOutput() KeyDescriptionResponseArrayOutput {
	return o
}

func (o KeyDescriptionResponseArrayOutput) ToKeyDescriptionResponseArrayOutputWithContext(ctx context.Context) KeyDescriptionResponseArrayOutput {
	return o
}

func (o KeyDescriptionResponseArrayOutput) Index(i pulumi.IntInput) KeyDescriptionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeyDescriptionResponse {
		return vs[0].([]KeyDescriptionResponse)[vs[1].(int)]
	}).(KeyDescriptionResponseOutput)
}

// The EngagementFabric SKU
type SKU struct {
	// The name of the SKU
	Name string `pulumi:"name"`
	// The price tier of the SKU
	Tier *string `pulumi:"tier"`
}

// SKUInput is an input type that accepts SKUArgs and SKUOutput values.
// You can construct a concrete instance of `SKUInput` via:
//
//          SKUArgs{...}
type SKUInput interface {
	pulumi.Input

	ToSKUOutput() SKUOutput
	ToSKUOutputWithContext(context.Context) SKUOutput
}

// The EngagementFabric SKU
type SKUArgs struct {
	// The name of the SKU
	Name pulumi.StringInput `pulumi:"name"`
	// The price tier of the SKU
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SKUArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SKU)(nil)).Elem()
}

func (i SKUArgs) ToSKUOutput() SKUOutput {
	return i.ToSKUOutputWithContext(context.Background())
}

func (i SKUArgs) ToSKUOutputWithContext(ctx context.Context) SKUOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUOutput)
}

func (i SKUArgs) ToSKUPtrOutput() SKUPtrOutput {
	return i.ToSKUPtrOutputWithContext(context.Background())
}

func (i SKUArgs) ToSKUPtrOutputWithContext(ctx context.Context) SKUPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUOutput).ToSKUPtrOutputWithContext(ctx)
}

// SKUPtrInput is an input type that accepts SKUArgs, SKUPtr and SKUPtrOutput values.
// You can construct a concrete instance of `SKUPtrInput` via:
//
//          SKUArgs{...}
//
//  or:
//
//          nil
type SKUPtrInput interface {
	pulumi.Input

	ToSKUPtrOutput() SKUPtrOutput
	ToSKUPtrOutputWithContext(context.Context) SKUPtrOutput
}

type skuPtrType SKUArgs

func SKUPtr(v *SKUArgs) SKUPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SKU)(nil)).Elem()
}

func (i *skuPtrType) ToSKUPtrOutput() SKUPtrOutput {
	return i.ToSKUPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSKUPtrOutputWithContext(ctx context.Context) SKUPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUPtrOutput)
}

// The EngagementFabric SKU
type SKUOutput struct{ *pulumi.OutputState }

func (SKUOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SKU)(nil)).Elem()
}

func (o SKUOutput) ToSKUOutput() SKUOutput {
	return o
}

func (o SKUOutput) ToSKUOutputWithContext(ctx context.Context) SKUOutput {
	return o
}

func (o SKUOutput) ToSKUPtrOutput() SKUPtrOutput {
	return o.ToSKUPtrOutputWithContext(context.Background())
}

func (o SKUOutput) ToSKUPtrOutputWithContext(ctx context.Context) SKUPtrOutput {
	return o.ApplyT(func(v SKU) *SKU {
		return &v
	}).(SKUPtrOutput)
}

// The name of the SKU
func (o SKUOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SKU) string { return v.Name }).(pulumi.StringOutput)
}

// The price tier of the SKU
func (o SKUOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SKU) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SKUPtrOutput struct{ *pulumi.OutputState }

func (SKUPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SKU)(nil)).Elem()
}

func (o SKUPtrOutput) ToSKUPtrOutput() SKUPtrOutput {
	return o
}

func (o SKUPtrOutput) ToSKUPtrOutputWithContext(ctx context.Context) SKUPtrOutput {
	return o
}

func (o SKUPtrOutput) Elem() SKUOutput {
	return o.ApplyT(func(v *SKU) SKU { return *v }).(SKUOutput)
}

// The name of the SKU
func (o SKUPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SKU) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The price tier of the SKU
func (o SKUPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SKU) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// The EngagementFabric SKU
type SKUResponse struct {
	// The name of the SKU
	Name string `pulumi:"name"`
	// The price tier of the SKU
	Tier *string `pulumi:"tier"`
}

// SKUResponseInput is an input type that accepts SKUResponseArgs and SKUResponseOutput values.
// You can construct a concrete instance of `SKUResponseInput` via:
//
//          SKUResponseArgs{...}
type SKUResponseInput interface {
	pulumi.Input

	ToSKUResponseOutput() SKUResponseOutput
	ToSKUResponseOutputWithContext(context.Context) SKUResponseOutput
}

// The EngagementFabric SKU
type SKUResponseArgs struct {
	// The name of the SKU
	Name pulumi.StringInput `pulumi:"name"`
	// The price tier of the SKU
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SKUResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SKUResponse)(nil)).Elem()
}

func (i SKUResponseArgs) ToSKUResponseOutput() SKUResponseOutput {
	return i.ToSKUResponseOutputWithContext(context.Background())
}

func (i SKUResponseArgs) ToSKUResponseOutputWithContext(ctx context.Context) SKUResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUResponseOutput)
}

func (i SKUResponseArgs) ToSKUResponsePtrOutput() SKUResponsePtrOutput {
	return i.ToSKUResponsePtrOutputWithContext(context.Background())
}

func (i SKUResponseArgs) ToSKUResponsePtrOutputWithContext(ctx context.Context) SKUResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUResponseOutput).ToSKUResponsePtrOutputWithContext(ctx)
}

// SKUResponsePtrInput is an input type that accepts SKUResponseArgs, SKUResponsePtr and SKUResponsePtrOutput values.
// You can construct a concrete instance of `SKUResponsePtrInput` via:
//
//          SKUResponseArgs{...}
//
//  or:
//
//          nil
type SKUResponsePtrInput interface {
	pulumi.Input

	ToSKUResponsePtrOutput() SKUResponsePtrOutput
	ToSKUResponsePtrOutputWithContext(context.Context) SKUResponsePtrOutput
}

type skuresponsePtrType SKUResponseArgs

func SKUResponsePtr(v *SKUResponseArgs) SKUResponsePtrInput {
	return (*skuresponsePtrType)(v)
}

func (*skuresponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SKUResponse)(nil)).Elem()
}

func (i *skuresponsePtrType) ToSKUResponsePtrOutput() SKUResponsePtrOutput {
	return i.ToSKUResponsePtrOutputWithContext(context.Background())
}

func (i *skuresponsePtrType) ToSKUResponsePtrOutputWithContext(ctx context.Context) SKUResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUResponsePtrOutput)
}

// The EngagementFabric SKU
type SKUResponseOutput struct{ *pulumi.OutputState }

func (SKUResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SKUResponse)(nil)).Elem()
}

func (o SKUResponseOutput) ToSKUResponseOutput() SKUResponseOutput {
	return o
}

func (o SKUResponseOutput) ToSKUResponseOutputWithContext(ctx context.Context) SKUResponseOutput {
	return o
}

func (o SKUResponseOutput) ToSKUResponsePtrOutput() SKUResponsePtrOutput {
	return o.ToSKUResponsePtrOutputWithContext(context.Background())
}

func (o SKUResponseOutput) ToSKUResponsePtrOutputWithContext(ctx context.Context) SKUResponsePtrOutput {
	return o.ApplyT(func(v SKUResponse) *SKUResponse {
		return &v
	}).(SKUResponsePtrOutput)
}

// The name of the SKU
func (o SKUResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SKUResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The price tier of the SKU
func (o SKUResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SKUResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SKUResponsePtrOutput struct{ *pulumi.OutputState }

func (SKUResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SKUResponse)(nil)).Elem()
}

func (o SKUResponsePtrOutput) ToSKUResponsePtrOutput() SKUResponsePtrOutput {
	return o
}

func (o SKUResponsePtrOutput) ToSKUResponsePtrOutputWithContext(ctx context.Context) SKUResponsePtrOutput {
	return o
}

func (o SKUResponsePtrOutput) Elem() SKUResponseOutput {
	return o.ApplyT(func(v *SKUResponse) SKUResponse { return *v }).(SKUResponseOutput)
}

// The name of the SKU
func (o SKUResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SKUResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The price tier of the SKU
func (o SKUResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SKUResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ChannelTypeDescriptionResponseOutput{})
	pulumi.RegisterOutputType(ChannelTypeDescriptionResponseArrayOutput{})
	pulumi.RegisterOutputType(KeyDescriptionResponseOutput{})
	pulumi.RegisterOutputType(KeyDescriptionResponseArrayOutput{})
	pulumi.RegisterOutputType(SKUOutput{})
	pulumi.RegisterOutputType(SKUPtrOutput{})
	pulumi.RegisterOutputType(SKUResponseOutput{})
	pulumi.RegisterOutputType(SKUResponsePtrOutput{})
}
