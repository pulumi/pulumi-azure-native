// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// EngagementFabric channel description
type ChannelTypeDescriptionInvokeResponse struct {
	// Text description for the channel
	ChannelDescription *string `pulumi:"channelDescription"`
	// All the available functions for the channel
	ChannelFunctions []string `pulumi:"channelFunctions"`
	// Channel type
	ChannelType *string `pulumi:"channelType"`
}

// ChannelTypeDescriptionInvokeResponseInput is an input type that accepts ChannelTypeDescriptionInvokeResponseArgs and ChannelTypeDescriptionInvokeResponseOutput values.
// You can construct a concrete instance of `ChannelTypeDescriptionInvokeResponseInput` via:
//
//          ChannelTypeDescriptionInvokeResponseArgs{...}
type ChannelTypeDescriptionInvokeResponseInput interface {
	pulumi.Input

	ToChannelTypeDescriptionInvokeResponseOutput() ChannelTypeDescriptionInvokeResponseOutput
	ToChannelTypeDescriptionInvokeResponseOutputWithContext(context.Context) ChannelTypeDescriptionInvokeResponseOutput
}

// EngagementFabric channel description
type ChannelTypeDescriptionInvokeResponseArgs struct {
	// Text description for the channel
	ChannelDescription pulumi.StringPtrInput `pulumi:"channelDescription"`
	// All the available functions for the channel
	ChannelFunctions pulumi.StringArrayInput `pulumi:"channelFunctions"`
	// Channel type
	ChannelType pulumi.StringPtrInput `pulumi:"channelType"`
}

func (ChannelTypeDescriptionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTypeDescriptionInvokeResponse)(nil)).Elem()
}

func (i ChannelTypeDescriptionInvokeResponseArgs) ToChannelTypeDescriptionInvokeResponseOutput() ChannelTypeDescriptionInvokeResponseOutput {
	return i.ToChannelTypeDescriptionInvokeResponseOutputWithContext(context.Background())
}

func (i ChannelTypeDescriptionInvokeResponseArgs) ToChannelTypeDescriptionInvokeResponseOutputWithContext(ctx context.Context) ChannelTypeDescriptionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTypeDescriptionInvokeResponseOutput)
}

// ChannelTypeDescriptionInvokeResponseArrayInput is an input type that accepts ChannelTypeDescriptionInvokeResponseArray and ChannelTypeDescriptionInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ChannelTypeDescriptionInvokeResponseArrayInput` via:
//
//          ChannelTypeDescriptionInvokeResponseArray{ ChannelTypeDescriptionInvokeResponseArgs{...} }
type ChannelTypeDescriptionInvokeResponseArrayInput interface {
	pulumi.Input

	ToChannelTypeDescriptionInvokeResponseArrayOutput() ChannelTypeDescriptionInvokeResponseArrayOutput
	ToChannelTypeDescriptionInvokeResponseArrayOutputWithContext(context.Context) ChannelTypeDescriptionInvokeResponseArrayOutput
}

type ChannelTypeDescriptionInvokeResponseArray []ChannelTypeDescriptionInvokeResponseInput

func (ChannelTypeDescriptionInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelTypeDescriptionInvokeResponse)(nil)).Elem()
}

func (i ChannelTypeDescriptionInvokeResponseArray) ToChannelTypeDescriptionInvokeResponseArrayOutput() ChannelTypeDescriptionInvokeResponseArrayOutput {
	return i.ToChannelTypeDescriptionInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ChannelTypeDescriptionInvokeResponseArray) ToChannelTypeDescriptionInvokeResponseArrayOutputWithContext(ctx context.Context) ChannelTypeDescriptionInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTypeDescriptionInvokeResponseArrayOutput)
}

// EngagementFabric channel description
type ChannelTypeDescriptionInvokeResponseOutput struct{ *pulumi.OutputState }

func (ChannelTypeDescriptionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTypeDescriptionInvokeResponse)(nil)).Elem()
}

func (o ChannelTypeDescriptionInvokeResponseOutput) ToChannelTypeDescriptionInvokeResponseOutput() ChannelTypeDescriptionInvokeResponseOutput {
	return o
}

func (o ChannelTypeDescriptionInvokeResponseOutput) ToChannelTypeDescriptionInvokeResponseOutputWithContext(ctx context.Context) ChannelTypeDescriptionInvokeResponseOutput {
	return o
}

// Text description for the channel
func (o ChannelTypeDescriptionInvokeResponseOutput) ChannelDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelTypeDescriptionInvokeResponse) *string { return v.ChannelDescription }).(pulumi.StringPtrOutput)
}

// All the available functions for the channel
func (o ChannelTypeDescriptionInvokeResponseOutput) ChannelFunctions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ChannelTypeDescriptionInvokeResponse) []string { return v.ChannelFunctions }).(pulumi.StringArrayOutput)
}

// Channel type
func (o ChannelTypeDescriptionInvokeResponseOutput) ChannelType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelTypeDescriptionInvokeResponse) *string { return v.ChannelType }).(pulumi.StringPtrOutput)
}

type ChannelTypeDescriptionInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ChannelTypeDescriptionInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelTypeDescriptionInvokeResponse)(nil)).Elem()
}

func (o ChannelTypeDescriptionInvokeResponseArrayOutput) ToChannelTypeDescriptionInvokeResponseArrayOutput() ChannelTypeDescriptionInvokeResponseArrayOutput {
	return o
}

func (o ChannelTypeDescriptionInvokeResponseArrayOutput) ToChannelTypeDescriptionInvokeResponseArrayOutputWithContext(ctx context.Context) ChannelTypeDescriptionInvokeResponseArrayOutput {
	return o
}

func (o ChannelTypeDescriptionInvokeResponseArrayOutput) Index(i pulumi.IntInput) ChannelTypeDescriptionInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelTypeDescriptionInvokeResponse {
		return vs[0].([]ChannelTypeDescriptionInvokeResponse)[vs[1].(int)]
	}).(ChannelTypeDescriptionInvokeResponseOutput)
}

// The description of the EngagementFabric account key
type KeyDescriptionInvokeResponse struct {
	// The name of the key
	Name string `pulumi:"name"`
	// The rank of the key
	Rank string `pulumi:"rank"`
	// The value of the key
	Value string `pulumi:"value"`
}

// KeyDescriptionInvokeResponseInput is an input type that accepts KeyDescriptionInvokeResponseArgs and KeyDescriptionInvokeResponseOutput values.
// You can construct a concrete instance of `KeyDescriptionInvokeResponseInput` via:
//
//          KeyDescriptionInvokeResponseArgs{...}
type KeyDescriptionInvokeResponseInput interface {
	pulumi.Input

	ToKeyDescriptionInvokeResponseOutput() KeyDescriptionInvokeResponseOutput
	ToKeyDescriptionInvokeResponseOutputWithContext(context.Context) KeyDescriptionInvokeResponseOutput
}

// The description of the EngagementFabric account key
type KeyDescriptionInvokeResponseArgs struct {
	// The name of the key
	Name pulumi.StringInput `pulumi:"name"`
	// The rank of the key
	Rank pulumi.StringInput `pulumi:"rank"`
	// The value of the key
	Value pulumi.StringInput `pulumi:"value"`
}

func (KeyDescriptionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyDescriptionInvokeResponse)(nil)).Elem()
}

func (i KeyDescriptionInvokeResponseArgs) ToKeyDescriptionInvokeResponseOutput() KeyDescriptionInvokeResponseOutput {
	return i.ToKeyDescriptionInvokeResponseOutputWithContext(context.Background())
}

func (i KeyDescriptionInvokeResponseArgs) ToKeyDescriptionInvokeResponseOutputWithContext(ctx context.Context) KeyDescriptionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyDescriptionInvokeResponseOutput)
}

// KeyDescriptionInvokeResponseArrayInput is an input type that accepts KeyDescriptionInvokeResponseArray and KeyDescriptionInvokeResponseArrayOutput values.
// You can construct a concrete instance of `KeyDescriptionInvokeResponseArrayInput` via:
//
//          KeyDescriptionInvokeResponseArray{ KeyDescriptionInvokeResponseArgs{...} }
type KeyDescriptionInvokeResponseArrayInput interface {
	pulumi.Input

	ToKeyDescriptionInvokeResponseArrayOutput() KeyDescriptionInvokeResponseArrayOutput
	ToKeyDescriptionInvokeResponseArrayOutputWithContext(context.Context) KeyDescriptionInvokeResponseArrayOutput
}

type KeyDescriptionInvokeResponseArray []KeyDescriptionInvokeResponseInput

func (KeyDescriptionInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeyDescriptionInvokeResponse)(nil)).Elem()
}

func (i KeyDescriptionInvokeResponseArray) ToKeyDescriptionInvokeResponseArrayOutput() KeyDescriptionInvokeResponseArrayOutput {
	return i.ToKeyDescriptionInvokeResponseArrayOutputWithContext(context.Background())
}

func (i KeyDescriptionInvokeResponseArray) ToKeyDescriptionInvokeResponseArrayOutputWithContext(ctx context.Context) KeyDescriptionInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyDescriptionInvokeResponseArrayOutput)
}

// The description of the EngagementFabric account key
type KeyDescriptionInvokeResponseOutput struct{ *pulumi.OutputState }

func (KeyDescriptionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyDescriptionInvokeResponse)(nil)).Elem()
}

func (o KeyDescriptionInvokeResponseOutput) ToKeyDescriptionInvokeResponseOutput() KeyDescriptionInvokeResponseOutput {
	return o
}

func (o KeyDescriptionInvokeResponseOutput) ToKeyDescriptionInvokeResponseOutputWithContext(ctx context.Context) KeyDescriptionInvokeResponseOutput {
	return o
}

// The name of the key
func (o KeyDescriptionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KeyDescriptionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The rank of the key
func (o KeyDescriptionInvokeResponseOutput) Rank() pulumi.StringOutput {
	return o.ApplyT(func(v KeyDescriptionInvokeResponse) string { return v.Rank }).(pulumi.StringOutput)
}

// The value of the key
func (o KeyDescriptionInvokeResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v KeyDescriptionInvokeResponse) string { return v.Value }).(pulumi.StringOutput)
}

type KeyDescriptionInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (KeyDescriptionInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeyDescriptionInvokeResponse)(nil)).Elem()
}

func (o KeyDescriptionInvokeResponseArrayOutput) ToKeyDescriptionInvokeResponseArrayOutput() KeyDescriptionInvokeResponseArrayOutput {
	return o
}

func (o KeyDescriptionInvokeResponseArrayOutput) ToKeyDescriptionInvokeResponseArrayOutputWithContext(ctx context.Context) KeyDescriptionInvokeResponseArrayOutput {
	return o
}

func (o KeyDescriptionInvokeResponseArrayOutput) Index(i pulumi.IntInput) KeyDescriptionInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeyDescriptionInvokeResponse {
		return vs[0].([]KeyDescriptionInvokeResponse)[vs[1].(int)]
	}).(KeyDescriptionInvokeResponseOutput)
}

// The EngagementFabric SKU
type SKU struct {
	// The name of the SKU
	Name string `pulumi:"name"`
	// The price tier of the SKU
	Tier *string `pulumi:"tier"`
}

// SKUInput is an input type that accepts SKUArgs and SKUOutput values.
// You can construct a concrete instance of `SKUInput` via:
//
//          SKUArgs{...}
type SKUInput interface {
	pulumi.Input

	ToSKUOutput() SKUOutput
	ToSKUOutputWithContext(context.Context) SKUOutput
}

// The EngagementFabric SKU
type SKUArgs struct {
	// The name of the SKU
	Name pulumi.StringInput `pulumi:"name"`
	// The price tier of the SKU
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SKUArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SKU)(nil)).Elem()
}

func (i SKUArgs) ToSKUOutput() SKUOutput {
	return i.ToSKUOutputWithContext(context.Background())
}

func (i SKUArgs) ToSKUOutputWithContext(ctx context.Context) SKUOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUOutput)
}

func (i SKUArgs) ToSKUPtrOutput() SKUPtrOutput {
	return i.ToSKUPtrOutputWithContext(context.Background())
}

func (i SKUArgs) ToSKUPtrOutputWithContext(ctx context.Context) SKUPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUOutput).ToSKUPtrOutputWithContext(ctx)
}

// SKUPtrInput is an input type that accepts SKUArgs, SKUPtr and SKUPtrOutput values.
// You can construct a concrete instance of `SKUPtrInput` via:
//
//          SKUArgs{...}
//
//  or:
//
//          nil
type SKUPtrInput interface {
	pulumi.Input

	ToSKUPtrOutput() SKUPtrOutput
	ToSKUPtrOutputWithContext(context.Context) SKUPtrOutput
}

type skuPtrType SKUArgs

func SKUPtr(v *SKUArgs) SKUPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SKU)(nil)).Elem()
}

func (i *skuPtrType) ToSKUPtrOutput() SKUPtrOutput {
	return i.ToSKUPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSKUPtrOutputWithContext(ctx context.Context) SKUPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUPtrOutput)
}

// The EngagementFabric SKU
type SKUOutput struct{ *pulumi.OutputState }

func (SKUOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SKU)(nil)).Elem()
}

func (o SKUOutput) ToSKUOutput() SKUOutput {
	return o
}

func (o SKUOutput) ToSKUOutputWithContext(ctx context.Context) SKUOutput {
	return o
}

func (o SKUOutput) ToSKUPtrOutput() SKUPtrOutput {
	return o.ToSKUPtrOutputWithContext(context.Background())
}

func (o SKUOutput) ToSKUPtrOutputWithContext(ctx context.Context) SKUPtrOutput {
	return o.ApplyT(func(v SKU) *SKU {
		return &v
	}).(SKUPtrOutput)
}

// The name of the SKU
func (o SKUOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SKU) string { return v.Name }).(pulumi.StringOutput)
}

// The price tier of the SKU
func (o SKUOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SKU) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SKUPtrOutput struct{ *pulumi.OutputState }

func (SKUPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SKU)(nil)).Elem()
}

func (o SKUPtrOutput) ToSKUPtrOutput() SKUPtrOutput {
	return o
}

func (o SKUPtrOutput) ToSKUPtrOutputWithContext(ctx context.Context) SKUPtrOutput {
	return o
}

func (o SKUPtrOutput) Elem() SKUOutput {
	return o.ApplyT(func(v *SKU) SKU { return *v }).(SKUOutput)
}

// The name of the SKU
func (o SKUPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SKU) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The price tier of the SKU
func (o SKUPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SKU) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// The EngagementFabric SKU
type SKUInvokeResponse struct {
	// The name of the SKU
	Name string `pulumi:"name"`
	// The price tier of the SKU
	Tier *string `pulumi:"tier"`
}

// SKUInvokeResponseInput is an input type that accepts SKUInvokeResponseArgs and SKUInvokeResponseOutput values.
// You can construct a concrete instance of `SKUInvokeResponseInput` via:
//
//          SKUInvokeResponseArgs{...}
type SKUInvokeResponseInput interface {
	pulumi.Input

	ToSKUInvokeResponseOutput() SKUInvokeResponseOutput
	ToSKUInvokeResponseOutputWithContext(context.Context) SKUInvokeResponseOutput
}

// The EngagementFabric SKU
type SKUInvokeResponseArgs struct {
	// The name of the SKU
	Name pulumi.StringInput `pulumi:"name"`
	// The price tier of the SKU
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SKUInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SKUInvokeResponse)(nil)).Elem()
}

func (i SKUInvokeResponseArgs) ToSKUInvokeResponseOutput() SKUInvokeResponseOutput {
	return i.ToSKUInvokeResponseOutputWithContext(context.Background())
}

func (i SKUInvokeResponseArgs) ToSKUInvokeResponseOutputWithContext(ctx context.Context) SKUInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUInvokeResponseOutput)
}

// The EngagementFabric SKU
type SKUInvokeResponseOutput struct{ *pulumi.OutputState }

func (SKUInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SKUInvokeResponse)(nil)).Elem()
}

func (o SKUInvokeResponseOutput) ToSKUInvokeResponseOutput() SKUInvokeResponseOutput {
	return o
}

func (o SKUInvokeResponseOutput) ToSKUInvokeResponseOutputWithContext(ctx context.Context) SKUInvokeResponseOutput {
	return o
}

// The name of the SKU
func (o SKUInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SKUInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The price tier of the SKU
func (o SKUInvokeResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SKUInvokeResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

// The EngagementFabric SKU
type SKUResponse struct {
	// The name of the SKU
	Name string `pulumi:"name"`
	// The price tier of the SKU
	Tier *string `pulumi:"tier"`
}

// SKUResponseInput is an input type that accepts SKUResponseArgs and SKUResponseOutput values.
// You can construct a concrete instance of `SKUResponseInput` via:
//
//          SKUResponseArgs{...}
type SKUResponseInput interface {
	pulumi.Input

	ToSKUResponseOutput() SKUResponseOutput
	ToSKUResponseOutputWithContext(context.Context) SKUResponseOutput
}

// The EngagementFabric SKU
type SKUResponseArgs struct {
	// The name of the SKU
	Name pulumi.StringInput `pulumi:"name"`
	// The price tier of the SKU
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SKUResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SKUResponse)(nil)).Elem()
}

func (i SKUResponseArgs) ToSKUResponseOutput() SKUResponseOutput {
	return i.ToSKUResponseOutputWithContext(context.Background())
}

func (i SKUResponseArgs) ToSKUResponseOutputWithContext(ctx context.Context) SKUResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUResponseOutput)
}

func (i SKUResponseArgs) ToSKUResponsePtrOutput() SKUResponsePtrOutput {
	return i.ToSKUResponsePtrOutputWithContext(context.Background())
}

func (i SKUResponseArgs) ToSKUResponsePtrOutputWithContext(ctx context.Context) SKUResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUResponseOutput).ToSKUResponsePtrOutputWithContext(ctx)
}

// SKUResponsePtrInput is an input type that accepts SKUResponseArgs, SKUResponsePtr and SKUResponsePtrOutput values.
// You can construct a concrete instance of `SKUResponsePtrInput` via:
//
//          SKUResponseArgs{...}
//
//  or:
//
//          nil
type SKUResponsePtrInput interface {
	pulumi.Input

	ToSKUResponsePtrOutput() SKUResponsePtrOutput
	ToSKUResponsePtrOutputWithContext(context.Context) SKUResponsePtrOutput
}

type skuresponsePtrType SKUResponseArgs

func SKUResponsePtr(v *SKUResponseArgs) SKUResponsePtrInput {
	return (*skuresponsePtrType)(v)
}

func (*skuresponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SKUResponse)(nil)).Elem()
}

func (i *skuresponsePtrType) ToSKUResponsePtrOutput() SKUResponsePtrOutput {
	return i.ToSKUResponsePtrOutputWithContext(context.Background())
}

func (i *skuresponsePtrType) ToSKUResponsePtrOutputWithContext(ctx context.Context) SKUResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUResponsePtrOutput)
}

// The EngagementFabric SKU
type SKUResponseOutput struct{ *pulumi.OutputState }

func (SKUResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SKUResponse)(nil)).Elem()
}

func (o SKUResponseOutput) ToSKUResponseOutput() SKUResponseOutput {
	return o
}

func (o SKUResponseOutput) ToSKUResponseOutputWithContext(ctx context.Context) SKUResponseOutput {
	return o
}

func (o SKUResponseOutput) ToSKUResponsePtrOutput() SKUResponsePtrOutput {
	return o.ToSKUResponsePtrOutputWithContext(context.Background())
}

func (o SKUResponseOutput) ToSKUResponsePtrOutputWithContext(ctx context.Context) SKUResponsePtrOutput {
	return o.ApplyT(func(v SKUResponse) *SKUResponse {
		return &v
	}).(SKUResponsePtrOutput)
}

// The name of the SKU
func (o SKUResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SKUResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The price tier of the SKU
func (o SKUResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SKUResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SKUResponsePtrOutput struct{ *pulumi.OutputState }

func (SKUResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SKUResponse)(nil)).Elem()
}

func (o SKUResponsePtrOutput) ToSKUResponsePtrOutput() SKUResponsePtrOutput {
	return o
}

func (o SKUResponsePtrOutput) ToSKUResponsePtrOutputWithContext(ctx context.Context) SKUResponsePtrOutput {
	return o
}

func (o SKUResponsePtrOutput) Elem() SKUResponseOutput {
	return o.ApplyT(func(v *SKUResponse) SKUResponse { return *v }).(SKUResponseOutput)
}

// The name of the SKU
func (o SKUResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SKUResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The price tier of the SKU
func (o SKUResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SKUResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ChannelTypeDescriptionInvokeResponseOutput{})
	pulumi.RegisterOutputType(ChannelTypeDescriptionInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(KeyDescriptionInvokeResponseOutput{})
	pulumi.RegisterOutputType(KeyDescriptionInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SKUOutput{})
	pulumi.RegisterOutputType(SKUPtrOutput{})
	pulumi.RegisterOutputType(SKUInvokeResponseOutput{})
	pulumi.RegisterOutputType(SKUResponseOutput{})
	pulumi.RegisterOutputType(SKUResponsePtrOutput{})
}
