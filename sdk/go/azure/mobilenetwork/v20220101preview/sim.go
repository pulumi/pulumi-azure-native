// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20220101preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Sim resource.
type Sim struct {
	pulumi.CustomResourceState

	// The configuration state of the sim resource - complete or incomplete.
	ConfigurationState pulumi.StringOutput `pulumi:"configurationState"`
	// The timestamp of resource creation (UTC).
	CreatedAt pulumi.StringPtrOutput `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy pulumi.StringPtrOutput `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType pulumi.StringPtrOutput `pulumi:"createdByType"`
	// An optional free-form text field that can be used to record the device type this sim is associated with, for example 'Video camera'. The Azure portal allows Sims to be grouped and filtered based on this value.
	DeviceType pulumi.StringPtrOutput `pulumi:"deviceType"`
	// The Integrated Circuit Card ID (ICC Id) for the sim.
	IntegratedCircuitCardIdentifier pulumi.StringPtrOutput `pulumi:"integratedCircuitCardIdentifier"`
	// The International Mobile Subscriber Identity (IMSI) for the sim.
	InternationalMobileSubscriberIdentity pulumi.StringOutput `pulumi:"internationalMobileSubscriberIdentity"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt pulumi.StringPtrOutput `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy pulumi.StringPtrOutput `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType pulumi.StringPtrOutput `pulumi:"lastModifiedByType"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// Mobile network that this sim belongs to
	MobileNetwork MobileNetworkResourceIdResponsePtrOutput `pulumi:"mobileNetwork"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The provisioning state of the sim resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The simPolicy used by this sim.
	SimPolicy SimPolicyResourceIdResponsePtrOutput `pulumi:"simPolicy"`
	// A list of static IP addresses assigned to this sim. Each address is assigned at a defined network scope, made up of {attached data network, slice}.
	StaticIpConfiguration SimStaticIpPropertiesResponseArrayOutput `pulumi:"staticIpConfiguration"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSim registers a new resource with the given unique name, arguments, and options.
func NewSim(ctx *pulumi.Context,
	name string, args *SimArgs, opts ...pulumi.ResourceOption) (*Sim, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InternationalMobileSubscriberIdentity == nil {
		return nil, errors.New("invalid value for required argument 'InternationalMobileSubscriberIdentity'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:mobilenetwork:Sim"),
		},
		{
			Type: pulumi.String("azure-native:mobilenetwork/v20220301preview:Sim"),
		},
	})
	opts = append(opts, aliases)
	var resource Sim
	err := ctx.RegisterResource("azure-native:mobilenetwork/v20220101preview:Sim", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSim gets an existing Sim resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSim(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SimState, opts ...pulumi.ResourceOption) (*Sim, error) {
	var resource Sim
	err := ctx.ReadResource("azure-native:mobilenetwork/v20220101preview:Sim", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Sim resources.
type simState struct {
}

type SimState struct {
}

func (SimState) ElementType() reflect.Type {
	return reflect.TypeOf((*simState)(nil)).Elem()
}

type simArgs struct {
	// The ki value for the sim.
	AuthenticationKey *string `pulumi:"authenticationKey"`
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// An optional free-form text field that can be used to record the device type this sim is associated with, for example 'Video camera'. The Azure portal allows Sims to be grouped and filtered based on this value.
	DeviceType *string `pulumi:"deviceType"`
	// The Integrated Circuit Card ID (ICC Id) for the sim.
	IntegratedCircuitCardIdentifier *string `pulumi:"integratedCircuitCardIdentifier"`
	// The International Mobile Subscriber Identity (IMSI) for the sim.
	InternationalMobileSubscriberIdentity string `pulumi:"internationalMobileSubscriberIdentity"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Mobile network that this sim belongs to
	MobileNetwork *MobileNetworkResourceId `pulumi:"mobileNetwork"`
	// The Opc value for the sim.
	OperatorKeyCode *string `pulumi:"operatorKeyCode"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the SIM.
	SimName *string `pulumi:"simName"`
	// The simPolicy used by this sim.
	SimPolicy *SimPolicyResourceId `pulumi:"simPolicy"`
	// A list of static IP addresses assigned to this sim. Each address is assigned at a defined network scope, made up of {attached data network, slice}.
	StaticIpConfiguration []SimStaticIpProperties `pulumi:"staticIpConfiguration"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Sim resource.
type SimArgs struct {
	// The ki value for the sim.
	AuthenticationKey pulumi.StringPtrInput
	// The timestamp of resource creation (UTC).
	CreatedAt pulumi.StringPtrInput
	// The identity that created the resource.
	CreatedBy pulumi.StringPtrInput
	// The type of identity that created the resource.
	CreatedByType pulumi.StringPtrInput
	// An optional free-form text field that can be used to record the device type this sim is associated with, for example 'Video camera'. The Azure portal allows Sims to be grouped and filtered based on this value.
	DeviceType pulumi.StringPtrInput
	// The Integrated Circuit Card ID (ICC Id) for the sim.
	IntegratedCircuitCardIdentifier pulumi.StringPtrInput
	// The International Mobile Subscriber Identity (IMSI) for the sim.
	InternationalMobileSubscriberIdentity pulumi.StringInput
	// The timestamp of resource last modification (UTC)
	LastModifiedAt pulumi.StringPtrInput
	// The identity that last modified the resource.
	LastModifiedBy pulumi.StringPtrInput
	// The type of identity that last modified the resource.
	LastModifiedByType pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Mobile network that this sim belongs to
	MobileNetwork MobileNetworkResourceIdPtrInput
	// The Opc value for the sim.
	OperatorKeyCode pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the SIM.
	SimName pulumi.StringPtrInput
	// The simPolicy used by this sim.
	SimPolicy SimPolicyResourceIdPtrInput
	// A list of static IP addresses assigned to this sim. Each address is assigned at a defined network scope, made up of {attached data network, slice}.
	StaticIpConfiguration SimStaticIpPropertiesArrayInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (SimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*simArgs)(nil)).Elem()
}

type SimInput interface {
	pulumi.Input

	ToSimOutput() SimOutput
	ToSimOutputWithContext(ctx context.Context) SimOutput
}

func (*Sim) ElementType() reflect.Type {
	return reflect.TypeOf((**Sim)(nil)).Elem()
}

func (i *Sim) ToSimOutput() SimOutput {
	return i.ToSimOutputWithContext(context.Background())
}

func (i *Sim) ToSimOutputWithContext(ctx context.Context) SimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimOutput)
}

type SimOutput struct{ *pulumi.OutputState }

func (SimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sim)(nil)).Elem()
}

func (o SimOutput) ToSimOutput() SimOutput {
	return o
}

func (o SimOutput) ToSimOutputWithContext(ctx context.Context) SimOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(SimOutput{})
}
