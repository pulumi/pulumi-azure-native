// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220101preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Packet core data plane resource.
type PacketCoreDataPlane struct {
	pulumi.CustomResourceState

	// The timestamp of resource creation (UTC).
	CreatedAt pulumi.StringPtrOutput `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy pulumi.StringPtrOutput `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType pulumi.StringPtrOutput `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt pulumi.StringPtrOutput `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy pulumi.StringPtrOutput `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType pulumi.StringPtrOutput `pulumi:"lastModifiedByType"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The provisioning state of the packet core data plane resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// The user plane interface on the access network. In 5G networks this is called as N3 interface whereas in 4G networks this is called the S1-U interface.
	UserPlaneAccessInterface InterfacePropertiesResponseOutput `pulumi:"userPlaneAccessInterface"`
}

// NewPacketCoreDataPlane registers a new resource with the given unique name, arguments, and options.
func NewPacketCoreDataPlane(ctx *pulumi.Context,
	name string, args *PacketCoreDataPlaneArgs, opts ...pulumi.ResourceOption) (*PacketCoreDataPlane, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PacketCoreControlPlaneName == nil {
		return nil, errors.New("invalid value for required argument 'PacketCoreControlPlaneName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.UserPlaneAccessInterface == nil {
		return nil, errors.New("invalid value for required argument 'UserPlaneAccessInterface'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:mobilenetwork:PacketCoreDataPlane"),
		},
		{
			Type: pulumi.String("azure-native:mobilenetwork/v20220301preview:PacketCoreDataPlane"),
		},
	})
	opts = append(opts, aliases)
	var resource PacketCoreDataPlane
	err := ctx.RegisterResource("azure-native:mobilenetwork/v20220101preview:PacketCoreDataPlane", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPacketCoreDataPlane gets an existing PacketCoreDataPlane resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPacketCoreDataPlane(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PacketCoreDataPlaneState, opts ...pulumi.ResourceOption) (*PacketCoreDataPlane, error) {
	var resource PacketCoreDataPlane
	err := ctx.ReadResource("azure-native:mobilenetwork/v20220101preview:PacketCoreDataPlane", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PacketCoreDataPlane resources.
type packetCoreDataPlaneState struct {
}

type PacketCoreDataPlaneState struct {
}

func (PacketCoreDataPlaneState) ElementType() reflect.Type {
	return reflect.TypeOf((*packetCoreDataPlaneState)(nil)).Elem()
}

type packetCoreDataPlaneArgs struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the packet core control plane.
	PacketCoreControlPlaneName string `pulumi:"packetCoreControlPlaneName"`
	// The name of the packet core data plane.
	PacketCoreDataPlaneName *string `pulumi:"packetCoreDataPlaneName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The user plane interface on the access network. In 5G networks this is called as N3 interface whereas in 4G networks this is called the S1-U interface.
	UserPlaneAccessInterface InterfaceProperties `pulumi:"userPlaneAccessInterface"`
}

// The set of arguments for constructing a PacketCoreDataPlane resource.
type PacketCoreDataPlaneArgs struct {
	// The timestamp of resource creation (UTC).
	CreatedAt pulumi.StringPtrInput
	// The identity that created the resource.
	CreatedBy pulumi.StringPtrInput
	// The type of identity that created the resource.
	CreatedByType pulumi.StringPtrInput
	// The timestamp of resource last modification (UTC)
	LastModifiedAt pulumi.StringPtrInput
	// The identity that last modified the resource.
	LastModifiedBy pulumi.StringPtrInput
	// The type of identity that last modified the resource.
	LastModifiedByType pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the packet core control plane.
	PacketCoreControlPlaneName pulumi.StringInput
	// The name of the packet core data plane.
	PacketCoreDataPlaneName pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The user plane interface on the access network. In 5G networks this is called as N3 interface whereas in 4G networks this is called the S1-U interface.
	UserPlaneAccessInterface InterfacePropertiesInput
}

func (PacketCoreDataPlaneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*packetCoreDataPlaneArgs)(nil)).Elem()
}

type PacketCoreDataPlaneInput interface {
	pulumi.Input

	ToPacketCoreDataPlaneOutput() PacketCoreDataPlaneOutput
	ToPacketCoreDataPlaneOutputWithContext(ctx context.Context) PacketCoreDataPlaneOutput
}

func (*PacketCoreDataPlane) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCoreDataPlane)(nil)).Elem()
}

func (i *PacketCoreDataPlane) ToPacketCoreDataPlaneOutput() PacketCoreDataPlaneOutput {
	return i.ToPacketCoreDataPlaneOutputWithContext(context.Background())
}

func (i *PacketCoreDataPlane) ToPacketCoreDataPlaneOutputWithContext(ctx context.Context) PacketCoreDataPlaneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCoreDataPlaneOutput)
}

type PacketCoreDataPlaneOutput struct{ *pulumi.OutputState }

func (PacketCoreDataPlaneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCoreDataPlane)(nil)).Elem()
}

func (o PacketCoreDataPlaneOutput) ToPacketCoreDataPlaneOutput() PacketCoreDataPlaneOutput {
	return o
}

func (o PacketCoreDataPlaneOutput) ToPacketCoreDataPlaneOutputWithContext(ctx context.Context) PacketCoreDataPlaneOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(PacketCoreDataPlaneOutput{})
}
