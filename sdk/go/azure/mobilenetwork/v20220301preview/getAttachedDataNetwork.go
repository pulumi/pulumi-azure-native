// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Attached data network resource.
func LookupAttachedDataNetwork(ctx *pulumi.Context, args *LookupAttachedDataNetworkArgs, opts ...pulumi.InvokeOption) (*LookupAttachedDataNetworkResult, error) {
	var rv LookupAttachedDataNetworkResult
	err := ctx.Invoke("azure-native:mobilenetwork/v20220301preview:getAttachedDataNetwork", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupAttachedDataNetworkArgs struct {
	// The name of the attached data network.
	AttachedDataNetworkName string `pulumi:"attachedDataNetworkName"`
	// The name of the packet core control plane.
	PacketCoreControlPlaneName string `pulumi:"packetCoreControlPlaneName"`
	// The name of the packet core data plane.
	PacketCoreDataPlaneName string `pulumi:"packetCoreDataPlaneName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Attached data network resource.
type LookupAttachedDataNetworkResult struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The Network Address and Port Translation configuration.
	// If not specified the attached data network uses a default NAPT configuration with NAPT enabled.
	NaptConfiguration *NaptConfigurationResponse `pulumi:"naptConfiguration"`
	// The provisioning state of the attached data network resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// The user equipment address pool prefixes for the attached data network that are dynamically assigned by the core to UEs when they set up a PDU session.
	// At least one of userEquipmentAddressPoolPrefix and userEquipmentStaticAddressPoolPrefix must be defined. If both are defined then they must be the same size.
	UserEquipmentAddressPoolPrefix []string `pulumi:"userEquipmentAddressPoolPrefix"`
	// The user equipment address pool prefixes for the attached data network that are statically assigned by the core to UEs when they set up a PDU session.
	// The mapping of static IP to sim is configured in staticIpConfiguration on the sim resource.
	// At least one of userEquipmentAddressPoolPrefix and userEquipmentStaticAddressPoolPrefix must be defined. If both are defined then they must be the same size.
	UserEquipmentStaticAddressPoolPrefix []string `pulumi:"userEquipmentStaticAddressPoolPrefix"`
	// The user plane interface on the data network. In 5G networks this is called as N6 interface whereas in 4G networks this is called as SGi interface.
	UserPlaneDataInterface InterfacePropertiesResponse `pulumi:"userPlaneDataInterface"`
}

// Defaults sets the appropriate defaults for LookupAttachedDataNetworkResult
func (val *LookupAttachedDataNetworkResult) Defaults() *LookupAttachedDataNetworkResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.NaptConfiguration = tmp.NaptConfiguration.Defaults()

	return &tmp
}

func LookupAttachedDataNetworkOutput(ctx *pulumi.Context, args LookupAttachedDataNetworkOutputArgs, opts ...pulumi.InvokeOption) LookupAttachedDataNetworkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAttachedDataNetworkResult, error) {
			args := v.(LookupAttachedDataNetworkArgs)
			r, err := LookupAttachedDataNetwork(ctx, &args, opts...)
			var s LookupAttachedDataNetworkResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAttachedDataNetworkResultOutput)
}

type LookupAttachedDataNetworkOutputArgs struct {
	// The name of the attached data network.
	AttachedDataNetworkName pulumi.StringInput `pulumi:"attachedDataNetworkName"`
	// The name of the packet core control plane.
	PacketCoreControlPlaneName pulumi.StringInput `pulumi:"packetCoreControlPlaneName"`
	// The name of the packet core data plane.
	PacketCoreDataPlaneName pulumi.StringInput `pulumi:"packetCoreDataPlaneName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAttachedDataNetworkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAttachedDataNetworkArgs)(nil)).Elem()
}

// Attached data network resource.
type LookupAttachedDataNetworkResultOutput struct{ *pulumi.OutputState }

func (LookupAttachedDataNetworkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAttachedDataNetworkResult)(nil)).Elem()
}

func (o LookupAttachedDataNetworkResultOutput) ToLookupAttachedDataNetworkResultOutput() LookupAttachedDataNetworkResultOutput {
	return o
}

func (o LookupAttachedDataNetworkResultOutput) ToLookupAttachedDataNetworkResultOutputWithContext(ctx context.Context) LookupAttachedDataNetworkResultOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o LookupAttachedDataNetworkResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAttachedDataNetworkResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o LookupAttachedDataNetworkResultOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAttachedDataNetworkResult) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o LookupAttachedDataNetworkResultOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAttachedDataNetworkResult) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupAttachedDataNetworkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAttachedDataNetworkResult) string { return v.Id }).(pulumi.StringOutput)
}

// The timestamp of resource last modification (UTC)
func (o LookupAttachedDataNetworkResultOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAttachedDataNetworkResult) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o LookupAttachedDataNetworkResultOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAttachedDataNetworkResult) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o LookupAttachedDataNetworkResultOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAttachedDataNetworkResult) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// The geo-location where the resource lives
func (o LookupAttachedDataNetworkResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAttachedDataNetworkResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupAttachedDataNetworkResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAttachedDataNetworkResult) string { return v.Name }).(pulumi.StringOutput)
}

// The Network Address and Port Translation configuration.
// If not specified the attached data network uses a default NAPT configuration with NAPT enabled.
func (o LookupAttachedDataNetworkResultOutput) NaptConfiguration() NaptConfigurationResponsePtrOutput {
	return o.ApplyT(func(v LookupAttachedDataNetworkResult) *NaptConfigurationResponse { return v.NaptConfiguration }).(NaptConfigurationResponsePtrOutput)
}

// The provisioning state of the attached data network resource.
func (o LookupAttachedDataNetworkResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAttachedDataNetworkResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupAttachedDataNetworkResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupAttachedDataNetworkResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupAttachedDataNetworkResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAttachedDataNetworkResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupAttachedDataNetworkResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAttachedDataNetworkResult) string { return v.Type }).(pulumi.StringOutput)
}

// The user equipment address pool prefixes for the attached data network that are dynamically assigned by the core to UEs when they set up a PDU session.
// At least one of userEquipmentAddressPoolPrefix and userEquipmentStaticAddressPoolPrefix must be defined. If both are defined then they must be the same size.
func (o LookupAttachedDataNetworkResultOutput) UserEquipmentAddressPoolPrefix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAttachedDataNetworkResult) []string { return v.UserEquipmentAddressPoolPrefix }).(pulumi.StringArrayOutput)
}

// The user equipment address pool prefixes for the attached data network that are statically assigned by the core to UEs when they set up a PDU session.
// The mapping of static IP to sim is configured in staticIpConfiguration on the sim resource.
// At least one of userEquipmentAddressPoolPrefix and userEquipmentStaticAddressPoolPrefix must be defined. If both are defined then they must be the same size.
func (o LookupAttachedDataNetworkResultOutput) UserEquipmentStaticAddressPoolPrefix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAttachedDataNetworkResult) []string { return v.UserEquipmentStaticAddressPoolPrefix }).(pulumi.StringArrayOutput)
}

// The user plane interface on the data network. In 5G networks this is called as N6 interface whereas in 4G networks this is called as SGi interface.
func (o LookupAttachedDataNetworkResultOutput) UserPlaneDataInterface() InterfacePropertiesResponseOutput {
	return o.ApplyT(func(v LookupAttachedDataNetworkResult) InterfacePropertiesResponse { return v.UserPlaneDataInterface }).(InterfacePropertiesResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAttachedDataNetworkResultOutput{})
}
