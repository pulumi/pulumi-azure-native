// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200901

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A share subscription data transfer object.
type ShareSubscription struct {
	pulumi.CustomResourceState

	// Time at which the share subscription was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The expiration date of the share subscription.
	ExpirationDate pulumi.StringPtrOutput `pulumi:"expirationDate"`
	// The invitation id.
	InvitationId pulumi.StringOutput `pulumi:"invitationId"`
	// Name of the azure resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Email of the provider who created the resource
	ProviderEmail pulumi.StringOutput `pulumi:"providerEmail"`
	// Name of the provider who created the resource
	ProviderName pulumi.StringOutput `pulumi:"providerName"`
	// Tenant name of the provider who created the resource
	ProviderTenantName pulumi.StringOutput `pulumi:"providerTenantName"`
	// Provisioning state of the share subscription
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Description of share
	ShareDescription pulumi.StringOutput `pulumi:"shareDescription"`
	// Kind of share
	ShareKind pulumi.StringOutput `pulumi:"shareKind"`
	// Name of the share
	ShareName pulumi.StringOutput `pulumi:"shareName"`
	// Gets the current status of share subscription.
	ShareSubscriptionStatus pulumi.StringOutput `pulumi:"shareSubscriptionStatus"`
	// Terms of a share
	ShareTerms pulumi.StringOutput `pulumi:"shareTerms"`
	// Source share location.
	SourceShareLocation pulumi.StringOutput `pulumi:"sourceShareLocation"`
	// System Data of the Azure resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Type of the azure resource
	Type pulumi.StringOutput `pulumi:"type"`
	// Email of the user who created the resource
	UserEmail pulumi.StringOutput `pulumi:"userEmail"`
	// Name of the user who created the resource
	UserName pulumi.StringOutput `pulumi:"userName"`
}

// NewShareSubscription registers a new resource with the given unique name, arguments, and options.
func NewShareSubscription(ctx *pulumi.Context,
	name string, args *ShareSubscriptionArgs, opts ...pulumi.ResourceOption) (*ShareSubscription, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.InvitationId == nil {
		return nil, errors.New("invalid value for required argument 'InvitationId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SourceShareLocation == nil {
		return nil, errors.New("invalid value for required argument 'SourceShareLocation'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:datashare:ShareSubscription"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20181101preview:ShareSubscription"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20191101:ShareSubscription"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20201001preview:ShareSubscription"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20210801:ShareSubscription"),
		},
	})
	opts = append(opts, aliases)
	var resource ShareSubscription
	err := ctx.RegisterResource("azure-native:datashare/v20200901:ShareSubscription", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetShareSubscription gets an existing ShareSubscription resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetShareSubscription(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ShareSubscriptionState, opts ...pulumi.ResourceOption) (*ShareSubscription, error) {
	var resource ShareSubscription
	err := ctx.ReadResource("azure-native:datashare/v20200901:ShareSubscription", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ShareSubscription resources.
type shareSubscriptionState struct {
}

type ShareSubscriptionState struct {
}

func (ShareSubscriptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*shareSubscriptionState)(nil)).Elem()
}

type shareSubscriptionArgs struct {
	// The name of the share account.
	AccountName string `pulumi:"accountName"`
	// The expiration date of the share subscription.
	ExpirationDate *string `pulumi:"expirationDate"`
	// The invitation id.
	InvitationId string `pulumi:"invitationId"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the shareSubscription.
	ShareSubscriptionName *string `pulumi:"shareSubscriptionName"`
	// Source share location.
	SourceShareLocation string `pulumi:"sourceShareLocation"`
}

// The set of arguments for constructing a ShareSubscription resource.
type ShareSubscriptionArgs struct {
	// The name of the share account.
	AccountName pulumi.StringInput
	// The expiration date of the share subscription.
	ExpirationDate pulumi.StringPtrInput
	// The invitation id.
	InvitationId pulumi.StringInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
	// The name of the shareSubscription.
	ShareSubscriptionName pulumi.StringPtrInput
	// Source share location.
	SourceShareLocation pulumi.StringInput
}

func (ShareSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*shareSubscriptionArgs)(nil)).Elem()
}

type ShareSubscriptionInput interface {
	pulumi.Input

	ToShareSubscriptionOutput() ShareSubscriptionOutput
	ToShareSubscriptionOutputWithContext(ctx context.Context) ShareSubscriptionOutput
}

func (*ShareSubscription) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareSubscription)(nil)).Elem()
}

func (i *ShareSubscription) ToShareSubscriptionOutput() ShareSubscriptionOutput {
	return i.ToShareSubscriptionOutputWithContext(context.Background())
}

func (i *ShareSubscription) ToShareSubscriptionOutputWithContext(ctx context.Context) ShareSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSubscriptionOutput)
}

type ShareSubscriptionOutput struct{ *pulumi.OutputState }

func (ShareSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareSubscription)(nil)).Elem()
}

func (o ShareSubscriptionOutput) ToShareSubscriptionOutput() ShareSubscriptionOutput {
	return o
}

func (o ShareSubscriptionOutput) ToShareSubscriptionOutputWithContext(ctx context.Context) ShareSubscriptionOutput {
	return o
}

// Time at which the share subscription was created.
func (o ShareSubscriptionOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareSubscription) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The expiration date of the share subscription.
func (o ShareSubscriptionOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSubscription) pulumi.StringPtrOutput { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// The invitation id.
func (o ShareSubscriptionOutput) InvitationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareSubscription) pulumi.StringOutput { return v.InvitationId }).(pulumi.StringOutput)
}

// Name of the azure resource
func (o ShareSubscriptionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareSubscription) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Email of the provider who created the resource
func (o ShareSubscriptionOutput) ProviderEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareSubscription) pulumi.StringOutput { return v.ProviderEmail }).(pulumi.StringOutput)
}

// Name of the provider who created the resource
func (o ShareSubscriptionOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareSubscription) pulumi.StringOutput { return v.ProviderName }).(pulumi.StringOutput)
}

// Tenant name of the provider who created the resource
func (o ShareSubscriptionOutput) ProviderTenantName() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareSubscription) pulumi.StringOutput { return v.ProviderTenantName }).(pulumi.StringOutput)
}

// Provisioning state of the share subscription
func (o ShareSubscriptionOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareSubscription) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Description of share
func (o ShareSubscriptionOutput) ShareDescription() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareSubscription) pulumi.StringOutput { return v.ShareDescription }).(pulumi.StringOutput)
}

// Kind of share
func (o ShareSubscriptionOutput) ShareKind() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareSubscription) pulumi.StringOutput { return v.ShareKind }).(pulumi.StringOutput)
}

// Name of the share
func (o ShareSubscriptionOutput) ShareName() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareSubscription) pulumi.StringOutput { return v.ShareName }).(pulumi.StringOutput)
}

// Gets the current status of share subscription.
func (o ShareSubscriptionOutput) ShareSubscriptionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareSubscription) pulumi.StringOutput { return v.ShareSubscriptionStatus }).(pulumi.StringOutput)
}

// Terms of a share
func (o ShareSubscriptionOutput) ShareTerms() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareSubscription) pulumi.StringOutput { return v.ShareTerms }).(pulumi.StringOutput)
}

// Source share location.
func (o ShareSubscriptionOutput) SourceShareLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareSubscription) pulumi.StringOutput { return v.SourceShareLocation }).(pulumi.StringOutput)
}

// System Data of the Azure resource.
func (o ShareSubscriptionOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ShareSubscription) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Type of the azure resource
func (o ShareSubscriptionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareSubscription) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Email of the user who created the resource
func (o ShareSubscriptionOutput) UserEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareSubscription) pulumi.StringOutput { return v.UserEmail }).(pulumi.StringOutput)
}

// Name of the user who created the resource
func (o ShareSubscriptionOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareSubscription) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ShareSubscriptionOutput{})
}
