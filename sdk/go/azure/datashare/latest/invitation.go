// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A Invitation data transfer object.
// Latest API Version: 2020-09-01.
type Invitation struct {
	pulumi.CustomResourceState

	// The expiration date for the invitation and share subscription.
	ExpirationDate pulumi.StringPtrOutput `pulumi:"expirationDate"`
	// unique invitation id
	InvitationId pulumi.StringOutput `pulumi:"invitationId"`
	// The status of the invitation.
	InvitationStatus pulumi.StringOutput `pulumi:"invitationStatus"`
	// Name of the azure resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The time the recipient responded to the invitation.
	RespondedAt pulumi.StringOutput `pulumi:"respondedAt"`
	// Gets the time at which the invitation was sent.
	SentAt pulumi.StringOutput `pulumi:"sentAt"`
	// System Data of the Azure resource.
	SystemData ProxyDtoResponseSystemDataOutput `pulumi:"systemData"`
	// The target Azure AD Id. Can't be combined with email.
	TargetActiveDirectoryId pulumi.StringPtrOutput `pulumi:"targetActiveDirectoryId"`
	// The email the invitation is directed to.
	TargetEmail pulumi.StringPtrOutput `pulumi:"targetEmail"`
	// The target user or application Id that invitation is being sent to.
	// Must be specified along TargetActiveDirectoryId. This enables sending
	// invitations to specific users or applications in an AD tenant.
	TargetObjectId pulumi.StringPtrOutput `pulumi:"targetObjectId"`
	// Type of the azure resource
	Type pulumi.StringOutput `pulumi:"type"`
	// Email of the user who created the resource
	UserEmail pulumi.StringOutput `pulumi:"userEmail"`
	// Name of the user who created the resource
	UserName pulumi.StringOutput `pulumi:"userName"`
}

// NewInvitation registers a new resource with the given unique name, arguments, and options.
func NewInvitation(ctx *pulumi.Context,
	name string, args *InvitationArgs, opts ...pulumi.ResourceOption) (*Invitation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.InvitationName == nil {
		return nil, errors.New("invalid value for required argument 'InvitationName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ShareName == nil {
		return nil, errors.New("invalid value for required argument 'ShareName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:datashare/v20181101preview:Invitation"),
		},
		{
			Type: pulumi.String("azure-nextgen:datashare/v20191101:Invitation"),
		},
		{
			Type: pulumi.String("azure-nextgen:datashare/v20200901:Invitation"),
		},
	})
	opts = append(opts, aliases)
	var resource Invitation
	err := ctx.RegisterResource("azure-nextgen:datashare/latest:Invitation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInvitation gets an existing Invitation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInvitation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InvitationState, opts ...pulumi.ResourceOption) (*Invitation, error) {
	var resource Invitation
	err := ctx.ReadResource("azure-nextgen:datashare/latest:Invitation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Invitation resources.
type invitationState struct {
	// The expiration date for the invitation and share subscription.
	ExpirationDate *string `pulumi:"expirationDate"`
	// unique invitation id
	InvitationId *string `pulumi:"invitationId"`
	// The status of the invitation.
	InvitationStatus *string `pulumi:"invitationStatus"`
	// Name of the azure resource
	Name *string `pulumi:"name"`
	// The time the recipient responded to the invitation.
	RespondedAt *string `pulumi:"respondedAt"`
	// Gets the time at which the invitation was sent.
	SentAt *string `pulumi:"sentAt"`
	// System Data of the Azure resource.
	SystemData *ProxyDtoResponseSystemData `pulumi:"systemData"`
	// The target Azure AD Id. Can't be combined with email.
	TargetActiveDirectoryId *string `pulumi:"targetActiveDirectoryId"`
	// The email the invitation is directed to.
	TargetEmail *string `pulumi:"targetEmail"`
	// The target user or application Id that invitation is being sent to.
	// Must be specified along TargetActiveDirectoryId. This enables sending
	// invitations to specific users or applications in an AD tenant.
	TargetObjectId *string `pulumi:"targetObjectId"`
	// Type of the azure resource
	Type *string `pulumi:"type"`
	// Email of the user who created the resource
	UserEmail *string `pulumi:"userEmail"`
	// Name of the user who created the resource
	UserName *string `pulumi:"userName"`
}

type InvitationState struct {
	// The expiration date for the invitation and share subscription.
	ExpirationDate pulumi.StringPtrInput
	// unique invitation id
	InvitationId pulumi.StringPtrInput
	// The status of the invitation.
	InvitationStatus pulumi.StringPtrInput
	// Name of the azure resource
	Name pulumi.StringPtrInput
	// The time the recipient responded to the invitation.
	RespondedAt pulumi.StringPtrInput
	// Gets the time at which the invitation was sent.
	SentAt pulumi.StringPtrInput
	// System Data of the Azure resource.
	SystemData ProxyDtoResponseSystemDataPtrInput
	// The target Azure AD Id. Can't be combined with email.
	TargetActiveDirectoryId pulumi.StringPtrInput
	// The email the invitation is directed to.
	TargetEmail pulumi.StringPtrInput
	// The target user or application Id that invitation is being sent to.
	// Must be specified along TargetActiveDirectoryId. This enables sending
	// invitations to specific users or applications in an AD tenant.
	TargetObjectId pulumi.StringPtrInput
	// Type of the azure resource
	Type pulumi.StringPtrInput
	// Email of the user who created the resource
	UserEmail pulumi.StringPtrInput
	// Name of the user who created the resource
	UserName pulumi.StringPtrInput
}

func (InvitationState) ElementType() reflect.Type {
	return reflect.TypeOf((*invitationState)(nil)).Elem()
}

type invitationArgs struct {
	// The name of the share account.
	AccountName string `pulumi:"accountName"`
	// The expiration date for the invitation and share subscription.
	ExpirationDate *string `pulumi:"expirationDate"`
	// The name of the invitation.
	InvitationName string `pulumi:"invitationName"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the share to send the invitation for.
	ShareName string `pulumi:"shareName"`
	// The target Azure AD Id. Can't be combined with email.
	TargetActiveDirectoryId *string `pulumi:"targetActiveDirectoryId"`
	// The email the invitation is directed to.
	TargetEmail *string `pulumi:"targetEmail"`
	// The target user or application Id that invitation is being sent to.
	// Must be specified along TargetActiveDirectoryId. This enables sending
	// invitations to specific users or applications in an AD tenant.
	TargetObjectId *string `pulumi:"targetObjectId"`
}

// The set of arguments for constructing a Invitation resource.
type InvitationArgs struct {
	// The name of the share account.
	AccountName pulumi.StringInput
	// The expiration date for the invitation and share subscription.
	ExpirationDate pulumi.StringPtrInput
	// The name of the invitation.
	InvitationName pulumi.StringInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
	// The name of the share to send the invitation for.
	ShareName pulumi.StringInput
	// The target Azure AD Id. Can't be combined with email.
	TargetActiveDirectoryId pulumi.StringPtrInput
	// The email the invitation is directed to.
	TargetEmail pulumi.StringPtrInput
	// The target user or application Id that invitation is being sent to.
	// Must be specified along TargetActiveDirectoryId. This enables sending
	// invitations to specific users or applications in an AD tenant.
	TargetObjectId pulumi.StringPtrInput
}

func (InvitationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*invitationArgs)(nil)).Elem()
}

type InvitationInput interface {
	pulumi.Input

	ToInvitationOutput() InvitationOutput
	ToInvitationOutputWithContext(ctx context.Context) InvitationOutput
}

func (*Invitation) ElementType() reflect.Type {
	return reflect.TypeOf((*Invitation)(nil))
}

func (i *Invitation) ToInvitationOutput() InvitationOutput {
	return i.ToInvitationOutputWithContext(context.Background())
}

func (i *Invitation) ToInvitationOutputWithContext(ctx context.Context) InvitationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationOutput)
}

type InvitationOutput struct {
	*pulumi.OutputState
}

func (InvitationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Invitation)(nil))
}

func (o InvitationOutput) ToInvitationOutput() InvitationOutput {
	return o
}

func (o InvitationOutput) ToInvitationOutputWithContext(ctx context.Context) InvitationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(InvitationOutput{})
}
