// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datashare

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A kusto cluster data set.
// API Version: 2020-09-01.
type KustoClusterDataSet struct {
	pulumi.CustomResourceState

	// Unique id for identifying a data set resource
	DataSetId pulumi.StringOutput `pulumi:"dataSetId"`
	// Kind of data set.
	// Expected value is 'KustoCluster'.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Resource id of the kusto cluster.
	KustoClusterResourceId pulumi.StringOutput `pulumi:"kustoClusterResourceId"`
	// Location of the kusto cluster.
	Location pulumi.StringOutput `pulumi:"location"`
	// Name of the azure resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Provisioning state of the kusto cluster data set.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// System Data of the Azure resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Type of the azure resource
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewKustoClusterDataSet registers a new resource with the given unique name, arguments, and options.
func NewKustoClusterDataSet(ctx *pulumi.Context,
	name string, args *KustoClusterDataSetArgs, opts ...pulumi.ResourceOption) (*KustoClusterDataSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	if args.KustoClusterResourceId == nil {
		return nil, errors.New("invalid value for required argument 'KustoClusterResourceId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ShareName == nil {
		return nil, errors.New("invalid value for required argument 'ShareName'")
	}
	args.Kind = pulumi.String("KustoCluster")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:datashare:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20181101preview:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-nextgen:datashare/v20181101preview:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20191101:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-nextgen:datashare/v20191101:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20200901:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-nextgen:datashare/v20200901:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20201001preview:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-nextgen:datashare/v20201001preview:KustoClusterDataSet"),
		},
	})
	opts = append(opts, aliases)
	var resource KustoClusterDataSet
	err := ctx.RegisterResource("azure-native:datashare:KustoClusterDataSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKustoClusterDataSet gets an existing KustoClusterDataSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKustoClusterDataSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KustoClusterDataSetState, opts ...pulumi.ResourceOption) (*KustoClusterDataSet, error) {
	var resource KustoClusterDataSet
	err := ctx.ReadResource("azure-native:datashare:KustoClusterDataSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KustoClusterDataSet resources.
type kustoClusterDataSetState struct {
}

type KustoClusterDataSetState struct {
}

func (KustoClusterDataSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*kustoClusterDataSetState)(nil)).Elem()
}

type kustoClusterDataSetArgs struct {
	// The name of the share account.
	AccountName string `pulumi:"accountName"`
	// The name of the dataSet.
	DataSetName *string `pulumi:"dataSetName"`
	// Kind of data set.
	// Expected value is 'KustoCluster'.
	Kind string `pulumi:"kind"`
	// Resource id of the kusto cluster.
	KustoClusterResourceId string `pulumi:"kustoClusterResourceId"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the share to add the data set to.
	ShareName string `pulumi:"shareName"`
}

// The set of arguments for constructing a KustoClusterDataSet resource.
type KustoClusterDataSetArgs struct {
	// The name of the share account.
	AccountName pulumi.StringInput
	// The name of the dataSet.
	DataSetName pulumi.StringPtrInput
	// Kind of data set.
	// Expected value is 'KustoCluster'.
	Kind pulumi.StringInput
	// Resource id of the kusto cluster.
	KustoClusterResourceId pulumi.StringInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
	// The name of the share to add the data set to.
	ShareName pulumi.StringInput
}

func (KustoClusterDataSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kustoClusterDataSetArgs)(nil)).Elem()
}

type KustoClusterDataSetInput interface {
	pulumi.Input

	ToKustoClusterDataSetOutput() KustoClusterDataSetOutput
	ToKustoClusterDataSetOutputWithContext(ctx context.Context) KustoClusterDataSetOutput
}

func (*KustoClusterDataSet) ElementType() reflect.Type {
	return reflect.TypeOf((*KustoClusterDataSet)(nil))
}

func (i *KustoClusterDataSet) ToKustoClusterDataSetOutput() KustoClusterDataSetOutput {
	return i.ToKustoClusterDataSetOutputWithContext(context.Background())
}

func (i *KustoClusterDataSet) ToKustoClusterDataSetOutputWithContext(ctx context.Context) KustoClusterDataSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KustoClusterDataSetOutput)
}

type KustoClusterDataSetOutput struct {
	*pulumi.OutputState
}

func (KustoClusterDataSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KustoClusterDataSet)(nil))
}

func (o KustoClusterDataSetOutput) ToKustoClusterDataSetOutput() KustoClusterDataSetOutput {
	return o
}

func (o KustoClusterDataSetOutput) ToKustoClusterDataSetOutputWithContext(ctx context.Context) KustoClusterDataSetOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(KustoClusterDataSetOutput{})
}
