// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210801

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Kusto database data set mapping
type KustoTableDataSetMapping struct {
	pulumi.CustomResourceState

	// The id of the source data set.
	DataSetId pulumi.StringOutput `pulumi:"dataSetId"`
	// Gets the status of the data set mapping.
	DataSetMappingStatus pulumi.StringOutput `pulumi:"dataSetMappingStatus"`
	// Kind of data set mapping.
	// Expected value is 'KustoTable'.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Resource id of the sink kusto cluster.
	KustoClusterResourceId pulumi.StringOutput `pulumi:"kustoClusterResourceId"`
	// Location of the sink kusto cluster.
	Location pulumi.StringOutput `pulumi:"location"`
	// Name of the azure resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Provisioning state of the data set mapping.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// System Data of the Azure resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Type of the azure resource
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewKustoTableDataSetMapping registers a new resource with the given unique name, arguments, and options.
func NewKustoTableDataSetMapping(ctx *pulumi.Context,
	name string, args *KustoTableDataSetMappingArgs, opts ...pulumi.ResourceOption) (*KustoTableDataSetMapping, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.DataSetId == nil {
		return nil, errors.New("invalid value for required argument 'DataSetId'")
	}
	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	if args.KustoClusterResourceId == nil {
		return nil, errors.New("invalid value for required argument 'KustoClusterResourceId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ShareSubscriptionName == nil {
		return nil, errors.New("invalid value for required argument 'ShareSubscriptionName'")
	}
	args.Kind = pulumi.String("KustoTable")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:datashare:KustoTableDataSetMapping"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20181101preview:KustoTableDataSetMapping"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20191101:KustoTableDataSetMapping"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20200901:KustoTableDataSetMapping"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20201001preview:KustoTableDataSetMapping"),
		},
	})
	opts = append(opts, aliases)
	var resource KustoTableDataSetMapping
	err := ctx.RegisterResource("azure-native:datashare/v20210801:KustoTableDataSetMapping", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKustoTableDataSetMapping gets an existing KustoTableDataSetMapping resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKustoTableDataSetMapping(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KustoTableDataSetMappingState, opts ...pulumi.ResourceOption) (*KustoTableDataSetMapping, error) {
	var resource KustoTableDataSetMapping
	err := ctx.ReadResource("azure-native:datashare/v20210801:KustoTableDataSetMapping", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KustoTableDataSetMapping resources.
type kustoTableDataSetMappingState struct {
}

type KustoTableDataSetMappingState struct {
}

func (KustoTableDataSetMappingState) ElementType() reflect.Type {
	return reflect.TypeOf((*kustoTableDataSetMappingState)(nil)).Elem()
}

type kustoTableDataSetMappingArgs struct {
	// The name of the share account.
	AccountName string `pulumi:"accountName"`
	// The id of the source data set.
	DataSetId string `pulumi:"dataSetId"`
	// The name of the data set mapping to be created.
	DataSetMappingName *string `pulumi:"dataSetMappingName"`
	// Kind of data set mapping.
	// Expected value is 'KustoTable'.
	Kind string `pulumi:"kind"`
	// Resource id of the sink kusto cluster.
	KustoClusterResourceId string `pulumi:"kustoClusterResourceId"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the share subscription which will hold the data set sink.
	ShareSubscriptionName string `pulumi:"shareSubscriptionName"`
}

// The set of arguments for constructing a KustoTableDataSetMapping resource.
type KustoTableDataSetMappingArgs struct {
	// The name of the share account.
	AccountName pulumi.StringInput
	// The id of the source data set.
	DataSetId pulumi.StringInput
	// The name of the data set mapping to be created.
	DataSetMappingName pulumi.StringPtrInput
	// Kind of data set mapping.
	// Expected value is 'KustoTable'.
	Kind pulumi.StringInput
	// Resource id of the sink kusto cluster.
	KustoClusterResourceId pulumi.StringInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
	// The name of the share subscription which will hold the data set sink.
	ShareSubscriptionName pulumi.StringInput
}

func (KustoTableDataSetMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kustoTableDataSetMappingArgs)(nil)).Elem()
}

type KustoTableDataSetMappingInput interface {
	pulumi.Input

	ToKustoTableDataSetMappingOutput() KustoTableDataSetMappingOutput
	ToKustoTableDataSetMappingOutputWithContext(ctx context.Context) KustoTableDataSetMappingOutput
}

func (*KustoTableDataSetMapping) ElementType() reflect.Type {
	return reflect.TypeOf((**KustoTableDataSetMapping)(nil)).Elem()
}

func (i *KustoTableDataSetMapping) ToKustoTableDataSetMappingOutput() KustoTableDataSetMappingOutput {
	return i.ToKustoTableDataSetMappingOutputWithContext(context.Background())
}

func (i *KustoTableDataSetMapping) ToKustoTableDataSetMappingOutputWithContext(ctx context.Context) KustoTableDataSetMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KustoTableDataSetMappingOutput)
}

type KustoTableDataSetMappingOutput struct{ *pulumi.OutputState }

func (KustoTableDataSetMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KustoTableDataSetMapping)(nil)).Elem()
}

func (o KustoTableDataSetMappingOutput) ToKustoTableDataSetMappingOutput() KustoTableDataSetMappingOutput {
	return o
}

func (o KustoTableDataSetMappingOutput) ToKustoTableDataSetMappingOutputWithContext(ctx context.Context) KustoTableDataSetMappingOutput {
	return o
}

// The id of the source data set.
func (o KustoTableDataSetMappingOutput) DataSetId() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoTableDataSetMapping) pulumi.StringOutput { return v.DataSetId }).(pulumi.StringOutput)
}

// Gets the status of the data set mapping.
func (o KustoTableDataSetMappingOutput) DataSetMappingStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoTableDataSetMapping) pulumi.StringOutput { return v.DataSetMappingStatus }).(pulumi.StringOutput)
}

// Kind of data set mapping.
// Expected value is 'KustoTable'.
func (o KustoTableDataSetMappingOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoTableDataSetMapping) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Resource id of the sink kusto cluster.
func (o KustoTableDataSetMappingOutput) KustoClusterResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoTableDataSetMapping) pulumi.StringOutput { return v.KustoClusterResourceId }).(pulumi.StringOutput)
}

// Location of the sink kusto cluster.
func (o KustoTableDataSetMappingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoTableDataSetMapping) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Name of the azure resource
func (o KustoTableDataSetMappingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoTableDataSetMapping) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the data set mapping.
func (o KustoTableDataSetMappingOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoTableDataSetMapping) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// System Data of the Azure resource.
func (o KustoTableDataSetMappingOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *KustoTableDataSetMapping) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Type of the azure resource
func (o KustoTableDataSetMappingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoTableDataSetMapping) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(KustoTableDataSetMappingOutput{})
}
