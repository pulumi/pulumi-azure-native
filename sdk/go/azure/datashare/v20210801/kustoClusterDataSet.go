// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210801

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KustoClusterDataSet struct {
	pulumi.CustomResourceState

	DataSetId              pulumi.StringOutput      `pulumi:"dataSetId"`
	Kind                   pulumi.StringOutput      `pulumi:"kind"`
	KustoClusterResourceId pulumi.StringOutput      `pulumi:"kustoClusterResourceId"`
	Location               pulumi.StringOutput      `pulumi:"location"`
	Name                   pulumi.StringOutput      `pulumi:"name"`
	ProvisioningState      pulumi.StringOutput      `pulumi:"provisioningState"`
	SystemData             SystemDataResponseOutput `pulumi:"systemData"`
	Type                   pulumi.StringOutput      `pulumi:"type"`
}

// NewKustoClusterDataSet registers a new resource with the given unique name, arguments, and options.
func NewKustoClusterDataSet(ctx *pulumi.Context,
	name string, args *KustoClusterDataSetArgs, opts ...pulumi.ResourceOption) (*KustoClusterDataSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	if args.KustoClusterResourceId == nil {
		return nil, errors.New("invalid value for required argument 'KustoClusterResourceId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ShareName == nil {
		return nil, errors.New("invalid value for required argument 'ShareName'")
	}
	args.Kind = pulumi.String("KustoCluster")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:datashare/v20210801:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-native:datashare:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-nextgen:datashare:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20181101preview:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-nextgen:datashare/v20181101preview:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20191101:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-nextgen:datashare/v20191101:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20200901:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-nextgen:datashare/v20200901:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20201001preview:KustoClusterDataSet"),
		},
		{
			Type: pulumi.String("azure-nextgen:datashare/v20201001preview:KustoClusterDataSet"),
		},
	})
	opts = append(opts, aliases)
	var resource KustoClusterDataSet
	err := ctx.RegisterResource("azure-native:datashare/v20210801:KustoClusterDataSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKustoClusterDataSet gets an existing KustoClusterDataSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKustoClusterDataSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KustoClusterDataSetState, opts ...pulumi.ResourceOption) (*KustoClusterDataSet, error) {
	var resource KustoClusterDataSet
	err := ctx.ReadResource("azure-native:datashare/v20210801:KustoClusterDataSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KustoClusterDataSet resources.
type kustoClusterDataSetState struct {
}

type KustoClusterDataSetState struct {
}

func (KustoClusterDataSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*kustoClusterDataSetState)(nil)).Elem()
}

type kustoClusterDataSetArgs struct {
	AccountName            string  `pulumi:"accountName"`
	DataSetName            *string `pulumi:"dataSetName"`
	Kind                   string  `pulumi:"kind"`
	KustoClusterResourceId string  `pulumi:"kustoClusterResourceId"`
	ResourceGroupName      string  `pulumi:"resourceGroupName"`
	ShareName              string  `pulumi:"shareName"`
}

// The set of arguments for constructing a KustoClusterDataSet resource.
type KustoClusterDataSetArgs struct {
	AccountName            pulumi.StringInput
	DataSetName            pulumi.StringPtrInput
	Kind                   pulumi.StringInput
	KustoClusterResourceId pulumi.StringInput
	ResourceGroupName      pulumi.StringInput
	ShareName              pulumi.StringInput
}

func (KustoClusterDataSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kustoClusterDataSetArgs)(nil)).Elem()
}

type KustoClusterDataSetInput interface {
	pulumi.Input

	ToKustoClusterDataSetOutput() KustoClusterDataSetOutput
	ToKustoClusterDataSetOutputWithContext(ctx context.Context) KustoClusterDataSetOutput
}

func (*KustoClusterDataSet) ElementType() reflect.Type {
	return reflect.TypeOf((*KustoClusterDataSet)(nil))
}

func (i *KustoClusterDataSet) ToKustoClusterDataSetOutput() KustoClusterDataSetOutput {
	return i.ToKustoClusterDataSetOutputWithContext(context.Background())
}

func (i *KustoClusterDataSet) ToKustoClusterDataSetOutputWithContext(ctx context.Context) KustoClusterDataSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KustoClusterDataSetOutput)
}

type KustoClusterDataSetOutput struct{ *pulumi.OutputState }

func (KustoClusterDataSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KustoClusterDataSet)(nil))
}

func (o KustoClusterDataSetOutput) ToKustoClusterDataSetOutput() KustoClusterDataSetOutput {
	return o
}

func (o KustoClusterDataSetOutput) ToKustoClusterDataSetOutputWithContext(ctx context.Context) KustoClusterDataSetOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(KustoClusterDataSetOutput{})
}
