// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210801

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A kusto table data set.
type KustoTableDataSet struct {
	pulumi.CustomResourceState

	// Unique id for identifying a data set resource
	DataSetId pulumi.StringOutput `pulumi:"dataSetId"`
	// Kind of data set.
	// Expected value is 'KustoTable'.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Resource id of the kusto database.
	KustoDatabaseResourceId pulumi.StringOutput `pulumi:"kustoDatabaseResourceId"`
	// Location of the kusto cluster.
	Location pulumi.StringOutput `pulumi:"location"`
	// Name of the azure resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Provisioning state of the kusto table data set.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// System Data of the Azure resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Table level sharing properties for kusto database
	TableLevelSharingProperties TableLevelSharingPropertiesResponseOutput `pulumi:"tableLevelSharingProperties"`
	// Type of the azure resource
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewKustoTableDataSet registers a new resource with the given unique name, arguments, and options.
func NewKustoTableDataSet(ctx *pulumi.Context,
	name string, args *KustoTableDataSetArgs, opts ...pulumi.ResourceOption) (*KustoTableDataSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	if args.KustoDatabaseResourceId == nil {
		return nil, errors.New("invalid value for required argument 'KustoDatabaseResourceId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ShareName == nil {
		return nil, errors.New("invalid value for required argument 'ShareName'")
	}
	if args.TableLevelSharingProperties == nil {
		return nil, errors.New("invalid value for required argument 'TableLevelSharingProperties'")
	}
	args.Kind = pulumi.String("KustoTable")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:datashare:KustoTableDataSet"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20181101preview:KustoTableDataSet"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20191101:KustoTableDataSet"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20200901:KustoTableDataSet"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20201001preview:KustoTableDataSet"),
		},
	})
	opts = append(opts, aliases)
	var resource KustoTableDataSet
	err := ctx.RegisterResource("azure-native:datashare/v20210801:KustoTableDataSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKustoTableDataSet gets an existing KustoTableDataSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKustoTableDataSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KustoTableDataSetState, opts ...pulumi.ResourceOption) (*KustoTableDataSet, error) {
	var resource KustoTableDataSet
	err := ctx.ReadResource("azure-native:datashare/v20210801:KustoTableDataSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KustoTableDataSet resources.
type kustoTableDataSetState struct {
}

type KustoTableDataSetState struct {
}

func (KustoTableDataSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*kustoTableDataSetState)(nil)).Elem()
}

type kustoTableDataSetArgs struct {
	// The name of the share account.
	AccountName string `pulumi:"accountName"`
	// The name of the dataSet.
	DataSetName *string `pulumi:"dataSetName"`
	// Kind of data set.
	// Expected value is 'KustoTable'.
	Kind string `pulumi:"kind"`
	// Resource id of the kusto database.
	KustoDatabaseResourceId string `pulumi:"kustoDatabaseResourceId"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the share to add the data set to.
	ShareName string `pulumi:"shareName"`
	// Table level sharing properties for kusto database
	TableLevelSharingProperties TableLevelSharingProperties `pulumi:"tableLevelSharingProperties"`
}

// The set of arguments for constructing a KustoTableDataSet resource.
type KustoTableDataSetArgs struct {
	// The name of the share account.
	AccountName pulumi.StringInput
	// The name of the dataSet.
	DataSetName pulumi.StringPtrInput
	// Kind of data set.
	// Expected value is 'KustoTable'.
	Kind pulumi.StringInput
	// Resource id of the kusto database.
	KustoDatabaseResourceId pulumi.StringInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
	// The name of the share to add the data set to.
	ShareName pulumi.StringInput
	// Table level sharing properties for kusto database
	TableLevelSharingProperties TableLevelSharingPropertiesInput
}

func (KustoTableDataSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kustoTableDataSetArgs)(nil)).Elem()
}

type KustoTableDataSetInput interface {
	pulumi.Input

	ToKustoTableDataSetOutput() KustoTableDataSetOutput
	ToKustoTableDataSetOutputWithContext(ctx context.Context) KustoTableDataSetOutput
}

func (*KustoTableDataSet) ElementType() reflect.Type {
	return reflect.TypeOf((**KustoTableDataSet)(nil)).Elem()
}

func (i *KustoTableDataSet) ToKustoTableDataSetOutput() KustoTableDataSetOutput {
	return i.ToKustoTableDataSetOutputWithContext(context.Background())
}

func (i *KustoTableDataSet) ToKustoTableDataSetOutputWithContext(ctx context.Context) KustoTableDataSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KustoTableDataSetOutput)
}

type KustoTableDataSetOutput struct{ *pulumi.OutputState }

func (KustoTableDataSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KustoTableDataSet)(nil)).Elem()
}

func (o KustoTableDataSetOutput) ToKustoTableDataSetOutput() KustoTableDataSetOutput {
	return o
}

func (o KustoTableDataSetOutput) ToKustoTableDataSetOutputWithContext(ctx context.Context) KustoTableDataSetOutput {
	return o
}

// Unique id for identifying a data set resource
func (o KustoTableDataSetOutput) DataSetId() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoTableDataSet) pulumi.StringOutput { return v.DataSetId }).(pulumi.StringOutput)
}

// Kind of data set.
// Expected value is 'KustoTable'.
func (o KustoTableDataSetOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoTableDataSet) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Resource id of the kusto database.
func (o KustoTableDataSetOutput) KustoDatabaseResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoTableDataSet) pulumi.StringOutput { return v.KustoDatabaseResourceId }).(pulumi.StringOutput)
}

// Location of the kusto cluster.
func (o KustoTableDataSetOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoTableDataSet) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Name of the azure resource
func (o KustoTableDataSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoTableDataSet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the kusto table data set.
func (o KustoTableDataSetOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoTableDataSet) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// System Data of the Azure resource.
func (o KustoTableDataSetOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *KustoTableDataSet) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Table level sharing properties for kusto database
func (o KustoTableDataSetOutput) TableLevelSharingProperties() TableLevelSharingPropertiesResponseOutput {
	return o.ApplyT(func(v *KustoTableDataSet) TableLevelSharingPropertiesResponseOutput {
		return v.TableLevelSharingProperties
	}).(TableLevelSharingPropertiesResponseOutput)
}

// Type of the azure resource
func (o KustoTableDataSetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoTableDataSet) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(KustoTableDataSetOutput{})
}
