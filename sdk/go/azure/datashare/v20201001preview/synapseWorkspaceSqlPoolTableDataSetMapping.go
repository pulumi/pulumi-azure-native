// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20201001preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Synapse Workspace Sql Pool Table data set mapping
type SynapseWorkspaceSqlPoolTableDataSetMapping struct {
	pulumi.CustomResourceState

	// The id of the source data set.
	DataSetId pulumi.StringOutput `pulumi:"dataSetId"`
	// Gets the status of the data set mapping.
	DataSetMappingStatus pulumi.StringOutput `pulumi:"dataSetMappingStatus"`
	// Kind of data set mapping.
	// Expected value is 'SynapseWorkspaceSqlPoolTable'.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Name of the azure resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Provisioning state of the data set mapping.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Resource id of the Synapse Workspace SQL Pool Table
	SynapseWorkspaceSqlPoolTableResourceId pulumi.StringOutput `pulumi:"synapseWorkspaceSqlPoolTableResourceId"`
	// System Data of the Azure resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Type of the azure resource
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSynapseWorkspaceSqlPoolTableDataSetMapping registers a new resource with the given unique name, arguments, and options.
func NewSynapseWorkspaceSqlPoolTableDataSetMapping(ctx *pulumi.Context,
	name string, args *SynapseWorkspaceSqlPoolTableDataSetMappingArgs, opts ...pulumi.ResourceOption) (*SynapseWorkspaceSqlPoolTableDataSetMapping, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.DataSetId == nil {
		return nil, errors.New("invalid value for required argument 'DataSetId'")
	}
	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ShareSubscriptionName == nil {
		return nil, errors.New("invalid value for required argument 'ShareSubscriptionName'")
	}
	if args.SynapseWorkspaceSqlPoolTableResourceId == nil {
		return nil, errors.New("invalid value for required argument 'SynapseWorkspaceSqlPoolTableResourceId'")
	}
	args.Kind = pulumi.String("SynapseWorkspaceSqlPoolTable")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:datashare:SynapseWorkspaceSqlPoolTableDataSetMapping"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20181101preview:SynapseWorkspaceSqlPoolTableDataSetMapping"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20191101:SynapseWorkspaceSqlPoolTableDataSetMapping"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20200901:SynapseWorkspaceSqlPoolTableDataSetMapping"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20210801:SynapseWorkspaceSqlPoolTableDataSetMapping"),
		},
	})
	opts = append(opts, aliases)
	var resource SynapseWorkspaceSqlPoolTableDataSetMapping
	err := ctx.RegisterResource("azure-native:datashare/v20201001preview:SynapseWorkspaceSqlPoolTableDataSetMapping", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSynapseWorkspaceSqlPoolTableDataSetMapping gets an existing SynapseWorkspaceSqlPoolTableDataSetMapping resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSynapseWorkspaceSqlPoolTableDataSetMapping(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SynapseWorkspaceSqlPoolTableDataSetMappingState, opts ...pulumi.ResourceOption) (*SynapseWorkspaceSqlPoolTableDataSetMapping, error) {
	var resource SynapseWorkspaceSqlPoolTableDataSetMapping
	err := ctx.ReadResource("azure-native:datashare/v20201001preview:SynapseWorkspaceSqlPoolTableDataSetMapping", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SynapseWorkspaceSqlPoolTableDataSetMapping resources.
type synapseWorkspaceSqlPoolTableDataSetMappingState struct {
}

type SynapseWorkspaceSqlPoolTableDataSetMappingState struct {
}

func (SynapseWorkspaceSqlPoolTableDataSetMappingState) ElementType() reflect.Type {
	return reflect.TypeOf((*synapseWorkspaceSqlPoolTableDataSetMappingState)(nil)).Elem()
}

type synapseWorkspaceSqlPoolTableDataSetMappingArgs struct {
	// The name of the share account.
	AccountName string `pulumi:"accountName"`
	// The id of the source data set.
	DataSetId string `pulumi:"dataSetId"`
	// The name of the data set mapping to be created.
	DataSetMappingName *string `pulumi:"dataSetMappingName"`
	// Kind of data set mapping.
	// Expected value is 'SynapseWorkspaceSqlPoolTable'.
	Kind string `pulumi:"kind"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the share subscription which will hold the data set sink.
	ShareSubscriptionName string `pulumi:"shareSubscriptionName"`
	// Resource id of the Synapse Workspace SQL Pool Table
	SynapseWorkspaceSqlPoolTableResourceId string `pulumi:"synapseWorkspaceSqlPoolTableResourceId"`
}

// The set of arguments for constructing a SynapseWorkspaceSqlPoolTableDataSetMapping resource.
type SynapseWorkspaceSqlPoolTableDataSetMappingArgs struct {
	// The name of the share account.
	AccountName pulumi.StringInput
	// The id of the source data set.
	DataSetId pulumi.StringInput
	// The name of the data set mapping to be created.
	DataSetMappingName pulumi.StringPtrInput
	// Kind of data set mapping.
	// Expected value is 'SynapseWorkspaceSqlPoolTable'.
	Kind pulumi.StringInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
	// The name of the share subscription which will hold the data set sink.
	ShareSubscriptionName pulumi.StringInput
	// Resource id of the Synapse Workspace SQL Pool Table
	SynapseWorkspaceSqlPoolTableResourceId pulumi.StringInput
}

func (SynapseWorkspaceSqlPoolTableDataSetMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*synapseWorkspaceSqlPoolTableDataSetMappingArgs)(nil)).Elem()
}

type SynapseWorkspaceSqlPoolTableDataSetMappingInput interface {
	pulumi.Input

	ToSynapseWorkspaceSqlPoolTableDataSetMappingOutput() SynapseWorkspaceSqlPoolTableDataSetMappingOutput
	ToSynapseWorkspaceSqlPoolTableDataSetMappingOutputWithContext(ctx context.Context) SynapseWorkspaceSqlPoolTableDataSetMappingOutput
}

func (*SynapseWorkspaceSqlPoolTableDataSetMapping) ElementType() reflect.Type {
	return reflect.TypeOf((**SynapseWorkspaceSqlPoolTableDataSetMapping)(nil)).Elem()
}

func (i *SynapseWorkspaceSqlPoolTableDataSetMapping) ToSynapseWorkspaceSqlPoolTableDataSetMappingOutput() SynapseWorkspaceSqlPoolTableDataSetMappingOutput {
	return i.ToSynapseWorkspaceSqlPoolTableDataSetMappingOutputWithContext(context.Background())
}

func (i *SynapseWorkspaceSqlPoolTableDataSetMapping) ToSynapseWorkspaceSqlPoolTableDataSetMappingOutputWithContext(ctx context.Context) SynapseWorkspaceSqlPoolTableDataSetMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SynapseWorkspaceSqlPoolTableDataSetMappingOutput)
}

type SynapseWorkspaceSqlPoolTableDataSetMappingOutput struct{ *pulumi.OutputState }

func (SynapseWorkspaceSqlPoolTableDataSetMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SynapseWorkspaceSqlPoolTableDataSetMapping)(nil)).Elem()
}

func (o SynapseWorkspaceSqlPoolTableDataSetMappingOutput) ToSynapseWorkspaceSqlPoolTableDataSetMappingOutput() SynapseWorkspaceSqlPoolTableDataSetMappingOutput {
	return o
}

func (o SynapseWorkspaceSqlPoolTableDataSetMappingOutput) ToSynapseWorkspaceSqlPoolTableDataSetMappingOutputWithContext(ctx context.Context) SynapseWorkspaceSqlPoolTableDataSetMappingOutput {
	return o
}

// The id of the source data set.
func (o SynapseWorkspaceSqlPoolTableDataSetMappingOutput) DataSetId() pulumi.StringOutput {
	return o.ApplyT(func(v *SynapseWorkspaceSqlPoolTableDataSetMapping) pulumi.StringOutput { return v.DataSetId }).(pulumi.StringOutput)
}

// Gets the status of the data set mapping.
func (o SynapseWorkspaceSqlPoolTableDataSetMappingOutput) DataSetMappingStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *SynapseWorkspaceSqlPoolTableDataSetMapping) pulumi.StringOutput { return v.DataSetMappingStatus }).(pulumi.StringOutput)
}

// Kind of data set mapping.
// Expected value is 'SynapseWorkspaceSqlPoolTable'.
func (o SynapseWorkspaceSqlPoolTableDataSetMappingOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *SynapseWorkspaceSqlPoolTableDataSetMapping) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Name of the azure resource
func (o SynapseWorkspaceSqlPoolTableDataSetMappingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SynapseWorkspaceSqlPoolTableDataSetMapping) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the data set mapping.
func (o SynapseWorkspaceSqlPoolTableDataSetMappingOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *SynapseWorkspaceSqlPoolTableDataSetMapping) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource id of the Synapse Workspace SQL Pool Table
func (o SynapseWorkspaceSqlPoolTableDataSetMappingOutput) SynapseWorkspaceSqlPoolTableResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SynapseWorkspaceSqlPoolTableDataSetMapping) pulumi.StringOutput {
		return v.SynapseWorkspaceSqlPoolTableResourceId
	}).(pulumi.StringOutput)
}

// System Data of the Azure resource.
func (o SynapseWorkspaceSqlPoolTableDataSetMappingOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *SynapseWorkspaceSqlPoolTableDataSetMapping) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Type of the azure resource
func (o SynapseWorkspaceSqlPoolTableDataSetMappingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SynapseWorkspaceSqlPoolTableDataSetMapping) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SynapseWorkspaceSqlPoolTableDataSetMappingOutput{})
}
