// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20201001preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A type of synchronization setting based on schedule
func LookupScheduledSynchronizationSetting(ctx *pulumi.Context, args *LookupScheduledSynchronizationSettingArgs, opts ...pulumi.InvokeOption) (*LookupScheduledSynchronizationSettingResult, error) {
	var rv LookupScheduledSynchronizationSettingResult
	err := ctx.Invoke("azure-native:datashare/v20201001preview:getScheduledSynchronizationSetting", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupScheduledSynchronizationSettingArgs struct {
	// The name of the share account.
	AccountName string `pulumi:"accountName"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the share.
	ShareName string `pulumi:"shareName"`
	// The name of the synchronizationSetting.
	SynchronizationSettingName string `pulumi:"synchronizationSettingName"`
}

// A type of synchronization setting based on schedule
type LookupScheduledSynchronizationSettingResult struct {
	// Time at which the synchronization setting was created.
	CreatedAt string `pulumi:"createdAt"`
	// The resource id of the azure resource
	Id string `pulumi:"id"`
	// Kind of synchronization setting.
	// Expected value is 'ScheduleBased'.
	Kind string `pulumi:"kind"`
	// Name of the azure resource
	Name string `pulumi:"name"`
	// Gets or sets the provisioning state
	ProvisioningState string `pulumi:"provisioningState"`
	// Recurrence Interval
	RecurrenceInterval string `pulumi:"recurrenceInterval"`
	// Synchronization time
	SynchronizationTime string `pulumi:"synchronizationTime"`
	// System Data of the Azure resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Type of the azure resource
	Type string `pulumi:"type"`
	// Name of the user who created the synchronization setting.
	UserName string `pulumi:"userName"`
}

func LookupScheduledSynchronizationSettingOutput(ctx *pulumi.Context, args LookupScheduledSynchronizationSettingOutputArgs, opts ...pulumi.InvokeOption) LookupScheduledSynchronizationSettingResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupScheduledSynchronizationSettingResult, error) {
			args := v.(LookupScheduledSynchronizationSettingArgs)
			r, err := LookupScheduledSynchronizationSetting(ctx, &args, opts...)
			var s LookupScheduledSynchronizationSettingResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupScheduledSynchronizationSettingResultOutput)
}

type LookupScheduledSynchronizationSettingOutputArgs struct {
	// The name of the share account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The resource group name.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the share.
	ShareName pulumi.StringInput `pulumi:"shareName"`
	// The name of the synchronizationSetting.
	SynchronizationSettingName pulumi.StringInput `pulumi:"synchronizationSettingName"`
}

func (LookupScheduledSynchronizationSettingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScheduledSynchronizationSettingArgs)(nil)).Elem()
}

// A type of synchronization setting based on schedule
type LookupScheduledSynchronizationSettingResultOutput struct{ *pulumi.OutputState }

func (LookupScheduledSynchronizationSettingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScheduledSynchronizationSettingResult)(nil)).Elem()
}

func (o LookupScheduledSynchronizationSettingResultOutput) ToLookupScheduledSynchronizationSettingResultOutput() LookupScheduledSynchronizationSettingResultOutput {
	return o
}

func (o LookupScheduledSynchronizationSettingResultOutput) ToLookupScheduledSynchronizationSettingResultOutputWithContext(ctx context.Context) LookupScheduledSynchronizationSettingResultOutput {
	return o
}

// Time at which the synchronization setting was created.
func (o LookupScheduledSynchronizationSettingResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledSynchronizationSettingResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The resource id of the azure resource
func (o LookupScheduledSynchronizationSettingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledSynchronizationSettingResult) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of synchronization setting.
// Expected value is 'ScheduleBased'.
func (o LookupScheduledSynchronizationSettingResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledSynchronizationSettingResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the azure resource
func (o LookupScheduledSynchronizationSettingResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledSynchronizationSettingResult) string { return v.Name }).(pulumi.StringOutput)
}

// Gets or sets the provisioning state
func (o LookupScheduledSynchronizationSettingResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledSynchronizationSettingResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Recurrence Interval
func (o LookupScheduledSynchronizationSettingResultOutput) RecurrenceInterval() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledSynchronizationSettingResult) string { return v.RecurrenceInterval }).(pulumi.StringOutput)
}

// Synchronization time
func (o LookupScheduledSynchronizationSettingResultOutput) SynchronizationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledSynchronizationSettingResult) string { return v.SynchronizationTime }).(pulumi.StringOutput)
}

// System Data of the Azure resource.
func (o LookupScheduledSynchronizationSettingResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupScheduledSynchronizationSettingResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Type of the azure resource
func (o LookupScheduledSynchronizationSettingResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledSynchronizationSettingResult) string { return v.Type }).(pulumi.StringOutput)
}

// Name of the user who created the synchronization setting.
func (o LookupScheduledSynchronizationSettingResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledSynchronizationSettingResult) string { return v.UserName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupScheduledSynchronizationSettingResultOutput{})
}
