// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20181101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Identity of resource
type Identity struct {
	// Identity Type
	Type *string `pulumi:"type"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//          IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Identity of resource
type IdentityArgs struct {
	// Identity Type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//          IdentityArgs{...}
//
//  or:
//
//          nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Identity of resource
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyT(func(v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// Identity Type
func (o IdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Identity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity { return *v }).(IdentityOutput)
}

// Identity Type
func (o IdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity of resource
type IdentityResponse struct {
	// service principal Id
	PrincipalId string `pulumi:"principalId"`
	// Tenant Id
	TenantId string `pulumi:"tenantId"`
	// Identity Type
	Type *string `pulumi:"type"`
}

// IdentityResponseInput is an input type that accepts IdentityResponseArgs and IdentityResponseOutput values.
// You can construct a concrete instance of `IdentityResponseInput` via:
//
//          IdentityResponseArgs{...}
type IdentityResponseInput interface {
	pulumi.Input

	ToIdentityResponseOutput() IdentityResponseOutput
	ToIdentityResponseOutputWithContext(context.Context) IdentityResponseOutput
}

// Identity of resource
type IdentityResponseArgs struct {
	// service principal Id
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// Tenant Id
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Identity Type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (i IdentityResponseArgs) ToIdentityResponseOutput() IdentityResponseOutput {
	return i.ToIdentityResponseOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput)
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput).ToIdentityResponsePtrOutputWithContext(ctx)
}

// IdentityResponsePtrInput is an input type that accepts IdentityResponseArgs, IdentityResponsePtr and IdentityResponsePtrOutput values.
// You can construct a concrete instance of `IdentityResponsePtrInput` via:
//
//          IdentityResponseArgs{...}
//
//  or:
//
//          nil
type IdentityResponsePtrInput interface {
	pulumi.Input

	ToIdentityResponsePtrOutput() IdentityResponsePtrOutput
	ToIdentityResponsePtrOutputWithContext(context.Context) IdentityResponsePtrOutput
}

type identityResponsePtrType IdentityResponseArgs

func IdentityResponsePtr(v *IdentityResponseArgs) IdentityResponsePtrInput {
	return (*identityResponsePtrType)(v)
}

func (*identityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponsePtrOutput)
}

// Identity of resource
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o.ApplyT(func(v IdentityResponse) *IdentityResponse {
		return &v
	}).(IdentityResponsePtrOutput)
}

// service principal Id
func (o IdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Tenant Id
func (o IdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Identity Type
func (o IdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse { return *v }).(IdentityResponseOutput)
}

// service principal Id
func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Tenant Id
func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Identity Type
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// A type of synchronization setting based on schedule
type ScheduledSourceSynchronizationSettingResponse struct {
	// Kind of synchronization
	Kind string `pulumi:"kind"`
	// Recurrence Interval
	RecurrenceInterval *string `pulumi:"recurrenceInterval"`
	// Synchronization time
	SynchronizationTime *string `pulumi:"synchronizationTime"`
}

// ScheduledSourceSynchronizationSettingResponseInput is an input type that accepts ScheduledSourceSynchronizationSettingResponseArgs and ScheduledSourceSynchronizationSettingResponseOutput values.
// You can construct a concrete instance of `ScheduledSourceSynchronizationSettingResponseInput` via:
//
//          ScheduledSourceSynchronizationSettingResponseArgs{...}
type ScheduledSourceSynchronizationSettingResponseInput interface {
	pulumi.Input

	ToScheduledSourceSynchronizationSettingResponseOutput() ScheduledSourceSynchronizationSettingResponseOutput
	ToScheduledSourceSynchronizationSettingResponseOutputWithContext(context.Context) ScheduledSourceSynchronizationSettingResponseOutput
}

// A type of synchronization setting based on schedule
type ScheduledSourceSynchronizationSettingResponseArgs struct {
	// Kind of synchronization
	Kind pulumi.StringInput `pulumi:"kind"`
	// Recurrence Interval
	RecurrenceInterval pulumi.StringPtrInput `pulumi:"recurrenceInterval"`
	// Synchronization time
	SynchronizationTime pulumi.StringPtrInput `pulumi:"synchronizationTime"`
}

func (ScheduledSourceSynchronizationSettingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledSourceSynchronizationSettingResponse)(nil)).Elem()
}

func (i ScheduledSourceSynchronizationSettingResponseArgs) ToScheduledSourceSynchronizationSettingResponseOutput() ScheduledSourceSynchronizationSettingResponseOutput {
	return i.ToScheduledSourceSynchronizationSettingResponseOutputWithContext(context.Background())
}

func (i ScheduledSourceSynchronizationSettingResponseArgs) ToScheduledSourceSynchronizationSettingResponseOutputWithContext(ctx context.Context) ScheduledSourceSynchronizationSettingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledSourceSynchronizationSettingResponseOutput)
}

// ScheduledSourceSynchronizationSettingResponseArrayInput is an input type that accepts ScheduledSourceSynchronizationSettingResponseArray and ScheduledSourceSynchronizationSettingResponseArrayOutput values.
// You can construct a concrete instance of `ScheduledSourceSynchronizationSettingResponseArrayInput` via:
//
//          ScheduledSourceSynchronizationSettingResponseArray{ ScheduledSourceSynchronizationSettingResponseArgs{...} }
type ScheduledSourceSynchronizationSettingResponseArrayInput interface {
	pulumi.Input

	ToScheduledSourceSynchronizationSettingResponseArrayOutput() ScheduledSourceSynchronizationSettingResponseArrayOutput
	ToScheduledSourceSynchronizationSettingResponseArrayOutputWithContext(context.Context) ScheduledSourceSynchronizationSettingResponseArrayOutput
}

type ScheduledSourceSynchronizationSettingResponseArray []ScheduledSourceSynchronizationSettingResponseInput

func (ScheduledSourceSynchronizationSettingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledSourceSynchronizationSettingResponse)(nil)).Elem()
}

func (i ScheduledSourceSynchronizationSettingResponseArray) ToScheduledSourceSynchronizationSettingResponseArrayOutput() ScheduledSourceSynchronizationSettingResponseArrayOutput {
	return i.ToScheduledSourceSynchronizationSettingResponseArrayOutputWithContext(context.Background())
}

func (i ScheduledSourceSynchronizationSettingResponseArray) ToScheduledSourceSynchronizationSettingResponseArrayOutputWithContext(ctx context.Context) ScheduledSourceSynchronizationSettingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledSourceSynchronizationSettingResponseArrayOutput)
}

// A type of synchronization setting based on schedule
type ScheduledSourceSynchronizationSettingResponseOutput struct{ *pulumi.OutputState }

func (ScheduledSourceSynchronizationSettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledSourceSynchronizationSettingResponse)(nil)).Elem()
}

func (o ScheduledSourceSynchronizationSettingResponseOutput) ToScheduledSourceSynchronizationSettingResponseOutput() ScheduledSourceSynchronizationSettingResponseOutput {
	return o
}

func (o ScheduledSourceSynchronizationSettingResponseOutput) ToScheduledSourceSynchronizationSettingResponseOutputWithContext(ctx context.Context) ScheduledSourceSynchronizationSettingResponseOutput {
	return o
}

// Kind of synchronization
func (o ScheduledSourceSynchronizationSettingResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledSourceSynchronizationSettingResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// Recurrence Interval
func (o ScheduledSourceSynchronizationSettingResponseOutput) RecurrenceInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSourceSynchronizationSettingResponse) *string { return v.RecurrenceInterval }).(pulumi.StringPtrOutput)
}

// Synchronization time
func (o ScheduledSourceSynchronizationSettingResponseOutput) SynchronizationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSourceSynchronizationSettingResponse) *string { return v.SynchronizationTime }).(pulumi.StringPtrOutput)
}

type ScheduledSourceSynchronizationSettingResponseArrayOutput struct{ *pulumi.OutputState }

func (ScheduledSourceSynchronizationSettingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledSourceSynchronizationSettingResponse)(nil)).Elem()
}

func (o ScheduledSourceSynchronizationSettingResponseArrayOutput) ToScheduledSourceSynchronizationSettingResponseArrayOutput() ScheduledSourceSynchronizationSettingResponseArrayOutput {
	return o
}

func (o ScheduledSourceSynchronizationSettingResponseArrayOutput) ToScheduledSourceSynchronizationSettingResponseArrayOutputWithContext(ctx context.Context) ScheduledSourceSynchronizationSettingResponseArrayOutput {
	return o
}

func (o ScheduledSourceSynchronizationSettingResponseArrayOutput) Index(i pulumi.IntInput) ScheduledSourceSynchronizationSettingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledSourceSynchronizationSettingResponse {
		return vs[0].([]ScheduledSourceSynchronizationSettingResponse)[vs[1].(int)]
	}).(ScheduledSourceSynchronizationSettingResponseOutput)
}

// A ShareSubscriptionSynchronization data transfer object.
type ShareSubscriptionSynchronizationResponse struct {
	// Synchronization duration
	DurationMs int `pulumi:"durationMs"`
	// End time of synchronization
	EndTime string `pulumi:"endTime"`
	// message of Synchronization
	Message string `pulumi:"message"`
	// start time of synchronization
	StartTime string `pulumi:"startTime"`
	// Raw Status
	Status string `pulumi:"status"`
	// Synchronization id
	SynchronizationId string `pulumi:"synchronizationId"`
	// Synchronization Mode
	SynchronizationMode string `pulumi:"synchronizationMode"`
}

// ShareSubscriptionSynchronizationResponseInput is an input type that accepts ShareSubscriptionSynchronizationResponseArgs and ShareSubscriptionSynchronizationResponseOutput values.
// You can construct a concrete instance of `ShareSubscriptionSynchronizationResponseInput` via:
//
//          ShareSubscriptionSynchronizationResponseArgs{...}
type ShareSubscriptionSynchronizationResponseInput interface {
	pulumi.Input

	ToShareSubscriptionSynchronizationResponseOutput() ShareSubscriptionSynchronizationResponseOutput
	ToShareSubscriptionSynchronizationResponseOutputWithContext(context.Context) ShareSubscriptionSynchronizationResponseOutput
}

// A ShareSubscriptionSynchronization data transfer object.
type ShareSubscriptionSynchronizationResponseArgs struct {
	// Synchronization duration
	DurationMs pulumi.IntInput `pulumi:"durationMs"`
	// End time of synchronization
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// message of Synchronization
	Message pulumi.StringInput `pulumi:"message"`
	// start time of synchronization
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Raw Status
	Status pulumi.StringInput `pulumi:"status"`
	// Synchronization id
	SynchronizationId pulumi.StringInput `pulumi:"synchronizationId"`
	// Synchronization Mode
	SynchronizationMode pulumi.StringInput `pulumi:"synchronizationMode"`
}

func (ShareSubscriptionSynchronizationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSubscriptionSynchronizationResponse)(nil)).Elem()
}

func (i ShareSubscriptionSynchronizationResponseArgs) ToShareSubscriptionSynchronizationResponseOutput() ShareSubscriptionSynchronizationResponseOutput {
	return i.ToShareSubscriptionSynchronizationResponseOutputWithContext(context.Background())
}

func (i ShareSubscriptionSynchronizationResponseArgs) ToShareSubscriptionSynchronizationResponseOutputWithContext(ctx context.Context) ShareSubscriptionSynchronizationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSubscriptionSynchronizationResponseOutput)
}

// ShareSubscriptionSynchronizationResponseArrayInput is an input type that accepts ShareSubscriptionSynchronizationResponseArray and ShareSubscriptionSynchronizationResponseArrayOutput values.
// You can construct a concrete instance of `ShareSubscriptionSynchronizationResponseArrayInput` via:
//
//          ShareSubscriptionSynchronizationResponseArray{ ShareSubscriptionSynchronizationResponseArgs{...} }
type ShareSubscriptionSynchronizationResponseArrayInput interface {
	pulumi.Input

	ToShareSubscriptionSynchronizationResponseArrayOutput() ShareSubscriptionSynchronizationResponseArrayOutput
	ToShareSubscriptionSynchronizationResponseArrayOutputWithContext(context.Context) ShareSubscriptionSynchronizationResponseArrayOutput
}

type ShareSubscriptionSynchronizationResponseArray []ShareSubscriptionSynchronizationResponseInput

func (ShareSubscriptionSynchronizationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShareSubscriptionSynchronizationResponse)(nil)).Elem()
}

func (i ShareSubscriptionSynchronizationResponseArray) ToShareSubscriptionSynchronizationResponseArrayOutput() ShareSubscriptionSynchronizationResponseArrayOutput {
	return i.ToShareSubscriptionSynchronizationResponseArrayOutputWithContext(context.Background())
}

func (i ShareSubscriptionSynchronizationResponseArray) ToShareSubscriptionSynchronizationResponseArrayOutputWithContext(ctx context.Context) ShareSubscriptionSynchronizationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSubscriptionSynchronizationResponseArrayOutput)
}

// A ShareSubscriptionSynchronization data transfer object.
type ShareSubscriptionSynchronizationResponseOutput struct{ *pulumi.OutputState }

func (ShareSubscriptionSynchronizationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSubscriptionSynchronizationResponse)(nil)).Elem()
}

func (o ShareSubscriptionSynchronizationResponseOutput) ToShareSubscriptionSynchronizationResponseOutput() ShareSubscriptionSynchronizationResponseOutput {
	return o
}

func (o ShareSubscriptionSynchronizationResponseOutput) ToShareSubscriptionSynchronizationResponseOutputWithContext(ctx context.Context) ShareSubscriptionSynchronizationResponseOutput {
	return o
}

// Synchronization duration
func (o ShareSubscriptionSynchronizationResponseOutput) DurationMs() pulumi.IntOutput {
	return o.ApplyT(func(v ShareSubscriptionSynchronizationResponse) int { return v.DurationMs }).(pulumi.IntOutput)
}

// End time of synchronization
func (o ShareSubscriptionSynchronizationResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionSynchronizationResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// message of Synchronization
func (o ShareSubscriptionSynchronizationResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionSynchronizationResponse) string { return v.Message }).(pulumi.StringOutput)
}

// start time of synchronization
func (o ShareSubscriptionSynchronizationResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionSynchronizationResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Raw Status
func (o ShareSubscriptionSynchronizationResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionSynchronizationResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Synchronization id
func (o ShareSubscriptionSynchronizationResponseOutput) SynchronizationId() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionSynchronizationResponse) string { return v.SynchronizationId }).(pulumi.StringOutput)
}

// Synchronization Mode
func (o ShareSubscriptionSynchronizationResponseOutput) SynchronizationMode() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionSynchronizationResponse) string { return v.SynchronizationMode }).(pulumi.StringOutput)
}

type ShareSubscriptionSynchronizationResponseArrayOutput struct{ *pulumi.OutputState }

func (ShareSubscriptionSynchronizationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShareSubscriptionSynchronizationResponse)(nil)).Elem()
}

func (o ShareSubscriptionSynchronizationResponseArrayOutput) ToShareSubscriptionSynchronizationResponseArrayOutput() ShareSubscriptionSynchronizationResponseArrayOutput {
	return o
}

func (o ShareSubscriptionSynchronizationResponseArrayOutput) ToShareSubscriptionSynchronizationResponseArrayOutputWithContext(ctx context.Context) ShareSubscriptionSynchronizationResponseArrayOutput {
	return o
}

func (o ShareSubscriptionSynchronizationResponseArrayOutput) Index(i pulumi.IntInput) ShareSubscriptionSynchronizationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShareSubscriptionSynchronizationResponse {
		return vs[0].([]ShareSubscriptionSynchronizationResponse)[vs[1].(int)]
	}).(ShareSubscriptionSynchronizationResponseOutput)
}

// A ShareSynchronization data transfer object.
type ShareSynchronizationResponse struct {
	// Email of the user who created the synchronization
	ConsumerEmail *string `pulumi:"consumerEmail"`
	// Name of the user who created the synchronization
	ConsumerName *string `pulumi:"consumerName"`
	// Tenant name of the consumer who created the synchronization
	ConsumerTenantName *string `pulumi:"consumerTenantName"`
	// synchronization duration
	DurationMs *int `pulumi:"durationMs"`
	// End time of synchronization
	EndTime *string `pulumi:"endTime"`
	// message of synchronization
	Message *string `pulumi:"message"`
	// start time of synchronization
	StartTime *string `pulumi:"startTime"`
	// Raw Status
	Status *string `pulumi:"status"`
	// Synchronization id
	SynchronizationId *string `pulumi:"synchronizationId"`
	// Synchronization mode
	SynchronizationMode string `pulumi:"synchronizationMode"`
}

// ShareSynchronizationResponseInput is an input type that accepts ShareSynchronizationResponseArgs and ShareSynchronizationResponseOutput values.
// You can construct a concrete instance of `ShareSynchronizationResponseInput` via:
//
//          ShareSynchronizationResponseArgs{...}
type ShareSynchronizationResponseInput interface {
	pulumi.Input

	ToShareSynchronizationResponseOutput() ShareSynchronizationResponseOutput
	ToShareSynchronizationResponseOutputWithContext(context.Context) ShareSynchronizationResponseOutput
}

// A ShareSynchronization data transfer object.
type ShareSynchronizationResponseArgs struct {
	// Email of the user who created the synchronization
	ConsumerEmail pulumi.StringPtrInput `pulumi:"consumerEmail"`
	// Name of the user who created the synchronization
	ConsumerName pulumi.StringPtrInput `pulumi:"consumerName"`
	// Tenant name of the consumer who created the synchronization
	ConsumerTenantName pulumi.StringPtrInput `pulumi:"consumerTenantName"`
	// synchronization duration
	DurationMs pulumi.IntPtrInput `pulumi:"durationMs"`
	// End time of synchronization
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// message of synchronization
	Message pulumi.StringPtrInput `pulumi:"message"`
	// start time of synchronization
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// Raw Status
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Synchronization id
	SynchronizationId pulumi.StringPtrInput `pulumi:"synchronizationId"`
	// Synchronization mode
	SynchronizationMode pulumi.StringInput `pulumi:"synchronizationMode"`
}

func (ShareSynchronizationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSynchronizationResponse)(nil)).Elem()
}

func (i ShareSynchronizationResponseArgs) ToShareSynchronizationResponseOutput() ShareSynchronizationResponseOutput {
	return i.ToShareSynchronizationResponseOutputWithContext(context.Background())
}

func (i ShareSynchronizationResponseArgs) ToShareSynchronizationResponseOutputWithContext(ctx context.Context) ShareSynchronizationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSynchronizationResponseOutput)
}

// ShareSynchronizationResponseArrayInput is an input type that accepts ShareSynchronizationResponseArray and ShareSynchronizationResponseArrayOutput values.
// You can construct a concrete instance of `ShareSynchronizationResponseArrayInput` via:
//
//          ShareSynchronizationResponseArray{ ShareSynchronizationResponseArgs{...} }
type ShareSynchronizationResponseArrayInput interface {
	pulumi.Input

	ToShareSynchronizationResponseArrayOutput() ShareSynchronizationResponseArrayOutput
	ToShareSynchronizationResponseArrayOutputWithContext(context.Context) ShareSynchronizationResponseArrayOutput
}

type ShareSynchronizationResponseArray []ShareSynchronizationResponseInput

func (ShareSynchronizationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShareSynchronizationResponse)(nil)).Elem()
}

func (i ShareSynchronizationResponseArray) ToShareSynchronizationResponseArrayOutput() ShareSynchronizationResponseArrayOutput {
	return i.ToShareSynchronizationResponseArrayOutputWithContext(context.Background())
}

func (i ShareSynchronizationResponseArray) ToShareSynchronizationResponseArrayOutputWithContext(ctx context.Context) ShareSynchronizationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSynchronizationResponseArrayOutput)
}

// A ShareSynchronization data transfer object.
type ShareSynchronizationResponseOutput struct{ *pulumi.OutputState }

func (ShareSynchronizationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSynchronizationResponse)(nil)).Elem()
}

func (o ShareSynchronizationResponseOutput) ToShareSynchronizationResponseOutput() ShareSynchronizationResponseOutput {
	return o
}

func (o ShareSynchronizationResponseOutput) ToShareSynchronizationResponseOutputWithContext(ctx context.Context) ShareSynchronizationResponseOutput {
	return o
}

// Email of the user who created the synchronization
func (o ShareSynchronizationResponseOutput) ConsumerEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShareSynchronizationResponse) *string { return v.ConsumerEmail }).(pulumi.StringPtrOutput)
}

// Name of the user who created the synchronization
func (o ShareSynchronizationResponseOutput) ConsumerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShareSynchronizationResponse) *string { return v.ConsumerName }).(pulumi.StringPtrOutput)
}

// Tenant name of the consumer who created the synchronization
func (o ShareSynchronizationResponseOutput) ConsumerTenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShareSynchronizationResponse) *string { return v.ConsumerTenantName }).(pulumi.StringPtrOutput)
}

// synchronization duration
func (o ShareSynchronizationResponseOutput) DurationMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ShareSynchronizationResponse) *int { return v.DurationMs }).(pulumi.IntPtrOutput)
}

// End time of synchronization
func (o ShareSynchronizationResponseOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShareSynchronizationResponse) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// message of synchronization
func (o ShareSynchronizationResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShareSynchronizationResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// start time of synchronization
func (o ShareSynchronizationResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShareSynchronizationResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Raw Status
func (o ShareSynchronizationResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShareSynchronizationResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Synchronization id
func (o ShareSynchronizationResponseOutput) SynchronizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShareSynchronizationResponse) *string { return v.SynchronizationId }).(pulumi.StringPtrOutput)
}

// Synchronization mode
func (o ShareSynchronizationResponseOutput) SynchronizationMode() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSynchronizationResponse) string { return v.SynchronizationMode }).(pulumi.StringOutput)
}

type ShareSynchronizationResponseArrayOutput struct{ *pulumi.OutputState }

func (ShareSynchronizationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShareSynchronizationResponse)(nil)).Elem()
}

func (o ShareSynchronizationResponseArrayOutput) ToShareSynchronizationResponseArrayOutput() ShareSynchronizationResponseArrayOutput {
	return o
}

func (o ShareSynchronizationResponseArrayOutput) ToShareSynchronizationResponseArrayOutputWithContext(ctx context.Context) ShareSynchronizationResponseArrayOutput {
	return o
}

func (o ShareSynchronizationResponseArrayOutput) Index(i pulumi.IntInput) ShareSynchronizationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShareSynchronizationResponse {
		return vs[0].([]ShareSynchronizationResponse)[vs[1].(int)]
	}).(ShareSynchronizationResponseOutput)
}

// Synchronization details at data set level
type SynchronizationDetailsResponse struct {
	// Id of data set
	DataSetId string `pulumi:"dataSetId"`
	// Type of the data set
	DataSetType string `pulumi:"dataSetType"`
	// Duration of data set level copy
	DurationMs int `pulumi:"durationMs"`
	// End time of data set level copy
	EndTime string `pulumi:"endTime"`
	// The number of files read from the source data set
	FilesRead int `pulumi:"filesRead"`
	// The number of files written into the sink data set
	FilesWritten int `pulumi:"filesWritten"`
	// Error message if any
	Message string `pulumi:"message"`
	// Name of the data set
	Name string `pulumi:"name"`
	// The number of files copied into the sink data set
	RowsCopied int `pulumi:"rowsCopied"`
	// The number of rows read from the source data set.
	RowsRead int `pulumi:"rowsRead"`
	// The size of the data read from the source data set in bytes
	SizeRead int `pulumi:"sizeRead"`
	// The size of the data written into the sink data set in bytes
	SizeWritten int `pulumi:"sizeWritten"`
	// Start time of data set level copy
	StartTime string `pulumi:"startTime"`
	// Raw Status
	Status string `pulumi:"status"`
	// The vCore units consumed for the data set synchronization
	VCore int `pulumi:"vCore"`
}

// SynchronizationDetailsResponseInput is an input type that accepts SynchronizationDetailsResponseArgs and SynchronizationDetailsResponseOutput values.
// You can construct a concrete instance of `SynchronizationDetailsResponseInput` via:
//
//          SynchronizationDetailsResponseArgs{...}
type SynchronizationDetailsResponseInput interface {
	pulumi.Input

	ToSynchronizationDetailsResponseOutput() SynchronizationDetailsResponseOutput
	ToSynchronizationDetailsResponseOutputWithContext(context.Context) SynchronizationDetailsResponseOutput
}

// Synchronization details at data set level
type SynchronizationDetailsResponseArgs struct {
	// Id of data set
	DataSetId pulumi.StringInput `pulumi:"dataSetId"`
	// Type of the data set
	DataSetType pulumi.StringInput `pulumi:"dataSetType"`
	// Duration of data set level copy
	DurationMs pulumi.IntInput `pulumi:"durationMs"`
	// End time of data set level copy
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The number of files read from the source data set
	FilesRead pulumi.IntInput `pulumi:"filesRead"`
	// The number of files written into the sink data set
	FilesWritten pulumi.IntInput `pulumi:"filesWritten"`
	// Error message if any
	Message pulumi.StringInput `pulumi:"message"`
	// Name of the data set
	Name pulumi.StringInput `pulumi:"name"`
	// The number of files copied into the sink data set
	RowsCopied pulumi.IntInput `pulumi:"rowsCopied"`
	// The number of rows read from the source data set.
	RowsRead pulumi.IntInput `pulumi:"rowsRead"`
	// The size of the data read from the source data set in bytes
	SizeRead pulumi.IntInput `pulumi:"sizeRead"`
	// The size of the data written into the sink data set in bytes
	SizeWritten pulumi.IntInput `pulumi:"sizeWritten"`
	// Start time of data set level copy
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Raw Status
	Status pulumi.StringInput `pulumi:"status"`
	// The vCore units consumed for the data set synchronization
	VCore pulumi.IntInput `pulumi:"vCore"`
}

func (SynchronizationDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SynchronizationDetailsResponse)(nil)).Elem()
}

func (i SynchronizationDetailsResponseArgs) ToSynchronizationDetailsResponseOutput() SynchronizationDetailsResponseOutput {
	return i.ToSynchronizationDetailsResponseOutputWithContext(context.Background())
}

func (i SynchronizationDetailsResponseArgs) ToSynchronizationDetailsResponseOutputWithContext(ctx context.Context) SynchronizationDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SynchronizationDetailsResponseOutput)
}

// SynchronizationDetailsResponseArrayInput is an input type that accepts SynchronizationDetailsResponseArray and SynchronizationDetailsResponseArrayOutput values.
// You can construct a concrete instance of `SynchronizationDetailsResponseArrayInput` via:
//
//          SynchronizationDetailsResponseArray{ SynchronizationDetailsResponseArgs{...} }
type SynchronizationDetailsResponseArrayInput interface {
	pulumi.Input

	ToSynchronizationDetailsResponseArrayOutput() SynchronizationDetailsResponseArrayOutput
	ToSynchronizationDetailsResponseArrayOutputWithContext(context.Context) SynchronizationDetailsResponseArrayOutput
}

type SynchronizationDetailsResponseArray []SynchronizationDetailsResponseInput

func (SynchronizationDetailsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SynchronizationDetailsResponse)(nil)).Elem()
}

func (i SynchronizationDetailsResponseArray) ToSynchronizationDetailsResponseArrayOutput() SynchronizationDetailsResponseArrayOutput {
	return i.ToSynchronizationDetailsResponseArrayOutputWithContext(context.Background())
}

func (i SynchronizationDetailsResponseArray) ToSynchronizationDetailsResponseArrayOutputWithContext(ctx context.Context) SynchronizationDetailsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SynchronizationDetailsResponseArrayOutput)
}

// Synchronization details at data set level
type SynchronizationDetailsResponseOutput struct{ *pulumi.OutputState }

func (SynchronizationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SynchronizationDetailsResponse)(nil)).Elem()
}

func (o SynchronizationDetailsResponseOutput) ToSynchronizationDetailsResponseOutput() SynchronizationDetailsResponseOutput {
	return o
}

func (o SynchronizationDetailsResponseOutput) ToSynchronizationDetailsResponseOutputWithContext(ctx context.Context) SynchronizationDetailsResponseOutput {
	return o
}

// Id of data set
func (o SynchronizationDetailsResponseOutput) DataSetId() pulumi.StringOutput {
	return o.ApplyT(func(v SynchronizationDetailsResponse) string { return v.DataSetId }).(pulumi.StringOutput)
}

// Type of the data set
func (o SynchronizationDetailsResponseOutput) DataSetType() pulumi.StringOutput {
	return o.ApplyT(func(v SynchronizationDetailsResponse) string { return v.DataSetType }).(pulumi.StringOutput)
}

// Duration of data set level copy
func (o SynchronizationDetailsResponseOutput) DurationMs() pulumi.IntOutput {
	return o.ApplyT(func(v SynchronizationDetailsResponse) int { return v.DurationMs }).(pulumi.IntOutput)
}

// End time of data set level copy
func (o SynchronizationDetailsResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v SynchronizationDetailsResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// The number of files read from the source data set
func (o SynchronizationDetailsResponseOutput) FilesRead() pulumi.IntOutput {
	return o.ApplyT(func(v SynchronizationDetailsResponse) int { return v.FilesRead }).(pulumi.IntOutput)
}

// The number of files written into the sink data set
func (o SynchronizationDetailsResponseOutput) FilesWritten() pulumi.IntOutput {
	return o.ApplyT(func(v SynchronizationDetailsResponse) int { return v.FilesWritten }).(pulumi.IntOutput)
}

// Error message if any
func (o SynchronizationDetailsResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v SynchronizationDetailsResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Name of the data set
func (o SynchronizationDetailsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SynchronizationDetailsResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The number of files copied into the sink data set
func (o SynchronizationDetailsResponseOutput) RowsCopied() pulumi.IntOutput {
	return o.ApplyT(func(v SynchronizationDetailsResponse) int { return v.RowsCopied }).(pulumi.IntOutput)
}

// The number of rows read from the source data set.
func (o SynchronizationDetailsResponseOutput) RowsRead() pulumi.IntOutput {
	return o.ApplyT(func(v SynchronizationDetailsResponse) int { return v.RowsRead }).(pulumi.IntOutput)
}

// The size of the data read from the source data set in bytes
func (o SynchronizationDetailsResponseOutput) SizeRead() pulumi.IntOutput {
	return o.ApplyT(func(v SynchronizationDetailsResponse) int { return v.SizeRead }).(pulumi.IntOutput)
}

// The size of the data written into the sink data set in bytes
func (o SynchronizationDetailsResponseOutput) SizeWritten() pulumi.IntOutput {
	return o.ApplyT(func(v SynchronizationDetailsResponse) int { return v.SizeWritten }).(pulumi.IntOutput)
}

// Start time of data set level copy
func (o SynchronizationDetailsResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v SynchronizationDetailsResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Raw Status
func (o SynchronizationDetailsResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SynchronizationDetailsResponse) string { return v.Status }).(pulumi.StringOutput)
}

// The vCore units consumed for the data set synchronization
func (o SynchronizationDetailsResponseOutput) VCore() pulumi.IntOutput {
	return o.ApplyT(func(v SynchronizationDetailsResponse) int { return v.VCore }).(pulumi.IntOutput)
}

type SynchronizationDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (SynchronizationDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SynchronizationDetailsResponse)(nil)).Elem()
}

func (o SynchronizationDetailsResponseArrayOutput) ToSynchronizationDetailsResponseArrayOutput() SynchronizationDetailsResponseArrayOutput {
	return o
}

func (o SynchronizationDetailsResponseArrayOutput) ToSynchronizationDetailsResponseArrayOutputWithContext(ctx context.Context) SynchronizationDetailsResponseArrayOutput {
	return o
}

func (o SynchronizationDetailsResponseArrayOutput) Index(i pulumi.IntInput) SynchronizationDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SynchronizationDetailsResponse {
		return vs[0].([]SynchronizationDetailsResponse)[vs[1].(int)]
	}).(SynchronizationDetailsResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ScheduledSourceSynchronizationSettingResponseOutput{})
	pulumi.RegisterOutputType(ScheduledSourceSynchronizationSettingResponseArrayOutput{})
	pulumi.RegisterOutputType(ShareSubscriptionSynchronizationResponseOutput{})
	pulumi.RegisterOutputType(ShareSubscriptionSynchronizationResponseArrayOutput{})
	pulumi.RegisterOutputType(ShareSynchronizationResponseOutput{})
	pulumi.RegisterOutputType(ShareSynchronizationResponseArrayOutput{})
	pulumi.RegisterOutputType(SynchronizationDetailsResponseOutput{})
	pulumi.RegisterOutputType(SynchronizationDetailsResponseArrayOutput{})
}
