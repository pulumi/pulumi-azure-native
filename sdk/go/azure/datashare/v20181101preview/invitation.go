// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20181101preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Invitation data transfer object.
//
// Deprecated: Version 2018-11-01-preview will be removed in v2 of the provider.
type Invitation struct {
	pulumi.CustomResourceState

	// unique invitation id
	InvitationId pulumi.StringOutput `pulumi:"invitationId"`
	// The status of the invitation.
	InvitationStatus pulumi.StringOutput `pulumi:"invitationStatus"`
	// Name of the azure resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The time the recipient responded to the invitation.
	RespondedAt pulumi.StringOutput `pulumi:"respondedAt"`
	// Gets the time at which the invitation was sent.
	SentAt pulumi.StringOutput `pulumi:"sentAt"`
	// The target Azure AD Id. Can't be combined with email.
	TargetActiveDirectoryId pulumi.StringPtrOutput `pulumi:"targetActiveDirectoryId"`
	// The email the invitation is directed to.
	TargetEmail pulumi.StringPtrOutput `pulumi:"targetEmail"`
	// The target user or application Id that invitation is being sent to.
	// Must be specified along TargetActiveDirectoryId. This enables sending
	// invitations to specific users or applications in an AD tenant.
	TargetObjectId pulumi.StringPtrOutput `pulumi:"targetObjectId"`
	// Type of the azure resource
	Type pulumi.StringOutput `pulumi:"type"`
	// Email of the user who created the resource
	UserEmail pulumi.StringOutput `pulumi:"userEmail"`
	// Name of the user who created the resource
	UserName pulumi.StringOutput `pulumi:"userName"`
}

// NewInvitation registers a new resource with the given unique name, arguments, and options.
func NewInvitation(ctx *pulumi.Context,
	name string, args *InvitationArgs, opts ...pulumi.ResourceOption) (*Invitation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ShareName == nil {
		return nil, errors.New("invalid value for required argument 'ShareName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:datashare:Invitation"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20191101:Invitation"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20200901:Invitation"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20201001preview:Invitation"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20210801:Invitation"),
		},
	})
	opts = append(opts, aliases)
	var resource Invitation
	err := ctx.RegisterResource("azure-native:datashare/v20181101preview:Invitation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInvitation gets an existing Invitation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInvitation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InvitationState, opts ...pulumi.ResourceOption) (*Invitation, error) {
	var resource Invitation
	err := ctx.ReadResource("azure-native:datashare/v20181101preview:Invitation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Invitation resources.
type invitationState struct {
}

type InvitationState struct {
}

func (InvitationState) ElementType() reflect.Type {
	return reflect.TypeOf((*invitationState)(nil)).Elem()
}

type invitationArgs struct {
	// The name of the share account.
	AccountName string `pulumi:"accountName"`
	// The name of the invitation.
	InvitationName *string `pulumi:"invitationName"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the share to send the invitation for.
	ShareName string `pulumi:"shareName"`
	// The target Azure AD Id. Can't be combined with email.
	TargetActiveDirectoryId *string `pulumi:"targetActiveDirectoryId"`
	// The email the invitation is directed to.
	TargetEmail *string `pulumi:"targetEmail"`
	// The target user or application Id that invitation is being sent to.
	// Must be specified along TargetActiveDirectoryId. This enables sending
	// invitations to specific users or applications in an AD tenant.
	TargetObjectId *string `pulumi:"targetObjectId"`
}

// The set of arguments for constructing a Invitation resource.
type InvitationArgs struct {
	// The name of the share account.
	AccountName pulumi.StringInput
	// The name of the invitation.
	InvitationName pulumi.StringPtrInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
	// The name of the share to send the invitation for.
	ShareName pulumi.StringInput
	// The target Azure AD Id. Can't be combined with email.
	TargetActiveDirectoryId pulumi.StringPtrInput
	// The email the invitation is directed to.
	TargetEmail pulumi.StringPtrInput
	// The target user or application Id that invitation is being sent to.
	// Must be specified along TargetActiveDirectoryId. This enables sending
	// invitations to specific users or applications in an AD tenant.
	TargetObjectId pulumi.StringPtrInput
}

func (InvitationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*invitationArgs)(nil)).Elem()
}

type InvitationInput interface {
	pulumi.Input

	ToInvitationOutput() InvitationOutput
	ToInvitationOutputWithContext(ctx context.Context) InvitationOutput
}

func (*Invitation) ElementType() reflect.Type {
	return reflect.TypeOf((**Invitation)(nil)).Elem()
}

func (i *Invitation) ToInvitationOutput() InvitationOutput {
	return i.ToInvitationOutputWithContext(context.Background())
}

func (i *Invitation) ToInvitationOutputWithContext(ctx context.Context) InvitationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationOutput)
}

type InvitationOutput struct{ *pulumi.OutputState }

func (InvitationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Invitation)(nil)).Elem()
}

func (o InvitationOutput) ToInvitationOutput() InvitationOutput {
	return o
}

func (o InvitationOutput) ToInvitationOutputWithContext(ctx context.Context) InvitationOutput {
	return o
}

// unique invitation id
func (o InvitationOutput) InvitationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Invitation) pulumi.StringOutput { return v.InvitationId }).(pulumi.StringOutput)
}

// The status of the invitation.
func (o InvitationOutput) InvitationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Invitation) pulumi.StringOutput { return v.InvitationStatus }).(pulumi.StringOutput)
}

// Name of the azure resource
func (o InvitationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Invitation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The time the recipient responded to the invitation.
func (o InvitationOutput) RespondedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Invitation) pulumi.StringOutput { return v.RespondedAt }).(pulumi.StringOutput)
}

// Gets the time at which the invitation was sent.
func (o InvitationOutput) SentAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Invitation) pulumi.StringOutput { return v.SentAt }).(pulumi.StringOutput)
}

// The target Azure AD Id. Can't be combined with email.
func (o InvitationOutput) TargetActiveDirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Invitation) pulumi.StringPtrOutput { return v.TargetActiveDirectoryId }).(pulumi.StringPtrOutput)
}

// The email the invitation is directed to.
func (o InvitationOutput) TargetEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Invitation) pulumi.StringPtrOutput { return v.TargetEmail }).(pulumi.StringPtrOutput)
}

// The target user or application Id that invitation is being sent to.
// Must be specified along TargetActiveDirectoryId. This enables sending
// invitations to specific users or applications in an AD tenant.
func (o InvitationOutput) TargetObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Invitation) pulumi.StringPtrOutput { return v.TargetObjectId }).(pulumi.StringPtrOutput)
}

// Type of the azure resource
func (o InvitationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Invitation) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Email of the user who created the resource
func (o InvitationOutput) UserEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *Invitation) pulumi.StringOutput { return v.UserEmail }).(pulumi.StringOutput)
}

// Name of the user who created the resource
func (o InvitationOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *Invitation) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(InvitationOutput{})
}
