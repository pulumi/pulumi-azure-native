// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20191101

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An Azure storage blob folder data set.
type BlobFolderDataSet struct {
	pulumi.CustomResourceState

	// Container that has the file path.
	ContainerName pulumi.StringOutput `pulumi:"containerName"`
	// Unique id for identifying a data set resource
	DataSetId pulumi.StringOutput `pulumi:"dataSetId"`
	// Kind of data set.
	// Expected value is 'BlobFolder'.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Name of the azure resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Prefix for blob folder
	Prefix pulumi.StringOutput `pulumi:"prefix"`
	// Resource group of storage account
	ResourceGroup pulumi.StringOutput `pulumi:"resourceGroup"`
	// Storage account name of the source data set
	StorageAccountName pulumi.StringOutput `pulumi:"storageAccountName"`
	// Subscription id of storage account
	SubscriptionId pulumi.StringOutput `pulumi:"subscriptionId"`
	// Type of the azure resource
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewBlobFolderDataSet registers a new resource with the given unique name, arguments, and options.
func NewBlobFolderDataSet(ctx *pulumi.Context,
	name string, args *BlobFolderDataSetArgs, opts ...pulumi.ResourceOption) (*BlobFolderDataSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.ContainerName == nil {
		return nil, errors.New("invalid value for required argument 'ContainerName'")
	}
	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	if args.Prefix == nil {
		return nil, errors.New("invalid value for required argument 'Prefix'")
	}
	if args.ResourceGroup == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroup'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ShareName == nil {
		return nil, errors.New("invalid value for required argument 'ShareName'")
	}
	if args.StorageAccountName == nil {
		return nil, errors.New("invalid value for required argument 'StorageAccountName'")
	}
	if args.SubscriptionId == nil {
		return nil, errors.New("invalid value for required argument 'SubscriptionId'")
	}
	args.Kind = pulumi.String("BlobFolder")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:datashare:BlobFolderDataSet"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20181101preview:BlobFolderDataSet"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20200901:BlobFolderDataSet"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20201001preview:BlobFolderDataSet"),
		},
		{
			Type: pulumi.String("azure-native:datashare/v20210801:BlobFolderDataSet"),
		},
	})
	opts = append(opts, aliases)
	var resource BlobFolderDataSet
	err := ctx.RegisterResource("azure-native:datashare/v20191101:BlobFolderDataSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBlobFolderDataSet gets an existing BlobFolderDataSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBlobFolderDataSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BlobFolderDataSetState, opts ...pulumi.ResourceOption) (*BlobFolderDataSet, error) {
	var resource BlobFolderDataSet
	err := ctx.ReadResource("azure-native:datashare/v20191101:BlobFolderDataSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BlobFolderDataSet resources.
type blobFolderDataSetState struct {
}

type BlobFolderDataSetState struct {
}

func (BlobFolderDataSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*blobFolderDataSetState)(nil)).Elem()
}

type blobFolderDataSetArgs struct {
	// The name of the share account.
	AccountName string `pulumi:"accountName"`
	// Container that has the file path.
	ContainerName string `pulumi:"containerName"`
	// The name of the dataSet.
	DataSetName *string `pulumi:"dataSetName"`
	// Kind of data set.
	// Expected value is 'BlobFolder'.
	Kind string `pulumi:"kind"`
	// Prefix for blob folder
	Prefix string `pulumi:"prefix"`
	// Resource group of storage account
	ResourceGroup string `pulumi:"resourceGroup"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the share to add the data set to.
	ShareName string `pulumi:"shareName"`
	// Storage account name of the source data set
	StorageAccountName string `pulumi:"storageAccountName"`
	// Subscription id of storage account
	SubscriptionId string `pulumi:"subscriptionId"`
}

// The set of arguments for constructing a BlobFolderDataSet resource.
type BlobFolderDataSetArgs struct {
	// The name of the share account.
	AccountName pulumi.StringInput
	// Container that has the file path.
	ContainerName pulumi.StringInput
	// The name of the dataSet.
	DataSetName pulumi.StringPtrInput
	// Kind of data set.
	// Expected value is 'BlobFolder'.
	Kind pulumi.StringInput
	// Prefix for blob folder
	Prefix pulumi.StringInput
	// Resource group of storage account
	ResourceGroup pulumi.StringInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
	// The name of the share to add the data set to.
	ShareName pulumi.StringInput
	// Storage account name of the source data set
	StorageAccountName pulumi.StringInput
	// Subscription id of storage account
	SubscriptionId pulumi.StringInput
}

func (BlobFolderDataSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*blobFolderDataSetArgs)(nil)).Elem()
}

type BlobFolderDataSetInput interface {
	pulumi.Input

	ToBlobFolderDataSetOutput() BlobFolderDataSetOutput
	ToBlobFolderDataSetOutputWithContext(ctx context.Context) BlobFolderDataSetOutput
}

func (*BlobFolderDataSet) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobFolderDataSet)(nil)).Elem()
}

func (i *BlobFolderDataSet) ToBlobFolderDataSetOutput() BlobFolderDataSetOutput {
	return i.ToBlobFolderDataSetOutputWithContext(context.Background())
}

func (i *BlobFolderDataSet) ToBlobFolderDataSetOutputWithContext(ctx context.Context) BlobFolderDataSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobFolderDataSetOutput)
}

type BlobFolderDataSetOutput struct{ *pulumi.OutputState }

func (BlobFolderDataSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobFolderDataSet)(nil)).Elem()
}

func (o BlobFolderDataSetOutput) ToBlobFolderDataSetOutput() BlobFolderDataSetOutput {
	return o
}

func (o BlobFolderDataSetOutput) ToBlobFolderDataSetOutputWithContext(ctx context.Context) BlobFolderDataSetOutput {
	return o
}

// Container that has the file path.
func (o BlobFolderDataSetOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v *BlobFolderDataSet) pulumi.StringOutput { return v.ContainerName }).(pulumi.StringOutput)
}

// Unique id for identifying a data set resource
func (o BlobFolderDataSetOutput) DataSetId() pulumi.StringOutput {
	return o.ApplyT(func(v *BlobFolderDataSet) pulumi.StringOutput { return v.DataSetId }).(pulumi.StringOutput)
}

// Kind of data set.
// Expected value is 'BlobFolder'.
func (o BlobFolderDataSetOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *BlobFolderDataSet) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Name of the azure resource
func (o BlobFolderDataSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BlobFolderDataSet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Prefix for blob folder
func (o BlobFolderDataSetOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v *BlobFolderDataSet) pulumi.StringOutput { return v.Prefix }).(pulumi.StringOutput)
}

// Resource group of storage account
func (o BlobFolderDataSetOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *BlobFolderDataSet) pulumi.StringOutput { return v.ResourceGroup }).(pulumi.StringOutput)
}

// Storage account name of the source data set
func (o BlobFolderDataSetOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *BlobFolderDataSet) pulumi.StringOutput { return v.StorageAccountName }).(pulumi.StringOutput)
}

// Subscription id of storage account
func (o BlobFolderDataSetOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v *BlobFolderDataSet) pulumi.StringOutput { return v.SubscriptionId }).(pulumi.StringOutput)
}

// Type of the azure resource
func (o BlobFolderDataSetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *BlobFolderDataSet) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(BlobFolderDataSetOutput{})
}
