// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20191101

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A type of trigger based on schedule
func LookupScheduledTrigger(ctx *pulumi.Context, args *LookupScheduledTriggerArgs, opts ...pulumi.InvokeOption) (*LookupScheduledTriggerResult, error) {
	var rv LookupScheduledTriggerResult
	err := ctx.Invoke("azure-native:datashare/v20191101:getScheduledTrigger", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupScheduledTriggerArgs struct {
	// The name of the share account.
	AccountName string `pulumi:"accountName"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the shareSubscription.
	ShareSubscriptionName string `pulumi:"shareSubscriptionName"`
	// The name of the trigger.
	TriggerName string `pulumi:"triggerName"`
}

// A type of trigger based on schedule
type LookupScheduledTriggerResult struct {
	// Time at which the trigger was created.
	CreatedAt string `pulumi:"createdAt"`
	// The resource id of the azure resource
	Id string `pulumi:"id"`
	// Kind of synchronization on trigger.
	// Expected value is 'ScheduleBased'.
	Kind string `pulumi:"kind"`
	// Name of the azure resource
	Name string `pulumi:"name"`
	// Gets the provisioning state
	ProvisioningState string `pulumi:"provisioningState"`
	// Recurrence Interval
	RecurrenceInterval string `pulumi:"recurrenceInterval"`
	// Synchronization mode
	SynchronizationMode *string `pulumi:"synchronizationMode"`
	// Synchronization time
	SynchronizationTime string `pulumi:"synchronizationTime"`
	// Gets the trigger state
	TriggerStatus string `pulumi:"triggerStatus"`
	// Type of the azure resource
	Type string `pulumi:"type"`
	// Name of the user who created the trigger.
	UserName string `pulumi:"userName"`
}
