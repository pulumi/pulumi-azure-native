// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200605preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The VirtualMachineTemplates resource definition.
func LookupVirtualMachineTemplate(ctx *pulumi.Context, args *LookupVirtualMachineTemplateArgs, opts ...pulumi.InvokeOption) (*LookupVirtualMachineTemplateResult, error) {
	var rv LookupVirtualMachineTemplateResult
	err := ctx.Invoke("azure-native:scvmm/v20200605preview:getVirtualMachineTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVirtualMachineTemplateArgs struct {
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the VirtualMachineTemplate.
	VirtualMachineTemplateName string `pulumi:"virtualMachineTemplateName"`
}

// The VirtualMachineTemplates resource definition.
type LookupVirtualMachineTemplateResult struct {
	// Gets or sets computer name.
	ComputerName string `pulumi:"computerName"`
	// Gets or sets the desired number of vCPUs for the vm.
	CpuCount int `pulumi:"cpuCount"`
	// Gets or sets the disks of the template.
	Disks []VirtualDiskResponse `pulumi:"disks"`
	// Gets or sets a value indicating whether to enable dynamic memory or not.
	DynamicMemoryEnabled string `pulumi:"dynamicMemoryEnabled"`
	// Gets or sets the max dynamic memory for the vm.
	DynamicMemoryMaxMB int `pulumi:"dynamicMemoryMaxMB"`
	// Gets or sets the min dynamic memory for the vm.
	DynamicMemoryMinMB int `pulumi:"dynamicMemoryMinMB"`
	// The extended location.
	ExtendedLocation ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Gets or sets the generation for the vm.
	Generation int `pulumi:"generation"`
	// Resource Id
	Id string `pulumi:"id"`
	// Gets or sets the inventory Item ID for the resource.
	InventoryItemId *string `pulumi:"inventoryItemId"`
	// Gets or sets a value indicating whether the vm template is customizable or not.
	IsCustomizable string `pulumi:"isCustomizable"`
	// Gets highly available property.
	IsHighlyAvailable string `pulumi:"isHighlyAvailable"`
	// Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
	LimitCpuForMigration string `pulumi:"limitCpuForMigration"`
	// Gets or sets the location.
	Location string `pulumi:"location"`
	// MemoryMB is the desired size of a virtual machine's memory, in MB.
	MemoryMB int `pulumi:"memoryMB"`
	// Resource Name
	Name string `pulumi:"name"`
	// Gets or sets the network interfaces of the template.
	NetworkInterfaces []NetworkInterfacesResponse `pulumi:"networkInterfaces"`
	// Gets or sets os name.
	OsName string `pulumi:"osName"`
	// Gets or sets the type of the os.
	OsType string `pulumi:"osType"`
	// Gets or sets the provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// The system data.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource Type
	Type string `pulumi:"type"`
	// Unique ID of the virtual machine template.
	Uuid *string `pulumi:"uuid"`
	// ARM Id of the vmmServer resource in which this resource resides.
	VmmServerId *string `pulumi:"vmmServerId"`
}

func LookupVirtualMachineTemplateOutput(ctx *pulumi.Context, args LookupVirtualMachineTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupVirtualMachineTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVirtualMachineTemplateResult, error) {
			args := v.(LookupVirtualMachineTemplateArgs)
			r, err := LookupVirtualMachineTemplate(ctx, &args, opts...)
			var s LookupVirtualMachineTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVirtualMachineTemplateResultOutput)
}

type LookupVirtualMachineTemplateOutputArgs struct {
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of the VirtualMachineTemplate.
	VirtualMachineTemplateName pulumi.StringInput `pulumi:"virtualMachineTemplateName"`
}

func (LookupVirtualMachineTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualMachineTemplateArgs)(nil)).Elem()
}

// The VirtualMachineTemplates resource definition.
type LookupVirtualMachineTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupVirtualMachineTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualMachineTemplateResult)(nil)).Elem()
}

func (o LookupVirtualMachineTemplateResultOutput) ToLookupVirtualMachineTemplateResultOutput() LookupVirtualMachineTemplateResultOutput {
	return o
}

func (o LookupVirtualMachineTemplateResultOutput) ToLookupVirtualMachineTemplateResultOutputWithContext(ctx context.Context) LookupVirtualMachineTemplateResultOutput {
	return o
}

// Gets or sets computer name.
func (o LookupVirtualMachineTemplateResultOutput) ComputerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) string { return v.ComputerName }).(pulumi.StringOutput)
}

// Gets or sets the desired number of vCPUs for the vm.
func (o LookupVirtualMachineTemplateResultOutput) CpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) int { return v.CpuCount }).(pulumi.IntOutput)
}

// Gets or sets the disks of the template.
func (o LookupVirtualMachineTemplateResultOutput) Disks() VirtualDiskResponseArrayOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) []VirtualDiskResponse { return v.Disks }).(VirtualDiskResponseArrayOutput)
}

// Gets or sets a value indicating whether to enable dynamic memory or not.
func (o LookupVirtualMachineTemplateResultOutput) DynamicMemoryEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) string { return v.DynamicMemoryEnabled }).(pulumi.StringOutput)
}

// Gets or sets the max dynamic memory for the vm.
func (o LookupVirtualMachineTemplateResultOutput) DynamicMemoryMaxMB() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) int { return v.DynamicMemoryMaxMB }).(pulumi.IntOutput)
}

// Gets or sets the min dynamic memory for the vm.
func (o LookupVirtualMachineTemplateResultOutput) DynamicMemoryMinMB() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) int { return v.DynamicMemoryMinMB }).(pulumi.IntOutput)
}

// The extended location.
func (o LookupVirtualMachineTemplateResultOutput) ExtendedLocation() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponseOutput)
}

// Gets or sets the generation for the vm.
func (o LookupVirtualMachineTemplateResultOutput) Generation() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) int { return v.Generation }).(pulumi.IntOutput)
}

// Resource Id
func (o LookupVirtualMachineTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// Gets or sets the inventory Item ID for the resource.
func (o LookupVirtualMachineTemplateResultOutput) InventoryItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) *string { return v.InventoryItemId }).(pulumi.StringPtrOutput)
}

// Gets or sets a value indicating whether the vm template is customizable or not.
func (o LookupVirtualMachineTemplateResultOutput) IsCustomizable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) string { return v.IsCustomizable }).(pulumi.StringOutput)
}

// Gets highly available property.
func (o LookupVirtualMachineTemplateResultOutput) IsHighlyAvailable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) string { return v.IsHighlyAvailable }).(pulumi.StringOutput)
}

// Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
func (o LookupVirtualMachineTemplateResultOutput) LimitCpuForMigration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) string { return v.LimitCpuForMigration }).(pulumi.StringOutput)
}

// Gets or sets the location.
func (o LookupVirtualMachineTemplateResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) string { return v.Location }).(pulumi.StringOutput)
}

// MemoryMB is the desired size of a virtual machine's memory, in MB.
func (o LookupVirtualMachineTemplateResultOutput) MemoryMB() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) int { return v.MemoryMB }).(pulumi.IntOutput)
}

// Resource Name
func (o LookupVirtualMachineTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// Gets or sets the network interfaces of the template.
func (o LookupVirtualMachineTemplateResultOutput) NetworkInterfaces() NetworkInterfacesResponseArrayOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) []NetworkInterfacesResponse { return v.NetworkInterfaces }).(NetworkInterfacesResponseArrayOutput)
}

// Gets or sets os name.
func (o LookupVirtualMachineTemplateResultOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) string { return v.OsName }).(pulumi.StringOutput)
}

// Gets or sets the type of the os.
func (o LookupVirtualMachineTemplateResultOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) string { return v.OsType }).(pulumi.StringOutput)
}

// Gets or sets the provisioning state.
func (o LookupVirtualMachineTemplateResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The system data.
func (o LookupVirtualMachineTemplateResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags
func (o LookupVirtualMachineTemplateResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource Type
func (o LookupVirtualMachineTemplateResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) string { return v.Type }).(pulumi.StringOutput)
}

// Unique ID of the virtual machine template.
func (o LookupVirtualMachineTemplateResultOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

// ARM Id of the vmmServer resource in which this resource resides.
func (o LookupVirtualMachineTemplateResultOutput) VmmServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineTemplateResult) *string { return v.VmmServerId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVirtualMachineTemplateResultOutput{})
}
