// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190701preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Azure DevOps Pipeline used to configure Continuous Integration (CI) & Continuous Delivery (CD) for Azure resources.
//
// Deprecated: Version 2019-07-01-preview will be removed in v2 of the provider.
func LookupPipeline(ctx *pulumi.Context, args *LookupPipelineArgs, opts ...pulumi.InvokeOption) (*LookupPipelineResult, error) {
	var rv LookupPipelineResult
	err := ctx.Invoke("azure-native:devops/v20190701preview:getPipeline", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPipelineArgs struct {
	// The name of the Azure Pipeline resource in ARM.
	PipelineName string `pulumi:"pipelineName"`
	// Name of the resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Azure DevOps Pipeline used to configure Continuous Integration (CI) & Continuous Delivery (CD) for Azure resources.
type LookupPipelineResult struct {
	// Configuration used to bootstrap the Pipeline.
	BootstrapConfiguration BootstrapConfigurationResponse `pulumi:"bootstrapConfiguration"`
	// Resource Id
	Id string `pulumi:"id"`
	// Resource Location
	Location *string `pulumi:"location"`
	// Resource Name
	Name string `pulumi:"name"`
	// Reference to the Azure DevOps Organization containing the Pipeline.
	Organization OrganizationReferenceResponse `pulumi:"organization"`
	// Unique identifier of the Azure Pipeline within the Azure DevOps Project.
	PipelineId int `pulumi:"pipelineId"`
	// Reference to the Azure DevOps Project containing the Pipeline.
	Project ProjectReferenceResponse `pulumi:"project"`
	// Resource Tags
	Tags map[string]string `pulumi:"tags"`
	// Resource Type
	Type string `pulumi:"type"`
}

func LookupPipelineOutput(ctx *pulumi.Context, args LookupPipelineOutputArgs, opts ...pulumi.InvokeOption) LookupPipelineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPipelineResult, error) {
			args := v.(LookupPipelineArgs)
			r, err := LookupPipeline(ctx, &args, opts...)
			var s LookupPipelineResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPipelineResultOutput)
}

type LookupPipelineOutputArgs struct {
	// The name of the Azure Pipeline resource in ARM.
	PipelineName pulumi.StringInput `pulumi:"pipelineName"`
	// Name of the resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupPipelineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPipelineArgs)(nil)).Elem()
}

// Azure DevOps Pipeline used to configure Continuous Integration (CI) & Continuous Delivery (CD) for Azure resources.
type LookupPipelineResultOutput struct{ *pulumi.OutputState }

func (LookupPipelineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPipelineResult)(nil)).Elem()
}

func (o LookupPipelineResultOutput) ToLookupPipelineResultOutput() LookupPipelineResultOutput {
	return o
}

func (o LookupPipelineResultOutput) ToLookupPipelineResultOutputWithContext(ctx context.Context) LookupPipelineResultOutput {
	return o
}

// Configuration used to bootstrap the Pipeline.
func (o LookupPipelineResultOutput) BootstrapConfiguration() BootstrapConfigurationResponseOutput {
	return o.ApplyT(func(v LookupPipelineResult) BootstrapConfigurationResponse { return v.BootstrapConfiguration }).(BootstrapConfigurationResponseOutput)
}

// Resource Id
func (o LookupPipelineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource Location
func (o LookupPipelineResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPipelineResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource Name
func (o LookupPipelineResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.Name }).(pulumi.StringOutput)
}

// Reference to the Azure DevOps Organization containing the Pipeline.
func (o LookupPipelineResultOutput) Organization() OrganizationReferenceResponseOutput {
	return o.ApplyT(func(v LookupPipelineResult) OrganizationReferenceResponse { return v.Organization }).(OrganizationReferenceResponseOutput)
}

// Unique identifier of the Azure Pipeline within the Azure DevOps Project.
func (o LookupPipelineResultOutput) PipelineId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPipelineResult) int { return v.PipelineId }).(pulumi.IntOutput)
}

// Reference to the Azure DevOps Project containing the Pipeline.
func (o LookupPipelineResultOutput) Project() ProjectReferenceResponseOutput {
	return o.ApplyT(func(v LookupPipelineResult) ProjectReferenceResponse { return v.Project }).(ProjectReferenceResponseOutput)
}

// Resource Tags
func (o LookupPipelineResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPipelineResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource Type
func (o LookupPipelineResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPipelineResultOutput{})
}
