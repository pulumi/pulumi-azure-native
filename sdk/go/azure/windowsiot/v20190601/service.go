// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190601

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The description of the Windows IoT Device Service.
type Service struct {
	pulumi.CustomResourceState

	// Windows IoT Device Service OEM AAD domain
	AdminDomainName pulumi.StringPtrOutput `pulumi:"adminDomainName"`
	// Windows IoT Device Service ODM AAD domain
	BillingDomainName pulumi.StringPtrOutput `pulumi:"billingDomainName"`
	// The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// The Azure Region where the resource lives
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Windows IoT Device Service notes.
	Notes pulumi.StringPtrOutput `pulumi:"notes"`
	// Windows IoT Device Service device allocation,
	Quantity pulumi.IntPtrOutput `pulumi:"quantity"`
	// Windows IoT Device Service start date,
	StartDate pulumi.StringOutput `pulumi:"startDate"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewService registers a new resource with the given unique name, arguments, and options.
func NewService(ctx *pulumi.Context,
	name string, args *ServiceArgs, opts ...pulumi.ResourceOption) (*Service, error) {
	if args == nil || args.DeviceName == nil {
		return nil, errors.New("missing required argument 'DeviceName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &ServiceArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:windowsiot/latest:Service"),
		},
		{
			Type: pulumi.String("azure-nextgen:windowsiot/v20180216preview:Service"),
		},
	})
	opts = append(opts, aliases)
	var resource Service
	err := ctx.RegisterResource("azure-nextgen:windowsiot/v20190601:Service", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetService gets an existing Service resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceState, opts ...pulumi.ResourceOption) (*Service, error) {
	var resource Service
	err := ctx.ReadResource("azure-nextgen:windowsiot/v20190601:Service", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Service resources.
type serviceState struct {
	// Windows IoT Device Service OEM AAD domain
	AdminDomainName *string `pulumi:"adminDomainName"`
	// Windows IoT Device Service ODM AAD domain
	BillingDomainName *string `pulumi:"billingDomainName"`
	// The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.
	Etag *string `pulumi:"etag"`
	// The Azure Region where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// Windows IoT Device Service notes.
	Notes *string `pulumi:"notes"`
	// Windows IoT Device Service device allocation,
	Quantity *int `pulumi:"quantity"`
	// Windows IoT Device Service start date,
	StartDate *string `pulumi:"startDate"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

type ServiceState struct {
	// Windows IoT Device Service OEM AAD domain
	AdminDomainName pulumi.StringPtrInput
	// Windows IoT Device Service ODM AAD domain
	BillingDomainName pulumi.StringPtrInput
	// The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.
	Etag pulumi.StringPtrInput
	// The Azure Region where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource
	Name pulumi.StringPtrInput
	// Windows IoT Device Service notes.
	Notes pulumi.StringPtrInput
	// Windows IoT Device Service device allocation,
	Quantity pulumi.IntPtrInput
	// Windows IoT Device Service start date,
	StartDate pulumi.StringPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The type of the resource.
	Type pulumi.StringPtrInput
}

func (ServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceState)(nil)).Elem()
}

type serviceArgs struct {
	// Windows IoT Device Service OEM AAD domain
	AdminDomainName *string `pulumi:"adminDomainName"`
	// Windows IoT Device Service ODM AAD domain
	BillingDomainName *string `pulumi:"billingDomainName"`
	// The name of the Windows IoT Device Service.
	DeviceName string `pulumi:"deviceName"`
	// Windows IoT Device Service notes.
	Notes *string `pulumi:"notes"`
	// Windows IoT Device Service device allocation,
	Quantity *int `pulumi:"quantity"`
	// The name of the resource group that contains the Windows IoT Device Service.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a Service resource.
type ServiceArgs struct {
	// Windows IoT Device Service OEM AAD domain
	AdminDomainName pulumi.StringPtrInput
	// Windows IoT Device Service ODM AAD domain
	BillingDomainName pulumi.StringPtrInput
	// The name of the Windows IoT Device Service.
	DeviceName pulumi.StringInput
	// Windows IoT Device Service notes.
	Notes pulumi.StringPtrInput
	// Windows IoT Device Service device allocation,
	Quantity pulumi.IntPtrInput
	// The name of the resource group that contains the Windows IoT Device Service.
	ResourceGroupName pulumi.StringInput
}

func (ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceArgs)(nil)).Elem()
}
