// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20170605preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Server Endpoint object.
//
// Deprecated: Version 2017-06-05-preview will be removed in v2 of the provider.
func LookupServerEndpoint(ctx *pulumi.Context, args *LookupServerEndpointArgs, opts ...pulumi.InvokeOption) (*LookupServerEndpointResult, error) {
	var rv LookupServerEndpointResult
	err := ctx.Invoke("azure-native:storagesync/v20170605preview:getServerEndpoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupServerEndpointArgs struct {
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of Server Endpoint object.
	ServerEndpointName string `pulumi:"serverEndpointName"`
	// Name of Storage Sync Service resource.
	StorageSyncServiceName string `pulumi:"storageSyncServiceName"`
	// Name of Sync Group resource.
	SyncGroupName string `pulumi:"syncGroupName"`
}

// Server Endpoint object.
type LookupServerEndpointResult struct {
	// Bytes in progress
	ByteProgress *int `pulumi:"byteProgress"`
	// Bytes total
	ByteTotal *int `pulumi:"byteTotal"`
	// Cloud Tiering.
	CloudTiering *string `pulumi:"cloudTiering"`
	// current progress type.
	CurrentProgressType *string `pulumi:"currentProgressType"`
	// Friendly Name
	FriendlyName *string `pulumi:"friendlyName"`
	// The id of the resource.
	Id string `pulumi:"id"`
	// Item download error count.
	ItemDownloadErrorCount *int `pulumi:"itemDownloadErrorCount"`
	// Item Progress Count
	ItemProgressCount *int `pulumi:"itemProgressCount"`
	// Item Total Count
	ItemTotalCount *int `pulumi:"itemTotalCount"`
	// Item Upload Error Count.
	ItemUploadErrorCount *int `pulumi:"itemUploadErrorCount"`
	// Last Sync Success
	LastSyncSuccess *string `pulumi:"lastSyncSuccess"`
	// ServerEndpoint lastWorkflowId
	LastWorkflowId *string `pulumi:"lastWorkflowId"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// ServerEndpoint Provisioning State
	ProvisioningState *string `pulumi:"provisioningState"`
	// Server Local path.
	ServerLocalPath *string `pulumi:"serverLocalPath"`
	// Server Resource Id.
	ServerResourceId *string `pulumi:"serverResourceId"`
	// sync error context.
	SyncErrorContext *string `pulumi:"syncErrorContext"`
	// Sync Error Direction.
	SyncErrorDirection *string `pulumi:"syncErrorDirection"`
	// Sync Error State
	SyncErrorState *string `pulumi:"syncErrorState"`
	// Sync Error State Timestamp
	SyncErrorStateTimestamp *string `pulumi:"syncErrorStateTimestamp"`
	// Total progress
	TotalProgress *int `pulumi:"totalProgress"`
	// The type of the resource
	Type string `pulumi:"type"`
	// Level of free space to be maintained by Cloud Tiering if it is enabled.
	VolumeFreeSpacePercent *int `pulumi:"volumeFreeSpacePercent"`
}

func LookupServerEndpointOutput(ctx *pulumi.Context, args LookupServerEndpointOutputArgs, opts ...pulumi.InvokeOption) LookupServerEndpointResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServerEndpointResult, error) {
			args := v.(LookupServerEndpointArgs)
			r, err := LookupServerEndpoint(ctx, &args, opts...)
			var s LookupServerEndpointResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServerEndpointResultOutput)
}

type LookupServerEndpointOutputArgs struct {
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of Server Endpoint object.
	ServerEndpointName pulumi.StringInput `pulumi:"serverEndpointName"`
	// Name of Storage Sync Service resource.
	StorageSyncServiceName pulumi.StringInput `pulumi:"storageSyncServiceName"`
	// Name of Sync Group resource.
	SyncGroupName pulumi.StringInput `pulumi:"syncGroupName"`
}

func (LookupServerEndpointOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerEndpointArgs)(nil)).Elem()
}

// Server Endpoint object.
type LookupServerEndpointResultOutput struct{ *pulumi.OutputState }

func (LookupServerEndpointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerEndpointResult)(nil)).Elem()
}

func (o LookupServerEndpointResultOutput) ToLookupServerEndpointResultOutput() LookupServerEndpointResultOutput {
	return o
}

func (o LookupServerEndpointResultOutput) ToLookupServerEndpointResultOutputWithContext(ctx context.Context) LookupServerEndpointResultOutput {
	return o
}

// Bytes in progress
func (o LookupServerEndpointResultOutput) ByteProgress() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *int { return v.ByteProgress }).(pulumi.IntPtrOutput)
}

// Bytes total
func (o LookupServerEndpointResultOutput) ByteTotal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *int { return v.ByteTotal }).(pulumi.IntPtrOutput)
}

// Cloud Tiering.
func (o LookupServerEndpointResultOutput) CloudTiering() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *string { return v.CloudTiering }).(pulumi.StringPtrOutput)
}

// current progress type.
func (o LookupServerEndpointResultOutput) CurrentProgressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *string { return v.CurrentProgressType }).(pulumi.StringPtrOutput)
}

// Friendly Name
func (o LookupServerEndpointResultOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The id of the resource.
func (o LookupServerEndpointResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) string { return v.Id }).(pulumi.StringOutput)
}

// Item download error count.
func (o LookupServerEndpointResultOutput) ItemDownloadErrorCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *int { return v.ItemDownloadErrorCount }).(pulumi.IntPtrOutput)
}

// Item Progress Count
func (o LookupServerEndpointResultOutput) ItemProgressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *int { return v.ItemProgressCount }).(pulumi.IntPtrOutput)
}

// Item Total Count
func (o LookupServerEndpointResultOutput) ItemTotalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *int { return v.ItemTotalCount }).(pulumi.IntPtrOutput)
}

// Item Upload Error Count.
func (o LookupServerEndpointResultOutput) ItemUploadErrorCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *int { return v.ItemUploadErrorCount }).(pulumi.IntPtrOutput)
}

// Last Sync Success
func (o LookupServerEndpointResultOutput) LastSyncSuccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *string { return v.LastSyncSuccess }).(pulumi.StringPtrOutput)
}

// ServerEndpoint lastWorkflowId
func (o LookupServerEndpointResultOutput) LastWorkflowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *string { return v.LastWorkflowId }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o LookupServerEndpointResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) string { return v.Name }).(pulumi.StringOutput)
}

// ServerEndpoint Provisioning State
func (o LookupServerEndpointResultOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Server Local path.
func (o LookupServerEndpointResultOutput) ServerLocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *string { return v.ServerLocalPath }).(pulumi.StringPtrOutput)
}

// Server Resource Id.
func (o LookupServerEndpointResultOutput) ServerResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *string { return v.ServerResourceId }).(pulumi.StringPtrOutput)
}

// sync error context.
func (o LookupServerEndpointResultOutput) SyncErrorContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *string { return v.SyncErrorContext }).(pulumi.StringPtrOutput)
}

// Sync Error Direction.
func (o LookupServerEndpointResultOutput) SyncErrorDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *string { return v.SyncErrorDirection }).(pulumi.StringPtrOutput)
}

// Sync Error State
func (o LookupServerEndpointResultOutput) SyncErrorState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *string { return v.SyncErrorState }).(pulumi.StringPtrOutput)
}

// Sync Error State Timestamp
func (o LookupServerEndpointResultOutput) SyncErrorStateTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *string { return v.SyncErrorStateTimestamp }).(pulumi.StringPtrOutput)
}

// Total progress
func (o LookupServerEndpointResultOutput) TotalProgress() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *int { return v.TotalProgress }).(pulumi.IntPtrOutput)
}

// The type of the resource
func (o LookupServerEndpointResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) string { return v.Type }).(pulumi.StringOutput)
}

// Level of free space to be maintained by Cloud Tiering if it is enabled.
func (o LookupServerEndpointResultOutput) VolumeFreeSpacePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupServerEndpointResult) *int { return v.VolumeFreeSpacePercent }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerEndpointResultOutput{})
}
