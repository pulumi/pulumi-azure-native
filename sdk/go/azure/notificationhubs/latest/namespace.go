// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Description of a Namespace resource.
type Namespace struct {
	pulumi.CustomResourceState

	// The time the namespace was created.
	CreatedAt pulumi.StringPtrOutput `pulumi:"createdAt"`
	// Whether or not the namespace is set as Critical.
	Critical pulumi.BoolPtrOutput `pulumi:"critical"`
	// Data center for the namespace
	DataCenter pulumi.StringPtrOutput `pulumi:"dataCenter"`
	// Whether or not the namespace is currently enabled.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Resource location
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Identifier for Azure Insights metrics
	MetricId pulumi.StringOutput `pulumi:"metricId"`
	// Resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// The namespace type.
	NamespaceType pulumi.StringPtrOutput `pulumi:"namespaceType"`
	// Provisioning state of the Namespace.
	ProvisioningState pulumi.StringPtrOutput `pulumi:"provisioningState"`
	// Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
	Region pulumi.StringPtrOutput `pulumi:"region"`
	// ScaleUnit where the namespace gets created
	ScaleUnit pulumi.StringPtrOutput `pulumi:"scaleUnit"`
	// Endpoint you can use to perform NotificationHub operations.
	ServiceBusEndpoint pulumi.StringPtrOutput `pulumi:"serviceBusEndpoint"`
	// The sku of the created namespace
	Sku SkuResponsePtrOutput `pulumi:"sku"`
	// Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// The Id of the Azure subscription associated with the namespace.
	SubscriptionId pulumi.StringPtrOutput `pulumi:"subscriptionId"`
	// Resource tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
	// The time the namespace was updated.
	UpdatedAt pulumi.StringPtrOutput `pulumi:"updatedAt"`
}

// NewNamespace registers a new resource with the given unique name, arguments, and options.
func NewNamespace(ctx *pulumi.Context,
	name string, args *NamespaceArgs, opts ...pulumi.ResourceOption) (*Namespace, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.NamespaceName == nil {
		return nil, errors.New("missing required argument 'NamespaceName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &NamespaceArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:notificationhubs/v20140901:Namespace"),
		},
		{
			Type: pulumi.String("azure-nextgen:notificationhubs/v20160301:Namespace"),
		},
		{
			Type: pulumi.String("azure-nextgen:notificationhubs/v20170401:Namespace"),
		},
	})
	opts = append(opts, aliases)
	var resource Namespace
	err := ctx.RegisterResource("azure-nextgen:notificationhubs/latest:Namespace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNamespace gets an existing Namespace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamespace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NamespaceState, opts ...pulumi.ResourceOption) (*Namespace, error) {
	var resource Namespace
	err := ctx.ReadResource("azure-nextgen:notificationhubs/latest:Namespace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Namespace resources.
type namespaceState struct {
	// The time the namespace was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Whether or not the namespace is set as Critical.
	Critical *bool `pulumi:"critical"`
	// Data center for the namespace
	DataCenter *string `pulumi:"dataCenter"`
	// Whether or not the namespace is currently enabled.
	Enabled *bool `pulumi:"enabled"`
	// Resource location
	Location *string `pulumi:"location"`
	// Identifier for Azure Insights metrics
	MetricId *string `pulumi:"metricId"`
	// Resource name
	Name *string `pulumi:"name"`
	// The namespace type.
	NamespaceType *string `pulumi:"namespaceType"`
	// Provisioning state of the Namespace.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
	Region *string `pulumi:"region"`
	// ScaleUnit where the namespace gets created
	ScaleUnit *string `pulumi:"scaleUnit"`
	// Endpoint you can use to perform NotificationHub operations.
	ServiceBusEndpoint *string `pulumi:"serviceBusEndpoint"`
	// The sku of the created namespace
	Sku *SkuResponse `pulumi:"sku"`
	// Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
	Status *string `pulumi:"status"`
	// The Id of the Azure subscription associated with the namespace.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
	// The time the namespace was updated.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type NamespaceState struct {
	// The time the namespace was created.
	CreatedAt pulumi.StringPtrInput
	// Whether or not the namespace is set as Critical.
	Critical pulumi.BoolPtrInput
	// Data center for the namespace
	DataCenter pulumi.StringPtrInput
	// Whether or not the namespace is currently enabled.
	Enabled pulumi.BoolPtrInput
	// Resource location
	Location pulumi.StringPtrInput
	// Identifier for Azure Insights metrics
	MetricId pulumi.StringPtrInput
	// Resource name
	Name pulumi.StringPtrInput
	// The namespace type.
	NamespaceType pulumi.StringPtrInput
	// Provisioning state of the Namespace.
	ProvisioningState pulumi.StringPtrInput
	// Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
	Region pulumi.StringPtrInput
	// ScaleUnit where the namespace gets created
	ScaleUnit pulumi.StringPtrInput
	// Endpoint you can use to perform NotificationHub operations.
	ServiceBusEndpoint pulumi.StringPtrInput
	// The sku of the created namespace
	Sku SkuResponsePtrInput
	// Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
	Status pulumi.StringPtrInput
	// The Id of the Azure subscription associated with the namespace.
	SubscriptionId pulumi.StringPtrInput
	// Resource tags
	Tags pulumi.StringMapInput
	// Resource type
	Type pulumi.StringPtrInput
	// The time the namespace was updated.
	UpdatedAt pulumi.StringPtrInput
}

func (NamespaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceState)(nil)).Elem()
}

type namespaceArgs struct {
	// The time the namespace was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Whether or not the namespace is set as Critical.
	Critical *bool `pulumi:"critical"`
	// Data center for the namespace
	DataCenter *string `pulumi:"dataCenter"`
	// Whether or not the namespace is currently enabled.
	Enabled *bool `pulumi:"enabled"`
	// Resource location
	Location string `pulumi:"location"`
	// The name of the namespace.
	Name *string `pulumi:"name"`
	// The namespace name.
	NamespaceName string `pulumi:"namespaceName"`
	// The namespace type.
	NamespaceType *string `pulumi:"namespaceType"`
	// Provisioning state of the Namespace.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
	Region *string `pulumi:"region"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// ScaleUnit where the namespace gets created
	ScaleUnit *string `pulumi:"scaleUnit"`
	// Endpoint you can use to perform NotificationHub operations.
	ServiceBusEndpoint *string `pulumi:"serviceBusEndpoint"`
	// The sku of the created namespace
	Sku *Sku `pulumi:"sku"`
	// Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
	Status *string `pulumi:"status"`
	// The Id of the Azure subscription associated with the namespace.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// The time the namespace was updated.
	UpdatedAt *string `pulumi:"updatedAt"`
}

// The set of arguments for constructing a Namespace resource.
type NamespaceArgs struct {
	// The time the namespace was created.
	CreatedAt pulumi.StringPtrInput
	// Whether or not the namespace is set as Critical.
	Critical pulumi.BoolPtrInput
	// Data center for the namespace
	DataCenter pulumi.StringPtrInput
	// Whether or not the namespace is currently enabled.
	Enabled pulumi.BoolPtrInput
	// Resource location
	Location pulumi.StringInput
	// The name of the namespace.
	Name pulumi.StringPtrInput
	// The namespace name.
	NamespaceName pulumi.StringInput
	// The namespace type.
	NamespaceType pulumi.StringPtrInput
	// Provisioning state of the Namespace.
	ProvisioningState pulumi.StringPtrInput
	// Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
	Region pulumi.StringPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// ScaleUnit where the namespace gets created
	ScaleUnit pulumi.StringPtrInput
	// Endpoint you can use to perform NotificationHub operations.
	ServiceBusEndpoint pulumi.StringPtrInput
	// The sku of the created namespace
	Sku SkuPtrInput
	// Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
	Status pulumi.StringPtrInput
	// The Id of the Azure subscription associated with the namespace.
	SubscriptionId pulumi.StringPtrInput
	// Resource tags
	Tags pulumi.StringMapInput
	// The time the namespace was updated.
	UpdatedAt pulumi.StringPtrInput
}

func (NamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceArgs)(nil)).Elem()
}
