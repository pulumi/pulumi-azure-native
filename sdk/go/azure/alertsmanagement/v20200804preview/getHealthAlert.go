// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200804preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The health alert resource.
func LookupHealthAlert(ctx *pulumi.Context, args *LookupHealthAlertArgs, opts ...pulumi.InvokeOption) (*LookupHealthAlertResult, error) {
	var rv LookupHealthAlertResult
	err := ctx.Invoke("azure-native:alertsmanagement/v20200804preview:getHealthAlert", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupHealthAlertArgs struct {
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the rule.
	RuleName string `pulumi:"ruleName"`
}

// The health alert resource.
type LookupHealthAlertResult struct {
	// the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.
	Actions []HealthAlertActionResponse `pulumi:"actions"`
	// defines the specific alert criteria information.
	Criteria HealthAlertCriteriaResponse `pulumi:"criteria"`
	// the description of the health alert that will be included in the alert email.
	Description string `pulumi:"description"`
	// the flag that indicates whether the health alert is enabled.
	Enabled bool `pulumi:"enabled"`
	// Azure resource Id
	Id string `pulumi:"id"`
	// Last time the rule was updated in ISO8601 format.
	LastUpdatedTime string `pulumi:"lastUpdatedTime"`
	// Resource location
	Location string `pulumi:"location"`
	// Azure resource name
	Name string `pulumi:"name"`
	// the list of resource id's that this health alert is scoped to.
	Scopes []string `pulumi:"scopes"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Azure resource type
	Type string `pulumi:"type"`
}

func LookupHealthAlertOutput(ctx *pulumi.Context, args LookupHealthAlertOutputArgs, opts ...pulumi.InvokeOption) LookupHealthAlertResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupHealthAlertResult, error) {
			args := v.(LookupHealthAlertArgs)
			r, err := LookupHealthAlert(ctx, &args, opts...)
			return *r, err
		}).(LookupHealthAlertResultOutput)
}

type LookupHealthAlertOutputArgs struct {
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the rule.
	RuleName pulumi.StringInput `pulumi:"ruleName"`
}

func (LookupHealthAlertOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHealthAlertArgs)(nil)).Elem()
}

// The health alert resource.
type LookupHealthAlertResultOutput struct{ *pulumi.OutputState }

func (LookupHealthAlertResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHealthAlertResult)(nil)).Elem()
}

func (o LookupHealthAlertResultOutput) ToLookupHealthAlertResultOutput() LookupHealthAlertResultOutput {
	return o
}

func (o LookupHealthAlertResultOutput) ToLookupHealthAlertResultOutputWithContext(ctx context.Context) LookupHealthAlertResultOutput {
	return o
}

// the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.
func (o LookupHealthAlertResultOutput) Actions() HealthAlertActionResponseArrayOutput {
	return o.ApplyT(func(v LookupHealthAlertResult) []HealthAlertActionResponse { return v.Actions }).(HealthAlertActionResponseArrayOutput)
}

// defines the specific alert criteria information.
func (o LookupHealthAlertResultOutput) Criteria() HealthAlertCriteriaResponseOutput {
	return o.ApplyT(func(v LookupHealthAlertResult) HealthAlertCriteriaResponse { return v.Criteria }).(HealthAlertCriteriaResponseOutput)
}

// the description of the health alert that will be included in the alert email.
func (o LookupHealthAlertResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthAlertResult) string { return v.Description }).(pulumi.StringOutput)
}

// the flag that indicates whether the health alert is enabled.
func (o LookupHealthAlertResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupHealthAlertResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Azure resource Id
func (o LookupHealthAlertResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthAlertResult) string { return v.Id }).(pulumi.StringOutput)
}

// Last time the rule was updated in ISO8601 format.
func (o LookupHealthAlertResultOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthAlertResult) string { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// Resource location
func (o LookupHealthAlertResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthAlertResult) string { return v.Location }).(pulumi.StringOutput)
}

// Azure resource name
func (o LookupHealthAlertResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthAlertResult) string { return v.Name }).(pulumi.StringOutput)
}

// the list of resource id's that this health alert is scoped to.
func (o LookupHealthAlertResultOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupHealthAlertResult) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// Resource tags
func (o LookupHealthAlertResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupHealthAlertResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Azure resource type
func (o LookupHealthAlertResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthAlertResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupHealthAlertResultOutput{})
}
