// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package machinelearningexperimentation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An object that represents a machine learning project.
// API Version: 2017-05-01-preview.
func LookupProject(ctx *pulumi.Context, args *LookupProjectArgs, opts ...pulumi.InvokeOption) (*LookupProjectResult, error) {
	var rv LookupProjectResult
	err := ctx.Invoke("azure-native:machinelearningexperimentation:getProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupProjectArgs struct {
	// The name of the machine learning team account.
	AccountName string `pulumi:"accountName"`
	// The name of the machine learning project under a team account workspace.
	ProjectName string `pulumi:"projectName"`
	// The name of the resource group to which the machine learning team account belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the machine learning team account workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// An object that represents a machine learning project.
type LookupProjectResult struct {
	// The immutable id of the team account which contains this project.
	AccountId string `pulumi:"accountId"`
	// The creation date of the project in ISO8601 format.
	CreationDate string `pulumi:"creationDate"`
	// The description of this project.
	Description *string `pulumi:"description"`
	// The friendly name for this project.
	FriendlyName string `pulumi:"friendlyName"`
	// The reference to git repo for this project.
	Gitrepo *string `pulumi:"gitrepo"`
	// The resource ID.
	Id string `pulumi:"id"`
	// The location of the resource. This cannot be changed after the resource is created.
	Location string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The immutable id of this project.
	ProjectId string `pulumi:"projectId"`
	// The current deployment state of project resource. The provisioningState is to indicate states for resource provisioning.
	ProvisioningState string `pulumi:"provisioningState"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type string `pulumi:"type"`
	// The immutable id of the workspace which contains this project.
	WorkspaceId string `pulumi:"workspaceId"`
}

func LookupProjectOutput(ctx *pulumi.Context, args LookupProjectOutputArgs, opts ...pulumi.InvokeOption) LookupProjectResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProjectResult, error) {
			args := v.(LookupProjectArgs)
			r, err := LookupProject(ctx, &args, opts...)
			var s LookupProjectResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProjectResultOutput)
}

type LookupProjectOutputArgs struct {
	// The name of the machine learning team account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the machine learning project under a team account workspace.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The name of the resource group to which the machine learning team account belongs.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the machine learning team account workspace.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

func (LookupProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectArgs)(nil)).Elem()
}

// An object that represents a machine learning project.
type LookupProjectResultOutput struct{ *pulumi.OutputState }

func (LookupProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectResult)(nil)).Elem()
}

func (o LookupProjectResultOutput) ToLookupProjectResultOutput() LookupProjectResultOutput {
	return o
}

func (o LookupProjectResultOutput) ToLookupProjectResultOutputWithContext(ctx context.Context) LookupProjectResultOutput {
	return o
}

// The immutable id of the team account which contains this project.
func (o LookupProjectResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The creation date of the project in ISO8601 format.
func (o LookupProjectResultOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The description of this project.
func (o LookupProjectResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProjectResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The friendly name for this project.
func (o LookupProjectResultOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// The reference to git repo for this project.
func (o LookupProjectResultOutput) Gitrepo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProjectResult) *string { return v.Gitrepo }).(pulumi.StringPtrOutput)
}

// The resource ID.
func (o LookupProjectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the resource. This cannot be changed after the resource is created.
func (o LookupProjectResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource.
func (o LookupProjectResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.Name }).(pulumi.StringOutput)
}

// The immutable id of this project.
func (o LookupProjectResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The current deployment state of project resource. The provisioningState is to indicate states for resource provisioning.
func (o LookupProjectResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The tags of the resource.
func (o LookupProjectResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupProjectResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o LookupProjectResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.Type }).(pulumi.StringOutput)
}

// The immutable id of the workspace which contains this project.
func (o LookupProjectResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProjectResultOutput{})
}
