// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170501preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An object that represents a machine learning team account workspace.
type Workspace struct {
	pulumi.CustomResourceState

	// The immutable id of the team account which contains this workspace.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// The creation date of the machine learning workspace in ISO8601 format.
	CreationDate pulumi.StringOutput `pulumi:"creationDate"`
	// The description of this workspace.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created
	FriendlyName pulumi.StringOutput `pulumi:"friendlyName"`
	// The location of the resource. This cannot be changed after the resource is created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The current deployment state of team account workspace resource. The provisioningState is to indicate states for resource provisioning.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The tags of the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
	// The immutable id of this workspace.
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewWorkspace registers a new resource with the given unique name, arguments, and options.
func NewWorkspace(ctx *pulumi.Context,
	name string, args *WorkspaceArgs, opts ...pulumi.ResourceOption) (*Workspace, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.FriendlyName == nil {
		return nil, errors.New("missing required argument 'FriendlyName'")
	}
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.WorkspaceName == nil {
		return nil, errors.New("missing required argument 'WorkspaceName'")
	}
	if args == nil {
		args = &WorkspaceArgs{}
	}
	var resource Workspace
	err := ctx.RegisterResource("azure-nextgen:machinelearningexperimentation/v20170501preview:Workspace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspace gets an existing Workspace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceState, opts ...pulumi.ResourceOption) (*Workspace, error) {
	var resource Workspace
	err := ctx.ReadResource("azure-nextgen:machinelearningexperimentation/v20170501preview:Workspace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Workspace resources.
type workspaceState struct {
	// The immutable id of the team account which contains this workspace.
	AccountId *string `pulumi:"accountId"`
	// The creation date of the machine learning workspace in ISO8601 format.
	CreationDate *string `pulumi:"creationDate"`
	// The description of this workspace.
	Description *string `pulumi:"description"`
	// The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created
	FriendlyName *string `pulumi:"friendlyName"`
	// The location of the resource. This cannot be changed after the resource is created.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The current deployment state of team account workspace resource. The provisioningState is to indicate states for resource provisioning.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type *string `pulumi:"type"`
	// The immutable id of this workspace.
	WorkspaceId *string `pulumi:"workspaceId"`
}

type WorkspaceState struct {
	// The immutable id of the team account which contains this workspace.
	AccountId pulumi.StringPtrInput
	// The creation date of the machine learning workspace in ISO8601 format.
	CreationDate pulumi.StringPtrInput
	// The description of this workspace.
	Description pulumi.StringPtrInput
	// The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created
	FriendlyName pulumi.StringPtrInput
	// The location of the resource. This cannot be changed after the resource is created.
	Location pulumi.StringPtrInput
	// The name of the resource.
	Name pulumi.StringPtrInput
	// The current deployment state of team account workspace resource. The provisioningState is to indicate states for resource provisioning.
	ProvisioningState pulumi.StringPtrInput
	// The tags of the resource.
	Tags pulumi.StringMapInput
	// The type of the resource.
	Type pulumi.StringPtrInput
	// The immutable id of this workspace.
	WorkspaceId pulumi.StringPtrInput
}

func (WorkspaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceState)(nil)).Elem()
}

type workspaceArgs struct {
	// The name of the machine learning team account.
	AccountName string `pulumi:"accountName"`
	// The description of this workspace.
	Description *string `pulumi:"description"`
	// The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created
	FriendlyName string `pulumi:"friendlyName"`
	// The location of the resource. This cannot be changed after the resource is created.
	Location string `pulumi:"location"`
	// The name of the resource group to which the machine learning team account belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The name of the machine learning team account workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a Workspace resource.
type WorkspaceArgs struct {
	// The name of the machine learning team account.
	AccountName pulumi.StringInput
	// The description of this workspace.
	Description pulumi.StringPtrInput
	// The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created
	FriendlyName pulumi.StringInput
	// The location of the resource. This cannot be changed after the resource is created.
	Location pulumi.StringInput
	// The name of the resource group to which the machine learning team account belongs.
	ResourceGroupName pulumi.StringInput
	// The tags of the resource.
	Tags pulumi.StringMapInput
	// The name of the machine learning team account workspace.
	WorkspaceName pulumi.StringInput
}

func (WorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceArgs)(nil)).Elem()
}
