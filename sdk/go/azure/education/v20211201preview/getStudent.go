// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211201preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Student details.
type GetStudent struct {
	pulumi.CustomResourceState

	// Student Budget
	Budget AmountResponseOutput `pulumi:"budget"`
	// Date student was added to the lab
	EffectiveDate pulumi.StringOutput `pulumi:"effectiveDate"`
	// Student Email
	Email pulumi.StringOutput `pulumi:"email"`
	// Date this student is set to expire from the lab.
	ExpirationDate pulumi.StringOutput `pulumi:"expirationDate"`
	// First Name
	FirstName pulumi.StringOutput `pulumi:"firstName"`
	// Last Name
	LastName pulumi.StringOutput `pulumi:"lastName"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Student Role
	Role pulumi.StringOutput `pulumi:"role"`
	// Student Lab Status
	Status pulumi.StringOutput `pulumi:"status"`
	// Subscription alias
	SubscriptionAlias pulumi.StringPtrOutput `pulumi:"subscriptionAlias"`
	// Subscription Id
	SubscriptionId pulumi.StringOutput `pulumi:"subscriptionId"`
	// subscription invite last sent date
	SubscriptionInviteLastSentDate pulumi.StringPtrOutput `pulumi:"subscriptionInviteLastSentDate"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewGetStudent registers a new resource with the given unique name, arguments, and options.
func NewGetStudent(ctx *pulumi.Context,
	name string, args *GetStudentArgs, opts ...pulumi.ResourceOption) (*GetStudent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BillingAccountName == nil {
		return nil, errors.New("invalid value for required argument 'BillingAccountName'")
	}
	if args.BillingProfileName == nil {
		return nil, errors.New("invalid value for required argument 'BillingProfileName'")
	}
	if args.Budget == nil {
		return nil, errors.New("invalid value for required argument 'Budget'")
	}
	if args.Email == nil {
		return nil, errors.New("invalid value for required argument 'Email'")
	}
	if args.ExpirationDate == nil {
		return nil, errors.New("invalid value for required argument 'ExpirationDate'")
	}
	if args.FirstName == nil {
		return nil, errors.New("invalid value for required argument 'FirstName'")
	}
	if args.InvoiceSectionName == nil {
		return nil, errors.New("invalid value for required argument 'InvoiceSectionName'")
	}
	if args.LastName == nil {
		return nil, errors.New("invalid value for required argument 'LastName'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:education:GetStudent"),
		},
	})
	opts = append(opts, aliases)
	var resource GetStudent
	err := ctx.RegisterResource("azure-native:education/v20211201preview:GetStudent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGetStudent gets an existing GetStudent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGetStudent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GetStudentState, opts ...pulumi.ResourceOption) (*GetStudent, error) {
	var resource GetStudent
	err := ctx.ReadResource("azure-native:education/v20211201preview:GetStudent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GetStudent resources.
type getStudentState struct {
}

type GetStudentState struct {
}

func (GetStudentState) ElementType() reflect.Type {
	return reflect.TypeOf((*getStudentState)(nil)).Elem()
}

type getStudentArgs struct {
	// Billing account name.
	BillingAccountName string `pulumi:"billingAccountName"`
	// Billing profile name.
	BillingProfileName string `pulumi:"billingProfileName"`
	// Student Budget
	Budget Amount `pulumi:"budget"`
	// Student Email
	Email string `pulumi:"email"`
	// Date this student is set to expire from the lab.
	ExpirationDate string `pulumi:"expirationDate"`
	// First Name
	FirstName string `pulumi:"firstName"`
	// Invoice section name.
	InvoiceSectionName string `pulumi:"invoiceSectionName"`
	// Last Name
	LastName string `pulumi:"lastName"`
	// Student Role
	Role string `pulumi:"role"`
	// Student alias.
	StudentAlias *string `pulumi:"studentAlias"`
	// Subscription alias
	SubscriptionAlias *string `pulumi:"subscriptionAlias"`
	// subscription invite last sent date
	SubscriptionInviteLastSentDate *string `pulumi:"subscriptionInviteLastSentDate"`
}

// The set of arguments for constructing a GetStudent resource.
type GetStudentArgs struct {
	// Billing account name.
	BillingAccountName pulumi.StringInput
	// Billing profile name.
	BillingProfileName pulumi.StringInput
	// Student Budget
	Budget AmountInput
	// Student Email
	Email pulumi.StringInput
	// Date this student is set to expire from the lab.
	ExpirationDate pulumi.StringInput
	// First Name
	FirstName pulumi.StringInput
	// Invoice section name.
	InvoiceSectionName pulumi.StringInput
	// Last Name
	LastName pulumi.StringInput
	// Student Role
	Role pulumi.StringInput
	// Student alias.
	StudentAlias pulumi.StringPtrInput
	// Subscription alias
	SubscriptionAlias pulumi.StringPtrInput
	// subscription invite last sent date
	SubscriptionInviteLastSentDate pulumi.StringPtrInput
}

func (GetStudentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*getStudentArgs)(nil)).Elem()
}

type GetStudentInput interface {
	pulumi.Input

	ToGetStudentOutput() GetStudentOutput
	ToGetStudentOutputWithContext(ctx context.Context) GetStudentOutput
}

func (*GetStudent) ElementType() reflect.Type {
	return reflect.TypeOf((**GetStudent)(nil)).Elem()
}

func (i *GetStudent) ToGetStudentOutput() GetStudentOutput {
	return i.ToGetStudentOutputWithContext(context.Background())
}

func (i *GetStudent) ToGetStudentOutputWithContext(ctx context.Context) GetStudentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStudentOutput)
}

type GetStudentOutput struct{ *pulumi.OutputState }

func (GetStudentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetStudent)(nil)).Elem()
}

func (o GetStudentOutput) ToGetStudentOutput() GetStudentOutput {
	return o
}

func (o GetStudentOutput) ToGetStudentOutputWithContext(ctx context.Context) GetStudentOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GetStudentOutput{})
}
