// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20181101preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Represents a blueprint assignment.
type Assignment struct {
	pulumi.CustomResourceState

	// ID of the published version of a blueprint definition.
	BlueprintId pulumi.StringPtrOutput `pulumi:"blueprintId"`
	// Multi-line explain this resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// One-liner string explain this resource.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Managed identity for this blueprint assignment.
	Identity ManagedServiceIdentityResponseOutput `pulumi:"identity"`
	// The location of this blueprint assignment.
	Location pulumi.StringOutput `pulumi:"location"`
	// Defines how resources deployed by a blueprint assignment are locked.
	Locks AssignmentLockSettingsResponsePtrOutput `pulumi:"locks"`
	// Name of this resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Blueprint assignment parameter values.
	Parameters ParameterValueResponseMapOutput `pulumi:"parameters"`
	// State of the blueprint assignment.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Names and locations of resource group placeholders.
	ResourceGroups ResourceGroupValueResponseMapOutput `pulumi:"resourceGroups"`
	// The target subscription scope of the blueprint assignment (format: '/subscriptions/{subscriptionId}'). For management group level assignments, the property is required.
	Scope pulumi.StringPtrOutput `pulumi:"scope"`
	// Status of blueprint assignment. This field is readonly.
	Status AssignmentStatusResponseOutput `pulumi:"status"`
	// Type of this resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAssignment registers a new resource with the given unique name, arguments, and options.
func NewAssignment(ctx *pulumi.Context,
	name string, args *AssignmentArgs, opts ...pulumi.ResourceOption) (*Assignment, error) {
	if args == nil || args.AssignmentName == nil {
		return nil, errors.New("missing required argument 'AssignmentName'")
	}
	if args == nil || args.Identity == nil {
		return nil, errors.New("missing required argument 'Identity'")
	}
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.Parameters == nil {
		return nil, errors.New("missing required argument 'Parameters'")
	}
	if args == nil || args.ResourceGroups == nil {
		return nil, errors.New("missing required argument 'ResourceGroups'")
	}
	if args == nil || args.ResourceScope == nil {
		return nil, errors.New("missing required argument 'ResourceScope'")
	}
	if args == nil {
		args = &AssignmentArgs{}
	}
	var resource Assignment
	err := ctx.RegisterResource("azure-nextgen:blueprint/v20181101preview:Assignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssignment gets an existing Assignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssignmentState, opts ...pulumi.ResourceOption) (*Assignment, error) {
	var resource Assignment
	err := ctx.ReadResource("azure-nextgen:blueprint/v20181101preview:Assignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Assignment resources.
type assignmentState struct {
	// ID of the published version of a blueprint definition.
	BlueprintId *string `pulumi:"blueprintId"`
	// Multi-line explain this resource.
	Description *string `pulumi:"description"`
	// One-liner string explain this resource.
	DisplayName *string `pulumi:"displayName"`
	// Managed identity for this blueprint assignment.
	Identity *ManagedServiceIdentityResponse `pulumi:"identity"`
	// The location of this blueprint assignment.
	Location *string `pulumi:"location"`
	// Defines how resources deployed by a blueprint assignment are locked.
	Locks *AssignmentLockSettingsResponse `pulumi:"locks"`
	// Name of this resource.
	Name *string `pulumi:"name"`
	// Blueprint assignment parameter values.
	Parameters map[string]ParameterValueResponse `pulumi:"parameters"`
	// State of the blueprint assignment.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Names and locations of resource group placeholders.
	ResourceGroups map[string]ResourceGroupValueResponse `pulumi:"resourceGroups"`
	// The target subscription scope of the blueprint assignment (format: '/subscriptions/{subscriptionId}'). For management group level assignments, the property is required.
	Scope *string `pulumi:"scope"`
	// Status of blueprint assignment. This field is readonly.
	Status *AssignmentStatusResponse `pulumi:"status"`
	// Type of this resource.
	Type *string `pulumi:"type"`
}

type AssignmentState struct {
	// ID of the published version of a blueprint definition.
	BlueprintId pulumi.StringPtrInput
	// Multi-line explain this resource.
	Description pulumi.StringPtrInput
	// One-liner string explain this resource.
	DisplayName pulumi.StringPtrInput
	// Managed identity for this blueprint assignment.
	Identity ManagedServiceIdentityResponsePtrInput
	// The location of this blueprint assignment.
	Location pulumi.StringPtrInput
	// Defines how resources deployed by a blueprint assignment are locked.
	Locks AssignmentLockSettingsResponsePtrInput
	// Name of this resource.
	Name pulumi.StringPtrInput
	// Blueprint assignment parameter values.
	Parameters ParameterValueResponseMapInput
	// State of the blueprint assignment.
	ProvisioningState pulumi.StringPtrInput
	// Names and locations of resource group placeholders.
	ResourceGroups ResourceGroupValueResponseMapInput
	// The target subscription scope of the blueprint assignment (format: '/subscriptions/{subscriptionId}'). For management group level assignments, the property is required.
	Scope pulumi.StringPtrInput
	// Status of blueprint assignment. This field is readonly.
	Status AssignmentStatusResponsePtrInput
	// Type of this resource.
	Type pulumi.StringPtrInput
}

func (AssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*assignmentState)(nil)).Elem()
}

type assignmentArgs struct {
	// Name of the blueprint assignment.
	AssignmentName string `pulumi:"assignmentName"`
	// ID of the published version of a blueprint definition.
	BlueprintId *string `pulumi:"blueprintId"`
	// Multi-line explain this resource.
	Description *string `pulumi:"description"`
	// One-liner string explain this resource.
	DisplayName *string `pulumi:"displayName"`
	// Managed identity for this blueprint assignment.
	Identity ManagedServiceIdentity `pulumi:"identity"`
	// The location of this blueprint assignment.
	Location string `pulumi:"location"`
	// Defines how resources deployed by a blueprint assignment are locked.
	Locks *AssignmentLockSettings `pulumi:"locks"`
	// Blueprint assignment parameter values.
	Parameters map[string]ParameterValue `pulumi:"parameters"`
	// Names and locations of resource group placeholders.
	ResourceGroups map[string]ResourceGroupValue `pulumi:"resourceGroups"`
	// The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}').
	ResourceScope string `pulumi:"resourceScope"`
	// The target subscription scope of the blueprint assignment (format: '/subscriptions/{subscriptionId}'). For management group level assignments, the property is required.
	Scope *string `pulumi:"scope"`
}

// The set of arguments for constructing a Assignment resource.
type AssignmentArgs struct {
	// Name of the blueprint assignment.
	AssignmentName pulumi.StringInput
	// ID of the published version of a blueprint definition.
	BlueprintId pulumi.StringPtrInput
	// Multi-line explain this resource.
	Description pulumi.StringPtrInput
	// One-liner string explain this resource.
	DisplayName pulumi.StringPtrInput
	// Managed identity for this blueprint assignment.
	Identity ManagedServiceIdentityInput
	// The location of this blueprint assignment.
	Location pulumi.StringInput
	// Defines how resources deployed by a blueprint assignment are locked.
	Locks AssignmentLockSettingsPtrInput
	// Blueprint assignment parameter values.
	Parameters ParameterValueMapInput
	// Names and locations of resource group placeholders.
	ResourceGroups ResourceGroupValueMapInput
	// The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}').
	ResourceScope pulumi.StringInput
	// The target subscription scope of the blueprint assignment (format: '/subscriptions/{subscriptionId}'). For management group level assignments, the property is required.
	Scope pulumi.StringPtrInput
}

func (AssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assignmentArgs)(nil)).Elem()
}
