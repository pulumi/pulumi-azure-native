// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20171111preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Blueprint artifact deploys Azure resource manager template.
func LookupTemplateArtifact(ctx *pulumi.Context, args *LookupTemplateArtifactArgs, opts ...pulumi.InvokeOption) (*LookupTemplateArtifactResult, error) {
	var rv LookupTemplateArtifactResult
	err := ctx.Invoke("azure-native:blueprint/v20171111preview:getTemplateArtifact", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTemplateArtifactArgs struct {
	// name of the artifact.
	ArtifactName string `pulumi:"artifactName"`
	// name of the blueprint.
	BlueprintName string `pulumi:"blueprintName"`
	// ManagementGroup where blueprint stores.
	ManagementGroupName string `pulumi:"managementGroupName"`
}

// Blueprint artifact deploys Azure resource manager template.
type LookupTemplateArtifactResult struct {
	// Artifacts which need to be deployed before the specified artifact.
	DependsOn []string `pulumi:"dependsOn"`
	// Multi-line explain this resource.
	Description *string `pulumi:"description"`
	// One-liner string explain this resource.
	DisplayName *string `pulumi:"displayName"`
	// String Id used to locate any resource on Azure.
	Id string `pulumi:"id"`
	// Specifies the kind of Blueprint artifact.
	// Expected value is 'template'.
	Kind string `pulumi:"kind"`
	// Name of this resource.
	Name string `pulumi:"name"`
	// Template parameter values.
	Parameters map[string]ParameterValueBaseResponse `pulumi:"parameters"`
	// If applicable, the name of the resource group placeholder to which the template will be deployed.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The Azure Resource Manager template body.
	Template interface{} `pulumi:"template"`
	// Type of this resource.
	Type string `pulumi:"type"`
}

func LookupTemplateArtifactOutput(ctx *pulumi.Context, args LookupTemplateArtifactOutputArgs, opts ...pulumi.InvokeOption) LookupTemplateArtifactResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTemplateArtifactResult, error) {
			args := v.(LookupTemplateArtifactArgs)
			r, err := LookupTemplateArtifact(ctx, &args, opts...)
			var s LookupTemplateArtifactResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTemplateArtifactResultOutput)
}

type LookupTemplateArtifactOutputArgs struct {
	// name of the artifact.
	ArtifactName pulumi.StringInput `pulumi:"artifactName"`
	// name of the blueprint.
	BlueprintName pulumi.StringInput `pulumi:"blueprintName"`
	// ManagementGroup where blueprint stores.
	ManagementGroupName pulumi.StringInput `pulumi:"managementGroupName"`
}

func (LookupTemplateArtifactOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTemplateArtifactArgs)(nil)).Elem()
}

// Blueprint artifact deploys Azure resource manager template.
type LookupTemplateArtifactResultOutput struct{ *pulumi.OutputState }

func (LookupTemplateArtifactResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTemplateArtifactResult)(nil)).Elem()
}

func (o LookupTemplateArtifactResultOutput) ToLookupTemplateArtifactResultOutput() LookupTemplateArtifactResultOutput {
	return o
}

func (o LookupTemplateArtifactResultOutput) ToLookupTemplateArtifactResultOutputWithContext(ctx context.Context) LookupTemplateArtifactResultOutput {
	return o
}

// Artifacts which need to be deployed before the specified artifact.
func (o LookupTemplateArtifactResultOutput) DependsOn() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTemplateArtifactResult) []string { return v.DependsOn }).(pulumi.StringArrayOutput)
}

// Multi-line explain this resource.
func (o LookupTemplateArtifactResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTemplateArtifactResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// One-liner string explain this resource.
func (o LookupTemplateArtifactResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTemplateArtifactResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// String Id used to locate any resource on Azure.
func (o LookupTemplateArtifactResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateArtifactResult) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the kind of Blueprint artifact.
// Expected value is 'template'.
func (o LookupTemplateArtifactResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateArtifactResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of this resource.
func (o LookupTemplateArtifactResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateArtifactResult) string { return v.Name }).(pulumi.StringOutput)
}

// Template parameter values.
func (o LookupTemplateArtifactResultOutput) Parameters() ParameterValueBaseResponseMapOutput {
	return o.ApplyT(func(v LookupTemplateArtifactResult) map[string]ParameterValueBaseResponse { return v.Parameters }).(ParameterValueBaseResponseMapOutput)
}

// If applicable, the name of the resource group placeholder to which the template will be deployed.
func (o LookupTemplateArtifactResultOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTemplateArtifactResult) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The Azure Resource Manager template body.
func (o LookupTemplateArtifactResultOutput) Template() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupTemplateArtifactResult) interface{} { return v.Template }).(pulumi.AnyOutput)
}

// Type of this resource.
func (o LookupTemplateArtifactResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateArtifactResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTemplateArtifactResultOutput{})
}
