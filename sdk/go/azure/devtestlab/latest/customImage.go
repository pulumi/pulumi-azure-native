// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A custom image.
type CustomImage struct {
	pulumi.CustomResourceState

	// The author of the custom image.
	Author pulumi.StringPtrOutput `pulumi:"author"`
	// The creation date of the custom image.
	CreationDate pulumi.StringOutput `pulumi:"creationDate"`
	// Storage information about the plan related to this custom image
	CustomImagePlan CustomImagePropertiesFromPlanResponsePtrOutput `pulumi:"customImagePlan"`
	// Storage information about the data disks present in the custom image
	DataDiskStorageInfo DataDiskStorageTypeInfoResponseArrayOutput `pulumi:"dataDiskStorageInfo"`
	// The description of the custom image.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
	IsPlanAuthorized pulumi.BoolPtrOutput `pulumi:"isPlanAuthorized"`
	// The location of the resource.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The Managed Image Id backing the custom image.
	ManagedImageId pulumi.StringPtrOutput `pulumi:"managedImageId"`
	// The Managed Snapshot Id backing the custom image.
	ManagedSnapshotId pulumi.StringPtrOutput `pulumi:"managedSnapshotId"`
	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The provisioning status of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The tags of the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
	// The unique immutable identifier of a resource (Guid).
	UniqueIdentifier pulumi.StringOutput `pulumi:"uniqueIdentifier"`
	// The VHD from which the image is to be created.
	Vhd CustomImagePropertiesCustomResponsePtrOutput `pulumi:"vhd"`
	// The virtual machine from which the image is to be created.
	Vm CustomImagePropertiesFromVmResponsePtrOutput `pulumi:"vm"`
}

// NewCustomImage registers a new resource with the given unique name, arguments, and options.
func NewCustomImage(ctx *pulumi.Context,
	name string, args *CustomImageArgs, opts ...pulumi.ResourceOption) (*CustomImage, error) {
	if args == nil || args.LabName == nil {
		return nil, errors.New("missing required argument 'LabName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &CustomImageArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:devtestlab/v20150521preview:CustomImage"),
		},
		{
			Type: pulumi.String("azure-nextgen:devtestlab/v20160515:CustomImage"),
		},
		{
			Type: pulumi.String("azure-nextgen:devtestlab/v20180915:CustomImage"),
		},
	})
	opts = append(opts, aliases)
	var resource CustomImage
	err := ctx.RegisterResource("azure-nextgen:devtestlab/latest:CustomImage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomImage gets an existing CustomImage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomImage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomImageState, opts ...pulumi.ResourceOption) (*CustomImage, error) {
	var resource CustomImage
	err := ctx.ReadResource("azure-nextgen:devtestlab/latest:CustomImage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomImage resources.
type customImageState struct {
	// The author of the custom image.
	Author *string `pulumi:"author"`
	// The creation date of the custom image.
	CreationDate *string `pulumi:"creationDate"`
	// Storage information about the plan related to this custom image
	CustomImagePlan *CustomImagePropertiesFromPlanResponse `pulumi:"customImagePlan"`
	// Storage information about the data disks present in the custom image
	DataDiskStorageInfo []DataDiskStorageTypeInfoResponse `pulumi:"dataDiskStorageInfo"`
	// The description of the custom image.
	Description *string `pulumi:"description"`
	// Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
	IsPlanAuthorized *bool `pulumi:"isPlanAuthorized"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The Managed Image Id backing the custom image.
	ManagedImageId *string `pulumi:"managedImageId"`
	// The Managed Snapshot Id backing the custom image.
	ManagedSnapshotId *string `pulumi:"managedSnapshotId"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The provisioning status of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type *string `pulumi:"type"`
	// The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `pulumi:"uniqueIdentifier"`
	// The VHD from which the image is to be created.
	Vhd *CustomImagePropertiesCustomResponse `pulumi:"vhd"`
	// The virtual machine from which the image is to be created.
	Vm *CustomImagePropertiesFromVmResponse `pulumi:"vm"`
}

type CustomImageState struct {
	// The author of the custom image.
	Author pulumi.StringPtrInput
	// The creation date of the custom image.
	CreationDate pulumi.StringPtrInput
	// Storage information about the plan related to this custom image
	CustomImagePlan CustomImagePropertiesFromPlanResponsePtrInput
	// Storage information about the data disks present in the custom image
	DataDiskStorageInfo DataDiskStorageTypeInfoResponseArrayInput
	// The description of the custom image.
	Description pulumi.StringPtrInput
	// Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
	IsPlanAuthorized pulumi.BoolPtrInput
	// The location of the resource.
	Location pulumi.StringPtrInput
	// The Managed Image Id backing the custom image.
	ManagedImageId pulumi.StringPtrInput
	// The Managed Snapshot Id backing the custom image.
	ManagedSnapshotId pulumi.StringPtrInput
	// The name of the resource.
	Name pulumi.StringPtrInput
	// The provisioning status of the resource.
	ProvisioningState pulumi.StringPtrInput
	// The tags of the resource.
	Tags pulumi.StringMapInput
	// The type of the resource.
	Type pulumi.StringPtrInput
	// The unique immutable identifier of a resource (Guid).
	UniqueIdentifier pulumi.StringPtrInput
	// The VHD from which the image is to be created.
	Vhd CustomImagePropertiesCustomResponsePtrInput
	// The virtual machine from which the image is to be created.
	Vm CustomImagePropertiesFromVmResponsePtrInput
}

func (CustomImageState) ElementType() reflect.Type {
	return reflect.TypeOf((*customImageState)(nil)).Elem()
}

type customImageArgs struct {
	// The author of the custom image.
	Author *string `pulumi:"author"`
	// Storage information about the plan related to this custom image
	CustomImagePlan *CustomImagePropertiesFromPlan `pulumi:"customImagePlan"`
	// Storage information about the data disks present in the custom image
	DataDiskStorageInfo []DataDiskStorageTypeInfo `pulumi:"dataDiskStorageInfo"`
	// The description of the custom image.
	Description *string `pulumi:"description"`
	// Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
	IsPlanAuthorized *bool `pulumi:"isPlanAuthorized"`
	// The name of the lab.
	LabName string `pulumi:"labName"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The Managed Image Id backing the custom image.
	ManagedImageId *string `pulumi:"managedImageId"`
	// The Managed Snapshot Id backing the custom image.
	ManagedSnapshotId *string `pulumi:"managedSnapshotId"`
	// The name of the custom image.
	Name string `pulumi:"name"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The VHD from which the image is to be created.
	Vhd *CustomImagePropertiesCustom `pulumi:"vhd"`
	// The virtual machine from which the image is to be created.
	Vm *CustomImagePropertiesFromVm `pulumi:"vm"`
}

// The set of arguments for constructing a CustomImage resource.
type CustomImageArgs struct {
	// The author of the custom image.
	Author pulumi.StringPtrInput
	// Storage information about the plan related to this custom image
	CustomImagePlan CustomImagePropertiesFromPlanPtrInput
	// Storage information about the data disks present in the custom image
	DataDiskStorageInfo DataDiskStorageTypeInfoArrayInput
	// The description of the custom image.
	Description pulumi.StringPtrInput
	// Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
	IsPlanAuthorized pulumi.BoolPtrInput
	// The name of the lab.
	LabName pulumi.StringInput
	// The location of the resource.
	Location pulumi.StringPtrInput
	// The Managed Image Id backing the custom image.
	ManagedImageId pulumi.StringPtrInput
	// The Managed Snapshot Id backing the custom image.
	ManagedSnapshotId pulumi.StringPtrInput
	// The name of the custom image.
	Name pulumi.StringInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The tags of the resource.
	Tags pulumi.StringMapInput
	// The VHD from which the image is to be created.
	Vhd CustomImagePropertiesCustomPtrInput
	// The virtual machine from which the image is to be created.
	Vm CustomImagePropertiesFromVmPtrInput
}

func (CustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customImageArgs)(nil)).Elem()
}
