// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.
type ApplicableScheduleInvokeResponse struct {
	// The identifier of the resource.
	Id string `pulumi:"id"`
	// The auto-shutdown schedule, if one has been set at the lab or lab resource level.
	LabVmsShutdown *ScheduleInvokeResponse `pulumi:"labVmsShutdown"`
	// The auto-startup schedule, if one has been set at the lab or lab resource level.
	LabVmsStartup *ScheduleInvokeResponse `pulumi:"labVmsStartup"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

// ApplicableScheduleInvokeResponseInput is an input type that accepts ApplicableScheduleInvokeResponseArgs and ApplicableScheduleInvokeResponseOutput values.
// You can construct a concrete instance of `ApplicableScheduleInvokeResponseInput` via:
//
//          ApplicableScheduleInvokeResponseArgs{...}
type ApplicableScheduleInvokeResponseInput interface {
	pulumi.Input

	ToApplicableScheduleInvokeResponseOutput() ApplicableScheduleInvokeResponseOutput
	ToApplicableScheduleInvokeResponseOutputWithContext(context.Context) ApplicableScheduleInvokeResponseOutput
}

// Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.
type ApplicableScheduleInvokeResponseArgs struct {
	// The identifier of the resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The auto-shutdown schedule, if one has been set at the lab or lab resource level.
	LabVmsShutdown ScheduleInvokeResponsePtrInput `pulumi:"labVmsShutdown"`
	// The auto-startup schedule, if one has been set at the lab or lab resource level.
	LabVmsStartup ScheduleInvokeResponsePtrInput `pulumi:"labVmsStartup"`
	// The location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicableScheduleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicableScheduleInvokeResponse)(nil)).Elem()
}

func (i ApplicableScheduleInvokeResponseArgs) ToApplicableScheduleInvokeResponseOutput() ApplicableScheduleInvokeResponseOutput {
	return i.ToApplicableScheduleInvokeResponseOutputWithContext(context.Background())
}

func (i ApplicableScheduleInvokeResponseArgs) ToApplicableScheduleInvokeResponseOutputWithContext(ctx context.Context) ApplicableScheduleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicableScheduleInvokeResponseOutput)
}

// Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.
type ApplicableScheduleInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApplicableScheduleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicableScheduleInvokeResponse)(nil)).Elem()
}

func (o ApplicableScheduleInvokeResponseOutput) ToApplicableScheduleInvokeResponseOutput() ApplicableScheduleInvokeResponseOutput {
	return o
}

func (o ApplicableScheduleInvokeResponseOutput) ToApplicableScheduleInvokeResponseOutputWithContext(ctx context.Context) ApplicableScheduleInvokeResponseOutput {
	return o
}

// The identifier of the resource.
func (o ApplicableScheduleInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicableScheduleInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The auto-shutdown schedule, if one has been set at the lab or lab resource level.
func (o ApplicableScheduleInvokeResponseOutput) LabVmsShutdown() ScheduleInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicableScheduleInvokeResponse) *ScheduleInvokeResponse { return v.LabVmsShutdown }).(ScheduleInvokeResponsePtrOutput)
}

// The auto-startup schedule, if one has been set at the lab or lab resource level.
func (o ApplicableScheduleInvokeResponseOutput) LabVmsStartup() ScheduleInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicableScheduleInvokeResponse) *ScheduleInvokeResponse { return v.LabVmsStartup }).(ScheduleInvokeResponsePtrOutput)
}

// The location of the resource.
func (o ApplicableScheduleInvokeResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicableScheduleInvokeResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o ApplicableScheduleInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicableScheduleInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The tags of the resource.
func (o ApplicableScheduleInvokeResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicableScheduleInvokeResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o ApplicableScheduleInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicableScheduleInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.
type ApplicableScheduleResponse struct {
	// The identifier of the resource.
	Id string `pulumi:"id"`
	// The auto-shutdown schedule, if one has been set at the lab or lab resource level.
	LabVmsShutdown *ScheduleResponse `pulumi:"labVmsShutdown"`
	// The auto-startup schedule, if one has been set at the lab or lab resource level.
	LabVmsStartup *ScheduleResponse `pulumi:"labVmsStartup"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

// ApplicableScheduleResponseInput is an input type that accepts ApplicableScheduleResponseArgs and ApplicableScheduleResponseOutput values.
// You can construct a concrete instance of `ApplicableScheduleResponseInput` via:
//
//          ApplicableScheduleResponseArgs{...}
type ApplicableScheduleResponseInput interface {
	pulumi.Input

	ToApplicableScheduleResponseOutput() ApplicableScheduleResponseOutput
	ToApplicableScheduleResponseOutputWithContext(context.Context) ApplicableScheduleResponseOutput
}

// Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.
type ApplicableScheduleResponseArgs struct {
	// The identifier of the resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The auto-shutdown schedule, if one has been set at the lab or lab resource level.
	LabVmsShutdown ScheduleResponsePtrInput `pulumi:"labVmsShutdown"`
	// The auto-startup schedule, if one has been set at the lab or lab resource level.
	LabVmsStartup ScheduleResponsePtrInput `pulumi:"labVmsStartup"`
	// The location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicableScheduleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicableScheduleResponse)(nil)).Elem()
}

func (i ApplicableScheduleResponseArgs) ToApplicableScheduleResponseOutput() ApplicableScheduleResponseOutput {
	return i.ToApplicableScheduleResponseOutputWithContext(context.Background())
}

func (i ApplicableScheduleResponseArgs) ToApplicableScheduleResponseOutputWithContext(ctx context.Context) ApplicableScheduleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicableScheduleResponseOutput)
}

func (i ApplicableScheduleResponseArgs) ToApplicableScheduleResponsePtrOutput() ApplicableScheduleResponsePtrOutput {
	return i.ToApplicableScheduleResponsePtrOutputWithContext(context.Background())
}

func (i ApplicableScheduleResponseArgs) ToApplicableScheduleResponsePtrOutputWithContext(ctx context.Context) ApplicableScheduleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicableScheduleResponseOutput).ToApplicableScheduleResponsePtrOutputWithContext(ctx)
}

// ApplicableScheduleResponsePtrInput is an input type that accepts ApplicableScheduleResponseArgs, ApplicableScheduleResponsePtr and ApplicableScheduleResponsePtrOutput values.
// You can construct a concrete instance of `ApplicableScheduleResponsePtrInput` via:
//
//          ApplicableScheduleResponseArgs{...}
//
//  or:
//
//          nil
type ApplicableScheduleResponsePtrInput interface {
	pulumi.Input

	ToApplicableScheduleResponsePtrOutput() ApplicableScheduleResponsePtrOutput
	ToApplicableScheduleResponsePtrOutputWithContext(context.Context) ApplicableScheduleResponsePtrOutput
}

type applicableScheduleResponsePtrType ApplicableScheduleResponseArgs

func ApplicableScheduleResponsePtr(v *ApplicableScheduleResponseArgs) ApplicableScheduleResponsePtrInput {
	return (*applicableScheduleResponsePtrType)(v)
}

func (*applicableScheduleResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicableScheduleResponse)(nil)).Elem()
}

func (i *applicableScheduleResponsePtrType) ToApplicableScheduleResponsePtrOutput() ApplicableScheduleResponsePtrOutput {
	return i.ToApplicableScheduleResponsePtrOutputWithContext(context.Background())
}

func (i *applicableScheduleResponsePtrType) ToApplicableScheduleResponsePtrOutputWithContext(ctx context.Context) ApplicableScheduleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicableScheduleResponsePtrOutput)
}

// Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.
type ApplicableScheduleResponseOutput struct{ *pulumi.OutputState }

func (ApplicableScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicableScheduleResponse)(nil)).Elem()
}

func (o ApplicableScheduleResponseOutput) ToApplicableScheduleResponseOutput() ApplicableScheduleResponseOutput {
	return o
}

func (o ApplicableScheduleResponseOutput) ToApplicableScheduleResponseOutputWithContext(ctx context.Context) ApplicableScheduleResponseOutput {
	return o
}

func (o ApplicableScheduleResponseOutput) ToApplicableScheduleResponsePtrOutput() ApplicableScheduleResponsePtrOutput {
	return o.ToApplicableScheduleResponsePtrOutputWithContext(context.Background())
}

func (o ApplicableScheduleResponseOutput) ToApplicableScheduleResponsePtrOutputWithContext(ctx context.Context) ApplicableScheduleResponsePtrOutput {
	return o.ApplyT(func(v ApplicableScheduleResponse) *ApplicableScheduleResponse {
		return &v
	}).(ApplicableScheduleResponsePtrOutput)
}

// The identifier of the resource.
func (o ApplicableScheduleResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicableScheduleResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The auto-shutdown schedule, if one has been set at the lab or lab resource level.
func (o ApplicableScheduleResponseOutput) LabVmsShutdown() ScheduleResponsePtrOutput {
	return o.ApplyT(func(v ApplicableScheduleResponse) *ScheduleResponse { return v.LabVmsShutdown }).(ScheduleResponsePtrOutput)
}

// The auto-startup schedule, if one has been set at the lab or lab resource level.
func (o ApplicableScheduleResponseOutput) LabVmsStartup() ScheduleResponsePtrOutput {
	return o.ApplyT(func(v ApplicableScheduleResponse) *ScheduleResponse { return v.LabVmsStartup }).(ScheduleResponsePtrOutput)
}

// The location of the resource.
func (o ApplicableScheduleResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicableScheduleResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o ApplicableScheduleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicableScheduleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The tags of the resource.
func (o ApplicableScheduleResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicableScheduleResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o ApplicableScheduleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicableScheduleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicableScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicableScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicableScheduleResponse)(nil)).Elem()
}

func (o ApplicableScheduleResponsePtrOutput) ToApplicableScheduleResponsePtrOutput() ApplicableScheduleResponsePtrOutput {
	return o
}

func (o ApplicableScheduleResponsePtrOutput) ToApplicableScheduleResponsePtrOutputWithContext(ctx context.Context) ApplicableScheduleResponsePtrOutput {
	return o
}

func (o ApplicableScheduleResponsePtrOutput) Elem() ApplicableScheduleResponseOutput {
	return o.ApplyT(func(v *ApplicableScheduleResponse) ApplicableScheduleResponse { return *v }).(ApplicableScheduleResponseOutput)
}

// The identifier of the resource.
func (o ApplicableScheduleResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicableScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The auto-shutdown schedule, if one has been set at the lab or lab resource level.
func (o ApplicableScheduleResponsePtrOutput) LabVmsShutdown() ScheduleResponsePtrOutput {
	return o.ApplyT(func(v *ApplicableScheduleResponse) *ScheduleResponse {
		if v == nil {
			return nil
		}
		return v.LabVmsShutdown
	}).(ScheduleResponsePtrOutput)
}

// The auto-startup schedule, if one has been set at the lab or lab resource level.
func (o ApplicableScheduleResponsePtrOutput) LabVmsStartup() ScheduleResponsePtrOutput {
	return o.ApplyT(func(v *ApplicableScheduleResponse) *ScheduleResponse {
		if v == nil {
			return nil
		}
		return v.LabVmsStartup
	}).(ScheduleResponsePtrOutput)
}

// The location of the resource.
func (o ApplicableScheduleResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicableScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o ApplicableScheduleResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicableScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o ApplicableScheduleResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicableScheduleResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o ApplicableScheduleResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicableScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of an Azure Resource Manager template parameter.
type ArmTemplateParameterProperties struct {
	// The name of the template parameter.
	Name *string `pulumi:"name"`
	// The value of the template parameter.
	Value *string `pulumi:"value"`
}

// ArmTemplateParameterPropertiesInput is an input type that accepts ArmTemplateParameterPropertiesArgs and ArmTemplateParameterPropertiesOutput values.
// You can construct a concrete instance of `ArmTemplateParameterPropertiesInput` via:
//
//          ArmTemplateParameterPropertiesArgs{...}
type ArmTemplateParameterPropertiesInput interface {
	pulumi.Input

	ToArmTemplateParameterPropertiesOutput() ArmTemplateParameterPropertiesOutput
	ToArmTemplateParameterPropertiesOutputWithContext(context.Context) ArmTemplateParameterPropertiesOutput
}

// Properties of an Azure Resource Manager template parameter.
type ArmTemplateParameterPropertiesArgs struct {
	// The name of the template parameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the template parameter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ArmTemplateParameterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmTemplateParameterProperties)(nil)).Elem()
}

func (i ArmTemplateParameterPropertiesArgs) ToArmTemplateParameterPropertiesOutput() ArmTemplateParameterPropertiesOutput {
	return i.ToArmTemplateParameterPropertiesOutputWithContext(context.Background())
}

func (i ArmTemplateParameterPropertiesArgs) ToArmTemplateParameterPropertiesOutputWithContext(ctx context.Context) ArmTemplateParameterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmTemplateParameterPropertiesOutput)
}

// ArmTemplateParameterPropertiesArrayInput is an input type that accepts ArmTemplateParameterPropertiesArray and ArmTemplateParameterPropertiesArrayOutput values.
// You can construct a concrete instance of `ArmTemplateParameterPropertiesArrayInput` via:
//
//          ArmTemplateParameterPropertiesArray{ ArmTemplateParameterPropertiesArgs{...} }
type ArmTemplateParameterPropertiesArrayInput interface {
	pulumi.Input

	ToArmTemplateParameterPropertiesArrayOutput() ArmTemplateParameterPropertiesArrayOutput
	ToArmTemplateParameterPropertiesArrayOutputWithContext(context.Context) ArmTemplateParameterPropertiesArrayOutput
}

type ArmTemplateParameterPropertiesArray []ArmTemplateParameterPropertiesInput

func (ArmTemplateParameterPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArmTemplateParameterProperties)(nil)).Elem()
}

func (i ArmTemplateParameterPropertiesArray) ToArmTemplateParameterPropertiesArrayOutput() ArmTemplateParameterPropertiesArrayOutput {
	return i.ToArmTemplateParameterPropertiesArrayOutputWithContext(context.Background())
}

func (i ArmTemplateParameterPropertiesArray) ToArmTemplateParameterPropertiesArrayOutputWithContext(ctx context.Context) ArmTemplateParameterPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmTemplateParameterPropertiesArrayOutput)
}

// Properties of an Azure Resource Manager template parameter.
type ArmTemplateParameterPropertiesOutput struct{ *pulumi.OutputState }

func (ArmTemplateParameterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmTemplateParameterProperties)(nil)).Elem()
}

func (o ArmTemplateParameterPropertiesOutput) ToArmTemplateParameterPropertiesOutput() ArmTemplateParameterPropertiesOutput {
	return o
}

func (o ArmTemplateParameterPropertiesOutput) ToArmTemplateParameterPropertiesOutputWithContext(ctx context.Context) ArmTemplateParameterPropertiesOutput {
	return o
}

// The name of the template parameter.
func (o ArmTemplateParameterPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmTemplateParameterProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the template parameter.
func (o ArmTemplateParameterPropertiesOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmTemplateParameterProperties) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ArmTemplateParameterPropertiesArrayOutput struct{ *pulumi.OutputState }

func (ArmTemplateParameterPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArmTemplateParameterProperties)(nil)).Elem()
}

func (o ArmTemplateParameterPropertiesArrayOutput) ToArmTemplateParameterPropertiesArrayOutput() ArmTemplateParameterPropertiesArrayOutput {
	return o
}

func (o ArmTemplateParameterPropertiesArrayOutput) ToArmTemplateParameterPropertiesArrayOutputWithContext(ctx context.Context) ArmTemplateParameterPropertiesArrayOutput {
	return o
}

func (o ArmTemplateParameterPropertiesArrayOutput) Index(i pulumi.IntInput) ArmTemplateParameterPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArmTemplateParameterProperties {
		return vs[0].([]ArmTemplateParameterProperties)[vs[1].(int)]
	}).(ArmTemplateParameterPropertiesOutput)
}

// Properties of an Azure Resource Manager template parameter.
type ArmTemplateParameterPropertiesInvokeResponse struct {
	// The name of the template parameter.
	Name *string `pulumi:"name"`
	// The value of the template parameter.
	Value *string `pulumi:"value"`
}

// ArmTemplateParameterPropertiesInvokeResponseInput is an input type that accepts ArmTemplateParameterPropertiesInvokeResponseArgs and ArmTemplateParameterPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ArmTemplateParameterPropertiesInvokeResponseInput` via:
//
//          ArmTemplateParameterPropertiesInvokeResponseArgs{...}
type ArmTemplateParameterPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToArmTemplateParameterPropertiesInvokeResponseOutput() ArmTemplateParameterPropertiesInvokeResponseOutput
	ToArmTemplateParameterPropertiesInvokeResponseOutputWithContext(context.Context) ArmTemplateParameterPropertiesInvokeResponseOutput
}

// Properties of an Azure Resource Manager template parameter.
type ArmTemplateParameterPropertiesInvokeResponseArgs struct {
	// The name of the template parameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the template parameter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ArmTemplateParameterPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmTemplateParameterPropertiesInvokeResponse)(nil)).Elem()
}

func (i ArmTemplateParameterPropertiesInvokeResponseArgs) ToArmTemplateParameterPropertiesInvokeResponseOutput() ArmTemplateParameterPropertiesInvokeResponseOutput {
	return i.ToArmTemplateParameterPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ArmTemplateParameterPropertiesInvokeResponseArgs) ToArmTemplateParameterPropertiesInvokeResponseOutputWithContext(ctx context.Context) ArmTemplateParameterPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmTemplateParameterPropertiesInvokeResponseOutput)
}

// ArmTemplateParameterPropertiesInvokeResponseArrayInput is an input type that accepts ArmTemplateParameterPropertiesInvokeResponseArray and ArmTemplateParameterPropertiesInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ArmTemplateParameterPropertiesInvokeResponseArrayInput` via:
//
//          ArmTemplateParameterPropertiesInvokeResponseArray{ ArmTemplateParameterPropertiesInvokeResponseArgs{...} }
type ArmTemplateParameterPropertiesInvokeResponseArrayInput interface {
	pulumi.Input

	ToArmTemplateParameterPropertiesInvokeResponseArrayOutput() ArmTemplateParameterPropertiesInvokeResponseArrayOutput
	ToArmTemplateParameterPropertiesInvokeResponseArrayOutputWithContext(context.Context) ArmTemplateParameterPropertiesInvokeResponseArrayOutput
}

type ArmTemplateParameterPropertiesInvokeResponseArray []ArmTemplateParameterPropertiesInvokeResponseInput

func (ArmTemplateParameterPropertiesInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArmTemplateParameterPropertiesInvokeResponse)(nil)).Elem()
}

func (i ArmTemplateParameterPropertiesInvokeResponseArray) ToArmTemplateParameterPropertiesInvokeResponseArrayOutput() ArmTemplateParameterPropertiesInvokeResponseArrayOutput {
	return i.ToArmTemplateParameterPropertiesInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ArmTemplateParameterPropertiesInvokeResponseArray) ToArmTemplateParameterPropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) ArmTemplateParameterPropertiesInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmTemplateParameterPropertiesInvokeResponseArrayOutput)
}

// Properties of an Azure Resource Manager template parameter.
type ArmTemplateParameterPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ArmTemplateParameterPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmTemplateParameterPropertiesInvokeResponse)(nil)).Elem()
}

func (o ArmTemplateParameterPropertiesInvokeResponseOutput) ToArmTemplateParameterPropertiesInvokeResponseOutput() ArmTemplateParameterPropertiesInvokeResponseOutput {
	return o
}

func (o ArmTemplateParameterPropertiesInvokeResponseOutput) ToArmTemplateParameterPropertiesInvokeResponseOutputWithContext(ctx context.Context) ArmTemplateParameterPropertiesInvokeResponseOutput {
	return o
}

// The name of the template parameter.
func (o ArmTemplateParameterPropertiesInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmTemplateParameterPropertiesInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the template parameter.
func (o ArmTemplateParameterPropertiesInvokeResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmTemplateParameterPropertiesInvokeResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ArmTemplateParameterPropertiesInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ArmTemplateParameterPropertiesInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArmTemplateParameterPropertiesInvokeResponse)(nil)).Elem()
}

func (o ArmTemplateParameterPropertiesInvokeResponseArrayOutput) ToArmTemplateParameterPropertiesInvokeResponseArrayOutput() ArmTemplateParameterPropertiesInvokeResponseArrayOutput {
	return o
}

func (o ArmTemplateParameterPropertiesInvokeResponseArrayOutput) ToArmTemplateParameterPropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) ArmTemplateParameterPropertiesInvokeResponseArrayOutput {
	return o
}

func (o ArmTemplateParameterPropertiesInvokeResponseArrayOutput) Index(i pulumi.IntInput) ArmTemplateParameterPropertiesInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArmTemplateParameterPropertiesInvokeResponse {
		return vs[0].([]ArmTemplateParameterPropertiesInvokeResponse)[vs[1].(int)]
	}).(ArmTemplateParameterPropertiesInvokeResponseOutput)
}

// Properties of an Azure Resource Manager template parameter.
type ArmTemplateParameterPropertiesResponse struct {
	// The name of the template parameter.
	Name *string `pulumi:"name"`
	// The value of the template parameter.
	Value *string `pulumi:"value"`
}

// ArmTemplateParameterPropertiesResponseInput is an input type that accepts ArmTemplateParameterPropertiesResponseArgs and ArmTemplateParameterPropertiesResponseOutput values.
// You can construct a concrete instance of `ArmTemplateParameterPropertiesResponseInput` via:
//
//          ArmTemplateParameterPropertiesResponseArgs{...}
type ArmTemplateParameterPropertiesResponseInput interface {
	pulumi.Input

	ToArmTemplateParameterPropertiesResponseOutput() ArmTemplateParameterPropertiesResponseOutput
	ToArmTemplateParameterPropertiesResponseOutputWithContext(context.Context) ArmTemplateParameterPropertiesResponseOutput
}

// Properties of an Azure Resource Manager template parameter.
type ArmTemplateParameterPropertiesResponseArgs struct {
	// The name of the template parameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the template parameter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ArmTemplateParameterPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmTemplateParameterPropertiesResponse)(nil)).Elem()
}

func (i ArmTemplateParameterPropertiesResponseArgs) ToArmTemplateParameterPropertiesResponseOutput() ArmTemplateParameterPropertiesResponseOutput {
	return i.ToArmTemplateParameterPropertiesResponseOutputWithContext(context.Background())
}

func (i ArmTemplateParameterPropertiesResponseArgs) ToArmTemplateParameterPropertiesResponseOutputWithContext(ctx context.Context) ArmTemplateParameterPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmTemplateParameterPropertiesResponseOutput)
}

// ArmTemplateParameterPropertiesResponseArrayInput is an input type that accepts ArmTemplateParameterPropertiesResponseArray and ArmTemplateParameterPropertiesResponseArrayOutput values.
// You can construct a concrete instance of `ArmTemplateParameterPropertiesResponseArrayInput` via:
//
//          ArmTemplateParameterPropertiesResponseArray{ ArmTemplateParameterPropertiesResponseArgs{...} }
type ArmTemplateParameterPropertiesResponseArrayInput interface {
	pulumi.Input

	ToArmTemplateParameterPropertiesResponseArrayOutput() ArmTemplateParameterPropertiesResponseArrayOutput
	ToArmTemplateParameterPropertiesResponseArrayOutputWithContext(context.Context) ArmTemplateParameterPropertiesResponseArrayOutput
}

type ArmTemplateParameterPropertiesResponseArray []ArmTemplateParameterPropertiesResponseInput

func (ArmTemplateParameterPropertiesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArmTemplateParameterPropertiesResponse)(nil)).Elem()
}

func (i ArmTemplateParameterPropertiesResponseArray) ToArmTemplateParameterPropertiesResponseArrayOutput() ArmTemplateParameterPropertiesResponseArrayOutput {
	return i.ToArmTemplateParameterPropertiesResponseArrayOutputWithContext(context.Background())
}

func (i ArmTemplateParameterPropertiesResponseArray) ToArmTemplateParameterPropertiesResponseArrayOutputWithContext(ctx context.Context) ArmTemplateParameterPropertiesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmTemplateParameterPropertiesResponseArrayOutput)
}

// Properties of an Azure Resource Manager template parameter.
type ArmTemplateParameterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ArmTemplateParameterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmTemplateParameterPropertiesResponse)(nil)).Elem()
}

func (o ArmTemplateParameterPropertiesResponseOutput) ToArmTemplateParameterPropertiesResponseOutput() ArmTemplateParameterPropertiesResponseOutput {
	return o
}

func (o ArmTemplateParameterPropertiesResponseOutput) ToArmTemplateParameterPropertiesResponseOutputWithContext(ctx context.Context) ArmTemplateParameterPropertiesResponseOutput {
	return o
}

// The name of the template parameter.
func (o ArmTemplateParameterPropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmTemplateParameterPropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the template parameter.
func (o ArmTemplateParameterPropertiesResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmTemplateParameterPropertiesResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ArmTemplateParameterPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (ArmTemplateParameterPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArmTemplateParameterPropertiesResponse)(nil)).Elem()
}

func (o ArmTemplateParameterPropertiesResponseArrayOutput) ToArmTemplateParameterPropertiesResponseArrayOutput() ArmTemplateParameterPropertiesResponseArrayOutput {
	return o
}

func (o ArmTemplateParameterPropertiesResponseArrayOutput) ToArmTemplateParameterPropertiesResponseArrayOutputWithContext(ctx context.Context) ArmTemplateParameterPropertiesResponseArrayOutput {
	return o
}

func (o ArmTemplateParameterPropertiesResponseArrayOutput) Index(i pulumi.IntInput) ArmTemplateParameterPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArmTemplateParameterPropertiesResponse {
		return vs[0].([]ArmTemplateParameterPropertiesResponse)[vs[1].(int)]
	}).(ArmTemplateParameterPropertiesResponseOutput)
}

// Properties of an artifact deployment.
type ArtifactDeploymentStatusProperties struct {
	// The total count of the artifacts that were successfully applied.
	ArtifactsApplied *int `pulumi:"artifactsApplied"`
	// The deployment status of the artifact.
	DeploymentStatus *string `pulumi:"deploymentStatus"`
	// The total count of the artifacts that were tentatively applied.
	TotalArtifacts *int `pulumi:"totalArtifacts"`
}

// ArtifactDeploymentStatusPropertiesInput is an input type that accepts ArtifactDeploymentStatusPropertiesArgs and ArtifactDeploymentStatusPropertiesOutput values.
// You can construct a concrete instance of `ArtifactDeploymentStatusPropertiesInput` via:
//
//          ArtifactDeploymentStatusPropertiesArgs{...}
type ArtifactDeploymentStatusPropertiesInput interface {
	pulumi.Input

	ToArtifactDeploymentStatusPropertiesOutput() ArtifactDeploymentStatusPropertiesOutput
	ToArtifactDeploymentStatusPropertiesOutputWithContext(context.Context) ArtifactDeploymentStatusPropertiesOutput
}

// Properties of an artifact deployment.
type ArtifactDeploymentStatusPropertiesArgs struct {
	// The total count of the artifacts that were successfully applied.
	ArtifactsApplied pulumi.IntPtrInput `pulumi:"artifactsApplied"`
	// The deployment status of the artifact.
	DeploymentStatus pulumi.StringPtrInput `pulumi:"deploymentStatus"`
	// The total count of the artifacts that were tentatively applied.
	TotalArtifacts pulumi.IntPtrInput `pulumi:"totalArtifacts"`
}

func (ArtifactDeploymentStatusPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactDeploymentStatusProperties)(nil)).Elem()
}

func (i ArtifactDeploymentStatusPropertiesArgs) ToArtifactDeploymentStatusPropertiesOutput() ArtifactDeploymentStatusPropertiesOutput {
	return i.ToArtifactDeploymentStatusPropertiesOutputWithContext(context.Background())
}

func (i ArtifactDeploymentStatusPropertiesArgs) ToArtifactDeploymentStatusPropertiesOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactDeploymentStatusPropertiesOutput)
}

func (i ArtifactDeploymentStatusPropertiesArgs) ToArtifactDeploymentStatusPropertiesPtrOutput() ArtifactDeploymentStatusPropertiesPtrOutput {
	return i.ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(context.Background())
}

func (i ArtifactDeploymentStatusPropertiesArgs) ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactDeploymentStatusPropertiesOutput).ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(ctx)
}

// ArtifactDeploymentStatusPropertiesPtrInput is an input type that accepts ArtifactDeploymentStatusPropertiesArgs, ArtifactDeploymentStatusPropertiesPtr and ArtifactDeploymentStatusPropertiesPtrOutput values.
// You can construct a concrete instance of `ArtifactDeploymentStatusPropertiesPtrInput` via:
//
//          ArtifactDeploymentStatusPropertiesArgs{...}
//
//  or:
//
//          nil
type ArtifactDeploymentStatusPropertiesPtrInput interface {
	pulumi.Input

	ToArtifactDeploymentStatusPropertiesPtrOutput() ArtifactDeploymentStatusPropertiesPtrOutput
	ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(context.Context) ArtifactDeploymentStatusPropertiesPtrOutput
}

type artifactDeploymentStatusPropertiesPtrType ArtifactDeploymentStatusPropertiesArgs

func ArtifactDeploymentStatusPropertiesPtr(v *ArtifactDeploymentStatusPropertiesArgs) ArtifactDeploymentStatusPropertiesPtrInput {
	return (*artifactDeploymentStatusPropertiesPtrType)(v)
}

func (*artifactDeploymentStatusPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactDeploymentStatusProperties)(nil)).Elem()
}

func (i *artifactDeploymentStatusPropertiesPtrType) ToArtifactDeploymentStatusPropertiesPtrOutput() ArtifactDeploymentStatusPropertiesPtrOutput {
	return i.ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(context.Background())
}

func (i *artifactDeploymentStatusPropertiesPtrType) ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactDeploymentStatusPropertiesPtrOutput)
}

// Properties of an artifact deployment.
type ArtifactDeploymentStatusPropertiesOutput struct{ *pulumi.OutputState }

func (ArtifactDeploymentStatusPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactDeploymentStatusProperties)(nil)).Elem()
}

func (o ArtifactDeploymentStatusPropertiesOutput) ToArtifactDeploymentStatusPropertiesOutput() ArtifactDeploymentStatusPropertiesOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesOutput) ToArtifactDeploymentStatusPropertiesOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesOutput) ToArtifactDeploymentStatusPropertiesPtrOutput() ArtifactDeploymentStatusPropertiesPtrOutput {
	return o.ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(context.Background())
}

func (o ArtifactDeploymentStatusPropertiesOutput) ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesPtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusProperties) *ArtifactDeploymentStatusProperties {
		return &v
	}).(ArtifactDeploymentStatusPropertiesPtrOutput)
}

// The total count of the artifacts that were successfully applied.
func (o ArtifactDeploymentStatusPropertiesOutput) ArtifactsApplied() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusProperties) *int { return v.ArtifactsApplied }).(pulumi.IntPtrOutput)
}

// The deployment status of the artifact.
func (o ArtifactDeploymentStatusPropertiesOutput) DeploymentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusProperties) *string { return v.DeploymentStatus }).(pulumi.StringPtrOutput)
}

// The total count of the artifacts that were tentatively applied.
func (o ArtifactDeploymentStatusPropertiesOutput) TotalArtifacts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusProperties) *int { return v.TotalArtifacts }).(pulumi.IntPtrOutput)
}

type ArtifactDeploymentStatusPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ArtifactDeploymentStatusPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactDeploymentStatusProperties)(nil)).Elem()
}

func (o ArtifactDeploymentStatusPropertiesPtrOutput) ToArtifactDeploymentStatusPropertiesPtrOutput() ArtifactDeploymentStatusPropertiesPtrOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesPtrOutput) ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesPtrOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesPtrOutput) Elem() ArtifactDeploymentStatusPropertiesOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusProperties) ArtifactDeploymentStatusProperties { return *v }).(ArtifactDeploymentStatusPropertiesOutput)
}

// The total count of the artifacts that were successfully applied.
func (o ArtifactDeploymentStatusPropertiesPtrOutput) ArtifactsApplied() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusProperties) *int {
		if v == nil {
			return nil
		}
		return v.ArtifactsApplied
	}).(pulumi.IntPtrOutput)
}

// The deployment status of the artifact.
func (o ArtifactDeploymentStatusPropertiesPtrOutput) DeploymentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentStatus
	}).(pulumi.StringPtrOutput)
}

// The total count of the artifacts that were tentatively applied.
func (o ArtifactDeploymentStatusPropertiesPtrOutput) TotalArtifacts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusProperties) *int {
		if v == nil {
			return nil
		}
		return v.TotalArtifacts
	}).(pulumi.IntPtrOutput)
}

// Properties of an artifact deployment.
type ArtifactDeploymentStatusPropertiesInvokeResponse struct {
	// The total count of the artifacts that were successfully applied.
	ArtifactsApplied *int `pulumi:"artifactsApplied"`
	// The deployment status of the artifact.
	DeploymentStatus *string `pulumi:"deploymentStatus"`
	// The total count of the artifacts that were tentatively applied.
	TotalArtifacts *int `pulumi:"totalArtifacts"`
}

// ArtifactDeploymentStatusPropertiesInvokeResponseInput is an input type that accepts ArtifactDeploymentStatusPropertiesInvokeResponseArgs and ArtifactDeploymentStatusPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ArtifactDeploymentStatusPropertiesInvokeResponseInput` via:
//
//          ArtifactDeploymentStatusPropertiesInvokeResponseArgs{...}
type ArtifactDeploymentStatusPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToArtifactDeploymentStatusPropertiesInvokeResponseOutput() ArtifactDeploymentStatusPropertiesInvokeResponseOutput
	ToArtifactDeploymentStatusPropertiesInvokeResponseOutputWithContext(context.Context) ArtifactDeploymentStatusPropertiesInvokeResponseOutput
}

// Properties of an artifact deployment.
type ArtifactDeploymentStatusPropertiesInvokeResponseArgs struct {
	// The total count of the artifacts that were successfully applied.
	ArtifactsApplied pulumi.IntPtrInput `pulumi:"artifactsApplied"`
	// The deployment status of the artifact.
	DeploymentStatus pulumi.StringPtrInput `pulumi:"deploymentStatus"`
	// The total count of the artifacts that were tentatively applied.
	TotalArtifacts pulumi.IntPtrInput `pulumi:"totalArtifacts"`
}

func (ArtifactDeploymentStatusPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactDeploymentStatusPropertiesInvokeResponse)(nil)).Elem()
}

func (i ArtifactDeploymentStatusPropertiesInvokeResponseArgs) ToArtifactDeploymentStatusPropertiesInvokeResponseOutput() ArtifactDeploymentStatusPropertiesInvokeResponseOutput {
	return i.ToArtifactDeploymentStatusPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ArtifactDeploymentStatusPropertiesInvokeResponseArgs) ToArtifactDeploymentStatusPropertiesInvokeResponseOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactDeploymentStatusPropertiesInvokeResponseOutput)
}

func (i ArtifactDeploymentStatusPropertiesInvokeResponseArgs) ToArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput() ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput {
	return i.ToArtifactDeploymentStatusPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ArtifactDeploymentStatusPropertiesInvokeResponseArgs) ToArtifactDeploymentStatusPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactDeploymentStatusPropertiesInvokeResponseOutput).ToArtifactDeploymentStatusPropertiesInvokeResponsePtrOutputWithContext(ctx)
}

// ArtifactDeploymentStatusPropertiesInvokeResponsePtrInput is an input type that accepts ArtifactDeploymentStatusPropertiesInvokeResponseArgs, ArtifactDeploymentStatusPropertiesInvokeResponsePtr and ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ArtifactDeploymentStatusPropertiesInvokeResponsePtrInput` via:
//
//          ArtifactDeploymentStatusPropertiesInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ArtifactDeploymentStatusPropertiesInvokeResponsePtrInput interface {
	pulumi.Input

	ToArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput() ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput
	ToArtifactDeploymentStatusPropertiesInvokeResponsePtrOutputWithContext(context.Context) ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput
}

type artifactDeploymentStatusPropertiesInvokeResponsePtrType ArtifactDeploymentStatusPropertiesInvokeResponseArgs

func ArtifactDeploymentStatusPropertiesInvokeResponsePtr(v *ArtifactDeploymentStatusPropertiesInvokeResponseArgs) ArtifactDeploymentStatusPropertiesInvokeResponsePtrInput {
	return (*artifactDeploymentStatusPropertiesInvokeResponsePtrType)(v)
}

func (*artifactDeploymentStatusPropertiesInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactDeploymentStatusPropertiesInvokeResponse)(nil)).Elem()
}

func (i *artifactDeploymentStatusPropertiesInvokeResponsePtrType) ToArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput() ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput {
	return i.ToArtifactDeploymentStatusPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *artifactDeploymentStatusPropertiesInvokeResponsePtrType) ToArtifactDeploymentStatusPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput)
}

// Properties of an artifact deployment.
type ArtifactDeploymentStatusPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ArtifactDeploymentStatusPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactDeploymentStatusPropertiesInvokeResponse)(nil)).Elem()
}

func (o ArtifactDeploymentStatusPropertiesInvokeResponseOutput) ToArtifactDeploymentStatusPropertiesInvokeResponseOutput() ArtifactDeploymentStatusPropertiesInvokeResponseOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesInvokeResponseOutput) ToArtifactDeploymentStatusPropertiesInvokeResponseOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesInvokeResponseOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesInvokeResponseOutput) ToArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput() ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput {
	return o.ToArtifactDeploymentStatusPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ArtifactDeploymentStatusPropertiesInvokeResponseOutput) ToArtifactDeploymentStatusPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusPropertiesInvokeResponse) *ArtifactDeploymentStatusPropertiesInvokeResponse {
		return &v
	}).(ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput)
}

// The total count of the artifacts that were successfully applied.
func (o ArtifactDeploymentStatusPropertiesInvokeResponseOutput) ArtifactsApplied() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusPropertiesInvokeResponse) *int { return v.ArtifactsApplied }).(pulumi.IntPtrOutput)
}

// The deployment status of the artifact.
func (o ArtifactDeploymentStatusPropertiesInvokeResponseOutput) DeploymentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusPropertiesInvokeResponse) *string { return v.DeploymentStatus }).(pulumi.StringPtrOutput)
}

// The total count of the artifacts that were tentatively applied.
func (o ArtifactDeploymentStatusPropertiesInvokeResponseOutput) TotalArtifacts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusPropertiesInvokeResponse) *int { return v.TotalArtifacts }).(pulumi.IntPtrOutput)
}

type ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactDeploymentStatusPropertiesInvokeResponse)(nil)).Elem()
}

func (o ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput) ToArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput() ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput) ToArtifactDeploymentStatusPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput) Elem() ArtifactDeploymentStatusPropertiesInvokeResponseOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusPropertiesInvokeResponse) ArtifactDeploymentStatusPropertiesInvokeResponse {
		return *v
	}).(ArtifactDeploymentStatusPropertiesInvokeResponseOutput)
}

// The total count of the artifacts that were successfully applied.
func (o ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput) ArtifactsApplied() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusPropertiesInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.ArtifactsApplied
	}).(pulumi.IntPtrOutput)
}

// The deployment status of the artifact.
func (o ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput) DeploymentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusPropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentStatus
	}).(pulumi.StringPtrOutput)
}

// The total count of the artifacts that were tentatively applied.
func (o ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput) TotalArtifacts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusPropertiesInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.TotalArtifacts
	}).(pulumi.IntPtrOutput)
}

// Properties of an artifact deployment.
type ArtifactDeploymentStatusPropertiesResponse struct {
	// The total count of the artifacts that were successfully applied.
	ArtifactsApplied *int `pulumi:"artifactsApplied"`
	// The deployment status of the artifact.
	DeploymentStatus *string `pulumi:"deploymentStatus"`
	// The total count of the artifacts that were tentatively applied.
	TotalArtifacts *int `pulumi:"totalArtifacts"`
}

// ArtifactDeploymentStatusPropertiesResponseInput is an input type that accepts ArtifactDeploymentStatusPropertiesResponseArgs and ArtifactDeploymentStatusPropertiesResponseOutput values.
// You can construct a concrete instance of `ArtifactDeploymentStatusPropertiesResponseInput` via:
//
//          ArtifactDeploymentStatusPropertiesResponseArgs{...}
type ArtifactDeploymentStatusPropertiesResponseInput interface {
	pulumi.Input

	ToArtifactDeploymentStatusPropertiesResponseOutput() ArtifactDeploymentStatusPropertiesResponseOutput
	ToArtifactDeploymentStatusPropertiesResponseOutputWithContext(context.Context) ArtifactDeploymentStatusPropertiesResponseOutput
}

// Properties of an artifact deployment.
type ArtifactDeploymentStatusPropertiesResponseArgs struct {
	// The total count of the artifacts that were successfully applied.
	ArtifactsApplied pulumi.IntPtrInput `pulumi:"artifactsApplied"`
	// The deployment status of the artifact.
	DeploymentStatus pulumi.StringPtrInput `pulumi:"deploymentStatus"`
	// The total count of the artifacts that were tentatively applied.
	TotalArtifacts pulumi.IntPtrInput `pulumi:"totalArtifacts"`
}

func (ArtifactDeploymentStatusPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactDeploymentStatusPropertiesResponse)(nil)).Elem()
}

func (i ArtifactDeploymentStatusPropertiesResponseArgs) ToArtifactDeploymentStatusPropertiesResponseOutput() ArtifactDeploymentStatusPropertiesResponseOutput {
	return i.ToArtifactDeploymentStatusPropertiesResponseOutputWithContext(context.Background())
}

func (i ArtifactDeploymentStatusPropertiesResponseArgs) ToArtifactDeploymentStatusPropertiesResponseOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactDeploymentStatusPropertiesResponseOutput)
}

func (i ArtifactDeploymentStatusPropertiesResponseArgs) ToArtifactDeploymentStatusPropertiesResponsePtrOutput() ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return i.ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ArtifactDeploymentStatusPropertiesResponseArgs) ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactDeploymentStatusPropertiesResponseOutput).ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(ctx)
}

// ArtifactDeploymentStatusPropertiesResponsePtrInput is an input type that accepts ArtifactDeploymentStatusPropertiesResponseArgs, ArtifactDeploymentStatusPropertiesResponsePtr and ArtifactDeploymentStatusPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ArtifactDeploymentStatusPropertiesResponsePtrInput` via:
//
//          ArtifactDeploymentStatusPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ArtifactDeploymentStatusPropertiesResponsePtrInput interface {
	pulumi.Input

	ToArtifactDeploymentStatusPropertiesResponsePtrOutput() ArtifactDeploymentStatusPropertiesResponsePtrOutput
	ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(context.Context) ArtifactDeploymentStatusPropertiesResponsePtrOutput
}

type artifactDeploymentStatusPropertiesResponsePtrType ArtifactDeploymentStatusPropertiesResponseArgs

func ArtifactDeploymentStatusPropertiesResponsePtr(v *ArtifactDeploymentStatusPropertiesResponseArgs) ArtifactDeploymentStatusPropertiesResponsePtrInput {
	return (*artifactDeploymentStatusPropertiesResponsePtrType)(v)
}

func (*artifactDeploymentStatusPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactDeploymentStatusPropertiesResponse)(nil)).Elem()
}

func (i *artifactDeploymentStatusPropertiesResponsePtrType) ToArtifactDeploymentStatusPropertiesResponsePtrOutput() ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return i.ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *artifactDeploymentStatusPropertiesResponsePtrType) ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactDeploymentStatusPropertiesResponsePtrOutput)
}

// Properties of an artifact deployment.
type ArtifactDeploymentStatusPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ArtifactDeploymentStatusPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactDeploymentStatusPropertiesResponse)(nil)).Elem()
}

func (o ArtifactDeploymentStatusPropertiesResponseOutput) ToArtifactDeploymentStatusPropertiesResponseOutput() ArtifactDeploymentStatusPropertiesResponseOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesResponseOutput) ToArtifactDeploymentStatusPropertiesResponseOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesResponseOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesResponseOutput) ToArtifactDeploymentStatusPropertiesResponsePtrOutput() ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return o.ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ArtifactDeploymentStatusPropertiesResponseOutput) ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusPropertiesResponse) *ArtifactDeploymentStatusPropertiesResponse {
		return &v
	}).(ArtifactDeploymentStatusPropertiesResponsePtrOutput)
}

// The total count of the artifacts that were successfully applied.
func (o ArtifactDeploymentStatusPropertiesResponseOutput) ArtifactsApplied() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusPropertiesResponse) *int { return v.ArtifactsApplied }).(pulumi.IntPtrOutput)
}

// The deployment status of the artifact.
func (o ArtifactDeploymentStatusPropertiesResponseOutput) DeploymentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusPropertiesResponse) *string { return v.DeploymentStatus }).(pulumi.StringPtrOutput)
}

// The total count of the artifacts that were tentatively applied.
func (o ArtifactDeploymentStatusPropertiesResponseOutput) TotalArtifacts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusPropertiesResponse) *int { return v.TotalArtifacts }).(pulumi.IntPtrOutput)
}

type ArtifactDeploymentStatusPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ArtifactDeploymentStatusPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactDeploymentStatusPropertiesResponse)(nil)).Elem()
}

func (o ArtifactDeploymentStatusPropertiesResponsePtrOutput) ToArtifactDeploymentStatusPropertiesResponsePtrOutput() ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesResponsePtrOutput) ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesResponsePtrOutput) Elem() ArtifactDeploymentStatusPropertiesResponseOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusPropertiesResponse) ArtifactDeploymentStatusPropertiesResponse {
		return *v
	}).(ArtifactDeploymentStatusPropertiesResponseOutput)
}

// The total count of the artifacts that were successfully applied.
func (o ArtifactDeploymentStatusPropertiesResponsePtrOutput) ArtifactsApplied() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.ArtifactsApplied
	}).(pulumi.IntPtrOutput)
}

// The deployment status of the artifact.
func (o ArtifactDeploymentStatusPropertiesResponsePtrOutput) DeploymentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentStatus
	}).(pulumi.StringPtrOutput)
}

// The total count of the artifacts that were tentatively applied.
func (o ArtifactDeploymentStatusPropertiesResponsePtrOutput) TotalArtifacts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.TotalArtifacts
	}).(pulumi.IntPtrOutput)
}

// Properties of an artifact.
type ArtifactInstallProperties struct {
	// The artifact's identifier.
	ArtifactId *string `pulumi:"artifactId"`
	// The artifact's title.
	ArtifactTitle *string `pulumi:"artifactTitle"`
	// The status message from the deployment.
	DeploymentStatusMessage *string `pulumi:"deploymentStatusMessage"`
	// The time that the artifact starts to install on the virtual machine.
	InstallTime *string `pulumi:"installTime"`
	// The parameters of the artifact.
	Parameters []ArtifactParameterProperties `pulumi:"parameters"`
	// The status of the artifact.
	Status *string `pulumi:"status"`
	// The status message from the virtual machine extension.
	VmExtensionStatusMessage *string `pulumi:"vmExtensionStatusMessage"`
}

// ArtifactInstallPropertiesInput is an input type that accepts ArtifactInstallPropertiesArgs and ArtifactInstallPropertiesOutput values.
// You can construct a concrete instance of `ArtifactInstallPropertiesInput` via:
//
//          ArtifactInstallPropertiesArgs{...}
type ArtifactInstallPropertiesInput interface {
	pulumi.Input

	ToArtifactInstallPropertiesOutput() ArtifactInstallPropertiesOutput
	ToArtifactInstallPropertiesOutputWithContext(context.Context) ArtifactInstallPropertiesOutput
}

// Properties of an artifact.
type ArtifactInstallPropertiesArgs struct {
	// The artifact's identifier.
	ArtifactId pulumi.StringPtrInput `pulumi:"artifactId"`
	// The artifact's title.
	ArtifactTitle pulumi.StringPtrInput `pulumi:"artifactTitle"`
	// The status message from the deployment.
	DeploymentStatusMessage pulumi.StringPtrInput `pulumi:"deploymentStatusMessage"`
	// The time that the artifact starts to install on the virtual machine.
	InstallTime pulumi.StringPtrInput `pulumi:"installTime"`
	// The parameters of the artifact.
	Parameters ArtifactParameterPropertiesArrayInput `pulumi:"parameters"`
	// The status of the artifact.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The status message from the virtual machine extension.
	VmExtensionStatusMessage pulumi.StringPtrInput `pulumi:"vmExtensionStatusMessage"`
}

func (ArtifactInstallPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactInstallProperties)(nil)).Elem()
}

func (i ArtifactInstallPropertiesArgs) ToArtifactInstallPropertiesOutput() ArtifactInstallPropertiesOutput {
	return i.ToArtifactInstallPropertiesOutputWithContext(context.Background())
}

func (i ArtifactInstallPropertiesArgs) ToArtifactInstallPropertiesOutputWithContext(ctx context.Context) ArtifactInstallPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactInstallPropertiesOutput)
}

// ArtifactInstallPropertiesArrayInput is an input type that accepts ArtifactInstallPropertiesArray and ArtifactInstallPropertiesArrayOutput values.
// You can construct a concrete instance of `ArtifactInstallPropertiesArrayInput` via:
//
//          ArtifactInstallPropertiesArray{ ArtifactInstallPropertiesArgs{...} }
type ArtifactInstallPropertiesArrayInput interface {
	pulumi.Input

	ToArtifactInstallPropertiesArrayOutput() ArtifactInstallPropertiesArrayOutput
	ToArtifactInstallPropertiesArrayOutputWithContext(context.Context) ArtifactInstallPropertiesArrayOutput
}

type ArtifactInstallPropertiesArray []ArtifactInstallPropertiesInput

func (ArtifactInstallPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactInstallProperties)(nil)).Elem()
}

func (i ArtifactInstallPropertiesArray) ToArtifactInstallPropertiesArrayOutput() ArtifactInstallPropertiesArrayOutput {
	return i.ToArtifactInstallPropertiesArrayOutputWithContext(context.Background())
}

func (i ArtifactInstallPropertiesArray) ToArtifactInstallPropertiesArrayOutputWithContext(ctx context.Context) ArtifactInstallPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactInstallPropertiesArrayOutput)
}

// Properties of an artifact.
type ArtifactInstallPropertiesOutput struct{ *pulumi.OutputState }

func (ArtifactInstallPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactInstallProperties)(nil)).Elem()
}

func (o ArtifactInstallPropertiesOutput) ToArtifactInstallPropertiesOutput() ArtifactInstallPropertiesOutput {
	return o
}

func (o ArtifactInstallPropertiesOutput) ToArtifactInstallPropertiesOutputWithContext(ctx context.Context) ArtifactInstallPropertiesOutput {
	return o
}

// The artifact's identifier.
func (o ArtifactInstallPropertiesOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallProperties) *string { return v.ArtifactId }).(pulumi.StringPtrOutput)
}

// The artifact's title.
func (o ArtifactInstallPropertiesOutput) ArtifactTitle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallProperties) *string { return v.ArtifactTitle }).(pulumi.StringPtrOutput)
}

// The status message from the deployment.
func (o ArtifactInstallPropertiesOutput) DeploymentStatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallProperties) *string { return v.DeploymentStatusMessage }).(pulumi.StringPtrOutput)
}

// The time that the artifact starts to install on the virtual machine.
func (o ArtifactInstallPropertiesOutput) InstallTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallProperties) *string { return v.InstallTime }).(pulumi.StringPtrOutput)
}

// The parameters of the artifact.
func (o ArtifactInstallPropertiesOutput) Parameters() ArtifactParameterPropertiesArrayOutput {
	return o.ApplyT(func(v ArtifactInstallProperties) []ArtifactParameterProperties { return v.Parameters }).(ArtifactParameterPropertiesArrayOutput)
}

// The status of the artifact.
func (o ArtifactInstallPropertiesOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallProperties) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The status message from the virtual machine extension.
func (o ArtifactInstallPropertiesOutput) VmExtensionStatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallProperties) *string { return v.VmExtensionStatusMessage }).(pulumi.StringPtrOutput)
}

type ArtifactInstallPropertiesArrayOutput struct{ *pulumi.OutputState }

func (ArtifactInstallPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactInstallProperties)(nil)).Elem()
}

func (o ArtifactInstallPropertiesArrayOutput) ToArtifactInstallPropertiesArrayOutput() ArtifactInstallPropertiesArrayOutput {
	return o
}

func (o ArtifactInstallPropertiesArrayOutput) ToArtifactInstallPropertiesArrayOutputWithContext(ctx context.Context) ArtifactInstallPropertiesArrayOutput {
	return o
}

func (o ArtifactInstallPropertiesArrayOutput) Index(i pulumi.IntInput) ArtifactInstallPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArtifactInstallProperties {
		return vs[0].([]ArtifactInstallProperties)[vs[1].(int)]
	}).(ArtifactInstallPropertiesOutput)
}

// Properties of an artifact.
type ArtifactInstallPropertiesInvokeResponse struct {
	// The artifact's identifier.
	ArtifactId *string `pulumi:"artifactId"`
	// The artifact's title.
	ArtifactTitle *string `pulumi:"artifactTitle"`
	// The status message from the deployment.
	DeploymentStatusMessage *string `pulumi:"deploymentStatusMessage"`
	// The time that the artifact starts to install on the virtual machine.
	InstallTime *string `pulumi:"installTime"`
	// The parameters of the artifact.
	Parameters []ArtifactParameterPropertiesInvokeResponse `pulumi:"parameters"`
	// The status of the artifact.
	Status *string `pulumi:"status"`
	// The status message from the virtual machine extension.
	VmExtensionStatusMessage *string `pulumi:"vmExtensionStatusMessage"`
}

// ArtifactInstallPropertiesInvokeResponseInput is an input type that accepts ArtifactInstallPropertiesInvokeResponseArgs and ArtifactInstallPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ArtifactInstallPropertiesInvokeResponseInput` via:
//
//          ArtifactInstallPropertiesInvokeResponseArgs{...}
type ArtifactInstallPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToArtifactInstallPropertiesInvokeResponseOutput() ArtifactInstallPropertiesInvokeResponseOutput
	ToArtifactInstallPropertiesInvokeResponseOutputWithContext(context.Context) ArtifactInstallPropertiesInvokeResponseOutput
}

// Properties of an artifact.
type ArtifactInstallPropertiesInvokeResponseArgs struct {
	// The artifact's identifier.
	ArtifactId pulumi.StringPtrInput `pulumi:"artifactId"`
	// The artifact's title.
	ArtifactTitle pulumi.StringPtrInput `pulumi:"artifactTitle"`
	// The status message from the deployment.
	DeploymentStatusMessage pulumi.StringPtrInput `pulumi:"deploymentStatusMessage"`
	// The time that the artifact starts to install on the virtual machine.
	InstallTime pulumi.StringPtrInput `pulumi:"installTime"`
	// The parameters of the artifact.
	Parameters ArtifactParameterPropertiesInvokeResponseArrayInput `pulumi:"parameters"`
	// The status of the artifact.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The status message from the virtual machine extension.
	VmExtensionStatusMessage pulumi.StringPtrInput `pulumi:"vmExtensionStatusMessage"`
}

func (ArtifactInstallPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactInstallPropertiesInvokeResponse)(nil)).Elem()
}

func (i ArtifactInstallPropertiesInvokeResponseArgs) ToArtifactInstallPropertiesInvokeResponseOutput() ArtifactInstallPropertiesInvokeResponseOutput {
	return i.ToArtifactInstallPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ArtifactInstallPropertiesInvokeResponseArgs) ToArtifactInstallPropertiesInvokeResponseOutputWithContext(ctx context.Context) ArtifactInstallPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactInstallPropertiesInvokeResponseOutput)
}

// ArtifactInstallPropertiesInvokeResponseArrayInput is an input type that accepts ArtifactInstallPropertiesInvokeResponseArray and ArtifactInstallPropertiesInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ArtifactInstallPropertiesInvokeResponseArrayInput` via:
//
//          ArtifactInstallPropertiesInvokeResponseArray{ ArtifactInstallPropertiesInvokeResponseArgs{...} }
type ArtifactInstallPropertiesInvokeResponseArrayInput interface {
	pulumi.Input

	ToArtifactInstallPropertiesInvokeResponseArrayOutput() ArtifactInstallPropertiesInvokeResponseArrayOutput
	ToArtifactInstallPropertiesInvokeResponseArrayOutputWithContext(context.Context) ArtifactInstallPropertiesInvokeResponseArrayOutput
}

type ArtifactInstallPropertiesInvokeResponseArray []ArtifactInstallPropertiesInvokeResponseInput

func (ArtifactInstallPropertiesInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactInstallPropertiesInvokeResponse)(nil)).Elem()
}

func (i ArtifactInstallPropertiesInvokeResponseArray) ToArtifactInstallPropertiesInvokeResponseArrayOutput() ArtifactInstallPropertiesInvokeResponseArrayOutput {
	return i.ToArtifactInstallPropertiesInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ArtifactInstallPropertiesInvokeResponseArray) ToArtifactInstallPropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) ArtifactInstallPropertiesInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactInstallPropertiesInvokeResponseArrayOutput)
}

// Properties of an artifact.
type ArtifactInstallPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ArtifactInstallPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactInstallPropertiesInvokeResponse)(nil)).Elem()
}

func (o ArtifactInstallPropertiesInvokeResponseOutput) ToArtifactInstallPropertiesInvokeResponseOutput() ArtifactInstallPropertiesInvokeResponseOutput {
	return o
}

func (o ArtifactInstallPropertiesInvokeResponseOutput) ToArtifactInstallPropertiesInvokeResponseOutputWithContext(ctx context.Context) ArtifactInstallPropertiesInvokeResponseOutput {
	return o
}

// The artifact's identifier.
func (o ArtifactInstallPropertiesInvokeResponseOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallPropertiesInvokeResponse) *string { return v.ArtifactId }).(pulumi.StringPtrOutput)
}

// The artifact's title.
func (o ArtifactInstallPropertiesInvokeResponseOutput) ArtifactTitle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallPropertiesInvokeResponse) *string { return v.ArtifactTitle }).(pulumi.StringPtrOutput)
}

// The status message from the deployment.
func (o ArtifactInstallPropertiesInvokeResponseOutput) DeploymentStatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallPropertiesInvokeResponse) *string { return v.DeploymentStatusMessage }).(pulumi.StringPtrOutput)
}

// The time that the artifact starts to install on the virtual machine.
func (o ArtifactInstallPropertiesInvokeResponseOutput) InstallTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallPropertiesInvokeResponse) *string { return v.InstallTime }).(pulumi.StringPtrOutput)
}

// The parameters of the artifact.
func (o ArtifactInstallPropertiesInvokeResponseOutput) Parameters() ArtifactParameterPropertiesInvokeResponseArrayOutput {
	return o.ApplyT(func(v ArtifactInstallPropertiesInvokeResponse) []ArtifactParameterPropertiesInvokeResponse {
		return v.Parameters
	}).(ArtifactParameterPropertiesInvokeResponseArrayOutput)
}

// The status of the artifact.
func (o ArtifactInstallPropertiesInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallPropertiesInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The status message from the virtual machine extension.
func (o ArtifactInstallPropertiesInvokeResponseOutput) VmExtensionStatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallPropertiesInvokeResponse) *string { return v.VmExtensionStatusMessage }).(pulumi.StringPtrOutput)
}

type ArtifactInstallPropertiesInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ArtifactInstallPropertiesInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactInstallPropertiesInvokeResponse)(nil)).Elem()
}

func (o ArtifactInstallPropertiesInvokeResponseArrayOutput) ToArtifactInstallPropertiesInvokeResponseArrayOutput() ArtifactInstallPropertiesInvokeResponseArrayOutput {
	return o
}

func (o ArtifactInstallPropertiesInvokeResponseArrayOutput) ToArtifactInstallPropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) ArtifactInstallPropertiesInvokeResponseArrayOutput {
	return o
}

func (o ArtifactInstallPropertiesInvokeResponseArrayOutput) Index(i pulumi.IntInput) ArtifactInstallPropertiesInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArtifactInstallPropertiesInvokeResponse {
		return vs[0].([]ArtifactInstallPropertiesInvokeResponse)[vs[1].(int)]
	}).(ArtifactInstallPropertiesInvokeResponseOutput)
}

// Properties of an artifact.
type ArtifactInstallPropertiesResponse struct {
	// The artifact's identifier.
	ArtifactId *string `pulumi:"artifactId"`
	// The artifact's title.
	ArtifactTitle *string `pulumi:"artifactTitle"`
	// The status message from the deployment.
	DeploymentStatusMessage *string `pulumi:"deploymentStatusMessage"`
	// The time that the artifact starts to install on the virtual machine.
	InstallTime *string `pulumi:"installTime"`
	// The parameters of the artifact.
	Parameters []ArtifactParameterPropertiesResponse `pulumi:"parameters"`
	// The status of the artifact.
	Status *string `pulumi:"status"`
	// The status message from the virtual machine extension.
	VmExtensionStatusMessage *string `pulumi:"vmExtensionStatusMessage"`
}

// ArtifactInstallPropertiesResponseInput is an input type that accepts ArtifactInstallPropertiesResponseArgs and ArtifactInstallPropertiesResponseOutput values.
// You can construct a concrete instance of `ArtifactInstallPropertiesResponseInput` via:
//
//          ArtifactInstallPropertiesResponseArgs{...}
type ArtifactInstallPropertiesResponseInput interface {
	pulumi.Input

	ToArtifactInstallPropertiesResponseOutput() ArtifactInstallPropertiesResponseOutput
	ToArtifactInstallPropertiesResponseOutputWithContext(context.Context) ArtifactInstallPropertiesResponseOutput
}

// Properties of an artifact.
type ArtifactInstallPropertiesResponseArgs struct {
	// The artifact's identifier.
	ArtifactId pulumi.StringPtrInput `pulumi:"artifactId"`
	// The artifact's title.
	ArtifactTitle pulumi.StringPtrInput `pulumi:"artifactTitle"`
	// The status message from the deployment.
	DeploymentStatusMessage pulumi.StringPtrInput `pulumi:"deploymentStatusMessage"`
	// The time that the artifact starts to install on the virtual machine.
	InstallTime pulumi.StringPtrInput `pulumi:"installTime"`
	// The parameters of the artifact.
	Parameters ArtifactParameterPropertiesResponseArrayInput `pulumi:"parameters"`
	// The status of the artifact.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The status message from the virtual machine extension.
	VmExtensionStatusMessage pulumi.StringPtrInput `pulumi:"vmExtensionStatusMessage"`
}

func (ArtifactInstallPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactInstallPropertiesResponse)(nil)).Elem()
}

func (i ArtifactInstallPropertiesResponseArgs) ToArtifactInstallPropertiesResponseOutput() ArtifactInstallPropertiesResponseOutput {
	return i.ToArtifactInstallPropertiesResponseOutputWithContext(context.Background())
}

func (i ArtifactInstallPropertiesResponseArgs) ToArtifactInstallPropertiesResponseOutputWithContext(ctx context.Context) ArtifactInstallPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactInstallPropertiesResponseOutput)
}

// ArtifactInstallPropertiesResponseArrayInput is an input type that accepts ArtifactInstallPropertiesResponseArray and ArtifactInstallPropertiesResponseArrayOutput values.
// You can construct a concrete instance of `ArtifactInstallPropertiesResponseArrayInput` via:
//
//          ArtifactInstallPropertiesResponseArray{ ArtifactInstallPropertiesResponseArgs{...} }
type ArtifactInstallPropertiesResponseArrayInput interface {
	pulumi.Input

	ToArtifactInstallPropertiesResponseArrayOutput() ArtifactInstallPropertiesResponseArrayOutput
	ToArtifactInstallPropertiesResponseArrayOutputWithContext(context.Context) ArtifactInstallPropertiesResponseArrayOutput
}

type ArtifactInstallPropertiesResponseArray []ArtifactInstallPropertiesResponseInput

func (ArtifactInstallPropertiesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactInstallPropertiesResponse)(nil)).Elem()
}

func (i ArtifactInstallPropertiesResponseArray) ToArtifactInstallPropertiesResponseArrayOutput() ArtifactInstallPropertiesResponseArrayOutput {
	return i.ToArtifactInstallPropertiesResponseArrayOutputWithContext(context.Background())
}

func (i ArtifactInstallPropertiesResponseArray) ToArtifactInstallPropertiesResponseArrayOutputWithContext(ctx context.Context) ArtifactInstallPropertiesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactInstallPropertiesResponseArrayOutput)
}

// Properties of an artifact.
type ArtifactInstallPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ArtifactInstallPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactInstallPropertiesResponse)(nil)).Elem()
}

func (o ArtifactInstallPropertiesResponseOutput) ToArtifactInstallPropertiesResponseOutput() ArtifactInstallPropertiesResponseOutput {
	return o
}

func (o ArtifactInstallPropertiesResponseOutput) ToArtifactInstallPropertiesResponseOutputWithContext(ctx context.Context) ArtifactInstallPropertiesResponseOutput {
	return o
}

// The artifact's identifier.
func (o ArtifactInstallPropertiesResponseOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallPropertiesResponse) *string { return v.ArtifactId }).(pulumi.StringPtrOutput)
}

// The artifact's title.
func (o ArtifactInstallPropertiesResponseOutput) ArtifactTitle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallPropertiesResponse) *string { return v.ArtifactTitle }).(pulumi.StringPtrOutput)
}

// The status message from the deployment.
func (o ArtifactInstallPropertiesResponseOutput) DeploymentStatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallPropertiesResponse) *string { return v.DeploymentStatusMessage }).(pulumi.StringPtrOutput)
}

// The time that the artifact starts to install on the virtual machine.
func (o ArtifactInstallPropertiesResponseOutput) InstallTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallPropertiesResponse) *string { return v.InstallTime }).(pulumi.StringPtrOutput)
}

// The parameters of the artifact.
func (o ArtifactInstallPropertiesResponseOutput) Parameters() ArtifactParameterPropertiesResponseArrayOutput {
	return o.ApplyT(func(v ArtifactInstallPropertiesResponse) []ArtifactParameterPropertiesResponse { return v.Parameters }).(ArtifactParameterPropertiesResponseArrayOutput)
}

// The status of the artifact.
func (o ArtifactInstallPropertiesResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallPropertiesResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The status message from the virtual machine extension.
func (o ArtifactInstallPropertiesResponseOutput) VmExtensionStatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallPropertiesResponse) *string { return v.VmExtensionStatusMessage }).(pulumi.StringPtrOutput)
}

type ArtifactInstallPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (ArtifactInstallPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactInstallPropertiesResponse)(nil)).Elem()
}

func (o ArtifactInstallPropertiesResponseArrayOutput) ToArtifactInstallPropertiesResponseArrayOutput() ArtifactInstallPropertiesResponseArrayOutput {
	return o
}

func (o ArtifactInstallPropertiesResponseArrayOutput) ToArtifactInstallPropertiesResponseArrayOutputWithContext(ctx context.Context) ArtifactInstallPropertiesResponseArrayOutput {
	return o
}

func (o ArtifactInstallPropertiesResponseArrayOutput) Index(i pulumi.IntInput) ArtifactInstallPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArtifactInstallPropertiesResponse {
		return vs[0].([]ArtifactInstallPropertiesResponse)[vs[1].(int)]
	}).(ArtifactInstallPropertiesResponseOutput)
}

// Properties of an artifact parameter.
type ArtifactParameterProperties struct {
	// The name of the artifact parameter.
	Name *string `pulumi:"name"`
	// The value of the artifact parameter.
	Value *string `pulumi:"value"`
}

// ArtifactParameterPropertiesInput is an input type that accepts ArtifactParameterPropertiesArgs and ArtifactParameterPropertiesOutput values.
// You can construct a concrete instance of `ArtifactParameterPropertiesInput` via:
//
//          ArtifactParameterPropertiesArgs{...}
type ArtifactParameterPropertiesInput interface {
	pulumi.Input

	ToArtifactParameterPropertiesOutput() ArtifactParameterPropertiesOutput
	ToArtifactParameterPropertiesOutputWithContext(context.Context) ArtifactParameterPropertiesOutput
}

// Properties of an artifact parameter.
type ArtifactParameterPropertiesArgs struct {
	// The name of the artifact parameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the artifact parameter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ArtifactParameterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactParameterProperties)(nil)).Elem()
}

func (i ArtifactParameterPropertiesArgs) ToArtifactParameterPropertiesOutput() ArtifactParameterPropertiesOutput {
	return i.ToArtifactParameterPropertiesOutputWithContext(context.Background())
}

func (i ArtifactParameterPropertiesArgs) ToArtifactParameterPropertiesOutputWithContext(ctx context.Context) ArtifactParameterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactParameterPropertiesOutput)
}

// ArtifactParameterPropertiesArrayInput is an input type that accepts ArtifactParameterPropertiesArray and ArtifactParameterPropertiesArrayOutput values.
// You can construct a concrete instance of `ArtifactParameterPropertiesArrayInput` via:
//
//          ArtifactParameterPropertiesArray{ ArtifactParameterPropertiesArgs{...} }
type ArtifactParameterPropertiesArrayInput interface {
	pulumi.Input

	ToArtifactParameterPropertiesArrayOutput() ArtifactParameterPropertiesArrayOutput
	ToArtifactParameterPropertiesArrayOutputWithContext(context.Context) ArtifactParameterPropertiesArrayOutput
}

type ArtifactParameterPropertiesArray []ArtifactParameterPropertiesInput

func (ArtifactParameterPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactParameterProperties)(nil)).Elem()
}

func (i ArtifactParameterPropertiesArray) ToArtifactParameterPropertiesArrayOutput() ArtifactParameterPropertiesArrayOutput {
	return i.ToArtifactParameterPropertiesArrayOutputWithContext(context.Background())
}

func (i ArtifactParameterPropertiesArray) ToArtifactParameterPropertiesArrayOutputWithContext(ctx context.Context) ArtifactParameterPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactParameterPropertiesArrayOutput)
}

// Properties of an artifact parameter.
type ArtifactParameterPropertiesOutput struct{ *pulumi.OutputState }

func (ArtifactParameterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactParameterProperties)(nil)).Elem()
}

func (o ArtifactParameterPropertiesOutput) ToArtifactParameterPropertiesOutput() ArtifactParameterPropertiesOutput {
	return o
}

func (o ArtifactParameterPropertiesOutput) ToArtifactParameterPropertiesOutputWithContext(ctx context.Context) ArtifactParameterPropertiesOutput {
	return o
}

// The name of the artifact parameter.
func (o ArtifactParameterPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactParameterProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the artifact parameter.
func (o ArtifactParameterPropertiesOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactParameterProperties) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ArtifactParameterPropertiesArrayOutput struct{ *pulumi.OutputState }

func (ArtifactParameterPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactParameterProperties)(nil)).Elem()
}

func (o ArtifactParameterPropertiesArrayOutput) ToArtifactParameterPropertiesArrayOutput() ArtifactParameterPropertiesArrayOutput {
	return o
}

func (o ArtifactParameterPropertiesArrayOutput) ToArtifactParameterPropertiesArrayOutputWithContext(ctx context.Context) ArtifactParameterPropertiesArrayOutput {
	return o
}

func (o ArtifactParameterPropertiesArrayOutput) Index(i pulumi.IntInput) ArtifactParameterPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArtifactParameterProperties {
		return vs[0].([]ArtifactParameterProperties)[vs[1].(int)]
	}).(ArtifactParameterPropertiesOutput)
}

// Properties of an artifact parameter.
type ArtifactParameterPropertiesInvokeResponse struct {
	// The name of the artifact parameter.
	Name *string `pulumi:"name"`
	// The value of the artifact parameter.
	Value *string `pulumi:"value"`
}

// ArtifactParameterPropertiesInvokeResponseInput is an input type that accepts ArtifactParameterPropertiesInvokeResponseArgs and ArtifactParameterPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ArtifactParameterPropertiesInvokeResponseInput` via:
//
//          ArtifactParameterPropertiesInvokeResponseArgs{...}
type ArtifactParameterPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToArtifactParameterPropertiesInvokeResponseOutput() ArtifactParameterPropertiesInvokeResponseOutput
	ToArtifactParameterPropertiesInvokeResponseOutputWithContext(context.Context) ArtifactParameterPropertiesInvokeResponseOutput
}

// Properties of an artifact parameter.
type ArtifactParameterPropertiesInvokeResponseArgs struct {
	// The name of the artifact parameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the artifact parameter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ArtifactParameterPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactParameterPropertiesInvokeResponse)(nil)).Elem()
}

func (i ArtifactParameterPropertiesInvokeResponseArgs) ToArtifactParameterPropertiesInvokeResponseOutput() ArtifactParameterPropertiesInvokeResponseOutput {
	return i.ToArtifactParameterPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ArtifactParameterPropertiesInvokeResponseArgs) ToArtifactParameterPropertiesInvokeResponseOutputWithContext(ctx context.Context) ArtifactParameterPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactParameterPropertiesInvokeResponseOutput)
}

// ArtifactParameterPropertiesInvokeResponseArrayInput is an input type that accepts ArtifactParameterPropertiesInvokeResponseArray and ArtifactParameterPropertiesInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ArtifactParameterPropertiesInvokeResponseArrayInput` via:
//
//          ArtifactParameterPropertiesInvokeResponseArray{ ArtifactParameterPropertiesInvokeResponseArgs{...} }
type ArtifactParameterPropertiesInvokeResponseArrayInput interface {
	pulumi.Input

	ToArtifactParameterPropertiesInvokeResponseArrayOutput() ArtifactParameterPropertiesInvokeResponseArrayOutput
	ToArtifactParameterPropertiesInvokeResponseArrayOutputWithContext(context.Context) ArtifactParameterPropertiesInvokeResponseArrayOutput
}

type ArtifactParameterPropertiesInvokeResponseArray []ArtifactParameterPropertiesInvokeResponseInput

func (ArtifactParameterPropertiesInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactParameterPropertiesInvokeResponse)(nil)).Elem()
}

func (i ArtifactParameterPropertiesInvokeResponseArray) ToArtifactParameterPropertiesInvokeResponseArrayOutput() ArtifactParameterPropertiesInvokeResponseArrayOutput {
	return i.ToArtifactParameterPropertiesInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ArtifactParameterPropertiesInvokeResponseArray) ToArtifactParameterPropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) ArtifactParameterPropertiesInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactParameterPropertiesInvokeResponseArrayOutput)
}

// Properties of an artifact parameter.
type ArtifactParameterPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ArtifactParameterPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactParameterPropertiesInvokeResponse)(nil)).Elem()
}

func (o ArtifactParameterPropertiesInvokeResponseOutput) ToArtifactParameterPropertiesInvokeResponseOutput() ArtifactParameterPropertiesInvokeResponseOutput {
	return o
}

func (o ArtifactParameterPropertiesInvokeResponseOutput) ToArtifactParameterPropertiesInvokeResponseOutputWithContext(ctx context.Context) ArtifactParameterPropertiesInvokeResponseOutput {
	return o
}

// The name of the artifact parameter.
func (o ArtifactParameterPropertiesInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactParameterPropertiesInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the artifact parameter.
func (o ArtifactParameterPropertiesInvokeResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactParameterPropertiesInvokeResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ArtifactParameterPropertiesInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ArtifactParameterPropertiesInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactParameterPropertiesInvokeResponse)(nil)).Elem()
}

func (o ArtifactParameterPropertiesInvokeResponseArrayOutput) ToArtifactParameterPropertiesInvokeResponseArrayOutput() ArtifactParameterPropertiesInvokeResponseArrayOutput {
	return o
}

func (o ArtifactParameterPropertiesInvokeResponseArrayOutput) ToArtifactParameterPropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) ArtifactParameterPropertiesInvokeResponseArrayOutput {
	return o
}

func (o ArtifactParameterPropertiesInvokeResponseArrayOutput) Index(i pulumi.IntInput) ArtifactParameterPropertiesInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArtifactParameterPropertiesInvokeResponse {
		return vs[0].([]ArtifactParameterPropertiesInvokeResponse)[vs[1].(int)]
	}).(ArtifactParameterPropertiesInvokeResponseOutput)
}

// Properties of an artifact parameter.
type ArtifactParameterPropertiesResponse struct {
	// The name of the artifact parameter.
	Name *string `pulumi:"name"`
	// The value of the artifact parameter.
	Value *string `pulumi:"value"`
}

// ArtifactParameterPropertiesResponseInput is an input type that accepts ArtifactParameterPropertiesResponseArgs and ArtifactParameterPropertiesResponseOutput values.
// You can construct a concrete instance of `ArtifactParameterPropertiesResponseInput` via:
//
//          ArtifactParameterPropertiesResponseArgs{...}
type ArtifactParameterPropertiesResponseInput interface {
	pulumi.Input

	ToArtifactParameterPropertiesResponseOutput() ArtifactParameterPropertiesResponseOutput
	ToArtifactParameterPropertiesResponseOutputWithContext(context.Context) ArtifactParameterPropertiesResponseOutput
}

// Properties of an artifact parameter.
type ArtifactParameterPropertiesResponseArgs struct {
	// The name of the artifact parameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the artifact parameter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ArtifactParameterPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactParameterPropertiesResponse)(nil)).Elem()
}

func (i ArtifactParameterPropertiesResponseArgs) ToArtifactParameterPropertiesResponseOutput() ArtifactParameterPropertiesResponseOutput {
	return i.ToArtifactParameterPropertiesResponseOutputWithContext(context.Background())
}

func (i ArtifactParameterPropertiesResponseArgs) ToArtifactParameterPropertiesResponseOutputWithContext(ctx context.Context) ArtifactParameterPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactParameterPropertiesResponseOutput)
}

// ArtifactParameterPropertiesResponseArrayInput is an input type that accepts ArtifactParameterPropertiesResponseArray and ArtifactParameterPropertiesResponseArrayOutput values.
// You can construct a concrete instance of `ArtifactParameterPropertiesResponseArrayInput` via:
//
//          ArtifactParameterPropertiesResponseArray{ ArtifactParameterPropertiesResponseArgs{...} }
type ArtifactParameterPropertiesResponseArrayInput interface {
	pulumi.Input

	ToArtifactParameterPropertiesResponseArrayOutput() ArtifactParameterPropertiesResponseArrayOutput
	ToArtifactParameterPropertiesResponseArrayOutputWithContext(context.Context) ArtifactParameterPropertiesResponseArrayOutput
}

type ArtifactParameterPropertiesResponseArray []ArtifactParameterPropertiesResponseInput

func (ArtifactParameterPropertiesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactParameterPropertiesResponse)(nil)).Elem()
}

func (i ArtifactParameterPropertiesResponseArray) ToArtifactParameterPropertiesResponseArrayOutput() ArtifactParameterPropertiesResponseArrayOutput {
	return i.ToArtifactParameterPropertiesResponseArrayOutputWithContext(context.Background())
}

func (i ArtifactParameterPropertiesResponseArray) ToArtifactParameterPropertiesResponseArrayOutputWithContext(ctx context.Context) ArtifactParameterPropertiesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactParameterPropertiesResponseArrayOutput)
}

// Properties of an artifact parameter.
type ArtifactParameterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ArtifactParameterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactParameterPropertiesResponse)(nil)).Elem()
}

func (o ArtifactParameterPropertiesResponseOutput) ToArtifactParameterPropertiesResponseOutput() ArtifactParameterPropertiesResponseOutput {
	return o
}

func (o ArtifactParameterPropertiesResponseOutput) ToArtifactParameterPropertiesResponseOutputWithContext(ctx context.Context) ArtifactParameterPropertiesResponseOutput {
	return o
}

// The name of the artifact parameter.
func (o ArtifactParameterPropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactParameterPropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the artifact parameter.
func (o ArtifactParameterPropertiesResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactParameterPropertiesResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ArtifactParameterPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (ArtifactParameterPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactParameterPropertiesResponse)(nil)).Elem()
}

func (o ArtifactParameterPropertiesResponseArrayOutput) ToArtifactParameterPropertiesResponseArrayOutput() ArtifactParameterPropertiesResponseArrayOutput {
	return o
}

func (o ArtifactParameterPropertiesResponseArrayOutput) ToArtifactParameterPropertiesResponseArrayOutputWithContext(ctx context.Context) ArtifactParameterPropertiesResponseArrayOutput {
	return o
}

func (o ArtifactParameterPropertiesResponseArrayOutput) Index(i pulumi.IntInput) ArtifactParameterPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArtifactParameterPropertiesResponse {
		return vs[0].([]ArtifactParameterPropertiesResponse)[vs[1].(int)]
	}).(ArtifactParameterPropertiesResponseOutput)
}

// Properties to attach new disk to the Virtual Machine.
type AttachNewDataDiskOptions struct {
	// The name of the disk to be attached.
	DiskName *string `pulumi:"diskName"`
	// Size of the disk to be attached in GibiBytes.
	DiskSizeGiB *int `pulumi:"diskSizeGiB"`
	// The storage type for the disk (i.e. Standard, Premium).
	DiskType *string `pulumi:"diskType"`
}

// AttachNewDataDiskOptionsInput is an input type that accepts AttachNewDataDiskOptionsArgs and AttachNewDataDiskOptionsOutput values.
// You can construct a concrete instance of `AttachNewDataDiskOptionsInput` via:
//
//          AttachNewDataDiskOptionsArgs{...}
type AttachNewDataDiskOptionsInput interface {
	pulumi.Input

	ToAttachNewDataDiskOptionsOutput() AttachNewDataDiskOptionsOutput
	ToAttachNewDataDiskOptionsOutputWithContext(context.Context) AttachNewDataDiskOptionsOutput
}

// Properties to attach new disk to the Virtual Machine.
type AttachNewDataDiskOptionsArgs struct {
	// The name of the disk to be attached.
	DiskName pulumi.StringPtrInput `pulumi:"diskName"`
	// Size of the disk to be attached in GibiBytes.
	DiskSizeGiB pulumi.IntPtrInput `pulumi:"diskSizeGiB"`
	// The storage type for the disk (i.e. Standard, Premium).
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
}

func (AttachNewDataDiskOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachNewDataDiskOptions)(nil)).Elem()
}

func (i AttachNewDataDiskOptionsArgs) ToAttachNewDataDiskOptionsOutput() AttachNewDataDiskOptionsOutput {
	return i.ToAttachNewDataDiskOptionsOutputWithContext(context.Background())
}

func (i AttachNewDataDiskOptionsArgs) ToAttachNewDataDiskOptionsOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachNewDataDiskOptionsOutput)
}

func (i AttachNewDataDiskOptionsArgs) ToAttachNewDataDiskOptionsPtrOutput() AttachNewDataDiskOptionsPtrOutput {
	return i.ToAttachNewDataDiskOptionsPtrOutputWithContext(context.Background())
}

func (i AttachNewDataDiskOptionsArgs) ToAttachNewDataDiskOptionsPtrOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachNewDataDiskOptionsOutput).ToAttachNewDataDiskOptionsPtrOutputWithContext(ctx)
}

// AttachNewDataDiskOptionsPtrInput is an input type that accepts AttachNewDataDiskOptionsArgs, AttachNewDataDiskOptionsPtr and AttachNewDataDiskOptionsPtrOutput values.
// You can construct a concrete instance of `AttachNewDataDiskOptionsPtrInput` via:
//
//          AttachNewDataDiskOptionsArgs{...}
//
//  or:
//
//          nil
type AttachNewDataDiskOptionsPtrInput interface {
	pulumi.Input

	ToAttachNewDataDiskOptionsPtrOutput() AttachNewDataDiskOptionsPtrOutput
	ToAttachNewDataDiskOptionsPtrOutputWithContext(context.Context) AttachNewDataDiskOptionsPtrOutput
}

type attachNewDataDiskOptionsPtrType AttachNewDataDiskOptionsArgs

func AttachNewDataDiskOptionsPtr(v *AttachNewDataDiskOptionsArgs) AttachNewDataDiskOptionsPtrInput {
	return (*attachNewDataDiskOptionsPtrType)(v)
}

func (*attachNewDataDiskOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachNewDataDiskOptions)(nil)).Elem()
}

func (i *attachNewDataDiskOptionsPtrType) ToAttachNewDataDiskOptionsPtrOutput() AttachNewDataDiskOptionsPtrOutput {
	return i.ToAttachNewDataDiskOptionsPtrOutputWithContext(context.Background())
}

func (i *attachNewDataDiskOptionsPtrType) ToAttachNewDataDiskOptionsPtrOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachNewDataDiskOptionsPtrOutput)
}

// Properties to attach new disk to the Virtual Machine.
type AttachNewDataDiskOptionsOutput struct{ *pulumi.OutputState }

func (AttachNewDataDiskOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachNewDataDiskOptions)(nil)).Elem()
}

func (o AttachNewDataDiskOptionsOutput) ToAttachNewDataDiskOptionsOutput() AttachNewDataDiskOptionsOutput {
	return o
}

func (o AttachNewDataDiskOptionsOutput) ToAttachNewDataDiskOptionsOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsOutput {
	return o
}

func (o AttachNewDataDiskOptionsOutput) ToAttachNewDataDiskOptionsPtrOutput() AttachNewDataDiskOptionsPtrOutput {
	return o.ToAttachNewDataDiskOptionsPtrOutputWithContext(context.Background())
}

func (o AttachNewDataDiskOptionsOutput) ToAttachNewDataDiskOptionsPtrOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsPtrOutput {
	return o.ApplyT(func(v AttachNewDataDiskOptions) *AttachNewDataDiskOptions {
		return &v
	}).(AttachNewDataDiskOptionsPtrOutput)
}

// The name of the disk to be attached.
func (o AttachNewDataDiskOptionsOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachNewDataDiskOptions) *string { return v.DiskName }).(pulumi.StringPtrOutput)
}

// Size of the disk to be attached in GibiBytes.
func (o AttachNewDataDiskOptionsOutput) DiskSizeGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttachNewDataDiskOptions) *int { return v.DiskSizeGiB }).(pulumi.IntPtrOutput)
}

// The storage type for the disk (i.e. Standard, Premium).
func (o AttachNewDataDiskOptionsOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachNewDataDiskOptions) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

type AttachNewDataDiskOptionsPtrOutput struct{ *pulumi.OutputState }

func (AttachNewDataDiskOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachNewDataDiskOptions)(nil)).Elem()
}

func (o AttachNewDataDiskOptionsPtrOutput) ToAttachNewDataDiskOptionsPtrOutput() AttachNewDataDiskOptionsPtrOutput {
	return o
}

func (o AttachNewDataDiskOptionsPtrOutput) ToAttachNewDataDiskOptionsPtrOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsPtrOutput {
	return o
}

func (o AttachNewDataDiskOptionsPtrOutput) Elem() AttachNewDataDiskOptionsOutput {
	return o.ApplyT(func(v *AttachNewDataDiskOptions) AttachNewDataDiskOptions { return *v }).(AttachNewDataDiskOptionsOutput)
}

// The name of the disk to be attached.
func (o AttachNewDataDiskOptionsPtrOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachNewDataDiskOptions) *string {
		if v == nil {
			return nil
		}
		return v.DiskName
	}).(pulumi.StringPtrOutput)
}

// Size of the disk to be attached in GibiBytes.
func (o AttachNewDataDiskOptionsPtrOutput) DiskSizeGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttachNewDataDiskOptions) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGiB
	}).(pulumi.IntPtrOutput)
}

// The storage type for the disk (i.e. Standard, Premium).
func (o AttachNewDataDiskOptionsPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachNewDataDiskOptions) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

// Properties to attach new disk to the Virtual Machine.
type AttachNewDataDiskOptionsInvokeResponse struct {
	// The name of the disk to be attached.
	DiskName *string `pulumi:"diskName"`
	// Size of the disk to be attached in GibiBytes.
	DiskSizeGiB *int `pulumi:"diskSizeGiB"`
	// The storage type for the disk (i.e. Standard, Premium).
	DiskType *string `pulumi:"diskType"`
}

// AttachNewDataDiskOptionsInvokeResponseInput is an input type that accepts AttachNewDataDiskOptionsInvokeResponseArgs and AttachNewDataDiskOptionsInvokeResponseOutput values.
// You can construct a concrete instance of `AttachNewDataDiskOptionsInvokeResponseInput` via:
//
//          AttachNewDataDiskOptionsInvokeResponseArgs{...}
type AttachNewDataDiskOptionsInvokeResponseInput interface {
	pulumi.Input

	ToAttachNewDataDiskOptionsInvokeResponseOutput() AttachNewDataDiskOptionsInvokeResponseOutput
	ToAttachNewDataDiskOptionsInvokeResponseOutputWithContext(context.Context) AttachNewDataDiskOptionsInvokeResponseOutput
}

// Properties to attach new disk to the Virtual Machine.
type AttachNewDataDiskOptionsInvokeResponseArgs struct {
	// The name of the disk to be attached.
	DiskName pulumi.StringPtrInput `pulumi:"diskName"`
	// Size of the disk to be attached in GibiBytes.
	DiskSizeGiB pulumi.IntPtrInput `pulumi:"diskSizeGiB"`
	// The storage type for the disk (i.e. Standard, Premium).
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
}

func (AttachNewDataDiskOptionsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachNewDataDiskOptionsInvokeResponse)(nil)).Elem()
}

func (i AttachNewDataDiskOptionsInvokeResponseArgs) ToAttachNewDataDiskOptionsInvokeResponseOutput() AttachNewDataDiskOptionsInvokeResponseOutput {
	return i.ToAttachNewDataDiskOptionsInvokeResponseOutputWithContext(context.Background())
}

func (i AttachNewDataDiskOptionsInvokeResponseArgs) ToAttachNewDataDiskOptionsInvokeResponseOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachNewDataDiskOptionsInvokeResponseOutput)
}

func (i AttachNewDataDiskOptionsInvokeResponseArgs) ToAttachNewDataDiskOptionsInvokeResponsePtrOutput() AttachNewDataDiskOptionsInvokeResponsePtrOutput {
	return i.ToAttachNewDataDiskOptionsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i AttachNewDataDiskOptionsInvokeResponseArgs) ToAttachNewDataDiskOptionsInvokeResponsePtrOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachNewDataDiskOptionsInvokeResponseOutput).ToAttachNewDataDiskOptionsInvokeResponsePtrOutputWithContext(ctx)
}

// AttachNewDataDiskOptionsInvokeResponsePtrInput is an input type that accepts AttachNewDataDiskOptionsInvokeResponseArgs, AttachNewDataDiskOptionsInvokeResponsePtr and AttachNewDataDiskOptionsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `AttachNewDataDiskOptionsInvokeResponsePtrInput` via:
//
//          AttachNewDataDiskOptionsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type AttachNewDataDiskOptionsInvokeResponsePtrInput interface {
	pulumi.Input

	ToAttachNewDataDiskOptionsInvokeResponsePtrOutput() AttachNewDataDiskOptionsInvokeResponsePtrOutput
	ToAttachNewDataDiskOptionsInvokeResponsePtrOutputWithContext(context.Context) AttachNewDataDiskOptionsInvokeResponsePtrOutput
}

type attachNewDataDiskOptionsInvokeResponsePtrType AttachNewDataDiskOptionsInvokeResponseArgs

func AttachNewDataDiskOptionsInvokeResponsePtr(v *AttachNewDataDiskOptionsInvokeResponseArgs) AttachNewDataDiskOptionsInvokeResponsePtrInput {
	return (*attachNewDataDiskOptionsInvokeResponsePtrType)(v)
}

func (*attachNewDataDiskOptionsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachNewDataDiskOptionsInvokeResponse)(nil)).Elem()
}

func (i *attachNewDataDiskOptionsInvokeResponsePtrType) ToAttachNewDataDiskOptionsInvokeResponsePtrOutput() AttachNewDataDiskOptionsInvokeResponsePtrOutput {
	return i.ToAttachNewDataDiskOptionsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *attachNewDataDiskOptionsInvokeResponsePtrType) ToAttachNewDataDiskOptionsInvokeResponsePtrOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachNewDataDiskOptionsInvokeResponsePtrOutput)
}

// Properties to attach new disk to the Virtual Machine.
type AttachNewDataDiskOptionsInvokeResponseOutput struct{ *pulumi.OutputState }

func (AttachNewDataDiskOptionsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachNewDataDiskOptionsInvokeResponse)(nil)).Elem()
}

func (o AttachNewDataDiskOptionsInvokeResponseOutput) ToAttachNewDataDiskOptionsInvokeResponseOutput() AttachNewDataDiskOptionsInvokeResponseOutput {
	return o
}

func (o AttachNewDataDiskOptionsInvokeResponseOutput) ToAttachNewDataDiskOptionsInvokeResponseOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsInvokeResponseOutput {
	return o
}

func (o AttachNewDataDiskOptionsInvokeResponseOutput) ToAttachNewDataDiskOptionsInvokeResponsePtrOutput() AttachNewDataDiskOptionsInvokeResponsePtrOutput {
	return o.ToAttachNewDataDiskOptionsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o AttachNewDataDiskOptionsInvokeResponseOutput) ToAttachNewDataDiskOptionsInvokeResponsePtrOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsInvokeResponsePtrOutput {
	return o.ApplyT(func(v AttachNewDataDiskOptionsInvokeResponse) *AttachNewDataDiskOptionsInvokeResponse {
		return &v
	}).(AttachNewDataDiskOptionsInvokeResponsePtrOutput)
}

// The name of the disk to be attached.
func (o AttachNewDataDiskOptionsInvokeResponseOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachNewDataDiskOptionsInvokeResponse) *string { return v.DiskName }).(pulumi.StringPtrOutput)
}

// Size of the disk to be attached in GibiBytes.
func (o AttachNewDataDiskOptionsInvokeResponseOutput) DiskSizeGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttachNewDataDiskOptionsInvokeResponse) *int { return v.DiskSizeGiB }).(pulumi.IntPtrOutput)
}

// The storage type for the disk (i.e. Standard, Premium).
func (o AttachNewDataDiskOptionsInvokeResponseOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachNewDataDiskOptionsInvokeResponse) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

type AttachNewDataDiskOptionsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (AttachNewDataDiskOptionsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachNewDataDiskOptionsInvokeResponse)(nil)).Elem()
}

func (o AttachNewDataDiskOptionsInvokeResponsePtrOutput) ToAttachNewDataDiskOptionsInvokeResponsePtrOutput() AttachNewDataDiskOptionsInvokeResponsePtrOutput {
	return o
}

func (o AttachNewDataDiskOptionsInvokeResponsePtrOutput) ToAttachNewDataDiskOptionsInvokeResponsePtrOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsInvokeResponsePtrOutput {
	return o
}

func (o AttachNewDataDiskOptionsInvokeResponsePtrOutput) Elem() AttachNewDataDiskOptionsInvokeResponseOutput {
	return o.ApplyT(func(v *AttachNewDataDiskOptionsInvokeResponse) AttachNewDataDiskOptionsInvokeResponse { return *v }).(AttachNewDataDiskOptionsInvokeResponseOutput)
}

// The name of the disk to be attached.
func (o AttachNewDataDiskOptionsInvokeResponsePtrOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachNewDataDiskOptionsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiskName
	}).(pulumi.StringPtrOutput)
}

// Size of the disk to be attached in GibiBytes.
func (o AttachNewDataDiskOptionsInvokeResponsePtrOutput) DiskSizeGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttachNewDataDiskOptionsInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGiB
	}).(pulumi.IntPtrOutput)
}

// The storage type for the disk (i.e. Standard, Premium).
func (o AttachNewDataDiskOptionsInvokeResponsePtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachNewDataDiskOptionsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

// Properties to attach new disk to the Virtual Machine.
type AttachNewDataDiskOptionsResponse struct {
	// The name of the disk to be attached.
	DiskName *string `pulumi:"diskName"`
	// Size of the disk to be attached in GibiBytes.
	DiskSizeGiB *int `pulumi:"diskSizeGiB"`
	// The storage type for the disk (i.e. Standard, Premium).
	DiskType *string `pulumi:"diskType"`
}

// AttachNewDataDiskOptionsResponseInput is an input type that accepts AttachNewDataDiskOptionsResponseArgs and AttachNewDataDiskOptionsResponseOutput values.
// You can construct a concrete instance of `AttachNewDataDiskOptionsResponseInput` via:
//
//          AttachNewDataDiskOptionsResponseArgs{...}
type AttachNewDataDiskOptionsResponseInput interface {
	pulumi.Input

	ToAttachNewDataDiskOptionsResponseOutput() AttachNewDataDiskOptionsResponseOutput
	ToAttachNewDataDiskOptionsResponseOutputWithContext(context.Context) AttachNewDataDiskOptionsResponseOutput
}

// Properties to attach new disk to the Virtual Machine.
type AttachNewDataDiskOptionsResponseArgs struct {
	// The name of the disk to be attached.
	DiskName pulumi.StringPtrInput `pulumi:"diskName"`
	// Size of the disk to be attached in GibiBytes.
	DiskSizeGiB pulumi.IntPtrInput `pulumi:"diskSizeGiB"`
	// The storage type for the disk (i.e. Standard, Premium).
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
}

func (AttachNewDataDiskOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachNewDataDiskOptionsResponse)(nil)).Elem()
}

func (i AttachNewDataDiskOptionsResponseArgs) ToAttachNewDataDiskOptionsResponseOutput() AttachNewDataDiskOptionsResponseOutput {
	return i.ToAttachNewDataDiskOptionsResponseOutputWithContext(context.Background())
}

func (i AttachNewDataDiskOptionsResponseArgs) ToAttachNewDataDiskOptionsResponseOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachNewDataDiskOptionsResponseOutput)
}

func (i AttachNewDataDiskOptionsResponseArgs) ToAttachNewDataDiskOptionsResponsePtrOutput() AttachNewDataDiskOptionsResponsePtrOutput {
	return i.ToAttachNewDataDiskOptionsResponsePtrOutputWithContext(context.Background())
}

func (i AttachNewDataDiskOptionsResponseArgs) ToAttachNewDataDiskOptionsResponsePtrOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachNewDataDiskOptionsResponseOutput).ToAttachNewDataDiskOptionsResponsePtrOutputWithContext(ctx)
}

// AttachNewDataDiskOptionsResponsePtrInput is an input type that accepts AttachNewDataDiskOptionsResponseArgs, AttachNewDataDiskOptionsResponsePtr and AttachNewDataDiskOptionsResponsePtrOutput values.
// You can construct a concrete instance of `AttachNewDataDiskOptionsResponsePtrInput` via:
//
//          AttachNewDataDiskOptionsResponseArgs{...}
//
//  or:
//
//          nil
type AttachNewDataDiskOptionsResponsePtrInput interface {
	pulumi.Input

	ToAttachNewDataDiskOptionsResponsePtrOutput() AttachNewDataDiskOptionsResponsePtrOutput
	ToAttachNewDataDiskOptionsResponsePtrOutputWithContext(context.Context) AttachNewDataDiskOptionsResponsePtrOutput
}

type attachNewDataDiskOptionsResponsePtrType AttachNewDataDiskOptionsResponseArgs

func AttachNewDataDiskOptionsResponsePtr(v *AttachNewDataDiskOptionsResponseArgs) AttachNewDataDiskOptionsResponsePtrInput {
	return (*attachNewDataDiskOptionsResponsePtrType)(v)
}

func (*attachNewDataDiskOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachNewDataDiskOptionsResponse)(nil)).Elem()
}

func (i *attachNewDataDiskOptionsResponsePtrType) ToAttachNewDataDiskOptionsResponsePtrOutput() AttachNewDataDiskOptionsResponsePtrOutput {
	return i.ToAttachNewDataDiskOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *attachNewDataDiskOptionsResponsePtrType) ToAttachNewDataDiskOptionsResponsePtrOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachNewDataDiskOptionsResponsePtrOutput)
}

// Properties to attach new disk to the Virtual Machine.
type AttachNewDataDiskOptionsResponseOutput struct{ *pulumi.OutputState }

func (AttachNewDataDiskOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachNewDataDiskOptionsResponse)(nil)).Elem()
}

func (o AttachNewDataDiskOptionsResponseOutput) ToAttachNewDataDiskOptionsResponseOutput() AttachNewDataDiskOptionsResponseOutput {
	return o
}

func (o AttachNewDataDiskOptionsResponseOutput) ToAttachNewDataDiskOptionsResponseOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsResponseOutput {
	return o
}

func (o AttachNewDataDiskOptionsResponseOutput) ToAttachNewDataDiskOptionsResponsePtrOutput() AttachNewDataDiskOptionsResponsePtrOutput {
	return o.ToAttachNewDataDiskOptionsResponsePtrOutputWithContext(context.Background())
}

func (o AttachNewDataDiskOptionsResponseOutput) ToAttachNewDataDiskOptionsResponsePtrOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsResponsePtrOutput {
	return o.ApplyT(func(v AttachNewDataDiskOptionsResponse) *AttachNewDataDiskOptionsResponse {
		return &v
	}).(AttachNewDataDiskOptionsResponsePtrOutput)
}

// The name of the disk to be attached.
func (o AttachNewDataDiskOptionsResponseOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachNewDataDiskOptionsResponse) *string { return v.DiskName }).(pulumi.StringPtrOutput)
}

// Size of the disk to be attached in GibiBytes.
func (o AttachNewDataDiskOptionsResponseOutput) DiskSizeGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttachNewDataDiskOptionsResponse) *int { return v.DiskSizeGiB }).(pulumi.IntPtrOutput)
}

// The storage type for the disk (i.e. Standard, Premium).
func (o AttachNewDataDiskOptionsResponseOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachNewDataDiskOptionsResponse) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

type AttachNewDataDiskOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (AttachNewDataDiskOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachNewDataDiskOptionsResponse)(nil)).Elem()
}

func (o AttachNewDataDiskOptionsResponsePtrOutput) ToAttachNewDataDiskOptionsResponsePtrOutput() AttachNewDataDiskOptionsResponsePtrOutput {
	return o
}

func (o AttachNewDataDiskOptionsResponsePtrOutput) ToAttachNewDataDiskOptionsResponsePtrOutputWithContext(ctx context.Context) AttachNewDataDiskOptionsResponsePtrOutput {
	return o
}

func (o AttachNewDataDiskOptionsResponsePtrOutput) Elem() AttachNewDataDiskOptionsResponseOutput {
	return o.ApplyT(func(v *AttachNewDataDiskOptionsResponse) AttachNewDataDiskOptionsResponse { return *v }).(AttachNewDataDiskOptionsResponseOutput)
}

// The name of the disk to be attached.
func (o AttachNewDataDiskOptionsResponsePtrOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachNewDataDiskOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiskName
	}).(pulumi.StringPtrOutput)
}

// Size of the disk to be attached in GibiBytes.
func (o AttachNewDataDiskOptionsResponsePtrOutput) DiskSizeGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttachNewDataDiskOptionsResponse) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGiB
	}).(pulumi.IntPtrOutput)
}

// The storage type for the disk (i.e. Standard, Premium).
func (o AttachNewDataDiskOptionsResponsePtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachNewDataDiskOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

// Parameters for creating multiple virtual machines as a single action.
type BulkCreationParameters struct {
	// The number of virtual machine instances to create.
	InstanceCount *int `pulumi:"instanceCount"`
}

// BulkCreationParametersInput is an input type that accepts BulkCreationParametersArgs and BulkCreationParametersOutput values.
// You can construct a concrete instance of `BulkCreationParametersInput` via:
//
//          BulkCreationParametersArgs{...}
type BulkCreationParametersInput interface {
	pulumi.Input

	ToBulkCreationParametersOutput() BulkCreationParametersOutput
	ToBulkCreationParametersOutputWithContext(context.Context) BulkCreationParametersOutput
}

// Parameters for creating multiple virtual machines as a single action.
type BulkCreationParametersArgs struct {
	// The number of virtual machine instances to create.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
}

func (BulkCreationParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BulkCreationParameters)(nil)).Elem()
}

func (i BulkCreationParametersArgs) ToBulkCreationParametersOutput() BulkCreationParametersOutput {
	return i.ToBulkCreationParametersOutputWithContext(context.Background())
}

func (i BulkCreationParametersArgs) ToBulkCreationParametersOutputWithContext(ctx context.Context) BulkCreationParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BulkCreationParametersOutput)
}

func (i BulkCreationParametersArgs) ToBulkCreationParametersPtrOutput() BulkCreationParametersPtrOutput {
	return i.ToBulkCreationParametersPtrOutputWithContext(context.Background())
}

func (i BulkCreationParametersArgs) ToBulkCreationParametersPtrOutputWithContext(ctx context.Context) BulkCreationParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BulkCreationParametersOutput).ToBulkCreationParametersPtrOutputWithContext(ctx)
}

// BulkCreationParametersPtrInput is an input type that accepts BulkCreationParametersArgs, BulkCreationParametersPtr and BulkCreationParametersPtrOutput values.
// You can construct a concrete instance of `BulkCreationParametersPtrInput` via:
//
//          BulkCreationParametersArgs{...}
//
//  or:
//
//          nil
type BulkCreationParametersPtrInput interface {
	pulumi.Input

	ToBulkCreationParametersPtrOutput() BulkCreationParametersPtrOutput
	ToBulkCreationParametersPtrOutputWithContext(context.Context) BulkCreationParametersPtrOutput
}

type bulkCreationParametersPtrType BulkCreationParametersArgs

func BulkCreationParametersPtr(v *BulkCreationParametersArgs) BulkCreationParametersPtrInput {
	return (*bulkCreationParametersPtrType)(v)
}

func (*bulkCreationParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BulkCreationParameters)(nil)).Elem()
}

func (i *bulkCreationParametersPtrType) ToBulkCreationParametersPtrOutput() BulkCreationParametersPtrOutput {
	return i.ToBulkCreationParametersPtrOutputWithContext(context.Background())
}

func (i *bulkCreationParametersPtrType) ToBulkCreationParametersPtrOutputWithContext(ctx context.Context) BulkCreationParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BulkCreationParametersPtrOutput)
}

// Parameters for creating multiple virtual machines as a single action.
type BulkCreationParametersOutput struct{ *pulumi.OutputState }

func (BulkCreationParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BulkCreationParameters)(nil)).Elem()
}

func (o BulkCreationParametersOutput) ToBulkCreationParametersOutput() BulkCreationParametersOutput {
	return o
}

func (o BulkCreationParametersOutput) ToBulkCreationParametersOutputWithContext(ctx context.Context) BulkCreationParametersOutput {
	return o
}

func (o BulkCreationParametersOutput) ToBulkCreationParametersPtrOutput() BulkCreationParametersPtrOutput {
	return o.ToBulkCreationParametersPtrOutputWithContext(context.Background())
}

func (o BulkCreationParametersOutput) ToBulkCreationParametersPtrOutputWithContext(ctx context.Context) BulkCreationParametersPtrOutput {
	return o.ApplyT(func(v BulkCreationParameters) *BulkCreationParameters {
		return &v
	}).(BulkCreationParametersPtrOutput)
}

// The number of virtual machine instances to create.
func (o BulkCreationParametersOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BulkCreationParameters) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

type BulkCreationParametersPtrOutput struct{ *pulumi.OutputState }

func (BulkCreationParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BulkCreationParameters)(nil)).Elem()
}

func (o BulkCreationParametersPtrOutput) ToBulkCreationParametersPtrOutput() BulkCreationParametersPtrOutput {
	return o
}

func (o BulkCreationParametersPtrOutput) ToBulkCreationParametersPtrOutputWithContext(ctx context.Context) BulkCreationParametersPtrOutput {
	return o
}

func (o BulkCreationParametersPtrOutput) Elem() BulkCreationParametersOutput {
	return o.ApplyT(func(v *BulkCreationParameters) BulkCreationParameters { return *v }).(BulkCreationParametersOutput)
}

// The number of virtual machine instances to create.
func (o BulkCreationParametersPtrOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BulkCreationParameters) *int {
		if v == nil {
			return nil
		}
		return v.InstanceCount
	}).(pulumi.IntPtrOutput)
}

// Parameters for creating multiple virtual machines as a single action.
type BulkCreationParametersInvokeResponse struct {
	// The number of virtual machine instances to create.
	InstanceCount *int `pulumi:"instanceCount"`
}

// BulkCreationParametersInvokeResponseInput is an input type that accepts BulkCreationParametersInvokeResponseArgs and BulkCreationParametersInvokeResponseOutput values.
// You can construct a concrete instance of `BulkCreationParametersInvokeResponseInput` via:
//
//          BulkCreationParametersInvokeResponseArgs{...}
type BulkCreationParametersInvokeResponseInput interface {
	pulumi.Input

	ToBulkCreationParametersInvokeResponseOutput() BulkCreationParametersInvokeResponseOutput
	ToBulkCreationParametersInvokeResponseOutputWithContext(context.Context) BulkCreationParametersInvokeResponseOutput
}

// Parameters for creating multiple virtual machines as a single action.
type BulkCreationParametersInvokeResponseArgs struct {
	// The number of virtual machine instances to create.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
}

func (BulkCreationParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BulkCreationParametersInvokeResponse)(nil)).Elem()
}

func (i BulkCreationParametersInvokeResponseArgs) ToBulkCreationParametersInvokeResponseOutput() BulkCreationParametersInvokeResponseOutput {
	return i.ToBulkCreationParametersInvokeResponseOutputWithContext(context.Background())
}

func (i BulkCreationParametersInvokeResponseArgs) ToBulkCreationParametersInvokeResponseOutputWithContext(ctx context.Context) BulkCreationParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BulkCreationParametersInvokeResponseOutput)
}

func (i BulkCreationParametersInvokeResponseArgs) ToBulkCreationParametersInvokeResponsePtrOutput() BulkCreationParametersInvokeResponsePtrOutput {
	return i.ToBulkCreationParametersInvokeResponsePtrOutputWithContext(context.Background())
}

func (i BulkCreationParametersInvokeResponseArgs) ToBulkCreationParametersInvokeResponsePtrOutputWithContext(ctx context.Context) BulkCreationParametersInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BulkCreationParametersInvokeResponseOutput).ToBulkCreationParametersInvokeResponsePtrOutputWithContext(ctx)
}

// BulkCreationParametersInvokeResponsePtrInput is an input type that accepts BulkCreationParametersInvokeResponseArgs, BulkCreationParametersInvokeResponsePtr and BulkCreationParametersInvokeResponsePtrOutput values.
// You can construct a concrete instance of `BulkCreationParametersInvokeResponsePtrInput` via:
//
//          BulkCreationParametersInvokeResponseArgs{...}
//
//  or:
//
//          nil
type BulkCreationParametersInvokeResponsePtrInput interface {
	pulumi.Input

	ToBulkCreationParametersInvokeResponsePtrOutput() BulkCreationParametersInvokeResponsePtrOutput
	ToBulkCreationParametersInvokeResponsePtrOutputWithContext(context.Context) BulkCreationParametersInvokeResponsePtrOutput
}

type bulkCreationParametersInvokeResponsePtrType BulkCreationParametersInvokeResponseArgs

func BulkCreationParametersInvokeResponsePtr(v *BulkCreationParametersInvokeResponseArgs) BulkCreationParametersInvokeResponsePtrInput {
	return (*bulkCreationParametersInvokeResponsePtrType)(v)
}

func (*bulkCreationParametersInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BulkCreationParametersInvokeResponse)(nil)).Elem()
}

func (i *bulkCreationParametersInvokeResponsePtrType) ToBulkCreationParametersInvokeResponsePtrOutput() BulkCreationParametersInvokeResponsePtrOutput {
	return i.ToBulkCreationParametersInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *bulkCreationParametersInvokeResponsePtrType) ToBulkCreationParametersInvokeResponsePtrOutputWithContext(ctx context.Context) BulkCreationParametersInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BulkCreationParametersInvokeResponsePtrOutput)
}

// Parameters for creating multiple virtual machines as a single action.
type BulkCreationParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (BulkCreationParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BulkCreationParametersInvokeResponse)(nil)).Elem()
}

func (o BulkCreationParametersInvokeResponseOutput) ToBulkCreationParametersInvokeResponseOutput() BulkCreationParametersInvokeResponseOutput {
	return o
}

func (o BulkCreationParametersInvokeResponseOutput) ToBulkCreationParametersInvokeResponseOutputWithContext(ctx context.Context) BulkCreationParametersInvokeResponseOutput {
	return o
}

func (o BulkCreationParametersInvokeResponseOutput) ToBulkCreationParametersInvokeResponsePtrOutput() BulkCreationParametersInvokeResponsePtrOutput {
	return o.ToBulkCreationParametersInvokeResponsePtrOutputWithContext(context.Background())
}

func (o BulkCreationParametersInvokeResponseOutput) ToBulkCreationParametersInvokeResponsePtrOutputWithContext(ctx context.Context) BulkCreationParametersInvokeResponsePtrOutput {
	return o.ApplyT(func(v BulkCreationParametersInvokeResponse) *BulkCreationParametersInvokeResponse {
		return &v
	}).(BulkCreationParametersInvokeResponsePtrOutput)
}

// The number of virtual machine instances to create.
func (o BulkCreationParametersInvokeResponseOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BulkCreationParametersInvokeResponse) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

type BulkCreationParametersInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (BulkCreationParametersInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BulkCreationParametersInvokeResponse)(nil)).Elem()
}

func (o BulkCreationParametersInvokeResponsePtrOutput) ToBulkCreationParametersInvokeResponsePtrOutput() BulkCreationParametersInvokeResponsePtrOutput {
	return o
}

func (o BulkCreationParametersInvokeResponsePtrOutput) ToBulkCreationParametersInvokeResponsePtrOutputWithContext(ctx context.Context) BulkCreationParametersInvokeResponsePtrOutput {
	return o
}

func (o BulkCreationParametersInvokeResponsePtrOutput) Elem() BulkCreationParametersInvokeResponseOutput {
	return o.ApplyT(func(v *BulkCreationParametersInvokeResponse) BulkCreationParametersInvokeResponse { return *v }).(BulkCreationParametersInvokeResponseOutput)
}

// The number of virtual machine instances to create.
func (o BulkCreationParametersInvokeResponsePtrOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BulkCreationParametersInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.InstanceCount
	}).(pulumi.IntPtrOutput)
}

// Parameters for creating multiple virtual machines as a single action.
type BulkCreationParametersResponse struct {
	// The number of virtual machine instances to create.
	InstanceCount *int `pulumi:"instanceCount"`
}

// BulkCreationParametersResponseInput is an input type that accepts BulkCreationParametersResponseArgs and BulkCreationParametersResponseOutput values.
// You can construct a concrete instance of `BulkCreationParametersResponseInput` via:
//
//          BulkCreationParametersResponseArgs{...}
type BulkCreationParametersResponseInput interface {
	pulumi.Input

	ToBulkCreationParametersResponseOutput() BulkCreationParametersResponseOutput
	ToBulkCreationParametersResponseOutputWithContext(context.Context) BulkCreationParametersResponseOutput
}

// Parameters for creating multiple virtual machines as a single action.
type BulkCreationParametersResponseArgs struct {
	// The number of virtual machine instances to create.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
}

func (BulkCreationParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BulkCreationParametersResponse)(nil)).Elem()
}

func (i BulkCreationParametersResponseArgs) ToBulkCreationParametersResponseOutput() BulkCreationParametersResponseOutput {
	return i.ToBulkCreationParametersResponseOutputWithContext(context.Background())
}

func (i BulkCreationParametersResponseArgs) ToBulkCreationParametersResponseOutputWithContext(ctx context.Context) BulkCreationParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BulkCreationParametersResponseOutput)
}

func (i BulkCreationParametersResponseArgs) ToBulkCreationParametersResponsePtrOutput() BulkCreationParametersResponsePtrOutput {
	return i.ToBulkCreationParametersResponsePtrOutputWithContext(context.Background())
}

func (i BulkCreationParametersResponseArgs) ToBulkCreationParametersResponsePtrOutputWithContext(ctx context.Context) BulkCreationParametersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BulkCreationParametersResponseOutput).ToBulkCreationParametersResponsePtrOutputWithContext(ctx)
}

// BulkCreationParametersResponsePtrInput is an input type that accepts BulkCreationParametersResponseArgs, BulkCreationParametersResponsePtr and BulkCreationParametersResponsePtrOutput values.
// You can construct a concrete instance of `BulkCreationParametersResponsePtrInput` via:
//
//          BulkCreationParametersResponseArgs{...}
//
//  or:
//
//          nil
type BulkCreationParametersResponsePtrInput interface {
	pulumi.Input

	ToBulkCreationParametersResponsePtrOutput() BulkCreationParametersResponsePtrOutput
	ToBulkCreationParametersResponsePtrOutputWithContext(context.Context) BulkCreationParametersResponsePtrOutput
}

type bulkCreationParametersResponsePtrType BulkCreationParametersResponseArgs

func BulkCreationParametersResponsePtr(v *BulkCreationParametersResponseArgs) BulkCreationParametersResponsePtrInput {
	return (*bulkCreationParametersResponsePtrType)(v)
}

func (*bulkCreationParametersResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BulkCreationParametersResponse)(nil)).Elem()
}

func (i *bulkCreationParametersResponsePtrType) ToBulkCreationParametersResponsePtrOutput() BulkCreationParametersResponsePtrOutput {
	return i.ToBulkCreationParametersResponsePtrOutputWithContext(context.Background())
}

func (i *bulkCreationParametersResponsePtrType) ToBulkCreationParametersResponsePtrOutputWithContext(ctx context.Context) BulkCreationParametersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BulkCreationParametersResponsePtrOutput)
}

// Parameters for creating multiple virtual machines as a single action.
type BulkCreationParametersResponseOutput struct{ *pulumi.OutputState }

func (BulkCreationParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BulkCreationParametersResponse)(nil)).Elem()
}

func (o BulkCreationParametersResponseOutput) ToBulkCreationParametersResponseOutput() BulkCreationParametersResponseOutput {
	return o
}

func (o BulkCreationParametersResponseOutput) ToBulkCreationParametersResponseOutputWithContext(ctx context.Context) BulkCreationParametersResponseOutput {
	return o
}

func (o BulkCreationParametersResponseOutput) ToBulkCreationParametersResponsePtrOutput() BulkCreationParametersResponsePtrOutput {
	return o.ToBulkCreationParametersResponsePtrOutputWithContext(context.Background())
}

func (o BulkCreationParametersResponseOutput) ToBulkCreationParametersResponsePtrOutputWithContext(ctx context.Context) BulkCreationParametersResponsePtrOutput {
	return o.ApplyT(func(v BulkCreationParametersResponse) *BulkCreationParametersResponse {
		return &v
	}).(BulkCreationParametersResponsePtrOutput)
}

// The number of virtual machine instances to create.
func (o BulkCreationParametersResponseOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BulkCreationParametersResponse) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

type BulkCreationParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (BulkCreationParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BulkCreationParametersResponse)(nil)).Elem()
}

func (o BulkCreationParametersResponsePtrOutput) ToBulkCreationParametersResponsePtrOutput() BulkCreationParametersResponsePtrOutput {
	return o
}

func (o BulkCreationParametersResponsePtrOutput) ToBulkCreationParametersResponsePtrOutputWithContext(ctx context.Context) BulkCreationParametersResponsePtrOutput {
	return o
}

func (o BulkCreationParametersResponsePtrOutput) Elem() BulkCreationParametersResponseOutput {
	return o.ApplyT(func(v *BulkCreationParametersResponse) BulkCreationParametersResponse { return *v }).(BulkCreationParametersResponseOutput)
}

// The number of virtual machine instances to create.
func (o BulkCreationParametersResponsePtrOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BulkCreationParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.InstanceCount
	}).(pulumi.IntPtrOutput)
}

// A data disks attached to a virtual machine.
type ComputeDataDiskInvokeResponse struct {
	// Gets data disk size in GiB.
	DiskSizeGiB *int `pulumi:"diskSizeGiB"`
	// When backed by a blob, the URI of underlying blob.
	DiskUri *string `pulumi:"diskUri"`
	// When backed by managed disk, this is the ID of the compute disk resource.
	ManagedDiskId *string `pulumi:"managedDiskId"`
	// Gets data disk name.
	Name *string `pulumi:"name"`
}

// ComputeDataDiskInvokeResponseInput is an input type that accepts ComputeDataDiskInvokeResponseArgs and ComputeDataDiskInvokeResponseOutput values.
// You can construct a concrete instance of `ComputeDataDiskInvokeResponseInput` via:
//
//          ComputeDataDiskInvokeResponseArgs{...}
type ComputeDataDiskInvokeResponseInput interface {
	pulumi.Input

	ToComputeDataDiskInvokeResponseOutput() ComputeDataDiskInvokeResponseOutput
	ToComputeDataDiskInvokeResponseOutputWithContext(context.Context) ComputeDataDiskInvokeResponseOutput
}

// A data disks attached to a virtual machine.
type ComputeDataDiskInvokeResponseArgs struct {
	// Gets data disk size in GiB.
	DiskSizeGiB pulumi.IntPtrInput `pulumi:"diskSizeGiB"`
	// When backed by a blob, the URI of underlying blob.
	DiskUri pulumi.StringPtrInput `pulumi:"diskUri"`
	// When backed by managed disk, this is the ID of the compute disk resource.
	ManagedDiskId pulumi.StringPtrInput `pulumi:"managedDiskId"`
	// Gets data disk name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ComputeDataDiskInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeDataDiskInvokeResponse)(nil)).Elem()
}

func (i ComputeDataDiskInvokeResponseArgs) ToComputeDataDiskInvokeResponseOutput() ComputeDataDiskInvokeResponseOutput {
	return i.ToComputeDataDiskInvokeResponseOutputWithContext(context.Background())
}

func (i ComputeDataDiskInvokeResponseArgs) ToComputeDataDiskInvokeResponseOutputWithContext(ctx context.Context) ComputeDataDiskInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeDataDiskInvokeResponseOutput)
}

// ComputeDataDiskInvokeResponseArrayInput is an input type that accepts ComputeDataDiskInvokeResponseArray and ComputeDataDiskInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ComputeDataDiskInvokeResponseArrayInput` via:
//
//          ComputeDataDiskInvokeResponseArray{ ComputeDataDiskInvokeResponseArgs{...} }
type ComputeDataDiskInvokeResponseArrayInput interface {
	pulumi.Input

	ToComputeDataDiskInvokeResponseArrayOutput() ComputeDataDiskInvokeResponseArrayOutput
	ToComputeDataDiskInvokeResponseArrayOutputWithContext(context.Context) ComputeDataDiskInvokeResponseArrayOutput
}

type ComputeDataDiskInvokeResponseArray []ComputeDataDiskInvokeResponseInput

func (ComputeDataDiskInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeDataDiskInvokeResponse)(nil)).Elem()
}

func (i ComputeDataDiskInvokeResponseArray) ToComputeDataDiskInvokeResponseArrayOutput() ComputeDataDiskInvokeResponseArrayOutput {
	return i.ToComputeDataDiskInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ComputeDataDiskInvokeResponseArray) ToComputeDataDiskInvokeResponseArrayOutputWithContext(ctx context.Context) ComputeDataDiskInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeDataDiskInvokeResponseArrayOutput)
}

// A data disks attached to a virtual machine.
type ComputeDataDiskInvokeResponseOutput struct{ *pulumi.OutputState }

func (ComputeDataDiskInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeDataDiskInvokeResponse)(nil)).Elem()
}

func (o ComputeDataDiskInvokeResponseOutput) ToComputeDataDiskInvokeResponseOutput() ComputeDataDiskInvokeResponseOutput {
	return o
}

func (o ComputeDataDiskInvokeResponseOutput) ToComputeDataDiskInvokeResponseOutputWithContext(ctx context.Context) ComputeDataDiskInvokeResponseOutput {
	return o
}

// Gets data disk size in GiB.
func (o ComputeDataDiskInvokeResponseOutput) DiskSizeGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeDataDiskInvokeResponse) *int { return v.DiskSizeGiB }).(pulumi.IntPtrOutput)
}

// When backed by a blob, the URI of underlying blob.
func (o ComputeDataDiskInvokeResponseOutput) DiskUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeDataDiskInvokeResponse) *string { return v.DiskUri }).(pulumi.StringPtrOutput)
}

// When backed by managed disk, this is the ID of the compute disk resource.
func (o ComputeDataDiskInvokeResponseOutput) ManagedDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeDataDiskInvokeResponse) *string { return v.ManagedDiskId }).(pulumi.StringPtrOutput)
}

// Gets data disk name.
func (o ComputeDataDiskInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeDataDiskInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ComputeDataDiskInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ComputeDataDiskInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeDataDiskInvokeResponse)(nil)).Elem()
}

func (o ComputeDataDiskInvokeResponseArrayOutput) ToComputeDataDiskInvokeResponseArrayOutput() ComputeDataDiskInvokeResponseArrayOutput {
	return o
}

func (o ComputeDataDiskInvokeResponseArrayOutput) ToComputeDataDiskInvokeResponseArrayOutputWithContext(ctx context.Context) ComputeDataDiskInvokeResponseArrayOutput {
	return o
}

func (o ComputeDataDiskInvokeResponseArrayOutput) Index(i pulumi.IntInput) ComputeDataDiskInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeDataDiskInvokeResponse {
		return vs[0].([]ComputeDataDiskInvokeResponse)[vs[1].(int)]
	}).(ComputeDataDiskInvokeResponseOutput)
}

// A data disks attached to a virtual machine.
type ComputeDataDiskResponse struct {
	// Gets data disk size in GiB.
	DiskSizeGiB *int `pulumi:"diskSizeGiB"`
	// When backed by a blob, the URI of underlying blob.
	DiskUri *string `pulumi:"diskUri"`
	// When backed by managed disk, this is the ID of the compute disk resource.
	ManagedDiskId *string `pulumi:"managedDiskId"`
	// Gets data disk name.
	Name *string `pulumi:"name"`
}

// ComputeDataDiskResponseInput is an input type that accepts ComputeDataDiskResponseArgs and ComputeDataDiskResponseOutput values.
// You can construct a concrete instance of `ComputeDataDiskResponseInput` via:
//
//          ComputeDataDiskResponseArgs{...}
type ComputeDataDiskResponseInput interface {
	pulumi.Input

	ToComputeDataDiskResponseOutput() ComputeDataDiskResponseOutput
	ToComputeDataDiskResponseOutputWithContext(context.Context) ComputeDataDiskResponseOutput
}

// A data disks attached to a virtual machine.
type ComputeDataDiskResponseArgs struct {
	// Gets data disk size in GiB.
	DiskSizeGiB pulumi.IntPtrInput `pulumi:"diskSizeGiB"`
	// When backed by a blob, the URI of underlying blob.
	DiskUri pulumi.StringPtrInput `pulumi:"diskUri"`
	// When backed by managed disk, this is the ID of the compute disk resource.
	ManagedDiskId pulumi.StringPtrInput `pulumi:"managedDiskId"`
	// Gets data disk name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ComputeDataDiskResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeDataDiskResponse)(nil)).Elem()
}

func (i ComputeDataDiskResponseArgs) ToComputeDataDiskResponseOutput() ComputeDataDiskResponseOutput {
	return i.ToComputeDataDiskResponseOutputWithContext(context.Background())
}

func (i ComputeDataDiskResponseArgs) ToComputeDataDiskResponseOutputWithContext(ctx context.Context) ComputeDataDiskResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeDataDiskResponseOutput)
}

// ComputeDataDiskResponseArrayInput is an input type that accepts ComputeDataDiskResponseArray and ComputeDataDiskResponseArrayOutput values.
// You can construct a concrete instance of `ComputeDataDiskResponseArrayInput` via:
//
//          ComputeDataDiskResponseArray{ ComputeDataDiskResponseArgs{...} }
type ComputeDataDiskResponseArrayInput interface {
	pulumi.Input

	ToComputeDataDiskResponseArrayOutput() ComputeDataDiskResponseArrayOutput
	ToComputeDataDiskResponseArrayOutputWithContext(context.Context) ComputeDataDiskResponseArrayOutput
}

type ComputeDataDiskResponseArray []ComputeDataDiskResponseInput

func (ComputeDataDiskResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeDataDiskResponse)(nil)).Elem()
}

func (i ComputeDataDiskResponseArray) ToComputeDataDiskResponseArrayOutput() ComputeDataDiskResponseArrayOutput {
	return i.ToComputeDataDiskResponseArrayOutputWithContext(context.Background())
}

func (i ComputeDataDiskResponseArray) ToComputeDataDiskResponseArrayOutputWithContext(ctx context.Context) ComputeDataDiskResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeDataDiskResponseArrayOutput)
}

// A data disks attached to a virtual machine.
type ComputeDataDiskResponseOutput struct{ *pulumi.OutputState }

func (ComputeDataDiskResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeDataDiskResponse)(nil)).Elem()
}

func (o ComputeDataDiskResponseOutput) ToComputeDataDiskResponseOutput() ComputeDataDiskResponseOutput {
	return o
}

func (o ComputeDataDiskResponseOutput) ToComputeDataDiskResponseOutputWithContext(ctx context.Context) ComputeDataDiskResponseOutput {
	return o
}

// Gets data disk size in GiB.
func (o ComputeDataDiskResponseOutput) DiskSizeGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeDataDiskResponse) *int { return v.DiskSizeGiB }).(pulumi.IntPtrOutput)
}

// When backed by a blob, the URI of underlying blob.
func (o ComputeDataDiskResponseOutput) DiskUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeDataDiskResponse) *string { return v.DiskUri }).(pulumi.StringPtrOutput)
}

// When backed by managed disk, this is the ID of the compute disk resource.
func (o ComputeDataDiskResponseOutput) ManagedDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeDataDiskResponse) *string { return v.ManagedDiskId }).(pulumi.StringPtrOutput)
}

// Gets data disk name.
func (o ComputeDataDiskResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeDataDiskResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ComputeDataDiskResponseArrayOutput struct{ *pulumi.OutputState }

func (ComputeDataDiskResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeDataDiskResponse)(nil)).Elem()
}

func (o ComputeDataDiskResponseArrayOutput) ToComputeDataDiskResponseArrayOutput() ComputeDataDiskResponseArrayOutput {
	return o
}

func (o ComputeDataDiskResponseArrayOutput) ToComputeDataDiskResponseArrayOutputWithContext(ctx context.Context) ComputeDataDiskResponseArrayOutput {
	return o
}

func (o ComputeDataDiskResponseArrayOutput) Index(i pulumi.IntInput) ComputeDataDiskResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeDataDiskResponse {
		return vs[0].([]ComputeDataDiskResponse)[vs[1].(int)]
	}).(ComputeDataDiskResponseOutput)
}

// Status information about a virtual machine.
type ComputeVmInstanceViewStatusInvokeResponse struct {
	// Gets the status Code.
	Code *string `pulumi:"code"`
	// Gets the short localizable label for the status.
	DisplayStatus *string `pulumi:"displayStatus"`
	// Gets the message associated with the status.
	Message *string `pulumi:"message"`
}

// ComputeVmInstanceViewStatusInvokeResponseInput is an input type that accepts ComputeVmInstanceViewStatusInvokeResponseArgs and ComputeVmInstanceViewStatusInvokeResponseOutput values.
// You can construct a concrete instance of `ComputeVmInstanceViewStatusInvokeResponseInput` via:
//
//          ComputeVmInstanceViewStatusInvokeResponseArgs{...}
type ComputeVmInstanceViewStatusInvokeResponseInput interface {
	pulumi.Input

	ToComputeVmInstanceViewStatusInvokeResponseOutput() ComputeVmInstanceViewStatusInvokeResponseOutput
	ToComputeVmInstanceViewStatusInvokeResponseOutputWithContext(context.Context) ComputeVmInstanceViewStatusInvokeResponseOutput
}

// Status information about a virtual machine.
type ComputeVmInstanceViewStatusInvokeResponseArgs struct {
	// Gets the status Code.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// Gets the short localizable label for the status.
	DisplayStatus pulumi.StringPtrInput `pulumi:"displayStatus"`
	// Gets the message associated with the status.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (ComputeVmInstanceViewStatusInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeVmInstanceViewStatusInvokeResponse)(nil)).Elem()
}

func (i ComputeVmInstanceViewStatusInvokeResponseArgs) ToComputeVmInstanceViewStatusInvokeResponseOutput() ComputeVmInstanceViewStatusInvokeResponseOutput {
	return i.ToComputeVmInstanceViewStatusInvokeResponseOutputWithContext(context.Background())
}

func (i ComputeVmInstanceViewStatusInvokeResponseArgs) ToComputeVmInstanceViewStatusInvokeResponseOutputWithContext(ctx context.Context) ComputeVmInstanceViewStatusInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeVmInstanceViewStatusInvokeResponseOutput)
}

// ComputeVmInstanceViewStatusInvokeResponseArrayInput is an input type that accepts ComputeVmInstanceViewStatusInvokeResponseArray and ComputeVmInstanceViewStatusInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ComputeVmInstanceViewStatusInvokeResponseArrayInput` via:
//
//          ComputeVmInstanceViewStatusInvokeResponseArray{ ComputeVmInstanceViewStatusInvokeResponseArgs{...} }
type ComputeVmInstanceViewStatusInvokeResponseArrayInput interface {
	pulumi.Input

	ToComputeVmInstanceViewStatusInvokeResponseArrayOutput() ComputeVmInstanceViewStatusInvokeResponseArrayOutput
	ToComputeVmInstanceViewStatusInvokeResponseArrayOutputWithContext(context.Context) ComputeVmInstanceViewStatusInvokeResponseArrayOutput
}

type ComputeVmInstanceViewStatusInvokeResponseArray []ComputeVmInstanceViewStatusInvokeResponseInput

func (ComputeVmInstanceViewStatusInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeVmInstanceViewStatusInvokeResponse)(nil)).Elem()
}

func (i ComputeVmInstanceViewStatusInvokeResponseArray) ToComputeVmInstanceViewStatusInvokeResponseArrayOutput() ComputeVmInstanceViewStatusInvokeResponseArrayOutput {
	return i.ToComputeVmInstanceViewStatusInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ComputeVmInstanceViewStatusInvokeResponseArray) ToComputeVmInstanceViewStatusInvokeResponseArrayOutputWithContext(ctx context.Context) ComputeVmInstanceViewStatusInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeVmInstanceViewStatusInvokeResponseArrayOutput)
}

// Status information about a virtual machine.
type ComputeVmInstanceViewStatusInvokeResponseOutput struct{ *pulumi.OutputState }

func (ComputeVmInstanceViewStatusInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeVmInstanceViewStatusInvokeResponse)(nil)).Elem()
}

func (o ComputeVmInstanceViewStatusInvokeResponseOutput) ToComputeVmInstanceViewStatusInvokeResponseOutput() ComputeVmInstanceViewStatusInvokeResponseOutput {
	return o
}

func (o ComputeVmInstanceViewStatusInvokeResponseOutput) ToComputeVmInstanceViewStatusInvokeResponseOutputWithContext(ctx context.Context) ComputeVmInstanceViewStatusInvokeResponseOutput {
	return o
}

// Gets the status Code.
func (o ComputeVmInstanceViewStatusInvokeResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeVmInstanceViewStatusInvokeResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Gets the short localizable label for the status.
func (o ComputeVmInstanceViewStatusInvokeResponseOutput) DisplayStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeVmInstanceViewStatusInvokeResponse) *string { return v.DisplayStatus }).(pulumi.StringPtrOutput)
}

// Gets the message associated with the status.
func (o ComputeVmInstanceViewStatusInvokeResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeVmInstanceViewStatusInvokeResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type ComputeVmInstanceViewStatusInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ComputeVmInstanceViewStatusInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeVmInstanceViewStatusInvokeResponse)(nil)).Elem()
}

func (o ComputeVmInstanceViewStatusInvokeResponseArrayOutput) ToComputeVmInstanceViewStatusInvokeResponseArrayOutput() ComputeVmInstanceViewStatusInvokeResponseArrayOutput {
	return o
}

func (o ComputeVmInstanceViewStatusInvokeResponseArrayOutput) ToComputeVmInstanceViewStatusInvokeResponseArrayOutputWithContext(ctx context.Context) ComputeVmInstanceViewStatusInvokeResponseArrayOutput {
	return o
}

func (o ComputeVmInstanceViewStatusInvokeResponseArrayOutput) Index(i pulumi.IntInput) ComputeVmInstanceViewStatusInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeVmInstanceViewStatusInvokeResponse {
		return vs[0].([]ComputeVmInstanceViewStatusInvokeResponse)[vs[1].(int)]
	}).(ComputeVmInstanceViewStatusInvokeResponseOutput)
}

// Status information about a virtual machine.
type ComputeVmInstanceViewStatusResponse struct {
	// Gets the status Code.
	Code *string `pulumi:"code"`
	// Gets the short localizable label for the status.
	DisplayStatus *string `pulumi:"displayStatus"`
	// Gets the message associated with the status.
	Message *string `pulumi:"message"`
}

// ComputeVmInstanceViewStatusResponseInput is an input type that accepts ComputeVmInstanceViewStatusResponseArgs and ComputeVmInstanceViewStatusResponseOutput values.
// You can construct a concrete instance of `ComputeVmInstanceViewStatusResponseInput` via:
//
//          ComputeVmInstanceViewStatusResponseArgs{...}
type ComputeVmInstanceViewStatusResponseInput interface {
	pulumi.Input

	ToComputeVmInstanceViewStatusResponseOutput() ComputeVmInstanceViewStatusResponseOutput
	ToComputeVmInstanceViewStatusResponseOutputWithContext(context.Context) ComputeVmInstanceViewStatusResponseOutput
}

// Status information about a virtual machine.
type ComputeVmInstanceViewStatusResponseArgs struct {
	// Gets the status Code.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// Gets the short localizable label for the status.
	DisplayStatus pulumi.StringPtrInput `pulumi:"displayStatus"`
	// Gets the message associated with the status.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (ComputeVmInstanceViewStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeVmInstanceViewStatusResponse)(nil)).Elem()
}

func (i ComputeVmInstanceViewStatusResponseArgs) ToComputeVmInstanceViewStatusResponseOutput() ComputeVmInstanceViewStatusResponseOutput {
	return i.ToComputeVmInstanceViewStatusResponseOutputWithContext(context.Background())
}

func (i ComputeVmInstanceViewStatusResponseArgs) ToComputeVmInstanceViewStatusResponseOutputWithContext(ctx context.Context) ComputeVmInstanceViewStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeVmInstanceViewStatusResponseOutput)
}

// ComputeVmInstanceViewStatusResponseArrayInput is an input type that accepts ComputeVmInstanceViewStatusResponseArray and ComputeVmInstanceViewStatusResponseArrayOutput values.
// You can construct a concrete instance of `ComputeVmInstanceViewStatusResponseArrayInput` via:
//
//          ComputeVmInstanceViewStatusResponseArray{ ComputeVmInstanceViewStatusResponseArgs{...} }
type ComputeVmInstanceViewStatusResponseArrayInput interface {
	pulumi.Input

	ToComputeVmInstanceViewStatusResponseArrayOutput() ComputeVmInstanceViewStatusResponseArrayOutput
	ToComputeVmInstanceViewStatusResponseArrayOutputWithContext(context.Context) ComputeVmInstanceViewStatusResponseArrayOutput
}

type ComputeVmInstanceViewStatusResponseArray []ComputeVmInstanceViewStatusResponseInput

func (ComputeVmInstanceViewStatusResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeVmInstanceViewStatusResponse)(nil)).Elem()
}

func (i ComputeVmInstanceViewStatusResponseArray) ToComputeVmInstanceViewStatusResponseArrayOutput() ComputeVmInstanceViewStatusResponseArrayOutput {
	return i.ToComputeVmInstanceViewStatusResponseArrayOutputWithContext(context.Background())
}

func (i ComputeVmInstanceViewStatusResponseArray) ToComputeVmInstanceViewStatusResponseArrayOutputWithContext(ctx context.Context) ComputeVmInstanceViewStatusResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeVmInstanceViewStatusResponseArrayOutput)
}

// Status information about a virtual machine.
type ComputeVmInstanceViewStatusResponseOutput struct{ *pulumi.OutputState }

func (ComputeVmInstanceViewStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeVmInstanceViewStatusResponse)(nil)).Elem()
}

func (o ComputeVmInstanceViewStatusResponseOutput) ToComputeVmInstanceViewStatusResponseOutput() ComputeVmInstanceViewStatusResponseOutput {
	return o
}

func (o ComputeVmInstanceViewStatusResponseOutput) ToComputeVmInstanceViewStatusResponseOutputWithContext(ctx context.Context) ComputeVmInstanceViewStatusResponseOutput {
	return o
}

// Gets the status Code.
func (o ComputeVmInstanceViewStatusResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeVmInstanceViewStatusResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Gets the short localizable label for the status.
func (o ComputeVmInstanceViewStatusResponseOutput) DisplayStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeVmInstanceViewStatusResponse) *string { return v.DisplayStatus }).(pulumi.StringPtrOutput)
}

// Gets the message associated with the status.
func (o ComputeVmInstanceViewStatusResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeVmInstanceViewStatusResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type ComputeVmInstanceViewStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (ComputeVmInstanceViewStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeVmInstanceViewStatusResponse)(nil)).Elem()
}

func (o ComputeVmInstanceViewStatusResponseArrayOutput) ToComputeVmInstanceViewStatusResponseArrayOutput() ComputeVmInstanceViewStatusResponseArrayOutput {
	return o
}

func (o ComputeVmInstanceViewStatusResponseArrayOutput) ToComputeVmInstanceViewStatusResponseArrayOutputWithContext(ctx context.Context) ComputeVmInstanceViewStatusResponseArrayOutput {
	return o
}

func (o ComputeVmInstanceViewStatusResponseArrayOutput) Index(i pulumi.IntInput) ComputeVmInstanceViewStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeVmInstanceViewStatusResponse {
		return vs[0].([]ComputeVmInstanceViewStatusResponse)[vs[1].(int)]
	}).(ComputeVmInstanceViewStatusResponseOutput)
}

// Properties of a virtual machine returned by the Microsoft.Compute API.
type ComputeVmPropertiesInvokeResponse struct {
	// Gets data disks blob uri for the virtual machine.
	DataDiskIds []string `pulumi:"dataDiskIds"`
	// Gets all data disks attached to the virtual machine.
	DataDisks []ComputeDataDiskInvokeResponse `pulumi:"dataDisks"`
	// Gets the network interface ID of the virtual machine.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// Gets OS disk blob uri for the virtual machine.
	OsDiskId *string `pulumi:"osDiskId"`
	// Gets the OS type of the virtual machine.
	OsType *string `pulumi:"osType"`
	// Gets the statuses of the virtual machine.
	Statuses []ComputeVmInstanceViewStatusInvokeResponse `pulumi:"statuses"`
	// Gets the size of the virtual machine.
	VmSize *string `pulumi:"vmSize"`
}

// ComputeVmPropertiesInvokeResponseInput is an input type that accepts ComputeVmPropertiesInvokeResponseArgs and ComputeVmPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ComputeVmPropertiesInvokeResponseInput` via:
//
//          ComputeVmPropertiesInvokeResponseArgs{...}
type ComputeVmPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToComputeVmPropertiesInvokeResponseOutput() ComputeVmPropertiesInvokeResponseOutput
	ToComputeVmPropertiesInvokeResponseOutputWithContext(context.Context) ComputeVmPropertiesInvokeResponseOutput
}

// Properties of a virtual machine returned by the Microsoft.Compute API.
type ComputeVmPropertiesInvokeResponseArgs struct {
	// Gets data disks blob uri for the virtual machine.
	DataDiskIds pulumi.StringArrayInput `pulumi:"dataDiskIds"`
	// Gets all data disks attached to the virtual machine.
	DataDisks ComputeDataDiskInvokeResponseArrayInput `pulumi:"dataDisks"`
	// Gets the network interface ID of the virtual machine.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// Gets OS disk blob uri for the virtual machine.
	OsDiskId pulumi.StringPtrInput `pulumi:"osDiskId"`
	// Gets the OS type of the virtual machine.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// Gets the statuses of the virtual machine.
	Statuses ComputeVmInstanceViewStatusInvokeResponseArrayInput `pulumi:"statuses"`
	// Gets the size of the virtual machine.
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (ComputeVmPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeVmPropertiesInvokeResponse)(nil)).Elem()
}

func (i ComputeVmPropertiesInvokeResponseArgs) ToComputeVmPropertiesInvokeResponseOutput() ComputeVmPropertiesInvokeResponseOutput {
	return i.ToComputeVmPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ComputeVmPropertiesInvokeResponseArgs) ToComputeVmPropertiesInvokeResponseOutputWithContext(ctx context.Context) ComputeVmPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeVmPropertiesInvokeResponseOutput)
}

// Properties of a virtual machine returned by the Microsoft.Compute API.
type ComputeVmPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ComputeVmPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeVmPropertiesInvokeResponse)(nil)).Elem()
}

func (o ComputeVmPropertiesInvokeResponseOutput) ToComputeVmPropertiesInvokeResponseOutput() ComputeVmPropertiesInvokeResponseOutput {
	return o
}

func (o ComputeVmPropertiesInvokeResponseOutput) ToComputeVmPropertiesInvokeResponseOutputWithContext(ctx context.Context) ComputeVmPropertiesInvokeResponseOutput {
	return o
}

// Gets data disks blob uri for the virtual machine.
func (o ComputeVmPropertiesInvokeResponseOutput) DataDiskIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComputeVmPropertiesInvokeResponse) []string { return v.DataDiskIds }).(pulumi.StringArrayOutput)
}

// Gets all data disks attached to the virtual machine.
func (o ComputeVmPropertiesInvokeResponseOutput) DataDisks() ComputeDataDiskInvokeResponseArrayOutput {
	return o.ApplyT(func(v ComputeVmPropertiesInvokeResponse) []ComputeDataDiskInvokeResponse { return v.DataDisks }).(ComputeDataDiskInvokeResponseArrayOutput)
}

// Gets the network interface ID of the virtual machine.
func (o ComputeVmPropertiesInvokeResponseOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeVmPropertiesInvokeResponse) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// Gets OS disk blob uri for the virtual machine.
func (o ComputeVmPropertiesInvokeResponseOutput) OsDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeVmPropertiesInvokeResponse) *string { return v.OsDiskId }).(pulumi.StringPtrOutput)
}

// Gets the OS type of the virtual machine.
func (o ComputeVmPropertiesInvokeResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeVmPropertiesInvokeResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Gets the statuses of the virtual machine.
func (o ComputeVmPropertiesInvokeResponseOutput) Statuses() ComputeVmInstanceViewStatusInvokeResponseArrayOutput {
	return o.ApplyT(func(v ComputeVmPropertiesInvokeResponse) []ComputeVmInstanceViewStatusInvokeResponse {
		return v.Statuses
	}).(ComputeVmInstanceViewStatusInvokeResponseArrayOutput)
}

// Gets the size of the virtual machine.
func (o ComputeVmPropertiesInvokeResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeVmPropertiesInvokeResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

// Properties of a virtual machine returned by the Microsoft.Compute API.
type ComputeVmPropertiesResponse struct {
	// Gets data disks blob uri for the virtual machine.
	DataDiskIds []string `pulumi:"dataDiskIds"`
	// Gets all data disks attached to the virtual machine.
	DataDisks []ComputeDataDiskResponse `pulumi:"dataDisks"`
	// Gets the network interface ID of the virtual machine.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// Gets OS disk blob uri for the virtual machine.
	OsDiskId *string `pulumi:"osDiskId"`
	// Gets the OS type of the virtual machine.
	OsType *string `pulumi:"osType"`
	// Gets the statuses of the virtual machine.
	Statuses []ComputeVmInstanceViewStatusResponse `pulumi:"statuses"`
	// Gets the size of the virtual machine.
	VmSize *string `pulumi:"vmSize"`
}

// ComputeVmPropertiesResponseInput is an input type that accepts ComputeVmPropertiesResponseArgs and ComputeVmPropertiesResponseOutput values.
// You can construct a concrete instance of `ComputeVmPropertiesResponseInput` via:
//
//          ComputeVmPropertiesResponseArgs{...}
type ComputeVmPropertiesResponseInput interface {
	pulumi.Input

	ToComputeVmPropertiesResponseOutput() ComputeVmPropertiesResponseOutput
	ToComputeVmPropertiesResponseOutputWithContext(context.Context) ComputeVmPropertiesResponseOutput
}

// Properties of a virtual machine returned by the Microsoft.Compute API.
type ComputeVmPropertiesResponseArgs struct {
	// Gets data disks blob uri for the virtual machine.
	DataDiskIds pulumi.StringArrayInput `pulumi:"dataDiskIds"`
	// Gets all data disks attached to the virtual machine.
	DataDisks ComputeDataDiskResponseArrayInput `pulumi:"dataDisks"`
	// Gets the network interface ID of the virtual machine.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// Gets OS disk blob uri for the virtual machine.
	OsDiskId pulumi.StringPtrInput `pulumi:"osDiskId"`
	// Gets the OS type of the virtual machine.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// Gets the statuses of the virtual machine.
	Statuses ComputeVmInstanceViewStatusResponseArrayInput `pulumi:"statuses"`
	// Gets the size of the virtual machine.
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (ComputeVmPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeVmPropertiesResponse)(nil)).Elem()
}

func (i ComputeVmPropertiesResponseArgs) ToComputeVmPropertiesResponseOutput() ComputeVmPropertiesResponseOutput {
	return i.ToComputeVmPropertiesResponseOutputWithContext(context.Background())
}

func (i ComputeVmPropertiesResponseArgs) ToComputeVmPropertiesResponseOutputWithContext(ctx context.Context) ComputeVmPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeVmPropertiesResponseOutput)
}

func (i ComputeVmPropertiesResponseArgs) ToComputeVmPropertiesResponsePtrOutput() ComputeVmPropertiesResponsePtrOutput {
	return i.ToComputeVmPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ComputeVmPropertiesResponseArgs) ToComputeVmPropertiesResponsePtrOutputWithContext(ctx context.Context) ComputeVmPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeVmPropertiesResponseOutput).ToComputeVmPropertiesResponsePtrOutputWithContext(ctx)
}

// ComputeVmPropertiesResponsePtrInput is an input type that accepts ComputeVmPropertiesResponseArgs, ComputeVmPropertiesResponsePtr and ComputeVmPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ComputeVmPropertiesResponsePtrInput` via:
//
//          ComputeVmPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ComputeVmPropertiesResponsePtrInput interface {
	pulumi.Input

	ToComputeVmPropertiesResponsePtrOutput() ComputeVmPropertiesResponsePtrOutput
	ToComputeVmPropertiesResponsePtrOutputWithContext(context.Context) ComputeVmPropertiesResponsePtrOutput
}

type computeVmPropertiesResponsePtrType ComputeVmPropertiesResponseArgs

func ComputeVmPropertiesResponsePtr(v *ComputeVmPropertiesResponseArgs) ComputeVmPropertiesResponsePtrInput {
	return (*computeVmPropertiesResponsePtrType)(v)
}

func (*computeVmPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeVmPropertiesResponse)(nil)).Elem()
}

func (i *computeVmPropertiesResponsePtrType) ToComputeVmPropertiesResponsePtrOutput() ComputeVmPropertiesResponsePtrOutput {
	return i.ToComputeVmPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *computeVmPropertiesResponsePtrType) ToComputeVmPropertiesResponsePtrOutputWithContext(ctx context.Context) ComputeVmPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeVmPropertiesResponsePtrOutput)
}

// Properties of a virtual machine returned by the Microsoft.Compute API.
type ComputeVmPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ComputeVmPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeVmPropertiesResponse)(nil)).Elem()
}

func (o ComputeVmPropertiesResponseOutput) ToComputeVmPropertiesResponseOutput() ComputeVmPropertiesResponseOutput {
	return o
}

func (o ComputeVmPropertiesResponseOutput) ToComputeVmPropertiesResponseOutputWithContext(ctx context.Context) ComputeVmPropertiesResponseOutput {
	return o
}

func (o ComputeVmPropertiesResponseOutput) ToComputeVmPropertiesResponsePtrOutput() ComputeVmPropertiesResponsePtrOutput {
	return o.ToComputeVmPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ComputeVmPropertiesResponseOutput) ToComputeVmPropertiesResponsePtrOutputWithContext(ctx context.Context) ComputeVmPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ComputeVmPropertiesResponse) *ComputeVmPropertiesResponse {
		return &v
	}).(ComputeVmPropertiesResponsePtrOutput)
}

// Gets data disks blob uri for the virtual machine.
func (o ComputeVmPropertiesResponseOutput) DataDiskIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComputeVmPropertiesResponse) []string { return v.DataDiskIds }).(pulumi.StringArrayOutput)
}

// Gets all data disks attached to the virtual machine.
func (o ComputeVmPropertiesResponseOutput) DataDisks() ComputeDataDiskResponseArrayOutput {
	return o.ApplyT(func(v ComputeVmPropertiesResponse) []ComputeDataDiskResponse { return v.DataDisks }).(ComputeDataDiskResponseArrayOutput)
}

// Gets the network interface ID of the virtual machine.
func (o ComputeVmPropertiesResponseOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeVmPropertiesResponse) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// Gets OS disk blob uri for the virtual machine.
func (o ComputeVmPropertiesResponseOutput) OsDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeVmPropertiesResponse) *string { return v.OsDiskId }).(pulumi.StringPtrOutput)
}

// Gets the OS type of the virtual machine.
func (o ComputeVmPropertiesResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeVmPropertiesResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Gets the statuses of the virtual machine.
func (o ComputeVmPropertiesResponseOutput) Statuses() ComputeVmInstanceViewStatusResponseArrayOutput {
	return o.ApplyT(func(v ComputeVmPropertiesResponse) []ComputeVmInstanceViewStatusResponse { return v.Statuses }).(ComputeVmInstanceViewStatusResponseArrayOutput)
}

// Gets the size of the virtual machine.
func (o ComputeVmPropertiesResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeVmPropertiesResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type ComputeVmPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ComputeVmPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeVmPropertiesResponse)(nil)).Elem()
}

func (o ComputeVmPropertiesResponsePtrOutput) ToComputeVmPropertiesResponsePtrOutput() ComputeVmPropertiesResponsePtrOutput {
	return o
}

func (o ComputeVmPropertiesResponsePtrOutput) ToComputeVmPropertiesResponsePtrOutputWithContext(ctx context.Context) ComputeVmPropertiesResponsePtrOutput {
	return o
}

func (o ComputeVmPropertiesResponsePtrOutput) Elem() ComputeVmPropertiesResponseOutput {
	return o.ApplyT(func(v *ComputeVmPropertiesResponse) ComputeVmPropertiesResponse { return *v }).(ComputeVmPropertiesResponseOutput)
}

// Gets data disks blob uri for the virtual machine.
func (o ComputeVmPropertiesResponsePtrOutput) DataDiskIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeVmPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.DataDiskIds
	}).(pulumi.StringArrayOutput)
}

// Gets all data disks attached to the virtual machine.
func (o ComputeVmPropertiesResponsePtrOutput) DataDisks() ComputeDataDiskResponseArrayOutput {
	return o.ApplyT(func(v *ComputeVmPropertiesResponse) []ComputeDataDiskResponse {
		if v == nil {
			return nil
		}
		return v.DataDisks
	}).(ComputeDataDiskResponseArrayOutput)
}

// Gets the network interface ID of the virtual machine.
func (o ComputeVmPropertiesResponsePtrOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeVmPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaceId
	}).(pulumi.StringPtrOutput)
}

// Gets OS disk blob uri for the virtual machine.
func (o ComputeVmPropertiesResponsePtrOutput) OsDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeVmPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsDiskId
	}).(pulumi.StringPtrOutput)
}

// Gets the OS type of the virtual machine.
func (o ComputeVmPropertiesResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeVmPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// Gets the statuses of the virtual machine.
func (o ComputeVmPropertiesResponsePtrOutput) Statuses() ComputeVmInstanceViewStatusResponseArrayOutput {
	return o.ApplyT(func(v *ComputeVmPropertiesResponse) []ComputeVmInstanceViewStatusResponse {
		if v == nil {
			return nil
		}
		return v.Statuses
	}).(ComputeVmInstanceViewStatusResponseArrayOutput)
}

// Gets the size of the virtual machine.
func (o ComputeVmPropertiesResponsePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeVmPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// Properties for creating a custom image from a VHD.
type CustomImagePropertiesCustom struct {
	// The image name.
	ImageName *string `pulumi:"imageName"`
	// The OS type of the custom image (i.e. Windows, Linux)
	OsType string `pulumi:"osType"`
	// Indicates whether sysprep has been run on the VHD.
	SysPrep *bool `pulumi:"sysPrep"`
}

// CustomImagePropertiesCustomInput is an input type that accepts CustomImagePropertiesCustomArgs and CustomImagePropertiesCustomOutput values.
// You can construct a concrete instance of `CustomImagePropertiesCustomInput` via:
//
//          CustomImagePropertiesCustomArgs{...}
type CustomImagePropertiesCustomInput interface {
	pulumi.Input

	ToCustomImagePropertiesCustomOutput() CustomImagePropertiesCustomOutput
	ToCustomImagePropertiesCustomOutputWithContext(context.Context) CustomImagePropertiesCustomOutput
}

// Properties for creating a custom image from a VHD.
type CustomImagePropertiesCustomArgs struct {
	// The image name.
	ImageName pulumi.StringPtrInput `pulumi:"imageName"`
	// The OS type of the custom image (i.e. Windows, Linux)
	OsType pulumi.StringInput `pulumi:"osType"`
	// Indicates whether sysprep has been run on the VHD.
	SysPrep pulumi.BoolPtrInput `pulumi:"sysPrep"`
}

func (CustomImagePropertiesCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesCustom)(nil)).Elem()
}

func (i CustomImagePropertiesCustomArgs) ToCustomImagePropertiesCustomOutput() CustomImagePropertiesCustomOutput {
	return i.ToCustomImagePropertiesCustomOutputWithContext(context.Background())
}

func (i CustomImagePropertiesCustomArgs) ToCustomImagePropertiesCustomOutputWithContext(ctx context.Context) CustomImagePropertiesCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesCustomOutput)
}

func (i CustomImagePropertiesCustomArgs) ToCustomImagePropertiesCustomPtrOutput() CustomImagePropertiesCustomPtrOutput {
	return i.ToCustomImagePropertiesCustomPtrOutputWithContext(context.Background())
}

func (i CustomImagePropertiesCustomArgs) ToCustomImagePropertiesCustomPtrOutputWithContext(ctx context.Context) CustomImagePropertiesCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesCustomOutput).ToCustomImagePropertiesCustomPtrOutputWithContext(ctx)
}

// CustomImagePropertiesCustomPtrInput is an input type that accepts CustomImagePropertiesCustomArgs, CustomImagePropertiesCustomPtr and CustomImagePropertiesCustomPtrOutput values.
// You can construct a concrete instance of `CustomImagePropertiesCustomPtrInput` via:
//
//          CustomImagePropertiesCustomArgs{...}
//
//  or:
//
//          nil
type CustomImagePropertiesCustomPtrInput interface {
	pulumi.Input

	ToCustomImagePropertiesCustomPtrOutput() CustomImagePropertiesCustomPtrOutput
	ToCustomImagePropertiesCustomPtrOutputWithContext(context.Context) CustomImagePropertiesCustomPtrOutput
}

type customImagePropertiesCustomPtrType CustomImagePropertiesCustomArgs

func CustomImagePropertiesCustomPtr(v *CustomImagePropertiesCustomArgs) CustomImagePropertiesCustomPtrInput {
	return (*customImagePropertiesCustomPtrType)(v)
}

func (*customImagePropertiesCustomPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesCustom)(nil)).Elem()
}

func (i *customImagePropertiesCustomPtrType) ToCustomImagePropertiesCustomPtrOutput() CustomImagePropertiesCustomPtrOutput {
	return i.ToCustomImagePropertiesCustomPtrOutputWithContext(context.Background())
}

func (i *customImagePropertiesCustomPtrType) ToCustomImagePropertiesCustomPtrOutputWithContext(ctx context.Context) CustomImagePropertiesCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesCustomPtrOutput)
}

// Properties for creating a custom image from a VHD.
type CustomImagePropertiesCustomOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesCustom)(nil)).Elem()
}

func (o CustomImagePropertiesCustomOutput) ToCustomImagePropertiesCustomOutput() CustomImagePropertiesCustomOutput {
	return o
}

func (o CustomImagePropertiesCustomOutput) ToCustomImagePropertiesCustomOutputWithContext(ctx context.Context) CustomImagePropertiesCustomOutput {
	return o
}

func (o CustomImagePropertiesCustomOutput) ToCustomImagePropertiesCustomPtrOutput() CustomImagePropertiesCustomPtrOutput {
	return o.ToCustomImagePropertiesCustomPtrOutputWithContext(context.Background())
}

func (o CustomImagePropertiesCustomOutput) ToCustomImagePropertiesCustomPtrOutputWithContext(ctx context.Context) CustomImagePropertiesCustomPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesCustom) *CustomImagePropertiesCustom {
		return &v
	}).(CustomImagePropertiesCustomPtrOutput)
}

// The image name.
func (o CustomImagePropertiesCustomOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesCustom) *string { return v.ImageName }).(pulumi.StringPtrOutput)
}

// The OS type of the custom image (i.e. Windows, Linux)
func (o CustomImagePropertiesCustomOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v CustomImagePropertiesCustom) string { return v.OsType }).(pulumi.StringOutput)
}

// Indicates whether sysprep has been run on the VHD.
func (o CustomImagePropertiesCustomOutput) SysPrep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesCustom) *bool { return v.SysPrep }).(pulumi.BoolPtrOutput)
}

type CustomImagePropertiesCustomPtrOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesCustomPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesCustom)(nil)).Elem()
}

func (o CustomImagePropertiesCustomPtrOutput) ToCustomImagePropertiesCustomPtrOutput() CustomImagePropertiesCustomPtrOutput {
	return o
}

func (o CustomImagePropertiesCustomPtrOutput) ToCustomImagePropertiesCustomPtrOutputWithContext(ctx context.Context) CustomImagePropertiesCustomPtrOutput {
	return o
}

func (o CustomImagePropertiesCustomPtrOutput) Elem() CustomImagePropertiesCustomOutput {
	return o.ApplyT(func(v *CustomImagePropertiesCustom) CustomImagePropertiesCustom { return *v }).(CustomImagePropertiesCustomOutput)
}

// The image name.
func (o CustomImagePropertiesCustomPtrOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesCustom) *string {
		if v == nil {
			return nil
		}
		return v.ImageName
	}).(pulumi.StringPtrOutput)
}

// The OS type of the custom image (i.e. Windows, Linux)
func (o CustomImagePropertiesCustomPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesCustom) *string {
		if v == nil {
			return nil
		}
		return &v.OsType
	}).(pulumi.StringPtrOutput)
}

// Indicates whether sysprep has been run on the VHD.
func (o CustomImagePropertiesCustomPtrOutput) SysPrep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesCustom) *bool {
		if v == nil {
			return nil
		}
		return v.SysPrep
	}).(pulumi.BoolPtrOutput)
}

// Properties for creating a custom image from a VHD.
type CustomImagePropertiesCustomInvokeResponse struct {
	// The image name.
	ImageName *string `pulumi:"imageName"`
	// The OS type of the custom image (i.e. Windows, Linux)
	OsType string `pulumi:"osType"`
	// Indicates whether sysprep has been run on the VHD.
	SysPrep *bool `pulumi:"sysPrep"`
}

// CustomImagePropertiesCustomInvokeResponseInput is an input type that accepts CustomImagePropertiesCustomInvokeResponseArgs and CustomImagePropertiesCustomInvokeResponseOutput values.
// You can construct a concrete instance of `CustomImagePropertiesCustomInvokeResponseInput` via:
//
//          CustomImagePropertiesCustomInvokeResponseArgs{...}
type CustomImagePropertiesCustomInvokeResponseInput interface {
	pulumi.Input

	ToCustomImagePropertiesCustomInvokeResponseOutput() CustomImagePropertiesCustomInvokeResponseOutput
	ToCustomImagePropertiesCustomInvokeResponseOutputWithContext(context.Context) CustomImagePropertiesCustomInvokeResponseOutput
}

// Properties for creating a custom image from a VHD.
type CustomImagePropertiesCustomInvokeResponseArgs struct {
	// The image name.
	ImageName pulumi.StringPtrInput `pulumi:"imageName"`
	// The OS type of the custom image (i.e. Windows, Linux)
	OsType pulumi.StringInput `pulumi:"osType"`
	// Indicates whether sysprep has been run on the VHD.
	SysPrep pulumi.BoolPtrInput `pulumi:"sysPrep"`
}

func (CustomImagePropertiesCustomInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesCustomInvokeResponse)(nil)).Elem()
}

func (i CustomImagePropertiesCustomInvokeResponseArgs) ToCustomImagePropertiesCustomInvokeResponseOutput() CustomImagePropertiesCustomInvokeResponseOutput {
	return i.ToCustomImagePropertiesCustomInvokeResponseOutputWithContext(context.Background())
}

func (i CustomImagePropertiesCustomInvokeResponseArgs) ToCustomImagePropertiesCustomInvokeResponseOutputWithContext(ctx context.Context) CustomImagePropertiesCustomInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesCustomInvokeResponseOutput)
}

// Properties for creating a custom image from a VHD.
type CustomImagePropertiesCustomInvokeResponseOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesCustomInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesCustomInvokeResponse)(nil)).Elem()
}

func (o CustomImagePropertiesCustomInvokeResponseOutput) ToCustomImagePropertiesCustomInvokeResponseOutput() CustomImagePropertiesCustomInvokeResponseOutput {
	return o
}

func (o CustomImagePropertiesCustomInvokeResponseOutput) ToCustomImagePropertiesCustomInvokeResponseOutputWithContext(ctx context.Context) CustomImagePropertiesCustomInvokeResponseOutput {
	return o
}

// The image name.
func (o CustomImagePropertiesCustomInvokeResponseOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesCustomInvokeResponse) *string { return v.ImageName }).(pulumi.StringPtrOutput)
}

// The OS type of the custom image (i.e. Windows, Linux)
func (o CustomImagePropertiesCustomInvokeResponseOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v CustomImagePropertiesCustomInvokeResponse) string { return v.OsType }).(pulumi.StringOutput)
}

// Indicates whether sysprep has been run on the VHD.
func (o CustomImagePropertiesCustomInvokeResponseOutput) SysPrep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesCustomInvokeResponse) *bool { return v.SysPrep }).(pulumi.BoolPtrOutput)
}

// Properties for creating a custom image from a VHD.
type CustomImagePropertiesCustomResponse struct {
	// The image name.
	ImageName *string `pulumi:"imageName"`
	// The OS type of the custom image (i.e. Windows, Linux)
	OsType string `pulumi:"osType"`
	// Indicates whether sysprep has been run on the VHD.
	SysPrep *bool `pulumi:"sysPrep"`
}

// CustomImagePropertiesCustomResponseInput is an input type that accepts CustomImagePropertiesCustomResponseArgs and CustomImagePropertiesCustomResponseOutput values.
// You can construct a concrete instance of `CustomImagePropertiesCustomResponseInput` via:
//
//          CustomImagePropertiesCustomResponseArgs{...}
type CustomImagePropertiesCustomResponseInput interface {
	pulumi.Input

	ToCustomImagePropertiesCustomResponseOutput() CustomImagePropertiesCustomResponseOutput
	ToCustomImagePropertiesCustomResponseOutputWithContext(context.Context) CustomImagePropertiesCustomResponseOutput
}

// Properties for creating a custom image from a VHD.
type CustomImagePropertiesCustomResponseArgs struct {
	// The image name.
	ImageName pulumi.StringPtrInput `pulumi:"imageName"`
	// The OS type of the custom image (i.e. Windows, Linux)
	OsType pulumi.StringInput `pulumi:"osType"`
	// Indicates whether sysprep has been run on the VHD.
	SysPrep pulumi.BoolPtrInput `pulumi:"sysPrep"`
}

func (CustomImagePropertiesCustomResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesCustomResponse)(nil)).Elem()
}

func (i CustomImagePropertiesCustomResponseArgs) ToCustomImagePropertiesCustomResponseOutput() CustomImagePropertiesCustomResponseOutput {
	return i.ToCustomImagePropertiesCustomResponseOutputWithContext(context.Background())
}

func (i CustomImagePropertiesCustomResponseArgs) ToCustomImagePropertiesCustomResponseOutputWithContext(ctx context.Context) CustomImagePropertiesCustomResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesCustomResponseOutput)
}

func (i CustomImagePropertiesCustomResponseArgs) ToCustomImagePropertiesCustomResponsePtrOutput() CustomImagePropertiesCustomResponsePtrOutput {
	return i.ToCustomImagePropertiesCustomResponsePtrOutputWithContext(context.Background())
}

func (i CustomImagePropertiesCustomResponseArgs) ToCustomImagePropertiesCustomResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesCustomResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesCustomResponseOutput).ToCustomImagePropertiesCustomResponsePtrOutputWithContext(ctx)
}

// CustomImagePropertiesCustomResponsePtrInput is an input type that accepts CustomImagePropertiesCustomResponseArgs, CustomImagePropertiesCustomResponsePtr and CustomImagePropertiesCustomResponsePtrOutput values.
// You can construct a concrete instance of `CustomImagePropertiesCustomResponsePtrInput` via:
//
//          CustomImagePropertiesCustomResponseArgs{...}
//
//  or:
//
//          nil
type CustomImagePropertiesCustomResponsePtrInput interface {
	pulumi.Input

	ToCustomImagePropertiesCustomResponsePtrOutput() CustomImagePropertiesCustomResponsePtrOutput
	ToCustomImagePropertiesCustomResponsePtrOutputWithContext(context.Context) CustomImagePropertiesCustomResponsePtrOutput
}

type customImagePropertiesCustomResponsePtrType CustomImagePropertiesCustomResponseArgs

func CustomImagePropertiesCustomResponsePtr(v *CustomImagePropertiesCustomResponseArgs) CustomImagePropertiesCustomResponsePtrInput {
	return (*customImagePropertiesCustomResponsePtrType)(v)
}

func (*customImagePropertiesCustomResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesCustomResponse)(nil)).Elem()
}

func (i *customImagePropertiesCustomResponsePtrType) ToCustomImagePropertiesCustomResponsePtrOutput() CustomImagePropertiesCustomResponsePtrOutput {
	return i.ToCustomImagePropertiesCustomResponsePtrOutputWithContext(context.Background())
}

func (i *customImagePropertiesCustomResponsePtrType) ToCustomImagePropertiesCustomResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesCustomResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesCustomResponsePtrOutput)
}

// Properties for creating a custom image from a VHD.
type CustomImagePropertiesCustomResponseOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesCustomResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesCustomResponse)(nil)).Elem()
}

func (o CustomImagePropertiesCustomResponseOutput) ToCustomImagePropertiesCustomResponseOutput() CustomImagePropertiesCustomResponseOutput {
	return o
}

func (o CustomImagePropertiesCustomResponseOutput) ToCustomImagePropertiesCustomResponseOutputWithContext(ctx context.Context) CustomImagePropertiesCustomResponseOutput {
	return o
}

func (o CustomImagePropertiesCustomResponseOutput) ToCustomImagePropertiesCustomResponsePtrOutput() CustomImagePropertiesCustomResponsePtrOutput {
	return o.ToCustomImagePropertiesCustomResponsePtrOutputWithContext(context.Background())
}

func (o CustomImagePropertiesCustomResponseOutput) ToCustomImagePropertiesCustomResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesCustomResponsePtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesCustomResponse) *CustomImagePropertiesCustomResponse {
		return &v
	}).(CustomImagePropertiesCustomResponsePtrOutput)
}

// The image name.
func (o CustomImagePropertiesCustomResponseOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesCustomResponse) *string { return v.ImageName }).(pulumi.StringPtrOutput)
}

// The OS type of the custom image (i.e. Windows, Linux)
func (o CustomImagePropertiesCustomResponseOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v CustomImagePropertiesCustomResponse) string { return v.OsType }).(pulumi.StringOutput)
}

// Indicates whether sysprep has been run on the VHD.
func (o CustomImagePropertiesCustomResponseOutput) SysPrep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesCustomResponse) *bool { return v.SysPrep }).(pulumi.BoolPtrOutput)
}

type CustomImagePropertiesCustomResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesCustomResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesCustomResponse)(nil)).Elem()
}

func (o CustomImagePropertiesCustomResponsePtrOutput) ToCustomImagePropertiesCustomResponsePtrOutput() CustomImagePropertiesCustomResponsePtrOutput {
	return o
}

func (o CustomImagePropertiesCustomResponsePtrOutput) ToCustomImagePropertiesCustomResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesCustomResponsePtrOutput {
	return o
}

func (o CustomImagePropertiesCustomResponsePtrOutput) Elem() CustomImagePropertiesCustomResponseOutput {
	return o.ApplyT(func(v *CustomImagePropertiesCustomResponse) CustomImagePropertiesCustomResponse { return *v }).(CustomImagePropertiesCustomResponseOutput)
}

// The image name.
func (o CustomImagePropertiesCustomResponsePtrOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesCustomResponse) *string {
		if v == nil {
			return nil
		}
		return v.ImageName
	}).(pulumi.StringPtrOutput)
}

// The OS type of the custom image (i.e. Windows, Linux)
func (o CustomImagePropertiesCustomResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesCustomResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OsType
	}).(pulumi.StringPtrOutput)
}

// Indicates whether sysprep has been run on the VHD.
func (o CustomImagePropertiesCustomResponsePtrOutput) SysPrep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesCustomResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SysPrep
	}).(pulumi.BoolPtrOutput)
}

// Properties for plan on a custom image.
type CustomImagePropertiesFromPlan struct {
	// The id of the plan, equivalent to name of the plan
	Id *string `pulumi:"id"`
	// The offer for the plan from the marketplace image the custom image is derived from
	Offer *string `pulumi:"offer"`
	// The publisher for the plan from the marketplace image the custom image is derived from
	Publisher *string `pulumi:"publisher"`
}

// CustomImagePropertiesFromPlanInput is an input type that accepts CustomImagePropertiesFromPlanArgs and CustomImagePropertiesFromPlanOutput values.
// You can construct a concrete instance of `CustomImagePropertiesFromPlanInput` via:
//
//          CustomImagePropertiesFromPlanArgs{...}
type CustomImagePropertiesFromPlanInput interface {
	pulumi.Input

	ToCustomImagePropertiesFromPlanOutput() CustomImagePropertiesFromPlanOutput
	ToCustomImagePropertiesFromPlanOutputWithContext(context.Context) CustomImagePropertiesFromPlanOutput
}

// Properties for plan on a custom image.
type CustomImagePropertiesFromPlanArgs struct {
	// The id of the plan, equivalent to name of the plan
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The offer for the plan from the marketplace image the custom image is derived from
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// The publisher for the plan from the marketplace image the custom image is derived from
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
}

func (CustomImagePropertiesFromPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesFromPlan)(nil)).Elem()
}

func (i CustomImagePropertiesFromPlanArgs) ToCustomImagePropertiesFromPlanOutput() CustomImagePropertiesFromPlanOutput {
	return i.ToCustomImagePropertiesFromPlanOutputWithContext(context.Background())
}

func (i CustomImagePropertiesFromPlanArgs) ToCustomImagePropertiesFromPlanOutputWithContext(ctx context.Context) CustomImagePropertiesFromPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromPlanOutput)
}

func (i CustomImagePropertiesFromPlanArgs) ToCustomImagePropertiesFromPlanPtrOutput() CustomImagePropertiesFromPlanPtrOutput {
	return i.ToCustomImagePropertiesFromPlanPtrOutputWithContext(context.Background())
}

func (i CustomImagePropertiesFromPlanArgs) ToCustomImagePropertiesFromPlanPtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromPlanOutput).ToCustomImagePropertiesFromPlanPtrOutputWithContext(ctx)
}

// CustomImagePropertiesFromPlanPtrInput is an input type that accepts CustomImagePropertiesFromPlanArgs, CustomImagePropertiesFromPlanPtr and CustomImagePropertiesFromPlanPtrOutput values.
// You can construct a concrete instance of `CustomImagePropertiesFromPlanPtrInput` via:
//
//          CustomImagePropertiesFromPlanArgs{...}
//
//  or:
//
//          nil
type CustomImagePropertiesFromPlanPtrInput interface {
	pulumi.Input

	ToCustomImagePropertiesFromPlanPtrOutput() CustomImagePropertiesFromPlanPtrOutput
	ToCustomImagePropertiesFromPlanPtrOutputWithContext(context.Context) CustomImagePropertiesFromPlanPtrOutput
}

type customImagePropertiesFromPlanPtrType CustomImagePropertiesFromPlanArgs

func CustomImagePropertiesFromPlanPtr(v *CustomImagePropertiesFromPlanArgs) CustomImagePropertiesFromPlanPtrInput {
	return (*customImagePropertiesFromPlanPtrType)(v)
}

func (*customImagePropertiesFromPlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesFromPlan)(nil)).Elem()
}

func (i *customImagePropertiesFromPlanPtrType) ToCustomImagePropertiesFromPlanPtrOutput() CustomImagePropertiesFromPlanPtrOutput {
	return i.ToCustomImagePropertiesFromPlanPtrOutputWithContext(context.Background())
}

func (i *customImagePropertiesFromPlanPtrType) ToCustomImagePropertiesFromPlanPtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromPlanPtrOutput)
}

// Properties for plan on a custom image.
type CustomImagePropertiesFromPlanOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesFromPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesFromPlan)(nil)).Elem()
}

func (o CustomImagePropertiesFromPlanOutput) ToCustomImagePropertiesFromPlanOutput() CustomImagePropertiesFromPlanOutput {
	return o
}

func (o CustomImagePropertiesFromPlanOutput) ToCustomImagePropertiesFromPlanOutputWithContext(ctx context.Context) CustomImagePropertiesFromPlanOutput {
	return o
}

func (o CustomImagePropertiesFromPlanOutput) ToCustomImagePropertiesFromPlanPtrOutput() CustomImagePropertiesFromPlanPtrOutput {
	return o.ToCustomImagePropertiesFromPlanPtrOutputWithContext(context.Background())
}

func (o CustomImagePropertiesFromPlanOutput) ToCustomImagePropertiesFromPlanPtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromPlanPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromPlan) *CustomImagePropertiesFromPlan {
		return &v
	}).(CustomImagePropertiesFromPlanPtrOutput)
}

// The id of the plan, equivalent to name of the plan
func (o CustomImagePropertiesFromPlanOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromPlan) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The offer for the plan from the marketplace image the custom image is derived from
func (o CustomImagePropertiesFromPlanOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromPlan) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// The publisher for the plan from the marketplace image the custom image is derived from
func (o CustomImagePropertiesFromPlanOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromPlan) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

type CustomImagePropertiesFromPlanPtrOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesFromPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesFromPlan)(nil)).Elem()
}

func (o CustomImagePropertiesFromPlanPtrOutput) ToCustomImagePropertiesFromPlanPtrOutput() CustomImagePropertiesFromPlanPtrOutput {
	return o
}

func (o CustomImagePropertiesFromPlanPtrOutput) ToCustomImagePropertiesFromPlanPtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromPlanPtrOutput {
	return o
}

func (o CustomImagePropertiesFromPlanPtrOutput) Elem() CustomImagePropertiesFromPlanOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromPlan) CustomImagePropertiesFromPlan { return *v }).(CustomImagePropertiesFromPlanOutput)
}

// The id of the plan, equivalent to name of the plan
func (o CustomImagePropertiesFromPlanPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromPlan) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The offer for the plan from the marketplace image the custom image is derived from
func (o CustomImagePropertiesFromPlanPtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromPlan) *string {
		if v == nil {
			return nil
		}
		return v.Offer
	}).(pulumi.StringPtrOutput)
}

// The publisher for the plan from the marketplace image the custom image is derived from
func (o CustomImagePropertiesFromPlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromPlan) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Properties for plan on a custom image.
type CustomImagePropertiesFromPlanInvokeResponse struct {
	// The id of the plan, equivalent to name of the plan
	Id *string `pulumi:"id"`
	// The offer for the plan from the marketplace image the custom image is derived from
	Offer *string `pulumi:"offer"`
	// The publisher for the plan from the marketplace image the custom image is derived from
	Publisher *string `pulumi:"publisher"`
}

// CustomImagePropertiesFromPlanInvokeResponseInput is an input type that accepts CustomImagePropertiesFromPlanInvokeResponseArgs and CustomImagePropertiesFromPlanInvokeResponseOutput values.
// You can construct a concrete instance of `CustomImagePropertiesFromPlanInvokeResponseInput` via:
//
//          CustomImagePropertiesFromPlanInvokeResponseArgs{...}
type CustomImagePropertiesFromPlanInvokeResponseInput interface {
	pulumi.Input

	ToCustomImagePropertiesFromPlanInvokeResponseOutput() CustomImagePropertiesFromPlanInvokeResponseOutput
	ToCustomImagePropertiesFromPlanInvokeResponseOutputWithContext(context.Context) CustomImagePropertiesFromPlanInvokeResponseOutput
}

// Properties for plan on a custom image.
type CustomImagePropertiesFromPlanInvokeResponseArgs struct {
	// The id of the plan, equivalent to name of the plan
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The offer for the plan from the marketplace image the custom image is derived from
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// The publisher for the plan from the marketplace image the custom image is derived from
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
}

func (CustomImagePropertiesFromPlanInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesFromPlanInvokeResponse)(nil)).Elem()
}

func (i CustomImagePropertiesFromPlanInvokeResponseArgs) ToCustomImagePropertiesFromPlanInvokeResponseOutput() CustomImagePropertiesFromPlanInvokeResponseOutput {
	return i.ToCustomImagePropertiesFromPlanInvokeResponseOutputWithContext(context.Background())
}

func (i CustomImagePropertiesFromPlanInvokeResponseArgs) ToCustomImagePropertiesFromPlanInvokeResponseOutputWithContext(ctx context.Context) CustomImagePropertiesFromPlanInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromPlanInvokeResponseOutput)
}

// Properties for plan on a custom image.
type CustomImagePropertiesFromPlanInvokeResponseOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesFromPlanInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesFromPlanInvokeResponse)(nil)).Elem()
}

func (o CustomImagePropertiesFromPlanInvokeResponseOutput) ToCustomImagePropertiesFromPlanInvokeResponseOutput() CustomImagePropertiesFromPlanInvokeResponseOutput {
	return o
}

func (o CustomImagePropertiesFromPlanInvokeResponseOutput) ToCustomImagePropertiesFromPlanInvokeResponseOutputWithContext(ctx context.Context) CustomImagePropertiesFromPlanInvokeResponseOutput {
	return o
}

// The id of the plan, equivalent to name of the plan
func (o CustomImagePropertiesFromPlanInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromPlanInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The offer for the plan from the marketplace image the custom image is derived from
func (o CustomImagePropertiesFromPlanInvokeResponseOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromPlanInvokeResponse) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// The publisher for the plan from the marketplace image the custom image is derived from
func (o CustomImagePropertiesFromPlanInvokeResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromPlanInvokeResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Properties for plan on a custom image.
type CustomImagePropertiesFromPlanResponse struct {
	// The id of the plan, equivalent to name of the plan
	Id *string `pulumi:"id"`
	// The offer for the plan from the marketplace image the custom image is derived from
	Offer *string `pulumi:"offer"`
	// The publisher for the plan from the marketplace image the custom image is derived from
	Publisher *string `pulumi:"publisher"`
}

// CustomImagePropertiesFromPlanResponseInput is an input type that accepts CustomImagePropertiesFromPlanResponseArgs and CustomImagePropertiesFromPlanResponseOutput values.
// You can construct a concrete instance of `CustomImagePropertiesFromPlanResponseInput` via:
//
//          CustomImagePropertiesFromPlanResponseArgs{...}
type CustomImagePropertiesFromPlanResponseInput interface {
	pulumi.Input

	ToCustomImagePropertiesFromPlanResponseOutput() CustomImagePropertiesFromPlanResponseOutput
	ToCustomImagePropertiesFromPlanResponseOutputWithContext(context.Context) CustomImagePropertiesFromPlanResponseOutput
}

// Properties for plan on a custom image.
type CustomImagePropertiesFromPlanResponseArgs struct {
	// The id of the plan, equivalent to name of the plan
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The offer for the plan from the marketplace image the custom image is derived from
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// The publisher for the plan from the marketplace image the custom image is derived from
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
}

func (CustomImagePropertiesFromPlanResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesFromPlanResponse)(nil)).Elem()
}

func (i CustomImagePropertiesFromPlanResponseArgs) ToCustomImagePropertiesFromPlanResponseOutput() CustomImagePropertiesFromPlanResponseOutput {
	return i.ToCustomImagePropertiesFromPlanResponseOutputWithContext(context.Background())
}

func (i CustomImagePropertiesFromPlanResponseArgs) ToCustomImagePropertiesFromPlanResponseOutputWithContext(ctx context.Context) CustomImagePropertiesFromPlanResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromPlanResponseOutput)
}

func (i CustomImagePropertiesFromPlanResponseArgs) ToCustomImagePropertiesFromPlanResponsePtrOutput() CustomImagePropertiesFromPlanResponsePtrOutput {
	return i.ToCustomImagePropertiesFromPlanResponsePtrOutputWithContext(context.Background())
}

func (i CustomImagePropertiesFromPlanResponseArgs) ToCustomImagePropertiesFromPlanResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromPlanResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromPlanResponseOutput).ToCustomImagePropertiesFromPlanResponsePtrOutputWithContext(ctx)
}

// CustomImagePropertiesFromPlanResponsePtrInput is an input type that accepts CustomImagePropertiesFromPlanResponseArgs, CustomImagePropertiesFromPlanResponsePtr and CustomImagePropertiesFromPlanResponsePtrOutput values.
// You can construct a concrete instance of `CustomImagePropertiesFromPlanResponsePtrInput` via:
//
//          CustomImagePropertiesFromPlanResponseArgs{...}
//
//  or:
//
//          nil
type CustomImagePropertiesFromPlanResponsePtrInput interface {
	pulumi.Input

	ToCustomImagePropertiesFromPlanResponsePtrOutput() CustomImagePropertiesFromPlanResponsePtrOutput
	ToCustomImagePropertiesFromPlanResponsePtrOutputWithContext(context.Context) CustomImagePropertiesFromPlanResponsePtrOutput
}

type customImagePropertiesFromPlanResponsePtrType CustomImagePropertiesFromPlanResponseArgs

func CustomImagePropertiesFromPlanResponsePtr(v *CustomImagePropertiesFromPlanResponseArgs) CustomImagePropertiesFromPlanResponsePtrInput {
	return (*customImagePropertiesFromPlanResponsePtrType)(v)
}

func (*customImagePropertiesFromPlanResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesFromPlanResponse)(nil)).Elem()
}

func (i *customImagePropertiesFromPlanResponsePtrType) ToCustomImagePropertiesFromPlanResponsePtrOutput() CustomImagePropertiesFromPlanResponsePtrOutput {
	return i.ToCustomImagePropertiesFromPlanResponsePtrOutputWithContext(context.Background())
}

func (i *customImagePropertiesFromPlanResponsePtrType) ToCustomImagePropertiesFromPlanResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromPlanResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromPlanResponsePtrOutput)
}

// Properties for plan on a custom image.
type CustomImagePropertiesFromPlanResponseOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesFromPlanResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesFromPlanResponse)(nil)).Elem()
}

func (o CustomImagePropertiesFromPlanResponseOutput) ToCustomImagePropertiesFromPlanResponseOutput() CustomImagePropertiesFromPlanResponseOutput {
	return o
}

func (o CustomImagePropertiesFromPlanResponseOutput) ToCustomImagePropertiesFromPlanResponseOutputWithContext(ctx context.Context) CustomImagePropertiesFromPlanResponseOutput {
	return o
}

func (o CustomImagePropertiesFromPlanResponseOutput) ToCustomImagePropertiesFromPlanResponsePtrOutput() CustomImagePropertiesFromPlanResponsePtrOutput {
	return o.ToCustomImagePropertiesFromPlanResponsePtrOutputWithContext(context.Background())
}

func (o CustomImagePropertiesFromPlanResponseOutput) ToCustomImagePropertiesFromPlanResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromPlanResponsePtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromPlanResponse) *CustomImagePropertiesFromPlanResponse {
		return &v
	}).(CustomImagePropertiesFromPlanResponsePtrOutput)
}

// The id of the plan, equivalent to name of the plan
func (o CustomImagePropertiesFromPlanResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromPlanResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The offer for the plan from the marketplace image the custom image is derived from
func (o CustomImagePropertiesFromPlanResponseOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromPlanResponse) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// The publisher for the plan from the marketplace image the custom image is derived from
func (o CustomImagePropertiesFromPlanResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromPlanResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

type CustomImagePropertiesFromPlanResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesFromPlanResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesFromPlanResponse)(nil)).Elem()
}

func (o CustomImagePropertiesFromPlanResponsePtrOutput) ToCustomImagePropertiesFromPlanResponsePtrOutput() CustomImagePropertiesFromPlanResponsePtrOutput {
	return o
}

func (o CustomImagePropertiesFromPlanResponsePtrOutput) ToCustomImagePropertiesFromPlanResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromPlanResponsePtrOutput {
	return o
}

func (o CustomImagePropertiesFromPlanResponsePtrOutput) Elem() CustomImagePropertiesFromPlanResponseOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromPlanResponse) CustomImagePropertiesFromPlanResponse { return *v }).(CustomImagePropertiesFromPlanResponseOutput)
}

// The id of the plan, equivalent to name of the plan
func (o CustomImagePropertiesFromPlanResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromPlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The offer for the plan from the marketplace image the custom image is derived from
func (o CustomImagePropertiesFromPlanResponsePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromPlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Offer
	}).(pulumi.StringPtrOutput)
}

// The publisher for the plan from the marketplace image the custom image is derived from
func (o CustomImagePropertiesFromPlanResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromPlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Properties for creating a custom image from a virtual machine.
type CustomImagePropertiesFromVm struct {
	// The Linux OS information of the VM.
	LinuxOsInfo *LinuxOsInfo `pulumi:"linuxOsInfo"`
	// The source vm identifier.
	SourceVmId *string `pulumi:"sourceVmId"`
	// The Windows OS information of the VM.
	WindowsOsInfo *WindowsOsInfo `pulumi:"windowsOsInfo"`
}

// CustomImagePropertiesFromVmInput is an input type that accepts CustomImagePropertiesFromVmArgs and CustomImagePropertiesFromVmOutput values.
// You can construct a concrete instance of `CustomImagePropertiesFromVmInput` via:
//
//          CustomImagePropertiesFromVmArgs{...}
type CustomImagePropertiesFromVmInput interface {
	pulumi.Input

	ToCustomImagePropertiesFromVmOutput() CustomImagePropertiesFromVmOutput
	ToCustomImagePropertiesFromVmOutputWithContext(context.Context) CustomImagePropertiesFromVmOutput
}

// Properties for creating a custom image from a virtual machine.
type CustomImagePropertiesFromVmArgs struct {
	// The Linux OS information of the VM.
	LinuxOsInfo LinuxOsInfoPtrInput `pulumi:"linuxOsInfo"`
	// The source vm identifier.
	SourceVmId pulumi.StringPtrInput `pulumi:"sourceVmId"`
	// The Windows OS information of the VM.
	WindowsOsInfo WindowsOsInfoPtrInput `pulumi:"windowsOsInfo"`
}

func (CustomImagePropertiesFromVmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesFromVm)(nil)).Elem()
}

func (i CustomImagePropertiesFromVmArgs) ToCustomImagePropertiesFromVmOutput() CustomImagePropertiesFromVmOutput {
	return i.ToCustomImagePropertiesFromVmOutputWithContext(context.Background())
}

func (i CustomImagePropertiesFromVmArgs) ToCustomImagePropertiesFromVmOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromVmOutput)
}

func (i CustomImagePropertiesFromVmArgs) ToCustomImagePropertiesFromVmPtrOutput() CustomImagePropertiesFromVmPtrOutput {
	return i.ToCustomImagePropertiesFromVmPtrOutputWithContext(context.Background())
}

func (i CustomImagePropertiesFromVmArgs) ToCustomImagePropertiesFromVmPtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromVmOutput).ToCustomImagePropertiesFromVmPtrOutputWithContext(ctx)
}

// CustomImagePropertiesFromVmPtrInput is an input type that accepts CustomImagePropertiesFromVmArgs, CustomImagePropertiesFromVmPtr and CustomImagePropertiesFromVmPtrOutput values.
// You can construct a concrete instance of `CustomImagePropertiesFromVmPtrInput` via:
//
//          CustomImagePropertiesFromVmArgs{...}
//
//  or:
//
//          nil
type CustomImagePropertiesFromVmPtrInput interface {
	pulumi.Input

	ToCustomImagePropertiesFromVmPtrOutput() CustomImagePropertiesFromVmPtrOutput
	ToCustomImagePropertiesFromVmPtrOutputWithContext(context.Context) CustomImagePropertiesFromVmPtrOutput
}

type customImagePropertiesFromVmPtrType CustomImagePropertiesFromVmArgs

func CustomImagePropertiesFromVmPtr(v *CustomImagePropertiesFromVmArgs) CustomImagePropertiesFromVmPtrInput {
	return (*customImagePropertiesFromVmPtrType)(v)
}

func (*customImagePropertiesFromVmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesFromVm)(nil)).Elem()
}

func (i *customImagePropertiesFromVmPtrType) ToCustomImagePropertiesFromVmPtrOutput() CustomImagePropertiesFromVmPtrOutput {
	return i.ToCustomImagePropertiesFromVmPtrOutputWithContext(context.Background())
}

func (i *customImagePropertiesFromVmPtrType) ToCustomImagePropertiesFromVmPtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromVmPtrOutput)
}

// Properties for creating a custom image from a virtual machine.
type CustomImagePropertiesFromVmOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesFromVmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesFromVm)(nil)).Elem()
}

func (o CustomImagePropertiesFromVmOutput) ToCustomImagePropertiesFromVmOutput() CustomImagePropertiesFromVmOutput {
	return o
}

func (o CustomImagePropertiesFromVmOutput) ToCustomImagePropertiesFromVmOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmOutput {
	return o
}

func (o CustomImagePropertiesFromVmOutput) ToCustomImagePropertiesFromVmPtrOutput() CustomImagePropertiesFromVmPtrOutput {
	return o.ToCustomImagePropertiesFromVmPtrOutputWithContext(context.Background())
}

func (o CustomImagePropertiesFromVmOutput) ToCustomImagePropertiesFromVmPtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVm) *CustomImagePropertiesFromVm {
		return &v
	}).(CustomImagePropertiesFromVmPtrOutput)
}

// The Linux OS information of the VM.
func (o CustomImagePropertiesFromVmOutput) LinuxOsInfo() LinuxOsInfoPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVm) *LinuxOsInfo { return v.LinuxOsInfo }).(LinuxOsInfoPtrOutput)
}

// The source vm identifier.
func (o CustomImagePropertiesFromVmOutput) SourceVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVm) *string { return v.SourceVmId }).(pulumi.StringPtrOutput)
}

// The Windows OS information of the VM.
func (o CustomImagePropertiesFromVmOutput) WindowsOsInfo() WindowsOsInfoPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVm) *WindowsOsInfo { return v.WindowsOsInfo }).(WindowsOsInfoPtrOutput)
}

type CustomImagePropertiesFromVmPtrOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesFromVmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesFromVm)(nil)).Elem()
}

func (o CustomImagePropertiesFromVmPtrOutput) ToCustomImagePropertiesFromVmPtrOutput() CustomImagePropertiesFromVmPtrOutput {
	return o
}

func (o CustomImagePropertiesFromVmPtrOutput) ToCustomImagePropertiesFromVmPtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmPtrOutput {
	return o
}

func (o CustomImagePropertiesFromVmPtrOutput) Elem() CustomImagePropertiesFromVmOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVm) CustomImagePropertiesFromVm { return *v }).(CustomImagePropertiesFromVmOutput)
}

// The Linux OS information of the VM.
func (o CustomImagePropertiesFromVmPtrOutput) LinuxOsInfo() LinuxOsInfoPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVm) *LinuxOsInfo {
		if v == nil {
			return nil
		}
		return v.LinuxOsInfo
	}).(LinuxOsInfoPtrOutput)
}

// The source vm identifier.
func (o CustomImagePropertiesFromVmPtrOutput) SourceVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVm) *string {
		if v == nil {
			return nil
		}
		return v.SourceVmId
	}).(pulumi.StringPtrOutput)
}

// The Windows OS information of the VM.
func (o CustomImagePropertiesFromVmPtrOutput) WindowsOsInfo() WindowsOsInfoPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVm) *WindowsOsInfo {
		if v == nil {
			return nil
		}
		return v.WindowsOsInfo
	}).(WindowsOsInfoPtrOutput)
}

// Properties for creating a custom image from a virtual machine.
type CustomImagePropertiesFromVmInvokeResponse struct {
	// The Linux OS information of the VM.
	LinuxOsInfo *LinuxOsInfoInvokeResponse `pulumi:"linuxOsInfo"`
	// The source vm identifier.
	SourceVmId *string `pulumi:"sourceVmId"`
	// The Windows OS information of the VM.
	WindowsOsInfo *WindowsOsInfoInvokeResponse `pulumi:"windowsOsInfo"`
}

// CustomImagePropertiesFromVmInvokeResponseInput is an input type that accepts CustomImagePropertiesFromVmInvokeResponseArgs and CustomImagePropertiesFromVmInvokeResponseOutput values.
// You can construct a concrete instance of `CustomImagePropertiesFromVmInvokeResponseInput` via:
//
//          CustomImagePropertiesFromVmInvokeResponseArgs{...}
type CustomImagePropertiesFromVmInvokeResponseInput interface {
	pulumi.Input

	ToCustomImagePropertiesFromVmInvokeResponseOutput() CustomImagePropertiesFromVmInvokeResponseOutput
	ToCustomImagePropertiesFromVmInvokeResponseOutputWithContext(context.Context) CustomImagePropertiesFromVmInvokeResponseOutput
}

// Properties for creating a custom image from a virtual machine.
type CustomImagePropertiesFromVmInvokeResponseArgs struct {
	// The Linux OS information of the VM.
	LinuxOsInfo LinuxOsInfoInvokeResponsePtrInput `pulumi:"linuxOsInfo"`
	// The source vm identifier.
	SourceVmId pulumi.StringPtrInput `pulumi:"sourceVmId"`
	// The Windows OS information of the VM.
	WindowsOsInfo WindowsOsInfoInvokeResponsePtrInput `pulumi:"windowsOsInfo"`
}

func (CustomImagePropertiesFromVmInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesFromVmInvokeResponse)(nil)).Elem()
}

func (i CustomImagePropertiesFromVmInvokeResponseArgs) ToCustomImagePropertiesFromVmInvokeResponseOutput() CustomImagePropertiesFromVmInvokeResponseOutput {
	return i.ToCustomImagePropertiesFromVmInvokeResponseOutputWithContext(context.Background())
}

func (i CustomImagePropertiesFromVmInvokeResponseArgs) ToCustomImagePropertiesFromVmInvokeResponseOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromVmInvokeResponseOutput)
}

// Properties for creating a custom image from a virtual machine.
type CustomImagePropertiesFromVmInvokeResponseOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesFromVmInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesFromVmInvokeResponse)(nil)).Elem()
}

func (o CustomImagePropertiesFromVmInvokeResponseOutput) ToCustomImagePropertiesFromVmInvokeResponseOutput() CustomImagePropertiesFromVmInvokeResponseOutput {
	return o
}

func (o CustomImagePropertiesFromVmInvokeResponseOutput) ToCustomImagePropertiesFromVmInvokeResponseOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmInvokeResponseOutput {
	return o
}

// The Linux OS information of the VM.
func (o CustomImagePropertiesFromVmInvokeResponseOutput) LinuxOsInfo() LinuxOsInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVmInvokeResponse) *LinuxOsInfoInvokeResponse { return v.LinuxOsInfo }).(LinuxOsInfoInvokeResponsePtrOutput)
}

// The source vm identifier.
func (o CustomImagePropertiesFromVmInvokeResponseOutput) SourceVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVmInvokeResponse) *string { return v.SourceVmId }).(pulumi.StringPtrOutput)
}

// The Windows OS information of the VM.
func (o CustomImagePropertiesFromVmInvokeResponseOutput) WindowsOsInfo() WindowsOsInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVmInvokeResponse) *WindowsOsInfoInvokeResponse { return v.WindowsOsInfo }).(WindowsOsInfoInvokeResponsePtrOutput)
}

// Properties for creating a custom image from a virtual machine.
type CustomImagePropertiesFromVmResponse struct {
	// The Linux OS information of the VM.
	LinuxOsInfo *LinuxOsInfoResponse `pulumi:"linuxOsInfo"`
	// The source vm identifier.
	SourceVmId *string `pulumi:"sourceVmId"`
	// The Windows OS information of the VM.
	WindowsOsInfo *WindowsOsInfoResponse `pulumi:"windowsOsInfo"`
}

// CustomImagePropertiesFromVmResponseInput is an input type that accepts CustomImagePropertiesFromVmResponseArgs and CustomImagePropertiesFromVmResponseOutput values.
// You can construct a concrete instance of `CustomImagePropertiesFromVmResponseInput` via:
//
//          CustomImagePropertiesFromVmResponseArgs{...}
type CustomImagePropertiesFromVmResponseInput interface {
	pulumi.Input

	ToCustomImagePropertiesFromVmResponseOutput() CustomImagePropertiesFromVmResponseOutput
	ToCustomImagePropertiesFromVmResponseOutputWithContext(context.Context) CustomImagePropertiesFromVmResponseOutput
}

// Properties for creating a custom image from a virtual machine.
type CustomImagePropertiesFromVmResponseArgs struct {
	// The Linux OS information of the VM.
	LinuxOsInfo LinuxOsInfoResponsePtrInput `pulumi:"linuxOsInfo"`
	// The source vm identifier.
	SourceVmId pulumi.StringPtrInput `pulumi:"sourceVmId"`
	// The Windows OS information of the VM.
	WindowsOsInfo WindowsOsInfoResponsePtrInput `pulumi:"windowsOsInfo"`
}

func (CustomImagePropertiesFromVmResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesFromVmResponse)(nil)).Elem()
}

func (i CustomImagePropertiesFromVmResponseArgs) ToCustomImagePropertiesFromVmResponseOutput() CustomImagePropertiesFromVmResponseOutput {
	return i.ToCustomImagePropertiesFromVmResponseOutputWithContext(context.Background())
}

func (i CustomImagePropertiesFromVmResponseArgs) ToCustomImagePropertiesFromVmResponseOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromVmResponseOutput)
}

func (i CustomImagePropertiesFromVmResponseArgs) ToCustomImagePropertiesFromVmResponsePtrOutput() CustomImagePropertiesFromVmResponsePtrOutput {
	return i.ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(context.Background())
}

func (i CustomImagePropertiesFromVmResponseArgs) ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromVmResponseOutput).ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(ctx)
}

// CustomImagePropertiesFromVmResponsePtrInput is an input type that accepts CustomImagePropertiesFromVmResponseArgs, CustomImagePropertiesFromVmResponsePtr and CustomImagePropertiesFromVmResponsePtrOutput values.
// You can construct a concrete instance of `CustomImagePropertiesFromVmResponsePtrInput` via:
//
//          CustomImagePropertiesFromVmResponseArgs{...}
//
//  or:
//
//          nil
type CustomImagePropertiesFromVmResponsePtrInput interface {
	pulumi.Input

	ToCustomImagePropertiesFromVmResponsePtrOutput() CustomImagePropertiesFromVmResponsePtrOutput
	ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(context.Context) CustomImagePropertiesFromVmResponsePtrOutput
}

type customImagePropertiesFromVmResponsePtrType CustomImagePropertiesFromVmResponseArgs

func CustomImagePropertiesFromVmResponsePtr(v *CustomImagePropertiesFromVmResponseArgs) CustomImagePropertiesFromVmResponsePtrInput {
	return (*customImagePropertiesFromVmResponsePtrType)(v)
}

func (*customImagePropertiesFromVmResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesFromVmResponse)(nil)).Elem()
}

func (i *customImagePropertiesFromVmResponsePtrType) ToCustomImagePropertiesFromVmResponsePtrOutput() CustomImagePropertiesFromVmResponsePtrOutput {
	return i.ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(context.Background())
}

func (i *customImagePropertiesFromVmResponsePtrType) ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromVmResponsePtrOutput)
}

// Properties for creating a custom image from a virtual machine.
type CustomImagePropertiesFromVmResponseOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesFromVmResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesFromVmResponse)(nil)).Elem()
}

func (o CustomImagePropertiesFromVmResponseOutput) ToCustomImagePropertiesFromVmResponseOutput() CustomImagePropertiesFromVmResponseOutput {
	return o
}

func (o CustomImagePropertiesFromVmResponseOutput) ToCustomImagePropertiesFromVmResponseOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmResponseOutput {
	return o
}

func (o CustomImagePropertiesFromVmResponseOutput) ToCustomImagePropertiesFromVmResponsePtrOutput() CustomImagePropertiesFromVmResponsePtrOutput {
	return o.ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(context.Background())
}

func (o CustomImagePropertiesFromVmResponseOutput) ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmResponsePtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVmResponse) *CustomImagePropertiesFromVmResponse {
		return &v
	}).(CustomImagePropertiesFromVmResponsePtrOutput)
}

// The Linux OS information of the VM.
func (o CustomImagePropertiesFromVmResponseOutput) LinuxOsInfo() LinuxOsInfoResponsePtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVmResponse) *LinuxOsInfoResponse { return v.LinuxOsInfo }).(LinuxOsInfoResponsePtrOutput)
}

// The source vm identifier.
func (o CustomImagePropertiesFromVmResponseOutput) SourceVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVmResponse) *string { return v.SourceVmId }).(pulumi.StringPtrOutput)
}

// The Windows OS information of the VM.
func (o CustomImagePropertiesFromVmResponseOutput) WindowsOsInfo() WindowsOsInfoResponsePtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVmResponse) *WindowsOsInfoResponse { return v.WindowsOsInfo }).(WindowsOsInfoResponsePtrOutput)
}

type CustomImagePropertiesFromVmResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesFromVmResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesFromVmResponse)(nil)).Elem()
}

func (o CustomImagePropertiesFromVmResponsePtrOutput) ToCustomImagePropertiesFromVmResponsePtrOutput() CustomImagePropertiesFromVmResponsePtrOutput {
	return o
}

func (o CustomImagePropertiesFromVmResponsePtrOutput) ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmResponsePtrOutput {
	return o
}

func (o CustomImagePropertiesFromVmResponsePtrOutput) Elem() CustomImagePropertiesFromVmResponseOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVmResponse) CustomImagePropertiesFromVmResponse { return *v }).(CustomImagePropertiesFromVmResponseOutput)
}

// The Linux OS information of the VM.
func (o CustomImagePropertiesFromVmResponsePtrOutput) LinuxOsInfo() LinuxOsInfoResponsePtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVmResponse) *LinuxOsInfoResponse {
		if v == nil {
			return nil
		}
		return v.LinuxOsInfo
	}).(LinuxOsInfoResponsePtrOutput)
}

// The source vm identifier.
func (o CustomImagePropertiesFromVmResponsePtrOutput) SourceVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVmResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceVmId
	}).(pulumi.StringPtrOutput)
}

// The Windows OS information of the VM.
func (o CustomImagePropertiesFromVmResponsePtrOutput) WindowsOsInfo() WindowsOsInfoResponsePtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVmResponse) *WindowsOsInfoResponse {
		if v == nil {
			return nil
		}
		return v.WindowsOsInfo
	}).(WindowsOsInfoResponsePtrOutput)
}

// Request body for adding a new or existing data disk to a virtual machine.
type DataDiskProperties struct {
	// Specifies options to attach a new disk to the virtual machine.
	AttachNewDataDiskOptions *AttachNewDataDiskOptions `pulumi:"attachNewDataDiskOptions"`
	// Specifies the existing lab disk id to attach to virtual machine.
	ExistingLabDiskId *string `pulumi:"existingLabDiskId"`
	// Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
	HostCaching *string `pulumi:"hostCaching"`
}

// DataDiskPropertiesInput is an input type that accepts DataDiskPropertiesArgs and DataDiskPropertiesOutput values.
// You can construct a concrete instance of `DataDiskPropertiesInput` via:
//
//          DataDiskPropertiesArgs{...}
type DataDiskPropertiesInput interface {
	pulumi.Input

	ToDataDiskPropertiesOutput() DataDiskPropertiesOutput
	ToDataDiskPropertiesOutputWithContext(context.Context) DataDiskPropertiesOutput
}

// Request body for adding a new or existing data disk to a virtual machine.
type DataDiskPropertiesArgs struct {
	// Specifies options to attach a new disk to the virtual machine.
	AttachNewDataDiskOptions AttachNewDataDiskOptionsPtrInput `pulumi:"attachNewDataDiskOptions"`
	// Specifies the existing lab disk id to attach to virtual machine.
	ExistingLabDiskId pulumi.StringPtrInput `pulumi:"existingLabDiskId"`
	// Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
	HostCaching pulumi.StringPtrInput `pulumi:"hostCaching"`
}

func (DataDiskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskProperties)(nil)).Elem()
}

func (i DataDiskPropertiesArgs) ToDataDiskPropertiesOutput() DataDiskPropertiesOutput {
	return i.ToDataDiskPropertiesOutputWithContext(context.Background())
}

func (i DataDiskPropertiesArgs) ToDataDiskPropertiesOutputWithContext(ctx context.Context) DataDiskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskPropertiesOutput)
}

// DataDiskPropertiesArrayInput is an input type that accepts DataDiskPropertiesArray and DataDiskPropertiesArrayOutput values.
// You can construct a concrete instance of `DataDiskPropertiesArrayInput` via:
//
//          DataDiskPropertiesArray{ DataDiskPropertiesArgs{...} }
type DataDiskPropertiesArrayInput interface {
	pulumi.Input

	ToDataDiskPropertiesArrayOutput() DataDiskPropertiesArrayOutput
	ToDataDiskPropertiesArrayOutputWithContext(context.Context) DataDiskPropertiesArrayOutput
}

type DataDiskPropertiesArray []DataDiskPropertiesInput

func (DataDiskPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskProperties)(nil)).Elem()
}

func (i DataDiskPropertiesArray) ToDataDiskPropertiesArrayOutput() DataDiskPropertiesArrayOutput {
	return i.ToDataDiskPropertiesArrayOutputWithContext(context.Background())
}

func (i DataDiskPropertiesArray) ToDataDiskPropertiesArrayOutputWithContext(ctx context.Context) DataDiskPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskPropertiesArrayOutput)
}

// Request body for adding a new or existing data disk to a virtual machine.
type DataDiskPropertiesOutput struct{ *pulumi.OutputState }

func (DataDiskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskProperties)(nil)).Elem()
}

func (o DataDiskPropertiesOutput) ToDataDiskPropertiesOutput() DataDiskPropertiesOutput {
	return o
}

func (o DataDiskPropertiesOutput) ToDataDiskPropertiesOutputWithContext(ctx context.Context) DataDiskPropertiesOutput {
	return o
}

// Specifies options to attach a new disk to the virtual machine.
func (o DataDiskPropertiesOutput) AttachNewDataDiskOptions() AttachNewDataDiskOptionsPtrOutput {
	return o.ApplyT(func(v DataDiskProperties) *AttachNewDataDiskOptions { return v.AttachNewDataDiskOptions }).(AttachNewDataDiskOptionsPtrOutput)
}

// Specifies the existing lab disk id to attach to virtual machine.
func (o DataDiskPropertiesOutput) ExistingLabDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskProperties) *string { return v.ExistingLabDiskId }).(pulumi.StringPtrOutput)
}

// Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
func (o DataDiskPropertiesOutput) HostCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskProperties) *string { return v.HostCaching }).(pulumi.StringPtrOutput)
}

type DataDiskPropertiesArrayOutput struct{ *pulumi.OutputState }

func (DataDiskPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskProperties)(nil)).Elem()
}

func (o DataDiskPropertiesArrayOutput) ToDataDiskPropertiesArrayOutput() DataDiskPropertiesArrayOutput {
	return o
}

func (o DataDiskPropertiesArrayOutput) ToDataDiskPropertiesArrayOutputWithContext(ctx context.Context) DataDiskPropertiesArrayOutput {
	return o
}

func (o DataDiskPropertiesArrayOutput) Index(i pulumi.IntInput) DataDiskPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDiskProperties {
		return vs[0].([]DataDiskProperties)[vs[1].(int)]
	}).(DataDiskPropertiesOutput)
}

// Request body for adding a new or existing data disk to a virtual machine.
type DataDiskPropertiesInvokeResponse struct {
	// Specifies options to attach a new disk to the virtual machine.
	AttachNewDataDiskOptions *AttachNewDataDiskOptionsInvokeResponse `pulumi:"attachNewDataDiskOptions"`
	// Specifies the existing lab disk id to attach to virtual machine.
	ExistingLabDiskId *string `pulumi:"existingLabDiskId"`
	// Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
	HostCaching *string `pulumi:"hostCaching"`
}

// DataDiskPropertiesInvokeResponseInput is an input type that accepts DataDiskPropertiesInvokeResponseArgs and DataDiskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `DataDiskPropertiesInvokeResponseInput` via:
//
//          DataDiskPropertiesInvokeResponseArgs{...}
type DataDiskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToDataDiskPropertiesInvokeResponseOutput() DataDiskPropertiesInvokeResponseOutput
	ToDataDiskPropertiesInvokeResponseOutputWithContext(context.Context) DataDiskPropertiesInvokeResponseOutput
}

// Request body for adding a new or existing data disk to a virtual machine.
type DataDiskPropertiesInvokeResponseArgs struct {
	// Specifies options to attach a new disk to the virtual machine.
	AttachNewDataDiskOptions AttachNewDataDiskOptionsInvokeResponsePtrInput `pulumi:"attachNewDataDiskOptions"`
	// Specifies the existing lab disk id to attach to virtual machine.
	ExistingLabDiskId pulumi.StringPtrInput `pulumi:"existingLabDiskId"`
	// Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
	HostCaching pulumi.StringPtrInput `pulumi:"hostCaching"`
}

func (DataDiskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskPropertiesInvokeResponse)(nil)).Elem()
}

func (i DataDiskPropertiesInvokeResponseArgs) ToDataDiskPropertiesInvokeResponseOutput() DataDiskPropertiesInvokeResponseOutput {
	return i.ToDataDiskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i DataDiskPropertiesInvokeResponseArgs) ToDataDiskPropertiesInvokeResponseOutputWithContext(ctx context.Context) DataDiskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskPropertiesInvokeResponseOutput)
}

// DataDiskPropertiesInvokeResponseArrayInput is an input type that accepts DataDiskPropertiesInvokeResponseArray and DataDiskPropertiesInvokeResponseArrayOutput values.
// You can construct a concrete instance of `DataDiskPropertiesInvokeResponseArrayInput` via:
//
//          DataDiskPropertiesInvokeResponseArray{ DataDiskPropertiesInvokeResponseArgs{...} }
type DataDiskPropertiesInvokeResponseArrayInput interface {
	pulumi.Input

	ToDataDiskPropertiesInvokeResponseArrayOutput() DataDiskPropertiesInvokeResponseArrayOutput
	ToDataDiskPropertiesInvokeResponseArrayOutputWithContext(context.Context) DataDiskPropertiesInvokeResponseArrayOutput
}

type DataDiskPropertiesInvokeResponseArray []DataDiskPropertiesInvokeResponseInput

func (DataDiskPropertiesInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskPropertiesInvokeResponse)(nil)).Elem()
}

func (i DataDiskPropertiesInvokeResponseArray) ToDataDiskPropertiesInvokeResponseArrayOutput() DataDiskPropertiesInvokeResponseArrayOutput {
	return i.ToDataDiskPropertiesInvokeResponseArrayOutputWithContext(context.Background())
}

func (i DataDiskPropertiesInvokeResponseArray) ToDataDiskPropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) DataDiskPropertiesInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskPropertiesInvokeResponseArrayOutput)
}

// Request body for adding a new or existing data disk to a virtual machine.
type DataDiskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (DataDiskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskPropertiesInvokeResponse)(nil)).Elem()
}

func (o DataDiskPropertiesInvokeResponseOutput) ToDataDiskPropertiesInvokeResponseOutput() DataDiskPropertiesInvokeResponseOutput {
	return o
}

func (o DataDiskPropertiesInvokeResponseOutput) ToDataDiskPropertiesInvokeResponseOutputWithContext(ctx context.Context) DataDiskPropertiesInvokeResponseOutput {
	return o
}

// Specifies options to attach a new disk to the virtual machine.
func (o DataDiskPropertiesInvokeResponseOutput) AttachNewDataDiskOptions() AttachNewDataDiskOptionsInvokeResponsePtrOutput {
	return o.ApplyT(func(v DataDiskPropertiesInvokeResponse) *AttachNewDataDiskOptionsInvokeResponse {
		return v.AttachNewDataDiskOptions
	}).(AttachNewDataDiskOptionsInvokeResponsePtrOutput)
}

// Specifies the existing lab disk id to attach to virtual machine.
func (o DataDiskPropertiesInvokeResponseOutput) ExistingLabDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskPropertiesInvokeResponse) *string { return v.ExistingLabDiskId }).(pulumi.StringPtrOutput)
}

// Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
func (o DataDiskPropertiesInvokeResponseOutput) HostCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskPropertiesInvokeResponse) *string { return v.HostCaching }).(pulumi.StringPtrOutput)
}

type DataDiskPropertiesInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (DataDiskPropertiesInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskPropertiesInvokeResponse)(nil)).Elem()
}

func (o DataDiskPropertiesInvokeResponseArrayOutput) ToDataDiskPropertiesInvokeResponseArrayOutput() DataDiskPropertiesInvokeResponseArrayOutput {
	return o
}

func (o DataDiskPropertiesInvokeResponseArrayOutput) ToDataDiskPropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) DataDiskPropertiesInvokeResponseArrayOutput {
	return o
}

func (o DataDiskPropertiesInvokeResponseArrayOutput) Index(i pulumi.IntInput) DataDiskPropertiesInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDiskPropertiesInvokeResponse {
		return vs[0].([]DataDiskPropertiesInvokeResponse)[vs[1].(int)]
	}).(DataDiskPropertiesInvokeResponseOutput)
}

// Request body for adding a new or existing data disk to a virtual machine.
type DataDiskPropertiesResponse struct {
	// Specifies options to attach a new disk to the virtual machine.
	AttachNewDataDiskOptions *AttachNewDataDiskOptionsResponse `pulumi:"attachNewDataDiskOptions"`
	// Specifies the existing lab disk id to attach to virtual machine.
	ExistingLabDiskId *string `pulumi:"existingLabDiskId"`
	// Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
	HostCaching *string `pulumi:"hostCaching"`
}

// DataDiskPropertiesResponseInput is an input type that accepts DataDiskPropertiesResponseArgs and DataDiskPropertiesResponseOutput values.
// You can construct a concrete instance of `DataDiskPropertiesResponseInput` via:
//
//          DataDiskPropertiesResponseArgs{...}
type DataDiskPropertiesResponseInput interface {
	pulumi.Input

	ToDataDiskPropertiesResponseOutput() DataDiskPropertiesResponseOutput
	ToDataDiskPropertiesResponseOutputWithContext(context.Context) DataDiskPropertiesResponseOutput
}

// Request body for adding a new or existing data disk to a virtual machine.
type DataDiskPropertiesResponseArgs struct {
	// Specifies options to attach a new disk to the virtual machine.
	AttachNewDataDiskOptions AttachNewDataDiskOptionsResponsePtrInput `pulumi:"attachNewDataDiskOptions"`
	// Specifies the existing lab disk id to attach to virtual machine.
	ExistingLabDiskId pulumi.StringPtrInput `pulumi:"existingLabDiskId"`
	// Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
	HostCaching pulumi.StringPtrInput `pulumi:"hostCaching"`
}

func (DataDiskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskPropertiesResponse)(nil)).Elem()
}

func (i DataDiskPropertiesResponseArgs) ToDataDiskPropertiesResponseOutput() DataDiskPropertiesResponseOutput {
	return i.ToDataDiskPropertiesResponseOutputWithContext(context.Background())
}

func (i DataDiskPropertiesResponseArgs) ToDataDiskPropertiesResponseOutputWithContext(ctx context.Context) DataDiskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskPropertiesResponseOutput)
}

// DataDiskPropertiesResponseArrayInput is an input type that accepts DataDiskPropertiesResponseArray and DataDiskPropertiesResponseArrayOutput values.
// You can construct a concrete instance of `DataDiskPropertiesResponseArrayInput` via:
//
//          DataDiskPropertiesResponseArray{ DataDiskPropertiesResponseArgs{...} }
type DataDiskPropertiesResponseArrayInput interface {
	pulumi.Input

	ToDataDiskPropertiesResponseArrayOutput() DataDiskPropertiesResponseArrayOutput
	ToDataDiskPropertiesResponseArrayOutputWithContext(context.Context) DataDiskPropertiesResponseArrayOutput
}

type DataDiskPropertiesResponseArray []DataDiskPropertiesResponseInput

func (DataDiskPropertiesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskPropertiesResponse)(nil)).Elem()
}

func (i DataDiskPropertiesResponseArray) ToDataDiskPropertiesResponseArrayOutput() DataDiskPropertiesResponseArrayOutput {
	return i.ToDataDiskPropertiesResponseArrayOutputWithContext(context.Background())
}

func (i DataDiskPropertiesResponseArray) ToDataDiskPropertiesResponseArrayOutputWithContext(ctx context.Context) DataDiskPropertiesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskPropertiesResponseArrayOutput)
}

// Request body for adding a new or existing data disk to a virtual machine.
type DataDiskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DataDiskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskPropertiesResponse)(nil)).Elem()
}

func (o DataDiskPropertiesResponseOutput) ToDataDiskPropertiesResponseOutput() DataDiskPropertiesResponseOutput {
	return o
}

func (o DataDiskPropertiesResponseOutput) ToDataDiskPropertiesResponseOutputWithContext(ctx context.Context) DataDiskPropertiesResponseOutput {
	return o
}

// Specifies options to attach a new disk to the virtual machine.
func (o DataDiskPropertiesResponseOutput) AttachNewDataDiskOptions() AttachNewDataDiskOptionsResponsePtrOutput {
	return o.ApplyT(func(v DataDiskPropertiesResponse) *AttachNewDataDiskOptionsResponse {
		return v.AttachNewDataDiskOptions
	}).(AttachNewDataDiskOptionsResponsePtrOutput)
}

// Specifies the existing lab disk id to attach to virtual machine.
func (o DataDiskPropertiesResponseOutput) ExistingLabDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskPropertiesResponse) *string { return v.ExistingLabDiskId }).(pulumi.StringPtrOutput)
}

// Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
func (o DataDiskPropertiesResponseOutput) HostCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskPropertiesResponse) *string { return v.HostCaching }).(pulumi.StringPtrOutput)
}

type DataDiskPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (DataDiskPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskPropertiesResponse)(nil)).Elem()
}

func (o DataDiskPropertiesResponseArrayOutput) ToDataDiskPropertiesResponseArrayOutput() DataDiskPropertiesResponseArrayOutput {
	return o
}

func (o DataDiskPropertiesResponseArrayOutput) ToDataDiskPropertiesResponseArrayOutputWithContext(ctx context.Context) DataDiskPropertiesResponseArrayOutput {
	return o
}

func (o DataDiskPropertiesResponseArrayOutput) Index(i pulumi.IntInput) DataDiskPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDiskPropertiesResponse {
		return vs[0].([]DataDiskPropertiesResponse)[vs[1].(int)]
	}).(DataDiskPropertiesResponseOutput)
}

// Storage information about the data disks present in the custom image
type DataDiskStorageTypeInfo struct {
	// Disk Lun
	Lun *string `pulumi:"lun"`
	// Disk Storage Type
	StorageType *string `pulumi:"storageType"`
}

// DataDiskStorageTypeInfoInput is an input type that accepts DataDiskStorageTypeInfoArgs and DataDiskStorageTypeInfoOutput values.
// You can construct a concrete instance of `DataDiskStorageTypeInfoInput` via:
//
//          DataDiskStorageTypeInfoArgs{...}
type DataDiskStorageTypeInfoInput interface {
	pulumi.Input

	ToDataDiskStorageTypeInfoOutput() DataDiskStorageTypeInfoOutput
	ToDataDiskStorageTypeInfoOutputWithContext(context.Context) DataDiskStorageTypeInfoOutput
}

// Storage information about the data disks present in the custom image
type DataDiskStorageTypeInfoArgs struct {
	// Disk Lun
	Lun pulumi.StringPtrInput `pulumi:"lun"`
	// Disk Storage Type
	StorageType pulumi.StringPtrInput `pulumi:"storageType"`
}

func (DataDiskStorageTypeInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskStorageTypeInfo)(nil)).Elem()
}

func (i DataDiskStorageTypeInfoArgs) ToDataDiskStorageTypeInfoOutput() DataDiskStorageTypeInfoOutput {
	return i.ToDataDiskStorageTypeInfoOutputWithContext(context.Background())
}

func (i DataDiskStorageTypeInfoArgs) ToDataDiskStorageTypeInfoOutputWithContext(ctx context.Context) DataDiskStorageTypeInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskStorageTypeInfoOutput)
}

// DataDiskStorageTypeInfoArrayInput is an input type that accepts DataDiskStorageTypeInfoArray and DataDiskStorageTypeInfoArrayOutput values.
// You can construct a concrete instance of `DataDiskStorageTypeInfoArrayInput` via:
//
//          DataDiskStorageTypeInfoArray{ DataDiskStorageTypeInfoArgs{...} }
type DataDiskStorageTypeInfoArrayInput interface {
	pulumi.Input

	ToDataDiskStorageTypeInfoArrayOutput() DataDiskStorageTypeInfoArrayOutput
	ToDataDiskStorageTypeInfoArrayOutputWithContext(context.Context) DataDiskStorageTypeInfoArrayOutput
}

type DataDiskStorageTypeInfoArray []DataDiskStorageTypeInfoInput

func (DataDiskStorageTypeInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskStorageTypeInfo)(nil)).Elem()
}

func (i DataDiskStorageTypeInfoArray) ToDataDiskStorageTypeInfoArrayOutput() DataDiskStorageTypeInfoArrayOutput {
	return i.ToDataDiskStorageTypeInfoArrayOutputWithContext(context.Background())
}

func (i DataDiskStorageTypeInfoArray) ToDataDiskStorageTypeInfoArrayOutputWithContext(ctx context.Context) DataDiskStorageTypeInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskStorageTypeInfoArrayOutput)
}

// Storage information about the data disks present in the custom image
type DataDiskStorageTypeInfoOutput struct{ *pulumi.OutputState }

func (DataDiskStorageTypeInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskStorageTypeInfo)(nil)).Elem()
}

func (o DataDiskStorageTypeInfoOutput) ToDataDiskStorageTypeInfoOutput() DataDiskStorageTypeInfoOutput {
	return o
}

func (o DataDiskStorageTypeInfoOutput) ToDataDiskStorageTypeInfoOutputWithContext(ctx context.Context) DataDiskStorageTypeInfoOutput {
	return o
}

// Disk Lun
func (o DataDiskStorageTypeInfoOutput) Lun() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskStorageTypeInfo) *string { return v.Lun }).(pulumi.StringPtrOutput)
}

// Disk Storage Type
func (o DataDiskStorageTypeInfoOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskStorageTypeInfo) *string { return v.StorageType }).(pulumi.StringPtrOutput)
}

type DataDiskStorageTypeInfoArrayOutput struct{ *pulumi.OutputState }

func (DataDiskStorageTypeInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskStorageTypeInfo)(nil)).Elem()
}

func (o DataDiskStorageTypeInfoArrayOutput) ToDataDiskStorageTypeInfoArrayOutput() DataDiskStorageTypeInfoArrayOutput {
	return o
}

func (o DataDiskStorageTypeInfoArrayOutput) ToDataDiskStorageTypeInfoArrayOutputWithContext(ctx context.Context) DataDiskStorageTypeInfoArrayOutput {
	return o
}

func (o DataDiskStorageTypeInfoArrayOutput) Index(i pulumi.IntInput) DataDiskStorageTypeInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDiskStorageTypeInfo {
		return vs[0].([]DataDiskStorageTypeInfo)[vs[1].(int)]
	}).(DataDiskStorageTypeInfoOutput)
}

// Storage information about the data disks present in the custom image
type DataDiskStorageTypeInfoInvokeResponse struct {
	// Disk Lun
	Lun *string `pulumi:"lun"`
	// Disk Storage Type
	StorageType *string `pulumi:"storageType"`
}

// DataDiskStorageTypeInfoInvokeResponseInput is an input type that accepts DataDiskStorageTypeInfoInvokeResponseArgs and DataDiskStorageTypeInfoInvokeResponseOutput values.
// You can construct a concrete instance of `DataDiskStorageTypeInfoInvokeResponseInput` via:
//
//          DataDiskStorageTypeInfoInvokeResponseArgs{...}
type DataDiskStorageTypeInfoInvokeResponseInput interface {
	pulumi.Input

	ToDataDiskStorageTypeInfoInvokeResponseOutput() DataDiskStorageTypeInfoInvokeResponseOutput
	ToDataDiskStorageTypeInfoInvokeResponseOutputWithContext(context.Context) DataDiskStorageTypeInfoInvokeResponseOutput
}

// Storage information about the data disks present in the custom image
type DataDiskStorageTypeInfoInvokeResponseArgs struct {
	// Disk Lun
	Lun pulumi.StringPtrInput `pulumi:"lun"`
	// Disk Storage Type
	StorageType pulumi.StringPtrInput `pulumi:"storageType"`
}

func (DataDiskStorageTypeInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskStorageTypeInfoInvokeResponse)(nil)).Elem()
}

func (i DataDiskStorageTypeInfoInvokeResponseArgs) ToDataDiskStorageTypeInfoInvokeResponseOutput() DataDiskStorageTypeInfoInvokeResponseOutput {
	return i.ToDataDiskStorageTypeInfoInvokeResponseOutputWithContext(context.Background())
}

func (i DataDiskStorageTypeInfoInvokeResponseArgs) ToDataDiskStorageTypeInfoInvokeResponseOutputWithContext(ctx context.Context) DataDiskStorageTypeInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskStorageTypeInfoInvokeResponseOutput)
}

// DataDiskStorageTypeInfoInvokeResponseArrayInput is an input type that accepts DataDiskStorageTypeInfoInvokeResponseArray and DataDiskStorageTypeInfoInvokeResponseArrayOutput values.
// You can construct a concrete instance of `DataDiskStorageTypeInfoInvokeResponseArrayInput` via:
//
//          DataDiskStorageTypeInfoInvokeResponseArray{ DataDiskStorageTypeInfoInvokeResponseArgs{...} }
type DataDiskStorageTypeInfoInvokeResponseArrayInput interface {
	pulumi.Input

	ToDataDiskStorageTypeInfoInvokeResponseArrayOutput() DataDiskStorageTypeInfoInvokeResponseArrayOutput
	ToDataDiskStorageTypeInfoInvokeResponseArrayOutputWithContext(context.Context) DataDiskStorageTypeInfoInvokeResponseArrayOutput
}

type DataDiskStorageTypeInfoInvokeResponseArray []DataDiskStorageTypeInfoInvokeResponseInput

func (DataDiskStorageTypeInfoInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskStorageTypeInfoInvokeResponse)(nil)).Elem()
}

func (i DataDiskStorageTypeInfoInvokeResponseArray) ToDataDiskStorageTypeInfoInvokeResponseArrayOutput() DataDiskStorageTypeInfoInvokeResponseArrayOutput {
	return i.ToDataDiskStorageTypeInfoInvokeResponseArrayOutputWithContext(context.Background())
}

func (i DataDiskStorageTypeInfoInvokeResponseArray) ToDataDiskStorageTypeInfoInvokeResponseArrayOutputWithContext(ctx context.Context) DataDiskStorageTypeInfoInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskStorageTypeInfoInvokeResponseArrayOutput)
}

// Storage information about the data disks present in the custom image
type DataDiskStorageTypeInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (DataDiskStorageTypeInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskStorageTypeInfoInvokeResponse)(nil)).Elem()
}

func (o DataDiskStorageTypeInfoInvokeResponseOutput) ToDataDiskStorageTypeInfoInvokeResponseOutput() DataDiskStorageTypeInfoInvokeResponseOutput {
	return o
}

func (o DataDiskStorageTypeInfoInvokeResponseOutput) ToDataDiskStorageTypeInfoInvokeResponseOutputWithContext(ctx context.Context) DataDiskStorageTypeInfoInvokeResponseOutput {
	return o
}

// Disk Lun
func (o DataDiskStorageTypeInfoInvokeResponseOutput) Lun() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskStorageTypeInfoInvokeResponse) *string { return v.Lun }).(pulumi.StringPtrOutput)
}

// Disk Storage Type
func (o DataDiskStorageTypeInfoInvokeResponseOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskStorageTypeInfoInvokeResponse) *string { return v.StorageType }).(pulumi.StringPtrOutput)
}

type DataDiskStorageTypeInfoInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (DataDiskStorageTypeInfoInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskStorageTypeInfoInvokeResponse)(nil)).Elem()
}

func (o DataDiskStorageTypeInfoInvokeResponseArrayOutput) ToDataDiskStorageTypeInfoInvokeResponseArrayOutput() DataDiskStorageTypeInfoInvokeResponseArrayOutput {
	return o
}

func (o DataDiskStorageTypeInfoInvokeResponseArrayOutput) ToDataDiskStorageTypeInfoInvokeResponseArrayOutputWithContext(ctx context.Context) DataDiskStorageTypeInfoInvokeResponseArrayOutput {
	return o
}

func (o DataDiskStorageTypeInfoInvokeResponseArrayOutput) Index(i pulumi.IntInput) DataDiskStorageTypeInfoInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDiskStorageTypeInfoInvokeResponse {
		return vs[0].([]DataDiskStorageTypeInfoInvokeResponse)[vs[1].(int)]
	}).(DataDiskStorageTypeInfoInvokeResponseOutput)
}

// Storage information about the data disks present in the custom image
type DataDiskStorageTypeInfoResponse struct {
	// Disk Lun
	Lun *string `pulumi:"lun"`
	// Disk Storage Type
	StorageType *string `pulumi:"storageType"`
}

// DataDiskStorageTypeInfoResponseInput is an input type that accepts DataDiskStorageTypeInfoResponseArgs and DataDiskStorageTypeInfoResponseOutput values.
// You can construct a concrete instance of `DataDiskStorageTypeInfoResponseInput` via:
//
//          DataDiskStorageTypeInfoResponseArgs{...}
type DataDiskStorageTypeInfoResponseInput interface {
	pulumi.Input

	ToDataDiskStorageTypeInfoResponseOutput() DataDiskStorageTypeInfoResponseOutput
	ToDataDiskStorageTypeInfoResponseOutputWithContext(context.Context) DataDiskStorageTypeInfoResponseOutput
}

// Storage information about the data disks present in the custom image
type DataDiskStorageTypeInfoResponseArgs struct {
	// Disk Lun
	Lun pulumi.StringPtrInput `pulumi:"lun"`
	// Disk Storage Type
	StorageType pulumi.StringPtrInput `pulumi:"storageType"`
}

func (DataDiskStorageTypeInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskStorageTypeInfoResponse)(nil)).Elem()
}

func (i DataDiskStorageTypeInfoResponseArgs) ToDataDiskStorageTypeInfoResponseOutput() DataDiskStorageTypeInfoResponseOutput {
	return i.ToDataDiskStorageTypeInfoResponseOutputWithContext(context.Background())
}

func (i DataDiskStorageTypeInfoResponseArgs) ToDataDiskStorageTypeInfoResponseOutputWithContext(ctx context.Context) DataDiskStorageTypeInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskStorageTypeInfoResponseOutput)
}

// DataDiskStorageTypeInfoResponseArrayInput is an input type that accepts DataDiskStorageTypeInfoResponseArray and DataDiskStorageTypeInfoResponseArrayOutput values.
// You can construct a concrete instance of `DataDiskStorageTypeInfoResponseArrayInput` via:
//
//          DataDiskStorageTypeInfoResponseArray{ DataDiskStorageTypeInfoResponseArgs{...} }
type DataDiskStorageTypeInfoResponseArrayInput interface {
	pulumi.Input

	ToDataDiskStorageTypeInfoResponseArrayOutput() DataDiskStorageTypeInfoResponseArrayOutput
	ToDataDiskStorageTypeInfoResponseArrayOutputWithContext(context.Context) DataDiskStorageTypeInfoResponseArrayOutput
}

type DataDiskStorageTypeInfoResponseArray []DataDiskStorageTypeInfoResponseInput

func (DataDiskStorageTypeInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskStorageTypeInfoResponse)(nil)).Elem()
}

func (i DataDiskStorageTypeInfoResponseArray) ToDataDiskStorageTypeInfoResponseArrayOutput() DataDiskStorageTypeInfoResponseArrayOutput {
	return i.ToDataDiskStorageTypeInfoResponseArrayOutputWithContext(context.Background())
}

func (i DataDiskStorageTypeInfoResponseArray) ToDataDiskStorageTypeInfoResponseArrayOutputWithContext(ctx context.Context) DataDiskStorageTypeInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskStorageTypeInfoResponseArrayOutput)
}

// Storage information about the data disks present in the custom image
type DataDiskStorageTypeInfoResponseOutput struct{ *pulumi.OutputState }

func (DataDiskStorageTypeInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskStorageTypeInfoResponse)(nil)).Elem()
}

func (o DataDiskStorageTypeInfoResponseOutput) ToDataDiskStorageTypeInfoResponseOutput() DataDiskStorageTypeInfoResponseOutput {
	return o
}

func (o DataDiskStorageTypeInfoResponseOutput) ToDataDiskStorageTypeInfoResponseOutputWithContext(ctx context.Context) DataDiskStorageTypeInfoResponseOutput {
	return o
}

// Disk Lun
func (o DataDiskStorageTypeInfoResponseOutput) Lun() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskStorageTypeInfoResponse) *string { return v.Lun }).(pulumi.StringPtrOutput)
}

// Disk Storage Type
func (o DataDiskStorageTypeInfoResponseOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskStorageTypeInfoResponse) *string { return v.StorageType }).(pulumi.StringPtrOutput)
}

type DataDiskStorageTypeInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (DataDiskStorageTypeInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskStorageTypeInfoResponse)(nil)).Elem()
}

func (o DataDiskStorageTypeInfoResponseArrayOutput) ToDataDiskStorageTypeInfoResponseArrayOutput() DataDiskStorageTypeInfoResponseArrayOutput {
	return o
}

func (o DataDiskStorageTypeInfoResponseArrayOutput) ToDataDiskStorageTypeInfoResponseArrayOutputWithContext(ctx context.Context) DataDiskStorageTypeInfoResponseArrayOutput {
	return o
}

func (o DataDiskStorageTypeInfoResponseArrayOutput) Index(i pulumi.IntInput) DataDiskStorageTypeInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDiskStorageTypeInfoResponse {
		return vs[0].([]DataDiskStorageTypeInfoResponse)[vs[1].(int)]
	}).(DataDiskStorageTypeInfoResponseOutput)
}

// Properties of a daily schedule.
type DayDetails struct {
	// The time of day the schedule will occur.
	Time *string `pulumi:"time"`
}

// DayDetailsInput is an input type that accepts DayDetailsArgs and DayDetailsOutput values.
// You can construct a concrete instance of `DayDetailsInput` via:
//
//          DayDetailsArgs{...}
type DayDetailsInput interface {
	pulumi.Input

	ToDayDetailsOutput() DayDetailsOutput
	ToDayDetailsOutputWithContext(context.Context) DayDetailsOutput
}

// Properties of a daily schedule.
type DayDetailsArgs struct {
	// The time of day the schedule will occur.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (DayDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DayDetails)(nil)).Elem()
}

func (i DayDetailsArgs) ToDayDetailsOutput() DayDetailsOutput {
	return i.ToDayDetailsOutputWithContext(context.Background())
}

func (i DayDetailsArgs) ToDayDetailsOutputWithContext(ctx context.Context) DayDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayDetailsOutput)
}

func (i DayDetailsArgs) ToDayDetailsPtrOutput() DayDetailsPtrOutput {
	return i.ToDayDetailsPtrOutputWithContext(context.Background())
}

func (i DayDetailsArgs) ToDayDetailsPtrOutputWithContext(ctx context.Context) DayDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayDetailsOutput).ToDayDetailsPtrOutputWithContext(ctx)
}

// DayDetailsPtrInput is an input type that accepts DayDetailsArgs, DayDetailsPtr and DayDetailsPtrOutput values.
// You can construct a concrete instance of `DayDetailsPtrInput` via:
//
//          DayDetailsArgs{...}
//
//  or:
//
//          nil
type DayDetailsPtrInput interface {
	pulumi.Input

	ToDayDetailsPtrOutput() DayDetailsPtrOutput
	ToDayDetailsPtrOutputWithContext(context.Context) DayDetailsPtrOutput
}

type dayDetailsPtrType DayDetailsArgs

func DayDetailsPtr(v *DayDetailsArgs) DayDetailsPtrInput {
	return (*dayDetailsPtrType)(v)
}

func (*dayDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DayDetails)(nil)).Elem()
}

func (i *dayDetailsPtrType) ToDayDetailsPtrOutput() DayDetailsPtrOutput {
	return i.ToDayDetailsPtrOutputWithContext(context.Background())
}

func (i *dayDetailsPtrType) ToDayDetailsPtrOutputWithContext(ctx context.Context) DayDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayDetailsPtrOutput)
}

// Properties of a daily schedule.
type DayDetailsOutput struct{ *pulumi.OutputState }

func (DayDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DayDetails)(nil)).Elem()
}

func (o DayDetailsOutput) ToDayDetailsOutput() DayDetailsOutput {
	return o
}

func (o DayDetailsOutput) ToDayDetailsOutputWithContext(ctx context.Context) DayDetailsOutput {
	return o
}

func (o DayDetailsOutput) ToDayDetailsPtrOutput() DayDetailsPtrOutput {
	return o.ToDayDetailsPtrOutputWithContext(context.Background())
}

func (o DayDetailsOutput) ToDayDetailsPtrOutputWithContext(ctx context.Context) DayDetailsPtrOutput {
	return o.ApplyT(func(v DayDetails) *DayDetails {
		return &v
	}).(DayDetailsPtrOutput)
}

// The time of day the schedule will occur.
func (o DayDetailsOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DayDetails) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type DayDetailsPtrOutput struct{ *pulumi.OutputState }

func (DayDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DayDetails)(nil)).Elem()
}

func (o DayDetailsPtrOutput) ToDayDetailsPtrOutput() DayDetailsPtrOutput {
	return o
}

func (o DayDetailsPtrOutput) ToDayDetailsPtrOutputWithContext(ctx context.Context) DayDetailsPtrOutput {
	return o
}

func (o DayDetailsPtrOutput) Elem() DayDetailsOutput {
	return o.ApplyT(func(v *DayDetails) DayDetails { return *v }).(DayDetailsOutput)
}

// The time of day the schedule will occur.
func (o DayDetailsPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DayDetails) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// Properties of a daily schedule.
type DayDetailsInvokeResponse struct {
	// The time of day the schedule will occur.
	Time *string `pulumi:"time"`
}

// DayDetailsInvokeResponseInput is an input type that accepts DayDetailsInvokeResponseArgs and DayDetailsInvokeResponseOutput values.
// You can construct a concrete instance of `DayDetailsInvokeResponseInput` via:
//
//          DayDetailsInvokeResponseArgs{...}
type DayDetailsInvokeResponseInput interface {
	pulumi.Input

	ToDayDetailsInvokeResponseOutput() DayDetailsInvokeResponseOutput
	ToDayDetailsInvokeResponseOutputWithContext(context.Context) DayDetailsInvokeResponseOutput
}

// Properties of a daily schedule.
type DayDetailsInvokeResponseArgs struct {
	// The time of day the schedule will occur.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (DayDetailsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DayDetailsInvokeResponse)(nil)).Elem()
}

func (i DayDetailsInvokeResponseArgs) ToDayDetailsInvokeResponseOutput() DayDetailsInvokeResponseOutput {
	return i.ToDayDetailsInvokeResponseOutputWithContext(context.Background())
}

func (i DayDetailsInvokeResponseArgs) ToDayDetailsInvokeResponseOutputWithContext(ctx context.Context) DayDetailsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayDetailsInvokeResponseOutput)
}

func (i DayDetailsInvokeResponseArgs) ToDayDetailsInvokeResponsePtrOutput() DayDetailsInvokeResponsePtrOutput {
	return i.ToDayDetailsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i DayDetailsInvokeResponseArgs) ToDayDetailsInvokeResponsePtrOutputWithContext(ctx context.Context) DayDetailsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayDetailsInvokeResponseOutput).ToDayDetailsInvokeResponsePtrOutputWithContext(ctx)
}

// DayDetailsInvokeResponsePtrInput is an input type that accepts DayDetailsInvokeResponseArgs, DayDetailsInvokeResponsePtr and DayDetailsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `DayDetailsInvokeResponsePtrInput` via:
//
//          DayDetailsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type DayDetailsInvokeResponsePtrInput interface {
	pulumi.Input

	ToDayDetailsInvokeResponsePtrOutput() DayDetailsInvokeResponsePtrOutput
	ToDayDetailsInvokeResponsePtrOutputWithContext(context.Context) DayDetailsInvokeResponsePtrOutput
}

type dayDetailsInvokeResponsePtrType DayDetailsInvokeResponseArgs

func DayDetailsInvokeResponsePtr(v *DayDetailsInvokeResponseArgs) DayDetailsInvokeResponsePtrInput {
	return (*dayDetailsInvokeResponsePtrType)(v)
}

func (*dayDetailsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DayDetailsInvokeResponse)(nil)).Elem()
}

func (i *dayDetailsInvokeResponsePtrType) ToDayDetailsInvokeResponsePtrOutput() DayDetailsInvokeResponsePtrOutput {
	return i.ToDayDetailsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *dayDetailsInvokeResponsePtrType) ToDayDetailsInvokeResponsePtrOutputWithContext(ctx context.Context) DayDetailsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayDetailsInvokeResponsePtrOutput)
}

// Properties of a daily schedule.
type DayDetailsInvokeResponseOutput struct{ *pulumi.OutputState }

func (DayDetailsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DayDetailsInvokeResponse)(nil)).Elem()
}

func (o DayDetailsInvokeResponseOutput) ToDayDetailsInvokeResponseOutput() DayDetailsInvokeResponseOutput {
	return o
}

func (o DayDetailsInvokeResponseOutput) ToDayDetailsInvokeResponseOutputWithContext(ctx context.Context) DayDetailsInvokeResponseOutput {
	return o
}

func (o DayDetailsInvokeResponseOutput) ToDayDetailsInvokeResponsePtrOutput() DayDetailsInvokeResponsePtrOutput {
	return o.ToDayDetailsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o DayDetailsInvokeResponseOutput) ToDayDetailsInvokeResponsePtrOutputWithContext(ctx context.Context) DayDetailsInvokeResponsePtrOutput {
	return o.ApplyT(func(v DayDetailsInvokeResponse) *DayDetailsInvokeResponse {
		return &v
	}).(DayDetailsInvokeResponsePtrOutput)
}

// The time of day the schedule will occur.
func (o DayDetailsInvokeResponseOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DayDetailsInvokeResponse) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type DayDetailsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (DayDetailsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DayDetailsInvokeResponse)(nil)).Elem()
}

func (o DayDetailsInvokeResponsePtrOutput) ToDayDetailsInvokeResponsePtrOutput() DayDetailsInvokeResponsePtrOutput {
	return o
}

func (o DayDetailsInvokeResponsePtrOutput) ToDayDetailsInvokeResponsePtrOutputWithContext(ctx context.Context) DayDetailsInvokeResponsePtrOutput {
	return o
}

func (o DayDetailsInvokeResponsePtrOutput) Elem() DayDetailsInvokeResponseOutput {
	return o.ApplyT(func(v *DayDetailsInvokeResponse) DayDetailsInvokeResponse { return *v }).(DayDetailsInvokeResponseOutput)
}

// The time of day the schedule will occur.
func (o DayDetailsInvokeResponsePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DayDetailsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// Properties of a daily schedule.
type DayDetailsResponse struct {
	// The time of day the schedule will occur.
	Time *string `pulumi:"time"`
}

// DayDetailsResponseInput is an input type that accepts DayDetailsResponseArgs and DayDetailsResponseOutput values.
// You can construct a concrete instance of `DayDetailsResponseInput` via:
//
//          DayDetailsResponseArgs{...}
type DayDetailsResponseInput interface {
	pulumi.Input

	ToDayDetailsResponseOutput() DayDetailsResponseOutput
	ToDayDetailsResponseOutputWithContext(context.Context) DayDetailsResponseOutput
}

// Properties of a daily schedule.
type DayDetailsResponseArgs struct {
	// The time of day the schedule will occur.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (DayDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DayDetailsResponse)(nil)).Elem()
}

func (i DayDetailsResponseArgs) ToDayDetailsResponseOutput() DayDetailsResponseOutput {
	return i.ToDayDetailsResponseOutputWithContext(context.Background())
}

func (i DayDetailsResponseArgs) ToDayDetailsResponseOutputWithContext(ctx context.Context) DayDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayDetailsResponseOutput)
}

func (i DayDetailsResponseArgs) ToDayDetailsResponsePtrOutput() DayDetailsResponsePtrOutput {
	return i.ToDayDetailsResponsePtrOutputWithContext(context.Background())
}

func (i DayDetailsResponseArgs) ToDayDetailsResponsePtrOutputWithContext(ctx context.Context) DayDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayDetailsResponseOutput).ToDayDetailsResponsePtrOutputWithContext(ctx)
}

// DayDetailsResponsePtrInput is an input type that accepts DayDetailsResponseArgs, DayDetailsResponsePtr and DayDetailsResponsePtrOutput values.
// You can construct a concrete instance of `DayDetailsResponsePtrInput` via:
//
//          DayDetailsResponseArgs{...}
//
//  or:
//
//          nil
type DayDetailsResponsePtrInput interface {
	pulumi.Input

	ToDayDetailsResponsePtrOutput() DayDetailsResponsePtrOutput
	ToDayDetailsResponsePtrOutputWithContext(context.Context) DayDetailsResponsePtrOutput
}

type dayDetailsResponsePtrType DayDetailsResponseArgs

func DayDetailsResponsePtr(v *DayDetailsResponseArgs) DayDetailsResponsePtrInput {
	return (*dayDetailsResponsePtrType)(v)
}

func (*dayDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DayDetailsResponse)(nil)).Elem()
}

func (i *dayDetailsResponsePtrType) ToDayDetailsResponsePtrOutput() DayDetailsResponsePtrOutput {
	return i.ToDayDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *dayDetailsResponsePtrType) ToDayDetailsResponsePtrOutputWithContext(ctx context.Context) DayDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayDetailsResponsePtrOutput)
}

// Properties of a daily schedule.
type DayDetailsResponseOutput struct{ *pulumi.OutputState }

func (DayDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DayDetailsResponse)(nil)).Elem()
}

func (o DayDetailsResponseOutput) ToDayDetailsResponseOutput() DayDetailsResponseOutput {
	return o
}

func (o DayDetailsResponseOutput) ToDayDetailsResponseOutputWithContext(ctx context.Context) DayDetailsResponseOutput {
	return o
}

func (o DayDetailsResponseOutput) ToDayDetailsResponsePtrOutput() DayDetailsResponsePtrOutput {
	return o.ToDayDetailsResponsePtrOutputWithContext(context.Background())
}

func (o DayDetailsResponseOutput) ToDayDetailsResponsePtrOutputWithContext(ctx context.Context) DayDetailsResponsePtrOutput {
	return o.ApplyT(func(v DayDetailsResponse) *DayDetailsResponse {
		return &v
	}).(DayDetailsResponsePtrOutput)
}

// The time of day the schedule will occur.
func (o DayDetailsResponseOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DayDetailsResponse) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type DayDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (DayDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DayDetailsResponse)(nil)).Elem()
}

func (o DayDetailsResponsePtrOutput) ToDayDetailsResponsePtrOutput() DayDetailsResponsePtrOutput {
	return o
}

func (o DayDetailsResponsePtrOutput) ToDayDetailsResponsePtrOutputWithContext(ctx context.Context) DayDetailsResponsePtrOutput {
	return o
}

func (o DayDetailsResponsePtrOutput) Elem() DayDetailsResponseOutput {
	return o.ApplyT(func(v *DayDetailsResponse) DayDetailsResponse { return *v }).(DayDetailsResponseOutput)
}

// The time of day the schedule will occur.
func (o DayDetailsResponsePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DayDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// Properties of an environment deployment.
type EnvironmentDeploymentProperties struct {
	// The Azure Resource Manager template's identifier.
	ArmTemplateId *string `pulumi:"armTemplateId"`
	// The parameters of the Azure Resource Manager template.
	Parameters []ArmTemplateParameterProperties `pulumi:"parameters"`
}

// EnvironmentDeploymentPropertiesInput is an input type that accepts EnvironmentDeploymentPropertiesArgs and EnvironmentDeploymentPropertiesOutput values.
// You can construct a concrete instance of `EnvironmentDeploymentPropertiesInput` via:
//
//          EnvironmentDeploymentPropertiesArgs{...}
type EnvironmentDeploymentPropertiesInput interface {
	pulumi.Input

	ToEnvironmentDeploymentPropertiesOutput() EnvironmentDeploymentPropertiesOutput
	ToEnvironmentDeploymentPropertiesOutputWithContext(context.Context) EnvironmentDeploymentPropertiesOutput
}

// Properties of an environment deployment.
type EnvironmentDeploymentPropertiesArgs struct {
	// The Azure Resource Manager template's identifier.
	ArmTemplateId pulumi.StringPtrInput `pulumi:"armTemplateId"`
	// The parameters of the Azure Resource Manager template.
	Parameters ArmTemplateParameterPropertiesArrayInput `pulumi:"parameters"`
}

func (EnvironmentDeploymentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentDeploymentProperties)(nil)).Elem()
}

func (i EnvironmentDeploymentPropertiesArgs) ToEnvironmentDeploymentPropertiesOutput() EnvironmentDeploymentPropertiesOutput {
	return i.ToEnvironmentDeploymentPropertiesOutputWithContext(context.Background())
}

func (i EnvironmentDeploymentPropertiesArgs) ToEnvironmentDeploymentPropertiesOutputWithContext(ctx context.Context) EnvironmentDeploymentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentDeploymentPropertiesOutput)
}

func (i EnvironmentDeploymentPropertiesArgs) ToEnvironmentDeploymentPropertiesPtrOutput() EnvironmentDeploymentPropertiesPtrOutput {
	return i.ToEnvironmentDeploymentPropertiesPtrOutputWithContext(context.Background())
}

func (i EnvironmentDeploymentPropertiesArgs) ToEnvironmentDeploymentPropertiesPtrOutputWithContext(ctx context.Context) EnvironmentDeploymentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentDeploymentPropertiesOutput).ToEnvironmentDeploymentPropertiesPtrOutputWithContext(ctx)
}

// EnvironmentDeploymentPropertiesPtrInput is an input type that accepts EnvironmentDeploymentPropertiesArgs, EnvironmentDeploymentPropertiesPtr and EnvironmentDeploymentPropertiesPtrOutput values.
// You can construct a concrete instance of `EnvironmentDeploymentPropertiesPtrInput` via:
//
//          EnvironmentDeploymentPropertiesArgs{...}
//
//  or:
//
//          nil
type EnvironmentDeploymentPropertiesPtrInput interface {
	pulumi.Input

	ToEnvironmentDeploymentPropertiesPtrOutput() EnvironmentDeploymentPropertiesPtrOutput
	ToEnvironmentDeploymentPropertiesPtrOutputWithContext(context.Context) EnvironmentDeploymentPropertiesPtrOutput
}

type environmentDeploymentPropertiesPtrType EnvironmentDeploymentPropertiesArgs

func EnvironmentDeploymentPropertiesPtr(v *EnvironmentDeploymentPropertiesArgs) EnvironmentDeploymentPropertiesPtrInput {
	return (*environmentDeploymentPropertiesPtrType)(v)
}

func (*environmentDeploymentPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentDeploymentProperties)(nil)).Elem()
}

func (i *environmentDeploymentPropertiesPtrType) ToEnvironmentDeploymentPropertiesPtrOutput() EnvironmentDeploymentPropertiesPtrOutput {
	return i.ToEnvironmentDeploymentPropertiesPtrOutputWithContext(context.Background())
}

func (i *environmentDeploymentPropertiesPtrType) ToEnvironmentDeploymentPropertiesPtrOutputWithContext(ctx context.Context) EnvironmentDeploymentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentDeploymentPropertiesPtrOutput)
}

// Properties of an environment deployment.
type EnvironmentDeploymentPropertiesOutput struct{ *pulumi.OutputState }

func (EnvironmentDeploymentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentDeploymentProperties)(nil)).Elem()
}

func (o EnvironmentDeploymentPropertiesOutput) ToEnvironmentDeploymentPropertiesOutput() EnvironmentDeploymentPropertiesOutput {
	return o
}

func (o EnvironmentDeploymentPropertiesOutput) ToEnvironmentDeploymentPropertiesOutputWithContext(ctx context.Context) EnvironmentDeploymentPropertiesOutput {
	return o
}

func (o EnvironmentDeploymentPropertiesOutput) ToEnvironmentDeploymentPropertiesPtrOutput() EnvironmentDeploymentPropertiesPtrOutput {
	return o.ToEnvironmentDeploymentPropertiesPtrOutputWithContext(context.Background())
}

func (o EnvironmentDeploymentPropertiesOutput) ToEnvironmentDeploymentPropertiesPtrOutputWithContext(ctx context.Context) EnvironmentDeploymentPropertiesPtrOutput {
	return o.ApplyT(func(v EnvironmentDeploymentProperties) *EnvironmentDeploymentProperties {
		return &v
	}).(EnvironmentDeploymentPropertiesPtrOutput)
}

// The Azure Resource Manager template's identifier.
func (o EnvironmentDeploymentPropertiesOutput) ArmTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentDeploymentProperties) *string { return v.ArmTemplateId }).(pulumi.StringPtrOutput)
}

// The parameters of the Azure Resource Manager template.
func (o EnvironmentDeploymentPropertiesOutput) Parameters() ArmTemplateParameterPropertiesArrayOutput {
	return o.ApplyT(func(v EnvironmentDeploymentProperties) []ArmTemplateParameterProperties { return v.Parameters }).(ArmTemplateParameterPropertiesArrayOutput)
}

type EnvironmentDeploymentPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentDeploymentPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentDeploymentProperties)(nil)).Elem()
}

func (o EnvironmentDeploymentPropertiesPtrOutput) ToEnvironmentDeploymentPropertiesPtrOutput() EnvironmentDeploymentPropertiesPtrOutput {
	return o
}

func (o EnvironmentDeploymentPropertiesPtrOutput) ToEnvironmentDeploymentPropertiesPtrOutputWithContext(ctx context.Context) EnvironmentDeploymentPropertiesPtrOutput {
	return o
}

func (o EnvironmentDeploymentPropertiesPtrOutput) Elem() EnvironmentDeploymentPropertiesOutput {
	return o.ApplyT(func(v *EnvironmentDeploymentProperties) EnvironmentDeploymentProperties { return *v }).(EnvironmentDeploymentPropertiesOutput)
}

// The Azure Resource Manager template's identifier.
func (o EnvironmentDeploymentPropertiesPtrOutput) ArmTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentDeploymentProperties) *string {
		if v == nil {
			return nil
		}
		return v.ArmTemplateId
	}).(pulumi.StringPtrOutput)
}

// The parameters of the Azure Resource Manager template.
func (o EnvironmentDeploymentPropertiesPtrOutput) Parameters() ArmTemplateParameterPropertiesArrayOutput {
	return o.ApplyT(func(v *EnvironmentDeploymentProperties) []ArmTemplateParameterProperties {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ArmTemplateParameterPropertiesArrayOutput)
}

// Properties of an environment deployment.
type EnvironmentDeploymentPropertiesInvokeResponse struct {
	// The Azure Resource Manager template's identifier.
	ArmTemplateId *string `pulumi:"armTemplateId"`
	// The parameters of the Azure Resource Manager template.
	Parameters []ArmTemplateParameterPropertiesInvokeResponse `pulumi:"parameters"`
}

// EnvironmentDeploymentPropertiesInvokeResponseInput is an input type that accepts EnvironmentDeploymentPropertiesInvokeResponseArgs and EnvironmentDeploymentPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `EnvironmentDeploymentPropertiesInvokeResponseInput` via:
//
//          EnvironmentDeploymentPropertiesInvokeResponseArgs{...}
type EnvironmentDeploymentPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToEnvironmentDeploymentPropertiesInvokeResponseOutput() EnvironmentDeploymentPropertiesInvokeResponseOutput
	ToEnvironmentDeploymentPropertiesInvokeResponseOutputWithContext(context.Context) EnvironmentDeploymentPropertiesInvokeResponseOutput
}

// Properties of an environment deployment.
type EnvironmentDeploymentPropertiesInvokeResponseArgs struct {
	// The Azure Resource Manager template's identifier.
	ArmTemplateId pulumi.StringPtrInput `pulumi:"armTemplateId"`
	// The parameters of the Azure Resource Manager template.
	Parameters ArmTemplateParameterPropertiesInvokeResponseArrayInput `pulumi:"parameters"`
}

func (EnvironmentDeploymentPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentDeploymentPropertiesInvokeResponse)(nil)).Elem()
}

func (i EnvironmentDeploymentPropertiesInvokeResponseArgs) ToEnvironmentDeploymentPropertiesInvokeResponseOutput() EnvironmentDeploymentPropertiesInvokeResponseOutput {
	return i.ToEnvironmentDeploymentPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i EnvironmentDeploymentPropertiesInvokeResponseArgs) ToEnvironmentDeploymentPropertiesInvokeResponseOutputWithContext(ctx context.Context) EnvironmentDeploymentPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentDeploymentPropertiesInvokeResponseOutput)
}

// Properties of an environment deployment.
type EnvironmentDeploymentPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentDeploymentPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentDeploymentPropertiesInvokeResponse)(nil)).Elem()
}

func (o EnvironmentDeploymentPropertiesInvokeResponseOutput) ToEnvironmentDeploymentPropertiesInvokeResponseOutput() EnvironmentDeploymentPropertiesInvokeResponseOutput {
	return o
}

func (o EnvironmentDeploymentPropertiesInvokeResponseOutput) ToEnvironmentDeploymentPropertiesInvokeResponseOutputWithContext(ctx context.Context) EnvironmentDeploymentPropertiesInvokeResponseOutput {
	return o
}

// The Azure Resource Manager template's identifier.
func (o EnvironmentDeploymentPropertiesInvokeResponseOutput) ArmTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentDeploymentPropertiesInvokeResponse) *string { return v.ArmTemplateId }).(pulumi.StringPtrOutput)
}

// The parameters of the Azure Resource Manager template.
func (o EnvironmentDeploymentPropertiesInvokeResponseOutput) Parameters() ArmTemplateParameterPropertiesInvokeResponseArrayOutput {
	return o.ApplyT(func(v EnvironmentDeploymentPropertiesInvokeResponse) []ArmTemplateParameterPropertiesInvokeResponse {
		return v.Parameters
	}).(ArmTemplateParameterPropertiesInvokeResponseArrayOutput)
}

// Properties of an environment deployment.
type EnvironmentDeploymentPropertiesResponse struct {
	// The Azure Resource Manager template's identifier.
	ArmTemplateId *string `pulumi:"armTemplateId"`
	// The parameters of the Azure Resource Manager template.
	Parameters []ArmTemplateParameterPropertiesResponse `pulumi:"parameters"`
}

// EnvironmentDeploymentPropertiesResponseInput is an input type that accepts EnvironmentDeploymentPropertiesResponseArgs and EnvironmentDeploymentPropertiesResponseOutput values.
// You can construct a concrete instance of `EnvironmentDeploymentPropertiesResponseInput` via:
//
//          EnvironmentDeploymentPropertiesResponseArgs{...}
type EnvironmentDeploymentPropertiesResponseInput interface {
	pulumi.Input

	ToEnvironmentDeploymentPropertiesResponseOutput() EnvironmentDeploymentPropertiesResponseOutput
	ToEnvironmentDeploymentPropertiesResponseOutputWithContext(context.Context) EnvironmentDeploymentPropertiesResponseOutput
}

// Properties of an environment deployment.
type EnvironmentDeploymentPropertiesResponseArgs struct {
	// The Azure Resource Manager template's identifier.
	ArmTemplateId pulumi.StringPtrInput `pulumi:"armTemplateId"`
	// The parameters of the Azure Resource Manager template.
	Parameters ArmTemplateParameterPropertiesResponseArrayInput `pulumi:"parameters"`
}

func (EnvironmentDeploymentPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentDeploymentPropertiesResponse)(nil)).Elem()
}

func (i EnvironmentDeploymentPropertiesResponseArgs) ToEnvironmentDeploymentPropertiesResponseOutput() EnvironmentDeploymentPropertiesResponseOutput {
	return i.ToEnvironmentDeploymentPropertiesResponseOutputWithContext(context.Background())
}

func (i EnvironmentDeploymentPropertiesResponseArgs) ToEnvironmentDeploymentPropertiesResponseOutputWithContext(ctx context.Context) EnvironmentDeploymentPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentDeploymentPropertiesResponseOutput)
}

func (i EnvironmentDeploymentPropertiesResponseArgs) ToEnvironmentDeploymentPropertiesResponsePtrOutput() EnvironmentDeploymentPropertiesResponsePtrOutput {
	return i.ToEnvironmentDeploymentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i EnvironmentDeploymentPropertiesResponseArgs) ToEnvironmentDeploymentPropertiesResponsePtrOutputWithContext(ctx context.Context) EnvironmentDeploymentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentDeploymentPropertiesResponseOutput).ToEnvironmentDeploymentPropertiesResponsePtrOutputWithContext(ctx)
}

// EnvironmentDeploymentPropertiesResponsePtrInput is an input type that accepts EnvironmentDeploymentPropertiesResponseArgs, EnvironmentDeploymentPropertiesResponsePtr and EnvironmentDeploymentPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `EnvironmentDeploymentPropertiesResponsePtrInput` via:
//
//          EnvironmentDeploymentPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type EnvironmentDeploymentPropertiesResponsePtrInput interface {
	pulumi.Input

	ToEnvironmentDeploymentPropertiesResponsePtrOutput() EnvironmentDeploymentPropertiesResponsePtrOutput
	ToEnvironmentDeploymentPropertiesResponsePtrOutputWithContext(context.Context) EnvironmentDeploymentPropertiesResponsePtrOutput
}

type environmentDeploymentPropertiesResponsePtrType EnvironmentDeploymentPropertiesResponseArgs

func EnvironmentDeploymentPropertiesResponsePtr(v *EnvironmentDeploymentPropertiesResponseArgs) EnvironmentDeploymentPropertiesResponsePtrInput {
	return (*environmentDeploymentPropertiesResponsePtrType)(v)
}

func (*environmentDeploymentPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentDeploymentPropertiesResponse)(nil)).Elem()
}

func (i *environmentDeploymentPropertiesResponsePtrType) ToEnvironmentDeploymentPropertiesResponsePtrOutput() EnvironmentDeploymentPropertiesResponsePtrOutput {
	return i.ToEnvironmentDeploymentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *environmentDeploymentPropertiesResponsePtrType) ToEnvironmentDeploymentPropertiesResponsePtrOutputWithContext(ctx context.Context) EnvironmentDeploymentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentDeploymentPropertiesResponsePtrOutput)
}

// Properties of an environment deployment.
type EnvironmentDeploymentPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentDeploymentPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentDeploymentPropertiesResponse)(nil)).Elem()
}

func (o EnvironmentDeploymentPropertiesResponseOutput) ToEnvironmentDeploymentPropertiesResponseOutput() EnvironmentDeploymentPropertiesResponseOutput {
	return o
}

func (o EnvironmentDeploymentPropertiesResponseOutput) ToEnvironmentDeploymentPropertiesResponseOutputWithContext(ctx context.Context) EnvironmentDeploymentPropertiesResponseOutput {
	return o
}

func (o EnvironmentDeploymentPropertiesResponseOutput) ToEnvironmentDeploymentPropertiesResponsePtrOutput() EnvironmentDeploymentPropertiesResponsePtrOutput {
	return o.ToEnvironmentDeploymentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o EnvironmentDeploymentPropertiesResponseOutput) ToEnvironmentDeploymentPropertiesResponsePtrOutputWithContext(ctx context.Context) EnvironmentDeploymentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EnvironmentDeploymentPropertiesResponse) *EnvironmentDeploymentPropertiesResponse {
		return &v
	}).(EnvironmentDeploymentPropertiesResponsePtrOutput)
}

// The Azure Resource Manager template's identifier.
func (o EnvironmentDeploymentPropertiesResponseOutput) ArmTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentDeploymentPropertiesResponse) *string { return v.ArmTemplateId }).(pulumi.StringPtrOutput)
}

// The parameters of the Azure Resource Manager template.
func (o EnvironmentDeploymentPropertiesResponseOutput) Parameters() ArmTemplateParameterPropertiesResponseArrayOutput {
	return o.ApplyT(func(v EnvironmentDeploymentPropertiesResponse) []ArmTemplateParameterPropertiesResponse {
		return v.Parameters
	}).(ArmTemplateParameterPropertiesResponseArrayOutput)
}

type EnvironmentDeploymentPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentDeploymentPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentDeploymentPropertiesResponse)(nil)).Elem()
}

func (o EnvironmentDeploymentPropertiesResponsePtrOutput) ToEnvironmentDeploymentPropertiesResponsePtrOutput() EnvironmentDeploymentPropertiesResponsePtrOutput {
	return o
}

func (o EnvironmentDeploymentPropertiesResponsePtrOutput) ToEnvironmentDeploymentPropertiesResponsePtrOutputWithContext(ctx context.Context) EnvironmentDeploymentPropertiesResponsePtrOutput {
	return o
}

func (o EnvironmentDeploymentPropertiesResponsePtrOutput) Elem() EnvironmentDeploymentPropertiesResponseOutput {
	return o.ApplyT(func(v *EnvironmentDeploymentPropertiesResponse) EnvironmentDeploymentPropertiesResponse { return *v }).(EnvironmentDeploymentPropertiesResponseOutput)
}

// The Azure Resource Manager template's identifier.
func (o EnvironmentDeploymentPropertiesResponsePtrOutput) ArmTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentDeploymentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ArmTemplateId
	}).(pulumi.StringPtrOutput)
}

// The parameters of the Azure Resource Manager template.
func (o EnvironmentDeploymentPropertiesResponsePtrOutput) Parameters() ArmTemplateParameterPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *EnvironmentDeploymentPropertiesResponse) []ArmTemplateParameterPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ArmTemplateParameterPropertiesResponseArrayOutput)
}

// An event to be notified for.
type Event struct {
	// The event type for which this notification is enabled (i.e. AutoShutdown, Cost)
	EventName *string `pulumi:"eventName"`
}

// EventInput is an input type that accepts EventArgs and EventOutput values.
// You can construct a concrete instance of `EventInput` via:
//
//          EventArgs{...}
type EventInput interface {
	pulumi.Input

	ToEventOutput() EventOutput
	ToEventOutputWithContext(context.Context) EventOutput
}

// An event to be notified for.
type EventArgs struct {
	// The event type for which this notification is enabled (i.e. AutoShutdown, Cost)
	EventName pulumi.StringPtrInput `pulumi:"eventName"`
}

func (EventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Event)(nil)).Elem()
}

func (i EventArgs) ToEventOutput() EventOutput {
	return i.ToEventOutputWithContext(context.Background())
}

func (i EventArgs) ToEventOutputWithContext(ctx context.Context) EventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventOutput)
}

// EventArrayInput is an input type that accepts EventArray and EventArrayOutput values.
// You can construct a concrete instance of `EventArrayInput` via:
//
//          EventArray{ EventArgs{...} }
type EventArrayInput interface {
	pulumi.Input

	ToEventArrayOutput() EventArrayOutput
	ToEventArrayOutputWithContext(context.Context) EventArrayOutput
}

type EventArray []EventInput

func (EventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Event)(nil)).Elem()
}

func (i EventArray) ToEventArrayOutput() EventArrayOutput {
	return i.ToEventArrayOutputWithContext(context.Background())
}

func (i EventArray) ToEventArrayOutputWithContext(ctx context.Context) EventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventArrayOutput)
}

// An event to be notified for.
type EventOutput struct{ *pulumi.OutputState }

func (EventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Event)(nil)).Elem()
}

func (o EventOutput) ToEventOutput() EventOutput {
	return o
}

func (o EventOutput) ToEventOutputWithContext(ctx context.Context) EventOutput {
	return o
}

// The event type for which this notification is enabled (i.e. AutoShutdown, Cost)
func (o EventOutput) EventName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Event) *string { return v.EventName }).(pulumi.StringPtrOutput)
}

type EventArrayOutput struct{ *pulumi.OutputState }

func (EventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Event)(nil)).Elem()
}

func (o EventArrayOutput) ToEventArrayOutput() EventArrayOutput {
	return o
}

func (o EventArrayOutput) ToEventArrayOutputWithContext(ctx context.Context) EventArrayOutput {
	return o
}

func (o EventArrayOutput) Index(i pulumi.IntInput) EventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Event {
		return vs[0].([]Event)[vs[1].(int)]
	}).(EventOutput)
}

// An event to be notified for.
type EventInvokeResponse struct {
	// The event type for which this notification is enabled (i.e. AutoShutdown, Cost)
	EventName *string `pulumi:"eventName"`
}

// EventInvokeResponseInput is an input type that accepts EventInvokeResponseArgs and EventInvokeResponseOutput values.
// You can construct a concrete instance of `EventInvokeResponseInput` via:
//
//          EventInvokeResponseArgs{...}
type EventInvokeResponseInput interface {
	pulumi.Input

	ToEventInvokeResponseOutput() EventInvokeResponseOutput
	ToEventInvokeResponseOutputWithContext(context.Context) EventInvokeResponseOutput
}

// An event to be notified for.
type EventInvokeResponseArgs struct {
	// The event type for which this notification is enabled (i.e. AutoShutdown, Cost)
	EventName pulumi.StringPtrInput `pulumi:"eventName"`
}

func (EventInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventInvokeResponse)(nil)).Elem()
}

func (i EventInvokeResponseArgs) ToEventInvokeResponseOutput() EventInvokeResponseOutput {
	return i.ToEventInvokeResponseOutputWithContext(context.Background())
}

func (i EventInvokeResponseArgs) ToEventInvokeResponseOutputWithContext(ctx context.Context) EventInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventInvokeResponseOutput)
}

// EventInvokeResponseArrayInput is an input type that accepts EventInvokeResponseArray and EventInvokeResponseArrayOutput values.
// You can construct a concrete instance of `EventInvokeResponseArrayInput` via:
//
//          EventInvokeResponseArray{ EventInvokeResponseArgs{...} }
type EventInvokeResponseArrayInput interface {
	pulumi.Input

	ToEventInvokeResponseArrayOutput() EventInvokeResponseArrayOutput
	ToEventInvokeResponseArrayOutputWithContext(context.Context) EventInvokeResponseArrayOutput
}

type EventInvokeResponseArray []EventInvokeResponseInput

func (EventInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventInvokeResponse)(nil)).Elem()
}

func (i EventInvokeResponseArray) ToEventInvokeResponseArrayOutput() EventInvokeResponseArrayOutput {
	return i.ToEventInvokeResponseArrayOutputWithContext(context.Background())
}

func (i EventInvokeResponseArray) ToEventInvokeResponseArrayOutputWithContext(ctx context.Context) EventInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventInvokeResponseArrayOutput)
}

// An event to be notified for.
type EventInvokeResponseOutput struct{ *pulumi.OutputState }

func (EventInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventInvokeResponse)(nil)).Elem()
}

func (o EventInvokeResponseOutput) ToEventInvokeResponseOutput() EventInvokeResponseOutput {
	return o
}

func (o EventInvokeResponseOutput) ToEventInvokeResponseOutputWithContext(ctx context.Context) EventInvokeResponseOutput {
	return o
}

// The event type for which this notification is enabled (i.e. AutoShutdown, Cost)
func (o EventInvokeResponseOutput) EventName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventInvokeResponse) *string { return v.EventName }).(pulumi.StringPtrOutput)
}

type EventInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (EventInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventInvokeResponse)(nil)).Elem()
}

func (o EventInvokeResponseArrayOutput) ToEventInvokeResponseArrayOutput() EventInvokeResponseArrayOutput {
	return o
}

func (o EventInvokeResponseArrayOutput) ToEventInvokeResponseArrayOutputWithContext(ctx context.Context) EventInvokeResponseArrayOutput {
	return o
}

func (o EventInvokeResponseArrayOutput) Index(i pulumi.IntInput) EventInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventInvokeResponse {
		return vs[0].([]EventInvokeResponse)[vs[1].(int)]
	}).(EventInvokeResponseOutput)
}

// An event to be notified for.
type EventResponse struct {
	// The event type for which this notification is enabled (i.e. AutoShutdown, Cost)
	EventName *string `pulumi:"eventName"`
}

// EventResponseInput is an input type that accepts EventResponseArgs and EventResponseOutput values.
// You can construct a concrete instance of `EventResponseInput` via:
//
//          EventResponseArgs{...}
type EventResponseInput interface {
	pulumi.Input

	ToEventResponseOutput() EventResponseOutput
	ToEventResponseOutputWithContext(context.Context) EventResponseOutput
}

// An event to be notified for.
type EventResponseArgs struct {
	// The event type for which this notification is enabled (i.e. AutoShutdown, Cost)
	EventName pulumi.StringPtrInput `pulumi:"eventName"`
}

func (EventResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventResponse)(nil)).Elem()
}

func (i EventResponseArgs) ToEventResponseOutput() EventResponseOutput {
	return i.ToEventResponseOutputWithContext(context.Background())
}

func (i EventResponseArgs) ToEventResponseOutputWithContext(ctx context.Context) EventResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventResponseOutput)
}

// EventResponseArrayInput is an input type that accepts EventResponseArray and EventResponseArrayOutput values.
// You can construct a concrete instance of `EventResponseArrayInput` via:
//
//          EventResponseArray{ EventResponseArgs{...} }
type EventResponseArrayInput interface {
	pulumi.Input

	ToEventResponseArrayOutput() EventResponseArrayOutput
	ToEventResponseArrayOutputWithContext(context.Context) EventResponseArrayOutput
}

type EventResponseArray []EventResponseInput

func (EventResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventResponse)(nil)).Elem()
}

func (i EventResponseArray) ToEventResponseArrayOutput() EventResponseArrayOutput {
	return i.ToEventResponseArrayOutputWithContext(context.Background())
}

func (i EventResponseArray) ToEventResponseArrayOutputWithContext(ctx context.Context) EventResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventResponseArrayOutput)
}

// An event to be notified for.
type EventResponseOutput struct{ *pulumi.OutputState }

func (EventResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventResponse)(nil)).Elem()
}

func (o EventResponseOutput) ToEventResponseOutput() EventResponseOutput {
	return o
}

func (o EventResponseOutput) ToEventResponseOutputWithContext(ctx context.Context) EventResponseOutput {
	return o
}

// The event type for which this notification is enabled (i.e. AutoShutdown, Cost)
func (o EventResponseOutput) EventName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventResponse) *string { return v.EventName }).(pulumi.StringPtrOutput)
}

type EventResponseArrayOutput struct{ *pulumi.OutputState }

func (EventResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventResponse)(nil)).Elem()
}

func (o EventResponseArrayOutput) ToEventResponseArrayOutput() EventResponseArrayOutput {
	return o
}

func (o EventResponseArrayOutput) ToEventResponseArrayOutputWithContext(ctx context.Context) EventResponseArrayOutput {
	return o
}

func (o EventResponseArrayOutput) Index(i pulumi.IntInput) EventResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventResponse {
		return vs[0].([]EventResponse)[vs[1].(int)]
	}).(EventResponseOutput)
}

// Subnet information as returned by the Microsoft.Network API.
type ExternalSubnetInvokeResponse struct {
	// Gets or sets the identifier.
	Id *string `pulumi:"id"`
	// Gets or sets the name.
	Name *string `pulumi:"name"`
}

// ExternalSubnetInvokeResponseInput is an input type that accepts ExternalSubnetInvokeResponseArgs and ExternalSubnetInvokeResponseOutput values.
// You can construct a concrete instance of `ExternalSubnetInvokeResponseInput` via:
//
//          ExternalSubnetInvokeResponseArgs{...}
type ExternalSubnetInvokeResponseInput interface {
	pulumi.Input

	ToExternalSubnetInvokeResponseOutput() ExternalSubnetInvokeResponseOutput
	ToExternalSubnetInvokeResponseOutputWithContext(context.Context) ExternalSubnetInvokeResponseOutput
}

// Subnet information as returned by the Microsoft.Network API.
type ExternalSubnetInvokeResponseArgs struct {
	// Gets or sets the identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets or sets the name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExternalSubnetInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSubnetInvokeResponse)(nil)).Elem()
}

func (i ExternalSubnetInvokeResponseArgs) ToExternalSubnetInvokeResponseOutput() ExternalSubnetInvokeResponseOutput {
	return i.ToExternalSubnetInvokeResponseOutputWithContext(context.Background())
}

func (i ExternalSubnetInvokeResponseArgs) ToExternalSubnetInvokeResponseOutputWithContext(ctx context.Context) ExternalSubnetInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSubnetInvokeResponseOutput)
}

// ExternalSubnetInvokeResponseArrayInput is an input type that accepts ExternalSubnetInvokeResponseArray and ExternalSubnetInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ExternalSubnetInvokeResponseArrayInput` via:
//
//          ExternalSubnetInvokeResponseArray{ ExternalSubnetInvokeResponseArgs{...} }
type ExternalSubnetInvokeResponseArrayInput interface {
	pulumi.Input

	ToExternalSubnetInvokeResponseArrayOutput() ExternalSubnetInvokeResponseArrayOutput
	ToExternalSubnetInvokeResponseArrayOutputWithContext(context.Context) ExternalSubnetInvokeResponseArrayOutput
}

type ExternalSubnetInvokeResponseArray []ExternalSubnetInvokeResponseInput

func (ExternalSubnetInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSubnetInvokeResponse)(nil)).Elem()
}

func (i ExternalSubnetInvokeResponseArray) ToExternalSubnetInvokeResponseArrayOutput() ExternalSubnetInvokeResponseArrayOutput {
	return i.ToExternalSubnetInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ExternalSubnetInvokeResponseArray) ToExternalSubnetInvokeResponseArrayOutputWithContext(ctx context.Context) ExternalSubnetInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSubnetInvokeResponseArrayOutput)
}

// Subnet information as returned by the Microsoft.Network API.
type ExternalSubnetInvokeResponseOutput struct{ *pulumi.OutputState }

func (ExternalSubnetInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSubnetInvokeResponse)(nil)).Elem()
}

func (o ExternalSubnetInvokeResponseOutput) ToExternalSubnetInvokeResponseOutput() ExternalSubnetInvokeResponseOutput {
	return o
}

func (o ExternalSubnetInvokeResponseOutput) ToExternalSubnetInvokeResponseOutputWithContext(ctx context.Context) ExternalSubnetInvokeResponseOutput {
	return o
}

// Gets or sets the identifier.
func (o ExternalSubnetInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSubnetInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets or sets the name.
func (o ExternalSubnetInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSubnetInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExternalSubnetInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ExternalSubnetInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSubnetInvokeResponse)(nil)).Elem()
}

func (o ExternalSubnetInvokeResponseArrayOutput) ToExternalSubnetInvokeResponseArrayOutput() ExternalSubnetInvokeResponseArrayOutput {
	return o
}

func (o ExternalSubnetInvokeResponseArrayOutput) ToExternalSubnetInvokeResponseArrayOutputWithContext(ctx context.Context) ExternalSubnetInvokeResponseArrayOutput {
	return o
}

func (o ExternalSubnetInvokeResponseArrayOutput) Index(i pulumi.IntInput) ExternalSubnetInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalSubnetInvokeResponse {
		return vs[0].([]ExternalSubnetInvokeResponse)[vs[1].(int)]
	}).(ExternalSubnetInvokeResponseOutput)
}

// Subnet information as returned by the Microsoft.Network API.
type ExternalSubnetResponse struct {
	// Gets or sets the identifier.
	Id *string `pulumi:"id"`
	// Gets or sets the name.
	Name *string `pulumi:"name"`
}

// ExternalSubnetResponseInput is an input type that accepts ExternalSubnetResponseArgs and ExternalSubnetResponseOutput values.
// You can construct a concrete instance of `ExternalSubnetResponseInput` via:
//
//          ExternalSubnetResponseArgs{...}
type ExternalSubnetResponseInput interface {
	pulumi.Input

	ToExternalSubnetResponseOutput() ExternalSubnetResponseOutput
	ToExternalSubnetResponseOutputWithContext(context.Context) ExternalSubnetResponseOutput
}

// Subnet information as returned by the Microsoft.Network API.
type ExternalSubnetResponseArgs struct {
	// Gets or sets the identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets or sets the name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExternalSubnetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSubnetResponse)(nil)).Elem()
}

func (i ExternalSubnetResponseArgs) ToExternalSubnetResponseOutput() ExternalSubnetResponseOutput {
	return i.ToExternalSubnetResponseOutputWithContext(context.Background())
}

func (i ExternalSubnetResponseArgs) ToExternalSubnetResponseOutputWithContext(ctx context.Context) ExternalSubnetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSubnetResponseOutput)
}

// ExternalSubnetResponseArrayInput is an input type that accepts ExternalSubnetResponseArray and ExternalSubnetResponseArrayOutput values.
// You can construct a concrete instance of `ExternalSubnetResponseArrayInput` via:
//
//          ExternalSubnetResponseArray{ ExternalSubnetResponseArgs{...} }
type ExternalSubnetResponseArrayInput interface {
	pulumi.Input

	ToExternalSubnetResponseArrayOutput() ExternalSubnetResponseArrayOutput
	ToExternalSubnetResponseArrayOutputWithContext(context.Context) ExternalSubnetResponseArrayOutput
}

type ExternalSubnetResponseArray []ExternalSubnetResponseInput

func (ExternalSubnetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSubnetResponse)(nil)).Elem()
}

func (i ExternalSubnetResponseArray) ToExternalSubnetResponseArrayOutput() ExternalSubnetResponseArrayOutput {
	return i.ToExternalSubnetResponseArrayOutputWithContext(context.Background())
}

func (i ExternalSubnetResponseArray) ToExternalSubnetResponseArrayOutputWithContext(ctx context.Context) ExternalSubnetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSubnetResponseArrayOutput)
}

// Subnet information as returned by the Microsoft.Network API.
type ExternalSubnetResponseOutput struct{ *pulumi.OutputState }

func (ExternalSubnetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSubnetResponse)(nil)).Elem()
}

func (o ExternalSubnetResponseOutput) ToExternalSubnetResponseOutput() ExternalSubnetResponseOutput {
	return o
}

func (o ExternalSubnetResponseOutput) ToExternalSubnetResponseOutputWithContext(ctx context.Context) ExternalSubnetResponseOutput {
	return o
}

// Gets or sets the identifier.
func (o ExternalSubnetResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSubnetResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets or sets the name.
func (o ExternalSubnetResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSubnetResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExternalSubnetResponseArrayOutput struct{ *pulumi.OutputState }

func (ExternalSubnetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSubnetResponse)(nil)).Elem()
}

func (o ExternalSubnetResponseArrayOutput) ToExternalSubnetResponseArrayOutput() ExternalSubnetResponseArrayOutput {
	return o
}

func (o ExternalSubnetResponseArrayOutput) ToExternalSubnetResponseArrayOutputWithContext(ctx context.Context) ExternalSubnetResponseArrayOutput {
	return o
}

func (o ExternalSubnetResponseArrayOutput) Index(i pulumi.IntInput) ExternalSubnetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalSubnetResponse {
		return vs[0].([]ExternalSubnetResponse)[vs[1].(int)]
	}).(ExternalSubnetResponseOutput)
}

// Information about a VM from which a formula is to be created.
type FormulaPropertiesFromVm struct {
	// The identifier of the VM from which a formula is to be created.
	LabVmId *string `pulumi:"labVmId"`
}

// FormulaPropertiesFromVmInput is an input type that accepts FormulaPropertiesFromVmArgs and FormulaPropertiesFromVmOutput values.
// You can construct a concrete instance of `FormulaPropertiesFromVmInput` via:
//
//          FormulaPropertiesFromVmArgs{...}
type FormulaPropertiesFromVmInput interface {
	pulumi.Input

	ToFormulaPropertiesFromVmOutput() FormulaPropertiesFromVmOutput
	ToFormulaPropertiesFromVmOutputWithContext(context.Context) FormulaPropertiesFromVmOutput
}

// Information about a VM from which a formula is to be created.
type FormulaPropertiesFromVmArgs struct {
	// The identifier of the VM from which a formula is to be created.
	LabVmId pulumi.StringPtrInput `pulumi:"labVmId"`
}

func (FormulaPropertiesFromVmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FormulaPropertiesFromVm)(nil)).Elem()
}

func (i FormulaPropertiesFromVmArgs) ToFormulaPropertiesFromVmOutput() FormulaPropertiesFromVmOutput {
	return i.ToFormulaPropertiesFromVmOutputWithContext(context.Background())
}

func (i FormulaPropertiesFromVmArgs) ToFormulaPropertiesFromVmOutputWithContext(ctx context.Context) FormulaPropertiesFromVmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormulaPropertiesFromVmOutput)
}

func (i FormulaPropertiesFromVmArgs) ToFormulaPropertiesFromVmPtrOutput() FormulaPropertiesFromVmPtrOutput {
	return i.ToFormulaPropertiesFromVmPtrOutputWithContext(context.Background())
}

func (i FormulaPropertiesFromVmArgs) ToFormulaPropertiesFromVmPtrOutputWithContext(ctx context.Context) FormulaPropertiesFromVmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormulaPropertiesFromVmOutput).ToFormulaPropertiesFromVmPtrOutputWithContext(ctx)
}

// FormulaPropertiesFromVmPtrInput is an input type that accepts FormulaPropertiesFromVmArgs, FormulaPropertiesFromVmPtr and FormulaPropertiesFromVmPtrOutput values.
// You can construct a concrete instance of `FormulaPropertiesFromVmPtrInput` via:
//
//          FormulaPropertiesFromVmArgs{...}
//
//  or:
//
//          nil
type FormulaPropertiesFromVmPtrInput interface {
	pulumi.Input

	ToFormulaPropertiesFromVmPtrOutput() FormulaPropertiesFromVmPtrOutput
	ToFormulaPropertiesFromVmPtrOutputWithContext(context.Context) FormulaPropertiesFromVmPtrOutput
}

type formulaPropertiesFromVmPtrType FormulaPropertiesFromVmArgs

func FormulaPropertiesFromVmPtr(v *FormulaPropertiesFromVmArgs) FormulaPropertiesFromVmPtrInput {
	return (*formulaPropertiesFromVmPtrType)(v)
}

func (*formulaPropertiesFromVmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FormulaPropertiesFromVm)(nil)).Elem()
}

func (i *formulaPropertiesFromVmPtrType) ToFormulaPropertiesFromVmPtrOutput() FormulaPropertiesFromVmPtrOutput {
	return i.ToFormulaPropertiesFromVmPtrOutputWithContext(context.Background())
}

func (i *formulaPropertiesFromVmPtrType) ToFormulaPropertiesFromVmPtrOutputWithContext(ctx context.Context) FormulaPropertiesFromVmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormulaPropertiesFromVmPtrOutput)
}

// Information about a VM from which a formula is to be created.
type FormulaPropertiesFromVmOutput struct{ *pulumi.OutputState }

func (FormulaPropertiesFromVmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FormulaPropertiesFromVm)(nil)).Elem()
}

func (o FormulaPropertiesFromVmOutput) ToFormulaPropertiesFromVmOutput() FormulaPropertiesFromVmOutput {
	return o
}

func (o FormulaPropertiesFromVmOutput) ToFormulaPropertiesFromVmOutputWithContext(ctx context.Context) FormulaPropertiesFromVmOutput {
	return o
}

func (o FormulaPropertiesFromVmOutput) ToFormulaPropertiesFromVmPtrOutput() FormulaPropertiesFromVmPtrOutput {
	return o.ToFormulaPropertiesFromVmPtrOutputWithContext(context.Background())
}

func (o FormulaPropertiesFromVmOutput) ToFormulaPropertiesFromVmPtrOutputWithContext(ctx context.Context) FormulaPropertiesFromVmPtrOutput {
	return o.ApplyT(func(v FormulaPropertiesFromVm) *FormulaPropertiesFromVm {
		return &v
	}).(FormulaPropertiesFromVmPtrOutput)
}

// The identifier of the VM from which a formula is to be created.
func (o FormulaPropertiesFromVmOutput) LabVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FormulaPropertiesFromVm) *string { return v.LabVmId }).(pulumi.StringPtrOutput)
}

type FormulaPropertiesFromVmPtrOutput struct{ *pulumi.OutputState }

func (FormulaPropertiesFromVmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FormulaPropertiesFromVm)(nil)).Elem()
}

func (o FormulaPropertiesFromVmPtrOutput) ToFormulaPropertiesFromVmPtrOutput() FormulaPropertiesFromVmPtrOutput {
	return o
}

func (o FormulaPropertiesFromVmPtrOutput) ToFormulaPropertiesFromVmPtrOutputWithContext(ctx context.Context) FormulaPropertiesFromVmPtrOutput {
	return o
}

func (o FormulaPropertiesFromVmPtrOutput) Elem() FormulaPropertiesFromVmOutput {
	return o.ApplyT(func(v *FormulaPropertiesFromVm) FormulaPropertiesFromVm { return *v }).(FormulaPropertiesFromVmOutput)
}

// The identifier of the VM from which a formula is to be created.
func (o FormulaPropertiesFromVmPtrOutput) LabVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FormulaPropertiesFromVm) *string {
		if v == nil {
			return nil
		}
		return v.LabVmId
	}).(pulumi.StringPtrOutput)
}

// Information about a VM from which a formula is to be created.
type FormulaPropertiesFromVmInvokeResponse struct {
	// The identifier of the VM from which a formula is to be created.
	LabVmId *string `pulumi:"labVmId"`
}

// FormulaPropertiesFromVmInvokeResponseInput is an input type that accepts FormulaPropertiesFromVmInvokeResponseArgs and FormulaPropertiesFromVmInvokeResponseOutput values.
// You can construct a concrete instance of `FormulaPropertiesFromVmInvokeResponseInput` via:
//
//          FormulaPropertiesFromVmInvokeResponseArgs{...}
type FormulaPropertiesFromVmInvokeResponseInput interface {
	pulumi.Input

	ToFormulaPropertiesFromVmInvokeResponseOutput() FormulaPropertiesFromVmInvokeResponseOutput
	ToFormulaPropertiesFromVmInvokeResponseOutputWithContext(context.Context) FormulaPropertiesFromVmInvokeResponseOutput
}

// Information about a VM from which a formula is to be created.
type FormulaPropertiesFromVmInvokeResponseArgs struct {
	// The identifier of the VM from which a formula is to be created.
	LabVmId pulumi.StringPtrInput `pulumi:"labVmId"`
}

func (FormulaPropertiesFromVmInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FormulaPropertiesFromVmInvokeResponse)(nil)).Elem()
}

func (i FormulaPropertiesFromVmInvokeResponseArgs) ToFormulaPropertiesFromVmInvokeResponseOutput() FormulaPropertiesFromVmInvokeResponseOutput {
	return i.ToFormulaPropertiesFromVmInvokeResponseOutputWithContext(context.Background())
}

func (i FormulaPropertiesFromVmInvokeResponseArgs) ToFormulaPropertiesFromVmInvokeResponseOutputWithContext(ctx context.Context) FormulaPropertiesFromVmInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormulaPropertiesFromVmInvokeResponseOutput)
}

// Information about a VM from which a formula is to be created.
type FormulaPropertiesFromVmInvokeResponseOutput struct{ *pulumi.OutputState }

func (FormulaPropertiesFromVmInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FormulaPropertiesFromVmInvokeResponse)(nil)).Elem()
}

func (o FormulaPropertiesFromVmInvokeResponseOutput) ToFormulaPropertiesFromVmInvokeResponseOutput() FormulaPropertiesFromVmInvokeResponseOutput {
	return o
}

func (o FormulaPropertiesFromVmInvokeResponseOutput) ToFormulaPropertiesFromVmInvokeResponseOutputWithContext(ctx context.Context) FormulaPropertiesFromVmInvokeResponseOutput {
	return o
}

// The identifier of the VM from which a formula is to be created.
func (o FormulaPropertiesFromVmInvokeResponseOutput) LabVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FormulaPropertiesFromVmInvokeResponse) *string { return v.LabVmId }).(pulumi.StringPtrOutput)
}

// Information about a VM from which a formula is to be created.
type FormulaPropertiesFromVmResponse struct {
	// The identifier of the VM from which a formula is to be created.
	LabVmId *string `pulumi:"labVmId"`
}

// FormulaPropertiesFromVmResponseInput is an input type that accepts FormulaPropertiesFromVmResponseArgs and FormulaPropertiesFromVmResponseOutput values.
// You can construct a concrete instance of `FormulaPropertiesFromVmResponseInput` via:
//
//          FormulaPropertiesFromVmResponseArgs{...}
type FormulaPropertiesFromVmResponseInput interface {
	pulumi.Input

	ToFormulaPropertiesFromVmResponseOutput() FormulaPropertiesFromVmResponseOutput
	ToFormulaPropertiesFromVmResponseOutputWithContext(context.Context) FormulaPropertiesFromVmResponseOutput
}

// Information about a VM from which a formula is to be created.
type FormulaPropertiesFromVmResponseArgs struct {
	// The identifier of the VM from which a formula is to be created.
	LabVmId pulumi.StringPtrInput `pulumi:"labVmId"`
}

func (FormulaPropertiesFromVmResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FormulaPropertiesFromVmResponse)(nil)).Elem()
}

func (i FormulaPropertiesFromVmResponseArgs) ToFormulaPropertiesFromVmResponseOutput() FormulaPropertiesFromVmResponseOutput {
	return i.ToFormulaPropertiesFromVmResponseOutputWithContext(context.Background())
}

func (i FormulaPropertiesFromVmResponseArgs) ToFormulaPropertiesFromVmResponseOutputWithContext(ctx context.Context) FormulaPropertiesFromVmResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormulaPropertiesFromVmResponseOutput)
}

func (i FormulaPropertiesFromVmResponseArgs) ToFormulaPropertiesFromVmResponsePtrOutput() FormulaPropertiesFromVmResponsePtrOutput {
	return i.ToFormulaPropertiesFromVmResponsePtrOutputWithContext(context.Background())
}

func (i FormulaPropertiesFromVmResponseArgs) ToFormulaPropertiesFromVmResponsePtrOutputWithContext(ctx context.Context) FormulaPropertiesFromVmResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormulaPropertiesFromVmResponseOutput).ToFormulaPropertiesFromVmResponsePtrOutputWithContext(ctx)
}

// FormulaPropertiesFromVmResponsePtrInput is an input type that accepts FormulaPropertiesFromVmResponseArgs, FormulaPropertiesFromVmResponsePtr and FormulaPropertiesFromVmResponsePtrOutput values.
// You can construct a concrete instance of `FormulaPropertiesFromVmResponsePtrInput` via:
//
//          FormulaPropertiesFromVmResponseArgs{...}
//
//  or:
//
//          nil
type FormulaPropertiesFromVmResponsePtrInput interface {
	pulumi.Input

	ToFormulaPropertiesFromVmResponsePtrOutput() FormulaPropertiesFromVmResponsePtrOutput
	ToFormulaPropertiesFromVmResponsePtrOutputWithContext(context.Context) FormulaPropertiesFromVmResponsePtrOutput
}

type formulaPropertiesFromVmResponsePtrType FormulaPropertiesFromVmResponseArgs

func FormulaPropertiesFromVmResponsePtr(v *FormulaPropertiesFromVmResponseArgs) FormulaPropertiesFromVmResponsePtrInput {
	return (*formulaPropertiesFromVmResponsePtrType)(v)
}

func (*formulaPropertiesFromVmResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FormulaPropertiesFromVmResponse)(nil)).Elem()
}

func (i *formulaPropertiesFromVmResponsePtrType) ToFormulaPropertiesFromVmResponsePtrOutput() FormulaPropertiesFromVmResponsePtrOutput {
	return i.ToFormulaPropertiesFromVmResponsePtrOutputWithContext(context.Background())
}

func (i *formulaPropertiesFromVmResponsePtrType) ToFormulaPropertiesFromVmResponsePtrOutputWithContext(ctx context.Context) FormulaPropertiesFromVmResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormulaPropertiesFromVmResponsePtrOutput)
}

// Information about a VM from which a formula is to be created.
type FormulaPropertiesFromVmResponseOutput struct{ *pulumi.OutputState }

func (FormulaPropertiesFromVmResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FormulaPropertiesFromVmResponse)(nil)).Elem()
}

func (o FormulaPropertiesFromVmResponseOutput) ToFormulaPropertiesFromVmResponseOutput() FormulaPropertiesFromVmResponseOutput {
	return o
}

func (o FormulaPropertiesFromVmResponseOutput) ToFormulaPropertiesFromVmResponseOutputWithContext(ctx context.Context) FormulaPropertiesFromVmResponseOutput {
	return o
}

func (o FormulaPropertiesFromVmResponseOutput) ToFormulaPropertiesFromVmResponsePtrOutput() FormulaPropertiesFromVmResponsePtrOutput {
	return o.ToFormulaPropertiesFromVmResponsePtrOutputWithContext(context.Background())
}

func (o FormulaPropertiesFromVmResponseOutput) ToFormulaPropertiesFromVmResponsePtrOutputWithContext(ctx context.Context) FormulaPropertiesFromVmResponsePtrOutput {
	return o.ApplyT(func(v FormulaPropertiesFromVmResponse) *FormulaPropertiesFromVmResponse {
		return &v
	}).(FormulaPropertiesFromVmResponsePtrOutput)
}

// The identifier of the VM from which a formula is to be created.
func (o FormulaPropertiesFromVmResponseOutput) LabVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FormulaPropertiesFromVmResponse) *string { return v.LabVmId }).(pulumi.StringPtrOutput)
}

type FormulaPropertiesFromVmResponsePtrOutput struct{ *pulumi.OutputState }

func (FormulaPropertiesFromVmResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FormulaPropertiesFromVmResponse)(nil)).Elem()
}

func (o FormulaPropertiesFromVmResponsePtrOutput) ToFormulaPropertiesFromVmResponsePtrOutput() FormulaPropertiesFromVmResponsePtrOutput {
	return o
}

func (o FormulaPropertiesFromVmResponsePtrOutput) ToFormulaPropertiesFromVmResponsePtrOutputWithContext(ctx context.Context) FormulaPropertiesFromVmResponsePtrOutput {
	return o
}

func (o FormulaPropertiesFromVmResponsePtrOutput) Elem() FormulaPropertiesFromVmResponseOutput {
	return o.ApplyT(func(v *FormulaPropertiesFromVmResponse) FormulaPropertiesFromVmResponse { return *v }).(FormulaPropertiesFromVmResponseOutput)
}

// The identifier of the VM from which a formula is to be created.
func (o FormulaPropertiesFromVmResponsePtrOutput) LabVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FormulaPropertiesFromVmResponse) *string {
		if v == nil {
			return nil
		}
		return v.LabVmId
	}).(pulumi.StringPtrOutput)
}

// The reference information for an Azure Marketplace image.
type GalleryImageReference struct {
	// The offer of the gallery image.
	Offer *string `pulumi:"offer"`
	// The OS type of the gallery image.
	OsType *string `pulumi:"osType"`
	// The publisher of the gallery image.
	Publisher *string `pulumi:"publisher"`
	// The SKU of the gallery image.
	Sku *string `pulumi:"sku"`
	// The version of the gallery image.
	Version *string `pulumi:"version"`
}

// GalleryImageReferenceInput is an input type that accepts GalleryImageReferenceArgs and GalleryImageReferenceOutput values.
// You can construct a concrete instance of `GalleryImageReferenceInput` via:
//
//          GalleryImageReferenceArgs{...}
type GalleryImageReferenceInput interface {
	pulumi.Input

	ToGalleryImageReferenceOutput() GalleryImageReferenceOutput
	ToGalleryImageReferenceOutputWithContext(context.Context) GalleryImageReferenceOutput
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceArgs struct {
	// The offer of the gallery image.
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// The OS type of the gallery image.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The publisher of the gallery image.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// The SKU of the gallery image.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// The version of the gallery image.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GalleryImageReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageReference)(nil)).Elem()
}

func (i GalleryImageReferenceArgs) ToGalleryImageReferenceOutput() GalleryImageReferenceOutput {
	return i.ToGalleryImageReferenceOutputWithContext(context.Background())
}

func (i GalleryImageReferenceArgs) ToGalleryImageReferenceOutputWithContext(ctx context.Context) GalleryImageReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferenceOutput)
}

func (i GalleryImageReferenceArgs) ToGalleryImageReferencePtrOutput() GalleryImageReferencePtrOutput {
	return i.ToGalleryImageReferencePtrOutputWithContext(context.Background())
}

func (i GalleryImageReferenceArgs) ToGalleryImageReferencePtrOutputWithContext(ctx context.Context) GalleryImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferenceOutput).ToGalleryImageReferencePtrOutputWithContext(ctx)
}

// GalleryImageReferencePtrInput is an input type that accepts GalleryImageReferenceArgs, GalleryImageReferencePtr and GalleryImageReferencePtrOutput values.
// You can construct a concrete instance of `GalleryImageReferencePtrInput` via:
//
//          GalleryImageReferenceArgs{...}
//
//  or:
//
//          nil
type GalleryImageReferencePtrInput interface {
	pulumi.Input

	ToGalleryImageReferencePtrOutput() GalleryImageReferencePtrOutput
	ToGalleryImageReferencePtrOutputWithContext(context.Context) GalleryImageReferencePtrOutput
}

type galleryImageReferencePtrType GalleryImageReferenceArgs

func GalleryImageReferencePtr(v *GalleryImageReferenceArgs) GalleryImageReferencePtrInput {
	return (*galleryImageReferencePtrType)(v)
}

func (*galleryImageReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageReference)(nil)).Elem()
}

func (i *galleryImageReferencePtrType) ToGalleryImageReferencePtrOutput() GalleryImageReferencePtrOutput {
	return i.ToGalleryImageReferencePtrOutputWithContext(context.Background())
}

func (i *galleryImageReferencePtrType) ToGalleryImageReferencePtrOutputWithContext(ctx context.Context) GalleryImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferencePtrOutput)
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceOutput struct{ *pulumi.OutputState }

func (GalleryImageReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageReference)(nil)).Elem()
}

func (o GalleryImageReferenceOutput) ToGalleryImageReferenceOutput() GalleryImageReferenceOutput {
	return o
}

func (o GalleryImageReferenceOutput) ToGalleryImageReferenceOutputWithContext(ctx context.Context) GalleryImageReferenceOutput {
	return o
}

func (o GalleryImageReferenceOutput) ToGalleryImageReferencePtrOutput() GalleryImageReferencePtrOutput {
	return o.ToGalleryImageReferencePtrOutputWithContext(context.Background())
}

func (o GalleryImageReferenceOutput) ToGalleryImageReferencePtrOutputWithContext(ctx context.Context) GalleryImageReferencePtrOutput {
	return o.ApplyT(func(v GalleryImageReference) *GalleryImageReference {
		return &v
	}).(GalleryImageReferencePtrOutput)
}

// The offer of the gallery image.
func (o GalleryImageReferenceOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReference) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// The OS type of the gallery image.
func (o GalleryImageReferenceOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReference) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The publisher of the gallery image.
func (o GalleryImageReferenceOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReference) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// The SKU of the gallery image.
func (o GalleryImageReferenceOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReference) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// The version of the gallery image.
func (o GalleryImageReferenceOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReference) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GalleryImageReferencePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageReference)(nil)).Elem()
}

func (o GalleryImageReferencePtrOutput) ToGalleryImageReferencePtrOutput() GalleryImageReferencePtrOutput {
	return o
}

func (o GalleryImageReferencePtrOutput) ToGalleryImageReferencePtrOutputWithContext(ctx context.Context) GalleryImageReferencePtrOutput {
	return o
}

func (o GalleryImageReferencePtrOutput) Elem() GalleryImageReferenceOutput {
	return o.ApplyT(func(v *GalleryImageReference) GalleryImageReference { return *v }).(GalleryImageReferenceOutput)
}

// The offer of the gallery image.
func (o GalleryImageReferencePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Offer
	}).(pulumi.StringPtrOutput)
}

// The OS type of the gallery image.
func (o GalleryImageReferencePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReference) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The publisher of the gallery image.
func (o GalleryImageReferencePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The SKU of the gallery image.
func (o GalleryImageReferencePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// The version of the gallery image.
func (o GalleryImageReferencePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceInvokeResponse struct {
	// The offer of the gallery image.
	Offer *string `pulumi:"offer"`
	// The OS type of the gallery image.
	OsType *string `pulumi:"osType"`
	// The publisher of the gallery image.
	Publisher *string `pulumi:"publisher"`
	// The SKU of the gallery image.
	Sku *string `pulumi:"sku"`
	// The version of the gallery image.
	Version *string `pulumi:"version"`
}

// GalleryImageReferenceInvokeResponseInput is an input type that accepts GalleryImageReferenceInvokeResponseArgs and GalleryImageReferenceInvokeResponseOutput values.
// You can construct a concrete instance of `GalleryImageReferenceInvokeResponseInput` via:
//
//          GalleryImageReferenceInvokeResponseArgs{...}
type GalleryImageReferenceInvokeResponseInput interface {
	pulumi.Input

	ToGalleryImageReferenceInvokeResponseOutput() GalleryImageReferenceInvokeResponseOutput
	ToGalleryImageReferenceInvokeResponseOutputWithContext(context.Context) GalleryImageReferenceInvokeResponseOutput
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceInvokeResponseArgs struct {
	// The offer of the gallery image.
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// The OS type of the gallery image.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The publisher of the gallery image.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// The SKU of the gallery image.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// The version of the gallery image.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GalleryImageReferenceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageReferenceInvokeResponse)(nil)).Elem()
}

func (i GalleryImageReferenceInvokeResponseArgs) ToGalleryImageReferenceInvokeResponseOutput() GalleryImageReferenceInvokeResponseOutput {
	return i.ToGalleryImageReferenceInvokeResponseOutputWithContext(context.Background())
}

func (i GalleryImageReferenceInvokeResponseArgs) ToGalleryImageReferenceInvokeResponseOutputWithContext(ctx context.Context) GalleryImageReferenceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferenceInvokeResponseOutput)
}

func (i GalleryImageReferenceInvokeResponseArgs) ToGalleryImageReferenceInvokeResponsePtrOutput() GalleryImageReferenceInvokeResponsePtrOutput {
	return i.ToGalleryImageReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i GalleryImageReferenceInvokeResponseArgs) ToGalleryImageReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferenceInvokeResponseOutput).ToGalleryImageReferenceInvokeResponsePtrOutputWithContext(ctx)
}

// GalleryImageReferenceInvokeResponsePtrInput is an input type that accepts GalleryImageReferenceInvokeResponseArgs, GalleryImageReferenceInvokeResponsePtr and GalleryImageReferenceInvokeResponsePtrOutput values.
// You can construct a concrete instance of `GalleryImageReferenceInvokeResponsePtrInput` via:
//
//          GalleryImageReferenceInvokeResponseArgs{...}
//
//  or:
//
//          nil
type GalleryImageReferenceInvokeResponsePtrInput interface {
	pulumi.Input

	ToGalleryImageReferenceInvokeResponsePtrOutput() GalleryImageReferenceInvokeResponsePtrOutput
	ToGalleryImageReferenceInvokeResponsePtrOutputWithContext(context.Context) GalleryImageReferenceInvokeResponsePtrOutput
}

type galleryImageReferenceInvokeResponsePtrType GalleryImageReferenceInvokeResponseArgs

func GalleryImageReferenceInvokeResponsePtr(v *GalleryImageReferenceInvokeResponseArgs) GalleryImageReferenceInvokeResponsePtrInput {
	return (*galleryImageReferenceInvokeResponsePtrType)(v)
}

func (*galleryImageReferenceInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageReferenceInvokeResponse)(nil)).Elem()
}

func (i *galleryImageReferenceInvokeResponsePtrType) ToGalleryImageReferenceInvokeResponsePtrOutput() GalleryImageReferenceInvokeResponsePtrOutput {
	return i.ToGalleryImageReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *galleryImageReferenceInvokeResponsePtrType) ToGalleryImageReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferenceInvokeResponsePtrOutput)
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceInvokeResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageReferenceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageReferenceInvokeResponse)(nil)).Elem()
}

func (o GalleryImageReferenceInvokeResponseOutput) ToGalleryImageReferenceInvokeResponseOutput() GalleryImageReferenceInvokeResponseOutput {
	return o
}

func (o GalleryImageReferenceInvokeResponseOutput) ToGalleryImageReferenceInvokeResponseOutputWithContext(ctx context.Context) GalleryImageReferenceInvokeResponseOutput {
	return o
}

func (o GalleryImageReferenceInvokeResponseOutput) ToGalleryImageReferenceInvokeResponsePtrOutput() GalleryImageReferenceInvokeResponsePtrOutput {
	return o.ToGalleryImageReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (o GalleryImageReferenceInvokeResponseOutput) ToGalleryImageReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceInvokeResponse) *GalleryImageReferenceInvokeResponse {
		return &v
	}).(GalleryImageReferenceInvokeResponsePtrOutput)
}

// The offer of the gallery image.
func (o GalleryImageReferenceInvokeResponseOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceInvokeResponse) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// The OS type of the gallery image.
func (o GalleryImageReferenceInvokeResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceInvokeResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The publisher of the gallery image.
func (o GalleryImageReferenceInvokeResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceInvokeResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// The SKU of the gallery image.
func (o GalleryImageReferenceInvokeResponseOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceInvokeResponse) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// The version of the gallery image.
func (o GalleryImageReferenceInvokeResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceInvokeResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GalleryImageReferenceInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageReferenceInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageReferenceInvokeResponse)(nil)).Elem()
}

func (o GalleryImageReferenceInvokeResponsePtrOutput) ToGalleryImageReferenceInvokeResponsePtrOutput() GalleryImageReferenceInvokeResponsePtrOutput {
	return o
}

func (o GalleryImageReferenceInvokeResponsePtrOutput) ToGalleryImageReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceInvokeResponsePtrOutput {
	return o
}

func (o GalleryImageReferenceInvokeResponsePtrOutput) Elem() GalleryImageReferenceInvokeResponseOutput {
	return o.ApplyT(func(v *GalleryImageReferenceInvokeResponse) GalleryImageReferenceInvokeResponse { return *v }).(GalleryImageReferenceInvokeResponseOutput)
}

// The offer of the gallery image.
func (o GalleryImageReferenceInvokeResponsePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Offer
	}).(pulumi.StringPtrOutput)
}

// The OS type of the gallery image.
func (o GalleryImageReferenceInvokeResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The publisher of the gallery image.
func (o GalleryImageReferenceInvokeResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The SKU of the gallery image.
func (o GalleryImageReferenceInvokeResponsePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// The version of the gallery image.
func (o GalleryImageReferenceInvokeResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceResponse struct {
	// The offer of the gallery image.
	Offer *string `pulumi:"offer"`
	// The OS type of the gallery image.
	OsType *string `pulumi:"osType"`
	// The publisher of the gallery image.
	Publisher *string `pulumi:"publisher"`
	// The SKU of the gallery image.
	Sku *string `pulumi:"sku"`
	// The version of the gallery image.
	Version *string `pulumi:"version"`
}

// GalleryImageReferenceResponseInput is an input type that accepts GalleryImageReferenceResponseArgs and GalleryImageReferenceResponseOutput values.
// You can construct a concrete instance of `GalleryImageReferenceResponseInput` via:
//
//          GalleryImageReferenceResponseArgs{...}
type GalleryImageReferenceResponseInput interface {
	pulumi.Input

	ToGalleryImageReferenceResponseOutput() GalleryImageReferenceResponseOutput
	ToGalleryImageReferenceResponseOutputWithContext(context.Context) GalleryImageReferenceResponseOutput
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceResponseArgs struct {
	// The offer of the gallery image.
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// The OS type of the gallery image.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The publisher of the gallery image.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// The SKU of the gallery image.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// The version of the gallery image.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GalleryImageReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageReferenceResponse)(nil)).Elem()
}

func (i GalleryImageReferenceResponseArgs) ToGalleryImageReferenceResponseOutput() GalleryImageReferenceResponseOutput {
	return i.ToGalleryImageReferenceResponseOutputWithContext(context.Background())
}

func (i GalleryImageReferenceResponseArgs) ToGalleryImageReferenceResponseOutputWithContext(ctx context.Context) GalleryImageReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferenceResponseOutput)
}

func (i GalleryImageReferenceResponseArgs) ToGalleryImageReferenceResponsePtrOutput() GalleryImageReferenceResponsePtrOutput {
	return i.ToGalleryImageReferenceResponsePtrOutputWithContext(context.Background())
}

func (i GalleryImageReferenceResponseArgs) ToGalleryImageReferenceResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferenceResponseOutput).ToGalleryImageReferenceResponsePtrOutputWithContext(ctx)
}

// GalleryImageReferenceResponsePtrInput is an input type that accepts GalleryImageReferenceResponseArgs, GalleryImageReferenceResponsePtr and GalleryImageReferenceResponsePtrOutput values.
// You can construct a concrete instance of `GalleryImageReferenceResponsePtrInput` via:
//
//          GalleryImageReferenceResponseArgs{...}
//
//  or:
//
//          nil
type GalleryImageReferenceResponsePtrInput interface {
	pulumi.Input

	ToGalleryImageReferenceResponsePtrOutput() GalleryImageReferenceResponsePtrOutput
	ToGalleryImageReferenceResponsePtrOutputWithContext(context.Context) GalleryImageReferenceResponsePtrOutput
}

type galleryImageReferenceResponsePtrType GalleryImageReferenceResponseArgs

func GalleryImageReferenceResponsePtr(v *GalleryImageReferenceResponseArgs) GalleryImageReferenceResponsePtrInput {
	return (*galleryImageReferenceResponsePtrType)(v)
}

func (*galleryImageReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageReferenceResponse)(nil)).Elem()
}

func (i *galleryImageReferenceResponsePtrType) ToGalleryImageReferenceResponsePtrOutput() GalleryImageReferenceResponsePtrOutput {
	return i.ToGalleryImageReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *galleryImageReferenceResponsePtrType) ToGalleryImageReferenceResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferenceResponsePtrOutput)
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageReferenceResponse)(nil)).Elem()
}

func (o GalleryImageReferenceResponseOutput) ToGalleryImageReferenceResponseOutput() GalleryImageReferenceResponseOutput {
	return o
}

func (o GalleryImageReferenceResponseOutput) ToGalleryImageReferenceResponseOutputWithContext(ctx context.Context) GalleryImageReferenceResponseOutput {
	return o
}

func (o GalleryImageReferenceResponseOutput) ToGalleryImageReferenceResponsePtrOutput() GalleryImageReferenceResponsePtrOutput {
	return o.ToGalleryImageReferenceResponsePtrOutputWithContext(context.Background())
}

func (o GalleryImageReferenceResponseOutput) ToGalleryImageReferenceResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *GalleryImageReferenceResponse {
		return &v
	}).(GalleryImageReferenceResponsePtrOutput)
}

// The offer of the gallery image.
func (o GalleryImageReferenceResponseOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// The OS type of the gallery image.
func (o GalleryImageReferenceResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The publisher of the gallery image.
func (o GalleryImageReferenceResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// The SKU of the gallery image.
func (o GalleryImageReferenceResponseOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// The version of the gallery image.
func (o GalleryImageReferenceResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GalleryImageReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageReferenceResponse)(nil)).Elem()
}

func (o GalleryImageReferenceResponsePtrOutput) ToGalleryImageReferenceResponsePtrOutput() GalleryImageReferenceResponsePtrOutput {
	return o
}

func (o GalleryImageReferenceResponsePtrOutput) ToGalleryImageReferenceResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceResponsePtrOutput {
	return o
}

func (o GalleryImageReferenceResponsePtrOutput) Elem() GalleryImageReferenceResponseOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) GalleryImageReferenceResponse { return *v }).(GalleryImageReferenceResponseOutput)
}

// The offer of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Offer
	}).(pulumi.StringPtrOutput)
}

// The OS type of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The publisher of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The SKU of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// The version of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Properties of an hourly schedule.
type HourDetails struct {
	// Minutes of the hour the schedule will run.
	Minute *int `pulumi:"minute"`
}

// HourDetailsInput is an input type that accepts HourDetailsArgs and HourDetailsOutput values.
// You can construct a concrete instance of `HourDetailsInput` via:
//
//          HourDetailsArgs{...}
type HourDetailsInput interface {
	pulumi.Input

	ToHourDetailsOutput() HourDetailsOutput
	ToHourDetailsOutputWithContext(context.Context) HourDetailsOutput
}

// Properties of an hourly schedule.
type HourDetailsArgs struct {
	// Minutes of the hour the schedule will run.
	Minute pulumi.IntPtrInput `pulumi:"minute"`
}

func (HourDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HourDetails)(nil)).Elem()
}

func (i HourDetailsArgs) ToHourDetailsOutput() HourDetailsOutput {
	return i.ToHourDetailsOutputWithContext(context.Background())
}

func (i HourDetailsArgs) ToHourDetailsOutputWithContext(ctx context.Context) HourDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourDetailsOutput)
}

func (i HourDetailsArgs) ToHourDetailsPtrOutput() HourDetailsPtrOutput {
	return i.ToHourDetailsPtrOutputWithContext(context.Background())
}

func (i HourDetailsArgs) ToHourDetailsPtrOutputWithContext(ctx context.Context) HourDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourDetailsOutput).ToHourDetailsPtrOutputWithContext(ctx)
}

// HourDetailsPtrInput is an input type that accepts HourDetailsArgs, HourDetailsPtr and HourDetailsPtrOutput values.
// You can construct a concrete instance of `HourDetailsPtrInput` via:
//
//          HourDetailsArgs{...}
//
//  or:
//
//          nil
type HourDetailsPtrInput interface {
	pulumi.Input

	ToHourDetailsPtrOutput() HourDetailsPtrOutput
	ToHourDetailsPtrOutputWithContext(context.Context) HourDetailsPtrOutput
}

type hourDetailsPtrType HourDetailsArgs

func HourDetailsPtr(v *HourDetailsArgs) HourDetailsPtrInput {
	return (*hourDetailsPtrType)(v)
}

func (*hourDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HourDetails)(nil)).Elem()
}

func (i *hourDetailsPtrType) ToHourDetailsPtrOutput() HourDetailsPtrOutput {
	return i.ToHourDetailsPtrOutputWithContext(context.Background())
}

func (i *hourDetailsPtrType) ToHourDetailsPtrOutputWithContext(ctx context.Context) HourDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourDetailsPtrOutput)
}

// Properties of an hourly schedule.
type HourDetailsOutput struct{ *pulumi.OutputState }

func (HourDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HourDetails)(nil)).Elem()
}

func (o HourDetailsOutput) ToHourDetailsOutput() HourDetailsOutput {
	return o
}

func (o HourDetailsOutput) ToHourDetailsOutputWithContext(ctx context.Context) HourDetailsOutput {
	return o
}

func (o HourDetailsOutput) ToHourDetailsPtrOutput() HourDetailsPtrOutput {
	return o.ToHourDetailsPtrOutputWithContext(context.Background())
}

func (o HourDetailsOutput) ToHourDetailsPtrOutputWithContext(ctx context.Context) HourDetailsPtrOutput {
	return o.ApplyT(func(v HourDetails) *HourDetails {
		return &v
	}).(HourDetailsPtrOutput)
}

// Minutes of the hour the schedule will run.
func (o HourDetailsOutput) Minute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HourDetails) *int { return v.Minute }).(pulumi.IntPtrOutput)
}

type HourDetailsPtrOutput struct{ *pulumi.OutputState }

func (HourDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HourDetails)(nil)).Elem()
}

func (o HourDetailsPtrOutput) ToHourDetailsPtrOutput() HourDetailsPtrOutput {
	return o
}

func (o HourDetailsPtrOutput) ToHourDetailsPtrOutputWithContext(ctx context.Context) HourDetailsPtrOutput {
	return o
}

func (o HourDetailsPtrOutput) Elem() HourDetailsOutput {
	return o.ApplyT(func(v *HourDetails) HourDetails { return *v }).(HourDetailsOutput)
}

// Minutes of the hour the schedule will run.
func (o HourDetailsPtrOutput) Minute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HourDetails) *int {
		if v == nil {
			return nil
		}
		return v.Minute
	}).(pulumi.IntPtrOutput)
}

// Properties of an hourly schedule.
type HourDetailsInvokeResponse struct {
	// Minutes of the hour the schedule will run.
	Minute *int `pulumi:"minute"`
}

// HourDetailsInvokeResponseInput is an input type that accepts HourDetailsInvokeResponseArgs and HourDetailsInvokeResponseOutput values.
// You can construct a concrete instance of `HourDetailsInvokeResponseInput` via:
//
//          HourDetailsInvokeResponseArgs{...}
type HourDetailsInvokeResponseInput interface {
	pulumi.Input

	ToHourDetailsInvokeResponseOutput() HourDetailsInvokeResponseOutput
	ToHourDetailsInvokeResponseOutputWithContext(context.Context) HourDetailsInvokeResponseOutput
}

// Properties of an hourly schedule.
type HourDetailsInvokeResponseArgs struct {
	// Minutes of the hour the schedule will run.
	Minute pulumi.IntPtrInput `pulumi:"minute"`
}

func (HourDetailsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HourDetailsInvokeResponse)(nil)).Elem()
}

func (i HourDetailsInvokeResponseArgs) ToHourDetailsInvokeResponseOutput() HourDetailsInvokeResponseOutput {
	return i.ToHourDetailsInvokeResponseOutputWithContext(context.Background())
}

func (i HourDetailsInvokeResponseArgs) ToHourDetailsInvokeResponseOutputWithContext(ctx context.Context) HourDetailsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourDetailsInvokeResponseOutput)
}

func (i HourDetailsInvokeResponseArgs) ToHourDetailsInvokeResponsePtrOutput() HourDetailsInvokeResponsePtrOutput {
	return i.ToHourDetailsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i HourDetailsInvokeResponseArgs) ToHourDetailsInvokeResponsePtrOutputWithContext(ctx context.Context) HourDetailsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourDetailsInvokeResponseOutput).ToHourDetailsInvokeResponsePtrOutputWithContext(ctx)
}

// HourDetailsInvokeResponsePtrInput is an input type that accepts HourDetailsInvokeResponseArgs, HourDetailsInvokeResponsePtr and HourDetailsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `HourDetailsInvokeResponsePtrInput` via:
//
//          HourDetailsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type HourDetailsInvokeResponsePtrInput interface {
	pulumi.Input

	ToHourDetailsInvokeResponsePtrOutput() HourDetailsInvokeResponsePtrOutput
	ToHourDetailsInvokeResponsePtrOutputWithContext(context.Context) HourDetailsInvokeResponsePtrOutput
}

type hourDetailsInvokeResponsePtrType HourDetailsInvokeResponseArgs

func HourDetailsInvokeResponsePtr(v *HourDetailsInvokeResponseArgs) HourDetailsInvokeResponsePtrInput {
	return (*hourDetailsInvokeResponsePtrType)(v)
}

func (*hourDetailsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HourDetailsInvokeResponse)(nil)).Elem()
}

func (i *hourDetailsInvokeResponsePtrType) ToHourDetailsInvokeResponsePtrOutput() HourDetailsInvokeResponsePtrOutput {
	return i.ToHourDetailsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *hourDetailsInvokeResponsePtrType) ToHourDetailsInvokeResponsePtrOutputWithContext(ctx context.Context) HourDetailsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourDetailsInvokeResponsePtrOutput)
}

// Properties of an hourly schedule.
type HourDetailsInvokeResponseOutput struct{ *pulumi.OutputState }

func (HourDetailsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HourDetailsInvokeResponse)(nil)).Elem()
}

func (o HourDetailsInvokeResponseOutput) ToHourDetailsInvokeResponseOutput() HourDetailsInvokeResponseOutput {
	return o
}

func (o HourDetailsInvokeResponseOutput) ToHourDetailsInvokeResponseOutputWithContext(ctx context.Context) HourDetailsInvokeResponseOutput {
	return o
}

func (o HourDetailsInvokeResponseOutput) ToHourDetailsInvokeResponsePtrOutput() HourDetailsInvokeResponsePtrOutput {
	return o.ToHourDetailsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o HourDetailsInvokeResponseOutput) ToHourDetailsInvokeResponsePtrOutputWithContext(ctx context.Context) HourDetailsInvokeResponsePtrOutput {
	return o.ApplyT(func(v HourDetailsInvokeResponse) *HourDetailsInvokeResponse {
		return &v
	}).(HourDetailsInvokeResponsePtrOutput)
}

// Minutes of the hour the schedule will run.
func (o HourDetailsInvokeResponseOutput) Minute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HourDetailsInvokeResponse) *int { return v.Minute }).(pulumi.IntPtrOutput)
}

type HourDetailsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (HourDetailsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HourDetailsInvokeResponse)(nil)).Elem()
}

func (o HourDetailsInvokeResponsePtrOutput) ToHourDetailsInvokeResponsePtrOutput() HourDetailsInvokeResponsePtrOutput {
	return o
}

func (o HourDetailsInvokeResponsePtrOutput) ToHourDetailsInvokeResponsePtrOutputWithContext(ctx context.Context) HourDetailsInvokeResponsePtrOutput {
	return o
}

func (o HourDetailsInvokeResponsePtrOutput) Elem() HourDetailsInvokeResponseOutput {
	return o.ApplyT(func(v *HourDetailsInvokeResponse) HourDetailsInvokeResponse { return *v }).(HourDetailsInvokeResponseOutput)
}

// Minutes of the hour the schedule will run.
func (o HourDetailsInvokeResponsePtrOutput) Minute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HourDetailsInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.Minute
	}).(pulumi.IntPtrOutput)
}

// Properties of an hourly schedule.
type HourDetailsResponse struct {
	// Minutes of the hour the schedule will run.
	Minute *int `pulumi:"minute"`
}

// HourDetailsResponseInput is an input type that accepts HourDetailsResponseArgs and HourDetailsResponseOutput values.
// You can construct a concrete instance of `HourDetailsResponseInput` via:
//
//          HourDetailsResponseArgs{...}
type HourDetailsResponseInput interface {
	pulumi.Input

	ToHourDetailsResponseOutput() HourDetailsResponseOutput
	ToHourDetailsResponseOutputWithContext(context.Context) HourDetailsResponseOutput
}

// Properties of an hourly schedule.
type HourDetailsResponseArgs struct {
	// Minutes of the hour the schedule will run.
	Minute pulumi.IntPtrInput `pulumi:"minute"`
}

func (HourDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HourDetailsResponse)(nil)).Elem()
}

func (i HourDetailsResponseArgs) ToHourDetailsResponseOutput() HourDetailsResponseOutput {
	return i.ToHourDetailsResponseOutputWithContext(context.Background())
}

func (i HourDetailsResponseArgs) ToHourDetailsResponseOutputWithContext(ctx context.Context) HourDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourDetailsResponseOutput)
}

func (i HourDetailsResponseArgs) ToHourDetailsResponsePtrOutput() HourDetailsResponsePtrOutput {
	return i.ToHourDetailsResponsePtrOutputWithContext(context.Background())
}

func (i HourDetailsResponseArgs) ToHourDetailsResponsePtrOutputWithContext(ctx context.Context) HourDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourDetailsResponseOutput).ToHourDetailsResponsePtrOutputWithContext(ctx)
}

// HourDetailsResponsePtrInput is an input type that accepts HourDetailsResponseArgs, HourDetailsResponsePtr and HourDetailsResponsePtrOutput values.
// You can construct a concrete instance of `HourDetailsResponsePtrInput` via:
//
//          HourDetailsResponseArgs{...}
//
//  or:
//
//          nil
type HourDetailsResponsePtrInput interface {
	pulumi.Input

	ToHourDetailsResponsePtrOutput() HourDetailsResponsePtrOutput
	ToHourDetailsResponsePtrOutputWithContext(context.Context) HourDetailsResponsePtrOutput
}

type hourDetailsResponsePtrType HourDetailsResponseArgs

func HourDetailsResponsePtr(v *HourDetailsResponseArgs) HourDetailsResponsePtrInput {
	return (*hourDetailsResponsePtrType)(v)
}

func (*hourDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HourDetailsResponse)(nil)).Elem()
}

func (i *hourDetailsResponsePtrType) ToHourDetailsResponsePtrOutput() HourDetailsResponsePtrOutput {
	return i.ToHourDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *hourDetailsResponsePtrType) ToHourDetailsResponsePtrOutputWithContext(ctx context.Context) HourDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourDetailsResponsePtrOutput)
}

// Properties of an hourly schedule.
type HourDetailsResponseOutput struct{ *pulumi.OutputState }

func (HourDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HourDetailsResponse)(nil)).Elem()
}

func (o HourDetailsResponseOutput) ToHourDetailsResponseOutput() HourDetailsResponseOutput {
	return o
}

func (o HourDetailsResponseOutput) ToHourDetailsResponseOutputWithContext(ctx context.Context) HourDetailsResponseOutput {
	return o
}

func (o HourDetailsResponseOutput) ToHourDetailsResponsePtrOutput() HourDetailsResponsePtrOutput {
	return o.ToHourDetailsResponsePtrOutputWithContext(context.Background())
}

func (o HourDetailsResponseOutput) ToHourDetailsResponsePtrOutputWithContext(ctx context.Context) HourDetailsResponsePtrOutput {
	return o.ApplyT(func(v HourDetailsResponse) *HourDetailsResponse {
		return &v
	}).(HourDetailsResponsePtrOutput)
}

// Minutes of the hour the schedule will run.
func (o HourDetailsResponseOutput) Minute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HourDetailsResponse) *int { return v.Minute }).(pulumi.IntPtrOutput)
}

type HourDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (HourDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HourDetailsResponse)(nil)).Elem()
}

func (o HourDetailsResponsePtrOutput) ToHourDetailsResponsePtrOutput() HourDetailsResponsePtrOutput {
	return o
}

func (o HourDetailsResponsePtrOutput) ToHourDetailsResponsePtrOutputWithContext(ctx context.Context) HourDetailsResponsePtrOutput {
	return o
}

func (o HourDetailsResponsePtrOutput) Elem() HourDetailsResponseOutput {
	return o.ApplyT(func(v *HourDetailsResponse) HourDetailsResponse { return *v }).(HourDetailsResponseOutput)
}

// Minutes of the hour the schedule will run.
func (o HourDetailsResponsePtrOutput) Minute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HourDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Minute
	}).(pulumi.IntPtrOutput)
}

// Properties of a managed identity
type IdentityProperties struct {
	// The client secret URL of the identity.
	ClientSecretUrl *string `pulumi:"clientSecretUrl"`
	// The principal id of resource identity.
	PrincipalId *string `pulumi:"principalId"`
	// The tenant identifier of resource.
	TenantId *string `pulumi:"tenantId"`
	// Managed identity.
	Type *string `pulumi:"type"`
}

// IdentityPropertiesInput is an input type that accepts IdentityPropertiesArgs and IdentityPropertiesOutput values.
// You can construct a concrete instance of `IdentityPropertiesInput` via:
//
//          IdentityPropertiesArgs{...}
type IdentityPropertiesInput interface {
	pulumi.Input

	ToIdentityPropertiesOutput() IdentityPropertiesOutput
	ToIdentityPropertiesOutputWithContext(context.Context) IdentityPropertiesOutput
}

// Properties of a managed identity
type IdentityPropertiesArgs struct {
	// The client secret URL of the identity.
	ClientSecretUrl pulumi.StringPtrInput `pulumi:"clientSecretUrl"`
	// The principal id of resource identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The tenant identifier of resource.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Managed identity.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProperties)(nil)).Elem()
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesOutput() IdentityPropertiesOutput {
	return i.ToIdentityPropertiesOutputWithContext(context.Background())
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesOutputWithContext(ctx context.Context) IdentityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesOutput)
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return i.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesOutput).ToIdentityPropertiesPtrOutputWithContext(ctx)
}

// IdentityPropertiesPtrInput is an input type that accepts IdentityPropertiesArgs, IdentityPropertiesPtr and IdentityPropertiesPtrOutput values.
// You can construct a concrete instance of `IdentityPropertiesPtrInput` via:
//
//          IdentityPropertiesArgs{...}
//
//  or:
//
//          nil
type IdentityPropertiesPtrInput interface {
	pulumi.Input

	ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput
	ToIdentityPropertiesPtrOutputWithContext(context.Context) IdentityPropertiesPtrOutput
}

type identityPropertiesPtrType IdentityPropertiesArgs

func IdentityPropertiesPtr(v *IdentityPropertiesArgs) IdentityPropertiesPtrInput {
	return (*identityPropertiesPtrType)(v)
}

func (*identityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProperties)(nil)).Elem()
}

func (i *identityPropertiesPtrType) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return i.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i *identityPropertiesPtrType) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesPtrOutput)
}

// Properties of a managed identity
type IdentityPropertiesOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProperties)(nil)).Elem()
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesOutput() IdentityPropertiesOutput {
	return o
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesOutputWithContext(ctx context.Context) IdentityPropertiesOutput {
	return o
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return o.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *IdentityProperties {
		return &v
	}).(IdentityPropertiesPtrOutput)
}

// The client secret URL of the identity.
func (o IdentityPropertiesOutput) ClientSecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *string { return v.ClientSecretUrl }).(pulumi.StringPtrOutput)
}

// The principal id of resource identity.
func (o IdentityPropertiesOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The tenant identifier of resource.
func (o IdentityPropertiesOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Managed identity.
func (o IdentityPropertiesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProperties)(nil)).Elem()
}

func (o IdentityPropertiesPtrOutput) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return o
}

func (o IdentityPropertiesPtrOutput) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return o
}

func (o IdentityPropertiesPtrOutput) Elem() IdentityPropertiesOutput {
	return o.ApplyT(func(v *IdentityProperties) IdentityProperties { return *v }).(IdentityPropertiesOutput)
}

// The client secret URL of the identity.
func (o IdentityPropertiesPtrOutput) ClientSecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretUrl
	}).(pulumi.StringPtrOutput)
}

// The principal id of resource identity.
func (o IdentityPropertiesPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant identifier of resource.
func (o IdentityPropertiesPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Managed identity.
func (o IdentityPropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of a managed identity
type IdentityPropertiesInvokeResponse struct {
	// The client secret URL of the identity.
	ClientSecretUrl *string `pulumi:"clientSecretUrl"`
	// The principal id of resource identity.
	PrincipalId *string `pulumi:"principalId"`
	// The tenant identifier of resource.
	TenantId *string `pulumi:"tenantId"`
	// Managed identity.
	Type *string `pulumi:"type"`
}

// IdentityPropertiesInvokeResponseInput is an input type that accepts IdentityPropertiesInvokeResponseArgs and IdentityPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `IdentityPropertiesInvokeResponseInput` via:
//
//          IdentityPropertiesInvokeResponseArgs{...}
type IdentityPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToIdentityPropertiesInvokeResponseOutput() IdentityPropertiesInvokeResponseOutput
	ToIdentityPropertiesInvokeResponseOutputWithContext(context.Context) IdentityPropertiesInvokeResponseOutput
}

// Properties of a managed identity
type IdentityPropertiesInvokeResponseArgs struct {
	// The client secret URL of the identity.
	ClientSecretUrl pulumi.StringPtrInput `pulumi:"clientSecretUrl"`
	// The principal id of resource identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The tenant identifier of resource.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Managed identity.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesInvokeResponse)(nil)).Elem()
}

func (i IdentityPropertiesInvokeResponseArgs) ToIdentityPropertiesInvokeResponseOutput() IdentityPropertiesInvokeResponseOutput {
	return i.ToIdentityPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i IdentityPropertiesInvokeResponseArgs) ToIdentityPropertiesInvokeResponseOutputWithContext(ctx context.Context) IdentityPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesInvokeResponseOutput)
}

// Properties of a managed identity
type IdentityPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesInvokeResponse)(nil)).Elem()
}

func (o IdentityPropertiesInvokeResponseOutput) ToIdentityPropertiesInvokeResponseOutput() IdentityPropertiesInvokeResponseOutput {
	return o
}

func (o IdentityPropertiesInvokeResponseOutput) ToIdentityPropertiesInvokeResponseOutputWithContext(ctx context.Context) IdentityPropertiesInvokeResponseOutput {
	return o
}

// The client secret URL of the identity.
func (o IdentityPropertiesInvokeResponseOutput) ClientSecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesInvokeResponse) *string { return v.ClientSecretUrl }).(pulumi.StringPtrOutput)
}

// The principal id of resource identity.
func (o IdentityPropertiesInvokeResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesInvokeResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The tenant identifier of resource.
func (o IdentityPropertiesInvokeResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesInvokeResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Managed identity.
func (o IdentityPropertiesInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Properties of a managed identity
type IdentityPropertiesResponse struct {
	// The client secret URL of the identity.
	ClientSecretUrl *string `pulumi:"clientSecretUrl"`
	// The principal id of resource identity.
	PrincipalId *string `pulumi:"principalId"`
	// The tenant identifier of resource.
	TenantId *string `pulumi:"tenantId"`
	// Managed identity.
	Type *string `pulumi:"type"`
}

// IdentityPropertiesResponseInput is an input type that accepts IdentityPropertiesResponseArgs and IdentityPropertiesResponseOutput values.
// You can construct a concrete instance of `IdentityPropertiesResponseInput` via:
//
//          IdentityPropertiesResponseArgs{...}
type IdentityPropertiesResponseInput interface {
	pulumi.Input

	ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput
	ToIdentityPropertiesResponseOutputWithContext(context.Context) IdentityPropertiesResponseOutput
}

// Properties of a managed identity
type IdentityPropertiesResponseArgs struct {
	// The client secret URL of the identity.
	ClientSecretUrl pulumi.StringPtrInput `pulumi:"clientSecretUrl"`
	// The principal id of resource identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The tenant identifier of resource.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Managed identity.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesResponse)(nil)).Elem()
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput {
	return i.ToIdentityPropertiesResponseOutputWithContext(context.Background())
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponseOutputWithContext(ctx context.Context) IdentityPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesResponseOutput)
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return i.ToIdentityPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesResponseOutput).ToIdentityPropertiesResponsePtrOutputWithContext(ctx)
}

// IdentityPropertiesResponsePtrInput is an input type that accepts IdentityPropertiesResponseArgs, IdentityPropertiesResponsePtr and IdentityPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `IdentityPropertiesResponsePtrInput` via:
//
//          IdentityPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type IdentityPropertiesResponsePtrInput interface {
	pulumi.Input

	ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput
	ToIdentityPropertiesResponsePtrOutputWithContext(context.Context) IdentityPropertiesResponsePtrOutput
}

type identityPropertiesResponsePtrType IdentityPropertiesResponseArgs

func IdentityPropertiesResponsePtr(v *IdentityPropertiesResponseArgs) IdentityPropertiesResponsePtrInput {
	return (*identityPropertiesResponsePtrType)(v)
}

func (*identityPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPropertiesResponse)(nil)).Elem()
}

func (i *identityPropertiesResponsePtrType) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return i.ToIdentityPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *identityPropertiesResponsePtrType) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesResponsePtrOutput)
}

// Properties of a managed identity
type IdentityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesResponse)(nil)).Elem()
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput {
	return o
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponseOutputWithContext(ctx context.Context) IdentityPropertiesResponseOutput {
	return o
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return o.ToIdentityPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *IdentityPropertiesResponse {
		return &v
	}).(IdentityPropertiesResponsePtrOutput)
}

// The client secret URL of the identity.
func (o IdentityPropertiesResponseOutput) ClientSecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *string { return v.ClientSecretUrl }).(pulumi.StringPtrOutput)
}

// The principal id of resource identity.
func (o IdentityPropertiesResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The tenant identifier of resource.
func (o IdentityPropertiesResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Managed identity.
func (o IdentityPropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPropertiesResponse)(nil)).Elem()
}

func (o IdentityPropertiesResponsePtrOutput) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return o
}

func (o IdentityPropertiesResponsePtrOutput) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return o
}

func (o IdentityPropertiesResponsePtrOutput) Elem() IdentityPropertiesResponseOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) IdentityPropertiesResponse { return *v }).(IdentityPropertiesResponseOutput)
}

// The client secret URL of the identity.
func (o IdentityPropertiesResponsePtrOutput) ClientSecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretUrl
	}).(pulumi.StringPtrOutput)
}

// The principal id of resource identity.
func (o IdentityPropertiesResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant identifier of resource.
func (o IdentityPropertiesResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Managed identity.
func (o IdentityPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.
type InboundNatRule struct {
	// The port to which the external traffic will be redirected.
	BackendPort *int `pulumi:"backendPort"`
	// The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.
	FrontendPort *int `pulumi:"frontendPort"`
	// The transport protocol for the endpoint.
	TransportProtocol *string `pulumi:"transportProtocol"`
}

// InboundNatRuleInput is an input type that accepts InboundNatRuleArgs and InboundNatRuleOutput values.
// You can construct a concrete instance of `InboundNatRuleInput` via:
//
//          InboundNatRuleArgs{...}
type InboundNatRuleInput interface {
	pulumi.Input

	ToInboundNatRuleOutput() InboundNatRuleOutput
	ToInboundNatRuleOutputWithContext(context.Context) InboundNatRuleOutput
}

// A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.
type InboundNatRuleArgs struct {
	// The port to which the external traffic will be redirected.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.
	FrontendPort pulumi.IntPtrInput `pulumi:"frontendPort"`
	// The transport protocol for the endpoint.
	TransportProtocol pulumi.StringPtrInput `pulumi:"transportProtocol"`
}

func (InboundNatRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRule)(nil)).Elem()
}

func (i InboundNatRuleArgs) ToInboundNatRuleOutput() InboundNatRuleOutput {
	return i.ToInboundNatRuleOutputWithContext(context.Background())
}

func (i InboundNatRuleArgs) ToInboundNatRuleOutputWithContext(ctx context.Context) InboundNatRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleOutput)
}

// InboundNatRuleArrayInput is an input type that accepts InboundNatRuleArray and InboundNatRuleArrayOutput values.
// You can construct a concrete instance of `InboundNatRuleArrayInput` via:
//
//          InboundNatRuleArray{ InboundNatRuleArgs{...} }
type InboundNatRuleArrayInput interface {
	pulumi.Input

	ToInboundNatRuleArrayOutput() InboundNatRuleArrayOutput
	ToInboundNatRuleArrayOutputWithContext(context.Context) InboundNatRuleArrayOutput
}

type InboundNatRuleArray []InboundNatRuleInput

func (InboundNatRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRule)(nil)).Elem()
}

func (i InboundNatRuleArray) ToInboundNatRuleArrayOutput() InboundNatRuleArrayOutput {
	return i.ToInboundNatRuleArrayOutputWithContext(context.Background())
}

func (i InboundNatRuleArray) ToInboundNatRuleArrayOutputWithContext(ctx context.Context) InboundNatRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleArrayOutput)
}

// A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.
type InboundNatRuleOutput struct{ *pulumi.OutputState }

func (InboundNatRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRule)(nil)).Elem()
}

func (o InboundNatRuleOutput) ToInboundNatRuleOutput() InboundNatRuleOutput {
	return o
}

func (o InboundNatRuleOutput) ToInboundNatRuleOutputWithContext(ctx context.Context) InboundNatRuleOutput {
	return o
}

// The port to which the external traffic will be redirected.
func (o InboundNatRuleOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRule) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.
func (o InboundNatRuleOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRule) *int { return v.FrontendPort }).(pulumi.IntPtrOutput)
}

// The transport protocol for the endpoint.
func (o InboundNatRuleOutput) TransportProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRule) *string { return v.TransportProtocol }).(pulumi.StringPtrOutput)
}

type InboundNatRuleArrayOutput struct{ *pulumi.OutputState }

func (InboundNatRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRule)(nil)).Elem()
}

func (o InboundNatRuleArrayOutput) ToInboundNatRuleArrayOutput() InboundNatRuleArrayOutput {
	return o
}

func (o InboundNatRuleArrayOutput) ToInboundNatRuleArrayOutputWithContext(ctx context.Context) InboundNatRuleArrayOutput {
	return o
}

func (o InboundNatRuleArrayOutput) Index(i pulumi.IntInput) InboundNatRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatRule {
		return vs[0].([]InboundNatRule)[vs[1].(int)]
	}).(InboundNatRuleOutput)
}

// A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.
type InboundNatRuleInvokeResponse struct {
	// The port to which the external traffic will be redirected.
	BackendPort *int `pulumi:"backendPort"`
	// The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.
	FrontendPort *int `pulumi:"frontendPort"`
	// The transport protocol for the endpoint.
	TransportProtocol *string `pulumi:"transportProtocol"`
}

// InboundNatRuleInvokeResponseInput is an input type that accepts InboundNatRuleInvokeResponseArgs and InboundNatRuleInvokeResponseOutput values.
// You can construct a concrete instance of `InboundNatRuleInvokeResponseInput` via:
//
//          InboundNatRuleInvokeResponseArgs{...}
type InboundNatRuleInvokeResponseInput interface {
	pulumi.Input

	ToInboundNatRuleInvokeResponseOutput() InboundNatRuleInvokeResponseOutput
	ToInboundNatRuleInvokeResponseOutputWithContext(context.Context) InboundNatRuleInvokeResponseOutput
}

// A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.
type InboundNatRuleInvokeResponseArgs struct {
	// The port to which the external traffic will be redirected.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.
	FrontendPort pulumi.IntPtrInput `pulumi:"frontendPort"`
	// The transport protocol for the endpoint.
	TransportProtocol pulumi.StringPtrInput `pulumi:"transportProtocol"`
}

func (InboundNatRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleInvokeResponse)(nil)).Elem()
}

func (i InboundNatRuleInvokeResponseArgs) ToInboundNatRuleInvokeResponseOutput() InboundNatRuleInvokeResponseOutput {
	return i.ToInboundNatRuleInvokeResponseOutputWithContext(context.Background())
}

func (i InboundNatRuleInvokeResponseArgs) ToInboundNatRuleInvokeResponseOutputWithContext(ctx context.Context) InboundNatRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleInvokeResponseOutput)
}

// InboundNatRuleInvokeResponseArrayInput is an input type that accepts InboundNatRuleInvokeResponseArray and InboundNatRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `InboundNatRuleInvokeResponseArrayInput` via:
//
//          InboundNatRuleInvokeResponseArray{ InboundNatRuleInvokeResponseArgs{...} }
type InboundNatRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToInboundNatRuleInvokeResponseArrayOutput() InboundNatRuleInvokeResponseArrayOutput
	ToInboundNatRuleInvokeResponseArrayOutputWithContext(context.Context) InboundNatRuleInvokeResponseArrayOutput
}

type InboundNatRuleInvokeResponseArray []InboundNatRuleInvokeResponseInput

func (InboundNatRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleInvokeResponse)(nil)).Elem()
}

func (i InboundNatRuleInvokeResponseArray) ToInboundNatRuleInvokeResponseArrayOutput() InboundNatRuleInvokeResponseArrayOutput {
	return i.ToInboundNatRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i InboundNatRuleInvokeResponseArray) ToInboundNatRuleInvokeResponseArrayOutputWithContext(ctx context.Context) InboundNatRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleInvokeResponseArrayOutput)
}

// A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.
type InboundNatRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (InboundNatRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleInvokeResponse)(nil)).Elem()
}

func (o InboundNatRuleInvokeResponseOutput) ToInboundNatRuleInvokeResponseOutput() InboundNatRuleInvokeResponseOutput {
	return o
}

func (o InboundNatRuleInvokeResponseOutput) ToInboundNatRuleInvokeResponseOutputWithContext(ctx context.Context) InboundNatRuleInvokeResponseOutput {
	return o
}

// The port to which the external traffic will be redirected.
func (o InboundNatRuleInvokeResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleInvokeResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.
func (o InboundNatRuleInvokeResponseOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleInvokeResponse) *int { return v.FrontendPort }).(pulumi.IntPtrOutput)
}

// The transport protocol for the endpoint.
func (o InboundNatRuleInvokeResponseOutput) TransportProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleInvokeResponse) *string { return v.TransportProtocol }).(pulumi.StringPtrOutput)
}

type InboundNatRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundNatRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleInvokeResponse)(nil)).Elem()
}

func (o InboundNatRuleInvokeResponseArrayOutput) ToInboundNatRuleInvokeResponseArrayOutput() InboundNatRuleInvokeResponseArrayOutput {
	return o
}

func (o InboundNatRuleInvokeResponseArrayOutput) ToInboundNatRuleInvokeResponseArrayOutputWithContext(ctx context.Context) InboundNatRuleInvokeResponseArrayOutput {
	return o
}

func (o InboundNatRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) InboundNatRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatRuleInvokeResponse {
		return vs[0].([]InboundNatRuleInvokeResponse)[vs[1].(int)]
	}).(InboundNatRuleInvokeResponseOutput)
}

// A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.
type InboundNatRuleResponse struct {
	// The port to which the external traffic will be redirected.
	BackendPort *int `pulumi:"backendPort"`
	// The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.
	FrontendPort *int `pulumi:"frontendPort"`
	// The transport protocol for the endpoint.
	TransportProtocol *string `pulumi:"transportProtocol"`
}

// InboundNatRuleResponseInput is an input type that accepts InboundNatRuleResponseArgs and InboundNatRuleResponseOutput values.
// You can construct a concrete instance of `InboundNatRuleResponseInput` via:
//
//          InboundNatRuleResponseArgs{...}
type InboundNatRuleResponseInput interface {
	pulumi.Input

	ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput
	ToInboundNatRuleResponseOutputWithContext(context.Context) InboundNatRuleResponseOutput
}

// A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.
type InboundNatRuleResponseArgs struct {
	// The port to which the external traffic will be redirected.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.
	FrontendPort pulumi.IntPtrInput `pulumi:"frontendPort"`
	// The transport protocol for the endpoint.
	TransportProtocol pulumi.StringPtrInput `pulumi:"transportProtocol"`
}

func (InboundNatRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleResponse)(nil)).Elem()
}

func (i InboundNatRuleResponseArgs) ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput {
	return i.ToInboundNatRuleResponseOutputWithContext(context.Background())
}

func (i InboundNatRuleResponseArgs) ToInboundNatRuleResponseOutputWithContext(ctx context.Context) InboundNatRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleResponseOutput)
}

// InboundNatRuleResponseArrayInput is an input type that accepts InboundNatRuleResponseArray and InboundNatRuleResponseArrayOutput values.
// You can construct a concrete instance of `InboundNatRuleResponseArrayInput` via:
//
//          InboundNatRuleResponseArray{ InboundNatRuleResponseArgs{...} }
type InboundNatRuleResponseArrayInput interface {
	pulumi.Input

	ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput
	ToInboundNatRuleResponseArrayOutputWithContext(context.Context) InboundNatRuleResponseArrayOutput
}

type InboundNatRuleResponseArray []InboundNatRuleResponseInput

func (InboundNatRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleResponse)(nil)).Elem()
}

func (i InboundNatRuleResponseArray) ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput {
	return i.ToInboundNatRuleResponseArrayOutputWithContext(context.Background())
}

func (i InboundNatRuleResponseArray) ToInboundNatRuleResponseArrayOutputWithContext(ctx context.Context) InboundNatRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleResponseArrayOutput)
}

// A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.
type InboundNatRuleResponseOutput struct{ *pulumi.OutputState }

func (InboundNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleResponse)(nil)).Elem()
}

func (o InboundNatRuleResponseOutput) ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput {
	return o
}

func (o InboundNatRuleResponseOutput) ToInboundNatRuleResponseOutputWithContext(ctx context.Context) InboundNatRuleResponseOutput {
	return o
}

// The port to which the external traffic will be redirected.
func (o InboundNatRuleResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.
func (o InboundNatRuleResponseOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.FrontendPort }).(pulumi.IntPtrOutput)
}

// The transport protocol for the endpoint.
func (o InboundNatRuleResponseOutput) TransportProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.TransportProtocol }).(pulumi.StringPtrOutput)
}

type InboundNatRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundNatRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleResponse)(nil)).Elem()
}

func (o InboundNatRuleResponseArrayOutput) ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput {
	return o
}

func (o InboundNatRuleResponseArrayOutput) ToInboundNatRuleResponseArrayOutputWithContext(ctx context.Context) InboundNatRuleResponseArrayOutput {
	return o
}

func (o InboundNatRuleResponseArrayOutput) Index(i pulumi.IntInput) InboundNatRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatRuleResponse {
		return vs[0].([]InboundNatRuleResponse)[vs[1].(int)]
	}).(InboundNatRuleResponseOutput)
}

// Properties of a lab's announcement banner
type LabAnnouncementProperties struct {
	// Is the lab announcement active/enabled at this time?
	Enabled *string `pulumi:"enabled"`
	// The time at which the announcement expires (null for never)
	ExpirationDate *string `pulumi:"expirationDate"`
	// Has this announcement expired?
	Expired *bool `pulumi:"expired"`
	// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
	Markdown *string `pulumi:"markdown"`
	// The plain text title for the lab announcement
	Title *string `pulumi:"title"`
}

// LabAnnouncementPropertiesInput is an input type that accepts LabAnnouncementPropertiesArgs and LabAnnouncementPropertiesOutput values.
// You can construct a concrete instance of `LabAnnouncementPropertiesInput` via:
//
//          LabAnnouncementPropertiesArgs{...}
type LabAnnouncementPropertiesInput interface {
	pulumi.Input

	ToLabAnnouncementPropertiesOutput() LabAnnouncementPropertiesOutput
	ToLabAnnouncementPropertiesOutputWithContext(context.Context) LabAnnouncementPropertiesOutput
}

// Properties of a lab's announcement banner
type LabAnnouncementPropertiesArgs struct {
	// Is the lab announcement active/enabled at this time?
	Enabled pulumi.StringPtrInput `pulumi:"enabled"`
	// The time at which the announcement expires (null for never)
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// Has this announcement expired?
	Expired pulumi.BoolPtrInput `pulumi:"expired"`
	// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
	Markdown pulumi.StringPtrInput `pulumi:"markdown"`
	// The plain text title for the lab announcement
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (LabAnnouncementPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabAnnouncementProperties)(nil)).Elem()
}

func (i LabAnnouncementPropertiesArgs) ToLabAnnouncementPropertiesOutput() LabAnnouncementPropertiesOutput {
	return i.ToLabAnnouncementPropertiesOutputWithContext(context.Background())
}

func (i LabAnnouncementPropertiesArgs) ToLabAnnouncementPropertiesOutputWithContext(ctx context.Context) LabAnnouncementPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabAnnouncementPropertiesOutput)
}

func (i LabAnnouncementPropertiesArgs) ToLabAnnouncementPropertiesPtrOutput() LabAnnouncementPropertiesPtrOutput {
	return i.ToLabAnnouncementPropertiesPtrOutputWithContext(context.Background())
}

func (i LabAnnouncementPropertiesArgs) ToLabAnnouncementPropertiesPtrOutputWithContext(ctx context.Context) LabAnnouncementPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabAnnouncementPropertiesOutput).ToLabAnnouncementPropertiesPtrOutputWithContext(ctx)
}

// LabAnnouncementPropertiesPtrInput is an input type that accepts LabAnnouncementPropertiesArgs, LabAnnouncementPropertiesPtr and LabAnnouncementPropertiesPtrOutput values.
// You can construct a concrete instance of `LabAnnouncementPropertiesPtrInput` via:
//
//          LabAnnouncementPropertiesArgs{...}
//
//  or:
//
//          nil
type LabAnnouncementPropertiesPtrInput interface {
	pulumi.Input

	ToLabAnnouncementPropertiesPtrOutput() LabAnnouncementPropertiesPtrOutput
	ToLabAnnouncementPropertiesPtrOutputWithContext(context.Context) LabAnnouncementPropertiesPtrOutput
}

type labAnnouncementPropertiesPtrType LabAnnouncementPropertiesArgs

func LabAnnouncementPropertiesPtr(v *LabAnnouncementPropertiesArgs) LabAnnouncementPropertiesPtrInput {
	return (*labAnnouncementPropertiesPtrType)(v)
}

func (*labAnnouncementPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabAnnouncementProperties)(nil)).Elem()
}

func (i *labAnnouncementPropertiesPtrType) ToLabAnnouncementPropertiesPtrOutput() LabAnnouncementPropertiesPtrOutput {
	return i.ToLabAnnouncementPropertiesPtrOutputWithContext(context.Background())
}

func (i *labAnnouncementPropertiesPtrType) ToLabAnnouncementPropertiesPtrOutputWithContext(ctx context.Context) LabAnnouncementPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabAnnouncementPropertiesPtrOutput)
}

// Properties of a lab's announcement banner
type LabAnnouncementPropertiesOutput struct{ *pulumi.OutputState }

func (LabAnnouncementPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabAnnouncementProperties)(nil)).Elem()
}

func (o LabAnnouncementPropertiesOutput) ToLabAnnouncementPropertiesOutput() LabAnnouncementPropertiesOutput {
	return o
}

func (o LabAnnouncementPropertiesOutput) ToLabAnnouncementPropertiesOutputWithContext(ctx context.Context) LabAnnouncementPropertiesOutput {
	return o
}

func (o LabAnnouncementPropertiesOutput) ToLabAnnouncementPropertiesPtrOutput() LabAnnouncementPropertiesPtrOutput {
	return o.ToLabAnnouncementPropertiesPtrOutputWithContext(context.Background())
}

func (o LabAnnouncementPropertiesOutput) ToLabAnnouncementPropertiesPtrOutputWithContext(ctx context.Context) LabAnnouncementPropertiesPtrOutput {
	return o.ApplyT(func(v LabAnnouncementProperties) *LabAnnouncementProperties {
		return &v
	}).(LabAnnouncementPropertiesPtrOutput)
}

// Is the lab announcement active/enabled at this time?
func (o LabAnnouncementPropertiesOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabAnnouncementProperties) *string { return v.Enabled }).(pulumi.StringPtrOutput)
}

// The time at which the announcement expires (null for never)
func (o LabAnnouncementPropertiesOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabAnnouncementProperties) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// Has this announcement expired?
func (o LabAnnouncementPropertiesOutput) Expired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabAnnouncementProperties) *bool { return v.Expired }).(pulumi.BoolPtrOutput)
}

// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
func (o LabAnnouncementPropertiesOutput) Markdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabAnnouncementProperties) *string { return v.Markdown }).(pulumi.StringPtrOutput)
}

// The plain text title for the lab announcement
func (o LabAnnouncementPropertiesOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabAnnouncementProperties) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type LabAnnouncementPropertiesPtrOutput struct{ *pulumi.OutputState }

func (LabAnnouncementPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabAnnouncementProperties)(nil)).Elem()
}

func (o LabAnnouncementPropertiesPtrOutput) ToLabAnnouncementPropertiesPtrOutput() LabAnnouncementPropertiesPtrOutput {
	return o
}

func (o LabAnnouncementPropertiesPtrOutput) ToLabAnnouncementPropertiesPtrOutputWithContext(ctx context.Context) LabAnnouncementPropertiesPtrOutput {
	return o
}

func (o LabAnnouncementPropertiesPtrOutput) Elem() LabAnnouncementPropertiesOutput {
	return o.ApplyT(func(v *LabAnnouncementProperties) LabAnnouncementProperties { return *v }).(LabAnnouncementPropertiesOutput)
}

// Is the lab announcement active/enabled at this time?
func (o LabAnnouncementPropertiesPtrOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabAnnouncementProperties) *string {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.StringPtrOutput)
}

// The time at which the announcement expires (null for never)
func (o LabAnnouncementPropertiesPtrOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabAnnouncementProperties) *string {
		if v == nil {
			return nil
		}
		return v.ExpirationDate
	}).(pulumi.StringPtrOutput)
}

// Has this announcement expired?
func (o LabAnnouncementPropertiesPtrOutput) Expired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LabAnnouncementProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Expired
	}).(pulumi.BoolPtrOutput)
}

// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
func (o LabAnnouncementPropertiesPtrOutput) Markdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabAnnouncementProperties) *string {
		if v == nil {
			return nil
		}
		return v.Markdown
	}).(pulumi.StringPtrOutput)
}

// The plain text title for the lab announcement
func (o LabAnnouncementPropertiesPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabAnnouncementProperties) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Properties of a lab's announcement banner
type LabAnnouncementPropertiesInvokeResponse struct {
	// Is the lab announcement active/enabled at this time?
	Enabled *string `pulumi:"enabled"`
	// The time at which the announcement expires (null for never)
	ExpirationDate *string `pulumi:"expirationDate"`
	// Has this announcement expired?
	Expired *bool `pulumi:"expired"`
	// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
	Markdown *string `pulumi:"markdown"`
	// The provisioning status of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The plain text title for the lab announcement
	Title *string `pulumi:"title"`
	// The unique immutable identifier of a resource (Guid).
	UniqueIdentifier string `pulumi:"uniqueIdentifier"`
}

// LabAnnouncementPropertiesInvokeResponseInput is an input type that accepts LabAnnouncementPropertiesInvokeResponseArgs and LabAnnouncementPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `LabAnnouncementPropertiesInvokeResponseInput` via:
//
//          LabAnnouncementPropertiesInvokeResponseArgs{...}
type LabAnnouncementPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToLabAnnouncementPropertiesInvokeResponseOutput() LabAnnouncementPropertiesInvokeResponseOutput
	ToLabAnnouncementPropertiesInvokeResponseOutputWithContext(context.Context) LabAnnouncementPropertiesInvokeResponseOutput
}

// Properties of a lab's announcement banner
type LabAnnouncementPropertiesInvokeResponseArgs struct {
	// Is the lab announcement active/enabled at this time?
	Enabled pulumi.StringPtrInput `pulumi:"enabled"`
	// The time at which the announcement expires (null for never)
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// Has this announcement expired?
	Expired pulumi.BoolPtrInput `pulumi:"expired"`
	// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
	Markdown pulumi.StringPtrInput `pulumi:"markdown"`
	// The provisioning status of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The plain text title for the lab announcement
	Title pulumi.StringPtrInput `pulumi:"title"`
	// The unique immutable identifier of a resource (Guid).
	UniqueIdentifier pulumi.StringInput `pulumi:"uniqueIdentifier"`
}

func (LabAnnouncementPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabAnnouncementPropertiesInvokeResponse)(nil)).Elem()
}

func (i LabAnnouncementPropertiesInvokeResponseArgs) ToLabAnnouncementPropertiesInvokeResponseOutput() LabAnnouncementPropertiesInvokeResponseOutput {
	return i.ToLabAnnouncementPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i LabAnnouncementPropertiesInvokeResponseArgs) ToLabAnnouncementPropertiesInvokeResponseOutputWithContext(ctx context.Context) LabAnnouncementPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabAnnouncementPropertiesInvokeResponseOutput)
}

// Properties of a lab's announcement banner
type LabAnnouncementPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (LabAnnouncementPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabAnnouncementPropertiesInvokeResponse)(nil)).Elem()
}

func (o LabAnnouncementPropertiesInvokeResponseOutput) ToLabAnnouncementPropertiesInvokeResponseOutput() LabAnnouncementPropertiesInvokeResponseOutput {
	return o
}

func (o LabAnnouncementPropertiesInvokeResponseOutput) ToLabAnnouncementPropertiesInvokeResponseOutputWithContext(ctx context.Context) LabAnnouncementPropertiesInvokeResponseOutput {
	return o
}

// Is the lab announcement active/enabled at this time?
func (o LabAnnouncementPropertiesInvokeResponseOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabAnnouncementPropertiesInvokeResponse) *string { return v.Enabled }).(pulumi.StringPtrOutput)
}

// The time at which the announcement expires (null for never)
func (o LabAnnouncementPropertiesInvokeResponseOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabAnnouncementPropertiesInvokeResponse) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// Has this announcement expired?
func (o LabAnnouncementPropertiesInvokeResponseOutput) Expired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabAnnouncementPropertiesInvokeResponse) *bool { return v.Expired }).(pulumi.BoolPtrOutput)
}

// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
func (o LabAnnouncementPropertiesInvokeResponseOutput) Markdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabAnnouncementPropertiesInvokeResponse) *string { return v.Markdown }).(pulumi.StringPtrOutput)
}

// The provisioning status of the resource.
func (o LabAnnouncementPropertiesInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LabAnnouncementPropertiesInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The plain text title for the lab announcement
func (o LabAnnouncementPropertiesInvokeResponseOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabAnnouncementPropertiesInvokeResponse) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// The unique immutable identifier of a resource (Guid).
func (o LabAnnouncementPropertiesInvokeResponseOutput) UniqueIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v LabAnnouncementPropertiesInvokeResponse) string { return v.UniqueIdentifier }).(pulumi.StringOutput)
}

// Properties of a lab's announcement banner
type LabAnnouncementPropertiesResponse struct {
	// Is the lab announcement active/enabled at this time?
	Enabled *string `pulumi:"enabled"`
	// The time at which the announcement expires (null for never)
	ExpirationDate *string `pulumi:"expirationDate"`
	// Has this announcement expired?
	Expired *bool `pulumi:"expired"`
	// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
	Markdown *string `pulumi:"markdown"`
	// The provisioning status of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The plain text title for the lab announcement
	Title *string `pulumi:"title"`
	// The unique immutable identifier of a resource (Guid).
	UniqueIdentifier string `pulumi:"uniqueIdentifier"`
}

// LabAnnouncementPropertiesResponseInput is an input type that accepts LabAnnouncementPropertiesResponseArgs and LabAnnouncementPropertiesResponseOutput values.
// You can construct a concrete instance of `LabAnnouncementPropertiesResponseInput` via:
//
//          LabAnnouncementPropertiesResponseArgs{...}
type LabAnnouncementPropertiesResponseInput interface {
	pulumi.Input

	ToLabAnnouncementPropertiesResponseOutput() LabAnnouncementPropertiesResponseOutput
	ToLabAnnouncementPropertiesResponseOutputWithContext(context.Context) LabAnnouncementPropertiesResponseOutput
}

// Properties of a lab's announcement banner
type LabAnnouncementPropertiesResponseArgs struct {
	// Is the lab announcement active/enabled at this time?
	Enabled pulumi.StringPtrInput `pulumi:"enabled"`
	// The time at which the announcement expires (null for never)
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// Has this announcement expired?
	Expired pulumi.BoolPtrInput `pulumi:"expired"`
	// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
	Markdown pulumi.StringPtrInput `pulumi:"markdown"`
	// The provisioning status of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The plain text title for the lab announcement
	Title pulumi.StringPtrInput `pulumi:"title"`
	// The unique immutable identifier of a resource (Guid).
	UniqueIdentifier pulumi.StringInput `pulumi:"uniqueIdentifier"`
}

func (LabAnnouncementPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabAnnouncementPropertiesResponse)(nil)).Elem()
}

func (i LabAnnouncementPropertiesResponseArgs) ToLabAnnouncementPropertiesResponseOutput() LabAnnouncementPropertiesResponseOutput {
	return i.ToLabAnnouncementPropertiesResponseOutputWithContext(context.Background())
}

func (i LabAnnouncementPropertiesResponseArgs) ToLabAnnouncementPropertiesResponseOutputWithContext(ctx context.Context) LabAnnouncementPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabAnnouncementPropertiesResponseOutput)
}

func (i LabAnnouncementPropertiesResponseArgs) ToLabAnnouncementPropertiesResponsePtrOutput() LabAnnouncementPropertiesResponsePtrOutput {
	return i.ToLabAnnouncementPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i LabAnnouncementPropertiesResponseArgs) ToLabAnnouncementPropertiesResponsePtrOutputWithContext(ctx context.Context) LabAnnouncementPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabAnnouncementPropertiesResponseOutput).ToLabAnnouncementPropertiesResponsePtrOutputWithContext(ctx)
}

// LabAnnouncementPropertiesResponsePtrInput is an input type that accepts LabAnnouncementPropertiesResponseArgs, LabAnnouncementPropertiesResponsePtr and LabAnnouncementPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `LabAnnouncementPropertiesResponsePtrInput` via:
//
//          LabAnnouncementPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type LabAnnouncementPropertiesResponsePtrInput interface {
	pulumi.Input

	ToLabAnnouncementPropertiesResponsePtrOutput() LabAnnouncementPropertiesResponsePtrOutput
	ToLabAnnouncementPropertiesResponsePtrOutputWithContext(context.Context) LabAnnouncementPropertiesResponsePtrOutput
}

type labAnnouncementPropertiesResponsePtrType LabAnnouncementPropertiesResponseArgs

func LabAnnouncementPropertiesResponsePtr(v *LabAnnouncementPropertiesResponseArgs) LabAnnouncementPropertiesResponsePtrInput {
	return (*labAnnouncementPropertiesResponsePtrType)(v)
}

func (*labAnnouncementPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabAnnouncementPropertiesResponse)(nil)).Elem()
}

func (i *labAnnouncementPropertiesResponsePtrType) ToLabAnnouncementPropertiesResponsePtrOutput() LabAnnouncementPropertiesResponsePtrOutput {
	return i.ToLabAnnouncementPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *labAnnouncementPropertiesResponsePtrType) ToLabAnnouncementPropertiesResponsePtrOutputWithContext(ctx context.Context) LabAnnouncementPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabAnnouncementPropertiesResponsePtrOutput)
}

// Properties of a lab's announcement banner
type LabAnnouncementPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LabAnnouncementPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabAnnouncementPropertiesResponse)(nil)).Elem()
}

func (o LabAnnouncementPropertiesResponseOutput) ToLabAnnouncementPropertiesResponseOutput() LabAnnouncementPropertiesResponseOutput {
	return o
}

func (o LabAnnouncementPropertiesResponseOutput) ToLabAnnouncementPropertiesResponseOutputWithContext(ctx context.Context) LabAnnouncementPropertiesResponseOutput {
	return o
}

func (o LabAnnouncementPropertiesResponseOutput) ToLabAnnouncementPropertiesResponsePtrOutput() LabAnnouncementPropertiesResponsePtrOutput {
	return o.ToLabAnnouncementPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o LabAnnouncementPropertiesResponseOutput) ToLabAnnouncementPropertiesResponsePtrOutputWithContext(ctx context.Context) LabAnnouncementPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LabAnnouncementPropertiesResponse) *LabAnnouncementPropertiesResponse {
		return &v
	}).(LabAnnouncementPropertiesResponsePtrOutput)
}

// Is the lab announcement active/enabled at this time?
func (o LabAnnouncementPropertiesResponseOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabAnnouncementPropertiesResponse) *string { return v.Enabled }).(pulumi.StringPtrOutput)
}

// The time at which the announcement expires (null for never)
func (o LabAnnouncementPropertiesResponseOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabAnnouncementPropertiesResponse) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// Has this announcement expired?
func (o LabAnnouncementPropertiesResponseOutput) Expired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabAnnouncementPropertiesResponse) *bool { return v.Expired }).(pulumi.BoolPtrOutput)
}

// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
func (o LabAnnouncementPropertiesResponseOutput) Markdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabAnnouncementPropertiesResponse) *string { return v.Markdown }).(pulumi.StringPtrOutput)
}

// The provisioning status of the resource.
func (o LabAnnouncementPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LabAnnouncementPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The plain text title for the lab announcement
func (o LabAnnouncementPropertiesResponseOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabAnnouncementPropertiesResponse) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// The unique immutable identifier of a resource (Guid).
func (o LabAnnouncementPropertiesResponseOutput) UniqueIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v LabAnnouncementPropertiesResponse) string { return v.UniqueIdentifier }).(pulumi.StringOutput)
}

type LabAnnouncementPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (LabAnnouncementPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabAnnouncementPropertiesResponse)(nil)).Elem()
}

func (o LabAnnouncementPropertiesResponsePtrOutput) ToLabAnnouncementPropertiesResponsePtrOutput() LabAnnouncementPropertiesResponsePtrOutput {
	return o
}

func (o LabAnnouncementPropertiesResponsePtrOutput) ToLabAnnouncementPropertiesResponsePtrOutputWithContext(ctx context.Context) LabAnnouncementPropertiesResponsePtrOutput {
	return o
}

func (o LabAnnouncementPropertiesResponsePtrOutput) Elem() LabAnnouncementPropertiesResponseOutput {
	return o.ApplyT(func(v *LabAnnouncementPropertiesResponse) LabAnnouncementPropertiesResponse { return *v }).(LabAnnouncementPropertiesResponseOutput)
}

// Is the lab announcement active/enabled at this time?
func (o LabAnnouncementPropertiesResponsePtrOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabAnnouncementPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.StringPtrOutput)
}

// The time at which the announcement expires (null for never)
func (o LabAnnouncementPropertiesResponsePtrOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabAnnouncementPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExpirationDate
	}).(pulumi.StringPtrOutput)
}

// Has this announcement expired?
func (o LabAnnouncementPropertiesResponsePtrOutput) Expired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LabAnnouncementPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Expired
	}).(pulumi.BoolPtrOutput)
}

// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
func (o LabAnnouncementPropertiesResponsePtrOutput) Markdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabAnnouncementPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Markdown
	}).(pulumi.StringPtrOutput)
}

// The provisioning status of the resource.
func (o LabAnnouncementPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabAnnouncementPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The plain text title for the lab announcement
func (o LabAnnouncementPropertiesResponsePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabAnnouncementPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// The unique immutable identifier of a resource (Guid).
func (o LabAnnouncementPropertiesResponsePtrOutput) UniqueIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabAnnouncementPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UniqueIdentifier
	}).(pulumi.StringPtrOutput)
}

// Properties of a lab's support banner
type LabSupportProperties struct {
	// Is the lab support banner active/enabled at this time?
	Enabled *string `pulumi:"enabled"`
	// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
	Markdown *string `pulumi:"markdown"`
}

// LabSupportPropertiesInput is an input type that accepts LabSupportPropertiesArgs and LabSupportPropertiesOutput values.
// You can construct a concrete instance of `LabSupportPropertiesInput` via:
//
//          LabSupportPropertiesArgs{...}
type LabSupportPropertiesInput interface {
	pulumi.Input

	ToLabSupportPropertiesOutput() LabSupportPropertiesOutput
	ToLabSupportPropertiesOutputWithContext(context.Context) LabSupportPropertiesOutput
}

// Properties of a lab's support banner
type LabSupportPropertiesArgs struct {
	// Is the lab support banner active/enabled at this time?
	Enabled pulumi.StringPtrInput `pulumi:"enabled"`
	// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
	Markdown pulumi.StringPtrInput `pulumi:"markdown"`
}

func (LabSupportPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabSupportProperties)(nil)).Elem()
}

func (i LabSupportPropertiesArgs) ToLabSupportPropertiesOutput() LabSupportPropertiesOutput {
	return i.ToLabSupportPropertiesOutputWithContext(context.Background())
}

func (i LabSupportPropertiesArgs) ToLabSupportPropertiesOutputWithContext(ctx context.Context) LabSupportPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabSupportPropertiesOutput)
}

func (i LabSupportPropertiesArgs) ToLabSupportPropertiesPtrOutput() LabSupportPropertiesPtrOutput {
	return i.ToLabSupportPropertiesPtrOutputWithContext(context.Background())
}

func (i LabSupportPropertiesArgs) ToLabSupportPropertiesPtrOutputWithContext(ctx context.Context) LabSupportPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabSupportPropertiesOutput).ToLabSupportPropertiesPtrOutputWithContext(ctx)
}

// LabSupportPropertiesPtrInput is an input type that accepts LabSupportPropertiesArgs, LabSupportPropertiesPtr and LabSupportPropertiesPtrOutput values.
// You can construct a concrete instance of `LabSupportPropertiesPtrInput` via:
//
//          LabSupportPropertiesArgs{...}
//
//  or:
//
//          nil
type LabSupportPropertiesPtrInput interface {
	pulumi.Input

	ToLabSupportPropertiesPtrOutput() LabSupportPropertiesPtrOutput
	ToLabSupportPropertiesPtrOutputWithContext(context.Context) LabSupportPropertiesPtrOutput
}

type labSupportPropertiesPtrType LabSupportPropertiesArgs

func LabSupportPropertiesPtr(v *LabSupportPropertiesArgs) LabSupportPropertiesPtrInput {
	return (*labSupportPropertiesPtrType)(v)
}

func (*labSupportPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabSupportProperties)(nil)).Elem()
}

func (i *labSupportPropertiesPtrType) ToLabSupportPropertiesPtrOutput() LabSupportPropertiesPtrOutput {
	return i.ToLabSupportPropertiesPtrOutputWithContext(context.Background())
}

func (i *labSupportPropertiesPtrType) ToLabSupportPropertiesPtrOutputWithContext(ctx context.Context) LabSupportPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabSupportPropertiesPtrOutput)
}

// Properties of a lab's support banner
type LabSupportPropertiesOutput struct{ *pulumi.OutputState }

func (LabSupportPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabSupportProperties)(nil)).Elem()
}

func (o LabSupportPropertiesOutput) ToLabSupportPropertiesOutput() LabSupportPropertiesOutput {
	return o
}

func (o LabSupportPropertiesOutput) ToLabSupportPropertiesOutputWithContext(ctx context.Context) LabSupportPropertiesOutput {
	return o
}

func (o LabSupportPropertiesOutput) ToLabSupportPropertiesPtrOutput() LabSupportPropertiesPtrOutput {
	return o.ToLabSupportPropertiesPtrOutputWithContext(context.Background())
}

func (o LabSupportPropertiesOutput) ToLabSupportPropertiesPtrOutputWithContext(ctx context.Context) LabSupportPropertiesPtrOutput {
	return o.ApplyT(func(v LabSupportProperties) *LabSupportProperties {
		return &v
	}).(LabSupportPropertiesPtrOutput)
}

// Is the lab support banner active/enabled at this time?
func (o LabSupportPropertiesOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabSupportProperties) *string { return v.Enabled }).(pulumi.StringPtrOutput)
}

// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
func (o LabSupportPropertiesOutput) Markdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabSupportProperties) *string { return v.Markdown }).(pulumi.StringPtrOutput)
}

type LabSupportPropertiesPtrOutput struct{ *pulumi.OutputState }

func (LabSupportPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabSupportProperties)(nil)).Elem()
}

func (o LabSupportPropertiesPtrOutput) ToLabSupportPropertiesPtrOutput() LabSupportPropertiesPtrOutput {
	return o
}

func (o LabSupportPropertiesPtrOutput) ToLabSupportPropertiesPtrOutputWithContext(ctx context.Context) LabSupportPropertiesPtrOutput {
	return o
}

func (o LabSupportPropertiesPtrOutput) Elem() LabSupportPropertiesOutput {
	return o.ApplyT(func(v *LabSupportProperties) LabSupportProperties { return *v }).(LabSupportPropertiesOutput)
}

// Is the lab support banner active/enabled at this time?
func (o LabSupportPropertiesPtrOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabSupportProperties) *string {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.StringPtrOutput)
}

// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
func (o LabSupportPropertiesPtrOutput) Markdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabSupportProperties) *string {
		if v == nil {
			return nil
		}
		return v.Markdown
	}).(pulumi.StringPtrOutput)
}

// Properties of a lab's support banner
type LabSupportPropertiesInvokeResponse struct {
	// Is the lab support banner active/enabled at this time?
	Enabled *string `pulumi:"enabled"`
	// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
	Markdown *string `pulumi:"markdown"`
}

// LabSupportPropertiesInvokeResponseInput is an input type that accepts LabSupportPropertiesInvokeResponseArgs and LabSupportPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `LabSupportPropertiesInvokeResponseInput` via:
//
//          LabSupportPropertiesInvokeResponseArgs{...}
type LabSupportPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToLabSupportPropertiesInvokeResponseOutput() LabSupportPropertiesInvokeResponseOutput
	ToLabSupportPropertiesInvokeResponseOutputWithContext(context.Context) LabSupportPropertiesInvokeResponseOutput
}

// Properties of a lab's support banner
type LabSupportPropertiesInvokeResponseArgs struct {
	// Is the lab support banner active/enabled at this time?
	Enabled pulumi.StringPtrInput `pulumi:"enabled"`
	// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
	Markdown pulumi.StringPtrInput `pulumi:"markdown"`
}

func (LabSupportPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabSupportPropertiesInvokeResponse)(nil)).Elem()
}

func (i LabSupportPropertiesInvokeResponseArgs) ToLabSupportPropertiesInvokeResponseOutput() LabSupportPropertiesInvokeResponseOutput {
	return i.ToLabSupportPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i LabSupportPropertiesInvokeResponseArgs) ToLabSupportPropertiesInvokeResponseOutputWithContext(ctx context.Context) LabSupportPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabSupportPropertiesInvokeResponseOutput)
}

// Properties of a lab's support banner
type LabSupportPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (LabSupportPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabSupportPropertiesInvokeResponse)(nil)).Elem()
}

func (o LabSupportPropertiesInvokeResponseOutput) ToLabSupportPropertiesInvokeResponseOutput() LabSupportPropertiesInvokeResponseOutput {
	return o
}

func (o LabSupportPropertiesInvokeResponseOutput) ToLabSupportPropertiesInvokeResponseOutputWithContext(ctx context.Context) LabSupportPropertiesInvokeResponseOutput {
	return o
}

// Is the lab support banner active/enabled at this time?
func (o LabSupportPropertiesInvokeResponseOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabSupportPropertiesInvokeResponse) *string { return v.Enabled }).(pulumi.StringPtrOutput)
}

// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
func (o LabSupportPropertiesInvokeResponseOutput) Markdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabSupportPropertiesInvokeResponse) *string { return v.Markdown }).(pulumi.StringPtrOutput)
}

// Properties of a lab's support banner
type LabSupportPropertiesResponse struct {
	// Is the lab support banner active/enabled at this time?
	Enabled *string `pulumi:"enabled"`
	// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
	Markdown *string `pulumi:"markdown"`
}

// LabSupportPropertiesResponseInput is an input type that accepts LabSupportPropertiesResponseArgs and LabSupportPropertiesResponseOutput values.
// You can construct a concrete instance of `LabSupportPropertiesResponseInput` via:
//
//          LabSupportPropertiesResponseArgs{...}
type LabSupportPropertiesResponseInput interface {
	pulumi.Input

	ToLabSupportPropertiesResponseOutput() LabSupportPropertiesResponseOutput
	ToLabSupportPropertiesResponseOutputWithContext(context.Context) LabSupportPropertiesResponseOutput
}

// Properties of a lab's support banner
type LabSupportPropertiesResponseArgs struct {
	// Is the lab support banner active/enabled at this time?
	Enabled pulumi.StringPtrInput `pulumi:"enabled"`
	// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
	Markdown pulumi.StringPtrInput `pulumi:"markdown"`
}

func (LabSupportPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabSupportPropertiesResponse)(nil)).Elem()
}

func (i LabSupportPropertiesResponseArgs) ToLabSupportPropertiesResponseOutput() LabSupportPropertiesResponseOutput {
	return i.ToLabSupportPropertiesResponseOutputWithContext(context.Background())
}

func (i LabSupportPropertiesResponseArgs) ToLabSupportPropertiesResponseOutputWithContext(ctx context.Context) LabSupportPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabSupportPropertiesResponseOutput)
}

func (i LabSupportPropertiesResponseArgs) ToLabSupportPropertiesResponsePtrOutput() LabSupportPropertiesResponsePtrOutput {
	return i.ToLabSupportPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i LabSupportPropertiesResponseArgs) ToLabSupportPropertiesResponsePtrOutputWithContext(ctx context.Context) LabSupportPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabSupportPropertiesResponseOutput).ToLabSupportPropertiesResponsePtrOutputWithContext(ctx)
}

// LabSupportPropertiesResponsePtrInput is an input type that accepts LabSupportPropertiesResponseArgs, LabSupportPropertiesResponsePtr and LabSupportPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `LabSupportPropertiesResponsePtrInput` via:
//
//          LabSupportPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type LabSupportPropertiesResponsePtrInput interface {
	pulumi.Input

	ToLabSupportPropertiesResponsePtrOutput() LabSupportPropertiesResponsePtrOutput
	ToLabSupportPropertiesResponsePtrOutputWithContext(context.Context) LabSupportPropertiesResponsePtrOutput
}

type labSupportPropertiesResponsePtrType LabSupportPropertiesResponseArgs

func LabSupportPropertiesResponsePtr(v *LabSupportPropertiesResponseArgs) LabSupportPropertiesResponsePtrInput {
	return (*labSupportPropertiesResponsePtrType)(v)
}

func (*labSupportPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabSupportPropertiesResponse)(nil)).Elem()
}

func (i *labSupportPropertiesResponsePtrType) ToLabSupportPropertiesResponsePtrOutput() LabSupportPropertiesResponsePtrOutput {
	return i.ToLabSupportPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *labSupportPropertiesResponsePtrType) ToLabSupportPropertiesResponsePtrOutputWithContext(ctx context.Context) LabSupportPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabSupportPropertiesResponsePtrOutput)
}

// Properties of a lab's support banner
type LabSupportPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LabSupportPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabSupportPropertiesResponse)(nil)).Elem()
}

func (o LabSupportPropertiesResponseOutput) ToLabSupportPropertiesResponseOutput() LabSupportPropertiesResponseOutput {
	return o
}

func (o LabSupportPropertiesResponseOutput) ToLabSupportPropertiesResponseOutputWithContext(ctx context.Context) LabSupportPropertiesResponseOutput {
	return o
}

func (o LabSupportPropertiesResponseOutput) ToLabSupportPropertiesResponsePtrOutput() LabSupportPropertiesResponsePtrOutput {
	return o.ToLabSupportPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o LabSupportPropertiesResponseOutput) ToLabSupportPropertiesResponsePtrOutputWithContext(ctx context.Context) LabSupportPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LabSupportPropertiesResponse) *LabSupportPropertiesResponse {
		return &v
	}).(LabSupportPropertiesResponsePtrOutput)
}

// Is the lab support banner active/enabled at this time?
func (o LabSupportPropertiesResponseOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabSupportPropertiesResponse) *string { return v.Enabled }).(pulumi.StringPtrOutput)
}

// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
func (o LabSupportPropertiesResponseOutput) Markdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabSupportPropertiesResponse) *string { return v.Markdown }).(pulumi.StringPtrOutput)
}

type LabSupportPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (LabSupportPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabSupportPropertiesResponse)(nil)).Elem()
}

func (o LabSupportPropertiesResponsePtrOutput) ToLabSupportPropertiesResponsePtrOutput() LabSupportPropertiesResponsePtrOutput {
	return o
}

func (o LabSupportPropertiesResponsePtrOutput) ToLabSupportPropertiesResponsePtrOutputWithContext(ctx context.Context) LabSupportPropertiesResponsePtrOutput {
	return o
}

func (o LabSupportPropertiesResponsePtrOutput) Elem() LabSupportPropertiesResponseOutput {
	return o.ApplyT(func(v *LabSupportPropertiesResponse) LabSupportPropertiesResponse { return *v }).(LabSupportPropertiesResponseOutput)
}

// Is the lab support banner active/enabled at this time?
func (o LabSupportPropertiesResponsePtrOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabSupportPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.StringPtrOutput)
}

// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
func (o LabSupportPropertiesResponsePtrOutput) Markdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabSupportPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Markdown
	}).(pulumi.StringPtrOutput)
}

// Properties of a VHD in the lab.
type LabVhdInvokeResponse struct {
	// The URI to the VHD.
	Id *string `pulumi:"id"`
}

// LabVhdInvokeResponseInput is an input type that accepts LabVhdInvokeResponseArgs and LabVhdInvokeResponseOutput values.
// You can construct a concrete instance of `LabVhdInvokeResponseInput` via:
//
//          LabVhdInvokeResponseArgs{...}
type LabVhdInvokeResponseInput interface {
	pulumi.Input

	ToLabVhdInvokeResponseOutput() LabVhdInvokeResponseOutput
	ToLabVhdInvokeResponseOutputWithContext(context.Context) LabVhdInvokeResponseOutput
}

// Properties of a VHD in the lab.
type LabVhdInvokeResponseArgs struct {
	// The URI to the VHD.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LabVhdInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabVhdInvokeResponse)(nil)).Elem()
}

func (i LabVhdInvokeResponseArgs) ToLabVhdInvokeResponseOutput() LabVhdInvokeResponseOutput {
	return i.ToLabVhdInvokeResponseOutputWithContext(context.Background())
}

func (i LabVhdInvokeResponseArgs) ToLabVhdInvokeResponseOutputWithContext(ctx context.Context) LabVhdInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabVhdInvokeResponseOutput)
}

// LabVhdInvokeResponseArrayInput is an input type that accepts LabVhdInvokeResponseArray and LabVhdInvokeResponseArrayOutput values.
// You can construct a concrete instance of `LabVhdInvokeResponseArrayInput` via:
//
//          LabVhdInvokeResponseArray{ LabVhdInvokeResponseArgs{...} }
type LabVhdInvokeResponseArrayInput interface {
	pulumi.Input

	ToLabVhdInvokeResponseArrayOutput() LabVhdInvokeResponseArrayOutput
	ToLabVhdInvokeResponseArrayOutputWithContext(context.Context) LabVhdInvokeResponseArrayOutput
}

type LabVhdInvokeResponseArray []LabVhdInvokeResponseInput

func (LabVhdInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LabVhdInvokeResponse)(nil)).Elem()
}

func (i LabVhdInvokeResponseArray) ToLabVhdInvokeResponseArrayOutput() LabVhdInvokeResponseArrayOutput {
	return i.ToLabVhdInvokeResponseArrayOutputWithContext(context.Background())
}

func (i LabVhdInvokeResponseArray) ToLabVhdInvokeResponseArrayOutputWithContext(ctx context.Context) LabVhdInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabVhdInvokeResponseArrayOutput)
}

// Properties of a VHD in the lab.
type LabVhdInvokeResponseOutput struct{ *pulumi.OutputState }

func (LabVhdInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabVhdInvokeResponse)(nil)).Elem()
}

func (o LabVhdInvokeResponseOutput) ToLabVhdInvokeResponseOutput() LabVhdInvokeResponseOutput {
	return o
}

func (o LabVhdInvokeResponseOutput) ToLabVhdInvokeResponseOutputWithContext(ctx context.Context) LabVhdInvokeResponseOutput {
	return o
}

// The URI to the VHD.
func (o LabVhdInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVhdInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LabVhdInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (LabVhdInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LabVhdInvokeResponse)(nil)).Elem()
}

func (o LabVhdInvokeResponseArrayOutput) ToLabVhdInvokeResponseArrayOutput() LabVhdInvokeResponseArrayOutput {
	return o
}

func (o LabVhdInvokeResponseArrayOutput) ToLabVhdInvokeResponseArrayOutputWithContext(ctx context.Context) LabVhdInvokeResponseArrayOutput {
	return o
}

func (o LabVhdInvokeResponseArrayOutput) Index(i pulumi.IntInput) LabVhdInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LabVhdInvokeResponse {
		return vs[0].([]LabVhdInvokeResponse)[vs[1].(int)]
	}).(LabVhdInvokeResponseOutput)
}

// Properties for creating a virtual machine.
type LabVirtualMachineCreationParameter struct {
	// Indicates whether another user can take ownership of the virtual machine
	AllowClaim *bool `pulumi:"allowClaim"`
	// The artifact deployment status for the virtual machine.
	ArtifactDeploymentStatus *ArtifactDeploymentStatusProperties `pulumi:"artifactDeploymentStatus"`
	// The artifacts to be installed on the virtual machine.
	Artifacts []ArtifactInstallProperties `pulumi:"artifacts"`
	// The number of virtual machine instances to create.
	BulkCreationParameters *BulkCreationParameters `pulumi:"bulkCreationParameters"`
	// The resource identifier (Microsoft.Compute) of the virtual machine.
	ComputeId *string `pulumi:"computeId"`
	// The email address of creator of the virtual machine.
	CreatedByUser *string `pulumi:"createdByUser"`
	// The object identifier of the creator of the virtual machine.
	CreatedByUserId *string `pulumi:"createdByUserId"`
	// The creation date of the virtual machine.
	CreatedDate *string `pulumi:"createdDate"`
	// The custom image identifier of the virtual machine.
	CustomImageId *string `pulumi:"customImageId"`
	// New or existing data disks to attach to the virtual machine after creation
	DataDiskParameters []DataDiskProperties `pulumi:"dataDiskParameters"`
	// Indicates whether the virtual machine is to be created without a public IP address.
	DisallowPublicIpAddress *bool `pulumi:"disallowPublicIpAddress"`
	// The resource ID of the environment that contains this virtual machine, if any.
	EnvironmentId *string `pulumi:"environmentId"`
	// The expiration date for VM.
	ExpirationDate *string `pulumi:"expirationDate"`
	// The fully-qualified domain name of the virtual machine.
	Fqdn *string `pulumi:"fqdn"`
	// The Microsoft Azure Marketplace image reference of the virtual machine.
	GalleryImageReference *GalleryImageReference `pulumi:"galleryImageReference"`
	// Indicates whether this virtual machine uses an SSH key for authentication.
	IsAuthenticationWithSshKey *bool `pulumi:"isAuthenticationWithSshKey"`
	// The lab subnet name of the virtual machine.
	LabSubnetName *string `pulumi:"labSubnetName"`
	// The lab virtual network identifier of the virtual machine.
	LabVirtualNetworkId *string `pulumi:"labVirtualNetworkId"`
	// Last known compute power state captured in DTL
	LastKnownPowerState *string `pulumi:"lastKnownPowerState"`
	// The location of the new virtual machine or environment
	Location *string `pulumi:"location"`
	// The name of the virtual machine or environment
	Name *string `pulumi:"name"`
	// The network interface properties.
	NetworkInterface *NetworkInterfaceProperties `pulumi:"networkInterface"`
	// The notes of the virtual machine.
	Notes *string `pulumi:"notes"`
	// The OS type of the virtual machine.
	OsType *string `pulumi:"osType"`
	// The object identifier of the owner of the virtual machine.
	OwnerObjectId *string `pulumi:"ownerObjectId"`
	// The user principal name of the virtual machine owner.
	OwnerUserPrincipalName *string `pulumi:"ownerUserPrincipalName"`
	// The password of the virtual machine administrator.
	Password *string `pulumi:"password"`
	// The id of the plan associated with the virtual machine image
	PlanId *string `pulumi:"planId"`
	// Virtual Machine schedules to be created
	ScheduleParameters []ScheduleCreationParameter `pulumi:"scheduleParameters"`
	// The size of the virtual machine.
	Size *string `pulumi:"size"`
	// The SSH key of the virtual machine administrator.
	SshKey *string `pulumi:"sshKey"`
	// Storage type to use for virtual machine (i.e. Standard, Premium).
	StorageType *string `pulumi:"storageType"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The user name of the virtual machine.
	UserName *string `pulumi:"userName"`
	// Tells source of creation of lab virtual machine. Output property only.
	VirtualMachineCreationSource *string `pulumi:"virtualMachineCreationSource"`
}

// LabVirtualMachineCreationParameterInput is an input type that accepts LabVirtualMachineCreationParameterArgs and LabVirtualMachineCreationParameterOutput values.
// You can construct a concrete instance of `LabVirtualMachineCreationParameterInput` via:
//
//          LabVirtualMachineCreationParameterArgs{...}
type LabVirtualMachineCreationParameterInput interface {
	pulumi.Input

	ToLabVirtualMachineCreationParameterOutput() LabVirtualMachineCreationParameterOutput
	ToLabVirtualMachineCreationParameterOutputWithContext(context.Context) LabVirtualMachineCreationParameterOutput
}

// Properties for creating a virtual machine.
type LabVirtualMachineCreationParameterArgs struct {
	// Indicates whether another user can take ownership of the virtual machine
	AllowClaim pulumi.BoolPtrInput `pulumi:"allowClaim"`
	// The artifact deployment status for the virtual machine.
	ArtifactDeploymentStatus ArtifactDeploymentStatusPropertiesPtrInput `pulumi:"artifactDeploymentStatus"`
	// The artifacts to be installed on the virtual machine.
	Artifacts ArtifactInstallPropertiesArrayInput `pulumi:"artifacts"`
	// The number of virtual machine instances to create.
	BulkCreationParameters BulkCreationParametersPtrInput `pulumi:"bulkCreationParameters"`
	// The resource identifier (Microsoft.Compute) of the virtual machine.
	ComputeId pulumi.StringPtrInput `pulumi:"computeId"`
	// The email address of creator of the virtual machine.
	CreatedByUser pulumi.StringPtrInput `pulumi:"createdByUser"`
	// The object identifier of the creator of the virtual machine.
	CreatedByUserId pulumi.StringPtrInput `pulumi:"createdByUserId"`
	// The creation date of the virtual machine.
	CreatedDate pulumi.StringPtrInput `pulumi:"createdDate"`
	// The custom image identifier of the virtual machine.
	CustomImageId pulumi.StringPtrInput `pulumi:"customImageId"`
	// New or existing data disks to attach to the virtual machine after creation
	DataDiskParameters DataDiskPropertiesArrayInput `pulumi:"dataDiskParameters"`
	// Indicates whether the virtual machine is to be created without a public IP address.
	DisallowPublicIpAddress pulumi.BoolPtrInput `pulumi:"disallowPublicIpAddress"`
	// The resource ID of the environment that contains this virtual machine, if any.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// The expiration date for VM.
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// The fully-qualified domain name of the virtual machine.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The Microsoft Azure Marketplace image reference of the virtual machine.
	GalleryImageReference GalleryImageReferencePtrInput `pulumi:"galleryImageReference"`
	// Indicates whether this virtual machine uses an SSH key for authentication.
	IsAuthenticationWithSshKey pulumi.BoolPtrInput `pulumi:"isAuthenticationWithSshKey"`
	// The lab subnet name of the virtual machine.
	LabSubnetName pulumi.StringPtrInput `pulumi:"labSubnetName"`
	// The lab virtual network identifier of the virtual machine.
	LabVirtualNetworkId pulumi.StringPtrInput `pulumi:"labVirtualNetworkId"`
	// Last known compute power state captured in DTL
	LastKnownPowerState pulumi.StringPtrInput `pulumi:"lastKnownPowerState"`
	// The location of the new virtual machine or environment
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the virtual machine or environment
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The network interface properties.
	NetworkInterface NetworkInterfacePropertiesPtrInput `pulumi:"networkInterface"`
	// The notes of the virtual machine.
	Notes pulumi.StringPtrInput `pulumi:"notes"`
	// The OS type of the virtual machine.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The object identifier of the owner of the virtual machine.
	OwnerObjectId pulumi.StringPtrInput `pulumi:"ownerObjectId"`
	// The user principal name of the virtual machine owner.
	OwnerUserPrincipalName pulumi.StringPtrInput `pulumi:"ownerUserPrincipalName"`
	// The password of the virtual machine administrator.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The id of the plan associated with the virtual machine image
	PlanId pulumi.StringPtrInput `pulumi:"planId"`
	// Virtual Machine schedules to be created
	ScheduleParameters ScheduleCreationParameterArrayInput `pulumi:"scheduleParameters"`
	// The size of the virtual machine.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The SSH key of the virtual machine administrator.
	SshKey pulumi.StringPtrInput `pulumi:"sshKey"`
	// Storage type to use for virtual machine (i.e. Standard, Premium).
	StorageType pulumi.StringPtrInput `pulumi:"storageType"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The user name of the virtual machine.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
	// Tells source of creation of lab virtual machine. Output property only.
	VirtualMachineCreationSource pulumi.StringPtrInput `pulumi:"virtualMachineCreationSource"`
}

func (LabVirtualMachineCreationParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabVirtualMachineCreationParameter)(nil)).Elem()
}

func (i LabVirtualMachineCreationParameterArgs) ToLabVirtualMachineCreationParameterOutput() LabVirtualMachineCreationParameterOutput {
	return i.ToLabVirtualMachineCreationParameterOutputWithContext(context.Background())
}

func (i LabVirtualMachineCreationParameterArgs) ToLabVirtualMachineCreationParameterOutputWithContext(ctx context.Context) LabVirtualMachineCreationParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabVirtualMachineCreationParameterOutput)
}

func (i LabVirtualMachineCreationParameterArgs) ToLabVirtualMachineCreationParameterPtrOutput() LabVirtualMachineCreationParameterPtrOutput {
	return i.ToLabVirtualMachineCreationParameterPtrOutputWithContext(context.Background())
}

func (i LabVirtualMachineCreationParameterArgs) ToLabVirtualMachineCreationParameterPtrOutputWithContext(ctx context.Context) LabVirtualMachineCreationParameterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabVirtualMachineCreationParameterOutput).ToLabVirtualMachineCreationParameterPtrOutputWithContext(ctx)
}

// LabVirtualMachineCreationParameterPtrInput is an input type that accepts LabVirtualMachineCreationParameterArgs, LabVirtualMachineCreationParameterPtr and LabVirtualMachineCreationParameterPtrOutput values.
// You can construct a concrete instance of `LabVirtualMachineCreationParameterPtrInput` via:
//
//          LabVirtualMachineCreationParameterArgs{...}
//
//  or:
//
//          nil
type LabVirtualMachineCreationParameterPtrInput interface {
	pulumi.Input

	ToLabVirtualMachineCreationParameterPtrOutput() LabVirtualMachineCreationParameterPtrOutput
	ToLabVirtualMachineCreationParameterPtrOutputWithContext(context.Context) LabVirtualMachineCreationParameterPtrOutput
}

type labVirtualMachineCreationParameterPtrType LabVirtualMachineCreationParameterArgs

func LabVirtualMachineCreationParameterPtr(v *LabVirtualMachineCreationParameterArgs) LabVirtualMachineCreationParameterPtrInput {
	return (*labVirtualMachineCreationParameterPtrType)(v)
}

func (*labVirtualMachineCreationParameterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabVirtualMachineCreationParameter)(nil)).Elem()
}

func (i *labVirtualMachineCreationParameterPtrType) ToLabVirtualMachineCreationParameterPtrOutput() LabVirtualMachineCreationParameterPtrOutput {
	return i.ToLabVirtualMachineCreationParameterPtrOutputWithContext(context.Background())
}

func (i *labVirtualMachineCreationParameterPtrType) ToLabVirtualMachineCreationParameterPtrOutputWithContext(ctx context.Context) LabVirtualMachineCreationParameterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabVirtualMachineCreationParameterPtrOutput)
}

// Properties for creating a virtual machine.
type LabVirtualMachineCreationParameterOutput struct{ *pulumi.OutputState }

func (LabVirtualMachineCreationParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabVirtualMachineCreationParameter)(nil)).Elem()
}

func (o LabVirtualMachineCreationParameterOutput) ToLabVirtualMachineCreationParameterOutput() LabVirtualMachineCreationParameterOutput {
	return o
}

func (o LabVirtualMachineCreationParameterOutput) ToLabVirtualMachineCreationParameterOutputWithContext(ctx context.Context) LabVirtualMachineCreationParameterOutput {
	return o
}

func (o LabVirtualMachineCreationParameterOutput) ToLabVirtualMachineCreationParameterPtrOutput() LabVirtualMachineCreationParameterPtrOutput {
	return o.ToLabVirtualMachineCreationParameterPtrOutputWithContext(context.Background())
}

func (o LabVirtualMachineCreationParameterOutput) ToLabVirtualMachineCreationParameterPtrOutputWithContext(ctx context.Context) LabVirtualMachineCreationParameterPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *LabVirtualMachineCreationParameter {
		return &v
	}).(LabVirtualMachineCreationParameterPtrOutput)
}

// Indicates whether another user can take ownership of the virtual machine
func (o LabVirtualMachineCreationParameterOutput) AllowClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *bool { return v.AllowClaim }).(pulumi.BoolPtrOutput)
}

// The artifact deployment status for the virtual machine.
func (o LabVirtualMachineCreationParameterOutput) ArtifactDeploymentStatus() ArtifactDeploymentStatusPropertiesPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *ArtifactDeploymentStatusProperties {
		return v.ArtifactDeploymentStatus
	}).(ArtifactDeploymentStatusPropertiesPtrOutput)
}

// The artifacts to be installed on the virtual machine.
func (o LabVirtualMachineCreationParameterOutput) Artifacts() ArtifactInstallPropertiesArrayOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) []ArtifactInstallProperties { return v.Artifacts }).(ArtifactInstallPropertiesArrayOutput)
}

// The number of virtual machine instances to create.
func (o LabVirtualMachineCreationParameterOutput) BulkCreationParameters() BulkCreationParametersPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *BulkCreationParameters { return v.BulkCreationParameters }).(BulkCreationParametersPtrOutput)
}

// The resource identifier (Microsoft.Compute) of the virtual machine.
func (o LabVirtualMachineCreationParameterOutput) ComputeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.ComputeId }).(pulumi.StringPtrOutput)
}

// The email address of creator of the virtual machine.
func (o LabVirtualMachineCreationParameterOutput) CreatedByUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.CreatedByUser }).(pulumi.StringPtrOutput)
}

// The object identifier of the creator of the virtual machine.
func (o LabVirtualMachineCreationParameterOutput) CreatedByUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.CreatedByUserId }).(pulumi.StringPtrOutput)
}

// The creation date of the virtual machine.
func (o LabVirtualMachineCreationParameterOutput) CreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.CreatedDate }).(pulumi.StringPtrOutput)
}

// The custom image identifier of the virtual machine.
func (o LabVirtualMachineCreationParameterOutput) CustomImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.CustomImageId }).(pulumi.StringPtrOutput)
}

// New or existing data disks to attach to the virtual machine after creation
func (o LabVirtualMachineCreationParameterOutput) DataDiskParameters() DataDiskPropertiesArrayOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) []DataDiskProperties { return v.DataDiskParameters }).(DataDiskPropertiesArrayOutput)
}

// Indicates whether the virtual machine is to be created without a public IP address.
func (o LabVirtualMachineCreationParameterOutput) DisallowPublicIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *bool { return v.DisallowPublicIpAddress }).(pulumi.BoolPtrOutput)
}

// The resource ID of the environment that contains this virtual machine, if any.
func (o LabVirtualMachineCreationParameterOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// The expiration date for VM.
func (o LabVirtualMachineCreationParameterOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// The fully-qualified domain name of the virtual machine.
func (o LabVirtualMachineCreationParameterOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The Microsoft Azure Marketplace image reference of the virtual machine.
func (o LabVirtualMachineCreationParameterOutput) GalleryImageReference() GalleryImageReferencePtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *GalleryImageReference { return v.GalleryImageReference }).(GalleryImageReferencePtrOutput)
}

// Indicates whether this virtual machine uses an SSH key for authentication.
func (o LabVirtualMachineCreationParameterOutput) IsAuthenticationWithSshKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *bool { return v.IsAuthenticationWithSshKey }).(pulumi.BoolPtrOutput)
}

// The lab subnet name of the virtual machine.
func (o LabVirtualMachineCreationParameterOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.LabSubnetName }).(pulumi.StringPtrOutput)
}

// The lab virtual network identifier of the virtual machine.
func (o LabVirtualMachineCreationParameterOutput) LabVirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.LabVirtualNetworkId }).(pulumi.StringPtrOutput)
}

// Last known compute power state captured in DTL
func (o LabVirtualMachineCreationParameterOutput) LastKnownPowerState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.LastKnownPowerState }).(pulumi.StringPtrOutput)
}

// The location of the new virtual machine or environment
func (o LabVirtualMachineCreationParameterOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the virtual machine or environment
func (o LabVirtualMachineCreationParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The network interface properties.
func (o LabVirtualMachineCreationParameterOutput) NetworkInterface() NetworkInterfacePropertiesPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *NetworkInterfaceProperties { return v.NetworkInterface }).(NetworkInterfacePropertiesPtrOutput)
}

// The notes of the virtual machine.
func (o LabVirtualMachineCreationParameterOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

// The OS type of the virtual machine.
func (o LabVirtualMachineCreationParameterOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The object identifier of the owner of the virtual machine.
func (o LabVirtualMachineCreationParameterOutput) OwnerObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.OwnerObjectId }).(pulumi.StringPtrOutput)
}

// The user principal name of the virtual machine owner.
func (o LabVirtualMachineCreationParameterOutput) OwnerUserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.OwnerUserPrincipalName }).(pulumi.StringPtrOutput)
}

// The password of the virtual machine administrator.
func (o LabVirtualMachineCreationParameterOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The id of the plan associated with the virtual machine image
func (o LabVirtualMachineCreationParameterOutput) PlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.PlanId }).(pulumi.StringPtrOutput)
}

// Virtual Machine schedules to be created
func (o LabVirtualMachineCreationParameterOutput) ScheduleParameters() ScheduleCreationParameterArrayOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) []ScheduleCreationParameter { return v.ScheduleParameters }).(ScheduleCreationParameterArrayOutput)
}

// The size of the virtual machine.
func (o LabVirtualMachineCreationParameterOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The SSH key of the virtual machine administrator.
func (o LabVirtualMachineCreationParameterOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

// Storage type to use for virtual machine (i.e. Standard, Premium).
func (o LabVirtualMachineCreationParameterOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.StorageType }).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o LabVirtualMachineCreationParameterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The user name of the virtual machine.
func (o LabVirtualMachineCreationParameterOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

// Tells source of creation of lab virtual machine. Output property only.
func (o LabVirtualMachineCreationParameterOutput) VirtualMachineCreationSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameter) *string { return v.VirtualMachineCreationSource }).(pulumi.StringPtrOutput)
}

type LabVirtualMachineCreationParameterPtrOutput struct{ *pulumi.OutputState }

func (LabVirtualMachineCreationParameterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabVirtualMachineCreationParameter)(nil)).Elem()
}

func (o LabVirtualMachineCreationParameterPtrOutput) ToLabVirtualMachineCreationParameterPtrOutput() LabVirtualMachineCreationParameterPtrOutput {
	return o
}

func (o LabVirtualMachineCreationParameterPtrOutput) ToLabVirtualMachineCreationParameterPtrOutputWithContext(ctx context.Context) LabVirtualMachineCreationParameterPtrOutput {
	return o
}

func (o LabVirtualMachineCreationParameterPtrOutput) Elem() LabVirtualMachineCreationParameterOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) LabVirtualMachineCreationParameter { return *v }).(LabVirtualMachineCreationParameterOutput)
}

// Indicates whether another user can take ownership of the virtual machine
func (o LabVirtualMachineCreationParameterPtrOutput) AllowClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *bool {
		if v == nil {
			return nil
		}
		return v.AllowClaim
	}).(pulumi.BoolPtrOutput)
}

// The artifact deployment status for the virtual machine.
func (o LabVirtualMachineCreationParameterPtrOutput) ArtifactDeploymentStatus() ArtifactDeploymentStatusPropertiesPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *ArtifactDeploymentStatusProperties {
		if v == nil {
			return nil
		}
		return v.ArtifactDeploymentStatus
	}).(ArtifactDeploymentStatusPropertiesPtrOutput)
}

// The artifacts to be installed on the virtual machine.
func (o LabVirtualMachineCreationParameterPtrOutput) Artifacts() ArtifactInstallPropertiesArrayOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) []ArtifactInstallProperties {
		if v == nil {
			return nil
		}
		return v.Artifacts
	}).(ArtifactInstallPropertiesArrayOutput)
}

// The number of virtual machine instances to create.
func (o LabVirtualMachineCreationParameterPtrOutput) BulkCreationParameters() BulkCreationParametersPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *BulkCreationParameters {
		if v == nil {
			return nil
		}
		return v.BulkCreationParameters
	}).(BulkCreationParametersPtrOutput)
}

// The resource identifier (Microsoft.Compute) of the virtual machine.
func (o LabVirtualMachineCreationParameterPtrOutput) ComputeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.ComputeId
	}).(pulumi.StringPtrOutput)
}

// The email address of creator of the virtual machine.
func (o LabVirtualMachineCreationParameterPtrOutput) CreatedByUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByUser
	}).(pulumi.StringPtrOutput)
}

// The object identifier of the creator of the virtual machine.
func (o LabVirtualMachineCreationParameterPtrOutput) CreatedByUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByUserId
	}).(pulumi.StringPtrOutput)
}

// The creation date of the virtual machine.
func (o LabVirtualMachineCreationParameterPtrOutput) CreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.CreatedDate
	}).(pulumi.StringPtrOutput)
}

// The custom image identifier of the virtual machine.
func (o LabVirtualMachineCreationParameterPtrOutput) CustomImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.CustomImageId
	}).(pulumi.StringPtrOutput)
}

// New or existing data disks to attach to the virtual machine after creation
func (o LabVirtualMachineCreationParameterPtrOutput) DataDiskParameters() DataDiskPropertiesArrayOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) []DataDiskProperties {
		if v == nil {
			return nil
		}
		return v.DataDiskParameters
	}).(DataDiskPropertiesArrayOutput)
}

// Indicates whether the virtual machine is to be created without a public IP address.
func (o LabVirtualMachineCreationParameterPtrOutput) DisallowPublicIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *bool {
		if v == nil {
			return nil
		}
		return v.DisallowPublicIpAddress
	}).(pulumi.BoolPtrOutput)
}

// The resource ID of the environment that contains this virtual machine, if any.
func (o LabVirtualMachineCreationParameterPtrOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.EnvironmentId
	}).(pulumi.StringPtrOutput)
}

// The expiration date for VM.
func (o LabVirtualMachineCreationParameterPtrOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.ExpirationDate
	}).(pulumi.StringPtrOutput)
}

// The fully-qualified domain name of the virtual machine.
func (o LabVirtualMachineCreationParameterPtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The Microsoft Azure Marketplace image reference of the virtual machine.
func (o LabVirtualMachineCreationParameterPtrOutput) GalleryImageReference() GalleryImageReferencePtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *GalleryImageReference {
		if v == nil {
			return nil
		}
		return v.GalleryImageReference
	}).(GalleryImageReferencePtrOutput)
}

// Indicates whether this virtual machine uses an SSH key for authentication.
func (o LabVirtualMachineCreationParameterPtrOutput) IsAuthenticationWithSshKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *bool {
		if v == nil {
			return nil
		}
		return v.IsAuthenticationWithSshKey
	}).(pulumi.BoolPtrOutput)
}

// The lab subnet name of the virtual machine.
func (o LabVirtualMachineCreationParameterPtrOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.LabSubnetName
	}).(pulumi.StringPtrOutput)
}

// The lab virtual network identifier of the virtual machine.
func (o LabVirtualMachineCreationParameterPtrOutput) LabVirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.LabVirtualNetworkId
	}).(pulumi.StringPtrOutput)
}

// Last known compute power state captured in DTL
func (o LabVirtualMachineCreationParameterPtrOutput) LastKnownPowerState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.LastKnownPowerState
	}).(pulumi.StringPtrOutput)
}

// The location of the new virtual machine or environment
func (o LabVirtualMachineCreationParameterPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The name of the virtual machine or environment
func (o LabVirtualMachineCreationParameterPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The network interface properties.
func (o LabVirtualMachineCreationParameterPtrOutput) NetworkInterface() NetworkInterfacePropertiesPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *NetworkInterfaceProperties {
		if v == nil {
			return nil
		}
		return v.NetworkInterface
	}).(NetworkInterfacePropertiesPtrOutput)
}

// The notes of the virtual machine.
func (o LabVirtualMachineCreationParameterPtrOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.Notes
	}).(pulumi.StringPtrOutput)
}

// The OS type of the virtual machine.
func (o LabVirtualMachineCreationParameterPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The object identifier of the owner of the virtual machine.
func (o LabVirtualMachineCreationParameterPtrOutput) OwnerObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.OwnerObjectId
	}).(pulumi.StringPtrOutput)
}

// The user principal name of the virtual machine owner.
func (o LabVirtualMachineCreationParameterPtrOutput) OwnerUserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.OwnerUserPrincipalName
	}).(pulumi.StringPtrOutput)
}

// The password of the virtual machine administrator.
func (o LabVirtualMachineCreationParameterPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The id of the plan associated with the virtual machine image
func (o LabVirtualMachineCreationParameterPtrOutput) PlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.PlanId
	}).(pulumi.StringPtrOutput)
}

// Virtual Machine schedules to be created
func (o LabVirtualMachineCreationParameterPtrOutput) ScheduleParameters() ScheduleCreationParameterArrayOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) []ScheduleCreationParameter {
		if v == nil {
			return nil
		}
		return v.ScheduleParameters
	}).(ScheduleCreationParameterArrayOutput)
}

// The size of the virtual machine.
func (o LabVirtualMachineCreationParameterPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The SSH key of the virtual machine administrator.
func (o LabVirtualMachineCreationParameterPtrOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.SshKey
	}).(pulumi.StringPtrOutput)
}

// Storage type to use for virtual machine (i.e. Standard, Premium).
func (o LabVirtualMachineCreationParameterPtrOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.StorageType
	}).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o LabVirtualMachineCreationParameterPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The user name of the virtual machine.
func (o LabVirtualMachineCreationParameterPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Tells source of creation of lab virtual machine. Output property only.
func (o LabVirtualMachineCreationParameterPtrOutput) VirtualMachineCreationSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameter) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineCreationSource
	}).(pulumi.StringPtrOutput)
}

// Properties for creating a virtual machine.
type LabVirtualMachineCreationParameterInvokeResponse struct {
	// Indicates whether another user can take ownership of the virtual machine
	AllowClaim *bool `pulumi:"allowClaim"`
	// The artifact deployment status for the virtual machine.
	ArtifactDeploymentStatus *ArtifactDeploymentStatusPropertiesInvokeResponse `pulumi:"artifactDeploymentStatus"`
	// The artifacts to be installed on the virtual machine.
	Artifacts []ArtifactInstallPropertiesInvokeResponse `pulumi:"artifacts"`
	// The number of virtual machine instances to create.
	BulkCreationParameters *BulkCreationParametersInvokeResponse `pulumi:"bulkCreationParameters"`
	// The resource identifier (Microsoft.Compute) of the virtual machine.
	ComputeId *string `pulumi:"computeId"`
	// The email address of creator of the virtual machine.
	CreatedByUser *string `pulumi:"createdByUser"`
	// The object identifier of the creator of the virtual machine.
	CreatedByUserId *string `pulumi:"createdByUserId"`
	// The creation date of the virtual machine.
	CreatedDate *string `pulumi:"createdDate"`
	// The custom image identifier of the virtual machine.
	CustomImageId *string `pulumi:"customImageId"`
	// New or existing data disks to attach to the virtual machine after creation
	DataDiskParameters []DataDiskPropertiesInvokeResponse `pulumi:"dataDiskParameters"`
	// Indicates whether the virtual machine is to be created without a public IP address.
	DisallowPublicIpAddress *bool `pulumi:"disallowPublicIpAddress"`
	// The resource ID of the environment that contains this virtual machine, if any.
	EnvironmentId *string `pulumi:"environmentId"`
	// The expiration date for VM.
	ExpirationDate *string `pulumi:"expirationDate"`
	// The fully-qualified domain name of the virtual machine.
	Fqdn *string `pulumi:"fqdn"`
	// The Microsoft Azure Marketplace image reference of the virtual machine.
	GalleryImageReference *GalleryImageReferenceInvokeResponse `pulumi:"galleryImageReference"`
	// Indicates whether this virtual machine uses an SSH key for authentication.
	IsAuthenticationWithSshKey *bool `pulumi:"isAuthenticationWithSshKey"`
	// The lab subnet name of the virtual machine.
	LabSubnetName *string `pulumi:"labSubnetName"`
	// The lab virtual network identifier of the virtual machine.
	LabVirtualNetworkId *string `pulumi:"labVirtualNetworkId"`
	// Last known compute power state captured in DTL
	LastKnownPowerState *string `pulumi:"lastKnownPowerState"`
	// The location of the new virtual machine or environment
	Location *string `pulumi:"location"`
	// The name of the virtual machine or environment
	Name *string `pulumi:"name"`
	// The network interface properties.
	NetworkInterface *NetworkInterfacePropertiesInvokeResponse `pulumi:"networkInterface"`
	// The notes of the virtual machine.
	Notes *string `pulumi:"notes"`
	// The OS type of the virtual machine.
	OsType *string `pulumi:"osType"`
	// The object identifier of the owner of the virtual machine.
	OwnerObjectId *string `pulumi:"ownerObjectId"`
	// The user principal name of the virtual machine owner.
	OwnerUserPrincipalName *string `pulumi:"ownerUserPrincipalName"`
	// The password of the virtual machine administrator.
	Password *string `pulumi:"password"`
	// The id of the plan associated with the virtual machine image
	PlanId *string `pulumi:"planId"`
	// Virtual Machine schedules to be created
	ScheduleParameters []ScheduleCreationParameterInvokeResponse `pulumi:"scheduleParameters"`
	// The size of the virtual machine.
	Size *string `pulumi:"size"`
	// The SSH key of the virtual machine administrator.
	SshKey *string `pulumi:"sshKey"`
	// Storage type to use for virtual machine (i.e. Standard, Premium).
	StorageType *string `pulumi:"storageType"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The user name of the virtual machine.
	UserName *string `pulumi:"userName"`
	// Tells source of creation of lab virtual machine. Output property only.
	VirtualMachineCreationSource *string `pulumi:"virtualMachineCreationSource"`
}

// LabVirtualMachineCreationParameterInvokeResponseInput is an input type that accepts LabVirtualMachineCreationParameterInvokeResponseArgs and LabVirtualMachineCreationParameterInvokeResponseOutput values.
// You can construct a concrete instance of `LabVirtualMachineCreationParameterInvokeResponseInput` via:
//
//          LabVirtualMachineCreationParameterInvokeResponseArgs{...}
type LabVirtualMachineCreationParameterInvokeResponseInput interface {
	pulumi.Input

	ToLabVirtualMachineCreationParameterInvokeResponseOutput() LabVirtualMachineCreationParameterInvokeResponseOutput
	ToLabVirtualMachineCreationParameterInvokeResponseOutputWithContext(context.Context) LabVirtualMachineCreationParameterInvokeResponseOutput
}

// Properties for creating a virtual machine.
type LabVirtualMachineCreationParameterInvokeResponseArgs struct {
	// Indicates whether another user can take ownership of the virtual machine
	AllowClaim pulumi.BoolPtrInput `pulumi:"allowClaim"`
	// The artifact deployment status for the virtual machine.
	ArtifactDeploymentStatus ArtifactDeploymentStatusPropertiesInvokeResponsePtrInput `pulumi:"artifactDeploymentStatus"`
	// The artifacts to be installed on the virtual machine.
	Artifacts ArtifactInstallPropertiesInvokeResponseArrayInput `pulumi:"artifacts"`
	// The number of virtual machine instances to create.
	BulkCreationParameters BulkCreationParametersInvokeResponsePtrInput `pulumi:"bulkCreationParameters"`
	// The resource identifier (Microsoft.Compute) of the virtual machine.
	ComputeId pulumi.StringPtrInput `pulumi:"computeId"`
	// The email address of creator of the virtual machine.
	CreatedByUser pulumi.StringPtrInput `pulumi:"createdByUser"`
	// The object identifier of the creator of the virtual machine.
	CreatedByUserId pulumi.StringPtrInput `pulumi:"createdByUserId"`
	// The creation date of the virtual machine.
	CreatedDate pulumi.StringPtrInput `pulumi:"createdDate"`
	// The custom image identifier of the virtual machine.
	CustomImageId pulumi.StringPtrInput `pulumi:"customImageId"`
	// New or existing data disks to attach to the virtual machine after creation
	DataDiskParameters DataDiskPropertiesInvokeResponseArrayInput `pulumi:"dataDiskParameters"`
	// Indicates whether the virtual machine is to be created without a public IP address.
	DisallowPublicIpAddress pulumi.BoolPtrInput `pulumi:"disallowPublicIpAddress"`
	// The resource ID of the environment that contains this virtual machine, if any.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// The expiration date for VM.
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// The fully-qualified domain name of the virtual machine.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The Microsoft Azure Marketplace image reference of the virtual machine.
	GalleryImageReference GalleryImageReferenceInvokeResponsePtrInput `pulumi:"galleryImageReference"`
	// Indicates whether this virtual machine uses an SSH key for authentication.
	IsAuthenticationWithSshKey pulumi.BoolPtrInput `pulumi:"isAuthenticationWithSshKey"`
	// The lab subnet name of the virtual machine.
	LabSubnetName pulumi.StringPtrInput `pulumi:"labSubnetName"`
	// The lab virtual network identifier of the virtual machine.
	LabVirtualNetworkId pulumi.StringPtrInput `pulumi:"labVirtualNetworkId"`
	// Last known compute power state captured in DTL
	LastKnownPowerState pulumi.StringPtrInput `pulumi:"lastKnownPowerState"`
	// The location of the new virtual machine or environment
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the virtual machine or environment
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The network interface properties.
	NetworkInterface NetworkInterfacePropertiesInvokeResponsePtrInput `pulumi:"networkInterface"`
	// The notes of the virtual machine.
	Notes pulumi.StringPtrInput `pulumi:"notes"`
	// The OS type of the virtual machine.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The object identifier of the owner of the virtual machine.
	OwnerObjectId pulumi.StringPtrInput `pulumi:"ownerObjectId"`
	// The user principal name of the virtual machine owner.
	OwnerUserPrincipalName pulumi.StringPtrInput `pulumi:"ownerUserPrincipalName"`
	// The password of the virtual machine administrator.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The id of the plan associated with the virtual machine image
	PlanId pulumi.StringPtrInput `pulumi:"planId"`
	// Virtual Machine schedules to be created
	ScheduleParameters ScheduleCreationParameterInvokeResponseArrayInput `pulumi:"scheduleParameters"`
	// The size of the virtual machine.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The SSH key of the virtual machine administrator.
	SshKey pulumi.StringPtrInput `pulumi:"sshKey"`
	// Storage type to use for virtual machine (i.e. Standard, Premium).
	StorageType pulumi.StringPtrInput `pulumi:"storageType"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The user name of the virtual machine.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
	// Tells source of creation of lab virtual machine. Output property only.
	VirtualMachineCreationSource pulumi.StringPtrInput `pulumi:"virtualMachineCreationSource"`
}

func (LabVirtualMachineCreationParameterInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabVirtualMachineCreationParameterInvokeResponse)(nil)).Elem()
}

func (i LabVirtualMachineCreationParameterInvokeResponseArgs) ToLabVirtualMachineCreationParameterInvokeResponseOutput() LabVirtualMachineCreationParameterInvokeResponseOutput {
	return i.ToLabVirtualMachineCreationParameterInvokeResponseOutputWithContext(context.Background())
}

func (i LabVirtualMachineCreationParameterInvokeResponseArgs) ToLabVirtualMachineCreationParameterInvokeResponseOutputWithContext(ctx context.Context) LabVirtualMachineCreationParameterInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabVirtualMachineCreationParameterInvokeResponseOutput)
}

// Properties for creating a virtual machine.
type LabVirtualMachineCreationParameterInvokeResponseOutput struct{ *pulumi.OutputState }

func (LabVirtualMachineCreationParameterInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabVirtualMachineCreationParameterInvokeResponse)(nil)).Elem()
}

func (o LabVirtualMachineCreationParameterInvokeResponseOutput) ToLabVirtualMachineCreationParameterInvokeResponseOutput() LabVirtualMachineCreationParameterInvokeResponseOutput {
	return o
}

func (o LabVirtualMachineCreationParameterInvokeResponseOutput) ToLabVirtualMachineCreationParameterInvokeResponseOutputWithContext(ctx context.Context) LabVirtualMachineCreationParameterInvokeResponseOutput {
	return o
}

// Indicates whether another user can take ownership of the virtual machine
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) AllowClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *bool { return v.AllowClaim }).(pulumi.BoolPtrOutput)
}

// The artifact deployment status for the virtual machine.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) ArtifactDeploymentStatus() ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *ArtifactDeploymentStatusPropertiesInvokeResponse {
		return v.ArtifactDeploymentStatus
	}).(ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput)
}

// The artifacts to be installed on the virtual machine.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) Artifacts() ArtifactInstallPropertiesInvokeResponseArrayOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) []ArtifactInstallPropertiesInvokeResponse {
		return v.Artifacts
	}).(ArtifactInstallPropertiesInvokeResponseArrayOutput)
}

// The number of virtual machine instances to create.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) BulkCreationParameters() BulkCreationParametersInvokeResponsePtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *BulkCreationParametersInvokeResponse {
		return v.BulkCreationParameters
	}).(BulkCreationParametersInvokeResponsePtrOutput)
}

// The resource identifier (Microsoft.Compute) of the virtual machine.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) ComputeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.ComputeId }).(pulumi.StringPtrOutput)
}

// The email address of creator of the virtual machine.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) CreatedByUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.CreatedByUser }).(pulumi.StringPtrOutput)
}

// The object identifier of the creator of the virtual machine.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) CreatedByUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.CreatedByUserId }).(pulumi.StringPtrOutput)
}

// The creation date of the virtual machine.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) CreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.CreatedDate }).(pulumi.StringPtrOutput)
}

// The custom image identifier of the virtual machine.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) CustomImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.CustomImageId }).(pulumi.StringPtrOutput)
}

// New or existing data disks to attach to the virtual machine after creation
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) DataDiskParameters() DataDiskPropertiesInvokeResponseArrayOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) []DataDiskPropertiesInvokeResponse {
		return v.DataDiskParameters
	}).(DataDiskPropertiesInvokeResponseArrayOutput)
}

// Indicates whether the virtual machine is to be created without a public IP address.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) DisallowPublicIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *bool { return v.DisallowPublicIpAddress }).(pulumi.BoolPtrOutput)
}

// The resource ID of the environment that contains this virtual machine, if any.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// The expiration date for VM.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// The fully-qualified domain name of the virtual machine.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The Microsoft Azure Marketplace image reference of the virtual machine.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) GalleryImageReference() GalleryImageReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *GalleryImageReferenceInvokeResponse {
		return v.GalleryImageReference
	}).(GalleryImageReferenceInvokeResponsePtrOutput)
}

// Indicates whether this virtual machine uses an SSH key for authentication.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) IsAuthenticationWithSshKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *bool { return v.IsAuthenticationWithSshKey }).(pulumi.BoolPtrOutput)
}

// The lab subnet name of the virtual machine.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.LabSubnetName }).(pulumi.StringPtrOutput)
}

// The lab virtual network identifier of the virtual machine.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) LabVirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.LabVirtualNetworkId }).(pulumi.StringPtrOutput)
}

// Last known compute power state captured in DTL
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) LastKnownPowerState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.LastKnownPowerState }).(pulumi.StringPtrOutput)
}

// The location of the new virtual machine or environment
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the virtual machine or environment
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The network interface properties.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) NetworkInterface() NetworkInterfacePropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *NetworkInterfacePropertiesInvokeResponse {
		return v.NetworkInterface
	}).(NetworkInterfacePropertiesInvokeResponsePtrOutput)
}

// The notes of the virtual machine.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

// The OS type of the virtual machine.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The object identifier of the owner of the virtual machine.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) OwnerObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.OwnerObjectId }).(pulumi.StringPtrOutput)
}

// The user principal name of the virtual machine owner.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) OwnerUserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.OwnerUserPrincipalName }).(pulumi.StringPtrOutput)
}

// The password of the virtual machine administrator.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The id of the plan associated with the virtual machine image
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) PlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.PlanId }).(pulumi.StringPtrOutput)
}

// Virtual Machine schedules to be created
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) ScheduleParameters() ScheduleCreationParameterInvokeResponseArrayOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) []ScheduleCreationParameterInvokeResponse {
		return v.ScheduleParameters
	}).(ScheduleCreationParameterInvokeResponseArrayOutput)
}

// The size of the virtual machine.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The SSH key of the virtual machine administrator.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

// Storage type to use for virtual machine (i.e. Standard, Premium).
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.StorageType }).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The user name of the virtual machine.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

// Tells source of creation of lab virtual machine. Output property only.
func (o LabVirtualMachineCreationParameterInvokeResponseOutput) VirtualMachineCreationSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterInvokeResponse) *string {
		return v.VirtualMachineCreationSource
	}).(pulumi.StringPtrOutput)
}

// Properties for creating a virtual machine.
type LabVirtualMachineCreationParameterResponse struct {
	// Indicates whether another user can take ownership of the virtual machine
	AllowClaim *bool `pulumi:"allowClaim"`
	// The artifact deployment status for the virtual machine.
	ArtifactDeploymentStatus *ArtifactDeploymentStatusPropertiesResponse `pulumi:"artifactDeploymentStatus"`
	// The artifacts to be installed on the virtual machine.
	Artifacts []ArtifactInstallPropertiesResponse `pulumi:"artifacts"`
	// The number of virtual machine instances to create.
	BulkCreationParameters *BulkCreationParametersResponse `pulumi:"bulkCreationParameters"`
	// The resource identifier (Microsoft.Compute) of the virtual machine.
	ComputeId *string `pulumi:"computeId"`
	// The email address of creator of the virtual machine.
	CreatedByUser *string `pulumi:"createdByUser"`
	// The object identifier of the creator of the virtual machine.
	CreatedByUserId *string `pulumi:"createdByUserId"`
	// The creation date of the virtual machine.
	CreatedDate *string `pulumi:"createdDate"`
	// The custom image identifier of the virtual machine.
	CustomImageId *string `pulumi:"customImageId"`
	// New or existing data disks to attach to the virtual machine after creation
	DataDiskParameters []DataDiskPropertiesResponse `pulumi:"dataDiskParameters"`
	// Indicates whether the virtual machine is to be created without a public IP address.
	DisallowPublicIpAddress *bool `pulumi:"disallowPublicIpAddress"`
	// The resource ID of the environment that contains this virtual machine, if any.
	EnvironmentId *string `pulumi:"environmentId"`
	// The expiration date for VM.
	ExpirationDate *string `pulumi:"expirationDate"`
	// The fully-qualified domain name of the virtual machine.
	Fqdn *string `pulumi:"fqdn"`
	// The Microsoft Azure Marketplace image reference of the virtual machine.
	GalleryImageReference *GalleryImageReferenceResponse `pulumi:"galleryImageReference"`
	// Indicates whether this virtual machine uses an SSH key for authentication.
	IsAuthenticationWithSshKey *bool `pulumi:"isAuthenticationWithSshKey"`
	// The lab subnet name of the virtual machine.
	LabSubnetName *string `pulumi:"labSubnetName"`
	// The lab virtual network identifier of the virtual machine.
	LabVirtualNetworkId *string `pulumi:"labVirtualNetworkId"`
	// Last known compute power state captured in DTL
	LastKnownPowerState *string `pulumi:"lastKnownPowerState"`
	// The location of the new virtual machine or environment
	Location *string `pulumi:"location"`
	// The name of the virtual machine or environment
	Name *string `pulumi:"name"`
	// The network interface properties.
	NetworkInterface *NetworkInterfacePropertiesResponse `pulumi:"networkInterface"`
	// The notes of the virtual machine.
	Notes *string `pulumi:"notes"`
	// The OS type of the virtual machine.
	OsType *string `pulumi:"osType"`
	// The object identifier of the owner of the virtual machine.
	OwnerObjectId *string `pulumi:"ownerObjectId"`
	// The user principal name of the virtual machine owner.
	OwnerUserPrincipalName *string `pulumi:"ownerUserPrincipalName"`
	// The password of the virtual machine administrator.
	Password *string `pulumi:"password"`
	// The id of the plan associated with the virtual machine image
	PlanId *string `pulumi:"planId"`
	// Virtual Machine schedules to be created
	ScheduleParameters []ScheduleCreationParameterResponse `pulumi:"scheduleParameters"`
	// The size of the virtual machine.
	Size *string `pulumi:"size"`
	// The SSH key of the virtual machine administrator.
	SshKey *string `pulumi:"sshKey"`
	// Storage type to use for virtual machine (i.e. Standard, Premium).
	StorageType *string `pulumi:"storageType"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The user name of the virtual machine.
	UserName *string `pulumi:"userName"`
	// Tells source of creation of lab virtual machine. Output property only.
	VirtualMachineCreationSource *string `pulumi:"virtualMachineCreationSource"`
}

// LabVirtualMachineCreationParameterResponseInput is an input type that accepts LabVirtualMachineCreationParameterResponseArgs and LabVirtualMachineCreationParameterResponseOutput values.
// You can construct a concrete instance of `LabVirtualMachineCreationParameterResponseInput` via:
//
//          LabVirtualMachineCreationParameterResponseArgs{...}
type LabVirtualMachineCreationParameterResponseInput interface {
	pulumi.Input

	ToLabVirtualMachineCreationParameterResponseOutput() LabVirtualMachineCreationParameterResponseOutput
	ToLabVirtualMachineCreationParameterResponseOutputWithContext(context.Context) LabVirtualMachineCreationParameterResponseOutput
}

// Properties for creating a virtual machine.
type LabVirtualMachineCreationParameterResponseArgs struct {
	// Indicates whether another user can take ownership of the virtual machine
	AllowClaim pulumi.BoolPtrInput `pulumi:"allowClaim"`
	// The artifact deployment status for the virtual machine.
	ArtifactDeploymentStatus ArtifactDeploymentStatusPropertiesResponsePtrInput `pulumi:"artifactDeploymentStatus"`
	// The artifacts to be installed on the virtual machine.
	Artifacts ArtifactInstallPropertiesResponseArrayInput `pulumi:"artifacts"`
	// The number of virtual machine instances to create.
	BulkCreationParameters BulkCreationParametersResponsePtrInput `pulumi:"bulkCreationParameters"`
	// The resource identifier (Microsoft.Compute) of the virtual machine.
	ComputeId pulumi.StringPtrInput `pulumi:"computeId"`
	// The email address of creator of the virtual machine.
	CreatedByUser pulumi.StringPtrInput `pulumi:"createdByUser"`
	// The object identifier of the creator of the virtual machine.
	CreatedByUserId pulumi.StringPtrInput `pulumi:"createdByUserId"`
	// The creation date of the virtual machine.
	CreatedDate pulumi.StringPtrInput `pulumi:"createdDate"`
	// The custom image identifier of the virtual machine.
	CustomImageId pulumi.StringPtrInput `pulumi:"customImageId"`
	// New or existing data disks to attach to the virtual machine after creation
	DataDiskParameters DataDiskPropertiesResponseArrayInput `pulumi:"dataDiskParameters"`
	// Indicates whether the virtual machine is to be created without a public IP address.
	DisallowPublicIpAddress pulumi.BoolPtrInput `pulumi:"disallowPublicIpAddress"`
	// The resource ID of the environment that contains this virtual machine, if any.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// The expiration date for VM.
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// The fully-qualified domain name of the virtual machine.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The Microsoft Azure Marketplace image reference of the virtual machine.
	GalleryImageReference GalleryImageReferenceResponsePtrInput `pulumi:"galleryImageReference"`
	// Indicates whether this virtual machine uses an SSH key for authentication.
	IsAuthenticationWithSshKey pulumi.BoolPtrInput `pulumi:"isAuthenticationWithSshKey"`
	// The lab subnet name of the virtual machine.
	LabSubnetName pulumi.StringPtrInput `pulumi:"labSubnetName"`
	// The lab virtual network identifier of the virtual machine.
	LabVirtualNetworkId pulumi.StringPtrInput `pulumi:"labVirtualNetworkId"`
	// Last known compute power state captured in DTL
	LastKnownPowerState pulumi.StringPtrInput `pulumi:"lastKnownPowerState"`
	// The location of the new virtual machine or environment
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the virtual machine or environment
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The network interface properties.
	NetworkInterface NetworkInterfacePropertiesResponsePtrInput `pulumi:"networkInterface"`
	// The notes of the virtual machine.
	Notes pulumi.StringPtrInput `pulumi:"notes"`
	// The OS type of the virtual machine.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The object identifier of the owner of the virtual machine.
	OwnerObjectId pulumi.StringPtrInput `pulumi:"ownerObjectId"`
	// The user principal name of the virtual machine owner.
	OwnerUserPrincipalName pulumi.StringPtrInput `pulumi:"ownerUserPrincipalName"`
	// The password of the virtual machine administrator.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The id of the plan associated with the virtual machine image
	PlanId pulumi.StringPtrInput `pulumi:"planId"`
	// Virtual Machine schedules to be created
	ScheduleParameters ScheduleCreationParameterResponseArrayInput `pulumi:"scheduleParameters"`
	// The size of the virtual machine.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The SSH key of the virtual machine administrator.
	SshKey pulumi.StringPtrInput `pulumi:"sshKey"`
	// Storage type to use for virtual machine (i.e. Standard, Premium).
	StorageType pulumi.StringPtrInput `pulumi:"storageType"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The user name of the virtual machine.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
	// Tells source of creation of lab virtual machine. Output property only.
	VirtualMachineCreationSource pulumi.StringPtrInput `pulumi:"virtualMachineCreationSource"`
}

func (LabVirtualMachineCreationParameterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabVirtualMachineCreationParameterResponse)(nil)).Elem()
}

func (i LabVirtualMachineCreationParameterResponseArgs) ToLabVirtualMachineCreationParameterResponseOutput() LabVirtualMachineCreationParameterResponseOutput {
	return i.ToLabVirtualMachineCreationParameterResponseOutputWithContext(context.Background())
}

func (i LabVirtualMachineCreationParameterResponseArgs) ToLabVirtualMachineCreationParameterResponseOutputWithContext(ctx context.Context) LabVirtualMachineCreationParameterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabVirtualMachineCreationParameterResponseOutput)
}

func (i LabVirtualMachineCreationParameterResponseArgs) ToLabVirtualMachineCreationParameterResponsePtrOutput() LabVirtualMachineCreationParameterResponsePtrOutput {
	return i.ToLabVirtualMachineCreationParameterResponsePtrOutputWithContext(context.Background())
}

func (i LabVirtualMachineCreationParameterResponseArgs) ToLabVirtualMachineCreationParameterResponsePtrOutputWithContext(ctx context.Context) LabVirtualMachineCreationParameterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabVirtualMachineCreationParameterResponseOutput).ToLabVirtualMachineCreationParameterResponsePtrOutputWithContext(ctx)
}

// LabVirtualMachineCreationParameterResponsePtrInput is an input type that accepts LabVirtualMachineCreationParameterResponseArgs, LabVirtualMachineCreationParameterResponsePtr and LabVirtualMachineCreationParameterResponsePtrOutput values.
// You can construct a concrete instance of `LabVirtualMachineCreationParameterResponsePtrInput` via:
//
//          LabVirtualMachineCreationParameterResponseArgs{...}
//
//  or:
//
//          nil
type LabVirtualMachineCreationParameterResponsePtrInput interface {
	pulumi.Input

	ToLabVirtualMachineCreationParameterResponsePtrOutput() LabVirtualMachineCreationParameterResponsePtrOutput
	ToLabVirtualMachineCreationParameterResponsePtrOutputWithContext(context.Context) LabVirtualMachineCreationParameterResponsePtrOutput
}

type labVirtualMachineCreationParameterResponsePtrType LabVirtualMachineCreationParameterResponseArgs

func LabVirtualMachineCreationParameterResponsePtr(v *LabVirtualMachineCreationParameterResponseArgs) LabVirtualMachineCreationParameterResponsePtrInput {
	return (*labVirtualMachineCreationParameterResponsePtrType)(v)
}

func (*labVirtualMachineCreationParameterResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabVirtualMachineCreationParameterResponse)(nil)).Elem()
}

func (i *labVirtualMachineCreationParameterResponsePtrType) ToLabVirtualMachineCreationParameterResponsePtrOutput() LabVirtualMachineCreationParameterResponsePtrOutput {
	return i.ToLabVirtualMachineCreationParameterResponsePtrOutputWithContext(context.Background())
}

func (i *labVirtualMachineCreationParameterResponsePtrType) ToLabVirtualMachineCreationParameterResponsePtrOutputWithContext(ctx context.Context) LabVirtualMachineCreationParameterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabVirtualMachineCreationParameterResponsePtrOutput)
}

// Properties for creating a virtual machine.
type LabVirtualMachineCreationParameterResponseOutput struct{ *pulumi.OutputState }

func (LabVirtualMachineCreationParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabVirtualMachineCreationParameterResponse)(nil)).Elem()
}

func (o LabVirtualMachineCreationParameterResponseOutput) ToLabVirtualMachineCreationParameterResponseOutput() LabVirtualMachineCreationParameterResponseOutput {
	return o
}

func (o LabVirtualMachineCreationParameterResponseOutput) ToLabVirtualMachineCreationParameterResponseOutputWithContext(ctx context.Context) LabVirtualMachineCreationParameterResponseOutput {
	return o
}

func (o LabVirtualMachineCreationParameterResponseOutput) ToLabVirtualMachineCreationParameterResponsePtrOutput() LabVirtualMachineCreationParameterResponsePtrOutput {
	return o.ToLabVirtualMachineCreationParameterResponsePtrOutputWithContext(context.Background())
}

func (o LabVirtualMachineCreationParameterResponseOutput) ToLabVirtualMachineCreationParameterResponsePtrOutputWithContext(ctx context.Context) LabVirtualMachineCreationParameterResponsePtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *LabVirtualMachineCreationParameterResponse {
		return &v
	}).(LabVirtualMachineCreationParameterResponsePtrOutput)
}

// Indicates whether another user can take ownership of the virtual machine
func (o LabVirtualMachineCreationParameterResponseOutput) AllowClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *bool { return v.AllowClaim }).(pulumi.BoolPtrOutput)
}

// The artifact deployment status for the virtual machine.
func (o LabVirtualMachineCreationParameterResponseOutput) ArtifactDeploymentStatus() ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *ArtifactDeploymentStatusPropertiesResponse {
		return v.ArtifactDeploymentStatus
	}).(ArtifactDeploymentStatusPropertiesResponsePtrOutput)
}

// The artifacts to be installed on the virtual machine.
func (o LabVirtualMachineCreationParameterResponseOutput) Artifacts() ArtifactInstallPropertiesResponseArrayOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) []ArtifactInstallPropertiesResponse {
		return v.Artifacts
	}).(ArtifactInstallPropertiesResponseArrayOutput)
}

// The number of virtual machine instances to create.
func (o LabVirtualMachineCreationParameterResponseOutput) BulkCreationParameters() BulkCreationParametersResponsePtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *BulkCreationParametersResponse {
		return v.BulkCreationParameters
	}).(BulkCreationParametersResponsePtrOutput)
}

// The resource identifier (Microsoft.Compute) of the virtual machine.
func (o LabVirtualMachineCreationParameterResponseOutput) ComputeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.ComputeId }).(pulumi.StringPtrOutput)
}

// The email address of creator of the virtual machine.
func (o LabVirtualMachineCreationParameterResponseOutput) CreatedByUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.CreatedByUser }).(pulumi.StringPtrOutput)
}

// The object identifier of the creator of the virtual machine.
func (o LabVirtualMachineCreationParameterResponseOutput) CreatedByUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.CreatedByUserId }).(pulumi.StringPtrOutput)
}

// The creation date of the virtual machine.
func (o LabVirtualMachineCreationParameterResponseOutput) CreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.CreatedDate }).(pulumi.StringPtrOutput)
}

// The custom image identifier of the virtual machine.
func (o LabVirtualMachineCreationParameterResponseOutput) CustomImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.CustomImageId }).(pulumi.StringPtrOutput)
}

// New or existing data disks to attach to the virtual machine after creation
func (o LabVirtualMachineCreationParameterResponseOutput) DataDiskParameters() DataDiskPropertiesResponseArrayOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) []DataDiskPropertiesResponse {
		return v.DataDiskParameters
	}).(DataDiskPropertiesResponseArrayOutput)
}

// Indicates whether the virtual machine is to be created without a public IP address.
func (o LabVirtualMachineCreationParameterResponseOutput) DisallowPublicIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *bool { return v.DisallowPublicIpAddress }).(pulumi.BoolPtrOutput)
}

// The resource ID of the environment that contains this virtual machine, if any.
func (o LabVirtualMachineCreationParameterResponseOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// The expiration date for VM.
func (o LabVirtualMachineCreationParameterResponseOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// The fully-qualified domain name of the virtual machine.
func (o LabVirtualMachineCreationParameterResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The Microsoft Azure Marketplace image reference of the virtual machine.
func (o LabVirtualMachineCreationParameterResponseOutput) GalleryImageReference() GalleryImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *GalleryImageReferenceResponse {
		return v.GalleryImageReference
	}).(GalleryImageReferenceResponsePtrOutput)
}

// Indicates whether this virtual machine uses an SSH key for authentication.
func (o LabVirtualMachineCreationParameterResponseOutput) IsAuthenticationWithSshKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *bool { return v.IsAuthenticationWithSshKey }).(pulumi.BoolPtrOutput)
}

// The lab subnet name of the virtual machine.
func (o LabVirtualMachineCreationParameterResponseOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.LabSubnetName }).(pulumi.StringPtrOutput)
}

// The lab virtual network identifier of the virtual machine.
func (o LabVirtualMachineCreationParameterResponseOutput) LabVirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.LabVirtualNetworkId }).(pulumi.StringPtrOutput)
}

// Last known compute power state captured in DTL
func (o LabVirtualMachineCreationParameterResponseOutput) LastKnownPowerState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.LastKnownPowerState }).(pulumi.StringPtrOutput)
}

// The location of the new virtual machine or environment
func (o LabVirtualMachineCreationParameterResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the virtual machine or environment
func (o LabVirtualMachineCreationParameterResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The network interface properties.
func (o LabVirtualMachineCreationParameterResponseOutput) NetworkInterface() NetworkInterfacePropertiesResponsePtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *NetworkInterfacePropertiesResponse {
		return v.NetworkInterface
	}).(NetworkInterfacePropertiesResponsePtrOutput)
}

// The notes of the virtual machine.
func (o LabVirtualMachineCreationParameterResponseOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

// The OS type of the virtual machine.
func (o LabVirtualMachineCreationParameterResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The object identifier of the owner of the virtual machine.
func (o LabVirtualMachineCreationParameterResponseOutput) OwnerObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.OwnerObjectId }).(pulumi.StringPtrOutput)
}

// The user principal name of the virtual machine owner.
func (o LabVirtualMachineCreationParameterResponseOutput) OwnerUserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.OwnerUserPrincipalName }).(pulumi.StringPtrOutput)
}

// The password of the virtual machine administrator.
func (o LabVirtualMachineCreationParameterResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The id of the plan associated with the virtual machine image
func (o LabVirtualMachineCreationParameterResponseOutput) PlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.PlanId }).(pulumi.StringPtrOutput)
}

// Virtual Machine schedules to be created
func (o LabVirtualMachineCreationParameterResponseOutput) ScheduleParameters() ScheduleCreationParameterResponseArrayOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) []ScheduleCreationParameterResponse {
		return v.ScheduleParameters
	}).(ScheduleCreationParameterResponseArrayOutput)
}

// The size of the virtual machine.
func (o LabVirtualMachineCreationParameterResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The SSH key of the virtual machine administrator.
func (o LabVirtualMachineCreationParameterResponseOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

// Storage type to use for virtual machine (i.e. Standard, Premium).
func (o LabVirtualMachineCreationParameterResponseOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.StorageType }).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o LabVirtualMachineCreationParameterResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The user name of the virtual machine.
func (o LabVirtualMachineCreationParameterResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

// Tells source of creation of lab virtual machine. Output property only.
func (o LabVirtualMachineCreationParameterResponseOutput) VirtualMachineCreationSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineCreationParameterResponse) *string { return v.VirtualMachineCreationSource }).(pulumi.StringPtrOutput)
}

type LabVirtualMachineCreationParameterResponsePtrOutput struct{ *pulumi.OutputState }

func (LabVirtualMachineCreationParameterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabVirtualMachineCreationParameterResponse)(nil)).Elem()
}

func (o LabVirtualMachineCreationParameterResponsePtrOutput) ToLabVirtualMachineCreationParameterResponsePtrOutput() LabVirtualMachineCreationParameterResponsePtrOutput {
	return o
}

func (o LabVirtualMachineCreationParameterResponsePtrOutput) ToLabVirtualMachineCreationParameterResponsePtrOutputWithContext(ctx context.Context) LabVirtualMachineCreationParameterResponsePtrOutput {
	return o
}

func (o LabVirtualMachineCreationParameterResponsePtrOutput) Elem() LabVirtualMachineCreationParameterResponseOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) LabVirtualMachineCreationParameterResponse {
		return *v
	}).(LabVirtualMachineCreationParameterResponseOutput)
}

// Indicates whether another user can take ownership of the virtual machine
func (o LabVirtualMachineCreationParameterResponsePtrOutput) AllowClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowClaim
	}).(pulumi.BoolPtrOutput)
}

// The artifact deployment status for the virtual machine.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) ArtifactDeploymentStatus() ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *ArtifactDeploymentStatusPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.ArtifactDeploymentStatus
	}).(ArtifactDeploymentStatusPropertiesResponsePtrOutput)
}

// The artifacts to be installed on the virtual machine.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) Artifacts() ArtifactInstallPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) []ArtifactInstallPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Artifacts
	}).(ArtifactInstallPropertiesResponseArrayOutput)
}

// The number of virtual machine instances to create.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) BulkCreationParameters() BulkCreationParametersResponsePtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *BulkCreationParametersResponse {
		if v == nil {
			return nil
		}
		return v.BulkCreationParameters
	}).(BulkCreationParametersResponsePtrOutput)
}

// The resource identifier (Microsoft.Compute) of the virtual machine.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) ComputeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.ComputeId
	}).(pulumi.StringPtrOutput)
}

// The email address of creator of the virtual machine.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) CreatedByUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByUser
	}).(pulumi.StringPtrOutput)
}

// The object identifier of the creator of the virtual machine.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) CreatedByUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByUserId
	}).(pulumi.StringPtrOutput)
}

// The creation date of the virtual machine.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) CreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedDate
	}).(pulumi.StringPtrOutput)
}

// The custom image identifier of the virtual machine.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) CustomImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomImageId
	}).(pulumi.StringPtrOutput)
}

// New or existing data disks to attach to the virtual machine after creation
func (o LabVirtualMachineCreationParameterResponsePtrOutput) DataDiskParameters() DataDiskPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) []DataDiskPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.DataDiskParameters
	}).(DataDiskPropertiesResponseArrayOutput)
}

// Indicates whether the virtual machine is to be created without a public IP address.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) DisallowPublicIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisallowPublicIpAddress
	}).(pulumi.BoolPtrOutput)
}

// The resource ID of the environment that contains this virtual machine, if any.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnvironmentId
	}).(pulumi.StringPtrOutput)
}

// The expiration date for VM.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExpirationDate
	}).(pulumi.StringPtrOutput)
}

// The fully-qualified domain name of the virtual machine.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The Microsoft Azure Marketplace image reference of the virtual machine.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) GalleryImageReference() GalleryImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *GalleryImageReferenceResponse {
		if v == nil {
			return nil
		}
		return v.GalleryImageReference
	}).(GalleryImageReferenceResponsePtrOutput)
}

// Indicates whether this virtual machine uses an SSH key for authentication.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) IsAuthenticationWithSshKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsAuthenticationWithSshKey
	}).(pulumi.BoolPtrOutput)
}

// The lab subnet name of the virtual machine.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.LabSubnetName
	}).(pulumi.StringPtrOutput)
}

// The lab virtual network identifier of the virtual machine.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) LabVirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.LabVirtualNetworkId
	}).(pulumi.StringPtrOutput)
}

// Last known compute power state captured in DTL
func (o LabVirtualMachineCreationParameterResponsePtrOutput) LastKnownPowerState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastKnownPowerState
	}).(pulumi.StringPtrOutput)
}

// The location of the new virtual machine or environment
func (o LabVirtualMachineCreationParameterResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The name of the virtual machine or environment
func (o LabVirtualMachineCreationParameterResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The network interface properties.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) NetworkInterface() NetworkInterfacePropertiesResponsePtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *NetworkInterfacePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterface
	}).(NetworkInterfacePropertiesResponsePtrOutput)
}

// The notes of the virtual machine.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.Notes
	}).(pulumi.StringPtrOutput)
}

// The OS type of the virtual machine.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The object identifier of the owner of the virtual machine.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) OwnerObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.OwnerObjectId
	}).(pulumi.StringPtrOutput)
}

// The user principal name of the virtual machine owner.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) OwnerUserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.OwnerUserPrincipalName
	}).(pulumi.StringPtrOutput)
}

// The password of the virtual machine administrator.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The id of the plan associated with the virtual machine image
func (o LabVirtualMachineCreationParameterResponsePtrOutput) PlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.PlanId
	}).(pulumi.StringPtrOutput)
}

// Virtual Machine schedules to be created
func (o LabVirtualMachineCreationParameterResponsePtrOutput) ScheduleParameters() ScheduleCreationParameterResponseArrayOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) []ScheduleCreationParameterResponse {
		if v == nil {
			return nil
		}
		return v.ScheduleParameters
	}).(ScheduleCreationParameterResponseArrayOutput)
}

// The size of the virtual machine.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The SSH key of the virtual machine administrator.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.SshKey
	}).(pulumi.StringPtrOutput)
}

// Storage type to use for virtual machine (i.e. Standard, Premium).
func (o LabVirtualMachineCreationParameterResponsePtrOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageType
	}).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The user name of the virtual machine.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Tells source of creation of lab virtual machine. Output property only.
func (o LabVirtualMachineCreationParameterResponsePtrOutput) VirtualMachineCreationSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineCreationParameterResponse) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineCreationSource
	}).(pulumi.StringPtrOutput)
}

// Information about a Linux OS.
type LinuxOsInfo struct {
	// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
	LinuxOsState *string `pulumi:"linuxOsState"`
}

// LinuxOsInfoInput is an input type that accepts LinuxOsInfoArgs and LinuxOsInfoOutput values.
// You can construct a concrete instance of `LinuxOsInfoInput` via:
//
//          LinuxOsInfoArgs{...}
type LinuxOsInfoInput interface {
	pulumi.Input

	ToLinuxOsInfoOutput() LinuxOsInfoOutput
	ToLinuxOsInfoOutputWithContext(context.Context) LinuxOsInfoOutput
}

// Information about a Linux OS.
type LinuxOsInfoArgs struct {
	// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
	LinuxOsState pulumi.StringPtrInput `pulumi:"linuxOsState"`
}

func (LinuxOsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxOsInfo)(nil)).Elem()
}

func (i LinuxOsInfoArgs) ToLinuxOsInfoOutput() LinuxOsInfoOutput {
	return i.ToLinuxOsInfoOutputWithContext(context.Background())
}

func (i LinuxOsInfoArgs) ToLinuxOsInfoOutputWithContext(ctx context.Context) LinuxOsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOsInfoOutput)
}

func (i LinuxOsInfoArgs) ToLinuxOsInfoPtrOutput() LinuxOsInfoPtrOutput {
	return i.ToLinuxOsInfoPtrOutputWithContext(context.Background())
}

func (i LinuxOsInfoArgs) ToLinuxOsInfoPtrOutputWithContext(ctx context.Context) LinuxOsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOsInfoOutput).ToLinuxOsInfoPtrOutputWithContext(ctx)
}

// LinuxOsInfoPtrInput is an input type that accepts LinuxOsInfoArgs, LinuxOsInfoPtr and LinuxOsInfoPtrOutput values.
// You can construct a concrete instance of `LinuxOsInfoPtrInput` via:
//
//          LinuxOsInfoArgs{...}
//
//  or:
//
//          nil
type LinuxOsInfoPtrInput interface {
	pulumi.Input

	ToLinuxOsInfoPtrOutput() LinuxOsInfoPtrOutput
	ToLinuxOsInfoPtrOutputWithContext(context.Context) LinuxOsInfoPtrOutput
}

type linuxOsInfoPtrType LinuxOsInfoArgs

func LinuxOsInfoPtr(v *LinuxOsInfoArgs) LinuxOsInfoPtrInput {
	return (*linuxOsInfoPtrType)(v)
}

func (*linuxOsInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxOsInfo)(nil)).Elem()
}

func (i *linuxOsInfoPtrType) ToLinuxOsInfoPtrOutput() LinuxOsInfoPtrOutput {
	return i.ToLinuxOsInfoPtrOutputWithContext(context.Background())
}

func (i *linuxOsInfoPtrType) ToLinuxOsInfoPtrOutputWithContext(ctx context.Context) LinuxOsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOsInfoPtrOutput)
}

// Information about a Linux OS.
type LinuxOsInfoOutput struct{ *pulumi.OutputState }

func (LinuxOsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxOsInfo)(nil)).Elem()
}

func (o LinuxOsInfoOutput) ToLinuxOsInfoOutput() LinuxOsInfoOutput {
	return o
}

func (o LinuxOsInfoOutput) ToLinuxOsInfoOutputWithContext(ctx context.Context) LinuxOsInfoOutput {
	return o
}

func (o LinuxOsInfoOutput) ToLinuxOsInfoPtrOutput() LinuxOsInfoPtrOutput {
	return o.ToLinuxOsInfoPtrOutputWithContext(context.Background())
}

func (o LinuxOsInfoOutput) ToLinuxOsInfoPtrOutputWithContext(ctx context.Context) LinuxOsInfoPtrOutput {
	return o.ApplyT(func(v LinuxOsInfo) *LinuxOsInfo {
		return &v
	}).(LinuxOsInfoPtrOutput)
}

// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
func (o LinuxOsInfoOutput) LinuxOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxOsInfo) *string { return v.LinuxOsState }).(pulumi.StringPtrOutput)
}

type LinuxOsInfoPtrOutput struct{ *pulumi.OutputState }

func (LinuxOsInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxOsInfo)(nil)).Elem()
}

func (o LinuxOsInfoPtrOutput) ToLinuxOsInfoPtrOutput() LinuxOsInfoPtrOutput {
	return o
}

func (o LinuxOsInfoPtrOutput) ToLinuxOsInfoPtrOutputWithContext(ctx context.Context) LinuxOsInfoPtrOutput {
	return o
}

func (o LinuxOsInfoPtrOutput) Elem() LinuxOsInfoOutput {
	return o.ApplyT(func(v *LinuxOsInfo) LinuxOsInfo { return *v }).(LinuxOsInfoOutput)
}

// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
func (o LinuxOsInfoPtrOutput) LinuxOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxOsInfo) *string {
		if v == nil {
			return nil
		}
		return v.LinuxOsState
	}).(pulumi.StringPtrOutput)
}

// Information about a Linux OS.
type LinuxOsInfoInvokeResponse struct {
	// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
	LinuxOsState *string `pulumi:"linuxOsState"`
}

// LinuxOsInfoInvokeResponseInput is an input type that accepts LinuxOsInfoInvokeResponseArgs and LinuxOsInfoInvokeResponseOutput values.
// You can construct a concrete instance of `LinuxOsInfoInvokeResponseInput` via:
//
//          LinuxOsInfoInvokeResponseArgs{...}
type LinuxOsInfoInvokeResponseInput interface {
	pulumi.Input

	ToLinuxOsInfoInvokeResponseOutput() LinuxOsInfoInvokeResponseOutput
	ToLinuxOsInfoInvokeResponseOutputWithContext(context.Context) LinuxOsInfoInvokeResponseOutput
}

// Information about a Linux OS.
type LinuxOsInfoInvokeResponseArgs struct {
	// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
	LinuxOsState pulumi.StringPtrInput `pulumi:"linuxOsState"`
}

func (LinuxOsInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxOsInfoInvokeResponse)(nil)).Elem()
}

func (i LinuxOsInfoInvokeResponseArgs) ToLinuxOsInfoInvokeResponseOutput() LinuxOsInfoInvokeResponseOutput {
	return i.ToLinuxOsInfoInvokeResponseOutputWithContext(context.Background())
}

func (i LinuxOsInfoInvokeResponseArgs) ToLinuxOsInfoInvokeResponseOutputWithContext(ctx context.Context) LinuxOsInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOsInfoInvokeResponseOutput)
}

func (i LinuxOsInfoInvokeResponseArgs) ToLinuxOsInfoInvokeResponsePtrOutput() LinuxOsInfoInvokeResponsePtrOutput {
	return i.ToLinuxOsInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i LinuxOsInfoInvokeResponseArgs) ToLinuxOsInfoInvokeResponsePtrOutputWithContext(ctx context.Context) LinuxOsInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOsInfoInvokeResponseOutput).ToLinuxOsInfoInvokeResponsePtrOutputWithContext(ctx)
}

// LinuxOsInfoInvokeResponsePtrInput is an input type that accepts LinuxOsInfoInvokeResponseArgs, LinuxOsInfoInvokeResponsePtr and LinuxOsInfoInvokeResponsePtrOutput values.
// You can construct a concrete instance of `LinuxOsInfoInvokeResponsePtrInput` via:
//
//          LinuxOsInfoInvokeResponseArgs{...}
//
//  or:
//
//          nil
type LinuxOsInfoInvokeResponsePtrInput interface {
	pulumi.Input

	ToLinuxOsInfoInvokeResponsePtrOutput() LinuxOsInfoInvokeResponsePtrOutput
	ToLinuxOsInfoInvokeResponsePtrOutputWithContext(context.Context) LinuxOsInfoInvokeResponsePtrOutput
}

type linuxOsInfoInvokeResponsePtrType LinuxOsInfoInvokeResponseArgs

func LinuxOsInfoInvokeResponsePtr(v *LinuxOsInfoInvokeResponseArgs) LinuxOsInfoInvokeResponsePtrInput {
	return (*linuxOsInfoInvokeResponsePtrType)(v)
}

func (*linuxOsInfoInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxOsInfoInvokeResponse)(nil)).Elem()
}

func (i *linuxOsInfoInvokeResponsePtrType) ToLinuxOsInfoInvokeResponsePtrOutput() LinuxOsInfoInvokeResponsePtrOutput {
	return i.ToLinuxOsInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *linuxOsInfoInvokeResponsePtrType) ToLinuxOsInfoInvokeResponsePtrOutputWithContext(ctx context.Context) LinuxOsInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOsInfoInvokeResponsePtrOutput)
}

// Information about a Linux OS.
type LinuxOsInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (LinuxOsInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxOsInfoInvokeResponse)(nil)).Elem()
}

func (o LinuxOsInfoInvokeResponseOutput) ToLinuxOsInfoInvokeResponseOutput() LinuxOsInfoInvokeResponseOutput {
	return o
}

func (o LinuxOsInfoInvokeResponseOutput) ToLinuxOsInfoInvokeResponseOutputWithContext(ctx context.Context) LinuxOsInfoInvokeResponseOutput {
	return o
}

func (o LinuxOsInfoInvokeResponseOutput) ToLinuxOsInfoInvokeResponsePtrOutput() LinuxOsInfoInvokeResponsePtrOutput {
	return o.ToLinuxOsInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (o LinuxOsInfoInvokeResponseOutput) ToLinuxOsInfoInvokeResponsePtrOutputWithContext(ctx context.Context) LinuxOsInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v LinuxOsInfoInvokeResponse) *LinuxOsInfoInvokeResponse {
		return &v
	}).(LinuxOsInfoInvokeResponsePtrOutput)
}

// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
func (o LinuxOsInfoInvokeResponseOutput) LinuxOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxOsInfoInvokeResponse) *string { return v.LinuxOsState }).(pulumi.StringPtrOutput)
}

type LinuxOsInfoInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (LinuxOsInfoInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxOsInfoInvokeResponse)(nil)).Elem()
}

func (o LinuxOsInfoInvokeResponsePtrOutput) ToLinuxOsInfoInvokeResponsePtrOutput() LinuxOsInfoInvokeResponsePtrOutput {
	return o
}

func (o LinuxOsInfoInvokeResponsePtrOutput) ToLinuxOsInfoInvokeResponsePtrOutputWithContext(ctx context.Context) LinuxOsInfoInvokeResponsePtrOutput {
	return o
}

func (o LinuxOsInfoInvokeResponsePtrOutput) Elem() LinuxOsInfoInvokeResponseOutput {
	return o.ApplyT(func(v *LinuxOsInfoInvokeResponse) LinuxOsInfoInvokeResponse { return *v }).(LinuxOsInfoInvokeResponseOutput)
}

// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
func (o LinuxOsInfoInvokeResponsePtrOutput) LinuxOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxOsInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinuxOsState
	}).(pulumi.StringPtrOutput)
}

// Information about a Linux OS.
type LinuxOsInfoResponse struct {
	// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
	LinuxOsState *string `pulumi:"linuxOsState"`
}

// LinuxOsInfoResponseInput is an input type that accepts LinuxOsInfoResponseArgs and LinuxOsInfoResponseOutput values.
// You can construct a concrete instance of `LinuxOsInfoResponseInput` via:
//
//          LinuxOsInfoResponseArgs{...}
type LinuxOsInfoResponseInput interface {
	pulumi.Input

	ToLinuxOsInfoResponseOutput() LinuxOsInfoResponseOutput
	ToLinuxOsInfoResponseOutputWithContext(context.Context) LinuxOsInfoResponseOutput
}

// Information about a Linux OS.
type LinuxOsInfoResponseArgs struct {
	// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
	LinuxOsState pulumi.StringPtrInput `pulumi:"linuxOsState"`
}

func (LinuxOsInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxOsInfoResponse)(nil)).Elem()
}

func (i LinuxOsInfoResponseArgs) ToLinuxOsInfoResponseOutput() LinuxOsInfoResponseOutput {
	return i.ToLinuxOsInfoResponseOutputWithContext(context.Background())
}

func (i LinuxOsInfoResponseArgs) ToLinuxOsInfoResponseOutputWithContext(ctx context.Context) LinuxOsInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOsInfoResponseOutput)
}

func (i LinuxOsInfoResponseArgs) ToLinuxOsInfoResponsePtrOutput() LinuxOsInfoResponsePtrOutput {
	return i.ToLinuxOsInfoResponsePtrOutputWithContext(context.Background())
}

func (i LinuxOsInfoResponseArgs) ToLinuxOsInfoResponsePtrOutputWithContext(ctx context.Context) LinuxOsInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOsInfoResponseOutput).ToLinuxOsInfoResponsePtrOutputWithContext(ctx)
}

// LinuxOsInfoResponsePtrInput is an input type that accepts LinuxOsInfoResponseArgs, LinuxOsInfoResponsePtr and LinuxOsInfoResponsePtrOutput values.
// You can construct a concrete instance of `LinuxOsInfoResponsePtrInput` via:
//
//          LinuxOsInfoResponseArgs{...}
//
//  or:
//
//          nil
type LinuxOsInfoResponsePtrInput interface {
	pulumi.Input

	ToLinuxOsInfoResponsePtrOutput() LinuxOsInfoResponsePtrOutput
	ToLinuxOsInfoResponsePtrOutputWithContext(context.Context) LinuxOsInfoResponsePtrOutput
}

type linuxOsInfoResponsePtrType LinuxOsInfoResponseArgs

func LinuxOsInfoResponsePtr(v *LinuxOsInfoResponseArgs) LinuxOsInfoResponsePtrInput {
	return (*linuxOsInfoResponsePtrType)(v)
}

func (*linuxOsInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxOsInfoResponse)(nil)).Elem()
}

func (i *linuxOsInfoResponsePtrType) ToLinuxOsInfoResponsePtrOutput() LinuxOsInfoResponsePtrOutput {
	return i.ToLinuxOsInfoResponsePtrOutputWithContext(context.Background())
}

func (i *linuxOsInfoResponsePtrType) ToLinuxOsInfoResponsePtrOutputWithContext(ctx context.Context) LinuxOsInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOsInfoResponsePtrOutput)
}

// Information about a Linux OS.
type LinuxOsInfoResponseOutput struct{ *pulumi.OutputState }

func (LinuxOsInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxOsInfoResponse)(nil)).Elem()
}

func (o LinuxOsInfoResponseOutput) ToLinuxOsInfoResponseOutput() LinuxOsInfoResponseOutput {
	return o
}

func (o LinuxOsInfoResponseOutput) ToLinuxOsInfoResponseOutputWithContext(ctx context.Context) LinuxOsInfoResponseOutput {
	return o
}

func (o LinuxOsInfoResponseOutput) ToLinuxOsInfoResponsePtrOutput() LinuxOsInfoResponsePtrOutput {
	return o.ToLinuxOsInfoResponsePtrOutputWithContext(context.Background())
}

func (o LinuxOsInfoResponseOutput) ToLinuxOsInfoResponsePtrOutputWithContext(ctx context.Context) LinuxOsInfoResponsePtrOutput {
	return o.ApplyT(func(v LinuxOsInfoResponse) *LinuxOsInfoResponse {
		return &v
	}).(LinuxOsInfoResponsePtrOutput)
}

// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
func (o LinuxOsInfoResponseOutput) LinuxOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxOsInfoResponse) *string { return v.LinuxOsState }).(pulumi.StringPtrOutput)
}

type LinuxOsInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (LinuxOsInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxOsInfoResponse)(nil)).Elem()
}

func (o LinuxOsInfoResponsePtrOutput) ToLinuxOsInfoResponsePtrOutput() LinuxOsInfoResponsePtrOutput {
	return o
}

func (o LinuxOsInfoResponsePtrOutput) ToLinuxOsInfoResponsePtrOutputWithContext(ctx context.Context) LinuxOsInfoResponsePtrOutput {
	return o
}

func (o LinuxOsInfoResponsePtrOutput) Elem() LinuxOsInfoResponseOutput {
	return o.ApplyT(func(v *LinuxOsInfoResponse) LinuxOsInfoResponse { return *v }).(LinuxOsInfoResponseOutput)
}

// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
func (o LinuxOsInfoResponsePtrOutput) LinuxOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxOsInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinuxOsState
	}).(pulumi.StringPtrOutput)
}

// Properties of a network interface.
type NetworkInterfaceProperties struct {
	// The DNS name.
	DnsName *string `pulumi:"dnsName"`
	// The private IP address.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// The public IP address.
	PublicIpAddress *string `pulumi:"publicIpAddress"`
	// The resource ID of the public IP address.
	PublicIpAddressId *string `pulumi:"publicIpAddressId"`
	// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
	RdpAuthority *string `pulumi:"rdpAuthority"`
	// The configuration for sharing a public IP address across multiple virtual machines.
	SharedPublicIpAddressConfiguration *SharedPublicIpAddressConfiguration `pulumi:"sharedPublicIpAddressConfiguration"`
	// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
	SshAuthority *string `pulumi:"sshAuthority"`
	// The resource ID of the sub net.
	SubnetId *string `pulumi:"subnetId"`
	// The resource ID of the virtual network.
	VirtualNetworkId *string `pulumi:"virtualNetworkId"`
}

// NetworkInterfacePropertiesInput is an input type that accepts NetworkInterfacePropertiesArgs and NetworkInterfacePropertiesOutput values.
// You can construct a concrete instance of `NetworkInterfacePropertiesInput` via:
//
//          NetworkInterfacePropertiesArgs{...}
type NetworkInterfacePropertiesInput interface {
	pulumi.Input

	ToNetworkInterfacePropertiesOutput() NetworkInterfacePropertiesOutput
	ToNetworkInterfacePropertiesOutputWithContext(context.Context) NetworkInterfacePropertiesOutput
}

// Properties of a network interface.
type NetworkInterfacePropertiesArgs struct {
	// The DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// The private IP address.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// The public IP address.
	PublicIpAddress pulumi.StringPtrInput `pulumi:"publicIpAddress"`
	// The resource ID of the public IP address.
	PublicIpAddressId pulumi.StringPtrInput `pulumi:"publicIpAddressId"`
	// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
	RdpAuthority pulumi.StringPtrInput `pulumi:"rdpAuthority"`
	// The configuration for sharing a public IP address across multiple virtual machines.
	SharedPublicIpAddressConfiguration SharedPublicIpAddressConfigurationPtrInput `pulumi:"sharedPublicIpAddressConfiguration"`
	// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
	SshAuthority pulumi.StringPtrInput `pulumi:"sshAuthority"`
	// The resource ID of the sub net.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The resource ID of the virtual network.
	VirtualNetworkId pulumi.StringPtrInput `pulumi:"virtualNetworkId"`
}

func (NetworkInterfacePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceProperties)(nil)).Elem()
}

func (i NetworkInterfacePropertiesArgs) ToNetworkInterfacePropertiesOutput() NetworkInterfacePropertiesOutput {
	return i.ToNetworkInterfacePropertiesOutputWithContext(context.Background())
}

func (i NetworkInterfacePropertiesArgs) ToNetworkInterfacePropertiesOutputWithContext(ctx context.Context) NetworkInterfacePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacePropertiesOutput)
}

func (i NetworkInterfacePropertiesArgs) ToNetworkInterfacePropertiesPtrOutput() NetworkInterfacePropertiesPtrOutput {
	return i.ToNetworkInterfacePropertiesPtrOutputWithContext(context.Background())
}

func (i NetworkInterfacePropertiesArgs) ToNetworkInterfacePropertiesPtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacePropertiesOutput).ToNetworkInterfacePropertiesPtrOutputWithContext(ctx)
}

// NetworkInterfacePropertiesPtrInput is an input type that accepts NetworkInterfacePropertiesArgs, NetworkInterfacePropertiesPtr and NetworkInterfacePropertiesPtrOutput values.
// You can construct a concrete instance of `NetworkInterfacePropertiesPtrInput` via:
//
//          NetworkInterfacePropertiesArgs{...}
//
//  or:
//
//          nil
type NetworkInterfacePropertiesPtrInput interface {
	pulumi.Input

	ToNetworkInterfacePropertiesPtrOutput() NetworkInterfacePropertiesPtrOutput
	ToNetworkInterfacePropertiesPtrOutputWithContext(context.Context) NetworkInterfacePropertiesPtrOutput
}

type networkInterfacePropertiesPtrType NetworkInterfacePropertiesArgs

func NetworkInterfacePropertiesPtr(v *NetworkInterfacePropertiesArgs) NetworkInterfacePropertiesPtrInput {
	return (*networkInterfacePropertiesPtrType)(v)
}

func (*networkInterfacePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceProperties)(nil)).Elem()
}

func (i *networkInterfacePropertiesPtrType) ToNetworkInterfacePropertiesPtrOutput() NetworkInterfacePropertiesPtrOutput {
	return i.ToNetworkInterfacePropertiesPtrOutputWithContext(context.Background())
}

func (i *networkInterfacePropertiesPtrType) ToNetworkInterfacePropertiesPtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacePropertiesPtrOutput)
}

// Properties of a network interface.
type NetworkInterfacePropertiesOutput struct{ *pulumi.OutputState }

func (NetworkInterfacePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceProperties)(nil)).Elem()
}

func (o NetworkInterfacePropertiesOutput) ToNetworkInterfacePropertiesOutput() NetworkInterfacePropertiesOutput {
	return o
}

func (o NetworkInterfacePropertiesOutput) ToNetworkInterfacePropertiesOutputWithContext(ctx context.Context) NetworkInterfacePropertiesOutput {
	return o
}

func (o NetworkInterfacePropertiesOutput) ToNetworkInterfacePropertiesPtrOutput() NetworkInterfacePropertiesPtrOutput {
	return o.ToNetworkInterfacePropertiesPtrOutputWithContext(context.Background())
}

func (o NetworkInterfacePropertiesOutput) ToNetworkInterfacePropertiesPtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceProperties) *NetworkInterfaceProperties {
		return &v
	}).(NetworkInterfacePropertiesPtrOutput)
}

// The DNS name.
func (o NetworkInterfacePropertiesOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceProperties) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// The private IP address.
func (o NetworkInterfacePropertiesOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceProperties) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// The public IP address.
func (o NetworkInterfacePropertiesOutput) PublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceProperties) *string { return v.PublicIpAddress }).(pulumi.StringPtrOutput)
}

// The resource ID of the public IP address.
func (o NetworkInterfacePropertiesOutput) PublicIpAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceProperties) *string { return v.PublicIpAddressId }).(pulumi.StringPtrOutput)
}

// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
func (o NetworkInterfacePropertiesOutput) RdpAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceProperties) *string { return v.RdpAuthority }).(pulumi.StringPtrOutput)
}

// The configuration for sharing a public IP address across multiple virtual machines.
func (o NetworkInterfacePropertiesOutput) SharedPublicIpAddressConfiguration() SharedPublicIpAddressConfigurationPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceProperties) *SharedPublicIpAddressConfiguration {
		return v.SharedPublicIpAddressConfiguration
	}).(SharedPublicIpAddressConfigurationPtrOutput)
}

// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
func (o NetworkInterfacePropertiesOutput) SshAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceProperties) *string { return v.SshAuthority }).(pulumi.StringPtrOutput)
}

// The resource ID of the sub net.
func (o NetworkInterfacePropertiesOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceProperties) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The resource ID of the virtual network.
func (o NetworkInterfacePropertiesOutput) VirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceProperties) *string { return v.VirtualNetworkId }).(pulumi.StringPtrOutput)
}

type NetworkInterfacePropertiesPtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfacePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceProperties)(nil)).Elem()
}

func (o NetworkInterfacePropertiesPtrOutput) ToNetworkInterfacePropertiesPtrOutput() NetworkInterfacePropertiesPtrOutput {
	return o
}

func (o NetworkInterfacePropertiesPtrOutput) ToNetworkInterfacePropertiesPtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesPtrOutput {
	return o
}

func (o NetworkInterfacePropertiesPtrOutput) Elem() NetworkInterfacePropertiesOutput {
	return o.ApplyT(func(v *NetworkInterfaceProperties) NetworkInterfaceProperties { return *v }).(NetworkInterfacePropertiesOutput)
}

// The DNS name.
func (o NetworkInterfacePropertiesPtrOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DnsName
	}).(pulumi.StringPtrOutput)
}

// The private IP address.
func (o NetworkInterfacePropertiesPtrOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIpAddress
	}).(pulumi.StringPtrOutput)
}

// The public IP address.
func (o NetworkInterfacePropertiesPtrOutput) PublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicIpAddress
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the public IP address.
func (o NetworkInterfacePropertiesPtrOutput) PublicIpAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicIpAddressId
	}).(pulumi.StringPtrOutput)
}

// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
func (o NetworkInterfacePropertiesPtrOutput) RdpAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.RdpAuthority
	}).(pulumi.StringPtrOutput)
}

// The configuration for sharing a public IP address across multiple virtual machines.
func (o NetworkInterfacePropertiesPtrOutput) SharedPublicIpAddressConfiguration() SharedPublicIpAddressConfigurationPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceProperties) *SharedPublicIpAddressConfiguration {
		if v == nil {
			return nil
		}
		return v.SharedPublicIpAddressConfiguration
	}).(SharedPublicIpAddressConfigurationPtrOutput)
}

// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
func (o NetworkInterfacePropertiesPtrOutput) SshAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.SshAuthority
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the sub net.
func (o NetworkInterfacePropertiesPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the virtual network.
func (o NetworkInterfacePropertiesPtrOutput) VirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkId
	}).(pulumi.StringPtrOutput)
}

// Properties of a network interface.
type NetworkInterfacePropertiesInvokeResponse struct {
	// The DNS name.
	DnsName *string `pulumi:"dnsName"`
	// The private IP address.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// The public IP address.
	PublicIpAddress *string `pulumi:"publicIpAddress"`
	// The resource ID of the public IP address.
	PublicIpAddressId *string `pulumi:"publicIpAddressId"`
	// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
	RdpAuthority *string `pulumi:"rdpAuthority"`
	// The configuration for sharing a public IP address across multiple virtual machines.
	SharedPublicIpAddressConfiguration *SharedPublicIpAddressConfigurationInvokeResponse `pulumi:"sharedPublicIpAddressConfiguration"`
	// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
	SshAuthority *string `pulumi:"sshAuthority"`
	// The resource ID of the sub net.
	SubnetId *string `pulumi:"subnetId"`
	// The resource ID of the virtual network.
	VirtualNetworkId *string `pulumi:"virtualNetworkId"`
}

// NetworkInterfacePropertiesInvokeResponseInput is an input type that accepts NetworkInterfacePropertiesInvokeResponseArgs and NetworkInterfacePropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `NetworkInterfacePropertiesInvokeResponseInput` via:
//
//          NetworkInterfacePropertiesInvokeResponseArgs{...}
type NetworkInterfacePropertiesInvokeResponseInput interface {
	pulumi.Input

	ToNetworkInterfacePropertiesInvokeResponseOutput() NetworkInterfacePropertiesInvokeResponseOutput
	ToNetworkInterfacePropertiesInvokeResponseOutputWithContext(context.Context) NetworkInterfacePropertiesInvokeResponseOutput
}

// Properties of a network interface.
type NetworkInterfacePropertiesInvokeResponseArgs struct {
	// The DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// The private IP address.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// The public IP address.
	PublicIpAddress pulumi.StringPtrInput `pulumi:"publicIpAddress"`
	// The resource ID of the public IP address.
	PublicIpAddressId pulumi.StringPtrInput `pulumi:"publicIpAddressId"`
	// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
	RdpAuthority pulumi.StringPtrInput `pulumi:"rdpAuthority"`
	// The configuration for sharing a public IP address across multiple virtual machines.
	SharedPublicIpAddressConfiguration SharedPublicIpAddressConfigurationInvokeResponsePtrInput `pulumi:"sharedPublicIpAddressConfiguration"`
	// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
	SshAuthority pulumi.StringPtrInput `pulumi:"sshAuthority"`
	// The resource ID of the sub net.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The resource ID of the virtual network.
	VirtualNetworkId pulumi.StringPtrInput `pulumi:"virtualNetworkId"`
}

func (NetworkInterfacePropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacePropertiesInvokeResponse)(nil)).Elem()
}

func (i NetworkInterfacePropertiesInvokeResponseArgs) ToNetworkInterfacePropertiesInvokeResponseOutput() NetworkInterfacePropertiesInvokeResponseOutput {
	return i.ToNetworkInterfacePropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i NetworkInterfacePropertiesInvokeResponseArgs) ToNetworkInterfacePropertiesInvokeResponseOutputWithContext(ctx context.Context) NetworkInterfacePropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacePropertiesInvokeResponseOutput)
}

func (i NetworkInterfacePropertiesInvokeResponseArgs) ToNetworkInterfacePropertiesInvokeResponsePtrOutput() NetworkInterfacePropertiesInvokeResponsePtrOutput {
	return i.ToNetworkInterfacePropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i NetworkInterfacePropertiesInvokeResponseArgs) ToNetworkInterfacePropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacePropertiesInvokeResponseOutput).ToNetworkInterfacePropertiesInvokeResponsePtrOutputWithContext(ctx)
}

// NetworkInterfacePropertiesInvokeResponsePtrInput is an input type that accepts NetworkInterfacePropertiesInvokeResponseArgs, NetworkInterfacePropertiesInvokeResponsePtr and NetworkInterfacePropertiesInvokeResponsePtrOutput values.
// You can construct a concrete instance of `NetworkInterfacePropertiesInvokeResponsePtrInput` via:
//
//          NetworkInterfacePropertiesInvokeResponseArgs{...}
//
//  or:
//
//          nil
type NetworkInterfacePropertiesInvokeResponsePtrInput interface {
	pulumi.Input

	ToNetworkInterfacePropertiesInvokeResponsePtrOutput() NetworkInterfacePropertiesInvokeResponsePtrOutput
	ToNetworkInterfacePropertiesInvokeResponsePtrOutputWithContext(context.Context) NetworkInterfacePropertiesInvokeResponsePtrOutput
}

type networkInterfacePropertiesInvokeResponsePtrType NetworkInterfacePropertiesInvokeResponseArgs

func NetworkInterfacePropertiesInvokeResponsePtr(v *NetworkInterfacePropertiesInvokeResponseArgs) NetworkInterfacePropertiesInvokeResponsePtrInput {
	return (*networkInterfacePropertiesInvokeResponsePtrType)(v)
}

func (*networkInterfacePropertiesInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfacePropertiesInvokeResponse)(nil)).Elem()
}

func (i *networkInterfacePropertiesInvokeResponsePtrType) ToNetworkInterfacePropertiesInvokeResponsePtrOutput() NetworkInterfacePropertiesInvokeResponsePtrOutput {
	return i.ToNetworkInterfacePropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *networkInterfacePropertiesInvokeResponsePtrType) ToNetworkInterfacePropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacePropertiesInvokeResponsePtrOutput)
}

// Properties of a network interface.
type NetworkInterfacePropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfacePropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacePropertiesInvokeResponse)(nil)).Elem()
}

func (o NetworkInterfacePropertiesInvokeResponseOutput) ToNetworkInterfacePropertiesInvokeResponseOutput() NetworkInterfacePropertiesInvokeResponseOutput {
	return o
}

func (o NetworkInterfacePropertiesInvokeResponseOutput) ToNetworkInterfacePropertiesInvokeResponseOutputWithContext(ctx context.Context) NetworkInterfacePropertiesInvokeResponseOutput {
	return o
}

func (o NetworkInterfacePropertiesInvokeResponseOutput) ToNetworkInterfacePropertiesInvokeResponsePtrOutput() NetworkInterfacePropertiesInvokeResponsePtrOutput {
	return o.ToNetworkInterfacePropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfacePropertiesInvokeResponseOutput) ToNetworkInterfacePropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesInvokeResponse) *NetworkInterfacePropertiesInvokeResponse {
		return &v
	}).(NetworkInterfacePropertiesInvokeResponsePtrOutput)
}

// The DNS name.
func (o NetworkInterfacePropertiesInvokeResponseOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesInvokeResponse) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// The private IP address.
func (o NetworkInterfacePropertiesInvokeResponseOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesInvokeResponse) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// The public IP address.
func (o NetworkInterfacePropertiesInvokeResponseOutput) PublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesInvokeResponse) *string { return v.PublicIpAddress }).(pulumi.StringPtrOutput)
}

// The resource ID of the public IP address.
func (o NetworkInterfacePropertiesInvokeResponseOutput) PublicIpAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesInvokeResponse) *string { return v.PublicIpAddressId }).(pulumi.StringPtrOutput)
}

// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
func (o NetworkInterfacePropertiesInvokeResponseOutput) RdpAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesInvokeResponse) *string { return v.RdpAuthority }).(pulumi.StringPtrOutput)
}

// The configuration for sharing a public IP address across multiple virtual machines.
func (o NetworkInterfacePropertiesInvokeResponseOutput) SharedPublicIpAddressConfiguration() SharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesInvokeResponse) *SharedPublicIpAddressConfigurationInvokeResponse {
		return v.SharedPublicIpAddressConfiguration
	}).(SharedPublicIpAddressConfigurationInvokeResponsePtrOutput)
}

// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
func (o NetworkInterfacePropertiesInvokeResponseOutput) SshAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesInvokeResponse) *string { return v.SshAuthority }).(pulumi.StringPtrOutput)
}

// The resource ID of the sub net.
func (o NetworkInterfacePropertiesInvokeResponseOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesInvokeResponse) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The resource ID of the virtual network.
func (o NetworkInterfacePropertiesInvokeResponseOutput) VirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesInvokeResponse) *string { return v.VirtualNetworkId }).(pulumi.StringPtrOutput)
}

type NetworkInterfacePropertiesInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfacePropertiesInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfacePropertiesInvokeResponse)(nil)).Elem()
}

func (o NetworkInterfacePropertiesInvokeResponsePtrOutput) ToNetworkInterfacePropertiesInvokeResponsePtrOutput() NetworkInterfacePropertiesInvokeResponsePtrOutput {
	return o
}

func (o NetworkInterfacePropertiesInvokeResponsePtrOutput) ToNetworkInterfacePropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesInvokeResponsePtrOutput {
	return o
}

func (o NetworkInterfacePropertiesInvokeResponsePtrOutput) Elem() NetworkInterfacePropertiesInvokeResponseOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesInvokeResponse) NetworkInterfacePropertiesInvokeResponse { return *v }).(NetworkInterfacePropertiesInvokeResponseOutput)
}

// The DNS name.
func (o NetworkInterfacePropertiesInvokeResponsePtrOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.DnsName
	}).(pulumi.StringPtrOutput)
}

// The private IP address.
func (o NetworkInterfacePropertiesInvokeResponsePtrOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIpAddress
	}).(pulumi.StringPtrOutput)
}

// The public IP address.
func (o NetworkInterfacePropertiesInvokeResponsePtrOutput) PublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIpAddress
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the public IP address.
func (o NetworkInterfacePropertiesInvokeResponsePtrOutput) PublicIpAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIpAddressId
	}).(pulumi.StringPtrOutput)
}

// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
func (o NetworkInterfacePropertiesInvokeResponsePtrOutput) RdpAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.RdpAuthority
	}).(pulumi.StringPtrOutput)
}

// The configuration for sharing a public IP address across multiple virtual machines.
func (o NetworkInterfacePropertiesInvokeResponsePtrOutput) SharedPublicIpAddressConfiguration() SharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesInvokeResponse) *SharedPublicIpAddressConfigurationInvokeResponse {
		if v == nil {
			return nil
		}
		return v.SharedPublicIpAddressConfiguration
	}).(SharedPublicIpAddressConfigurationInvokeResponsePtrOutput)
}

// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
func (o NetworkInterfacePropertiesInvokeResponsePtrOutput) SshAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.SshAuthority
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the sub net.
func (o NetworkInterfacePropertiesInvokeResponsePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the virtual network.
func (o NetworkInterfacePropertiesInvokeResponsePtrOutput) VirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkId
	}).(pulumi.StringPtrOutput)
}

// Properties of a network interface.
type NetworkInterfacePropertiesResponse struct {
	// The DNS name.
	DnsName *string `pulumi:"dnsName"`
	// The private IP address.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// The public IP address.
	PublicIpAddress *string `pulumi:"publicIpAddress"`
	// The resource ID of the public IP address.
	PublicIpAddressId *string `pulumi:"publicIpAddressId"`
	// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
	RdpAuthority *string `pulumi:"rdpAuthority"`
	// The configuration for sharing a public IP address across multiple virtual machines.
	SharedPublicIpAddressConfiguration *SharedPublicIpAddressConfigurationResponse `pulumi:"sharedPublicIpAddressConfiguration"`
	// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
	SshAuthority *string `pulumi:"sshAuthority"`
	// The resource ID of the sub net.
	SubnetId *string `pulumi:"subnetId"`
	// The resource ID of the virtual network.
	VirtualNetworkId *string `pulumi:"virtualNetworkId"`
}

// NetworkInterfacePropertiesResponseInput is an input type that accepts NetworkInterfacePropertiesResponseArgs and NetworkInterfacePropertiesResponseOutput values.
// You can construct a concrete instance of `NetworkInterfacePropertiesResponseInput` via:
//
//          NetworkInterfacePropertiesResponseArgs{...}
type NetworkInterfacePropertiesResponseInput interface {
	pulumi.Input

	ToNetworkInterfacePropertiesResponseOutput() NetworkInterfacePropertiesResponseOutput
	ToNetworkInterfacePropertiesResponseOutputWithContext(context.Context) NetworkInterfacePropertiesResponseOutput
}

// Properties of a network interface.
type NetworkInterfacePropertiesResponseArgs struct {
	// The DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// The private IP address.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// The public IP address.
	PublicIpAddress pulumi.StringPtrInput `pulumi:"publicIpAddress"`
	// The resource ID of the public IP address.
	PublicIpAddressId pulumi.StringPtrInput `pulumi:"publicIpAddressId"`
	// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
	RdpAuthority pulumi.StringPtrInput `pulumi:"rdpAuthority"`
	// The configuration for sharing a public IP address across multiple virtual machines.
	SharedPublicIpAddressConfiguration SharedPublicIpAddressConfigurationResponsePtrInput `pulumi:"sharedPublicIpAddressConfiguration"`
	// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
	SshAuthority pulumi.StringPtrInput `pulumi:"sshAuthority"`
	// The resource ID of the sub net.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The resource ID of the virtual network.
	VirtualNetworkId pulumi.StringPtrInput `pulumi:"virtualNetworkId"`
}

func (NetworkInterfacePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacePropertiesResponse)(nil)).Elem()
}

func (i NetworkInterfacePropertiesResponseArgs) ToNetworkInterfacePropertiesResponseOutput() NetworkInterfacePropertiesResponseOutput {
	return i.ToNetworkInterfacePropertiesResponseOutputWithContext(context.Background())
}

func (i NetworkInterfacePropertiesResponseArgs) ToNetworkInterfacePropertiesResponseOutputWithContext(ctx context.Context) NetworkInterfacePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacePropertiesResponseOutput)
}

func (i NetworkInterfacePropertiesResponseArgs) ToNetworkInterfacePropertiesResponsePtrOutput() NetworkInterfacePropertiesResponsePtrOutput {
	return i.ToNetworkInterfacePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i NetworkInterfacePropertiesResponseArgs) ToNetworkInterfacePropertiesResponsePtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacePropertiesResponseOutput).ToNetworkInterfacePropertiesResponsePtrOutputWithContext(ctx)
}

// NetworkInterfacePropertiesResponsePtrInput is an input type that accepts NetworkInterfacePropertiesResponseArgs, NetworkInterfacePropertiesResponsePtr and NetworkInterfacePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `NetworkInterfacePropertiesResponsePtrInput` via:
//
//          NetworkInterfacePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type NetworkInterfacePropertiesResponsePtrInput interface {
	pulumi.Input

	ToNetworkInterfacePropertiesResponsePtrOutput() NetworkInterfacePropertiesResponsePtrOutput
	ToNetworkInterfacePropertiesResponsePtrOutputWithContext(context.Context) NetworkInterfacePropertiesResponsePtrOutput
}

type networkInterfacePropertiesResponsePtrType NetworkInterfacePropertiesResponseArgs

func NetworkInterfacePropertiesResponsePtr(v *NetworkInterfacePropertiesResponseArgs) NetworkInterfacePropertiesResponsePtrInput {
	return (*networkInterfacePropertiesResponsePtrType)(v)
}

func (*networkInterfacePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfacePropertiesResponse)(nil)).Elem()
}

func (i *networkInterfacePropertiesResponsePtrType) ToNetworkInterfacePropertiesResponsePtrOutput() NetworkInterfacePropertiesResponsePtrOutput {
	return i.ToNetworkInterfacePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *networkInterfacePropertiesResponsePtrType) ToNetworkInterfacePropertiesResponsePtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacePropertiesResponsePtrOutput)
}

// Properties of a network interface.
type NetworkInterfacePropertiesResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfacePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacePropertiesResponse)(nil)).Elem()
}

func (o NetworkInterfacePropertiesResponseOutput) ToNetworkInterfacePropertiesResponseOutput() NetworkInterfacePropertiesResponseOutput {
	return o
}

func (o NetworkInterfacePropertiesResponseOutput) ToNetworkInterfacePropertiesResponseOutputWithContext(ctx context.Context) NetworkInterfacePropertiesResponseOutput {
	return o
}

func (o NetworkInterfacePropertiesResponseOutput) ToNetworkInterfacePropertiesResponsePtrOutput() NetworkInterfacePropertiesResponsePtrOutput {
	return o.ToNetworkInterfacePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfacePropertiesResponseOutput) ToNetworkInterfacePropertiesResponsePtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesResponse) *NetworkInterfacePropertiesResponse {
		return &v
	}).(NetworkInterfacePropertiesResponsePtrOutput)
}

// The DNS name.
func (o NetworkInterfacePropertiesResponseOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesResponse) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// The private IP address.
func (o NetworkInterfacePropertiesResponseOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesResponse) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// The public IP address.
func (o NetworkInterfacePropertiesResponseOutput) PublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesResponse) *string { return v.PublicIpAddress }).(pulumi.StringPtrOutput)
}

// The resource ID of the public IP address.
func (o NetworkInterfacePropertiesResponseOutput) PublicIpAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesResponse) *string { return v.PublicIpAddressId }).(pulumi.StringPtrOutput)
}

// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
func (o NetworkInterfacePropertiesResponseOutput) RdpAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesResponse) *string { return v.RdpAuthority }).(pulumi.StringPtrOutput)
}

// The configuration for sharing a public IP address across multiple virtual machines.
func (o NetworkInterfacePropertiesResponseOutput) SharedPublicIpAddressConfiguration() SharedPublicIpAddressConfigurationResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesResponse) *SharedPublicIpAddressConfigurationResponse {
		return v.SharedPublicIpAddressConfiguration
	}).(SharedPublicIpAddressConfigurationResponsePtrOutput)
}

// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
func (o NetworkInterfacePropertiesResponseOutput) SshAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesResponse) *string { return v.SshAuthority }).(pulumi.StringPtrOutput)
}

// The resource ID of the sub net.
func (o NetworkInterfacePropertiesResponseOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesResponse) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The resource ID of the virtual network.
func (o NetworkInterfacePropertiesResponseOutput) VirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesResponse) *string { return v.VirtualNetworkId }).(pulumi.StringPtrOutput)
}

type NetworkInterfacePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfacePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfacePropertiesResponse)(nil)).Elem()
}

func (o NetworkInterfacePropertiesResponsePtrOutput) ToNetworkInterfacePropertiesResponsePtrOutput() NetworkInterfacePropertiesResponsePtrOutput {
	return o
}

func (o NetworkInterfacePropertiesResponsePtrOutput) ToNetworkInterfacePropertiesResponsePtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesResponsePtrOutput {
	return o
}

func (o NetworkInterfacePropertiesResponsePtrOutput) Elem() NetworkInterfacePropertiesResponseOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesResponse) NetworkInterfacePropertiesResponse { return *v }).(NetworkInterfacePropertiesResponseOutput)
}

// The DNS name.
func (o NetworkInterfacePropertiesResponsePtrOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DnsName
	}).(pulumi.StringPtrOutput)
}

// The private IP address.
func (o NetworkInterfacePropertiesResponsePtrOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIpAddress
	}).(pulumi.StringPtrOutput)
}

// The public IP address.
func (o NetworkInterfacePropertiesResponsePtrOutput) PublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIpAddress
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the public IP address.
func (o NetworkInterfacePropertiesResponsePtrOutput) PublicIpAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIpAddressId
	}).(pulumi.StringPtrOutput)
}

// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
func (o NetworkInterfacePropertiesResponsePtrOutput) RdpAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RdpAuthority
	}).(pulumi.StringPtrOutput)
}

// The configuration for sharing a public IP address across multiple virtual machines.
func (o NetworkInterfacePropertiesResponsePtrOutput) SharedPublicIpAddressConfiguration() SharedPublicIpAddressConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesResponse) *SharedPublicIpAddressConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.SharedPublicIpAddressConfiguration
	}).(SharedPublicIpAddressConfigurationResponsePtrOutput)
}

// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
func (o NetworkInterfacePropertiesResponsePtrOutput) SshAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SshAuthority
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the sub net.
func (o NetworkInterfacePropertiesResponsePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the virtual network.
func (o NetworkInterfacePropertiesResponsePtrOutput) VirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkId
	}).(pulumi.StringPtrOutput)
}

// Notification settings for a schedule.
type NotificationSettings struct {
	// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
	EmailRecipient *string `pulumi:"emailRecipient"`
	// The locale to use when sending a notification (fallback for unsupported languages is EN).
	NotificationLocale *string `pulumi:"notificationLocale"`
	// If notifications are enabled for this schedule (i.e. Enabled, Disabled).
	Status *string `pulumi:"status"`
	// Time in minutes before event at which notification will be sent.
	TimeInMinutes *int `pulumi:"timeInMinutes"`
	// The webhook URL to which the notification will be sent.
	WebhookUrl *string `pulumi:"webhookUrl"`
}

// NotificationSettingsInput is an input type that accepts NotificationSettingsArgs and NotificationSettingsOutput values.
// You can construct a concrete instance of `NotificationSettingsInput` via:
//
//          NotificationSettingsArgs{...}
type NotificationSettingsInput interface {
	pulumi.Input

	ToNotificationSettingsOutput() NotificationSettingsOutput
	ToNotificationSettingsOutputWithContext(context.Context) NotificationSettingsOutput
}

// Notification settings for a schedule.
type NotificationSettingsArgs struct {
	// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
	EmailRecipient pulumi.StringPtrInput `pulumi:"emailRecipient"`
	// The locale to use when sending a notification (fallback for unsupported languages is EN).
	NotificationLocale pulumi.StringPtrInput `pulumi:"notificationLocale"`
	// If notifications are enabled for this schedule (i.e. Enabled, Disabled).
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Time in minutes before event at which notification will be sent.
	TimeInMinutes pulumi.IntPtrInput `pulumi:"timeInMinutes"`
	// The webhook URL to which the notification will be sent.
	WebhookUrl pulumi.StringPtrInput `pulumi:"webhookUrl"`
}

func (NotificationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationSettings)(nil)).Elem()
}

func (i NotificationSettingsArgs) ToNotificationSettingsOutput() NotificationSettingsOutput {
	return i.ToNotificationSettingsOutputWithContext(context.Background())
}

func (i NotificationSettingsArgs) ToNotificationSettingsOutputWithContext(ctx context.Context) NotificationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSettingsOutput)
}

func (i NotificationSettingsArgs) ToNotificationSettingsPtrOutput() NotificationSettingsPtrOutput {
	return i.ToNotificationSettingsPtrOutputWithContext(context.Background())
}

func (i NotificationSettingsArgs) ToNotificationSettingsPtrOutputWithContext(ctx context.Context) NotificationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSettingsOutput).ToNotificationSettingsPtrOutputWithContext(ctx)
}

// NotificationSettingsPtrInput is an input type that accepts NotificationSettingsArgs, NotificationSettingsPtr and NotificationSettingsPtrOutput values.
// You can construct a concrete instance of `NotificationSettingsPtrInput` via:
//
//          NotificationSettingsArgs{...}
//
//  or:
//
//          nil
type NotificationSettingsPtrInput interface {
	pulumi.Input

	ToNotificationSettingsPtrOutput() NotificationSettingsPtrOutput
	ToNotificationSettingsPtrOutputWithContext(context.Context) NotificationSettingsPtrOutput
}

type notificationSettingsPtrType NotificationSettingsArgs

func NotificationSettingsPtr(v *NotificationSettingsArgs) NotificationSettingsPtrInput {
	return (*notificationSettingsPtrType)(v)
}

func (*notificationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationSettings)(nil)).Elem()
}

func (i *notificationSettingsPtrType) ToNotificationSettingsPtrOutput() NotificationSettingsPtrOutput {
	return i.ToNotificationSettingsPtrOutputWithContext(context.Background())
}

func (i *notificationSettingsPtrType) ToNotificationSettingsPtrOutputWithContext(ctx context.Context) NotificationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSettingsPtrOutput)
}

// Notification settings for a schedule.
type NotificationSettingsOutput struct{ *pulumi.OutputState }

func (NotificationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationSettings)(nil)).Elem()
}

func (o NotificationSettingsOutput) ToNotificationSettingsOutput() NotificationSettingsOutput {
	return o
}

func (o NotificationSettingsOutput) ToNotificationSettingsOutputWithContext(ctx context.Context) NotificationSettingsOutput {
	return o
}

func (o NotificationSettingsOutput) ToNotificationSettingsPtrOutput() NotificationSettingsPtrOutput {
	return o.ToNotificationSettingsPtrOutputWithContext(context.Background())
}

func (o NotificationSettingsOutput) ToNotificationSettingsPtrOutputWithContext(ctx context.Context) NotificationSettingsPtrOutput {
	return o.ApplyT(func(v NotificationSettings) *NotificationSettings {
		return &v
	}).(NotificationSettingsPtrOutput)
}

// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
func (o NotificationSettingsOutput) EmailRecipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSettings) *string { return v.EmailRecipient }).(pulumi.StringPtrOutput)
}

// The locale to use when sending a notification (fallback for unsupported languages is EN).
func (o NotificationSettingsOutput) NotificationLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSettings) *string { return v.NotificationLocale }).(pulumi.StringPtrOutput)
}

// If notifications are enabled for this schedule (i.e. Enabled, Disabled).
func (o NotificationSettingsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSettings) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Time in minutes before event at which notification will be sent.
func (o NotificationSettingsOutput) TimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NotificationSettings) *int { return v.TimeInMinutes }).(pulumi.IntPtrOutput)
}

// The webhook URL to which the notification will be sent.
func (o NotificationSettingsOutput) WebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSettings) *string { return v.WebhookUrl }).(pulumi.StringPtrOutput)
}

type NotificationSettingsPtrOutput struct{ *pulumi.OutputState }

func (NotificationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationSettings)(nil)).Elem()
}

func (o NotificationSettingsPtrOutput) ToNotificationSettingsPtrOutput() NotificationSettingsPtrOutput {
	return o
}

func (o NotificationSettingsPtrOutput) ToNotificationSettingsPtrOutputWithContext(ctx context.Context) NotificationSettingsPtrOutput {
	return o
}

func (o NotificationSettingsPtrOutput) Elem() NotificationSettingsOutput {
	return o.ApplyT(func(v *NotificationSettings) NotificationSettings { return *v }).(NotificationSettingsOutput)
}

// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
func (o NotificationSettingsPtrOutput) EmailRecipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSettings) *string {
		if v == nil {
			return nil
		}
		return v.EmailRecipient
	}).(pulumi.StringPtrOutput)
}

// The locale to use when sending a notification (fallback for unsupported languages is EN).
func (o NotificationSettingsPtrOutput) NotificationLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSettings) *string {
		if v == nil {
			return nil
		}
		return v.NotificationLocale
	}).(pulumi.StringPtrOutput)
}

// If notifications are enabled for this schedule (i.e. Enabled, Disabled).
func (o NotificationSettingsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSettings) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Time in minutes before event at which notification will be sent.
func (o NotificationSettingsPtrOutput) TimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NotificationSettings) *int {
		if v == nil {
			return nil
		}
		return v.TimeInMinutes
	}).(pulumi.IntPtrOutput)
}

// The webhook URL to which the notification will be sent.
func (o NotificationSettingsPtrOutput) WebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSettings) *string {
		if v == nil {
			return nil
		}
		return v.WebhookUrl
	}).(pulumi.StringPtrOutput)
}

// Notification settings for a schedule.
type NotificationSettingsInvokeResponse struct {
	// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
	EmailRecipient *string `pulumi:"emailRecipient"`
	// The locale to use when sending a notification (fallback for unsupported languages is EN).
	NotificationLocale *string `pulumi:"notificationLocale"`
	// If notifications are enabled for this schedule (i.e. Enabled, Disabled).
	Status *string `pulumi:"status"`
	// Time in minutes before event at which notification will be sent.
	TimeInMinutes *int `pulumi:"timeInMinutes"`
	// The webhook URL to which the notification will be sent.
	WebhookUrl *string `pulumi:"webhookUrl"`
}

// NotificationSettingsInvokeResponseInput is an input type that accepts NotificationSettingsInvokeResponseArgs and NotificationSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `NotificationSettingsInvokeResponseInput` via:
//
//          NotificationSettingsInvokeResponseArgs{...}
type NotificationSettingsInvokeResponseInput interface {
	pulumi.Input

	ToNotificationSettingsInvokeResponseOutput() NotificationSettingsInvokeResponseOutput
	ToNotificationSettingsInvokeResponseOutputWithContext(context.Context) NotificationSettingsInvokeResponseOutput
}

// Notification settings for a schedule.
type NotificationSettingsInvokeResponseArgs struct {
	// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
	EmailRecipient pulumi.StringPtrInput `pulumi:"emailRecipient"`
	// The locale to use when sending a notification (fallback for unsupported languages is EN).
	NotificationLocale pulumi.StringPtrInput `pulumi:"notificationLocale"`
	// If notifications are enabled for this schedule (i.e. Enabled, Disabled).
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Time in minutes before event at which notification will be sent.
	TimeInMinutes pulumi.IntPtrInput `pulumi:"timeInMinutes"`
	// The webhook URL to which the notification will be sent.
	WebhookUrl pulumi.StringPtrInput `pulumi:"webhookUrl"`
}

func (NotificationSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationSettingsInvokeResponse)(nil)).Elem()
}

func (i NotificationSettingsInvokeResponseArgs) ToNotificationSettingsInvokeResponseOutput() NotificationSettingsInvokeResponseOutput {
	return i.ToNotificationSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i NotificationSettingsInvokeResponseArgs) ToNotificationSettingsInvokeResponseOutputWithContext(ctx context.Context) NotificationSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSettingsInvokeResponseOutput)
}

func (i NotificationSettingsInvokeResponseArgs) ToNotificationSettingsInvokeResponsePtrOutput() NotificationSettingsInvokeResponsePtrOutput {
	return i.ToNotificationSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i NotificationSettingsInvokeResponseArgs) ToNotificationSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) NotificationSettingsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSettingsInvokeResponseOutput).ToNotificationSettingsInvokeResponsePtrOutputWithContext(ctx)
}

// NotificationSettingsInvokeResponsePtrInput is an input type that accepts NotificationSettingsInvokeResponseArgs, NotificationSettingsInvokeResponsePtr and NotificationSettingsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `NotificationSettingsInvokeResponsePtrInput` via:
//
//          NotificationSettingsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type NotificationSettingsInvokeResponsePtrInput interface {
	pulumi.Input

	ToNotificationSettingsInvokeResponsePtrOutput() NotificationSettingsInvokeResponsePtrOutput
	ToNotificationSettingsInvokeResponsePtrOutputWithContext(context.Context) NotificationSettingsInvokeResponsePtrOutput
}

type notificationSettingsInvokeResponsePtrType NotificationSettingsInvokeResponseArgs

func NotificationSettingsInvokeResponsePtr(v *NotificationSettingsInvokeResponseArgs) NotificationSettingsInvokeResponsePtrInput {
	return (*notificationSettingsInvokeResponsePtrType)(v)
}

func (*notificationSettingsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationSettingsInvokeResponse)(nil)).Elem()
}

func (i *notificationSettingsInvokeResponsePtrType) ToNotificationSettingsInvokeResponsePtrOutput() NotificationSettingsInvokeResponsePtrOutput {
	return i.ToNotificationSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *notificationSettingsInvokeResponsePtrType) ToNotificationSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) NotificationSettingsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSettingsInvokeResponsePtrOutput)
}

// Notification settings for a schedule.
type NotificationSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (NotificationSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationSettingsInvokeResponse)(nil)).Elem()
}

func (o NotificationSettingsInvokeResponseOutput) ToNotificationSettingsInvokeResponseOutput() NotificationSettingsInvokeResponseOutput {
	return o
}

func (o NotificationSettingsInvokeResponseOutput) ToNotificationSettingsInvokeResponseOutputWithContext(ctx context.Context) NotificationSettingsInvokeResponseOutput {
	return o
}

func (o NotificationSettingsInvokeResponseOutput) ToNotificationSettingsInvokeResponsePtrOutput() NotificationSettingsInvokeResponsePtrOutput {
	return o.ToNotificationSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o NotificationSettingsInvokeResponseOutput) ToNotificationSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) NotificationSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v NotificationSettingsInvokeResponse) *NotificationSettingsInvokeResponse {
		return &v
	}).(NotificationSettingsInvokeResponsePtrOutput)
}

// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
func (o NotificationSettingsInvokeResponseOutput) EmailRecipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSettingsInvokeResponse) *string { return v.EmailRecipient }).(pulumi.StringPtrOutput)
}

// The locale to use when sending a notification (fallback for unsupported languages is EN).
func (o NotificationSettingsInvokeResponseOutput) NotificationLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSettingsInvokeResponse) *string { return v.NotificationLocale }).(pulumi.StringPtrOutput)
}

// If notifications are enabled for this schedule (i.e. Enabled, Disabled).
func (o NotificationSettingsInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSettingsInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Time in minutes before event at which notification will be sent.
func (o NotificationSettingsInvokeResponseOutput) TimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NotificationSettingsInvokeResponse) *int { return v.TimeInMinutes }).(pulumi.IntPtrOutput)
}

// The webhook URL to which the notification will be sent.
func (o NotificationSettingsInvokeResponseOutput) WebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSettingsInvokeResponse) *string { return v.WebhookUrl }).(pulumi.StringPtrOutput)
}

type NotificationSettingsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (NotificationSettingsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationSettingsInvokeResponse)(nil)).Elem()
}

func (o NotificationSettingsInvokeResponsePtrOutput) ToNotificationSettingsInvokeResponsePtrOutput() NotificationSettingsInvokeResponsePtrOutput {
	return o
}

func (o NotificationSettingsInvokeResponsePtrOutput) ToNotificationSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) NotificationSettingsInvokeResponsePtrOutput {
	return o
}

func (o NotificationSettingsInvokeResponsePtrOutput) Elem() NotificationSettingsInvokeResponseOutput {
	return o.ApplyT(func(v *NotificationSettingsInvokeResponse) NotificationSettingsInvokeResponse { return *v }).(NotificationSettingsInvokeResponseOutput)
}

// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
func (o NotificationSettingsInvokeResponsePtrOutput) EmailRecipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.EmailRecipient
	}).(pulumi.StringPtrOutput)
}

// The locale to use when sending a notification (fallback for unsupported languages is EN).
func (o NotificationSettingsInvokeResponsePtrOutput) NotificationLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.NotificationLocale
	}).(pulumi.StringPtrOutput)
}

// If notifications are enabled for this schedule (i.e. Enabled, Disabled).
func (o NotificationSettingsInvokeResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Time in minutes before event at which notification will be sent.
func (o NotificationSettingsInvokeResponsePtrOutput) TimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NotificationSettingsInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.TimeInMinutes
	}).(pulumi.IntPtrOutput)
}

// The webhook URL to which the notification will be sent.
func (o NotificationSettingsInvokeResponsePtrOutput) WebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.WebhookUrl
	}).(pulumi.StringPtrOutput)
}

// Notification settings for a schedule.
type NotificationSettingsResponse struct {
	// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
	EmailRecipient *string `pulumi:"emailRecipient"`
	// The locale to use when sending a notification (fallback for unsupported languages is EN).
	NotificationLocale *string `pulumi:"notificationLocale"`
	// If notifications are enabled for this schedule (i.e. Enabled, Disabled).
	Status *string `pulumi:"status"`
	// Time in minutes before event at which notification will be sent.
	TimeInMinutes *int `pulumi:"timeInMinutes"`
	// The webhook URL to which the notification will be sent.
	WebhookUrl *string `pulumi:"webhookUrl"`
}

// NotificationSettingsResponseInput is an input type that accepts NotificationSettingsResponseArgs and NotificationSettingsResponseOutput values.
// You can construct a concrete instance of `NotificationSettingsResponseInput` via:
//
//          NotificationSettingsResponseArgs{...}
type NotificationSettingsResponseInput interface {
	pulumi.Input

	ToNotificationSettingsResponseOutput() NotificationSettingsResponseOutput
	ToNotificationSettingsResponseOutputWithContext(context.Context) NotificationSettingsResponseOutput
}

// Notification settings for a schedule.
type NotificationSettingsResponseArgs struct {
	// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
	EmailRecipient pulumi.StringPtrInput `pulumi:"emailRecipient"`
	// The locale to use when sending a notification (fallback for unsupported languages is EN).
	NotificationLocale pulumi.StringPtrInput `pulumi:"notificationLocale"`
	// If notifications are enabled for this schedule (i.e. Enabled, Disabled).
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Time in minutes before event at which notification will be sent.
	TimeInMinutes pulumi.IntPtrInput `pulumi:"timeInMinutes"`
	// The webhook URL to which the notification will be sent.
	WebhookUrl pulumi.StringPtrInput `pulumi:"webhookUrl"`
}

func (NotificationSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationSettingsResponse)(nil)).Elem()
}

func (i NotificationSettingsResponseArgs) ToNotificationSettingsResponseOutput() NotificationSettingsResponseOutput {
	return i.ToNotificationSettingsResponseOutputWithContext(context.Background())
}

func (i NotificationSettingsResponseArgs) ToNotificationSettingsResponseOutputWithContext(ctx context.Context) NotificationSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSettingsResponseOutput)
}

func (i NotificationSettingsResponseArgs) ToNotificationSettingsResponsePtrOutput() NotificationSettingsResponsePtrOutput {
	return i.ToNotificationSettingsResponsePtrOutputWithContext(context.Background())
}

func (i NotificationSettingsResponseArgs) ToNotificationSettingsResponsePtrOutputWithContext(ctx context.Context) NotificationSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSettingsResponseOutput).ToNotificationSettingsResponsePtrOutputWithContext(ctx)
}

// NotificationSettingsResponsePtrInput is an input type that accepts NotificationSettingsResponseArgs, NotificationSettingsResponsePtr and NotificationSettingsResponsePtrOutput values.
// You can construct a concrete instance of `NotificationSettingsResponsePtrInput` via:
//
//          NotificationSettingsResponseArgs{...}
//
//  or:
//
//          nil
type NotificationSettingsResponsePtrInput interface {
	pulumi.Input

	ToNotificationSettingsResponsePtrOutput() NotificationSettingsResponsePtrOutput
	ToNotificationSettingsResponsePtrOutputWithContext(context.Context) NotificationSettingsResponsePtrOutput
}

type notificationSettingsResponsePtrType NotificationSettingsResponseArgs

func NotificationSettingsResponsePtr(v *NotificationSettingsResponseArgs) NotificationSettingsResponsePtrInput {
	return (*notificationSettingsResponsePtrType)(v)
}

func (*notificationSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationSettingsResponse)(nil)).Elem()
}

func (i *notificationSettingsResponsePtrType) ToNotificationSettingsResponsePtrOutput() NotificationSettingsResponsePtrOutput {
	return i.ToNotificationSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *notificationSettingsResponsePtrType) ToNotificationSettingsResponsePtrOutputWithContext(ctx context.Context) NotificationSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSettingsResponsePtrOutput)
}

// Notification settings for a schedule.
type NotificationSettingsResponseOutput struct{ *pulumi.OutputState }

func (NotificationSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationSettingsResponse)(nil)).Elem()
}

func (o NotificationSettingsResponseOutput) ToNotificationSettingsResponseOutput() NotificationSettingsResponseOutput {
	return o
}

func (o NotificationSettingsResponseOutput) ToNotificationSettingsResponseOutputWithContext(ctx context.Context) NotificationSettingsResponseOutput {
	return o
}

func (o NotificationSettingsResponseOutput) ToNotificationSettingsResponsePtrOutput() NotificationSettingsResponsePtrOutput {
	return o.ToNotificationSettingsResponsePtrOutputWithContext(context.Background())
}

func (o NotificationSettingsResponseOutput) ToNotificationSettingsResponsePtrOutputWithContext(ctx context.Context) NotificationSettingsResponsePtrOutput {
	return o.ApplyT(func(v NotificationSettingsResponse) *NotificationSettingsResponse {
		return &v
	}).(NotificationSettingsResponsePtrOutput)
}

// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
func (o NotificationSettingsResponseOutput) EmailRecipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSettingsResponse) *string { return v.EmailRecipient }).(pulumi.StringPtrOutput)
}

// The locale to use when sending a notification (fallback for unsupported languages is EN).
func (o NotificationSettingsResponseOutput) NotificationLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSettingsResponse) *string { return v.NotificationLocale }).(pulumi.StringPtrOutput)
}

// If notifications are enabled for this schedule (i.e. Enabled, Disabled).
func (o NotificationSettingsResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSettingsResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Time in minutes before event at which notification will be sent.
func (o NotificationSettingsResponseOutput) TimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NotificationSettingsResponse) *int { return v.TimeInMinutes }).(pulumi.IntPtrOutput)
}

// The webhook URL to which the notification will be sent.
func (o NotificationSettingsResponseOutput) WebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSettingsResponse) *string { return v.WebhookUrl }).(pulumi.StringPtrOutput)
}

type NotificationSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (NotificationSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationSettingsResponse)(nil)).Elem()
}

func (o NotificationSettingsResponsePtrOutput) ToNotificationSettingsResponsePtrOutput() NotificationSettingsResponsePtrOutput {
	return o
}

func (o NotificationSettingsResponsePtrOutput) ToNotificationSettingsResponsePtrOutputWithContext(ctx context.Context) NotificationSettingsResponsePtrOutput {
	return o
}

func (o NotificationSettingsResponsePtrOutput) Elem() NotificationSettingsResponseOutput {
	return o.ApplyT(func(v *NotificationSettingsResponse) NotificationSettingsResponse { return *v }).(NotificationSettingsResponseOutput)
}

// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
func (o NotificationSettingsResponsePtrOutput) EmailRecipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EmailRecipient
	}).(pulumi.StringPtrOutput)
}

// The locale to use when sending a notification (fallback for unsupported languages is EN).
func (o NotificationSettingsResponsePtrOutput) NotificationLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.NotificationLocale
	}).(pulumi.StringPtrOutput)
}

// If notifications are enabled for this schedule (i.e. Enabled, Disabled).
func (o NotificationSettingsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Time in minutes before event at which notification will be sent.
func (o NotificationSettingsResponsePtrOutput) TimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NotificationSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.TimeInMinutes
	}).(pulumi.IntPtrOutput)
}

// The webhook URL to which the notification will be sent.
func (o NotificationSettingsResponsePtrOutput) WebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.WebhookUrl
	}).(pulumi.StringPtrOutput)
}

// Properties of a network port.
type Port struct {
	// Backend port of the target virtual machine.
	BackendPort *int `pulumi:"backendPort"`
	// Protocol type of the port.
	TransportProtocol *string `pulumi:"transportProtocol"`
}

// PortInput is an input type that accepts PortArgs and PortOutput values.
// You can construct a concrete instance of `PortInput` via:
//
//          PortArgs{...}
type PortInput interface {
	pulumi.Input

	ToPortOutput() PortOutput
	ToPortOutputWithContext(context.Context) PortOutput
}

// Properties of a network port.
type PortArgs struct {
	// Backend port of the target virtual machine.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Protocol type of the port.
	TransportProtocol pulumi.StringPtrInput `pulumi:"transportProtocol"`
}

func (PortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Port)(nil)).Elem()
}

func (i PortArgs) ToPortOutput() PortOutput {
	return i.ToPortOutputWithContext(context.Background())
}

func (i PortArgs) ToPortOutputWithContext(ctx context.Context) PortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortOutput)
}

// PortArrayInput is an input type that accepts PortArray and PortArrayOutput values.
// You can construct a concrete instance of `PortArrayInput` via:
//
//          PortArray{ PortArgs{...} }
type PortArrayInput interface {
	pulumi.Input

	ToPortArrayOutput() PortArrayOutput
	ToPortArrayOutputWithContext(context.Context) PortArrayOutput
}

type PortArray []PortInput

func (PortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Port)(nil)).Elem()
}

func (i PortArray) ToPortArrayOutput() PortArrayOutput {
	return i.ToPortArrayOutputWithContext(context.Background())
}

func (i PortArray) ToPortArrayOutputWithContext(ctx context.Context) PortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortArrayOutput)
}

// Properties of a network port.
type PortOutput struct{ *pulumi.OutputState }

func (PortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Port)(nil)).Elem()
}

func (o PortOutput) ToPortOutput() PortOutput {
	return o
}

func (o PortOutput) ToPortOutputWithContext(ctx context.Context) PortOutput {
	return o
}

// Backend port of the target virtual machine.
func (o PortOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Port) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Protocol type of the port.
func (o PortOutput) TransportProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Port) *string { return v.TransportProtocol }).(pulumi.StringPtrOutput)
}

type PortArrayOutput struct{ *pulumi.OutputState }

func (PortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Port)(nil)).Elem()
}

func (o PortArrayOutput) ToPortArrayOutput() PortArrayOutput {
	return o
}

func (o PortArrayOutput) ToPortArrayOutputWithContext(ctx context.Context) PortArrayOutput {
	return o
}

func (o PortArrayOutput) Index(i pulumi.IntInput) PortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Port {
		return vs[0].([]Port)[vs[1].(int)]
	}).(PortOutput)
}

// Properties of a network port.
type PortInvokeResponse struct {
	// Backend port of the target virtual machine.
	BackendPort *int `pulumi:"backendPort"`
	// Protocol type of the port.
	TransportProtocol *string `pulumi:"transportProtocol"`
}

// PortInvokeResponseInput is an input type that accepts PortInvokeResponseArgs and PortInvokeResponseOutput values.
// You can construct a concrete instance of `PortInvokeResponseInput` via:
//
//          PortInvokeResponseArgs{...}
type PortInvokeResponseInput interface {
	pulumi.Input

	ToPortInvokeResponseOutput() PortInvokeResponseOutput
	ToPortInvokeResponseOutputWithContext(context.Context) PortInvokeResponseOutput
}

// Properties of a network port.
type PortInvokeResponseArgs struct {
	// Backend port of the target virtual machine.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Protocol type of the port.
	TransportProtocol pulumi.StringPtrInput `pulumi:"transportProtocol"`
}

func (PortInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortInvokeResponse)(nil)).Elem()
}

func (i PortInvokeResponseArgs) ToPortInvokeResponseOutput() PortInvokeResponseOutput {
	return i.ToPortInvokeResponseOutputWithContext(context.Background())
}

func (i PortInvokeResponseArgs) ToPortInvokeResponseOutputWithContext(ctx context.Context) PortInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortInvokeResponseOutput)
}

// PortInvokeResponseArrayInput is an input type that accepts PortInvokeResponseArray and PortInvokeResponseArrayOutput values.
// You can construct a concrete instance of `PortInvokeResponseArrayInput` via:
//
//          PortInvokeResponseArray{ PortInvokeResponseArgs{...} }
type PortInvokeResponseArrayInput interface {
	pulumi.Input

	ToPortInvokeResponseArrayOutput() PortInvokeResponseArrayOutput
	ToPortInvokeResponseArrayOutputWithContext(context.Context) PortInvokeResponseArrayOutput
}

type PortInvokeResponseArray []PortInvokeResponseInput

func (PortInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortInvokeResponse)(nil)).Elem()
}

func (i PortInvokeResponseArray) ToPortInvokeResponseArrayOutput() PortInvokeResponseArrayOutput {
	return i.ToPortInvokeResponseArrayOutputWithContext(context.Background())
}

func (i PortInvokeResponseArray) ToPortInvokeResponseArrayOutputWithContext(ctx context.Context) PortInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortInvokeResponseArrayOutput)
}

// Properties of a network port.
type PortInvokeResponseOutput struct{ *pulumi.OutputState }

func (PortInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortInvokeResponse)(nil)).Elem()
}

func (o PortInvokeResponseOutput) ToPortInvokeResponseOutput() PortInvokeResponseOutput {
	return o
}

func (o PortInvokeResponseOutput) ToPortInvokeResponseOutputWithContext(ctx context.Context) PortInvokeResponseOutput {
	return o
}

// Backend port of the target virtual machine.
func (o PortInvokeResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PortInvokeResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Protocol type of the port.
func (o PortInvokeResponseOutput) TransportProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortInvokeResponse) *string { return v.TransportProtocol }).(pulumi.StringPtrOutput)
}

type PortInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (PortInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortInvokeResponse)(nil)).Elem()
}

func (o PortInvokeResponseArrayOutput) ToPortInvokeResponseArrayOutput() PortInvokeResponseArrayOutput {
	return o
}

func (o PortInvokeResponseArrayOutput) ToPortInvokeResponseArrayOutputWithContext(ctx context.Context) PortInvokeResponseArrayOutput {
	return o
}

func (o PortInvokeResponseArrayOutput) Index(i pulumi.IntInput) PortInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PortInvokeResponse {
		return vs[0].([]PortInvokeResponse)[vs[1].(int)]
	}).(PortInvokeResponseOutput)
}

// Properties of a network port.
type PortResponse struct {
	// Backend port of the target virtual machine.
	BackendPort *int `pulumi:"backendPort"`
	// Protocol type of the port.
	TransportProtocol *string `pulumi:"transportProtocol"`
}

// PortResponseInput is an input type that accepts PortResponseArgs and PortResponseOutput values.
// You can construct a concrete instance of `PortResponseInput` via:
//
//          PortResponseArgs{...}
type PortResponseInput interface {
	pulumi.Input

	ToPortResponseOutput() PortResponseOutput
	ToPortResponseOutputWithContext(context.Context) PortResponseOutput
}

// Properties of a network port.
type PortResponseArgs struct {
	// Backend port of the target virtual machine.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Protocol type of the port.
	TransportProtocol pulumi.StringPtrInput `pulumi:"transportProtocol"`
}

func (PortResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortResponse)(nil)).Elem()
}

func (i PortResponseArgs) ToPortResponseOutput() PortResponseOutput {
	return i.ToPortResponseOutputWithContext(context.Background())
}

func (i PortResponseArgs) ToPortResponseOutputWithContext(ctx context.Context) PortResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortResponseOutput)
}

// PortResponseArrayInput is an input type that accepts PortResponseArray and PortResponseArrayOutput values.
// You can construct a concrete instance of `PortResponseArrayInput` via:
//
//          PortResponseArray{ PortResponseArgs{...} }
type PortResponseArrayInput interface {
	pulumi.Input

	ToPortResponseArrayOutput() PortResponseArrayOutput
	ToPortResponseArrayOutputWithContext(context.Context) PortResponseArrayOutput
}

type PortResponseArray []PortResponseInput

func (PortResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortResponse)(nil)).Elem()
}

func (i PortResponseArray) ToPortResponseArrayOutput() PortResponseArrayOutput {
	return i.ToPortResponseArrayOutputWithContext(context.Background())
}

func (i PortResponseArray) ToPortResponseArrayOutputWithContext(ctx context.Context) PortResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortResponseArrayOutput)
}

// Properties of a network port.
type PortResponseOutput struct{ *pulumi.OutputState }

func (PortResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortResponse)(nil)).Elem()
}

func (o PortResponseOutput) ToPortResponseOutput() PortResponseOutput {
	return o
}

func (o PortResponseOutput) ToPortResponseOutputWithContext(ctx context.Context) PortResponseOutput {
	return o
}

// Backend port of the target virtual machine.
func (o PortResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PortResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Protocol type of the port.
func (o PortResponseOutput) TransportProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortResponse) *string { return v.TransportProtocol }).(pulumi.StringPtrOutput)
}

type PortResponseArrayOutput struct{ *pulumi.OutputState }

func (PortResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortResponse)(nil)).Elem()
}

func (o PortResponseArrayOutput) ToPortResponseArrayOutput() PortResponseArrayOutput {
	return o
}

func (o PortResponseArrayOutput) ToPortResponseArrayOutputWithContext(ctx context.Context) PortResponseArrayOutput {
	return o
}

func (o PortResponseArrayOutput) Index(i pulumi.IntInput) PortResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PortResponse {
		return vs[0].([]PortResponse)[vs[1].(int)]
	}).(PortResponseOutput)
}

// Properties for creating a schedule.
type ScheduleCreationParameter struct {
	// If the schedule will occur once each day of the week, specify the daily recurrence.
	DailyRecurrence *DayDetails `pulumi:"dailyRecurrence"`
	// If the schedule will occur multiple times a day, specify the hourly recurrence.
	HourlyRecurrence *HourDetails `pulumi:"hourlyRecurrence"`
	// The location of the new virtual machine or environment
	Location *string `pulumi:"location"`
	// The name of the virtual machine or environment
	Name *string `pulumi:"name"`
	// Notification settings.
	NotificationSettings *NotificationSettings `pulumi:"notificationSettings"`
	// The status of the schedule (i.e. Enabled, Disabled)
	Status *string `pulumi:"status"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The resource ID to which the schedule belongs
	TargetResourceId *string `pulumi:"targetResourceId"`
	// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
	TaskType *string `pulumi:"taskType"`
	// The time zone ID (e.g. Pacific Standard time).
	TimeZoneId *string `pulumi:"timeZoneId"`
	// If the schedule will occur only some days of the week, specify the weekly recurrence.
	WeeklyRecurrence *WeekDetails `pulumi:"weeklyRecurrence"`
}

// ScheduleCreationParameterInput is an input type that accepts ScheduleCreationParameterArgs and ScheduleCreationParameterOutput values.
// You can construct a concrete instance of `ScheduleCreationParameterInput` via:
//
//          ScheduleCreationParameterArgs{...}
type ScheduleCreationParameterInput interface {
	pulumi.Input

	ToScheduleCreationParameterOutput() ScheduleCreationParameterOutput
	ToScheduleCreationParameterOutputWithContext(context.Context) ScheduleCreationParameterOutput
}

// Properties for creating a schedule.
type ScheduleCreationParameterArgs struct {
	// If the schedule will occur once each day of the week, specify the daily recurrence.
	DailyRecurrence DayDetailsPtrInput `pulumi:"dailyRecurrence"`
	// If the schedule will occur multiple times a day, specify the hourly recurrence.
	HourlyRecurrence HourDetailsPtrInput `pulumi:"hourlyRecurrence"`
	// The location of the new virtual machine or environment
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the virtual machine or environment
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Notification settings.
	NotificationSettings NotificationSettingsPtrInput `pulumi:"notificationSettings"`
	// The status of the schedule (i.e. Enabled, Disabled)
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The resource ID to which the schedule belongs
	TargetResourceId pulumi.StringPtrInput `pulumi:"targetResourceId"`
	// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The time zone ID (e.g. Pacific Standard time).
	TimeZoneId pulumi.StringPtrInput `pulumi:"timeZoneId"`
	// If the schedule will occur only some days of the week, specify the weekly recurrence.
	WeeklyRecurrence WeekDetailsPtrInput `pulumi:"weeklyRecurrence"`
}

func (ScheduleCreationParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleCreationParameter)(nil)).Elem()
}

func (i ScheduleCreationParameterArgs) ToScheduleCreationParameterOutput() ScheduleCreationParameterOutput {
	return i.ToScheduleCreationParameterOutputWithContext(context.Background())
}

func (i ScheduleCreationParameterArgs) ToScheduleCreationParameterOutputWithContext(ctx context.Context) ScheduleCreationParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleCreationParameterOutput)
}

// ScheduleCreationParameterArrayInput is an input type that accepts ScheduleCreationParameterArray and ScheduleCreationParameterArrayOutput values.
// You can construct a concrete instance of `ScheduleCreationParameterArrayInput` via:
//
//          ScheduleCreationParameterArray{ ScheduleCreationParameterArgs{...} }
type ScheduleCreationParameterArrayInput interface {
	pulumi.Input

	ToScheduleCreationParameterArrayOutput() ScheduleCreationParameterArrayOutput
	ToScheduleCreationParameterArrayOutputWithContext(context.Context) ScheduleCreationParameterArrayOutput
}

type ScheduleCreationParameterArray []ScheduleCreationParameterInput

func (ScheduleCreationParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleCreationParameter)(nil)).Elem()
}

func (i ScheduleCreationParameterArray) ToScheduleCreationParameterArrayOutput() ScheduleCreationParameterArrayOutput {
	return i.ToScheduleCreationParameterArrayOutputWithContext(context.Background())
}

func (i ScheduleCreationParameterArray) ToScheduleCreationParameterArrayOutputWithContext(ctx context.Context) ScheduleCreationParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleCreationParameterArrayOutput)
}

// Properties for creating a schedule.
type ScheduleCreationParameterOutput struct{ *pulumi.OutputState }

func (ScheduleCreationParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleCreationParameter)(nil)).Elem()
}

func (o ScheduleCreationParameterOutput) ToScheduleCreationParameterOutput() ScheduleCreationParameterOutput {
	return o
}

func (o ScheduleCreationParameterOutput) ToScheduleCreationParameterOutputWithContext(ctx context.Context) ScheduleCreationParameterOutput {
	return o
}

// If the schedule will occur once each day of the week, specify the daily recurrence.
func (o ScheduleCreationParameterOutput) DailyRecurrence() DayDetailsPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameter) *DayDetails { return v.DailyRecurrence }).(DayDetailsPtrOutput)
}

// If the schedule will occur multiple times a day, specify the hourly recurrence.
func (o ScheduleCreationParameterOutput) HourlyRecurrence() HourDetailsPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameter) *HourDetails { return v.HourlyRecurrence }).(HourDetailsPtrOutput)
}

// The location of the new virtual machine or environment
func (o ScheduleCreationParameterOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameter) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the virtual machine or environment
func (o ScheduleCreationParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Notification settings.
func (o ScheduleCreationParameterOutput) NotificationSettings() NotificationSettingsPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameter) *NotificationSettings { return v.NotificationSettings }).(NotificationSettingsPtrOutput)
}

// The status of the schedule (i.e. Enabled, Disabled)
func (o ScheduleCreationParameterOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameter) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o ScheduleCreationParameterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ScheduleCreationParameter) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The resource ID to which the schedule belongs
func (o ScheduleCreationParameterOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameter) *string { return v.TargetResourceId }).(pulumi.StringPtrOutput)
}

// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
func (o ScheduleCreationParameterOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameter) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The time zone ID (e.g. Pacific Standard time).
func (o ScheduleCreationParameterOutput) TimeZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameter) *string { return v.TimeZoneId }).(pulumi.StringPtrOutput)
}

// If the schedule will occur only some days of the week, specify the weekly recurrence.
func (o ScheduleCreationParameterOutput) WeeklyRecurrence() WeekDetailsPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameter) *WeekDetails { return v.WeeklyRecurrence }).(WeekDetailsPtrOutput)
}

type ScheduleCreationParameterArrayOutput struct{ *pulumi.OutputState }

func (ScheduleCreationParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleCreationParameter)(nil)).Elem()
}

func (o ScheduleCreationParameterArrayOutput) ToScheduleCreationParameterArrayOutput() ScheduleCreationParameterArrayOutput {
	return o
}

func (o ScheduleCreationParameterArrayOutput) ToScheduleCreationParameterArrayOutputWithContext(ctx context.Context) ScheduleCreationParameterArrayOutput {
	return o
}

func (o ScheduleCreationParameterArrayOutput) Index(i pulumi.IntInput) ScheduleCreationParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduleCreationParameter {
		return vs[0].([]ScheduleCreationParameter)[vs[1].(int)]
	}).(ScheduleCreationParameterOutput)
}

// Properties for creating a schedule.
type ScheduleCreationParameterInvokeResponse struct {
	// If the schedule will occur once each day of the week, specify the daily recurrence.
	DailyRecurrence *DayDetailsInvokeResponse `pulumi:"dailyRecurrence"`
	// If the schedule will occur multiple times a day, specify the hourly recurrence.
	HourlyRecurrence *HourDetailsInvokeResponse `pulumi:"hourlyRecurrence"`
	// The location of the new virtual machine or environment
	Location *string `pulumi:"location"`
	// The name of the virtual machine or environment
	Name *string `pulumi:"name"`
	// Notification settings.
	NotificationSettings *NotificationSettingsInvokeResponse `pulumi:"notificationSettings"`
	// The status of the schedule (i.e. Enabled, Disabled)
	Status *string `pulumi:"status"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The resource ID to which the schedule belongs
	TargetResourceId *string `pulumi:"targetResourceId"`
	// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
	TaskType *string `pulumi:"taskType"`
	// The time zone ID (e.g. Pacific Standard time).
	TimeZoneId *string `pulumi:"timeZoneId"`
	// If the schedule will occur only some days of the week, specify the weekly recurrence.
	WeeklyRecurrence *WeekDetailsInvokeResponse `pulumi:"weeklyRecurrence"`
}

// ScheduleCreationParameterInvokeResponseInput is an input type that accepts ScheduleCreationParameterInvokeResponseArgs and ScheduleCreationParameterInvokeResponseOutput values.
// You can construct a concrete instance of `ScheduleCreationParameterInvokeResponseInput` via:
//
//          ScheduleCreationParameterInvokeResponseArgs{...}
type ScheduleCreationParameterInvokeResponseInput interface {
	pulumi.Input

	ToScheduleCreationParameterInvokeResponseOutput() ScheduleCreationParameterInvokeResponseOutput
	ToScheduleCreationParameterInvokeResponseOutputWithContext(context.Context) ScheduleCreationParameterInvokeResponseOutput
}

// Properties for creating a schedule.
type ScheduleCreationParameterInvokeResponseArgs struct {
	// If the schedule will occur once each day of the week, specify the daily recurrence.
	DailyRecurrence DayDetailsInvokeResponsePtrInput `pulumi:"dailyRecurrence"`
	// If the schedule will occur multiple times a day, specify the hourly recurrence.
	HourlyRecurrence HourDetailsInvokeResponsePtrInput `pulumi:"hourlyRecurrence"`
	// The location of the new virtual machine or environment
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the virtual machine or environment
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Notification settings.
	NotificationSettings NotificationSettingsInvokeResponsePtrInput `pulumi:"notificationSettings"`
	// The status of the schedule (i.e. Enabled, Disabled)
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The resource ID to which the schedule belongs
	TargetResourceId pulumi.StringPtrInput `pulumi:"targetResourceId"`
	// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The time zone ID (e.g. Pacific Standard time).
	TimeZoneId pulumi.StringPtrInput `pulumi:"timeZoneId"`
	// If the schedule will occur only some days of the week, specify the weekly recurrence.
	WeeklyRecurrence WeekDetailsInvokeResponsePtrInput `pulumi:"weeklyRecurrence"`
}

func (ScheduleCreationParameterInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleCreationParameterInvokeResponse)(nil)).Elem()
}

func (i ScheduleCreationParameterInvokeResponseArgs) ToScheduleCreationParameterInvokeResponseOutput() ScheduleCreationParameterInvokeResponseOutput {
	return i.ToScheduleCreationParameterInvokeResponseOutputWithContext(context.Background())
}

func (i ScheduleCreationParameterInvokeResponseArgs) ToScheduleCreationParameterInvokeResponseOutputWithContext(ctx context.Context) ScheduleCreationParameterInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleCreationParameterInvokeResponseOutput)
}

// ScheduleCreationParameterInvokeResponseArrayInput is an input type that accepts ScheduleCreationParameterInvokeResponseArray and ScheduleCreationParameterInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ScheduleCreationParameterInvokeResponseArrayInput` via:
//
//          ScheduleCreationParameterInvokeResponseArray{ ScheduleCreationParameterInvokeResponseArgs{...} }
type ScheduleCreationParameterInvokeResponseArrayInput interface {
	pulumi.Input

	ToScheduleCreationParameterInvokeResponseArrayOutput() ScheduleCreationParameterInvokeResponseArrayOutput
	ToScheduleCreationParameterInvokeResponseArrayOutputWithContext(context.Context) ScheduleCreationParameterInvokeResponseArrayOutput
}

type ScheduleCreationParameterInvokeResponseArray []ScheduleCreationParameterInvokeResponseInput

func (ScheduleCreationParameterInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleCreationParameterInvokeResponse)(nil)).Elem()
}

func (i ScheduleCreationParameterInvokeResponseArray) ToScheduleCreationParameterInvokeResponseArrayOutput() ScheduleCreationParameterInvokeResponseArrayOutput {
	return i.ToScheduleCreationParameterInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ScheduleCreationParameterInvokeResponseArray) ToScheduleCreationParameterInvokeResponseArrayOutputWithContext(ctx context.Context) ScheduleCreationParameterInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleCreationParameterInvokeResponseArrayOutput)
}

// Properties for creating a schedule.
type ScheduleCreationParameterInvokeResponseOutput struct{ *pulumi.OutputState }

func (ScheduleCreationParameterInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleCreationParameterInvokeResponse)(nil)).Elem()
}

func (o ScheduleCreationParameterInvokeResponseOutput) ToScheduleCreationParameterInvokeResponseOutput() ScheduleCreationParameterInvokeResponseOutput {
	return o
}

func (o ScheduleCreationParameterInvokeResponseOutput) ToScheduleCreationParameterInvokeResponseOutputWithContext(ctx context.Context) ScheduleCreationParameterInvokeResponseOutput {
	return o
}

// If the schedule will occur once each day of the week, specify the daily recurrence.
func (o ScheduleCreationParameterInvokeResponseOutput) DailyRecurrence() DayDetailsInvokeResponsePtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterInvokeResponse) *DayDetailsInvokeResponse { return v.DailyRecurrence }).(DayDetailsInvokeResponsePtrOutput)
}

// If the schedule will occur multiple times a day, specify the hourly recurrence.
func (o ScheduleCreationParameterInvokeResponseOutput) HourlyRecurrence() HourDetailsInvokeResponsePtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterInvokeResponse) *HourDetailsInvokeResponse { return v.HourlyRecurrence }).(HourDetailsInvokeResponsePtrOutput)
}

// The location of the new virtual machine or environment
func (o ScheduleCreationParameterInvokeResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterInvokeResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the virtual machine or environment
func (o ScheduleCreationParameterInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Notification settings.
func (o ScheduleCreationParameterInvokeResponseOutput) NotificationSettings() NotificationSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterInvokeResponse) *NotificationSettingsInvokeResponse {
		return v.NotificationSettings
	}).(NotificationSettingsInvokeResponsePtrOutput)
}

// The status of the schedule (i.e. Enabled, Disabled)
func (o ScheduleCreationParameterInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o ScheduleCreationParameterInvokeResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ScheduleCreationParameterInvokeResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The resource ID to which the schedule belongs
func (o ScheduleCreationParameterInvokeResponseOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterInvokeResponse) *string { return v.TargetResourceId }).(pulumi.StringPtrOutput)
}

// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
func (o ScheduleCreationParameterInvokeResponseOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterInvokeResponse) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The time zone ID (e.g. Pacific Standard time).
func (o ScheduleCreationParameterInvokeResponseOutput) TimeZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterInvokeResponse) *string { return v.TimeZoneId }).(pulumi.StringPtrOutput)
}

// If the schedule will occur only some days of the week, specify the weekly recurrence.
func (o ScheduleCreationParameterInvokeResponseOutput) WeeklyRecurrence() WeekDetailsInvokeResponsePtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterInvokeResponse) *WeekDetailsInvokeResponse { return v.WeeklyRecurrence }).(WeekDetailsInvokeResponsePtrOutput)
}

type ScheduleCreationParameterInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ScheduleCreationParameterInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleCreationParameterInvokeResponse)(nil)).Elem()
}

func (o ScheduleCreationParameterInvokeResponseArrayOutput) ToScheduleCreationParameterInvokeResponseArrayOutput() ScheduleCreationParameterInvokeResponseArrayOutput {
	return o
}

func (o ScheduleCreationParameterInvokeResponseArrayOutput) ToScheduleCreationParameterInvokeResponseArrayOutputWithContext(ctx context.Context) ScheduleCreationParameterInvokeResponseArrayOutput {
	return o
}

func (o ScheduleCreationParameterInvokeResponseArrayOutput) Index(i pulumi.IntInput) ScheduleCreationParameterInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduleCreationParameterInvokeResponse {
		return vs[0].([]ScheduleCreationParameterInvokeResponse)[vs[1].(int)]
	}).(ScheduleCreationParameterInvokeResponseOutput)
}

// Properties for creating a schedule.
type ScheduleCreationParameterResponse struct {
	// If the schedule will occur once each day of the week, specify the daily recurrence.
	DailyRecurrence *DayDetailsResponse `pulumi:"dailyRecurrence"`
	// If the schedule will occur multiple times a day, specify the hourly recurrence.
	HourlyRecurrence *HourDetailsResponse `pulumi:"hourlyRecurrence"`
	// The location of the new virtual machine or environment
	Location *string `pulumi:"location"`
	// The name of the virtual machine or environment
	Name *string `pulumi:"name"`
	// Notification settings.
	NotificationSettings *NotificationSettingsResponse `pulumi:"notificationSettings"`
	// The status of the schedule (i.e. Enabled, Disabled)
	Status *string `pulumi:"status"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The resource ID to which the schedule belongs
	TargetResourceId *string `pulumi:"targetResourceId"`
	// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
	TaskType *string `pulumi:"taskType"`
	// The time zone ID (e.g. Pacific Standard time).
	TimeZoneId *string `pulumi:"timeZoneId"`
	// If the schedule will occur only some days of the week, specify the weekly recurrence.
	WeeklyRecurrence *WeekDetailsResponse `pulumi:"weeklyRecurrence"`
}

// ScheduleCreationParameterResponseInput is an input type that accepts ScheduleCreationParameterResponseArgs and ScheduleCreationParameterResponseOutput values.
// You can construct a concrete instance of `ScheduleCreationParameterResponseInput` via:
//
//          ScheduleCreationParameterResponseArgs{...}
type ScheduleCreationParameterResponseInput interface {
	pulumi.Input

	ToScheduleCreationParameterResponseOutput() ScheduleCreationParameterResponseOutput
	ToScheduleCreationParameterResponseOutputWithContext(context.Context) ScheduleCreationParameterResponseOutput
}

// Properties for creating a schedule.
type ScheduleCreationParameterResponseArgs struct {
	// If the schedule will occur once each day of the week, specify the daily recurrence.
	DailyRecurrence DayDetailsResponsePtrInput `pulumi:"dailyRecurrence"`
	// If the schedule will occur multiple times a day, specify the hourly recurrence.
	HourlyRecurrence HourDetailsResponsePtrInput `pulumi:"hourlyRecurrence"`
	// The location of the new virtual machine or environment
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the virtual machine or environment
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Notification settings.
	NotificationSettings NotificationSettingsResponsePtrInput `pulumi:"notificationSettings"`
	// The status of the schedule (i.e. Enabled, Disabled)
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The resource ID to which the schedule belongs
	TargetResourceId pulumi.StringPtrInput `pulumi:"targetResourceId"`
	// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The time zone ID (e.g. Pacific Standard time).
	TimeZoneId pulumi.StringPtrInput `pulumi:"timeZoneId"`
	// If the schedule will occur only some days of the week, specify the weekly recurrence.
	WeeklyRecurrence WeekDetailsResponsePtrInput `pulumi:"weeklyRecurrence"`
}

func (ScheduleCreationParameterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleCreationParameterResponse)(nil)).Elem()
}

func (i ScheduleCreationParameterResponseArgs) ToScheduleCreationParameterResponseOutput() ScheduleCreationParameterResponseOutput {
	return i.ToScheduleCreationParameterResponseOutputWithContext(context.Background())
}

func (i ScheduleCreationParameterResponseArgs) ToScheduleCreationParameterResponseOutputWithContext(ctx context.Context) ScheduleCreationParameterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleCreationParameterResponseOutput)
}

// ScheduleCreationParameterResponseArrayInput is an input type that accepts ScheduleCreationParameterResponseArray and ScheduleCreationParameterResponseArrayOutput values.
// You can construct a concrete instance of `ScheduleCreationParameterResponseArrayInput` via:
//
//          ScheduleCreationParameterResponseArray{ ScheduleCreationParameterResponseArgs{...} }
type ScheduleCreationParameterResponseArrayInput interface {
	pulumi.Input

	ToScheduleCreationParameterResponseArrayOutput() ScheduleCreationParameterResponseArrayOutput
	ToScheduleCreationParameterResponseArrayOutputWithContext(context.Context) ScheduleCreationParameterResponseArrayOutput
}

type ScheduleCreationParameterResponseArray []ScheduleCreationParameterResponseInput

func (ScheduleCreationParameterResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleCreationParameterResponse)(nil)).Elem()
}

func (i ScheduleCreationParameterResponseArray) ToScheduleCreationParameterResponseArrayOutput() ScheduleCreationParameterResponseArrayOutput {
	return i.ToScheduleCreationParameterResponseArrayOutputWithContext(context.Background())
}

func (i ScheduleCreationParameterResponseArray) ToScheduleCreationParameterResponseArrayOutputWithContext(ctx context.Context) ScheduleCreationParameterResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleCreationParameterResponseArrayOutput)
}

// Properties for creating a schedule.
type ScheduleCreationParameterResponseOutput struct{ *pulumi.OutputState }

func (ScheduleCreationParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleCreationParameterResponse)(nil)).Elem()
}

func (o ScheduleCreationParameterResponseOutput) ToScheduleCreationParameterResponseOutput() ScheduleCreationParameterResponseOutput {
	return o
}

func (o ScheduleCreationParameterResponseOutput) ToScheduleCreationParameterResponseOutputWithContext(ctx context.Context) ScheduleCreationParameterResponseOutput {
	return o
}

// If the schedule will occur once each day of the week, specify the daily recurrence.
func (o ScheduleCreationParameterResponseOutput) DailyRecurrence() DayDetailsResponsePtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterResponse) *DayDetailsResponse { return v.DailyRecurrence }).(DayDetailsResponsePtrOutput)
}

// If the schedule will occur multiple times a day, specify the hourly recurrence.
func (o ScheduleCreationParameterResponseOutput) HourlyRecurrence() HourDetailsResponsePtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterResponse) *HourDetailsResponse { return v.HourlyRecurrence }).(HourDetailsResponsePtrOutput)
}

// The location of the new virtual machine or environment
func (o ScheduleCreationParameterResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the virtual machine or environment
func (o ScheduleCreationParameterResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Notification settings.
func (o ScheduleCreationParameterResponseOutput) NotificationSettings() NotificationSettingsResponsePtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterResponse) *NotificationSettingsResponse { return v.NotificationSettings }).(NotificationSettingsResponsePtrOutput)
}

// The status of the schedule (i.e. Enabled, Disabled)
func (o ScheduleCreationParameterResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o ScheduleCreationParameterResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ScheduleCreationParameterResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The resource ID to which the schedule belongs
func (o ScheduleCreationParameterResponseOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterResponse) *string { return v.TargetResourceId }).(pulumi.StringPtrOutput)
}

// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
func (o ScheduleCreationParameterResponseOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterResponse) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The time zone ID (e.g. Pacific Standard time).
func (o ScheduleCreationParameterResponseOutput) TimeZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterResponse) *string { return v.TimeZoneId }).(pulumi.StringPtrOutput)
}

// If the schedule will occur only some days of the week, specify the weekly recurrence.
func (o ScheduleCreationParameterResponseOutput) WeeklyRecurrence() WeekDetailsResponsePtrOutput {
	return o.ApplyT(func(v ScheduleCreationParameterResponse) *WeekDetailsResponse { return v.WeeklyRecurrence }).(WeekDetailsResponsePtrOutput)
}

type ScheduleCreationParameterResponseArrayOutput struct{ *pulumi.OutputState }

func (ScheduleCreationParameterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleCreationParameterResponse)(nil)).Elem()
}

func (o ScheduleCreationParameterResponseArrayOutput) ToScheduleCreationParameterResponseArrayOutput() ScheduleCreationParameterResponseArrayOutput {
	return o
}

func (o ScheduleCreationParameterResponseArrayOutput) ToScheduleCreationParameterResponseArrayOutputWithContext(ctx context.Context) ScheduleCreationParameterResponseArrayOutput {
	return o
}

func (o ScheduleCreationParameterResponseArrayOutput) Index(i pulumi.IntInput) ScheduleCreationParameterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduleCreationParameterResponse {
		return vs[0].([]ScheduleCreationParameterResponse)[vs[1].(int)]
	}).(ScheduleCreationParameterResponseOutput)
}

// A schedule.
type ScheduleInvokeResponse struct {
	// The creation date of the schedule.
	CreatedDate string `pulumi:"createdDate"`
	// If the schedule will occur once each day of the week, specify the daily recurrence.
	DailyRecurrence *DayDetailsInvokeResponse `pulumi:"dailyRecurrence"`
	// If the schedule will occur multiple times a day, specify the hourly recurrence.
	HourlyRecurrence *HourDetailsInvokeResponse `pulumi:"hourlyRecurrence"`
	// The identifier of the resource.
	Id string `pulumi:"id"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// Notification settings.
	NotificationSettings *NotificationSettingsInvokeResponse `pulumi:"notificationSettings"`
	// The provisioning status of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The status of the schedule (i.e. Enabled, Disabled)
	Status *string `pulumi:"status"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The resource ID to which the schedule belongs
	TargetResourceId *string `pulumi:"targetResourceId"`
	// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
	TaskType *string `pulumi:"taskType"`
	// The time zone ID (e.g. Pacific Standard time).
	TimeZoneId *string `pulumi:"timeZoneId"`
	// The type of the resource.
	Type string `pulumi:"type"`
	// The unique immutable identifier of a resource (Guid).
	UniqueIdentifier string `pulumi:"uniqueIdentifier"`
	// If the schedule will occur only some days of the week, specify the weekly recurrence.
	WeeklyRecurrence *WeekDetailsInvokeResponse `pulumi:"weeklyRecurrence"`
}

// ScheduleInvokeResponseInput is an input type that accepts ScheduleInvokeResponseArgs and ScheduleInvokeResponseOutput values.
// You can construct a concrete instance of `ScheduleInvokeResponseInput` via:
//
//          ScheduleInvokeResponseArgs{...}
type ScheduleInvokeResponseInput interface {
	pulumi.Input

	ToScheduleInvokeResponseOutput() ScheduleInvokeResponseOutput
	ToScheduleInvokeResponseOutputWithContext(context.Context) ScheduleInvokeResponseOutput
}

// A schedule.
type ScheduleInvokeResponseArgs struct {
	// The creation date of the schedule.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// If the schedule will occur once each day of the week, specify the daily recurrence.
	DailyRecurrence DayDetailsInvokeResponsePtrInput `pulumi:"dailyRecurrence"`
	// If the schedule will occur multiple times a day, specify the hourly recurrence.
	HourlyRecurrence HourDetailsInvokeResponsePtrInput `pulumi:"hourlyRecurrence"`
	// The identifier of the resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Notification settings.
	NotificationSettings NotificationSettingsInvokeResponsePtrInput `pulumi:"notificationSettings"`
	// The provisioning status of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The status of the schedule (i.e. Enabled, Disabled)
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The resource ID to which the schedule belongs
	TargetResourceId pulumi.StringPtrInput `pulumi:"targetResourceId"`
	// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The time zone ID (e.g. Pacific Standard time).
	TimeZoneId pulumi.StringPtrInput `pulumi:"timeZoneId"`
	// The type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
	// The unique immutable identifier of a resource (Guid).
	UniqueIdentifier pulumi.StringInput `pulumi:"uniqueIdentifier"`
	// If the schedule will occur only some days of the week, specify the weekly recurrence.
	WeeklyRecurrence WeekDetailsInvokeResponsePtrInput `pulumi:"weeklyRecurrence"`
}

func (ScheduleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleInvokeResponse)(nil)).Elem()
}

func (i ScheduleInvokeResponseArgs) ToScheduleInvokeResponseOutput() ScheduleInvokeResponseOutput {
	return i.ToScheduleInvokeResponseOutputWithContext(context.Background())
}

func (i ScheduleInvokeResponseArgs) ToScheduleInvokeResponseOutputWithContext(ctx context.Context) ScheduleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleInvokeResponseOutput)
}

func (i ScheduleInvokeResponseArgs) ToScheduleInvokeResponsePtrOutput() ScheduleInvokeResponsePtrOutput {
	return i.ToScheduleInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ScheduleInvokeResponseArgs) ToScheduleInvokeResponsePtrOutputWithContext(ctx context.Context) ScheduleInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleInvokeResponseOutput).ToScheduleInvokeResponsePtrOutputWithContext(ctx)
}

// ScheduleInvokeResponsePtrInput is an input type that accepts ScheduleInvokeResponseArgs, ScheduleInvokeResponsePtr and ScheduleInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ScheduleInvokeResponsePtrInput` via:
//
//          ScheduleInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ScheduleInvokeResponsePtrInput interface {
	pulumi.Input

	ToScheduleInvokeResponsePtrOutput() ScheduleInvokeResponsePtrOutput
	ToScheduleInvokeResponsePtrOutputWithContext(context.Context) ScheduleInvokeResponsePtrOutput
}

type scheduleInvokeResponsePtrType ScheduleInvokeResponseArgs

func ScheduleInvokeResponsePtr(v *ScheduleInvokeResponseArgs) ScheduleInvokeResponsePtrInput {
	return (*scheduleInvokeResponsePtrType)(v)
}

func (*scheduleInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleInvokeResponse)(nil)).Elem()
}

func (i *scheduleInvokeResponsePtrType) ToScheduleInvokeResponsePtrOutput() ScheduleInvokeResponsePtrOutput {
	return i.ToScheduleInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *scheduleInvokeResponsePtrType) ToScheduleInvokeResponsePtrOutputWithContext(ctx context.Context) ScheduleInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleInvokeResponsePtrOutput)
}

// ScheduleInvokeResponseArrayInput is an input type that accepts ScheduleInvokeResponseArray and ScheduleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ScheduleInvokeResponseArrayInput` via:
//
//          ScheduleInvokeResponseArray{ ScheduleInvokeResponseArgs{...} }
type ScheduleInvokeResponseArrayInput interface {
	pulumi.Input

	ToScheduleInvokeResponseArrayOutput() ScheduleInvokeResponseArrayOutput
	ToScheduleInvokeResponseArrayOutputWithContext(context.Context) ScheduleInvokeResponseArrayOutput
}

type ScheduleInvokeResponseArray []ScheduleInvokeResponseInput

func (ScheduleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleInvokeResponse)(nil)).Elem()
}

func (i ScheduleInvokeResponseArray) ToScheduleInvokeResponseArrayOutput() ScheduleInvokeResponseArrayOutput {
	return i.ToScheduleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ScheduleInvokeResponseArray) ToScheduleInvokeResponseArrayOutputWithContext(ctx context.Context) ScheduleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleInvokeResponseArrayOutput)
}

// A schedule.
type ScheduleInvokeResponseOutput struct{ *pulumi.OutputState }

func (ScheduleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleInvokeResponse)(nil)).Elem()
}

func (o ScheduleInvokeResponseOutput) ToScheduleInvokeResponseOutput() ScheduleInvokeResponseOutput {
	return o
}

func (o ScheduleInvokeResponseOutput) ToScheduleInvokeResponseOutputWithContext(ctx context.Context) ScheduleInvokeResponseOutput {
	return o
}

func (o ScheduleInvokeResponseOutput) ToScheduleInvokeResponsePtrOutput() ScheduleInvokeResponsePtrOutput {
	return o.ToScheduleInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ScheduleInvokeResponseOutput) ToScheduleInvokeResponsePtrOutputWithContext(ctx context.Context) ScheduleInvokeResponsePtrOutput {
	return o.ApplyT(func(v ScheduleInvokeResponse) *ScheduleInvokeResponse {
		return &v
	}).(ScheduleInvokeResponsePtrOutput)
}

// The creation date of the schedule.
func (o ScheduleInvokeResponseOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleInvokeResponse) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// If the schedule will occur once each day of the week, specify the daily recurrence.
func (o ScheduleInvokeResponseOutput) DailyRecurrence() DayDetailsInvokeResponsePtrOutput {
	return o.ApplyT(func(v ScheduleInvokeResponse) *DayDetailsInvokeResponse { return v.DailyRecurrence }).(DayDetailsInvokeResponsePtrOutput)
}

// If the schedule will occur multiple times a day, specify the hourly recurrence.
func (o ScheduleInvokeResponseOutput) HourlyRecurrence() HourDetailsInvokeResponsePtrOutput {
	return o.ApplyT(func(v ScheduleInvokeResponse) *HourDetailsInvokeResponse { return v.HourlyRecurrence }).(HourDetailsInvokeResponsePtrOutput)
}

// The identifier of the resource.
func (o ScheduleInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the resource.
func (o ScheduleInvokeResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleInvokeResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o ScheduleInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Notification settings.
func (o ScheduleInvokeResponseOutput) NotificationSettings() NotificationSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v ScheduleInvokeResponse) *NotificationSettingsInvokeResponse { return v.NotificationSettings }).(NotificationSettingsInvokeResponsePtrOutput)
}

// The provisioning status of the resource.
func (o ScheduleInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The status of the schedule (i.e. Enabled, Disabled)
func (o ScheduleInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o ScheduleInvokeResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ScheduleInvokeResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The resource ID to which the schedule belongs
func (o ScheduleInvokeResponseOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleInvokeResponse) *string { return v.TargetResourceId }).(pulumi.StringPtrOutput)
}

// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
func (o ScheduleInvokeResponseOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleInvokeResponse) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The time zone ID (e.g. Pacific Standard time).
func (o ScheduleInvokeResponseOutput) TimeZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleInvokeResponse) *string { return v.TimeZoneId }).(pulumi.StringPtrOutput)
}

// The type of the resource.
func (o ScheduleInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The unique immutable identifier of a resource (Guid).
func (o ScheduleInvokeResponseOutput) UniqueIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleInvokeResponse) string { return v.UniqueIdentifier }).(pulumi.StringOutput)
}

// If the schedule will occur only some days of the week, specify the weekly recurrence.
func (o ScheduleInvokeResponseOutput) WeeklyRecurrence() WeekDetailsInvokeResponsePtrOutput {
	return o.ApplyT(func(v ScheduleInvokeResponse) *WeekDetailsInvokeResponse { return v.WeeklyRecurrence }).(WeekDetailsInvokeResponsePtrOutput)
}

type ScheduleInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ScheduleInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleInvokeResponse)(nil)).Elem()
}

func (o ScheduleInvokeResponsePtrOutput) ToScheduleInvokeResponsePtrOutput() ScheduleInvokeResponsePtrOutput {
	return o
}

func (o ScheduleInvokeResponsePtrOutput) ToScheduleInvokeResponsePtrOutputWithContext(ctx context.Context) ScheduleInvokeResponsePtrOutput {
	return o
}

func (o ScheduleInvokeResponsePtrOutput) Elem() ScheduleInvokeResponseOutput {
	return o.ApplyT(func(v *ScheduleInvokeResponse) ScheduleInvokeResponse { return *v }).(ScheduleInvokeResponseOutput)
}

// The creation date of the schedule.
func (o ScheduleInvokeResponsePtrOutput) CreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedDate
	}).(pulumi.StringPtrOutput)
}

// If the schedule will occur once each day of the week, specify the daily recurrence.
func (o ScheduleInvokeResponsePtrOutput) DailyRecurrence() DayDetailsInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ScheduleInvokeResponse) *DayDetailsInvokeResponse {
		if v == nil {
			return nil
		}
		return v.DailyRecurrence
	}).(DayDetailsInvokeResponsePtrOutput)
}

// If the schedule will occur multiple times a day, specify the hourly recurrence.
func (o ScheduleInvokeResponsePtrOutput) HourlyRecurrence() HourDetailsInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ScheduleInvokeResponse) *HourDetailsInvokeResponse {
		if v == nil {
			return nil
		}
		return v.HourlyRecurrence
	}).(HourDetailsInvokeResponsePtrOutput)
}

// The identifier of the resource.
func (o ScheduleInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The location of the resource.
func (o ScheduleInvokeResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o ScheduleInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Notification settings.
func (o ScheduleInvokeResponsePtrOutput) NotificationSettings() NotificationSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ScheduleInvokeResponse) *NotificationSettingsInvokeResponse {
		if v == nil {
			return nil
		}
		return v.NotificationSettings
	}).(NotificationSettingsInvokeResponsePtrOutput)
}

// The provisioning status of the resource.
func (o ScheduleInvokeResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The status of the schedule (i.e. Enabled, Disabled)
func (o ScheduleInvokeResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o ScheduleInvokeResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ScheduleInvokeResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The resource ID to which the schedule belongs
func (o ScheduleInvokeResponsePtrOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetResourceId
	}).(pulumi.StringPtrOutput)
}

// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
func (o ScheduleInvokeResponsePtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The time zone ID (e.g. Pacific Standard time).
func (o ScheduleInvokeResponsePtrOutput) TimeZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeZoneId
	}).(pulumi.StringPtrOutput)
}

// The type of the resource.
func (o ScheduleInvokeResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The unique immutable identifier of a resource (Guid).
func (o ScheduleInvokeResponsePtrOutput) UniqueIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UniqueIdentifier
	}).(pulumi.StringPtrOutput)
}

// If the schedule will occur only some days of the week, specify the weekly recurrence.
func (o ScheduleInvokeResponsePtrOutput) WeeklyRecurrence() WeekDetailsInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ScheduleInvokeResponse) *WeekDetailsInvokeResponse {
		if v == nil {
			return nil
		}
		return v.WeeklyRecurrence
	}).(WeekDetailsInvokeResponsePtrOutput)
}

type ScheduleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ScheduleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleInvokeResponse)(nil)).Elem()
}

func (o ScheduleInvokeResponseArrayOutput) ToScheduleInvokeResponseArrayOutput() ScheduleInvokeResponseArrayOutput {
	return o
}

func (o ScheduleInvokeResponseArrayOutput) ToScheduleInvokeResponseArrayOutputWithContext(ctx context.Context) ScheduleInvokeResponseArrayOutput {
	return o
}

func (o ScheduleInvokeResponseArrayOutput) Index(i pulumi.IntInput) ScheduleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduleInvokeResponse {
		return vs[0].([]ScheduleInvokeResponse)[vs[1].(int)]
	}).(ScheduleInvokeResponseOutput)
}

// A schedule.
type ScheduleResponse struct {
	// The creation date of the schedule.
	CreatedDate string `pulumi:"createdDate"`
	// If the schedule will occur once each day of the week, specify the daily recurrence.
	DailyRecurrence *DayDetailsResponse `pulumi:"dailyRecurrence"`
	// If the schedule will occur multiple times a day, specify the hourly recurrence.
	HourlyRecurrence *HourDetailsResponse `pulumi:"hourlyRecurrence"`
	// The identifier of the resource.
	Id string `pulumi:"id"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// Notification settings.
	NotificationSettings *NotificationSettingsResponse `pulumi:"notificationSettings"`
	// The provisioning status of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The status of the schedule (i.e. Enabled, Disabled)
	Status *string `pulumi:"status"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The resource ID to which the schedule belongs
	TargetResourceId *string `pulumi:"targetResourceId"`
	// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
	TaskType *string `pulumi:"taskType"`
	// The time zone ID (e.g. Pacific Standard time).
	TimeZoneId *string `pulumi:"timeZoneId"`
	// The type of the resource.
	Type string `pulumi:"type"`
	// The unique immutable identifier of a resource (Guid).
	UniqueIdentifier string `pulumi:"uniqueIdentifier"`
	// If the schedule will occur only some days of the week, specify the weekly recurrence.
	WeeklyRecurrence *WeekDetailsResponse `pulumi:"weeklyRecurrence"`
}

// ScheduleResponseInput is an input type that accepts ScheduleResponseArgs and ScheduleResponseOutput values.
// You can construct a concrete instance of `ScheduleResponseInput` via:
//
//          ScheduleResponseArgs{...}
type ScheduleResponseInput interface {
	pulumi.Input

	ToScheduleResponseOutput() ScheduleResponseOutput
	ToScheduleResponseOutputWithContext(context.Context) ScheduleResponseOutput
}

// A schedule.
type ScheduleResponseArgs struct {
	// The creation date of the schedule.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// If the schedule will occur once each day of the week, specify the daily recurrence.
	DailyRecurrence DayDetailsResponsePtrInput `pulumi:"dailyRecurrence"`
	// If the schedule will occur multiple times a day, specify the hourly recurrence.
	HourlyRecurrence HourDetailsResponsePtrInput `pulumi:"hourlyRecurrence"`
	// The identifier of the resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Notification settings.
	NotificationSettings NotificationSettingsResponsePtrInput `pulumi:"notificationSettings"`
	// The provisioning status of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The status of the schedule (i.e. Enabled, Disabled)
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The resource ID to which the schedule belongs
	TargetResourceId pulumi.StringPtrInput `pulumi:"targetResourceId"`
	// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
	// The time zone ID (e.g. Pacific Standard time).
	TimeZoneId pulumi.StringPtrInput `pulumi:"timeZoneId"`
	// The type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
	// The unique immutable identifier of a resource (Guid).
	UniqueIdentifier pulumi.StringInput `pulumi:"uniqueIdentifier"`
	// If the schedule will occur only some days of the week, specify the weekly recurrence.
	WeeklyRecurrence WeekDetailsResponsePtrInput `pulumi:"weeklyRecurrence"`
}

func (ScheduleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleResponse)(nil)).Elem()
}

func (i ScheduleResponseArgs) ToScheduleResponseOutput() ScheduleResponseOutput {
	return i.ToScheduleResponseOutputWithContext(context.Background())
}

func (i ScheduleResponseArgs) ToScheduleResponseOutputWithContext(ctx context.Context) ScheduleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleResponseOutput)
}

func (i ScheduleResponseArgs) ToScheduleResponsePtrOutput() ScheduleResponsePtrOutput {
	return i.ToScheduleResponsePtrOutputWithContext(context.Background())
}

func (i ScheduleResponseArgs) ToScheduleResponsePtrOutputWithContext(ctx context.Context) ScheduleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleResponseOutput).ToScheduleResponsePtrOutputWithContext(ctx)
}

// ScheduleResponsePtrInput is an input type that accepts ScheduleResponseArgs, ScheduleResponsePtr and ScheduleResponsePtrOutput values.
// You can construct a concrete instance of `ScheduleResponsePtrInput` via:
//
//          ScheduleResponseArgs{...}
//
//  or:
//
//          nil
type ScheduleResponsePtrInput interface {
	pulumi.Input

	ToScheduleResponsePtrOutput() ScheduleResponsePtrOutput
	ToScheduleResponsePtrOutputWithContext(context.Context) ScheduleResponsePtrOutput
}

type scheduleResponsePtrType ScheduleResponseArgs

func ScheduleResponsePtr(v *ScheduleResponseArgs) ScheduleResponsePtrInput {
	return (*scheduleResponsePtrType)(v)
}

func (*scheduleResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleResponse)(nil)).Elem()
}

func (i *scheduleResponsePtrType) ToScheduleResponsePtrOutput() ScheduleResponsePtrOutput {
	return i.ToScheduleResponsePtrOutputWithContext(context.Background())
}

func (i *scheduleResponsePtrType) ToScheduleResponsePtrOutputWithContext(ctx context.Context) ScheduleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleResponsePtrOutput)
}

// A schedule.
type ScheduleResponseOutput struct{ *pulumi.OutputState }

func (ScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleResponse)(nil)).Elem()
}

func (o ScheduleResponseOutput) ToScheduleResponseOutput() ScheduleResponseOutput {
	return o
}

func (o ScheduleResponseOutput) ToScheduleResponseOutputWithContext(ctx context.Context) ScheduleResponseOutput {
	return o
}

func (o ScheduleResponseOutput) ToScheduleResponsePtrOutput() ScheduleResponsePtrOutput {
	return o.ToScheduleResponsePtrOutputWithContext(context.Background())
}

func (o ScheduleResponseOutput) ToScheduleResponsePtrOutputWithContext(ctx context.Context) ScheduleResponsePtrOutput {
	return o.ApplyT(func(v ScheduleResponse) *ScheduleResponse {
		return &v
	}).(ScheduleResponsePtrOutput)
}

// The creation date of the schedule.
func (o ScheduleResponseOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleResponse) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// If the schedule will occur once each day of the week, specify the daily recurrence.
func (o ScheduleResponseOutput) DailyRecurrence() DayDetailsResponsePtrOutput {
	return o.ApplyT(func(v ScheduleResponse) *DayDetailsResponse { return v.DailyRecurrence }).(DayDetailsResponsePtrOutput)
}

// If the schedule will occur multiple times a day, specify the hourly recurrence.
func (o ScheduleResponseOutput) HourlyRecurrence() HourDetailsResponsePtrOutput {
	return o.ApplyT(func(v ScheduleResponse) *HourDetailsResponse { return v.HourlyRecurrence }).(HourDetailsResponsePtrOutput)
}

// The identifier of the resource.
func (o ScheduleResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the resource.
func (o ScheduleResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o ScheduleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Notification settings.
func (o ScheduleResponseOutput) NotificationSettings() NotificationSettingsResponsePtrOutput {
	return o.ApplyT(func(v ScheduleResponse) *NotificationSettingsResponse { return v.NotificationSettings }).(NotificationSettingsResponsePtrOutput)
}

// The provisioning status of the resource.
func (o ScheduleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The status of the schedule (i.e. Enabled, Disabled)
func (o ScheduleResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o ScheduleResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ScheduleResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The resource ID to which the schedule belongs
func (o ScheduleResponseOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleResponse) *string { return v.TargetResourceId }).(pulumi.StringPtrOutput)
}

// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
func (o ScheduleResponseOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleResponse) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The time zone ID (e.g. Pacific Standard time).
func (o ScheduleResponseOutput) TimeZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleResponse) *string { return v.TimeZoneId }).(pulumi.StringPtrOutput)
}

// The type of the resource.
func (o ScheduleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The unique immutable identifier of a resource (Guid).
func (o ScheduleResponseOutput) UniqueIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleResponse) string { return v.UniqueIdentifier }).(pulumi.StringOutput)
}

// If the schedule will occur only some days of the week, specify the weekly recurrence.
func (o ScheduleResponseOutput) WeeklyRecurrence() WeekDetailsResponsePtrOutput {
	return o.ApplyT(func(v ScheduleResponse) *WeekDetailsResponse { return v.WeeklyRecurrence }).(WeekDetailsResponsePtrOutput)
}

type ScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (ScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleResponse)(nil)).Elem()
}

func (o ScheduleResponsePtrOutput) ToScheduleResponsePtrOutput() ScheduleResponsePtrOutput {
	return o
}

func (o ScheduleResponsePtrOutput) ToScheduleResponsePtrOutputWithContext(ctx context.Context) ScheduleResponsePtrOutput {
	return o
}

func (o ScheduleResponsePtrOutput) Elem() ScheduleResponseOutput {
	return o.ApplyT(func(v *ScheduleResponse) ScheduleResponse { return *v }).(ScheduleResponseOutput)
}

// The creation date of the schedule.
func (o ScheduleResponsePtrOutput) CreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedDate
	}).(pulumi.StringPtrOutput)
}

// If the schedule will occur once each day of the week, specify the daily recurrence.
func (o ScheduleResponsePtrOutput) DailyRecurrence() DayDetailsResponsePtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *DayDetailsResponse {
		if v == nil {
			return nil
		}
		return v.DailyRecurrence
	}).(DayDetailsResponsePtrOutput)
}

// If the schedule will occur multiple times a day, specify the hourly recurrence.
func (o ScheduleResponsePtrOutput) HourlyRecurrence() HourDetailsResponsePtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *HourDetailsResponse {
		if v == nil {
			return nil
		}
		return v.HourlyRecurrence
	}).(HourDetailsResponsePtrOutput)
}

// The identifier of the resource.
func (o ScheduleResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The location of the resource.
func (o ScheduleResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o ScheduleResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Notification settings.
func (o ScheduleResponsePtrOutput) NotificationSettings() NotificationSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *NotificationSettingsResponse {
		if v == nil {
			return nil
		}
		return v.NotificationSettings
	}).(NotificationSettingsResponsePtrOutput)
}

// The provisioning status of the resource.
func (o ScheduleResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The status of the schedule (i.e. Enabled, Disabled)
func (o ScheduleResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o ScheduleResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ScheduleResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The resource ID to which the schedule belongs
func (o ScheduleResponsePtrOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetResourceId
	}).(pulumi.StringPtrOutput)
}

// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
func (o ScheduleResponsePtrOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.TaskType
	}).(pulumi.StringPtrOutput)
}

// The time zone ID (e.g. Pacific Standard time).
func (o ScheduleResponsePtrOutput) TimeZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeZoneId
	}).(pulumi.StringPtrOutput)
}

// The type of the resource.
func (o ScheduleResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The unique immutable identifier of a resource (Guid).
func (o ScheduleResponsePtrOutput) UniqueIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UniqueIdentifier
	}).(pulumi.StringPtrOutput)
}

// If the schedule will occur only some days of the week, specify the weekly recurrence.
func (o ScheduleResponsePtrOutput) WeeklyRecurrence() WeekDetailsResponsePtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *WeekDetailsResponse {
		if v == nil {
			return nil
		}
		return v.WeeklyRecurrence
	}).(WeekDetailsResponsePtrOutput)
}

// Properties of a virtual machine that determine how it is connected to a load balancer.
type SharedPublicIpAddressConfiguration struct {
	// The incoming NAT rules
	InboundNatRules []InboundNatRule `pulumi:"inboundNatRules"`
}

// SharedPublicIpAddressConfigurationInput is an input type that accepts SharedPublicIpAddressConfigurationArgs and SharedPublicIpAddressConfigurationOutput values.
// You can construct a concrete instance of `SharedPublicIpAddressConfigurationInput` via:
//
//          SharedPublicIpAddressConfigurationArgs{...}
type SharedPublicIpAddressConfigurationInput interface {
	pulumi.Input

	ToSharedPublicIpAddressConfigurationOutput() SharedPublicIpAddressConfigurationOutput
	ToSharedPublicIpAddressConfigurationOutputWithContext(context.Context) SharedPublicIpAddressConfigurationOutput
}

// Properties of a virtual machine that determine how it is connected to a load balancer.
type SharedPublicIpAddressConfigurationArgs struct {
	// The incoming NAT rules
	InboundNatRules InboundNatRuleArrayInput `pulumi:"inboundNatRules"`
}

func (SharedPublicIpAddressConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPublicIpAddressConfiguration)(nil)).Elem()
}

func (i SharedPublicIpAddressConfigurationArgs) ToSharedPublicIpAddressConfigurationOutput() SharedPublicIpAddressConfigurationOutput {
	return i.ToSharedPublicIpAddressConfigurationOutputWithContext(context.Background())
}

func (i SharedPublicIpAddressConfigurationArgs) ToSharedPublicIpAddressConfigurationOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPublicIpAddressConfigurationOutput)
}

func (i SharedPublicIpAddressConfigurationArgs) ToSharedPublicIpAddressConfigurationPtrOutput() SharedPublicIpAddressConfigurationPtrOutput {
	return i.ToSharedPublicIpAddressConfigurationPtrOutputWithContext(context.Background())
}

func (i SharedPublicIpAddressConfigurationArgs) ToSharedPublicIpAddressConfigurationPtrOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPublicIpAddressConfigurationOutput).ToSharedPublicIpAddressConfigurationPtrOutputWithContext(ctx)
}

// SharedPublicIpAddressConfigurationPtrInput is an input type that accepts SharedPublicIpAddressConfigurationArgs, SharedPublicIpAddressConfigurationPtr and SharedPublicIpAddressConfigurationPtrOutput values.
// You can construct a concrete instance of `SharedPublicIpAddressConfigurationPtrInput` via:
//
//          SharedPublicIpAddressConfigurationArgs{...}
//
//  or:
//
//          nil
type SharedPublicIpAddressConfigurationPtrInput interface {
	pulumi.Input

	ToSharedPublicIpAddressConfigurationPtrOutput() SharedPublicIpAddressConfigurationPtrOutput
	ToSharedPublicIpAddressConfigurationPtrOutputWithContext(context.Context) SharedPublicIpAddressConfigurationPtrOutput
}

type sharedPublicIpAddressConfigurationPtrType SharedPublicIpAddressConfigurationArgs

func SharedPublicIpAddressConfigurationPtr(v *SharedPublicIpAddressConfigurationArgs) SharedPublicIpAddressConfigurationPtrInput {
	return (*sharedPublicIpAddressConfigurationPtrType)(v)
}

func (*sharedPublicIpAddressConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedPublicIpAddressConfiguration)(nil)).Elem()
}

func (i *sharedPublicIpAddressConfigurationPtrType) ToSharedPublicIpAddressConfigurationPtrOutput() SharedPublicIpAddressConfigurationPtrOutput {
	return i.ToSharedPublicIpAddressConfigurationPtrOutputWithContext(context.Background())
}

func (i *sharedPublicIpAddressConfigurationPtrType) ToSharedPublicIpAddressConfigurationPtrOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPublicIpAddressConfigurationPtrOutput)
}

// Properties of a virtual machine that determine how it is connected to a load balancer.
type SharedPublicIpAddressConfigurationOutput struct{ *pulumi.OutputState }

func (SharedPublicIpAddressConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPublicIpAddressConfiguration)(nil)).Elem()
}

func (o SharedPublicIpAddressConfigurationOutput) ToSharedPublicIpAddressConfigurationOutput() SharedPublicIpAddressConfigurationOutput {
	return o
}

func (o SharedPublicIpAddressConfigurationOutput) ToSharedPublicIpAddressConfigurationOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationOutput {
	return o
}

func (o SharedPublicIpAddressConfigurationOutput) ToSharedPublicIpAddressConfigurationPtrOutput() SharedPublicIpAddressConfigurationPtrOutput {
	return o.ToSharedPublicIpAddressConfigurationPtrOutputWithContext(context.Background())
}

func (o SharedPublicIpAddressConfigurationOutput) ToSharedPublicIpAddressConfigurationPtrOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationPtrOutput {
	return o.ApplyT(func(v SharedPublicIpAddressConfiguration) *SharedPublicIpAddressConfiguration {
		return &v
	}).(SharedPublicIpAddressConfigurationPtrOutput)
}

// The incoming NAT rules
func (o SharedPublicIpAddressConfigurationOutput) InboundNatRules() InboundNatRuleArrayOutput {
	return o.ApplyT(func(v SharedPublicIpAddressConfiguration) []InboundNatRule { return v.InboundNatRules }).(InboundNatRuleArrayOutput)
}

type SharedPublicIpAddressConfigurationPtrOutput struct{ *pulumi.OutputState }

func (SharedPublicIpAddressConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedPublicIpAddressConfiguration)(nil)).Elem()
}

func (o SharedPublicIpAddressConfigurationPtrOutput) ToSharedPublicIpAddressConfigurationPtrOutput() SharedPublicIpAddressConfigurationPtrOutput {
	return o
}

func (o SharedPublicIpAddressConfigurationPtrOutput) ToSharedPublicIpAddressConfigurationPtrOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationPtrOutput {
	return o
}

func (o SharedPublicIpAddressConfigurationPtrOutput) Elem() SharedPublicIpAddressConfigurationOutput {
	return o.ApplyT(func(v *SharedPublicIpAddressConfiguration) SharedPublicIpAddressConfiguration { return *v }).(SharedPublicIpAddressConfigurationOutput)
}

// The incoming NAT rules
func (o SharedPublicIpAddressConfigurationPtrOutput) InboundNatRules() InboundNatRuleArrayOutput {
	return o.ApplyT(func(v *SharedPublicIpAddressConfiguration) []InboundNatRule {
		if v == nil {
			return nil
		}
		return v.InboundNatRules
	}).(InboundNatRuleArrayOutput)
}

// Properties of a virtual machine that determine how it is connected to a load balancer.
type SharedPublicIpAddressConfigurationInvokeResponse struct {
	// The incoming NAT rules
	InboundNatRules []InboundNatRuleInvokeResponse `pulumi:"inboundNatRules"`
}

// SharedPublicIpAddressConfigurationInvokeResponseInput is an input type that accepts SharedPublicIpAddressConfigurationInvokeResponseArgs and SharedPublicIpAddressConfigurationInvokeResponseOutput values.
// You can construct a concrete instance of `SharedPublicIpAddressConfigurationInvokeResponseInput` via:
//
//          SharedPublicIpAddressConfigurationInvokeResponseArgs{...}
type SharedPublicIpAddressConfigurationInvokeResponseInput interface {
	pulumi.Input

	ToSharedPublicIpAddressConfigurationInvokeResponseOutput() SharedPublicIpAddressConfigurationInvokeResponseOutput
	ToSharedPublicIpAddressConfigurationInvokeResponseOutputWithContext(context.Context) SharedPublicIpAddressConfigurationInvokeResponseOutput
}

// Properties of a virtual machine that determine how it is connected to a load balancer.
type SharedPublicIpAddressConfigurationInvokeResponseArgs struct {
	// The incoming NAT rules
	InboundNatRules InboundNatRuleInvokeResponseArrayInput `pulumi:"inboundNatRules"`
}

func (SharedPublicIpAddressConfigurationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPublicIpAddressConfigurationInvokeResponse)(nil)).Elem()
}

func (i SharedPublicIpAddressConfigurationInvokeResponseArgs) ToSharedPublicIpAddressConfigurationInvokeResponseOutput() SharedPublicIpAddressConfigurationInvokeResponseOutput {
	return i.ToSharedPublicIpAddressConfigurationInvokeResponseOutputWithContext(context.Background())
}

func (i SharedPublicIpAddressConfigurationInvokeResponseArgs) ToSharedPublicIpAddressConfigurationInvokeResponseOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPublicIpAddressConfigurationInvokeResponseOutput)
}

func (i SharedPublicIpAddressConfigurationInvokeResponseArgs) ToSharedPublicIpAddressConfigurationInvokeResponsePtrOutput() SharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return i.ToSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SharedPublicIpAddressConfigurationInvokeResponseArgs) ToSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPublicIpAddressConfigurationInvokeResponseOutput).ToSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(ctx)
}

// SharedPublicIpAddressConfigurationInvokeResponsePtrInput is an input type that accepts SharedPublicIpAddressConfigurationInvokeResponseArgs, SharedPublicIpAddressConfigurationInvokeResponsePtr and SharedPublicIpAddressConfigurationInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SharedPublicIpAddressConfigurationInvokeResponsePtrInput` via:
//
//          SharedPublicIpAddressConfigurationInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SharedPublicIpAddressConfigurationInvokeResponsePtrInput interface {
	pulumi.Input

	ToSharedPublicIpAddressConfigurationInvokeResponsePtrOutput() SharedPublicIpAddressConfigurationInvokeResponsePtrOutput
	ToSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(context.Context) SharedPublicIpAddressConfigurationInvokeResponsePtrOutput
}

type sharedPublicIpAddressConfigurationInvokeResponsePtrType SharedPublicIpAddressConfigurationInvokeResponseArgs

func SharedPublicIpAddressConfigurationInvokeResponsePtr(v *SharedPublicIpAddressConfigurationInvokeResponseArgs) SharedPublicIpAddressConfigurationInvokeResponsePtrInput {
	return (*sharedPublicIpAddressConfigurationInvokeResponsePtrType)(v)
}

func (*sharedPublicIpAddressConfigurationInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedPublicIpAddressConfigurationInvokeResponse)(nil)).Elem()
}

func (i *sharedPublicIpAddressConfigurationInvokeResponsePtrType) ToSharedPublicIpAddressConfigurationInvokeResponsePtrOutput() SharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return i.ToSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *sharedPublicIpAddressConfigurationInvokeResponsePtrType) ToSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPublicIpAddressConfigurationInvokeResponsePtrOutput)
}

// Properties of a virtual machine that determine how it is connected to a load balancer.
type SharedPublicIpAddressConfigurationInvokeResponseOutput struct{ *pulumi.OutputState }

func (SharedPublicIpAddressConfigurationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPublicIpAddressConfigurationInvokeResponse)(nil)).Elem()
}

func (o SharedPublicIpAddressConfigurationInvokeResponseOutput) ToSharedPublicIpAddressConfigurationInvokeResponseOutput() SharedPublicIpAddressConfigurationInvokeResponseOutput {
	return o
}

func (o SharedPublicIpAddressConfigurationInvokeResponseOutput) ToSharedPublicIpAddressConfigurationInvokeResponseOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationInvokeResponseOutput {
	return o
}

func (o SharedPublicIpAddressConfigurationInvokeResponseOutput) ToSharedPublicIpAddressConfigurationInvokeResponsePtrOutput() SharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return o.ToSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SharedPublicIpAddressConfigurationInvokeResponseOutput) ToSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v SharedPublicIpAddressConfigurationInvokeResponse) *SharedPublicIpAddressConfigurationInvokeResponse {
		return &v
	}).(SharedPublicIpAddressConfigurationInvokeResponsePtrOutput)
}

// The incoming NAT rules
func (o SharedPublicIpAddressConfigurationInvokeResponseOutput) InboundNatRules() InboundNatRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v SharedPublicIpAddressConfigurationInvokeResponse) []InboundNatRuleInvokeResponse {
		return v.InboundNatRules
	}).(InboundNatRuleInvokeResponseArrayOutput)
}

type SharedPublicIpAddressConfigurationInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SharedPublicIpAddressConfigurationInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedPublicIpAddressConfigurationInvokeResponse)(nil)).Elem()
}

func (o SharedPublicIpAddressConfigurationInvokeResponsePtrOutput) ToSharedPublicIpAddressConfigurationInvokeResponsePtrOutput() SharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return o
}

func (o SharedPublicIpAddressConfigurationInvokeResponsePtrOutput) ToSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return o
}

func (o SharedPublicIpAddressConfigurationInvokeResponsePtrOutput) Elem() SharedPublicIpAddressConfigurationInvokeResponseOutput {
	return o.ApplyT(func(v *SharedPublicIpAddressConfigurationInvokeResponse) SharedPublicIpAddressConfigurationInvokeResponse {
		return *v
	}).(SharedPublicIpAddressConfigurationInvokeResponseOutput)
}

// The incoming NAT rules
func (o SharedPublicIpAddressConfigurationInvokeResponsePtrOutput) InboundNatRules() InboundNatRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v *SharedPublicIpAddressConfigurationInvokeResponse) []InboundNatRuleInvokeResponse {
		if v == nil {
			return nil
		}
		return v.InboundNatRules
	}).(InboundNatRuleInvokeResponseArrayOutput)
}

// Properties of a virtual machine that determine how it is connected to a load balancer.
type SharedPublicIpAddressConfigurationResponse struct {
	// The incoming NAT rules
	InboundNatRules []InboundNatRuleResponse `pulumi:"inboundNatRules"`
}

// SharedPublicIpAddressConfigurationResponseInput is an input type that accepts SharedPublicIpAddressConfigurationResponseArgs and SharedPublicIpAddressConfigurationResponseOutput values.
// You can construct a concrete instance of `SharedPublicIpAddressConfigurationResponseInput` via:
//
//          SharedPublicIpAddressConfigurationResponseArgs{...}
type SharedPublicIpAddressConfigurationResponseInput interface {
	pulumi.Input

	ToSharedPublicIpAddressConfigurationResponseOutput() SharedPublicIpAddressConfigurationResponseOutput
	ToSharedPublicIpAddressConfigurationResponseOutputWithContext(context.Context) SharedPublicIpAddressConfigurationResponseOutput
}

// Properties of a virtual machine that determine how it is connected to a load balancer.
type SharedPublicIpAddressConfigurationResponseArgs struct {
	// The incoming NAT rules
	InboundNatRules InboundNatRuleResponseArrayInput `pulumi:"inboundNatRules"`
}

func (SharedPublicIpAddressConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPublicIpAddressConfigurationResponse)(nil)).Elem()
}

func (i SharedPublicIpAddressConfigurationResponseArgs) ToSharedPublicIpAddressConfigurationResponseOutput() SharedPublicIpAddressConfigurationResponseOutput {
	return i.ToSharedPublicIpAddressConfigurationResponseOutputWithContext(context.Background())
}

func (i SharedPublicIpAddressConfigurationResponseArgs) ToSharedPublicIpAddressConfigurationResponseOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPublicIpAddressConfigurationResponseOutput)
}

func (i SharedPublicIpAddressConfigurationResponseArgs) ToSharedPublicIpAddressConfigurationResponsePtrOutput() SharedPublicIpAddressConfigurationResponsePtrOutput {
	return i.ToSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i SharedPublicIpAddressConfigurationResponseArgs) ToSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPublicIpAddressConfigurationResponseOutput).ToSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(ctx)
}

// SharedPublicIpAddressConfigurationResponsePtrInput is an input type that accepts SharedPublicIpAddressConfigurationResponseArgs, SharedPublicIpAddressConfigurationResponsePtr and SharedPublicIpAddressConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `SharedPublicIpAddressConfigurationResponsePtrInput` via:
//
//          SharedPublicIpAddressConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type SharedPublicIpAddressConfigurationResponsePtrInput interface {
	pulumi.Input

	ToSharedPublicIpAddressConfigurationResponsePtrOutput() SharedPublicIpAddressConfigurationResponsePtrOutput
	ToSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(context.Context) SharedPublicIpAddressConfigurationResponsePtrOutput
}

type sharedPublicIpAddressConfigurationResponsePtrType SharedPublicIpAddressConfigurationResponseArgs

func SharedPublicIpAddressConfigurationResponsePtr(v *SharedPublicIpAddressConfigurationResponseArgs) SharedPublicIpAddressConfigurationResponsePtrInput {
	return (*sharedPublicIpAddressConfigurationResponsePtrType)(v)
}

func (*sharedPublicIpAddressConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedPublicIpAddressConfigurationResponse)(nil)).Elem()
}

func (i *sharedPublicIpAddressConfigurationResponsePtrType) ToSharedPublicIpAddressConfigurationResponsePtrOutput() SharedPublicIpAddressConfigurationResponsePtrOutput {
	return i.ToSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *sharedPublicIpAddressConfigurationResponsePtrType) ToSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPublicIpAddressConfigurationResponsePtrOutput)
}

// Properties of a virtual machine that determine how it is connected to a load balancer.
type SharedPublicIpAddressConfigurationResponseOutput struct{ *pulumi.OutputState }

func (SharedPublicIpAddressConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPublicIpAddressConfigurationResponse)(nil)).Elem()
}

func (o SharedPublicIpAddressConfigurationResponseOutput) ToSharedPublicIpAddressConfigurationResponseOutput() SharedPublicIpAddressConfigurationResponseOutput {
	return o
}

func (o SharedPublicIpAddressConfigurationResponseOutput) ToSharedPublicIpAddressConfigurationResponseOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationResponseOutput {
	return o
}

func (o SharedPublicIpAddressConfigurationResponseOutput) ToSharedPublicIpAddressConfigurationResponsePtrOutput() SharedPublicIpAddressConfigurationResponsePtrOutput {
	return o.ToSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o SharedPublicIpAddressConfigurationResponseOutput) ToSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationResponsePtrOutput {
	return o.ApplyT(func(v SharedPublicIpAddressConfigurationResponse) *SharedPublicIpAddressConfigurationResponse {
		return &v
	}).(SharedPublicIpAddressConfigurationResponsePtrOutput)
}

// The incoming NAT rules
func (o SharedPublicIpAddressConfigurationResponseOutput) InboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v SharedPublicIpAddressConfigurationResponse) []InboundNatRuleResponse { return v.InboundNatRules }).(InboundNatRuleResponseArrayOutput)
}

type SharedPublicIpAddressConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (SharedPublicIpAddressConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedPublicIpAddressConfigurationResponse)(nil)).Elem()
}

func (o SharedPublicIpAddressConfigurationResponsePtrOutput) ToSharedPublicIpAddressConfigurationResponsePtrOutput() SharedPublicIpAddressConfigurationResponsePtrOutput {
	return o
}

func (o SharedPublicIpAddressConfigurationResponsePtrOutput) ToSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(ctx context.Context) SharedPublicIpAddressConfigurationResponsePtrOutput {
	return o
}

func (o SharedPublicIpAddressConfigurationResponsePtrOutput) Elem() SharedPublicIpAddressConfigurationResponseOutput {
	return o.ApplyT(func(v *SharedPublicIpAddressConfigurationResponse) SharedPublicIpAddressConfigurationResponse {
		return *v
	}).(SharedPublicIpAddressConfigurationResponseOutput)
}

// The incoming NAT rules
func (o SharedPublicIpAddressConfigurationResponsePtrOutput) InboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v *SharedPublicIpAddressConfigurationResponse) []InboundNatRuleResponse {
		if v == nil {
			return nil
		}
		return v.InboundNatRules
	}).(InboundNatRuleResponseArrayOutput)
}

// Subnet information.
type Subnet struct {
	// The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).
	AllowPublicIp *string `pulumi:"allowPublicIp"`
	// The name of the subnet as seen in the lab.
	LabSubnetName *string `pulumi:"labSubnetName"`
	// The resource ID of the subnet.
	ResourceId *string `pulumi:"resourceId"`
}

// SubnetInput is an input type that accepts SubnetArgs and SubnetOutput values.
// You can construct a concrete instance of `SubnetInput` via:
//
//          SubnetArgs{...}
type SubnetInput interface {
	pulumi.Input

	ToSubnetOutput() SubnetOutput
	ToSubnetOutputWithContext(context.Context) SubnetOutput
}

// Subnet information.
type SubnetArgs struct {
	// The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).
	AllowPublicIp pulumi.StringPtrInput `pulumi:"allowPublicIp"`
	// The name of the subnet as seen in the lab.
	LabSubnetName pulumi.StringPtrInput `pulumi:"labSubnetName"`
	// The resource ID of the subnet.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (SubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Subnet)(nil)).Elem()
}

func (i SubnetArgs) ToSubnetOutput() SubnetOutput {
	return i.ToSubnetOutputWithContext(context.Background())
}

func (i SubnetArgs) ToSubnetOutputWithContext(ctx context.Context) SubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetOutput)
}

// SubnetArrayInput is an input type that accepts SubnetArray and SubnetArrayOutput values.
// You can construct a concrete instance of `SubnetArrayInput` via:
//
//          SubnetArray{ SubnetArgs{...} }
type SubnetArrayInput interface {
	pulumi.Input

	ToSubnetArrayOutput() SubnetArrayOutput
	ToSubnetArrayOutputWithContext(context.Context) SubnetArrayOutput
}

type SubnetArray []SubnetInput

func (SubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Subnet)(nil)).Elem()
}

func (i SubnetArray) ToSubnetArrayOutput() SubnetArrayOutput {
	return i.ToSubnetArrayOutputWithContext(context.Background())
}

func (i SubnetArray) ToSubnetArrayOutputWithContext(ctx context.Context) SubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetArrayOutput)
}

// Subnet information.
type SubnetOutput struct{ *pulumi.OutputState }

func (SubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Subnet)(nil)).Elem()
}

func (o SubnetOutput) ToSubnetOutput() SubnetOutput {
	return o
}

func (o SubnetOutput) ToSubnetOutputWithContext(ctx context.Context) SubnetOutput {
	return o
}

// The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).
func (o SubnetOutput) AllowPublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subnet) *string { return v.AllowPublicIp }).(pulumi.StringPtrOutput)
}

// The name of the subnet as seen in the lab.
func (o SubnetOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subnet) *string { return v.LabSubnetName }).(pulumi.StringPtrOutput)
}

// The resource ID of the subnet.
func (o SubnetOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subnet) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type SubnetArrayOutput struct{ *pulumi.OutputState }

func (SubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Subnet)(nil)).Elem()
}

func (o SubnetArrayOutput) ToSubnetArrayOutput() SubnetArrayOutput {
	return o
}

func (o SubnetArrayOutput) ToSubnetArrayOutputWithContext(ctx context.Context) SubnetArrayOutput {
	return o
}

func (o SubnetArrayOutput) Index(i pulumi.IntInput) SubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Subnet {
		return vs[0].([]Subnet)[vs[1].(int)]
	}).(SubnetOutput)
}

// Subnet information.
type SubnetInvokeResponse struct {
	// The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).
	AllowPublicIp *string `pulumi:"allowPublicIp"`
	// The name of the subnet as seen in the lab.
	LabSubnetName *string `pulumi:"labSubnetName"`
	// The resource ID of the subnet.
	ResourceId *string `pulumi:"resourceId"`
}

// SubnetInvokeResponseInput is an input type that accepts SubnetInvokeResponseArgs and SubnetInvokeResponseOutput values.
// You can construct a concrete instance of `SubnetInvokeResponseInput` via:
//
//          SubnetInvokeResponseArgs{...}
type SubnetInvokeResponseInput interface {
	pulumi.Input

	ToSubnetInvokeResponseOutput() SubnetInvokeResponseOutput
	ToSubnetInvokeResponseOutputWithContext(context.Context) SubnetInvokeResponseOutput
}

// Subnet information.
type SubnetInvokeResponseArgs struct {
	// The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).
	AllowPublicIp pulumi.StringPtrInput `pulumi:"allowPublicIp"`
	// The name of the subnet as seen in the lab.
	LabSubnetName pulumi.StringPtrInput `pulumi:"labSubnetName"`
	// The resource ID of the subnet.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (SubnetInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetInvokeResponse)(nil)).Elem()
}

func (i SubnetInvokeResponseArgs) ToSubnetInvokeResponseOutput() SubnetInvokeResponseOutput {
	return i.ToSubnetInvokeResponseOutputWithContext(context.Background())
}

func (i SubnetInvokeResponseArgs) ToSubnetInvokeResponseOutputWithContext(ctx context.Context) SubnetInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetInvokeResponseOutput)
}

// SubnetInvokeResponseArrayInput is an input type that accepts SubnetInvokeResponseArray and SubnetInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SubnetInvokeResponseArrayInput` via:
//
//          SubnetInvokeResponseArray{ SubnetInvokeResponseArgs{...} }
type SubnetInvokeResponseArrayInput interface {
	pulumi.Input

	ToSubnetInvokeResponseArrayOutput() SubnetInvokeResponseArrayOutput
	ToSubnetInvokeResponseArrayOutputWithContext(context.Context) SubnetInvokeResponseArrayOutput
}

type SubnetInvokeResponseArray []SubnetInvokeResponseInput

func (SubnetInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetInvokeResponse)(nil)).Elem()
}

func (i SubnetInvokeResponseArray) ToSubnetInvokeResponseArrayOutput() SubnetInvokeResponseArrayOutput {
	return i.ToSubnetInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SubnetInvokeResponseArray) ToSubnetInvokeResponseArrayOutputWithContext(ctx context.Context) SubnetInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetInvokeResponseArrayOutput)
}

// Subnet information.
type SubnetInvokeResponseOutput struct{ *pulumi.OutputState }

func (SubnetInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetInvokeResponse)(nil)).Elem()
}

func (o SubnetInvokeResponseOutput) ToSubnetInvokeResponseOutput() SubnetInvokeResponseOutput {
	return o
}

func (o SubnetInvokeResponseOutput) ToSubnetInvokeResponseOutputWithContext(ctx context.Context) SubnetInvokeResponseOutput {
	return o
}

// The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).
func (o SubnetInvokeResponseOutput) AllowPublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetInvokeResponse) *string { return v.AllowPublicIp }).(pulumi.StringPtrOutput)
}

// The name of the subnet as seen in the lab.
func (o SubnetInvokeResponseOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetInvokeResponse) *string { return v.LabSubnetName }).(pulumi.StringPtrOutput)
}

// The resource ID of the subnet.
func (o SubnetInvokeResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetInvokeResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type SubnetInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetInvokeResponse)(nil)).Elem()
}

func (o SubnetInvokeResponseArrayOutput) ToSubnetInvokeResponseArrayOutput() SubnetInvokeResponseArrayOutput {
	return o
}

func (o SubnetInvokeResponseArrayOutput) ToSubnetInvokeResponseArrayOutputWithContext(ctx context.Context) SubnetInvokeResponseArrayOutput {
	return o
}

func (o SubnetInvokeResponseArrayOutput) Index(i pulumi.IntInput) SubnetInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetInvokeResponse {
		return vs[0].([]SubnetInvokeResponse)[vs[1].(int)]
	}).(SubnetInvokeResponseOutput)
}

// Property overrides on a subnet of a virtual network.
type SubnetOverride struct {
	// The name given to the subnet within the lab.
	LabSubnetName *string `pulumi:"labSubnetName"`
	// The resource ID of the subnet.
	ResourceId *string `pulumi:"resourceId"`
	// Properties that virtual machines on this subnet will share.
	SharedPublicIpAddressConfiguration *SubnetSharedPublicIpAddressConfiguration `pulumi:"sharedPublicIpAddressConfiguration"`
	// Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).
	UseInVmCreationPermission *string `pulumi:"useInVmCreationPermission"`
	// Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).
	UsePublicIpAddressPermission *string `pulumi:"usePublicIpAddressPermission"`
	// The virtual network pool associated with this subnet.
	VirtualNetworkPoolName *string `pulumi:"virtualNetworkPoolName"`
}

// SubnetOverrideInput is an input type that accepts SubnetOverrideArgs and SubnetOverrideOutput values.
// You can construct a concrete instance of `SubnetOverrideInput` via:
//
//          SubnetOverrideArgs{...}
type SubnetOverrideInput interface {
	pulumi.Input

	ToSubnetOverrideOutput() SubnetOverrideOutput
	ToSubnetOverrideOutputWithContext(context.Context) SubnetOverrideOutput
}

// Property overrides on a subnet of a virtual network.
type SubnetOverrideArgs struct {
	// The name given to the subnet within the lab.
	LabSubnetName pulumi.StringPtrInput `pulumi:"labSubnetName"`
	// The resource ID of the subnet.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Properties that virtual machines on this subnet will share.
	SharedPublicIpAddressConfiguration SubnetSharedPublicIpAddressConfigurationPtrInput `pulumi:"sharedPublicIpAddressConfiguration"`
	// Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).
	UseInVmCreationPermission pulumi.StringPtrInput `pulumi:"useInVmCreationPermission"`
	// Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).
	UsePublicIpAddressPermission pulumi.StringPtrInput `pulumi:"usePublicIpAddressPermission"`
	// The virtual network pool associated with this subnet.
	VirtualNetworkPoolName pulumi.StringPtrInput `pulumi:"virtualNetworkPoolName"`
}

func (SubnetOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetOverride)(nil)).Elem()
}

func (i SubnetOverrideArgs) ToSubnetOverrideOutput() SubnetOverrideOutput {
	return i.ToSubnetOverrideOutputWithContext(context.Background())
}

func (i SubnetOverrideArgs) ToSubnetOverrideOutputWithContext(ctx context.Context) SubnetOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetOverrideOutput)
}

// SubnetOverrideArrayInput is an input type that accepts SubnetOverrideArray and SubnetOverrideArrayOutput values.
// You can construct a concrete instance of `SubnetOverrideArrayInput` via:
//
//          SubnetOverrideArray{ SubnetOverrideArgs{...} }
type SubnetOverrideArrayInput interface {
	pulumi.Input

	ToSubnetOverrideArrayOutput() SubnetOverrideArrayOutput
	ToSubnetOverrideArrayOutputWithContext(context.Context) SubnetOverrideArrayOutput
}

type SubnetOverrideArray []SubnetOverrideInput

func (SubnetOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetOverride)(nil)).Elem()
}

func (i SubnetOverrideArray) ToSubnetOverrideArrayOutput() SubnetOverrideArrayOutput {
	return i.ToSubnetOverrideArrayOutputWithContext(context.Background())
}

func (i SubnetOverrideArray) ToSubnetOverrideArrayOutputWithContext(ctx context.Context) SubnetOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetOverrideArrayOutput)
}

// Property overrides on a subnet of a virtual network.
type SubnetOverrideOutput struct{ *pulumi.OutputState }

func (SubnetOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetOverride)(nil)).Elem()
}

func (o SubnetOverrideOutput) ToSubnetOverrideOutput() SubnetOverrideOutput {
	return o
}

func (o SubnetOverrideOutput) ToSubnetOverrideOutputWithContext(ctx context.Context) SubnetOverrideOutput {
	return o
}

// The name given to the subnet within the lab.
func (o SubnetOverrideOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverride) *string { return v.LabSubnetName }).(pulumi.StringPtrOutput)
}

// The resource ID of the subnet.
func (o SubnetOverrideOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverride) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Properties that virtual machines on this subnet will share.
func (o SubnetOverrideOutput) SharedPublicIpAddressConfiguration() SubnetSharedPublicIpAddressConfigurationPtrOutput {
	return o.ApplyT(func(v SubnetOverride) *SubnetSharedPublicIpAddressConfiguration {
		return v.SharedPublicIpAddressConfiguration
	}).(SubnetSharedPublicIpAddressConfigurationPtrOutput)
}

// Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).
func (o SubnetOverrideOutput) UseInVmCreationPermission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverride) *string { return v.UseInVmCreationPermission }).(pulumi.StringPtrOutput)
}

// Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).
func (o SubnetOverrideOutput) UsePublicIpAddressPermission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverride) *string { return v.UsePublicIpAddressPermission }).(pulumi.StringPtrOutput)
}

// The virtual network pool associated with this subnet.
func (o SubnetOverrideOutput) VirtualNetworkPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverride) *string { return v.VirtualNetworkPoolName }).(pulumi.StringPtrOutput)
}

type SubnetOverrideArrayOutput struct{ *pulumi.OutputState }

func (SubnetOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetOverride)(nil)).Elem()
}

func (o SubnetOverrideArrayOutput) ToSubnetOverrideArrayOutput() SubnetOverrideArrayOutput {
	return o
}

func (o SubnetOverrideArrayOutput) ToSubnetOverrideArrayOutputWithContext(ctx context.Context) SubnetOverrideArrayOutput {
	return o
}

func (o SubnetOverrideArrayOutput) Index(i pulumi.IntInput) SubnetOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetOverride {
		return vs[0].([]SubnetOverride)[vs[1].(int)]
	}).(SubnetOverrideOutput)
}

// Property overrides on a subnet of a virtual network.
type SubnetOverrideInvokeResponse struct {
	// The name given to the subnet within the lab.
	LabSubnetName *string `pulumi:"labSubnetName"`
	// The resource ID of the subnet.
	ResourceId *string `pulumi:"resourceId"`
	// Properties that virtual machines on this subnet will share.
	SharedPublicIpAddressConfiguration *SubnetSharedPublicIpAddressConfigurationInvokeResponse `pulumi:"sharedPublicIpAddressConfiguration"`
	// Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).
	UseInVmCreationPermission *string `pulumi:"useInVmCreationPermission"`
	// Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).
	UsePublicIpAddressPermission *string `pulumi:"usePublicIpAddressPermission"`
	// The virtual network pool associated with this subnet.
	VirtualNetworkPoolName *string `pulumi:"virtualNetworkPoolName"`
}

// SubnetOverrideInvokeResponseInput is an input type that accepts SubnetOverrideInvokeResponseArgs and SubnetOverrideInvokeResponseOutput values.
// You can construct a concrete instance of `SubnetOverrideInvokeResponseInput` via:
//
//          SubnetOverrideInvokeResponseArgs{...}
type SubnetOverrideInvokeResponseInput interface {
	pulumi.Input

	ToSubnetOverrideInvokeResponseOutput() SubnetOverrideInvokeResponseOutput
	ToSubnetOverrideInvokeResponseOutputWithContext(context.Context) SubnetOverrideInvokeResponseOutput
}

// Property overrides on a subnet of a virtual network.
type SubnetOverrideInvokeResponseArgs struct {
	// The name given to the subnet within the lab.
	LabSubnetName pulumi.StringPtrInput `pulumi:"labSubnetName"`
	// The resource ID of the subnet.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Properties that virtual machines on this subnet will share.
	SharedPublicIpAddressConfiguration SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrInput `pulumi:"sharedPublicIpAddressConfiguration"`
	// Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).
	UseInVmCreationPermission pulumi.StringPtrInput `pulumi:"useInVmCreationPermission"`
	// Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).
	UsePublicIpAddressPermission pulumi.StringPtrInput `pulumi:"usePublicIpAddressPermission"`
	// The virtual network pool associated with this subnet.
	VirtualNetworkPoolName pulumi.StringPtrInput `pulumi:"virtualNetworkPoolName"`
}

func (SubnetOverrideInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetOverrideInvokeResponse)(nil)).Elem()
}

func (i SubnetOverrideInvokeResponseArgs) ToSubnetOverrideInvokeResponseOutput() SubnetOverrideInvokeResponseOutput {
	return i.ToSubnetOverrideInvokeResponseOutputWithContext(context.Background())
}

func (i SubnetOverrideInvokeResponseArgs) ToSubnetOverrideInvokeResponseOutputWithContext(ctx context.Context) SubnetOverrideInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetOverrideInvokeResponseOutput)
}

// SubnetOverrideInvokeResponseArrayInput is an input type that accepts SubnetOverrideInvokeResponseArray and SubnetOverrideInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SubnetOverrideInvokeResponseArrayInput` via:
//
//          SubnetOverrideInvokeResponseArray{ SubnetOverrideInvokeResponseArgs{...} }
type SubnetOverrideInvokeResponseArrayInput interface {
	pulumi.Input

	ToSubnetOverrideInvokeResponseArrayOutput() SubnetOverrideInvokeResponseArrayOutput
	ToSubnetOverrideInvokeResponseArrayOutputWithContext(context.Context) SubnetOverrideInvokeResponseArrayOutput
}

type SubnetOverrideInvokeResponseArray []SubnetOverrideInvokeResponseInput

func (SubnetOverrideInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetOverrideInvokeResponse)(nil)).Elem()
}

func (i SubnetOverrideInvokeResponseArray) ToSubnetOverrideInvokeResponseArrayOutput() SubnetOverrideInvokeResponseArrayOutput {
	return i.ToSubnetOverrideInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SubnetOverrideInvokeResponseArray) ToSubnetOverrideInvokeResponseArrayOutputWithContext(ctx context.Context) SubnetOverrideInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetOverrideInvokeResponseArrayOutput)
}

// Property overrides on a subnet of a virtual network.
type SubnetOverrideInvokeResponseOutput struct{ *pulumi.OutputState }

func (SubnetOverrideInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetOverrideInvokeResponse)(nil)).Elem()
}

func (o SubnetOverrideInvokeResponseOutput) ToSubnetOverrideInvokeResponseOutput() SubnetOverrideInvokeResponseOutput {
	return o
}

func (o SubnetOverrideInvokeResponseOutput) ToSubnetOverrideInvokeResponseOutputWithContext(ctx context.Context) SubnetOverrideInvokeResponseOutput {
	return o
}

// The name given to the subnet within the lab.
func (o SubnetOverrideInvokeResponseOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverrideInvokeResponse) *string { return v.LabSubnetName }).(pulumi.StringPtrOutput)
}

// The resource ID of the subnet.
func (o SubnetOverrideInvokeResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverrideInvokeResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Properties that virtual machines on this subnet will share.
func (o SubnetOverrideInvokeResponseOutput) SharedPublicIpAddressConfiguration() SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v SubnetOverrideInvokeResponse) *SubnetSharedPublicIpAddressConfigurationInvokeResponse {
		return v.SharedPublicIpAddressConfiguration
	}).(SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput)
}

// Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).
func (o SubnetOverrideInvokeResponseOutput) UseInVmCreationPermission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverrideInvokeResponse) *string { return v.UseInVmCreationPermission }).(pulumi.StringPtrOutput)
}

// Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).
func (o SubnetOverrideInvokeResponseOutput) UsePublicIpAddressPermission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverrideInvokeResponse) *string { return v.UsePublicIpAddressPermission }).(pulumi.StringPtrOutput)
}

// The virtual network pool associated with this subnet.
func (o SubnetOverrideInvokeResponseOutput) VirtualNetworkPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverrideInvokeResponse) *string { return v.VirtualNetworkPoolName }).(pulumi.StringPtrOutput)
}

type SubnetOverrideInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetOverrideInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetOverrideInvokeResponse)(nil)).Elem()
}

func (o SubnetOverrideInvokeResponseArrayOutput) ToSubnetOverrideInvokeResponseArrayOutput() SubnetOverrideInvokeResponseArrayOutput {
	return o
}

func (o SubnetOverrideInvokeResponseArrayOutput) ToSubnetOverrideInvokeResponseArrayOutputWithContext(ctx context.Context) SubnetOverrideInvokeResponseArrayOutput {
	return o
}

func (o SubnetOverrideInvokeResponseArrayOutput) Index(i pulumi.IntInput) SubnetOverrideInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetOverrideInvokeResponse {
		return vs[0].([]SubnetOverrideInvokeResponse)[vs[1].(int)]
	}).(SubnetOverrideInvokeResponseOutput)
}

// Property overrides on a subnet of a virtual network.
type SubnetOverrideResponse struct {
	// The name given to the subnet within the lab.
	LabSubnetName *string `pulumi:"labSubnetName"`
	// The resource ID of the subnet.
	ResourceId *string `pulumi:"resourceId"`
	// Properties that virtual machines on this subnet will share.
	SharedPublicIpAddressConfiguration *SubnetSharedPublicIpAddressConfigurationResponse `pulumi:"sharedPublicIpAddressConfiguration"`
	// Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).
	UseInVmCreationPermission *string `pulumi:"useInVmCreationPermission"`
	// Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).
	UsePublicIpAddressPermission *string `pulumi:"usePublicIpAddressPermission"`
	// The virtual network pool associated with this subnet.
	VirtualNetworkPoolName *string `pulumi:"virtualNetworkPoolName"`
}

// SubnetOverrideResponseInput is an input type that accepts SubnetOverrideResponseArgs and SubnetOverrideResponseOutput values.
// You can construct a concrete instance of `SubnetOverrideResponseInput` via:
//
//          SubnetOverrideResponseArgs{...}
type SubnetOverrideResponseInput interface {
	pulumi.Input

	ToSubnetOverrideResponseOutput() SubnetOverrideResponseOutput
	ToSubnetOverrideResponseOutputWithContext(context.Context) SubnetOverrideResponseOutput
}

// Property overrides on a subnet of a virtual network.
type SubnetOverrideResponseArgs struct {
	// The name given to the subnet within the lab.
	LabSubnetName pulumi.StringPtrInput `pulumi:"labSubnetName"`
	// The resource ID of the subnet.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Properties that virtual machines on this subnet will share.
	SharedPublicIpAddressConfiguration SubnetSharedPublicIpAddressConfigurationResponsePtrInput `pulumi:"sharedPublicIpAddressConfiguration"`
	// Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).
	UseInVmCreationPermission pulumi.StringPtrInput `pulumi:"useInVmCreationPermission"`
	// Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).
	UsePublicIpAddressPermission pulumi.StringPtrInput `pulumi:"usePublicIpAddressPermission"`
	// The virtual network pool associated with this subnet.
	VirtualNetworkPoolName pulumi.StringPtrInput `pulumi:"virtualNetworkPoolName"`
}

func (SubnetOverrideResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetOverrideResponse)(nil)).Elem()
}

func (i SubnetOverrideResponseArgs) ToSubnetOverrideResponseOutput() SubnetOverrideResponseOutput {
	return i.ToSubnetOverrideResponseOutputWithContext(context.Background())
}

func (i SubnetOverrideResponseArgs) ToSubnetOverrideResponseOutputWithContext(ctx context.Context) SubnetOverrideResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetOverrideResponseOutput)
}

// SubnetOverrideResponseArrayInput is an input type that accepts SubnetOverrideResponseArray and SubnetOverrideResponseArrayOutput values.
// You can construct a concrete instance of `SubnetOverrideResponseArrayInput` via:
//
//          SubnetOverrideResponseArray{ SubnetOverrideResponseArgs{...} }
type SubnetOverrideResponseArrayInput interface {
	pulumi.Input

	ToSubnetOverrideResponseArrayOutput() SubnetOverrideResponseArrayOutput
	ToSubnetOverrideResponseArrayOutputWithContext(context.Context) SubnetOverrideResponseArrayOutput
}

type SubnetOverrideResponseArray []SubnetOverrideResponseInput

func (SubnetOverrideResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetOverrideResponse)(nil)).Elem()
}

func (i SubnetOverrideResponseArray) ToSubnetOverrideResponseArrayOutput() SubnetOverrideResponseArrayOutput {
	return i.ToSubnetOverrideResponseArrayOutputWithContext(context.Background())
}

func (i SubnetOverrideResponseArray) ToSubnetOverrideResponseArrayOutputWithContext(ctx context.Context) SubnetOverrideResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetOverrideResponseArrayOutput)
}

// Property overrides on a subnet of a virtual network.
type SubnetOverrideResponseOutput struct{ *pulumi.OutputState }

func (SubnetOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetOverrideResponse)(nil)).Elem()
}

func (o SubnetOverrideResponseOutput) ToSubnetOverrideResponseOutput() SubnetOverrideResponseOutput {
	return o
}

func (o SubnetOverrideResponseOutput) ToSubnetOverrideResponseOutputWithContext(ctx context.Context) SubnetOverrideResponseOutput {
	return o
}

// The name given to the subnet within the lab.
func (o SubnetOverrideResponseOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverrideResponse) *string { return v.LabSubnetName }).(pulumi.StringPtrOutput)
}

// The resource ID of the subnet.
func (o SubnetOverrideResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverrideResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Properties that virtual machines on this subnet will share.
func (o SubnetOverrideResponseOutput) SharedPublicIpAddressConfiguration() SubnetSharedPublicIpAddressConfigurationResponsePtrOutput {
	return o.ApplyT(func(v SubnetOverrideResponse) *SubnetSharedPublicIpAddressConfigurationResponse {
		return v.SharedPublicIpAddressConfiguration
	}).(SubnetSharedPublicIpAddressConfigurationResponsePtrOutput)
}

// Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).
func (o SubnetOverrideResponseOutput) UseInVmCreationPermission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverrideResponse) *string { return v.UseInVmCreationPermission }).(pulumi.StringPtrOutput)
}

// Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).
func (o SubnetOverrideResponseOutput) UsePublicIpAddressPermission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverrideResponse) *string { return v.UsePublicIpAddressPermission }).(pulumi.StringPtrOutput)
}

// The virtual network pool associated with this subnet.
func (o SubnetOverrideResponseOutput) VirtualNetworkPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverrideResponse) *string { return v.VirtualNetworkPoolName }).(pulumi.StringPtrOutput)
}

type SubnetOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetOverrideResponse)(nil)).Elem()
}

func (o SubnetOverrideResponseArrayOutput) ToSubnetOverrideResponseArrayOutput() SubnetOverrideResponseArrayOutput {
	return o
}

func (o SubnetOverrideResponseArrayOutput) ToSubnetOverrideResponseArrayOutputWithContext(ctx context.Context) SubnetOverrideResponseArrayOutput {
	return o
}

func (o SubnetOverrideResponseArrayOutput) Index(i pulumi.IntInput) SubnetOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetOverrideResponse {
		return vs[0].([]SubnetOverrideResponse)[vs[1].(int)]
	}).(SubnetOverrideResponseOutput)
}

// Subnet information.
type SubnetResponse struct {
	// The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).
	AllowPublicIp *string `pulumi:"allowPublicIp"`
	// The name of the subnet as seen in the lab.
	LabSubnetName *string `pulumi:"labSubnetName"`
	// The resource ID of the subnet.
	ResourceId *string `pulumi:"resourceId"`
}

// SubnetResponseInput is an input type that accepts SubnetResponseArgs and SubnetResponseOutput values.
// You can construct a concrete instance of `SubnetResponseInput` via:
//
//          SubnetResponseArgs{...}
type SubnetResponseInput interface {
	pulumi.Input

	ToSubnetResponseOutput() SubnetResponseOutput
	ToSubnetResponseOutputWithContext(context.Context) SubnetResponseOutput
}

// Subnet information.
type SubnetResponseArgs struct {
	// The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).
	AllowPublicIp pulumi.StringPtrInput `pulumi:"allowPublicIp"`
	// The name of the subnet as seen in the lab.
	LabSubnetName pulumi.StringPtrInput `pulumi:"labSubnetName"`
	// The resource ID of the subnet.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (SubnetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (i SubnetResponseArgs) ToSubnetResponseOutput() SubnetResponseOutput {
	return i.ToSubnetResponseOutputWithContext(context.Background())
}

func (i SubnetResponseArgs) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponseOutput)
}

// SubnetResponseArrayInput is an input type that accepts SubnetResponseArray and SubnetResponseArrayOutput values.
// You can construct a concrete instance of `SubnetResponseArrayInput` via:
//
//          SubnetResponseArray{ SubnetResponseArgs{...} }
type SubnetResponseArrayInput interface {
	pulumi.Input

	ToSubnetResponseArrayOutput() SubnetResponseArrayOutput
	ToSubnetResponseArrayOutputWithContext(context.Context) SubnetResponseArrayOutput
}

type SubnetResponseArray []SubnetResponseInput

func (SubnetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (i SubnetResponseArray) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return i.ToSubnetResponseArrayOutputWithContext(context.Background())
}

func (i SubnetResponseArray) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponseArrayOutput)
}

// Subnet information.
type SubnetResponseOutput struct{ *pulumi.OutputState }

func (SubnetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseOutput) ToSubnetResponseOutput() SubnetResponseOutput {
	return o
}

func (o SubnetResponseOutput) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return o
}

// The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).
func (o SubnetResponseOutput) AllowPublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.AllowPublicIp }).(pulumi.StringPtrOutput)
}

// The name of the subnet as seen in the lab.
func (o SubnetResponseOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.LabSubnetName }).(pulumi.StringPtrOutput)
}

// The resource ID of the subnet.
func (o SubnetResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type SubnetResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) Index(i pulumi.IntInput) SubnetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetResponse {
		return vs[0].([]SubnetResponse)[vs[1].(int)]
	}).(SubnetResponseOutput)
}

// Configuration for public IP address sharing.
type SubnetSharedPublicIpAddressConfiguration struct {
	// Backend ports that virtual machines on this subnet are allowed to expose
	AllowedPorts []Port `pulumi:"allowedPorts"`
}

// SubnetSharedPublicIpAddressConfigurationInput is an input type that accepts SubnetSharedPublicIpAddressConfigurationArgs and SubnetSharedPublicIpAddressConfigurationOutput values.
// You can construct a concrete instance of `SubnetSharedPublicIpAddressConfigurationInput` via:
//
//          SubnetSharedPublicIpAddressConfigurationArgs{...}
type SubnetSharedPublicIpAddressConfigurationInput interface {
	pulumi.Input

	ToSubnetSharedPublicIpAddressConfigurationOutput() SubnetSharedPublicIpAddressConfigurationOutput
	ToSubnetSharedPublicIpAddressConfigurationOutputWithContext(context.Context) SubnetSharedPublicIpAddressConfigurationOutput
}

// Configuration for public IP address sharing.
type SubnetSharedPublicIpAddressConfigurationArgs struct {
	// Backend ports that virtual machines on this subnet are allowed to expose
	AllowedPorts PortArrayInput `pulumi:"allowedPorts"`
}

func (SubnetSharedPublicIpAddressConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetSharedPublicIpAddressConfiguration)(nil)).Elem()
}

func (i SubnetSharedPublicIpAddressConfigurationArgs) ToSubnetSharedPublicIpAddressConfigurationOutput() SubnetSharedPublicIpAddressConfigurationOutput {
	return i.ToSubnetSharedPublicIpAddressConfigurationOutputWithContext(context.Background())
}

func (i SubnetSharedPublicIpAddressConfigurationArgs) ToSubnetSharedPublicIpAddressConfigurationOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetSharedPublicIpAddressConfigurationOutput)
}

func (i SubnetSharedPublicIpAddressConfigurationArgs) ToSubnetSharedPublicIpAddressConfigurationPtrOutput() SubnetSharedPublicIpAddressConfigurationPtrOutput {
	return i.ToSubnetSharedPublicIpAddressConfigurationPtrOutputWithContext(context.Background())
}

func (i SubnetSharedPublicIpAddressConfigurationArgs) ToSubnetSharedPublicIpAddressConfigurationPtrOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetSharedPublicIpAddressConfigurationOutput).ToSubnetSharedPublicIpAddressConfigurationPtrOutputWithContext(ctx)
}

// SubnetSharedPublicIpAddressConfigurationPtrInput is an input type that accepts SubnetSharedPublicIpAddressConfigurationArgs, SubnetSharedPublicIpAddressConfigurationPtr and SubnetSharedPublicIpAddressConfigurationPtrOutput values.
// You can construct a concrete instance of `SubnetSharedPublicIpAddressConfigurationPtrInput` via:
//
//          SubnetSharedPublicIpAddressConfigurationArgs{...}
//
//  or:
//
//          nil
type SubnetSharedPublicIpAddressConfigurationPtrInput interface {
	pulumi.Input

	ToSubnetSharedPublicIpAddressConfigurationPtrOutput() SubnetSharedPublicIpAddressConfigurationPtrOutput
	ToSubnetSharedPublicIpAddressConfigurationPtrOutputWithContext(context.Context) SubnetSharedPublicIpAddressConfigurationPtrOutput
}

type subnetSharedPublicIpAddressConfigurationPtrType SubnetSharedPublicIpAddressConfigurationArgs

func SubnetSharedPublicIpAddressConfigurationPtr(v *SubnetSharedPublicIpAddressConfigurationArgs) SubnetSharedPublicIpAddressConfigurationPtrInput {
	return (*subnetSharedPublicIpAddressConfigurationPtrType)(v)
}

func (*subnetSharedPublicIpAddressConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetSharedPublicIpAddressConfiguration)(nil)).Elem()
}

func (i *subnetSharedPublicIpAddressConfigurationPtrType) ToSubnetSharedPublicIpAddressConfigurationPtrOutput() SubnetSharedPublicIpAddressConfigurationPtrOutput {
	return i.ToSubnetSharedPublicIpAddressConfigurationPtrOutputWithContext(context.Background())
}

func (i *subnetSharedPublicIpAddressConfigurationPtrType) ToSubnetSharedPublicIpAddressConfigurationPtrOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetSharedPublicIpAddressConfigurationPtrOutput)
}

// Configuration for public IP address sharing.
type SubnetSharedPublicIpAddressConfigurationOutput struct{ *pulumi.OutputState }

func (SubnetSharedPublicIpAddressConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetSharedPublicIpAddressConfiguration)(nil)).Elem()
}

func (o SubnetSharedPublicIpAddressConfigurationOutput) ToSubnetSharedPublicIpAddressConfigurationOutput() SubnetSharedPublicIpAddressConfigurationOutput {
	return o
}

func (o SubnetSharedPublicIpAddressConfigurationOutput) ToSubnetSharedPublicIpAddressConfigurationOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationOutput {
	return o
}

func (o SubnetSharedPublicIpAddressConfigurationOutput) ToSubnetSharedPublicIpAddressConfigurationPtrOutput() SubnetSharedPublicIpAddressConfigurationPtrOutput {
	return o.ToSubnetSharedPublicIpAddressConfigurationPtrOutputWithContext(context.Background())
}

func (o SubnetSharedPublicIpAddressConfigurationOutput) ToSubnetSharedPublicIpAddressConfigurationPtrOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationPtrOutput {
	return o.ApplyT(func(v SubnetSharedPublicIpAddressConfiguration) *SubnetSharedPublicIpAddressConfiguration {
		return &v
	}).(SubnetSharedPublicIpAddressConfigurationPtrOutput)
}

// Backend ports that virtual machines on this subnet are allowed to expose
func (o SubnetSharedPublicIpAddressConfigurationOutput) AllowedPorts() PortArrayOutput {
	return o.ApplyT(func(v SubnetSharedPublicIpAddressConfiguration) []Port { return v.AllowedPorts }).(PortArrayOutput)
}

type SubnetSharedPublicIpAddressConfigurationPtrOutput struct{ *pulumi.OutputState }

func (SubnetSharedPublicIpAddressConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetSharedPublicIpAddressConfiguration)(nil)).Elem()
}

func (o SubnetSharedPublicIpAddressConfigurationPtrOutput) ToSubnetSharedPublicIpAddressConfigurationPtrOutput() SubnetSharedPublicIpAddressConfigurationPtrOutput {
	return o
}

func (o SubnetSharedPublicIpAddressConfigurationPtrOutput) ToSubnetSharedPublicIpAddressConfigurationPtrOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationPtrOutput {
	return o
}

func (o SubnetSharedPublicIpAddressConfigurationPtrOutput) Elem() SubnetSharedPublicIpAddressConfigurationOutput {
	return o.ApplyT(func(v *SubnetSharedPublicIpAddressConfiguration) SubnetSharedPublicIpAddressConfiguration { return *v }).(SubnetSharedPublicIpAddressConfigurationOutput)
}

// Backend ports that virtual machines on this subnet are allowed to expose
func (o SubnetSharedPublicIpAddressConfigurationPtrOutput) AllowedPorts() PortArrayOutput {
	return o.ApplyT(func(v *SubnetSharedPublicIpAddressConfiguration) []Port {
		if v == nil {
			return nil
		}
		return v.AllowedPorts
	}).(PortArrayOutput)
}

// Configuration for public IP address sharing.
type SubnetSharedPublicIpAddressConfigurationInvokeResponse struct {
	// Backend ports that virtual machines on this subnet are allowed to expose
	AllowedPorts []PortInvokeResponse `pulumi:"allowedPorts"`
}

// SubnetSharedPublicIpAddressConfigurationInvokeResponseInput is an input type that accepts SubnetSharedPublicIpAddressConfigurationInvokeResponseArgs and SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput values.
// You can construct a concrete instance of `SubnetSharedPublicIpAddressConfigurationInvokeResponseInput` via:
//
//          SubnetSharedPublicIpAddressConfigurationInvokeResponseArgs{...}
type SubnetSharedPublicIpAddressConfigurationInvokeResponseInput interface {
	pulumi.Input

	ToSubnetSharedPublicIpAddressConfigurationInvokeResponseOutput() SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput
	ToSubnetSharedPublicIpAddressConfigurationInvokeResponseOutputWithContext(context.Context) SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput
}

// Configuration for public IP address sharing.
type SubnetSharedPublicIpAddressConfigurationInvokeResponseArgs struct {
	// Backend ports that virtual machines on this subnet are allowed to expose
	AllowedPorts PortInvokeResponseArrayInput `pulumi:"allowedPorts"`
}

func (SubnetSharedPublicIpAddressConfigurationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetSharedPublicIpAddressConfigurationInvokeResponse)(nil)).Elem()
}

func (i SubnetSharedPublicIpAddressConfigurationInvokeResponseArgs) ToSubnetSharedPublicIpAddressConfigurationInvokeResponseOutput() SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput {
	return i.ToSubnetSharedPublicIpAddressConfigurationInvokeResponseOutputWithContext(context.Background())
}

func (i SubnetSharedPublicIpAddressConfigurationInvokeResponseArgs) ToSubnetSharedPublicIpAddressConfigurationInvokeResponseOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput)
}

func (i SubnetSharedPublicIpAddressConfigurationInvokeResponseArgs) ToSubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput() SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return i.ToSubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SubnetSharedPublicIpAddressConfigurationInvokeResponseArgs) ToSubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput).ToSubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(ctx)
}

// SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrInput is an input type that accepts SubnetSharedPublicIpAddressConfigurationInvokeResponseArgs, SubnetSharedPublicIpAddressConfigurationInvokeResponsePtr and SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrInput` via:
//
//          SubnetSharedPublicIpAddressConfigurationInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrInput interface {
	pulumi.Input

	ToSubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput() SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput
	ToSubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(context.Context) SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput
}

type subnetSharedPublicIpAddressConfigurationInvokeResponsePtrType SubnetSharedPublicIpAddressConfigurationInvokeResponseArgs

func SubnetSharedPublicIpAddressConfigurationInvokeResponsePtr(v *SubnetSharedPublicIpAddressConfigurationInvokeResponseArgs) SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrInput {
	return (*subnetSharedPublicIpAddressConfigurationInvokeResponsePtrType)(v)
}

func (*subnetSharedPublicIpAddressConfigurationInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetSharedPublicIpAddressConfigurationInvokeResponse)(nil)).Elem()
}

func (i *subnetSharedPublicIpAddressConfigurationInvokeResponsePtrType) ToSubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput() SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return i.ToSubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *subnetSharedPublicIpAddressConfigurationInvokeResponsePtrType) ToSubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput)
}

// Configuration for public IP address sharing.
type SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput struct{ *pulumi.OutputState }

func (SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetSharedPublicIpAddressConfigurationInvokeResponse)(nil)).Elem()
}

func (o SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput) ToSubnetSharedPublicIpAddressConfigurationInvokeResponseOutput() SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput {
	return o
}

func (o SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput) ToSubnetSharedPublicIpAddressConfigurationInvokeResponseOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput {
	return o
}

func (o SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput) ToSubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput() SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return o.ToSubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput) ToSubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v SubnetSharedPublicIpAddressConfigurationInvokeResponse) *SubnetSharedPublicIpAddressConfigurationInvokeResponse {
		return &v
	}).(SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput)
}

// Backend ports that virtual machines on this subnet are allowed to expose
func (o SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput) AllowedPorts() PortInvokeResponseArrayOutput {
	return o.ApplyT(func(v SubnetSharedPublicIpAddressConfigurationInvokeResponse) []PortInvokeResponse {
		return v.AllowedPorts
	}).(PortInvokeResponseArrayOutput)
}

type SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetSharedPublicIpAddressConfigurationInvokeResponse)(nil)).Elem()
}

func (o SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput) ToSubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput() SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return o
}

func (o SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput) ToSubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput {
	return o
}

func (o SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput) Elem() SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput {
	return o.ApplyT(func(v *SubnetSharedPublicIpAddressConfigurationInvokeResponse) SubnetSharedPublicIpAddressConfigurationInvokeResponse {
		return *v
	}).(SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput)
}

// Backend ports that virtual machines on this subnet are allowed to expose
func (o SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput) AllowedPorts() PortInvokeResponseArrayOutput {
	return o.ApplyT(func(v *SubnetSharedPublicIpAddressConfigurationInvokeResponse) []PortInvokeResponse {
		if v == nil {
			return nil
		}
		return v.AllowedPorts
	}).(PortInvokeResponseArrayOutput)
}

// Configuration for public IP address sharing.
type SubnetSharedPublicIpAddressConfigurationResponse struct {
	// Backend ports that virtual machines on this subnet are allowed to expose
	AllowedPorts []PortResponse `pulumi:"allowedPorts"`
}

// SubnetSharedPublicIpAddressConfigurationResponseInput is an input type that accepts SubnetSharedPublicIpAddressConfigurationResponseArgs and SubnetSharedPublicIpAddressConfigurationResponseOutput values.
// You can construct a concrete instance of `SubnetSharedPublicIpAddressConfigurationResponseInput` via:
//
//          SubnetSharedPublicIpAddressConfigurationResponseArgs{...}
type SubnetSharedPublicIpAddressConfigurationResponseInput interface {
	pulumi.Input

	ToSubnetSharedPublicIpAddressConfigurationResponseOutput() SubnetSharedPublicIpAddressConfigurationResponseOutput
	ToSubnetSharedPublicIpAddressConfigurationResponseOutputWithContext(context.Context) SubnetSharedPublicIpAddressConfigurationResponseOutput
}

// Configuration for public IP address sharing.
type SubnetSharedPublicIpAddressConfigurationResponseArgs struct {
	// Backend ports that virtual machines on this subnet are allowed to expose
	AllowedPorts PortResponseArrayInput `pulumi:"allowedPorts"`
}

func (SubnetSharedPublicIpAddressConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetSharedPublicIpAddressConfigurationResponse)(nil)).Elem()
}

func (i SubnetSharedPublicIpAddressConfigurationResponseArgs) ToSubnetSharedPublicIpAddressConfigurationResponseOutput() SubnetSharedPublicIpAddressConfigurationResponseOutput {
	return i.ToSubnetSharedPublicIpAddressConfigurationResponseOutputWithContext(context.Background())
}

func (i SubnetSharedPublicIpAddressConfigurationResponseArgs) ToSubnetSharedPublicIpAddressConfigurationResponseOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetSharedPublicIpAddressConfigurationResponseOutput)
}

func (i SubnetSharedPublicIpAddressConfigurationResponseArgs) ToSubnetSharedPublicIpAddressConfigurationResponsePtrOutput() SubnetSharedPublicIpAddressConfigurationResponsePtrOutput {
	return i.ToSubnetSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i SubnetSharedPublicIpAddressConfigurationResponseArgs) ToSubnetSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetSharedPublicIpAddressConfigurationResponseOutput).ToSubnetSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(ctx)
}

// SubnetSharedPublicIpAddressConfigurationResponsePtrInput is an input type that accepts SubnetSharedPublicIpAddressConfigurationResponseArgs, SubnetSharedPublicIpAddressConfigurationResponsePtr and SubnetSharedPublicIpAddressConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `SubnetSharedPublicIpAddressConfigurationResponsePtrInput` via:
//
//          SubnetSharedPublicIpAddressConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type SubnetSharedPublicIpAddressConfigurationResponsePtrInput interface {
	pulumi.Input

	ToSubnetSharedPublicIpAddressConfigurationResponsePtrOutput() SubnetSharedPublicIpAddressConfigurationResponsePtrOutput
	ToSubnetSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(context.Context) SubnetSharedPublicIpAddressConfigurationResponsePtrOutput
}

type subnetSharedPublicIpAddressConfigurationResponsePtrType SubnetSharedPublicIpAddressConfigurationResponseArgs

func SubnetSharedPublicIpAddressConfigurationResponsePtr(v *SubnetSharedPublicIpAddressConfigurationResponseArgs) SubnetSharedPublicIpAddressConfigurationResponsePtrInput {
	return (*subnetSharedPublicIpAddressConfigurationResponsePtrType)(v)
}

func (*subnetSharedPublicIpAddressConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetSharedPublicIpAddressConfigurationResponse)(nil)).Elem()
}

func (i *subnetSharedPublicIpAddressConfigurationResponsePtrType) ToSubnetSharedPublicIpAddressConfigurationResponsePtrOutput() SubnetSharedPublicIpAddressConfigurationResponsePtrOutput {
	return i.ToSubnetSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *subnetSharedPublicIpAddressConfigurationResponsePtrType) ToSubnetSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetSharedPublicIpAddressConfigurationResponsePtrOutput)
}

// Configuration for public IP address sharing.
type SubnetSharedPublicIpAddressConfigurationResponseOutput struct{ *pulumi.OutputState }

func (SubnetSharedPublicIpAddressConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetSharedPublicIpAddressConfigurationResponse)(nil)).Elem()
}

func (o SubnetSharedPublicIpAddressConfigurationResponseOutput) ToSubnetSharedPublicIpAddressConfigurationResponseOutput() SubnetSharedPublicIpAddressConfigurationResponseOutput {
	return o
}

func (o SubnetSharedPublicIpAddressConfigurationResponseOutput) ToSubnetSharedPublicIpAddressConfigurationResponseOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationResponseOutput {
	return o
}

func (o SubnetSharedPublicIpAddressConfigurationResponseOutput) ToSubnetSharedPublicIpAddressConfigurationResponsePtrOutput() SubnetSharedPublicIpAddressConfigurationResponsePtrOutput {
	return o.ToSubnetSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o SubnetSharedPublicIpAddressConfigurationResponseOutput) ToSubnetSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationResponsePtrOutput {
	return o.ApplyT(func(v SubnetSharedPublicIpAddressConfigurationResponse) *SubnetSharedPublicIpAddressConfigurationResponse {
		return &v
	}).(SubnetSharedPublicIpAddressConfigurationResponsePtrOutput)
}

// Backend ports that virtual machines on this subnet are allowed to expose
func (o SubnetSharedPublicIpAddressConfigurationResponseOutput) AllowedPorts() PortResponseArrayOutput {
	return o.ApplyT(func(v SubnetSharedPublicIpAddressConfigurationResponse) []PortResponse { return v.AllowedPorts }).(PortResponseArrayOutput)
}

type SubnetSharedPublicIpAddressConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (SubnetSharedPublicIpAddressConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetSharedPublicIpAddressConfigurationResponse)(nil)).Elem()
}

func (o SubnetSharedPublicIpAddressConfigurationResponsePtrOutput) ToSubnetSharedPublicIpAddressConfigurationResponsePtrOutput() SubnetSharedPublicIpAddressConfigurationResponsePtrOutput {
	return o
}

func (o SubnetSharedPublicIpAddressConfigurationResponsePtrOutput) ToSubnetSharedPublicIpAddressConfigurationResponsePtrOutputWithContext(ctx context.Context) SubnetSharedPublicIpAddressConfigurationResponsePtrOutput {
	return o
}

func (o SubnetSharedPublicIpAddressConfigurationResponsePtrOutput) Elem() SubnetSharedPublicIpAddressConfigurationResponseOutput {
	return o.ApplyT(func(v *SubnetSharedPublicIpAddressConfigurationResponse) SubnetSharedPublicIpAddressConfigurationResponse {
		return *v
	}).(SubnetSharedPublicIpAddressConfigurationResponseOutput)
}

// Backend ports that virtual machines on this subnet are allowed to expose
func (o SubnetSharedPublicIpAddressConfigurationResponsePtrOutput) AllowedPorts() PortResponseArrayOutput {
	return o.ApplyT(func(v *SubnetSharedPublicIpAddressConfigurationResponse) []PortResponse {
		if v == nil {
			return nil
		}
		return v.AllowedPorts
	}).(PortResponseArrayOutput)
}

// Identity attributes of a lab user.
type UserIdentity struct {
	// Set to the app Id of the client JWT making the request.
	AppId *string `pulumi:"appId"`
	// Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.
	ObjectId *string `pulumi:"objectId"`
	// Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
	PrincipalId *string `pulumi:"principalId"`
	// Set to the principal name / UPN of the client JWT making the request.
	PrincipalName *string `pulumi:"principalName"`
	// Set to the tenant ID of the client JWT making the request.
	TenantId *string `pulumi:"tenantId"`
}

// UserIdentityInput is an input type that accepts UserIdentityArgs and UserIdentityOutput values.
// You can construct a concrete instance of `UserIdentityInput` via:
//
//          UserIdentityArgs{...}
type UserIdentityInput interface {
	pulumi.Input

	ToUserIdentityOutput() UserIdentityOutput
	ToUserIdentityOutputWithContext(context.Context) UserIdentityOutput
}

// Identity attributes of a lab user.
type UserIdentityArgs struct {
	// Set to the app Id of the client JWT making the request.
	AppId pulumi.StringPtrInput `pulumi:"appId"`
	// Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// Set to the principal name / UPN of the client JWT making the request.
	PrincipalName pulumi.StringPtrInput `pulumi:"principalName"`
	// Set to the tenant ID of the client JWT making the request.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (UserIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentity)(nil)).Elem()
}

func (i UserIdentityArgs) ToUserIdentityOutput() UserIdentityOutput {
	return i.ToUserIdentityOutputWithContext(context.Background())
}

func (i UserIdentityArgs) ToUserIdentityOutputWithContext(ctx context.Context) UserIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityOutput)
}

func (i UserIdentityArgs) ToUserIdentityPtrOutput() UserIdentityPtrOutput {
	return i.ToUserIdentityPtrOutputWithContext(context.Background())
}

func (i UserIdentityArgs) ToUserIdentityPtrOutputWithContext(ctx context.Context) UserIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityOutput).ToUserIdentityPtrOutputWithContext(ctx)
}

// UserIdentityPtrInput is an input type that accepts UserIdentityArgs, UserIdentityPtr and UserIdentityPtrOutput values.
// You can construct a concrete instance of `UserIdentityPtrInput` via:
//
//          UserIdentityArgs{...}
//
//  or:
//
//          nil
type UserIdentityPtrInput interface {
	pulumi.Input

	ToUserIdentityPtrOutput() UserIdentityPtrOutput
	ToUserIdentityPtrOutputWithContext(context.Context) UserIdentityPtrOutput
}

type userIdentityPtrType UserIdentityArgs

func UserIdentityPtr(v *UserIdentityArgs) UserIdentityPtrInput {
	return (*userIdentityPtrType)(v)
}

func (*userIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserIdentity)(nil)).Elem()
}

func (i *userIdentityPtrType) ToUserIdentityPtrOutput() UserIdentityPtrOutput {
	return i.ToUserIdentityPtrOutputWithContext(context.Background())
}

func (i *userIdentityPtrType) ToUserIdentityPtrOutputWithContext(ctx context.Context) UserIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityPtrOutput)
}

// Identity attributes of a lab user.
type UserIdentityOutput struct{ *pulumi.OutputState }

func (UserIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentity)(nil)).Elem()
}

func (o UserIdentityOutput) ToUserIdentityOutput() UserIdentityOutput {
	return o
}

func (o UserIdentityOutput) ToUserIdentityOutputWithContext(ctx context.Context) UserIdentityOutput {
	return o
}

func (o UserIdentityOutput) ToUserIdentityPtrOutput() UserIdentityPtrOutput {
	return o.ToUserIdentityPtrOutputWithContext(context.Background())
}

func (o UserIdentityOutput) ToUserIdentityPtrOutputWithContext(ctx context.Context) UserIdentityPtrOutput {
	return o.ApplyT(func(v UserIdentity) *UserIdentity {
		return &v
	}).(UserIdentityPtrOutput)
}

// Set to the app Id of the client JWT making the request.
func (o UserIdentityOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentity) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.
func (o UserIdentityOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentity) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
func (o UserIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// Set to the principal name / UPN of the client JWT making the request.
func (o UserIdentityOutput) PrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentity) *string { return v.PrincipalName }).(pulumi.StringPtrOutput)
}

// Set to the tenant ID of the client JWT making the request.
func (o UserIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type UserIdentityPtrOutput struct{ *pulumi.OutputState }

func (UserIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserIdentity)(nil)).Elem()
}

func (o UserIdentityPtrOutput) ToUserIdentityPtrOutput() UserIdentityPtrOutput {
	return o
}

func (o UserIdentityPtrOutput) ToUserIdentityPtrOutputWithContext(ctx context.Context) UserIdentityPtrOutput {
	return o
}

func (o UserIdentityPtrOutput) Elem() UserIdentityOutput {
	return o.ApplyT(func(v *UserIdentity) UserIdentity { return *v }).(UserIdentityOutput)
}

// Set to the app Id of the client JWT making the request.
func (o UserIdentityPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentity) *string {
		if v == nil {
			return nil
		}
		return v.AppId
	}).(pulumi.StringPtrOutput)
}

// Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.
func (o UserIdentityPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentity) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
func (o UserIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Set to the principal name / UPN of the client JWT making the request.
func (o UserIdentityPtrOutput) PrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalName
	}).(pulumi.StringPtrOutput)
}

// Set to the tenant ID of the client JWT making the request.
func (o UserIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Identity attributes of a lab user.
type UserIdentityInvokeResponse struct {
	// Set to the app Id of the client JWT making the request.
	AppId *string `pulumi:"appId"`
	// Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.
	ObjectId *string `pulumi:"objectId"`
	// Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
	PrincipalId *string `pulumi:"principalId"`
	// Set to the principal name / UPN of the client JWT making the request.
	PrincipalName *string `pulumi:"principalName"`
	// Set to the tenant ID of the client JWT making the request.
	TenantId *string `pulumi:"tenantId"`
}

// UserIdentityInvokeResponseInput is an input type that accepts UserIdentityInvokeResponseArgs and UserIdentityInvokeResponseOutput values.
// You can construct a concrete instance of `UserIdentityInvokeResponseInput` via:
//
//          UserIdentityInvokeResponseArgs{...}
type UserIdentityInvokeResponseInput interface {
	pulumi.Input

	ToUserIdentityInvokeResponseOutput() UserIdentityInvokeResponseOutput
	ToUserIdentityInvokeResponseOutputWithContext(context.Context) UserIdentityInvokeResponseOutput
}

// Identity attributes of a lab user.
type UserIdentityInvokeResponseArgs struct {
	// Set to the app Id of the client JWT making the request.
	AppId pulumi.StringPtrInput `pulumi:"appId"`
	// Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// Set to the principal name / UPN of the client JWT making the request.
	PrincipalName pulumi.StringPtrInput `pulumi:"principalName"`
	// Set to the tenant ID of the client JWT making the request.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (UserIdentityInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityInvokeResponse)(nil)).Elem()
}

func (i UserIdentityInvokeResponseArgs) ToUserIdentityInvokeResponseOutput() UserIdentityInvokeResponseOutput {
	return i.ToUserIdentityInvokeResponseOutputWithContext(context.Background())
}

func (i UserIdentityInvokeResponseArgs) ToUserIdentityInvokeResponseOutputWithContext(ctx context.Context) UserIdentityInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityInvokeResponseOutput)
}

// Identity attributes of a lab user.
type UserIdentityInvokeResponseOutput struct{ *pulumi.OutputState }

func (UserIdentityInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityInvokeResponse)(nil)).Elem()
}

func (o UserIdentityInvokeResponseOutput) ToUserIdentityInvokeResponseOutput() UserIdentityInvokeResponseOutput {
	return o
}

func (o UserIdentityInvokeResponseOutput) ToUserIdentityInvokeResponseOutputWithContext(ctx context.Context) UserIdentityInvokeResponseOutput {
	return o
}

// Set to the app Id of the client JWT making the request.
func (o UserIdentityInvokeResponseOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInvokeResponse) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.
func (o UserIdentityInvokeResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInvokeResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
func (o UserIdentityInvokeResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInvokeResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// Set to the principal name / UPN of the client JWT making the request.
func (o UserIdentityInvokeResponseOutput) PrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInvokeResponse) *string { return v.PrincipalName }).(pulumi.StringPtrOutput)
}

// Set to the tenant ID of the client JWT making the request.
func (o UserIdentityInvokeResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInvokeResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Identity attributes of a lab user.
type UserIdentityResponse struct {
	// Set to the app Id of the client JWT making the request.
	AppId *string `pulumi:"appId"`
	// Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.
	ObjectId *string `pulumi:"objectId"`
	// Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
	PrincipalId *string `pulumi:"principalId"`
	// Set to the principal name / UPN of the client JWT making the request.
	PrincipalName *string `pulumi:"principalName"`
	// Set to the tenant ID of the client JWT making the request.
	TenantId *string `pulumi:"tenantId"`
}

// UserIdentityResponseInput is an input type that accepts UserIdentityResponseArgs and UserIdentityResponseOutput values.
// You can construct a concrete instance of `UserIdentityResponseInput` via:
//
//          UserIdentityResponseArgs{...}
type UserIdentityResponseInput interface {
	pulumi.Input

	ToUserIdentityResponseOutput() UserIdentityResponseOutput
	ToUserIdentityResponseOutputWithContext(context.Context) UserIdentityResponseOutput
}

// Identity attributes of a lab user.
type UserIdentityResponseArgs struct {
	// Set to the app Id of the client JWT making the request.
	AppId pulumi.StringPtrInput `pulumi:"appId"`
	// Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// Set to the principal name / UPN of the client JWT making the request.
	PrincipalName pulumi.StringPtrInput `pulumi:"principalName"`
	// Set to the tenant ID of the client JWT making the request.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (UserIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityResponse)(nil)).Elem()
}

func (i UserIdentityResponseArgs) ToUserIdentityResponseOutput() UserIdentityResponseOutput {
	return i.ToUserIdentityResponseOutputWithContext(context.Background())
}

func (i UserIdentityResponseArgs) ToUserIdentityResponseOutputWithContext(ctx context.Context) UserIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityResponseOutput)
}

func (i UserIdentityResponseArgs) ToUserIdentityResponsePtrOutput() UserIdentityResponsePtrOutput {
	return i.ToUserIdentityResponsePtrOutputWithContext(context.Background())
}

func (i UserIdentityResponseArgs) ToUserIdentityResponsePtrOutputWithContext(ctx context.Context) UserIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityResponseOutput).ToUserIdentityResponsePtrOutputWithContext(ctx)
}

// UserIdentityResponsePtrInput is an input type that accepts UserIdentityResponseArgs, UserIdentityResponsePtr and UserIdentityResponsePtrOutput values.
// You can construct a concrete instance of `UserIdentityResponsePtrInput` via:
//
//          UserIdentityResponseArgs{...}
//
//  or:
//
//          nil
type UserIdentityResponsePtrInput interface {
	pulumi.Input

	ToUserIdentityResponsePtrOutput() UserIdentityResponsePtrOutput
	ToUserIdentityResponsePtrOutputWithContext(context.Context) UserIdentityResponsePtrOutput
}

type userIdentityResponsePtrType UserIdentityResponseArgs

func UserIdentityResponsePtr(v *UserIdentityResponseArgs) UserIdentityResponsePtrInput {
	return (*userIdentityResponsePtrType)(v)
}

func (*userIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserIdentityResponse)(nil)).Elem()
}

func (i *userIdentityResponsePtrType) ToUserIdentityResponsePtrOutput() UserIdentityResponsePtrOutput {
	return i.ToUserIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *userIdentityResponsePtrType) ToUserIdentityResponsePtrOutputWithContext(ctx context.Context) UserIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityResponsePtrOutput)
}

// Identity attributes of a lab user.
type UserIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityResponse)(nil)).Elem()
}

func (o UserIdentityResponseOutput) ToUserIdentityResponseOutput() UserIdentityResponseOutput {
	return o
}

func (o UserIdentityResponseOutput) ToUserIdentityResponseOutputWithContext(ctx context.Context) UserIdentityResponseOutput {
	return o
}

func (o UserIdentityResponseOutput) ToUserIdentityResponsePtrOutput() UserIdentityResponsePtrOutput {
	return o.ToUserIdentityResponsePtrOutputWithContext(context.Background())
}

func (o UserIdentityResponseOutput) ToUserIdentityResponsePtrOutputWithContext(ctx context.Context) UserIdentityResponsePtrOutput {
	return o.ApplyT(func(v UserIdentityResponse) *UserIdentityResponse {
		return &v
	}).(UserIdentityResponsePtrOutput)
}

// Set to the app Id of the client JWT making the request.
func (o UserIdentityResponseOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityResponse) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.
func (o UserIdentityResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
func (o UserIdentityResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// Set to the principal name / UPN of the client JWT making the request.
func (o UserIdentityResponseOutput) PrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityResponse) *string { return v.PrincipalName }).(pulumi.StringPtrOutput)
}

// Set to the tenant ID of the client JWT making the request.
func (o UserIdentityResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type UserIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (UserIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserIdentityResponse)(nil)).Elem()
}

func (o UserIdentityResponsePtrOutput) ToUserIdentityResponsePtrOutput() UserIdentityResponsePtrOutput {
	return o
}

func (o UserIdentityResponsePtrOutput) ToUserIdentityResponsePtrOutputWithContext(ctx context.Context) UserIdentityResponsePtrOutput {
	return o
}

func (o UserIdentityResponsePtrOutput) Elem() UserIdentityResponseOutput {
	return o.ApplyT(func(v *UserIdentityResponse) UserIdentityResponse { return *v }).(UserIdentityResponseOutput)
}

// Set to the app Id of the client JWT making the request.
func (o UserIdentityResponsePtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppId
	}).(pulumi.StringPtrOutput)
}

// Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.
func (o UserIdentityResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
func (o UserIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Set to the principal name / UPN of the client JWT making the request.
func (o UserIdentityResponsePtrOutput) PrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalName
	}).(pulumi.StringPtrOutput)
}

// Set to the tenant ID of the client JWT making the request.
func (o UserIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Properties of a user's secret store.
type UserSecretStore struct {
	// The ID of the user's Key vault.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// The URI of the user's Key vault.
	KeyVaultUri *string `pulumi:"keyVaultUri"`
}

// UserSecretStoreInput is an input type that accepts UserSecretStoreArgs and UserSecretStoreOutput values.
// You can construct a concrete instance of `UserSecretStoreInput` via:
//
//          UserSecretStoreArgs{...}
type UserSecretStoreInput interface {
	pulumi.Input

	ToUserSecretStoreOutput() UserSecretStoreOutput
	ToUserSecretStoreOutputWithContext(context.Context) UserSecretStoreOutput
}

// Properties of a user's secret store.
type UserSecretStoreArgs struct {
	// The ID of the user's Key vault.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// The URI of the user's Key vault.
	KeyVaultUri pulumi.StringPtrInput `pulumi:"keyVaultUri"`
}

func (UserSecretStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSecretStore)(nil)).Elem()
}

func (i UserSecretStoreArgs) ToUserSecretStoreOutput() UserSecretStoreOutput {
	return i.ToUserSecretStoreOutputWithContext(context.Background())
}

func (i UserSecretStoreArgs) ToUserSecretStoreOutputWithContext(ctx context.Context) UserSecretStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSecretStoreOutput)
}

func (i UserSecretStoreArgs) ToUserSecretStorePtrOutput() UserSecretStorePtrOutput {
	return i.ToUserSecretStorePtrOutputWithContext(context.Background())
}

func (i UserSecretStoreArgs) ToUserSecretStorePtrOutputWithContext(ctx context.Context) UserSecretStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSecretStoreOutput).ToUserSecretStorePtrOutputWithContext(ctx)
}

// UserSecretStorePtrInput is an input type that accepts UserSecretStoreArgs, UserSecretStorePtr and UserSecretStorePtrOutput values.
// You can construct a concrete instance of `UserSecretStorePtrInput` via:
//
//          UserSecretStoreArgs{...}
//
//  or:
//
//          nil
type UserSecretStorePtrInput interface {
	pulumi.Input

	ToUserSecretStorePtrOutput() UserSecretStorePtrOutput
	ToUserSecretStorePtrOutputWithContext(context.Context) UserSecretStorePtrOutput
}

type userSecretStorePtrType UserSecretStoreArgs

func UserSecretStorePtr(v *UserSecretStoreArgs) UserSecretStorePtrInput {
	return (*userSecretStorePtrType)(v)
}

func (*userSecretStorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserSecretStore)(nil)).Elem()
}

func (i *userSecretStorePtrType) ToUserSecretStorePtrOutput() UserSecretStorePtrOutput {
	return i.ToUserSecretStorePtrOutputWithContext(context.Background())
}

func (i *userSecretStorePtrType) ToUserSecretStorePtrOutputWithContext(ctx context.Context) UserSecretStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSecretStorePtrOutput)
}

// Properties of a user's secret store.
type UserSecretStoreOutput struct{ *pulumi.OutputState }

func (UserSecretStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSecretStore)(nil)).Elem()
}

func (o UserSecretStoreOutput) ToUserSecretStoreOutput() UserSecretStoreOutput {
	return o
}

func (o UserSecretStoreOutput) ToUserSecretStoreOutputWithContext(ctx context.Context) UserSecretStoreOutput {
	return o
}

func (o UserSecretStoreOutput) ToUserSecretStorePtrOutput() UserSecretStorePtrOutput {
	return o.ToUserSecretStorePtrOutputWithContext(context.Background())
}

func (o UserSecretStoreOutput) ToUserSecretStorePtrOutputWithContext(ctx context.Context) UserSecretStorePtrOutput {
	return o.ApplyT(func(v UserSecretStore) *UserSecretStore {
		return &v
	}).(UserSecretStorePtrOutput)
}

// The ID of the user's Key vault.
func (o UserSecretStoreOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserSecretStore) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// The URI of the user's Key vault.
func (o UserSecretStoreOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserSecretStore) *string { return v.KeyVaultUri }).(pulumi.StringPtrOutput)
}

type UserSecretStorePtrOutput struct{ *pulumi.OutputState }

func (UserSecretStorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserSecretStore)(nil)).Elem()
}

func (o UserSecretStorePtrOutput) ToUserSecretStorePtrOutput() UserSecretStorePtrOutput {
	return o
}

func (o UserSecretStorePtrOutput) ToUserSecretStorePtrOutputWithContext(ctx context.Context) UserSecretStorePtrOutput {
	return o
}

func (o UserSecretStorePtrOutput) Elem() UserSecretStoreOutput {
	return o.ApplyT(func(v *UserSecretStore) UserSecretStore { return *v }).(UserSecretStoreOutput)
}

// The ID of the user's Key vault.
func (o UserSecretStorePtrOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserSecretStore) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultId
	}).(pulumi.StringPtrOutput)
}

// The URI of the user's Key vault.
func (o UserSecretStorePtrOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserSecretStore) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultUri
	}).(pulumi.StringPtrOutput)
}

// Properties of a user's secret store.
type UserSecretStoreInvokeResponse struct {
	// The ID of the user's Key vault.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// The URI of the user's Key vault.
	KeyVaultUri *string `pulumi:"keyVaultUri"`
}

// UserSecretStoreInvokeResponseInput is an input type that accepts UserSecretStoreInvokeResponseArgs and UserSecretStoreInvokeResponseOutput values.
// You can construct a concrete instance of `UserSecretStoreInvokeResponseInput` via:
//
//          UserSecretStoreInvokeResponseArgs{...}
type UserSecretStoreInvokeResponseInput interface {
	pulumi.Input

	ToUserSecretStoreInvokeResponseOutput() UserSecretStoreInvokeResponseOutput
	ToUserSecretStoreInvokeResponseOutputWithContext(context.Context) UserSecretStoreInvokeResponseOutput
}

// Properties of a user's secret store.
type UserSecretStoreInvokeResponseArgs struct {
	// The ID of the user's Key vault.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// The URI of the user's Key vault.
	KeyVaultUri pulumi.StringPtrInput `pulumi:"keyVaultUri"`
}

func (UserSecretStoreInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSecretStoreInvokeResponse)(nil)).Elem()
}

func (i UserSecretStoreInvokeResponseArgs) ToUserSecretStoreInvokeResponseOutput() UserSecretStoreInvokeResponseOutput {
	return i.ToUserSecretStoreInvokeResponseOutputWithContext(context.Background())
}

func (i UserSecretStoreInvokeResponseArgs) ToUserSecretStoreInvokeResponseOutputWithContext(ctx context.Context) UserSecretStoreInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSecretStoreInvokeResponseOutput)
}

// Properties of a user's secret store.
type UserSecretStoreInvokeResponseOutput struct{ *pulumi.OutputState }

func (UserSecretStoreInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSecretStoreInvokeResponse)(nil)).Elem()
}

func (o UserSecretStoreInvokeResponseOutput) ToUserSecretStoreInvokeResponseOutput() UserSecretStoreInvokeResponseOutput {
	return o
}

func (o UserSecretStoreInvokeResponseOutput) ToUserSecretStoreInvokeResponseOutputWithContext(ctx context.Context) UserSecretStoreInvokeResponseOutput {
	return o
}

// The ID of the user's Key vault.
func (o UserSecretStoreInvokeResponseOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserSecretStoreInvokeResponse) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// The URI of the user's Key vault.
func (o UserSecretStoreInvokeResponseOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserSecretStoreInvokeResponse) *string { return v.KeyVaultUri }).(pulumi.StringPtrOutput)
}

// Properties of a user's secret store.
type UserSecretStoreResponse struct {
	// The ID of the user's Key vault.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// The URI of the user's Key vault.
	KeyVaultUri *string `pulumi:"keyVaultUri"`
}

// UserSecretStoreResponseInput is an input type that accepts UserSecretStoreResponseArgs and UserSecretStoreResponseOutput values.
// You can construct a concrete instance of `UserSecretStoreResponseInput` via:
//
//          UserSecretStoreResponseArgs{...}
type UserSecretStoreResponseInput interface {
	pulumi.Input

	ToUserSecretStoreResponseOutput() UserSecretStoreResponseOutput
	ToUserSecretStoreResponseOutputWithContext(context.Context) UserSecretStoreResponseOutput
}

// Properties of a user's secret store.
type UserSecretStoreResponseArgs struct {
	// The ID of the user's Key vault.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// The URI of the user's Key vault.
	KeyVaultUri pulumi.StringPtrInput `pulumi:"keyVaultUri"`
}

func (UserSecretStoreResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSecretStoreResponse)(nil)).Elem()
}

func (i UserSecretStoreResponseArgs) ToUserSecretStoreResponseOutput() UserSecretStoreResponseOutput {
	return i.ToUserSecretStoreResponseOutputWithContext(context.Background())
}

func (i UserSecretStoreResponseArgs) ToUserSecretStoreResponseOutputWithContext(ctx context.Context) UserSecretStoreResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSecretStoreResponseOutput)
}

func (i UserSecretStoreResponseArgs) ToUserSecretStoreResponsePtrOutput() UserSecretStoreResponsePtrOutput {
	return i.ToUserSecretStoreResponsePtrOutputWithContext(context.Background())
}

func (i UserSecretStoreResponseArgs) ToUserSecretStoreResponsePtrOutputWithContext(ctx context.Context) UserSecretStoreResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSecretStoreResponseOutput).ToUserSecretStoreResponsePtrOutputWithContext(ctx)
}

// UserSecretStoreResponsePtrInput is an input type that accepts UserSecretStoreResponseArgs, UserSecretStoreResponsePtr and UserSecretStoreResponsePtrOutput values.
// You can construct a concrete instance of `UserSecretStoreResponsePtrInput` via:
//
//          UserSecretStoreResponseArgs{...}
//
//  or:
//
//          nil
type UserSecretStoreResponsePtrInput interface {
	pulumi.Input

	ToUserSecretStoreResponsePtrOutput() UserSecretStoreResponsePtrOutput
	ToUserSecretStoreResponsePtrOutputWithContext(context.Context) UserSecretStoreResponsePtrOutput
}

type userSecretStoreResponsePtrType UserSecretStoreResponseArgs

func UserSecretStoreResponsePtr(v *UserSecretStoreResponseArgs) UserSecretStoreResponsePtrInput {
	return (*userSecretStoreResponsePtrType)(v)
}

func (*userSecretStoreResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserSecretStoreResponse)(nil)).Elem()
}

func (i *userSecretStoreResponsePtrType) ToUserSecretStoreResponsePtrOutput() UserSecretStoreResponsePtrOutput {
	return i.ToUserSecretStoreResponsePtrOutputWithContext(context.Background())
}

func (i *userSecretStoreResponsePtrType) ToUserSecretStoreResponsePtrOutputWithContext(ctx context.Context) UserSecretStoreResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSecretStoreResponsePtrOutput)
}

// Properties of a user's secret store.
type UserSecretStoreResponseOutput struct{ *pulumi.OutputState }

func (UserSecretStoreResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSecretStoreResponse)(nil)).Elem()
}

func (o UserSecretStoreResponseOutput) ToUserSecretStoreResponseOutput() UserSecretStoreResponseOutput {
	return o
}

func (o UserSecretStoreResponseOutput) ToUserSecretStoreResponseOutputWithContext(ctx context.Context) UserSecretStoreResponseOutput {
	return o
}

func (o UserSecretStoreResponseOutput) ToUserSecretStoreResponsePtrOutput() UserSecretStoreResponsePtrOutput {
	return o.ToUserSecretStoreResponsePtrOutputWithContext(context.Background())
}

func (o UserSecretStoreResponseOutput) ToUserSecretStoreResponsePtrOutputWithContext(ctx context.Context) UserSecretStoreResponsePtrOutput {
	return o.ApplyT(func(v UserSecretStoreResponse) *UserSecretStoreResponse {
		return &v
	}).(UserSecretStoreResponsePtrOutput)
}

// The ID of the user's Key vault.
func (o UserSecretStoreResponseOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserSecretStoreResponse) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// The URI of the user's Key vault.
func (o UserSecretStoreResponseOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserSecretStoreResponse) *string { return v.KeyVaultUri }).(pulumi.StringPtrOutput)
}

type UserSecretStoreResponsePtrOutput struct{ *pulumi.OutputState }

func (UserSecretStoreResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserSecretStoreResponse)(nil)).Elem()
}

func (o UserSecretStoreResponsePtrOutput) ToUserSecretStoreResponsePtrOutput() UserSecretStoreResponsePtrOutput {
	return o
}

func (o UserSecretStoreResponsePtrOutput) ToUserSecretStoreResponsePtrOutputWithContext(ctx context.Context) UserSecretStoreResponsePtrOutput {
	return o
}

func (o UserSecretStoreResponsePtrOutput) Elem() UserSecretStoreResponseOutput {
	return o.ApplyT(func(v *UserSecretStoreResponse) UserSecretStoreResponse { return *v }).(UserSecretStoreResponseOutput)
}

// The ID of the user's Key vault.
func (o UserSecretStoreResponsePtrOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserSecretStoreResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultId
	}).(pulumi.StringPtrOutput)
}

// The URI of the user's Key vault.
func (o UserSecretStoreResponsePtrOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserSecretStoreResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultUri
	}).(pulumi.StringPtrOutput)
}

// Properties of a weekly schedule.
type WeekDetails struct {
	// The time of the day the schedule will occur.
	Time *string `pulumi:"time"`
	// The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
	Weekdays []string `pulumi:"weekdays"`
}

// WeekDetailsInput is an input type that accepts WeekDetailsArgs and WeekDetailsOutput values.
// You can construct a concrete instance of `WeekDetailsInput` via:
//
//          WeekDetailsArgs{...}
type WeekDetailsInput interface {
	pulumi.Input

	ToWeekDetailsOutput() WeekDetailsOutput
	ToWeekDetailsOutputWithContext(context.Context) WeekDetailsOutput
}

// Properties of a weekly schedule.
type WeekDetailsArgs struct {
	// The time of the day the schedule will occur.
	Time pulumi.StringPtrInput `pulumi:"time"`
	// The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
	Weekdays pulumi.StringArrayInput `pulumi:"weekdays"`
}

func (WeekDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekDetails)(nil)).Elem()
}

func (i WeekDetailsArgs) ToWeekDetailsOutput() WeekDetailsOutput {
	return i.ToWeekDetailsOutputWithContext(context.Background())
}

func (i WeekDetailsArgs) ToWeekDetailsOutputWithContext(ctx context.Context) WeekDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeekDetailsOutput)
}

func (i WeekDetailsArgs) ToWeekDetailsPtrOutput() WeekDetailsPtrOutput {
	return i.ToWeekDetailsPtrOutputWithContext(context.Background())
}

func (i WeekDetailsArgs) ToWeekDetailsPtrOutputWithContext(ctx context.Context) WeekDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeekDetailsOutput).ToWeekDetailsPtrOutputWithContext(ctx)
}

// WeekDetailsPtrInput is an input type that accepts WeekDetailsArgs, WeekDetailsPtr and WeekDetailsPtrOutput values.
// You can construct a concrete instance of `WeekDetailsPtrInput` via:
//
//          WeekDetailsArgs{...}
//
//  or:
//
//          nil
type WeekDetailsPtrInput interface {
	pulumi.Input

	ToWeekDetailsPtrOutput() WeekDetailsPtrOutput
	ToWeekDetailsPtrOutputWithContext(context.Context) WeekDetailsPtrOutput
}

type weekDetailsPtrType WeekDetailsArgs

func WeekDetailsPtr(v *WeekDetailsArgs) WeekDetailsPtrInput {
	return (*weekDetailsPtrType)(v)
}

func (*weekDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WeekDetails)(nil)).Elem()
}

func (i *weekDetailsPtrType) ToWeekDetailsPtrOutput() WeekDetailsPtrOutput {
	return i.ToWeekDetailsPtrOutputWithContext(context.Background())
}

func (i *weekDetailsPtrType) ToWeekDetailsPtrOutputWithContext(ctx context.Context) WeekDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeekDetailsPtrOutput)
}

// Properties of a weekly schedule.
type WeekDetailsOutput struct{ *pulumi.OutputState }

func (WeekDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekDetails)(nil)).Elem()
}

func (o WeekDetailsOutput) ToWeekDetailsOutput() WeekDetailsOutput {
	return o
}

func (o WeekDetailsOutput) ToWeekDetailsOutputWithContext(ctx context.Context) WeekDetailsOutput {
	return o
}

func (o WeekDetailsOutput) ToWeekDetailsPtrOutput() WeekDetailsPtrOutput {
	return o.ToWeekDetailsPtrOutputWithContext(context.Background())
}

func (o WeekDetailsOutput) ToWeekDetailsPtrOutputWithContext(ctx context.Context) WeekDetailsPtrOutput {
	return o.ApplyT(func(v WeekDetails) *WeekDetails {
		return &v
	}).(WeekDetailsPtrOutput)
}

// The time of the day the schedule will occur.
func (o WeekDetailsOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WeekDetails) *string { return v.Time }).(pulumi.StringPtrOutput)
}

// The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
func (o WeekDetailsOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeekDetails) []string { return v.Weekdays }).(pulumi.StringArrayOutput)
}

type WeekDetailsPtrOutput struct{ *pulumi.OutputState }

func (WeekDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeekDetails)(nil)).Elem()
}

func (o WeekDetailsPtrOutput) ToWeekDetailsPtrOutput() WeekDetailsPtrOutput {
	return o
}

func (o WeekDetailsPtrOutput) ToWeekDetailsPtrOutputWithContext(ctx context.Context) WeekDetailsPtrOutput {
	return o
}

func (o WeekDetailsPtrOutput) Elem() WeekDetailsOutput {
	return o.ApplyT(func(v *WeekDetails) WeekDetails { return *v }).(WeekDetailsOutput)
}

// The time of the day the schedule will occur.
func (o WeekDetailsPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WeekDetails) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
func (o WeekDetailsPtrOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeekDetails) []string {
		if v == nil {
			return nil
		}
		return v.Weekdays
	}).(pulumi.StringArrayOutput)
}

// Properties of a weekly schedule.
type WeekDetailsInvokeResponse struct {
	// The time of the day the schedule will occur.
	Time *string `pulumi:"time"`
	// The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
	Weekdays []string `pulumi:"weekdays"`
}

// WeekDetailsInvokeResponseInput is an input type that accepts WeekDetailsInvokeResponseArgs and WeekDetailsInvokeResponseOutput values.
// You can construct a concrete instance of `WeekDetailsInvokeResponseInput` via:
//
//          WeekDetailsInvokeResponseArgs{...}
type WeekDetailsInvokeResponseInput interface {
	pulumi.Input

	ToWeekDetailsInvokeResponseOutput() WeekDetailsInvokeResponseOutput
	ToWeekDetailsInvokeResponseOutputWithContext(context.Context) WeekDetailsInvokeResponseOutput
}

// Properties of a weekly schedule.
type WeekDetailsInvokeResponseArgs struct {
	// The time of the day the schedule will occur.
	Time pulumi.StringPtrInput `pulumi:"time"`
	// The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
	Weekdays pulumi.StringArrayInput `pulumi:"weekdays"`
}

func (WeekDetailsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekDetailsInvokeResponse)(nil)).Elem()
}

func (i WeekDetailsInvokeResponseArgs) ToWeekDetailsInvokeResponseOutput() WeekDetailsInvokeResponseOutput {
	return i.ToWeekDetailsInvokeResponseOutputWithContext(context.Background())
}

func (i WeekDetailsInvokeResponseArgs) ToWeekDetailsInvokeResponseOutputWithContext(ctx context.Context) WeekDetailsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeekDetailsInvokeResponseOutput)
}

func (i WeekDetailsInvokeResponseArgs) ToWeekDetailsInvokeResponsePtrOutput() WeekDetailsInvokeResponsePtrOutput {
	return i.ToWeekDetailsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i WeekDetailsInvokeResponseArgs) ToWeekDetailsInvokeResponsePtrOutputWithContext(ctx context.Context) WeekDetailsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeekDetailsInvokeResponseOutput).ToWeekDetailsInvokeResponsePtrOutputWithContext(ctx)
}

// WeekDetailsInvokeResponsePtrInput is an input type that accepts WeekDetailsInvokeResponseArgs, WeekDetailsInvokeResponsePtr and WeekDetailsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `WeekDetailsInvokeResponsePtrInput` via:
//
//          WeekDetailsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type WeekDetailsInvokeResponsePtrInput interface {
	pulumi.Input

	ToWeekDetailsInvokeResponsePtrOutput() WeekDetailsInvokeResponsePtrOutput
	ToWeekDetailsInvokeResponsePtrOutputWithContext(context.Context) WeekDetailsInvokeResponsePtrOutput
}

type weekDetailsInvokeResponsePtrType WeekDetailsInvokeResponseArgs

func WeekDetailsInvokeResponsePtr(v *WeekDetailsInvokeResponseArgs) WeekDetailsInvokeResponsePtrInput {
	return (*weekDetailsInvokeResponsePtrType)(v)
}

func (*weekDetailsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WeekDetailsInvokeResponse)(nil)).Elem()
}

func (i *weekDetailsInvokeResponsePtrType) ToWeekDetailsInvokeResponsePtrOutput() WeekDetailsInvokeResponsePtrOutput {
	return i.ToWeekDetailsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *weekDetailsInvokeResponsePtrType) ToWeekDetailsInvokeResponsePtrOutputWithContext(ctx context.Context) WeekDetailsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeekDetailsInvokeResponsePtrOutput)
}

// Properties of a weekly schedule.
type WeekDetailsInvokeResponseOutput struct{ *pulumi.OutputState }

func (WeekDetailsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekDetailsInvokeResponse)(nil)).Elem()
}

func (o WeekDetailsInvokeResponseOutput) ToWeekDetailsInvokeResponseOutput() WeekDetailsInvokeResponseOutput {
	return o
}

func (o WeekDetailsInvokeResponseOutput) ToWeekDetailsInvokeResponseOutputWithContext(ctx context.Context) WeekDetailsInvokeResponseOutput {
	return o
}

func (o WeekDetailsInvokeResponseOutput) ToWeekDetailsInvokeResponsePtrOutput() WeekDetailsInvokeResponsePtrOutput {
	return o.ToWeekDetailsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o WeekDetailsInvokeResponseOutput) ToWeekDetailsInvokeResponsePtrOutputWithContext(ctx context.Context) WeekDetailsInvokeResponsePtrOutput {
	return o.ApplyT(func(v WeekDetailsInvokeResponse) *WeekDetailsInvokeResponse {
		return &v
	}).(WeekDetailsInvokeResponsePtrOutput)
}

// The time of the day the schedule will occur.
func (o WeekDetailsInvokeResponseOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WeekDetailsInvokeResponse) *string { return v.Time }).(pulumi.StringPtrOutput)
}

// The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
func (o WeekDetailsInvokeResponseOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeekDetailsInvokeResponse) []string { return v.Weekdays }).(pulumi.StringArrayOutput)
}

type WeekDetailsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (WeekDetailsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeekDetailsInvokeResponse)(nil)).Elem()
}

func (o WeekDetailsInvokeResponsePtrOutput) ToWeekDetailsInvokeResponsePtrOutput() WeekDetailsInvokeResponsePtrOutput {
	return o
}

func (o WeekDetailsInvokeResponsePtrOutput) ToWeekDetailsInvokeResponsePtrOutputWithContext(ctx context.Context) WeekDetailsInvokeResponsePtrOutput {
	return o
}

func (o WeekDetailsInvokeResponsePtrOutput) Elem() WeekDetailsInvokeResponseOutput {
	return o.ApplyT(func(v *WeekDetailsInvokeResponse) WeekDetailsInvokeResponse { return *v }).(WeekDetailsInvokeResponseOutput)
}

// The time of the day the schedule will occur.
func (o WeekDetailsInvokeResponsePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WeekDetailsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
func (o WeekDetailsInvokeResponsePtrOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeekDetailsInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.Weekdays
	}).(pulumi.StringArrayOutput)
}

// Properties of a weekly schedule.
type WeekDetailsResponse struct {
	// The time of the day the schedule will occur.
	Time *string `pulumi:"time"`
	// The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
	Weekdays []string `pulumi:"weekdays"`
}

// WeekDetailsResponseInput is an input type that accepts WeekDetailsResponseArgs and WeekDetailsResponseOutput values.
// You can construct a concrete instance of `WeekDetailsResponseInput` via:
//
//          WeekDetailsResponseArgs{...}
type WeekDetailsResponseInput interface {
	pulumi.Input

	ToWeekDetailsResponseOutput() WeekDetailsResponseOutput
	ToWeekDetailsResponseOutputWithContext(context.Context) WeekDetailsResponseOutput
}

// Properties of a weekly schedule.
type WeekDetailsResponseArgs struct {
	// The time of the day the schedule will occur.
	Time pulumi.StringPtrInput `pulumi:"time"`
	// The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
	Weekdays pulumi.StringArrayInput `pulumi:"weekdays"`
}

func (WeekDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekDetailsResponse)(nil)).Elem()
}

func (i WeekDetailsResponseArgs) ToWeekDetailsResponseOutput() WeekDetailsResponseOutput {
	return i.ToWeekDetailsResponseOutputWithContext(context.Background())
}

func (i WeekDetailsResponseArgs) ToWeekDetailsResponseOutputWithContext(ctx context.Context) WeekDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeekDetailsResponseOutput)
}

func (i WeekDetailsResponseArgs) ToWeekDetailsResponsePtrOutput() WeekDetailsResponsePtrOutput {
	return i.ToWeekDetailsResponsePtrOutputWithContext(context.Background())
}

func (i WeekDetailsResponseArgs) ToWeekDetailsResponsePtrOutputWithContext(ctx context.Context) WeekDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeekDetailsResponseOutput).ToWeekDetailsResponsePtrOutputWithContext(ctx)
}

// WeekDetailsResponsePtrInput is an input type that accepts WeekDetailsResponseArgs, WeekDetailsResponsePtr and WeekDetailsResponsePtrOutput values.
// You can construct a concrete instance of `WeekDetailsResponsePtrInput` via:
//
//          WeekDetailsResponseArgs{...}
//
//  or:
//
//          nil
type WeekDetailsResponsePtrInput interface {
	pulumi.Input

	ToWeekDetailsResponsePtrOutput() WeekDetailsResponsePtrOutput
	ToWeekDetailsResponsePtrOutputWithContext(context.Context) WeekDetailsResponsePtrOutput
}

type weekDetailsResponsePtrType WeekDetailsResponseArgs

func WeekDetailsResponsePtr(v *WeekDetailsResponseArgs) WeekDetailsResponsePtrInput {
	return (*weekDetailsResponsePtrType)(v)
}

func (*weekDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WeekDetailsResponse)(nil)).Elem()
}

func (i *weekDetailsResponsePtrType) ToWeekDetailsResponsePtrOutput() WeekDetailsResponsePtrOutput {
	return i.ToWeekDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *weekDetailsResponsePtrType) ToWeekDetailsResponsePtrOutputWithContext(ctx context.Context) WeekDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeekDetailsResponsePtrOutput)
}

// Properties of a weekly schedule.
type WeekDetailsResponseOutput struct{ *pulumi.OutputState }

func (WeekDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekDetailsResponse)(nil)).Elem()
}

func (o WeekDetailsResponseOutput) ToWeekDetailsResponseOutput() WeekDetailsResponseOutput {
	return o
}

func (o WeekDetailsResponseOutput) ToWeekDetailsResponseOutputWithContext(ctx context.Context) WeekDetailsResponseOutput {
	return o
}

func (o WeekDetailsResponseOutput) ToWeekDetailsResponsePtrOutput() WeekDetailsResponsePtrOutput {
	return o.ToWeekDetailsResponsePtrOutputWithContext(context.Background())
}

func (o WeekDetailsResponseOutput) ToWeekDetailsResponsePtrOutputWithContext(ctx context.Context) WeekDetailsResponsePtrOutput {
	return o.ApplyT(func(v WeekDetailsResponse) *WeekDetailsResponse {
		return &v
	}).(WeekDetailsResponsePtrOutput)
}

// The time of the day the schedule will occur.
func (o WeekDetailsResponseOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WeekDetailsResponse) *string { return v.Time }).(pulumi.StringPtrOutput)
}

// The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
func (o WeekDetailsResponseOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeekDetailsResponse) []string { return v.Weekdays }).(pulumi.StringArrayOutput)
}

type WeekDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (WeekDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeekDetailsResponse)(nil)).Elem()
}

func (o WeekDetailsResponsePtrOutput) ToWeekDetailsResponsePtrOutput() WeekDetailsResponsePtrOutput {
	return o
}

func (o WeekDetailsResponsePtrOutput) ToWeekDetailsResponsePtrOutputWithContext(ctx context.Context) WeekDetailsResponsePtrOutput {
	return o
}

func (o WeekDetailsResponsePtrOutput) Elem() WeekDetailsResponseOutput {
	return o.ApplyT(func(v *WeekDetailsResponse) WeekDetailsResponse { return *v }).(WeekDetailsResponseOutput)
}

// The time of the day the schedule will occur.
func (o WeekDetailsResponsePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WeekDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
func (o WeekDetailsResponsePtrOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeekDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.Weekdays
	}).(pulumi.StringArrayOutput)
}

// Information about a Windows OS.
type WindowsOsInfo struct {
	// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
	WindowsOsState *string `pulumi:"windowsOsState"`
}

// WindowsOsInfoInput is an input type that accepts WindowsOsInfoArgs and WindowsOsInfoOutput values.
// You can construct a concrete instance of `WindowsOsInfoInput` via:
//
//          WindowsOsInfoArgs{...}
type WindowsOsInfoInput interface {
	pulumi.Input

	ToWindowsOsInfoOutput() WindowsOsInfoOutput
	ToWindowsOsInfoOutputWithContext(context.Context) WindowsOsInfoOutput
}

// Information about a Windows OS.
type WindowsOsInfoArgs struct {
	// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
	WindowsOsState pulumi.StringPtrInput `pulumi:"windowsOsState"`
}

func (WindowsOsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsOsInfo)(nil)).Elem()
}

func (i WindowsOsInfoArgs) ToWindowsOsInfoOutput() WindowsOsInfoOutput {
	return i.ToWindowsOsInfoOutputWithContext(context.Background())
}

func (i WindowsOsInfoArgs) ToWindowsOsInfoOutputWithContext(ctx context.Context) WindowsOsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsOsInfoOutput)
}

func (i WindowsOsInfoArgs) ToWindowsOsInfoPtrOutput() WindowsOsInfoPtrOutput {
	return i.ToWindowsOsInfoPtrOutputWithContext(context.Background())
}

func (i WindowsOsInfoArgs) ToWindowsOsInfoPtrOutputWithContext(ctx context.Context) WindowsOsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsOsInfoOutput).ToWindowsOsInfoPtrOutputWithContext(ctx)
}

// WindowsOsInfoPtrInput is an input type that accepts WindowsOsInfoArgs, WindowsOsInfoPtr and WindowsOsInfoPtrOutput values.
// You can construct a concrete instance of `WindowsOsInfoPtrInput` via:
//
//          WindowsOsInfoArgs{...}
//
//  or:
//
//          nil
type WindowsOsInfoPtrInput interface {
	pulumi.Input

	ToWindowsOsInfoPtrOutput() WindowsOsInfoPtrOutput
	ToWindowsOsInfoPtrOutputWithContext(context.Context) WindowsOsInfoPtrOutput
}

type windowsOsInfoPtrType WindowsOsInfoArgs

func WindowsOsInfoPtr(v *WindowsOsInfoArgs) WindowsOsInfoPtrInput {
	return (*windowsOsInfoPtrType)(v)
}

func (*windowsOsInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsOsInfo)(nil)).Elem()
}

func (i *windowsOsInfoPtrType) ToWindowsOsInfoPtrOutput() WindowsOsInfoPtrOutput {
	return i.ToWindowsOsInfoPtrOutputWithContext(context.Background())
}

func (i *windowsOsInfoPtrType) ToWindowsOsInfoPtrOutputWithContext(ctx context.Context) WindowsOsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsOsInfoPtrOutput)
}

// Information about a Windows OS.
type WindowsOsInfoOutput struct{ *pulumi.OutputState }

func (WindowsOsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsOsInfo)(nil)).Elem()
}

func (o WindowsOsInfoOutput) ToWindowsOsInfoOutput() WindowsOsInfoOutput {
	return o
}

func (o WindowsOsInfoOutput) ToWindowsOsInfoOutputWithContext(ctx context.Context) WindowsOsInfoOutput {
	return o
}

func (o WindowsOsInfoOutput) ToWindowsOsInfoPtrOutput() WindowsOsInfoPtrOutput {
	return o.ToWindowsOsInfoPtrOutputWithContext(context.Background())
}

func (o WindowsOsInfoOutput) ToWindowsOsInfoPtrOutputWithContext(ctx context.Context) WindowsOsInfoPtrOutput {
	return o.ApplyT(func(v WindowsOsInfo) *WindowsOsInfo {
		return &v
	}).(WindowsOsInfoPtrOutput)
}

// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
func (o WindowsOsInfoOutput) WindowsOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsOsInfo) *string { return v.WindowsOsState }).(pulumi.StringPtrOutput)
}

type WindowsOsInfoPtrOutput struct{ *pulumi.OutputState }

func (WindowsOsInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsOsInfo)(nil)).Elem()
}

func (o WindowsOsInfoPtrOutput) ToWindowsOsInfoPtrOutput() WindowsOsInfoPtrOutput {
	return o
}

func (o WindowsOsInfoPtrOutput) ToWindowsOsInfoPtrOutputWithContext(ctx context.Context) WindowsOsInfoPtrOutput {
	return o
}

func (o WindowsOsInfoPtrOutput) Elem() WindowsOsInfoOutput {
	return o.ApplyT(func(v *WindowsOsInfo) WindowsOsInfo { return *v }).(WindowsOsInfoOutput)
}

// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
func (o WindowsOsInfoPtrOutput) WindowsOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsOsInfo) *string {
		if v == nil {
			return nil
		}
		return v.WindowsOsState
	}).(pulumi.StringPtrOutput)
}

// Information about a Windows OS.
type WindowsOsInfoInvokeResponse struct {
	// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
	WindowsOsState *string `pulumi:"windowsOsState"`
}

// WindowsOsInfoInvokeResponseInput is an input type that accepts WindowsOsInfoInvokeResponseArgs and WindowsOsInfoInvokeResponseOutput values.
// You can construct a concrete instance of `WindowsOsInfoInvokeResponseInput` via:
//
//          WindowsOsInfoInvokeResponseArgs{...}
type WindowsOsInfoInvokeResponseInput interface {
	pulumi.Input

	ToWindowsOsInfoInvokeResponseOutput() WindowsOsInfoInvokeResponseOutput
	ToWindowsOsInfoInvokeResponseOutputWithContext(context.Context) WindowsOsInfoInvokeResponseOutput
}

// Information about a Windows OS.
type WindowsOsInfoInvokeResponseArgs struct {
	// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
	WindowsOsState pulumi.StringPtrInput `pulumi:"windowsOsState"`
}

func (WindowsOsInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsOsInfoInvokeResponse)(nil)).Elem()
}

func (i WindowsOsInfoInvokeResponseArgs) ToWindowsOsInfoInvokeResponseOutput() WindowsOsInfoInvokeResponseOutput {
	return i.ToWindowsOsInfoInvokeResponseOutputWithContext(context.Background())
}

func (i WindowsOsInfoInvokeResponseArgs) ToWindowsOsInfoInvokeResponseOutputWithContext(ctx context.Context) WindowsOsInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsOsInfoInvokeResponseOutput)
}

func (i WindowsOsInfoInvokeResponseArgs) ToWindowsOsInfoInvokeResponsePtrOutput() WindowsOsInfoInvokeResponsePtrOutput {
	return i.ToWindowsOsInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i WindowsOsInfoInvokeResponseArgs) ToWindowsOsInfoInvokeResponsePtrOutputWithContext(ctx context.Context) WindowsOsInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsOsInfoInvokeResponseOutput).ToWindowsOsInfoInvokeResponsePtrOutputWithContext(ctx)
}

// WindowsOsInfoInvokeResponsePtrInput is an input type that accepts WindowsOsInfoInvokeResponseArgs, WindowsOsInfoInvokeResponsePtr and WindowsOsInfoInvokeResponsePtrOutput values.
// You can construct a concrete instance of `WindowsOsInfoInvokeResponsePtrInput` via:
//
//          WindowsOsInfoInvokeResponseArgs{...}
//
//  or:
//
//          nil
type WindowsOsInfoInvokeResponsePtrInput interface {
	pulumi.Input

	ToWindowsOsInfoInvokeResponsePtrOutput() WindowsOsInfoInvokeResponsePtrOutput
	ToWindowsOsInfoInvokeResponsePtrOutputWithContext(context.Context) WindowsOsInfoInvokeResponsePtrOutput
}

type windowsOsInfoInvokeResponsePtrType WindowsOsInfoInvokeResponseArgs

func WindowsOsInfoInvokeResponsePtr(v *WindowsOsInfoInvokeResponseArgs) WindowsOsInfoInvokeResponsePtrInput {
	return (*windowsOsInfoInvokeResponsePtrType)(v)
}

func (*windowsOsInfoInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsOsInfoInvokeResponse)(nil)).Elem()
}

func (i *windowsOsInfoInvokeResponsePtrType) ToWindowsOsInfoInvokeResponsePtrOutput() WindowsOsInfoInvokeResponsePtrOutput {
	return i.ToWindowsOsInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *windowsOsInfoInvokeResponsePtrType) ToWindowsOsInfoInvokeResponsePtrOutputWithContext(ctx context.Context) WindowsOsInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsOsInfoInvokeResponsePtrOutput)
}

// Information about a Windows OS.
type WindowsOsInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (WindowsOsInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsOsInfoInvokeResponse)(nil)).Elem()
}

func (o WindowsOsInfoInvokeResponseOutput) ToWindowsOsInfoInvokeResponseOutput() WindowsOsInfoInvokeResponseOutput {
	return o
}

func (o WindowsOsInfoInvokeResponseOutput) ToWindowsOsInfoInvokeResponseOutputWithContext(ctx context.Context) WindowsOsInfoInvokeResponseOutput {
	return o
}

func (o WindowsOsInfoInvokeResponseOutput) ToWindowsOsInfoInvokeResponsePtrOutput() WindowsOsInfoInvokeResponsePtrOutput {
	return o.ToWindowsOsInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (o WindowsOsInfoInvokeResponseOutput) ToWindowsOsInfoInvokeResponsePtrOutputWithContext(ctx context.Context) WindowsOsInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v WindowsOsInfoInvokeResponse) *WindowsOsInfoInvokeResponse {
		return &v
	}).(WindowsOsInfoInvokeResponsePtrOutput)
}

// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
func (o WindowsOsInfoInvokeResponseOutput) WindowsOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsOsInfoInvokeResponse) *string { return v.WindowsOsState }).(pulumi.StringPtrOutput)
}

type WindowsOsInfoInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (WindowsOsInfoInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsOsInfoInvokeResponse)(nil)).Elem()
}

func (o WindowsOsInfoInvokeResponsePtrOutput) ToWindowsOsInfoInvokeResponsePtrOutput() WindowsOsInfoInvokeResponsePtrOutput {
	return o
}

func (o WindowsOsInfoInvokeResponsePtrOutput) ToWindowsOsInfoInvokeResponsePtrOutputWithContext(ctx context.Context) WindowsOsInfoInvokeResponsePtrOutput {
	return o
}

func (o WindowsOsInfoInvokeResponsePtrOutput) Elem() WindowsOsInfoInvokeResponseOutput {
	return o.ApplyT(func(v *WindowsOsInfoInvokeResponse) WindowsOsInfoInvokeResponse { return *v }).(WindowsOsInfoInvokeResponseOutput)
}

// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
func (o WindowsOsInfoInvokeResponsePtrOutput) WindowsOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsOsInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.WindowsOsState
	}).(pulumi.StringPtrOutput)
}

// Information about a Windows OS.
type WindowsOsInfoResponse struct {
	// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
	WindowsOsState *string `pulumi:"windowsOsState"`
}

// WindowsOsInfoResponseInput is an input type that accepts WindowsOsInfoResponseArgs and WindowsOsInfoResponseOutput values.
// You can construct a concrete instance of `WindowsOsInfoResponseInput` via:
//
//          WindowsOsInfoResponseArgs{...}
type WindowsOsInfoResponseInput interface {
	pulumi.Input

	ToWindowsOsInfoResponseOutput() WindowsOsInfoResponseOutput
	ToWindowsOsInfoResponseOutputWithContext(context.Context) WindowsOsInfoResponseOutput
}

// Information about a Windows OS.
type WindowsOsInfoResponseArgs struct {
	// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
	WindowsOsState pulumi.StringPtrInput `pulumi:"windowsOsState"`
}

func (WindowsOsInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsOsInfoResponse)(nil)).Elem()
}

func (i WindowsOsInfoResponseArgs) ToWindowsOsInfoResponseOutput() WindowsOsInfoResponseOutput {
	return i.ToWindowsOsInfoResponseOutputWithContext(context.Background())
}

func (i WindowsOsInfoResponseArgs) ToWindowsOsInfoResponseOutputWithContext(ctx context.Context) WindowsOsInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsOsInfoResponseOutput)
}

func (i WindowsOsInfoResponseArgs) ToWindowsOsInfoResponsePtrOutput() WindowsOsInfoResponsePtrOutput {
	return i.ToWindowsOsInfoResponsePtrOutputWithContext(context.Background())
}

func (i WindowsOsInfoResponseArgs) ToWindowsOsInfoResponsePtrOutputWithContext(ctx context.Context) WindowsOsInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsOsInfoResponseOutput).ToWindowsOsInfoResponsePtrOutputWithContext(ctx)
}

// WindowsOsInfoResponsePtrInput is an input type that accepts WindowsOsInfoResponseArgs, WindowsOsInfoResponsePtr and WindowsOsInfoResponsePtrOutput values.
// You can construct a concrete instance of `WindowsOsInfoResponsePtrInput` via:
//
//          WindowsOsInfoResponseArgs{...}
//
//  or:
//
//          nil
type WindowsOsInfoResponsePtrInput interface {
	pulumi.Input

	ToWindowsOsInfoResponsePtrOutput() WindowsOsInfoResponsePtrOutput
	ToWindowsOsInfoResponsePtrOutputWithContext(context.Context) WindowsOsInfoResponsePtrOutput
}

type windowsOsInfoResponsePtrType WindowsOsInfoResponseArgs

func WindowsOsInfoResponsePtr(v *WindowsOsInfoResponseArgs) WindowsOsInfoResponsePtrInput {
	return (*windowsOsInfoResponsePtrType)(v)
}

func (*windowsOsInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsOsInfoResponse)(nil)).Elem()
}

func (i *windowsOsInfoResponsePtrType) ToWindowsOsInfoResponsePtrOutput() WindowsOsInfoResponsePtrOutput {
	return i.ToWindowsOsInfoResponsePtrOutputWithContext(context.Background())
}

func (i *windowsOsInfoResponsePtrType) ToWindowsOsInfoResponsePtrOutputWithContext(ctx context.Context) WindowsOsInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsOsInfoResponsePtrOutput)
}

// Information about a Windows OS.
type WindowsOsInfoResponseOutput struct{ *pulumi.OutputState }

func (WindowsOsInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsOsInfoResponse)(nil)).Elem()
}

func (o WindowsOsInfoResponseOutput) ToWindowsOsInfoResponseOutput() WindowsOsInfoResponseOutput {
	return o
}

func (o WindowsOsInfoResponseOutput) ToWindowsOsInfoResponseOutputWithContext(ctx context.Context) WindowsOsInfoResponseOutput {
	return o
}

func (o WindowsOsInfoResponseOutput) ToWindowsOsInfoResponsePtrOutput() WindowsOsInfoResponsePtrOutput {
	return o.ToWindowsOsInfoResponsePtrOutputWithContext(context.Background())
}

func (o WindowsOsInfoResponseOutput) ToWindowsOsInfoResponsePtrOutputWithContext(ctx context.Context) WindowsOsInfoResponsePtrOutput {
	return o.ApplyT(func(v WindowsOsInfoResponse) *WindowsOsInfoResponse {
		return &v
	}).(WindowsOsInfoResponsePtrOutput)
}

// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
func (o WindowsOsInfoResponseOutput) WindowsOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsOsInfoResponse) *string { return v.WindowsOsState }).(pulumi.StringPtrOutput)
}

type WindowsOsInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (WindowsOsInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsOsInfoResponse)(nil)).Elem()
}

func (o WindowsOsInfoResponsePtrOutput) ToWindowsOsInfoResponsePtrOutput() WindowsOsInfoResponsePtrOutput {
	return o
}

func (o WindowsOsInfoResponsePtrOutput) ToWindowsOsInfoResponsePtrOutputWithContext(ctx context.Context) WindowsOsInfoResponsePtrOutput {
	return o
}

func (o WindowsOsInfoResponsePtrOutput) Elem() WindowsOsInfoResponseOutput {
	return o.ApplyT(func(v *WindowsOsInfoResponse) WindowsOsInfoResponse { return *v }).(WindowsOsInfoResponseOutput)
}

// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
func (o WindowsOsInfoResponsePtrOutput) WindowsOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsOsInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.WindowsOsState
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicableScheduleInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApplicableScheduleResponseOutput{})
	pulumi.RegisterOutputType(ApplicableScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(ArmTemplateParameterPropertiesOutput{})
	pulumi.RegisterOutputType(ArmTemplateParameterPropertiesArrayOutput{})
	pulumi.RegisterOutputType(ArmTemplateParameterPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ArmTemplateParameterPropertiesInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ArmTemplateParameterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ArmTemplateParameterPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(ArtifactDeploymentStatusPropertiesOutput{})
	pulumi.RegisterOutputType(ArtifactDeploymentStatusPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ArtifactDeploymentStatusPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ArtifactDeploymentStatusPropertiesInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ArtifactDeploymentStatusPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ArtifactDeploymentStatusPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ArtifactInstallPropertiesOutput{})
	pulumi.RegisterOutputType(ArtifactInstallPropertiesArrayOutput{})
	pulumi.RegisterOutputType(ArtifactInstallPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ArtifactInstallPropertiesInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ArtifactInstallPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ArtifactInstallPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(ArtifactParameterPropertiesOutput{})
	pulumi.RegisterOutputType(ArtifactParameterPropertiesArrayOutput{})
	pulumi.RegisterOutputType(ArtifactParameterPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ArtifactParameterPropertiesInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ArtifactParameterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ArtifactParameterPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(AttachNewDataDiskOptionsOutput{})
	pulumi.RegisterOutputType(AttachNewDataDiskOptionsPtrOutput{})
	pulumi.RegisterOutputType(AttachNewDataDiskOptionsInvokeResponseOutput{})
	pulumi.RegisterOutputType(AttachNewDataDiskOptionsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(AttachNewDataDiskOptionsResponseOutput{})
	pulumi.RegisterOutputType(AttachNewDataDiskOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(BulkCreationParametersOutput{})
	pulumi.RegisterOutputType(BulkCreationParametersPtrOutput{})
	pulumi.RegisterOutputType(BulkCreationParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(BulkCreationParametersInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(BulkCreationParametersResponseOutput{})
	pulumi.RegisterOutputType(BulkCreationParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(ComputeDataDiskInvokeResponseOutput{})
	pulumi.RegisterOutputType(ComputeDataDiskInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ComputeDataDiskResponseOutput{})
	pulumi.RegisterOutputType(ComputeDataDiskResponseArrayOutput{})
	pulumi.RegisterOutputType(ComputeVmInstanceViewStatusInvokeResponseOutput{})
	pulumi.RegisterOutputType(ComputeVmInstanceViewStatusInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ComputeVmInstanceViewStatusResponseOutput{})
	pulumi.RegisterOutputType(ComputeVmInstanceViewStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(ComputeVmPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ComputeVmPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ComputeVmPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesCustomOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesCustomPtrOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesCustomInvokeResponseOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesCustomResponseOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesCustomResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesFromPlanOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesFromPlanPtrOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesFromPlanInvokeResponseOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesFromPlanResponseOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesFromPlanResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesFromVmOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesFromVmPtrOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesFromVmInvokeResponseOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesFromVmResponseOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesFromVmResponsePtrOutput{})
	pulumi.RegisterOutputType(DataDiskPropertiesOutput{})
	pulumi.RegisterOutputType(DataDiskPropertiesArrayOutput{})
	pulumi.RegisterOutputType(DataDiskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(DataDiskPropertiesInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(DataDiskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DataDiskPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(DataDiskStorageTypeInfoOutput{})
	pulumi.RegisterOutputType(DataDiskStorageTypeInfoArrayOutput{})
	pulumi.RegisterOutputType(DataDiskStorageTypeInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(DataDiskStorageTypeInfoInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(DataDiskStorageTypeInfoResponseOutput{})
	pulumi.RegisterOutputType(DataDiskStorageTypeInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(DayDetailsOutput{})
	pulumi.RegisterOutputType(DayDetailsPtrOutput{})
	pulumi.RegisterOutputType(DayDetailsInvokeResponseOutput{})
	pulumi.RegisterOutputType(DayDetailsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(DayDetailsResponseOutput{})
	pulumi.RegisterOutputType(DayDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentDeploymentPropertiesOutput{})
	pulumi.RegisterOutputType(EnvironmentDeploymentPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentDeploymentPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentDeploymentPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentDeploymentPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(EventOutput{})
	pulumi.RegisterOutputType(EventArrayOutput{})
	pulumi.RegisterOutputType(EventInvokeResponseOutput{})
	pulumi.RegisterOutputType(EventInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(EventResponseOutput{})
	pulumi.RegisterOutputType(EventResponseArrayOutput{})
	pulumi.RegisterOutputType(ExternalSubnetInvokeResponseOutput{})
	pulumi.RegisterOutputType(ExternalSubnetInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ExternalSubnetResponseOutput{})
	pulumi.RegisterOutputType(ExternalSubnetResponseArrayOutput{})
	pulumi.RegisterOutputType(FormulaPropertiesFromVmOutput{})
	pulumi.RegisterOutputType(FormulaPropertiesFromVmPtrOutput{})
	pulumi.RegisterOutputType(FormulaPropertiesFromVmInvokeResponseOutput{})
	pulumi.RegisterOutputType(FormulaPropertiesFromVmResponseOutput{})
	pulumi.RegisterOutputType(FormulaPropertiesFromVmResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageReferenceOutput{})
	pulumi.RegisterOutputType(GalleryImageReferencePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageReferenceInvokeResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageReferenceInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageReferenceResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(HourDetailsOutput{})
	pulumi.RegisterOutputType(HourDetailsPtrOutput{})
	pulumi.RegisterOutputType(HourDetailsInvokeResponseOutput{})
	pulumi.RegisterOutputType(HourDetailsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(HourDetailsResponseOutput{})
	pulumi.RegisterOutputType(HourDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(InboundNatRuleOutput{})
	pulumi.RegisterOutputType(InboundNatRuleArrayOutput{})
	pulumi.RegisterOutputType(InboundNatRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(InboundNatRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(InboundNatRuleResponseOutput{})
	pulumi.RegisterOutputType(InboundNatRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(LabAnnouncementPropertiesOutput{})
	pulumi.RegisterOutputType(LabAnnouncementPropertiesPtrOutput{})
	pulumi.RegisterOutputType(LabAnnouncementPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(LabAnnouncementPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LabAnnouncementPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LabSupportPropertiesOutput{})
	pulumi.RegisterOutputType(LabSupportPropertiesPtrOutput{})
	pulumi.RegisterOutputType(LabSupportPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(LabSupportPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LabSupportPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LabVhdInvokeResponseOutput{})
	pulumi.RegisterOutputType(LabVhdInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(LabVirtualMachineCreationParameterOutput{})
	pulumi.RegisterOutputType(LabVirtualMachineCreationParameterPtrOutput{})
	pulumi.RegisterOutputType(LabVirtualMachineCreationParameterInvokeResponseOutput{})
	pulumi.RegisterOutputType(LabVirtualMachineCreationParameterResponseOutput{})
	pulumi.RegisterOutputType(LabVirtualMachineCreationParameterResponsePtrOutput{})
	pulumi.RegisterOutputType(LinuxOsInfoOutput{})
	pulumi.RegisterOutputType(LinuxOsInfoPtrOutput{})
	pulumi.RegisterOutputType(LinuxOsInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(LinuxOsInfoInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(LinuxOsInfoResponseOutput{})
	pulumi.RegisterOutputType(LinuxOsInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfacePropertiesOutput{})
	pulumi.RegisterOutputType(NetworkInterfacePropertiesPtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfacePropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfacePropertiesInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfacePropertiesResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfacePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(NotificationSettingsOutput{})
	pulumi.RegisterOutputType(NotificationSettingsPtrOutput{})
	pulumi.RegisterOutputType(NotificationSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(NotificationSettingsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(NotificationSettingsResponseOutput{})
	pulumi.RegisterOutputType(NotificationSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PortOutput{})
	pulumi.RegisterOutputType(PortArrayOutput{})
	pulumi.RegisterOutputType(PortInvokeResponseOutput{})
	pulumi.RegisterOutputType(PortInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(PortResponseOutput{})
	pulumi.RegisterOutputType(PortResponseArrayOutput{})
	pulumi.RegisterOutputType(ScheduleCreationParameterOutput{})
	pulumi.RegisterOutputType(ScheduleCreationParameterArrayOutput{})
	pulumi.RegisterOutputType(ScheduleCreationParameterInvokeResponseOutput{})
	pulumi.RegisterOutputType(ScheduleCreationParameterInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ScheduleCreationParameterResponseOutput{})
	pulumi.RegisterOutputType(ScheduleCreationParameterResponseArrayOutput{})
	pulumi.RegisterOutputType(ScheduleInvokeResponseOutput{})
	pulumi.RegisterOutputType(ScheduleInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ScheduleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ScheduleResponseOutput{})
	pulumi.RegisterOutputType(ScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(SharedPublicIpAddressConfigurationOutput{})
	pulumi.RegisterOutputType(SharedPublicIpAddressConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SharedPublicIpAddressConfigurationInvokeResponseOutput{})
	pulumi.RegisterOutputType(SharedPublicIpAddressConfigurationInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SharedPublicIpAddressConfigurationResponseOutput{})
	pulumi.RegisterOutputType(SharedPublicIpAddressConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(SubnetOutput{})
	pulumi.RegisterOutputType(SubnetArrayOutput{})
	pulumi.RegisterOutputType(SubnetInvokeResponseOutput{})
	pulumi.RegisterOutputType(SubnetInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetOverrideOutput{})
	pulumi.RegisterOutputType(SubnetOverrideArrayOutput{})
	pulumi.RegisterOutputType(SubnetOverrideInvokeResponseOutput{})
	pulumi.RegisterOutputType(SubnetOverrideInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetOverrideResponseOutput{})
	pulumi.RegisterOutputType(SubnetOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetResponseOutput{})
	pulumi.RegisterOutputType(SubnetResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetSharedPublicIpAddressConfigurationOutput{})
	pulumi.RegisterOutputType(SubnetSharedPublicIpAddressConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SubnetSharedPublicIpAddressConfigurationInvokeResponseOutput{})
	pulumi.RegisterOutputType(SubnetSharedPublicIpAddressConfigurationInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SubnetSharedPublicIpAddressConfigurationResponseOutput{})
	pulumi.RegisterOutputType(SubnetSharedPublicIpAddressConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(UserIdentityOutput{})
	pulumi.RegisterOutputType(UserIdentityPtrOutput{})
	pulumi.RegisterOutputType(UserIdentityInvokeResponseOutput{})
	pulumi.RegisterOutputType(UserIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(UserSecretStoreOutput{})
	pulumi.RegisterOutputType(UserSecretStorePtrOutput{})
	pulumi.RegisterOutputType(UserSecretStoreInvokeResponseOutput{})
	pulumi.RegisterOutputType(UserSecretStoreResponseOutput{})
	pulumi.RegisterOutputType(UserSecretStoreResponsePtrOutput{})
	pulumi.RegisterOutputType(WeekDetailsOutput{})
	pulumi.RegisterOutputType(WeekDetailsPtrOutput{})
	pulumi.RegisterOutputType(WeekDetailsInvokeResponseOutput{})
	pulumi.RegisterOutputType(WeekDetailsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(WeekDetailsResponseOutput{})
	pulumi.RegisterOutputType(WeekDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(WindowsOsInfoOutput{})
	pulumi.RegisterOutputType(WindowsOsInfoPtrOutput{})
	pulumi.RegisterOutputType(WindowsOsInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(WindowsOsInfoInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(WindowsOsInfoResponseOutput{})
	pulumi.RegisterOutputType(WindowsOsInfoResponsePtrOutput{})
}
