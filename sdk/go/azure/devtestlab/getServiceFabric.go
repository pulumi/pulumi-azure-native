// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devtestlab

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Service Fabric.
// API Version: 2018-09-15.
func LookupServiceFabric(ctx *pulumi.Context, args *LookupServiceFabricArgs, opts ...pulumi.InvokeOption) (*LookupServiceFabricResult, error) {
	var rv LookupServiceFabricResult
	err := ctx.Invoke("azure-native:devtestlab:getServiceFabric", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupServiceFabricArgs struct {
	// Specify the $expand query. Example: 'properties($expand=applicableSchedule)'
	Expand *string `pulumi:"expand"`
	// The name of the lab.
	LabName string `pulumi:"labName"`
	// The name of the service fabric.
	Name string `pulumi:"name"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the user profile.
	UserName string `pulumi:"userName"`
}

// A Service Fabric.
type LookupServiceFabricResult struct {
	// The applicable schedule for the virtual machine.
	ApplicableSchedule ApplicableScheduleResponse `pulumi:"applicableSchedule"`
	// The resource id of the environment under which the service fabric resource is present
	EnvironmentId *string `pulumi:"environmentId"`
	// The backing service fabric resource's id
	ExternalServiceFabricId *string `pulumi:"externalServiceFabricId"`
	// The identifier of the resource.
	Id string `pulumi:"id"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The provisioning status of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type string `pulumi:"type"`
	// The unique immutable identifier of a resource (Guid).
	UniqueIdentifier string `pulumi:"uniqueIdentifier"`
}

// Defaults sets the appropriate defaults for LookupServiceFabricResult
func (val *LookupServiceFabricResult) Defaults() *LookupServiceFabricResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ApplicableSchedule = *tmp.ApplicableSchedule.Defaults()

	return &tmp
}

func LookupServiceFabricOutput(ctx *pulumi.Context, args LookupServiceFabricOutputArgs, opts ...pulumi.InvokeOption) LookupServiceFabricResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceFabricResult, error) {
			args := v.(LookupServiceFabricArgs)
			r, err := LookupServiceFabric(ctx, &args, opts...)
			var s LookupServiceFabricResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServiceFabricResultOutput)
}

type LookupServiceFabricOutputArgs struct {
	// Specify the $expand query. Example: 'properties($expand=applicableSchedule)'
	Expand pulumi.StringPtrInput `pulumi:"expand"`
	// The name of the lab.
	LabName pulumi.StringInput `pulumi:"labName"`
	// The name of the service fabric.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the user profile.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (LookupServiceFabricOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceFabricArgs)(nil)).Elem()
}

// A Service Fabric.
type LookupServiceFabricResultOutput struct{ *pulumi.OutputState }

func (LookupServiceFabricResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceFabricResult)(nil)).Elem()
}

func (o LookupServiceFabricResultOutput) ToLookupServiceFabricResultOutput() LookupServiceFabricResultOutput {
	return o
}

func (o LookupServiceFabricResultOutput) ToLookupServiceFabricResultOutputWithContext(ctx context.Context) LookupServiceFabricResultOutput {
	return o
}

// The applicable schedule for the virtual machine.
func (o LookupServiceFabricResultOutput) ApplicableSchedule() ApplicableScheduleResponseOutput {
	return o.ApplyT(func(v LookupServiceFabricResult) ApplicableScheduleResponse { return v.ApplicableSchedule }).(ApplicableScheduleResponseOutput)
}

// The resource id of the environment under which the service fabric resource is present
func (o LookupServiceFabricResultOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceFabricResult) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// The backing service fabric resource's id
func (o LookupServiceFabricResultOutput) ExternalServiceFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceFabricResult) *string { return v.ExternalServiceFabricId }).(pulumi.StringPtrOutput)
}

// The identifier of the resource.
func (o LookupServiceFabricResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceFabricResult) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the resource.
func (o LookupServiceFabricResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceFabricResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o LookupServiceFabricResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceFabricResult) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning status of the resource.
func (o LookupServiceFabricResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceFabricResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The tags of the resource.
func (o LookupServiceFabricResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupServiceFabricResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o LookupServiceFabricResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceFabricResult) string { return v.Type }).(pulumi.StringOutput)
}

// The unique immutable identifier of a resource (Guid).
func (o LookupServiceFabricResultOutput) UniqueIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceFabricResult) string { return v.UniqueIdentifier }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceFabricResultOutput{})
}
