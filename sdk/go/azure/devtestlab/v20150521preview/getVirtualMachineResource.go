// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20150521preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A virtual machine.
//
// Deprecated: Version 2015-05-21-preview will be removed in v2 of the provider.
func LookupVirtualMachineResource(ctx *pulumi.Context, args *LookupVirtualMachineResourceArgs, opts ...pulumi.InvokeOption) (*LookupVirtualMachineResourceResult, error) {
	var rv LookupVirtualMachineResourceResult
	err := ctx.Invoke("azure-native:devtestlab/v20150521preview:getVirtualMachineResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVirtualMachineResourceArgs struct {
	// The name of the lab.
	LabName string `pulumi:"labName"`
	// The name of the virtual Machine.
	Name string `pulumi:"name"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A virtual machine.
type LookupVirtualMachineResourceResult struct {
	// The artifact deployment status for the virtual machine.
	ArtifactDeploymentStatus *ArtifactDeploymentStatusPropertiesResponse `pulumi:"artifactDeploymentStatus"`
	// The artifacts to be installed on the virtual machine.
	Artifacts []ArtifactInstallPropertiesResponse `pulumi:"artifacts"`
	// The resource identifier (Microsoft.Compute) of the virtual machine.
	ComputeId *string `pulumi:"computeId"`
	// The email address of creator of the virtual machine.
	CreatedByUser *string `pulumi:"createdByUser"`
	// The object identifier of the creator of the virtual machine.
	CreatedByUserId *string `pulumi:"createdByUserId"`
	// The custom image identifier of the virtual machine.
	CustomImageId *string `pulumi:"customImageId"`
	// Indicates whether the virtual machine is to be created without a public IP address.
	DisallowPublicIpAddress *bool `pulumi:"disallowPublicIpAddress"`
	// The fully-qualified domain name of the virtual machine.
	Fqdn *string `pulumi:"fqdn"`
	// The Microsoft Azure Marketplace image reference of the virtual machine.
	GalleryImageReference *GalleryImageReferenceResponse `pulumi:"galleryImageReference"`
	// The identifier of the resource.
	Id *string `pulumi:"id"`
	// A value indicating whether this virtual machine uses an SSH key for authentication.
	IsAuthenticationWithSshKey *bool `pulumi:"isAuthenticationWithSshKey"`
	// The lab subnet name of the virtual machine.
	LabSubnetName *string `pulumi:"labSubnetName"`
	// The lab virtual network identifier of the virtual machine.
	LabVirtualNetworkId *string `pulumi:"labVirtualNetworkId"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The notes of the virtual machine.
	Notes *string `pulumi:"notes"`
	// The OS type of the virtual machine.
	OsType *string `pulumi:"osType"`
	// The object identifier of the owner of the virtual machine.
	OwnerObjectId *string `pulumi:"ownerObjectId"`
	// The password of the virtual machine administrator.
	Password *string `pulumi:"password"`
	// The provisioning status of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The size of the virtual machine.
	Size *string `pulumi:"size"`
	// The SSH key of the virtual machine administrator.
	SshKey *string `pulumi:"sshKey"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type *string `pulumi:"type"`
	// The user name of the virtual machine.
	UserName *string `pulumi:"userName"`
}

func LookupVirtualMachineResourceOutput(ctx *pulumi.Context, args LookupVirtualMachineResourceOutputArgs, opts ...pulumi.InvokeOption) LookupVirtualMachineResourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVirtualMachineResourceResult, error) {
			args := v.(LookupVirtualMachineResourceArgs)
			r, err := LookupVirtualMachineResource(ctx, &args, opts...)
			var s LookupVirtualMachineResourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVirtualMachineResourceResultOutput)
}

type LookupVirtualMachineResourceOutputArgs struct {
	// The name of the lab.
	LabName pulumi.StringInput `pulumi:"labName"`
	// The name of the virtual Machine.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupVirtualMachineResourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualMachineResourceArgs)(nil)).Elem()
}

// A virtual machine.
type LookupVirtualMachineResourceResultOutput struct{ *pulumi.OutputState }

func (LookupVirtualMachineResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualMachineResourceResult)(nil)).Elem()
}

func (o LookupVirtualMachineResourceResultOutput) ToLookupVirtualMachineResourceResultOutput() LookupVirtualMachineResourceResultOutput {
	return o
}

func (o LookupVirtualMachineResourceResultOutput) ToLookupVirtualMachineResourceResultOutputWithContext(ctx context.Context) LookupVirtualMachineResourceResultOutput {
	return o
}

// The artifact deployment status for the virtual machine.
func (o LookupVirtualMachineResourceResultOutput) ArtifactDeploymentStatus() ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *ArtifactDeploymentStatusPropertiesResponse {
		return v.ArtifactDeploymentStatus
	}).(ArtifactDeploymentStatusPropertiesResponsePtrOutput)
}

// The artifacts to be installed on the virtual machine.
func (o LookupVirtualMachineResourceResultOutput) Artifacts() ArtifactInstallPropertiesResponseArrayOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) []ArtifactInstallPropertiesResponse { return v.Artifacts }).(ArtifactInstallPropertiesResponseArrayOutput)
}

// The resource identifier (Microsoft.Compute) of the virtual machine.
func (o LookupVirtualMachineResourceResultOutput) ComputeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.ComputeId }).(pulumi.StringPtrOutput)
}

// The email address of creator of the virtual machine.
func (o LookupVirtualMachineResourceResultOutput) CreatedByUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.CreatedByUser }).(pulumi.StringPtrOutput)
}

// The object identifier of the creator of the virtual machine.
func (o LookupVirtualMachineResourceResultOutput) CreatedByUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.CreatedByUserId }).(pulumi.StringPtrOutput)
}

// The custom image identifier of the virtual machine.
func (o LookupVirtualMachineResourceResultOutput) CustomImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.CustomImageId }).(pulumi.StringPtrOutput)
}

// Indicates whether the virtual machine is to be created without a public IP address.
func (o LookupVirtualMachineResourceResultOutput) DisallowPublicIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *bool { return v.DisallowPublicIpAddress }).(pulumi.BoolPtrOutput)
}

// The fully-qualified domain name of the virtual machine.
func (o LookupVirtualMachineResourceResultOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The Microsoft Azure Marketplace image reference of the virtual machine.
func (o LookupVirtualMachineResourceResultOutput) GalleryImageReference() GalleryImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *GalleryImageReferenceResponse {
		return v.GalleryImageReference
	}).(GalleryImageReferenceResponsePtrOutput)
}

// The identifier of the resource.
func (o LookupVirtualMachineResourceResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A value indicating whether this virtual machine uses an SSH key for authentication.
func (o LookupVirtualMachineResourceResultOutput) IsAuthenticationWithSshKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *bool { return v.IsAuthenticationWithSshKey }).(pulumi.BoolPtrOutput)
}

// The lab subnet name of the virtual machine.
func (o LookupVirtualMachineResourceResultOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.LabSubnetName }).(pulumi.StringPtrOutput)
}

// The lab virtual network identifier of the virtual machine.
func (o LookupVirtualMachineResourceResultOutput) LabVirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.LabVirtualNetworkId }).(pulumi.StringPtrOutput)
}

// The location of the resource.
func (o LookupVirtualMachineResourceResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o LookupVirtualMachineResourceResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The notes of the virtual machine.
func (o LookupVirtualMachineResourceResultOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

// The OS type of the virtual machine.
func (o LookupVirtualMachineResourceResultOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The object identifier of the owner of the virtual machine.
func (o LookupVirtualMachineResourceResultOutput) OwnerObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.OwnerObjectId }).(pulumi.StringPtrOutput)
}

// The password of the virtual machine administrator.
func (o LookupVirtualMachineResourceResultOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The provisioning status of the resource.
func (o LookupVirtualMachineResourceResultOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The size of the virtual machine.
func (o LookupVirtualMachineResourceResultOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The SSH key of the virtual machine administrator.
func (o LookupVirtualMachineResourceResultOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o LookupVirtualMachineResourceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o LookupVirtualMachineResourceResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The user name of the virtual machine.
func (o LookupVirtualMachineResourceResultOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResourceResult) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVirtualMachineResourceResultOutput{})
}
