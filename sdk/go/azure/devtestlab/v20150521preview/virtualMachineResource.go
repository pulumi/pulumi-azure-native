// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20150521preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A virtual machine.
//
// Deprecated: Version 2015-05-21-preview will be removed in v2 of the provider.
type VirtualMachineResource struct {
	pulumi.CustomResourceState

	// The artifact deployment status for the virtual machine.
	ArtifactDeploymentStatus ArtifactDeploymentStatusPropertiesResponsePtrOutput `pulumi:"artifactDeploymentStatus"`
	// The artifacts to be installed on the virtual machine.
	Artifacts ArtifactInstallPropertiesResponseArrayOutput `pulumi:"artifacts"`
	// The resource identifier (Microsoft.Compute) of the virtual machine.
	ComputeId pulumi.StringPtrOutput `pulumi:"computeId"`
	// The email address of creator of the virtual machine.
	CreatedByUser pulumi.StringPtrOutput `pulumi:"createdByUser"`
	// The object identifier of the creator of the virtual machine.
	CreatedByUserId pulumi.StringPtrOutput `pulumi:"createdByUserId"`
	// The custom image identifier of the virtual machine.
	CustomImageId pulumi.StringPtrOutput `pulumi:"customImageId"`
	// Indicates whether the virtual machine is to be created without a public IP address.
	DisallowPublicIpAddress pulumi.BoolPtrOutput `pulumi:"disallowPublicIpAddress"`
	// The fully-qualified domain name of the virtual machine.
	Fqdn pulumi.StringPtrOutput `pulumi:"fqdn"`
	// The Microsoft Azure Marketplace image reference of the virtual machine.
	GalleryImageReference GalleryImageReferenceResponsePtrOutput `pulumi:"galleryImageReference"`
	// A value indicating whether this virtual machine uses an SSH key for authentication.
	IsAuthenticationWithSshKey pulumi.BoolPtrOutput `pulumi:"isAuthenticationWithSshKey"`
	// The lab subnet name of the virtual machine.
	LabSubnetName pulumi.StringPtrOutput `pulumi:"labSubnetName"`
	// The lab virtual network identifier of the virtual machine.
	LabVirtualNetworkId pulumi.StringPtrOutput `pulumi:"labVirtualNetworkId"`
	// The location of the resource.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// The notes of the virtual machine.
	Notes pulumi.StringPtrOutput `pulumi:"notes"`
	// The OS type of the virtual machine.
	OsType pulumi.StringPtrOutput `pulumi:"osType"`
	// The object identifier of the owner of the virtual machine.
	OwnerObjectId pulumi.StringPtrOutput `pulumi:"ownerObjectId"`
	// The password of the virtual machine administrator.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// The provisioning status of the resource.
	ProvisioningState pulumi.StringPtrOutput `pulumi:"provisioningState"`
	// The size of the virtual machine.
	Size pulumi.StringPtrOutput `pulumi:"size"`
	// The SSH key of the virtual machine administrator.
	SshKey pulumi.StringPtrOutput `pulumi:"sshKey"`
	// The tags of the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// The user name of the virtual machine.
	UserName pulumi.StringPtrOutput `pulumi:"userName"`
}

// NewVirtualMachineResource registers a new resource with the given unique name, arguments, and options.
func NewVirtualMachineResource(ctx *pulumi.Context,
	name string, args *VirtualMachineResourceArgs, opts ...pulumi.ResourceOption) (*VirtualMachineResource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LabName == nil {
		return nil, errors.New("invalid value for required argument 'LabName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:devtestlab:VirtualMachineResource"),
		},
		{
			Type: pulumi.String("azure-native:devtestlab/v20160515:VirtualMachineResource"),
		},
		{
			Type: pulumi.String("azure-native:devtestlab/v20180915:VirtualMachineResource"),
		},
	})
	opts = append(opts, aliases)
	var resource VirtualMachineResource
	err := ctx.RegisterResource("azure-native:devtestlab/v20150521preview:VirtualMachineResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualMachineResource gets an existing VirtualMachineResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualMachineResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualMachineResourceState, opts ...pulumi.ResourceOption) (*VirtualMachineResource, error) {
	var resource VirtualMachineResource
	err := ctx.ReadResource("azure-native:devtestlab/v20150521preview:VirtualMachineResource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualMachineResource resources.
type virtualMachineResourceState struct {
}

type VirtualMachineResourceState struct {
}

func (VirtualMachineResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineResourceState)(nil)).Elem()
}

type virtualMachineResourceArgs struct {
	// The artifact deployment status for the virtual machine.
	ArtifactDeploymentStatus *ArtifactDeploymentStatusProperties `pulumi:"artifactDeploymentStatus"`
	// The artifacts to be installed on the virtual machine.
	Artifacts []ArtifactInstallProperties `pulumi:"artifacts"`
	// The resource identifier (Microsoft.Compute) of the virtual machine.
	ComputeId *string `pulumi:"computeId"`
	// The email address of creator of the virtual machine.
	CreatedByUser *string `pulumi:"createdByUser"`
	// The object identifier of the creator of the virtual machine.
	CreatedByUserId *string `pulumi:"createdByUserId"`
	// The custom image identifier of the virtual machine.
	CustomImageId *string `pulumi:"customImageId"`
	// Indicates whether the virtual machine is to be created without a public IP address.
	DisallowPublicIpAddress *bool `pulumi:"disallowPublicIpAddress"`
	// The fully-qualified domain name of the virtual machine.
	Fqdn *string `pulumi:"fqdn"`
	// The Microsoft Azure Marketplace image reference of the virtual machine.
	GalleryImageReference *GalleryImageReference `pulumi:"galleryImageReference"`
	// The identifier of the resource.
	Id *string `pulumi:"id"`
	// A value indicating whether this virtual machine uses an SSH key for authentication.
	IsAuthenticationWithSshKey *bool `pulumi:"isAuthenticationWithSshKey"`
	// The name of the lab.
	LabName string `pulumi:"labName"`
	// The lab subnet name of the virtual machine.
	LabSubnetName *string `pulumi:"labSubnetName"`
	// The lab virtual network identifier of the virtual machine.
	LabVirtualNetworkId *string `pulumi:"labVirtualNetworkId"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The notes of the virtual machine.
	Notes *string `pulumi:"notes"`
	// The OS type of the virtual machine.
	OsType *string `pulumi:"osType"`
	// The object identifier of the owner of the virtual machine.
	OwnerObjectId *string `pulumi:"ownerObjectId"`
	// The password of the virtual machine administrator.
	Password *string `pulumi:"password"`
	// The provisioning status of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The size of the virtual machine.
	Size *string `pulumi:"size"`
	// The SSH key of the virtual machine administrator.
	SshKey *string `pulumi:"sshKey"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type *string `pulumi:"type"`
	// The user name of the virtual machine.
	UserName *string `pulumi:"userName"`
}

// The set of arguments for constructing a VirtualMachineResource resource.
type VirtualMachineResourceArgs struct {
	// The artifact deployment status for the virtual machine.
	ArtifactDeploymentStatus ArtifactDeploymentStatusPropertiesPtrInput
	// The artifacts to be installed on the virtual machine.
	Artifacts ArtifactInstallPropertiesArrayInput
	// The resource identifier (Microsoft.Compute) of the virtual machine.
	ComputeId pulumi.StringPtrInput
	// The email address of creator of the virtual machine.
	CreatedByUser pulumi.StringPtrInput
	// The object identifier of the creator of the virtual machine.
	CreatedByUserId pulumi.StringPtrInput
	// The custom image identifier of the virtual machine.
	CustomImageId pulumi.StringPtrInput
	// Indicates whether the virtual machine is to be created without a public IP address.
	DisallowPublicIpAddress pulumi.BoolPtrInput
	// The fully-qualified domain name of the virtual machine.
	Fqdn pulumi.StringPtrInput
	// The Microsoft Azure Marketplace image reference of the virtual machine.
	GalleryImageReference GalleryImageReferencePtrInput
	// The identifier of the resource.
	Id pulumi.StringPtrInput
	// A value indicating whether this virtual machine uses an SSH key for authentication.
	IsAuthenticationWithSshKey pulumi.BoolPtrInput
	// The name of the lab.
	LabName pulumi.StringInput
	// The lab subnet name of the virtual machine.
	LabSubnetName pulumi.StringPtrInput
	// The lab virtual network identifier of the virtual machine.
	LabVirtualNetworkId pulumi.StringPtrInput
	// The location of the resource.
	Location pulumi.StringPtrInput
	// The name of the resource.
	Name pulumi.StringPtrInput
	// The notes of the virtual machine.
	Notes pulumi.StringPtrInput
	// The OS type of the virtual machine.
	OsType pulumi.StringPtrInput
	// The object identifier of the owner of the virtual machine.
	OwnerObjectId pulumi.StringPtrInput
	// The password of the virtual machine administrator.
	Password pulumi.StringPtrInput
	// The provisioning status of the resource.
	ProvisioningState pulumi.StringPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The size of the virtual machine.
	Size pulumi.StringPtrInput
	// The SSH key of the virtual machine administrator.
	SshKey pulumi.StringPtrInput
	// The tags of the resource.
	Tags pulumi.StringMapInput
	// The type of the resource.
	Type pulumi.StringPtrInput
	// The user name of the virtual machine.
	UserName pulumi.StringPtrInput
}

func (VirtualMachineResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineResourceArgs)(nil)).Elem()
}

type VirtualMachineResourceInput interface {
	pulumi.Input

	ToVirtualMachineResourceOutput() VirtualMachineResourceOutput
	ToVirtualMachineResourceOutputWithContext(ctx context.Context) VirtualMachineResourceOutput
}

func (*VirtualMachineResource) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineResource)(nil)).Elem()
}

func (i *VirtualMachineResource) ToVirtualMachineResourceOutput() VirtualMachineResourceOutput {
	return i.ToVirtualMachineResourceOutputWithContext(context.Background())
}

func (i *VirtualMachineResource) ToVirtualMachineResourceOutputWithContext(ctx context.Context) VirtualMachineResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineResourceOutput)
}

type VirtualMachineResourceOutput struct{ *pulumi.OutputState }

func (VirtualMachineResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineResource)(nil)).Elem()
}

func (o VirtualMachineResourceOutput) ToVirtualMachineResourceOutput() VirtualMachineResourceOutput {
	return o
}

func (o VirtualMachineResourceOutput) ToVirtualMachineResourceOutputWithContext(ctx context.Context) VirtualMachineResourceOutput {
	return o
}

// The artifact deployment status for the virtual machine.
func (o VirtualMachineResourceOutput) ArtifactDeploymentStatus() ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) ArtifactDeploymentStatusPropertiesResponsePtrOutput {
		return v.ArtifactDeploymentStatus
	}).(ArtifactDeploymentStatusPropertiesResponsePtrOutput)
}

// The artifacts to be installed on the virtual machine.
func (o VirtualMachineResourceOutput) Artifacts() ArtifactInstallPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineResource) ArtifactInstallPropertiesResponseArrayOutput { return v.Artifacts }).(ArtifactInstallPropertiesResponseArrayOutput)
}

// The resource identifier (Microsoft.Compute) of the virtual machine.
func (o VirtualMachineResourceOutput) ComputeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.ComputeId }).(pulumi.StringPtrOutput)
}

// The email address of creator of the virtual machine.
func (o VirtualMachineResourceOutput) CreatedByUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.CreatedByUser }).(pulumi.StringPtrOutput)
}

// The object identifier of the creator of the virtual machine.
func (o VirtualMachineResourceOutput) CreatedByUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.CreatedByUserId }).(pulumi.StringPtrOutput)
}

// The custom image identifier of the virtual machine.
func (o VirtualMachineResourceOutput) CustomImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.CustomImageId }).(pulumi.StringPtrOutput)
}

// Indicates whether the virtual machine is to be created without a public IP address.
func (o VirtualMachineResourceOutput) DisallowPublicIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.BoolPtrOutput { return v.DisallowPublicIpAddress }).(pulumi.BoolPtrOutput)
}

// The fully-qualified domain name of the virtual machine.
func (o VirtualMachineResourceOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The Microsoft Azure Marketplace image reference of the virtual machine.
func (o VirtualMachineResourceOutput) GalleryImageReference() GalleryImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) GalleryImageReferenceResponsePtrOutput { return v.GalleryImageReference }).(GalleryImageReferenceResponsePtrOutput)
}

// A value indicating whether this virtual machine uses an SSH key for authentication.
func (o VirtualMachineResourceOutput) IsAuthenticationWithSshKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.BoolPtrOutput { return v.IsAuthenticationWithSshKey }).(pulumi.BoolPtrOutput)
}

// The lab subnet name of the virtual machine.
func (o VirtualMachineResourceOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.LabSubnetName }).(pulumi.StringPtrOutput)
}

// The lab virtual network identifier of the virtual machine.
func (o VirtualMachineResourceOutput) LabVirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.LabVirtualNetworkId }).(pulumi.StringPtrOutput)
}

// The location of the resource.
func (o VirtualMachineResourceOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o VirtualMachineResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// The notes of the virtual machine.
func (o VirtualMachineResourceOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.Notes }).(pulumi.StringPtrOutput)
}

// The OS type of the virtual machine.
func (o VirtualMachineResourceOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.OsType }).(pulumi.StringPtrOutput)
}

// The object identifier of the owner of the virtual machine.
func (o VirtualMachineResourceOutput) OwnerObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.OwnerObjectId }).(pulumi.StringPtrOutput)
}

// The password of the virtual machine administrator.
func (o VirtualMachineResourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// The provisioning status of the resource.
func (o VirtualMachineResourceOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The size of the virtual machine.
func (o VirtualMachineResourceOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.Size }).(pulumi.StringPtrOutput)
}

// The SSH key of the virtual machine administrator.
func (o VirtualMachineResourceOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.SshKey }).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o VirtualMachineResourceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o VirtualMachineResourceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// The user name of the virtual machine.
func (o VirtualMachineResourceOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineResource) pulumi.StringPtrOutput { return v.UserName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(VirtualMachineResourceOutput{})
}
