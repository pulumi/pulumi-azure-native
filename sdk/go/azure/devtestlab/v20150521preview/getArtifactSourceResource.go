// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20150521preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Properties of an artifact source.
//
// Deprecated: Version 2015-05-21-preview will be removed in v2 of the provider.
func LookupArtifactSourceResource(ctx *pulumi.Context, args *LookupArtifactSourceResourceArgs, opts ...pulumi.InvokeOption) (*LookupArtifactSourceResourceResult, error) {
	var rv LookupArtifactSourceResourceResult
	err := ctx.Invoke("azure-native:devtestlab/v20150521preview:getArtifactSourceResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupArtifactSourceResourceArgs struct {
	// The name of the lab.
	LabName string `pulumi:"labName"`
	// The name of the artifact source.
	Name string `pulumi:"name"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Properties of an artifact source.
type LookupArtifactSourceResourceResult struct {
	// The branch reference of the artifact source.
	BranchRef *string `pulumi:"branchRef"`
	// The display name of the artifact source.
	DisplayName *string `pulumi:"displayName"`
	// The folder path of the artifact source.
	FolderPath *string `pulumi:"folderPath"`
	// The identifier of the resource.
	Id *string `pulumi:"id"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The provisioning status of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The security token of the artifact source.
	SecurityToken *string `pulumi:"securityToken"`
	// The type of the artifact source.
	SourceType *string `pulumi:"sourceType"`
	// The status of the artifact source.
	Status *string `pulumi:"status"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type *string `pulumi:"type"`
	// The URI of the artifact source.
	Uri *string `pulumi:"uri"`
}

func LookupArtifactSourceResourceOutput(ctx *pulumi.Context, args LookupArtifactSourceResourceOutputArgs, opts ...pulumi.InvokeOption) LookupArtifactSourceResourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupArtifactSourceResourceResult, error) {
			args := v.(LookupArtifactSourceResourceArgs)
			r, err := LookupArtifactSourceResource(ctx, &args, opts...)
			var s LookupArtifactSourceResourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupArtifactSourceResourceResultOutput)
}

type LookupArtifactSourceResourceOutputArgs struct {
	// The name of the lab.
	LabName pulumi.StringInput `pulumi:"labName"`
	// The name of the artifact source.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupArtifactSourceResourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupArtifactSourceResourceArgs)(nil)).Elem()
}

// Properties of an artifact source.
type LookupArtifactSourceResourceResultOutput struct{ *pulumi.OutputState }

func (LookupArtifactSourceResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupArtifactSourceResourceResult)(nil)).Elem()
}

func (o LookupArtifactSourceResourceResultOutput) ToLookupArtifactSourceResourceResultOutput() LookupArtifactSourceResourceResultOutput {
	return o
}

func (o LookupArtifactSourceResourceResultOutput) ToLookupArtifactSourceResourceResultOutputWithContext(ctx context.Context) LookupArtifactSourceResourceResultOutput {
	return o
}

// The branch reference of the artifact source.
func (o LookupArtifactSourceResourceResultOutput) BranchRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArtifactSourceResourceResult) *string { return v.BranchRef }).(pulumi.StringPtrOutput)
}

// The display name of the artifact source.
func (o LookupArtifactSourceResourceResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArtifactSourceResourceResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The folder path of the artifact source.
func (o LookupArtifactSourceResourceResultOutput) FolderPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArtifactSourceResourceResult) *string { return v.FolderPath }).(pulumi.StringPtrOutput)
}

// The identifier of the resource.
func (o LookupArtifactSourceResourceResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArtifactSourceResourceResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The location of the resource.
func (o LookupArtifactSourceResourceResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArtifactSourceResourceResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o LookupArtifactSourceResourceResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArtifactSourceResourceResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning status of the resource.
func (o LookupArtifactSourceResourceResultOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArtifactSourceResourceResult) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The security token of the artifact source.
func (o LookupArtifactSourceResourceResultOutput) SecurityToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArtifactSourceResourceResult) *string { return v.SecurityToken }).(pulumi.StringPtrOutput)
}

// The type of the artifact source.
func (o LookupArtifactSourceResourceResultOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArtifactSourceResourceResult) *string { return v.SourceType }).(pulumi.StringPtrOutput)
}

// The status of the artifact source.
func (o LookupArtifactSourceResourceResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArtifactSourceResourceResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o LookupArtifactSourceResourceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupArtifactSourceResourceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o LookupArtifactSourceResourceResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArtifactSourceResourceResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The URI of the artifact source.
func (o LookupArtifactSourceResourceResultOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArtifactSourceResourceResult) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupArtifactSourceResourceResultOutput{})
}
