// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20150521preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Properties of an artifact deployment.
type ArtifactDeploymentStatusProperties struct {
	// The total count of the artifacts that were successfully applied.
	ArtifactsApplied *int `pulumi:"artifactsApplied"`
	// The deployment status of the artifact.
	DeploymentStatus *string `pulumi:"deploymentStatus"`
	// The total count of the artifacts that were tentatively applied.
	TotalArtifacts *int `pulumi:"totalArtifacts"`
}

// ArtifactDeploymentStatusPropertiesInput is an input type that accepts ArtifactDeploymentStatusPropertiesArgs and ArtifactDeploymentStatusPropertiesOutput values.
// You can construct a concrete instance of `ArtifactDeploymentStatusPropertiesInput` via:
//
//          ArtifactDeploymentStatusPropertiesArgs{...}
type ArtifactDeploymentStatusPropertiesInput interface {
	pulumi.Input

	ToArtifactDeploymentStatusPropertiesOutput() ArtifactDeploymentStatusPropertiesOutput
	ToArtifactDeploymentStatusPropertiesOutputWithContext(context.Context) ArtifactDeploymentStatusPropertiesOutput
}

// Properties of an artifact deployment.
type ArtifactDeploymentStatusPropertiesArgs struct {
	// The total count of the artifacts that were successfully applied.
	ArtifactsApplied pulumi.IntPtrInput `pulumi:"artifactsApplied"`
	// The deployment status of the artifact.
	DeploymentStatus pulumi.StringPtrInput `pulumi:"deploymentStatus"`
	// The total count of the artifacts that were tentatively applied.
	TotalArtifacts pulumi.IntPtrInput `pulumi:"totalArtifacts"`
}

func (ArtifactDeploymentStatusPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactDeploymentStatusProperties)(nil)).Elem()
}

func (i ArtifactDeploymentStatusPropertiesArgs) ToArtifactDeploymentStatusPropertiesOutput() ArtifactDeploymentStatusPropertiesOutput {
	return i.ToArtifactDeploymentStatusPropertiesOutputWithContext(context.Background())
}

func (i ArtifactDeploymentStatusPropertiesArgs) ToArtifactDeploymentStatusPropertiesOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactDeploymentStatusPropertiesOutput)
}

func (i ArtifactDeploymentStatusPropertiesArgs) ToArtifactDeploymentStatusPropertiesPtrOutput() ArtifactDeploymentStatusPropertiesPtrOutput {
	return i.ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(context.Background())
}

func (i ArtifactDeploymentStatusPropertiesArgs) ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactDeploymentStatusPropertiesOutput).ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(ctx)
}

// ArtifactDeploymentStatusPropertiesPtrInput is an input type that accepts ArtifactDeploymentStatusPropertiesArgs, ArtifactDeploymentStatusPropertiesPtr and ArtifactDeploymentStatusPropertiesPtrOutput values.
// You can construct a concrete instance of `ArtifactDeploymentStatusPropertiesPtrInput` via:
//
//          ArtifactDeploymentStatusPropertiesArgs{...}
//
//  or:
//
//          nil
type ArtifactDeploymentStatusPropertiesPtrInput interface {
	pulumi.Input

	ToArtifactDeploymentStatusPropertiesPtrOutput() ArtifactDeploymentStatusPropertiesPtrOutput
	ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(context.Context) ArtifactDeploymentStatusPropertiesPtrOutput
}

type artifactDeploymentStatusPropertiesPtrType ArtifactDeploymentStatusPropertiesArgs

func ArtifactDeploymentStatusPropertiesPtr(v *ArtifactDeploymentStatusPropertiesArgs) ArtifactDeploymentStatusPropertiesPtrInput {
	return (*artifactDeploymentStatusPropertiesPtrType)(v)
}

func (*artifactDeploymentStatusPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactDeploymentStatusProperties)(nil)).Elem()
}

func (i *artifactDeploymentStatusPropertiesPtrType) ToArtifactDeploymentStatusPropertiesPtrOutput() ArtifactDeploymentStatusPropertiesPtrOutput {
	return i.ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(context.Background())
}

func (i *artifactDeploymentStatusPropertiesPtrType) ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactDeploymentStatusPropertiesPtrOutput)
}

// Properties of an artifact deployment.
type ArtifactDeploymentStatusPropertiesOutput struct{ *pulumi.OutputState }

func (ArtifactDeploymentStatusPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactDeploymentStatusProperties)(nil)).Elem()
}

func (o ArtifactDeploymentStatusPropertiesOutput) ToArtifactDeploymentStatusPropertiesOutput() ArtifactDeploymentStatusPropertiesOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesOutput) ToArtifactDeploymentStatusPropertiesOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesOutput) ToArtifactDeploymentStatusPropertiesPtrOutput() ArtifactDeploymentStatusPropertiesPtrOutput {
	return o.ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(context.Background())
}

func (o ArtifactDeploymentStatusPropertiesOutput) ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesPtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusProperties) *ArtifactDeploymentStatusProperties {
		return &v
	}).(ArtifactDeploymentStatusPropertiesPtrOutput)
}

// The total count of the artifacts that were successfully applied.
func (o ArtifactDeploymentStatusPropertiesOutput) ArtifactsApplied() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusProperties) *int { return v.ArtifactsApplied }).(pulumi.IntPtrOutput)
}

// The deployment status of the artifact.
func (o ArtifactDeploymentStatusPropertiesOutput) DeploymentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusProperties) *string { return v.DeploymentStatus }).(pulumi.StringPtrOutput)
}

// The total count of the artifacts that were tentatively applied.
func (o ArtifactDeploymentStatusPropertiesOutput) TotalArtifacts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusProperties) *int { return v.TotalArtifacts }).(pulumi.IntPtrOutput)
}

type ArtifactDeploymentStatusPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ArtifactDeploymentStatusPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactDeploymentStatusProperties)(nil)).Elem()
}

func (o ArtifactDeploymentStatusPropertiesPtrOutput) ToArtifactDeploymentStatusPropertiesPtrOutput() ArtifactDeploymentStatusPropertiesPtrOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesPtrOutput) ToArtifactDeploymentStatusPropertiesPtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesPtrOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesPtrOutput) Elem() ArtifactDeploymentStatusPropertiesOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusProperties) ArtifactDeploymentStatusProperties { return *v }).(ArtifactDeploymentStatusPropertiesOutput)
}

// The total count of the artifacts that were successfully applied.
func (o ArtifactDeploymentStatusPropertiesPtrOutput) ArtifactsApplied() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusProperties) *int {
		if v == nil {
			return nil
		}
		return v.ArtifactsApplied
	}).(pulumi.IntPtrOutput)
}

// The deployment status of the artifact.
func (o ArtifactDeploymentStatusPropertiesPtrOutput) DeploymentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentStatus
	}).(pulumi.StringPtrOutput)
}

// The total count of the artifacts that were tentatively applied.
func (o ArtifactDeploymentStatusPropertiesPtrOutput) TotalArtifacts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusProperties) *int {
		if v == nil {
			return nil
		}
		return v.TotalArtifacts
	}).(pulumi.IntPtrOutput)
}

// Properties of an artifact deployment.
type ArtifactDeploymentStatusPropertiesResponse struct {
	// The total count of the artifacts that were successfully applied.
	ArtifactsApplied *int `pulumi:"artifactsApplied"`
	// The deployment status of the artifact.
	DeploymentStatus *string `pulumi:"deploymentStatus"`
	// The total count of the artifacts that were tentatively applied.
	TotalArtifacts *int `pulumi:"totalArtifacts"`
}

// ArtifactDeploymentStatusPropertiesResponseInput is an input type that accepts ArtifactDeploymentStatusPropertiesResponseArgs and ArtifactDeploymentStatusPropertiesResponseOutput values.
// You can construct a concrete instance of `ArtifactDeploymentStatusPropertiesResponseInput` via:
//
//          ArtifactDeploymentStatusPropertiesResponseArgs{...}
type ArtifactDeploymentStatusPropertiesResponseInput interface {
	pulumi.Input

	ToArtifactDeploymentStatusPropertiesResponseOutput() ArtifactDeploymentStatusPropertiesResponseOutput
	ToArtifactDeploymentStatusPropertiesResponseOutputWithContext(context.Context) ArtifactDeploymentStatusPropertiesResponseOutput
}

// Properties of an artifact deployment.
type ArtifactDeploymentStatusPropertiesResponseArgs struct {
	// The total count of the artifacts that were successfully applied.
	ArtifactsApplied pulumi.IntPtrInput `pulumi:"artifactsApplied"`
	// The deployment status of the artifact.
	DeploymentStatus pulumi.StringPtrInput `pulumi:"deploymentStatus"`
	// The total count of the artifacts that were tentatively applied.
	TotalArtifacts pulumi.IntPtrInput `pulumi:"totalArtifacts"`
}

func (ArtifactDeploymentStatusPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactDeploymentStatusPropertiesResponse)(nil)).Elem()
}

func (i ArtifactDeploymentStatusPropertiesResponseArgs) ToArtifactDeploymentStatusPropertiesResponseOutput() ArtifactDeploymentStatusPropertiesResponseOutput {
	return i.ToArtifactDeploymentStatusPropertiesResponseOutputWithContext(context.Background())
}

func (i ArtifactDeploymentStatusPropertiesResponseArgs) ToArtifactDeploymentStatusPropertiesResponseOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactDeploymentStatusPropertiesResponseOutput)
}

func (i ArtifactDeploymentStatusPropertiesResponseArgs) ToArtifactDeploymentStatusPropertiesResponsePtrOutput() ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return i.ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ArtifactDeploymentStatusPropertiesResponseArgs) ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactDeploymentStatusPropertiesResponseOutput).ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(ctx)
}

// ArtifactDeploymentStatusPropertiesResponsePtrInput is an input type that accepts ArtifactDeploymentStatusPropertiesResponseArgs, ArtifactDeploymentStatusPropertiesResponsePtr and ArtifactDeploymentStatusPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ArtifactDeploymentStatusPropertiesResponsePtrInput` via:
//
//          ArtifactDeploymentStatusPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ArtifactDeploymentStatusPropertiesResponsePtrInput interface {
	pulumi.Input

	ToArtifactDeploymentStatusPropertiesResponsePtrOutput() ArtifactDeploymentStatusPropertiesResponsePtrOutput
	ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(context.Context) ArtifactDeploymentStatusPropertiesResponsePtrOutput
}

type artifactDeploymentStatusPropertiesResponsePtrType ArtifactDeploymentStatusPropertiesResponseArgs

func ArtifactDeploymentStatusPropertiesResponsePtr(v *ArtifactDeploymentStatusPropertiesResponseArgs) ArtifactDeploymentStatusPropertiesResponsePtrInput {
	return (*artifactDeploymentStatusPropertiesResponsePtrType)(v)
}

func (*artifactDeploymentStatusPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactDeploymentStatusPropertiesResponse)(nil)).Elem()
}

func (i *artifactDeploymentStatusPropertiesResponsePtrType) ToArtifactDeploymentStatusPropertiesResponsePtrOutput() ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return i.ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *artifactDeploymentStatusPropertiesResponsePtrType) ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactDeploymentStatusPropertiesResponsePtrOutput)
}

// Properties of an artifact deployment.
type ArtifactDeploymentStatusPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ArtifactDeploymentStatusPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactDeploymentStatusPropertiesResponse)(nil)).Elem()
}

func (o ArtifactDeploymentStatusPropertiesResponseOutput) ToArtifactDeploymentStatusPropertiesResponseOutput() ArtifactDeploymentStatusPropertiesResponseOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesResponseOutput) ToArtifactDeploymentStatusPropertiesResponseOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesResponseOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesResponseOutput) ToArtifactDeploymentStatusPropertiesResponsePtrOutput() ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return o.ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ArtifactDeploymentStatusPropertiesResponseOutput) ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusPropertiesResponse) *ArtifactDeploymentStatusPropertiesResponse {
		return &v
	}).(ArtifactDeploymentStatusPropertiesResponsePtrOutput)
}

// The total count of the artifacts that were successfully applied.
func (o ArtifactDeploymentStatusPropertiesResponseOutput) ArtifactsApplied() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusPropertiesResponse) *int { return v.ArtifactsApplied }).(pulumi.IntPtrOutput)
}

// The deployment status of the artifact.
func (o ArtifactDeploymentStatusPropertiesResponseOutput) DeploymentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusPropertiesResponse) *string { return v.DeploymentStatus }).(pulumi.StringPtrOutput)
}

// The total count of the artifacts that were tentatively applied.
func (o ArtifactDeploymentStatusPropertiesResponseOutput) TotalArtifacts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ArtifactDeploymentStatusPropertiesResponse) *int { return v.TotalArtifacts }).(pulumi.IntPtrOutput)
}

type ArtifactDeploymentStatusPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ArtifactDeploymentStatusPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactDeploymentStatusPropertiesResponse)(nil)).Elem()
}

func (o ArtifactDeploymentStatusPropertiesResponsePtrOutput) ToArtifactDeploymentStatusPropertiesResponsePtrOutput() ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesResponsePtrOutput) ToArtifactDeploymentStatusPropertiesResponsePtrOutputWithContext(ctx context.Context) ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return o
}

func (o ArtifactDeploymentStatusPropertiesResponsePtrOutput) Elem() ArtifactDeploymentStatusPropertiesResponseOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusPropertiesResponse) ArtifactDeploymentStatusPropertiesResponse {
		return *v
	}).(ArtifactDeploymentStatusPropertiesResponseOutput)
}

// The total count of the artifacts that were successfully applied.
func (o ArtifactDeploymentStatusPropertiesResponsePtrOutput) ArtifactsApplied() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.ArtifactsApplied
	}).(pulumi.IntPtrOutput)
}

// The deployment status of the artifact.
func (o ArtifactDeploymentStatusPropertiesResponsePtrOutput) DeploymentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentStatus
	}).(pulumi.StringPtrOutput)
}

// The total count of the artifacts that were tentatively applied.
func (o ArtifactDeploymentStatusPropertiesResponsePtrOutput) TotalArtifacts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ArtifactDeploymentStatusPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.TotalArtifacts
	}).(pulumi.IntPtrOutput)
}

// Properties of an artifact.
type ArtifactInstallProperties struct {
	// The artifact's identifier.
	ArtifactId *string `pulumi:"artifactId"`
	// The parameters of the artifact.
	Parameters []ArtifactParameterProperties `pulumi:"parameters"`
}

// ArtifactInstallPropertiesInput is an input type that accepts ArtifactInstallPropertiesArgs and ArtifactInstallPropertiesOutput values.
// You can construct a concrete instance of `ArtifactInstallPropertiesInput` via:
//
//          ArtifactInstallPropertiesArgs{...}
type ArtifactInstallPropertiesInput interface {
	pulumi.Input

	ToArtifactInstallPropertiesOutput() ArtifactInstallPropertiesOutput
	ToArtifactInstallPropertiesOutputWithContext(context.Context) ArtifactInstallPropertiesOutput
}

// Properties of an artifact.
type ArtifactInstallPropertiesArgs struct {
	// The artifact's identifier.
	ArtifactId pulumi.StringPtrInput `pulumi:"artifactId"`
	// The parameters of the artifact.
	Parameters ArtifactParameterPropertiesArrayInput `pulumi:"parameters"`
}

func (ArtifactInstallPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactInstallProperties)(nil)).Elem()
}

func (i ArtifactInstallPropertiesArgs) ToArtifactInstallPropertiesOutput() ArtifactInstallPropertiesOutput {
	return i.ToArtifactInstallPropertiesOutputWithContext(context.Background())
}

func (i ArtifactInstallPropertiesArgs) ToArtifactInstallPropertiesOutputWithContext(ctx context.Context) ArtifactInstallPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactInstallPropertiesOutput)
}

// ArtifactInstallPropertiesArrayInput is an input type that accepts ArtifactInstallPropertiesArray and ArtifactInstallPropertiesArrayOutput values.
// You can construct a concrete instance of `ArtifactInstallPropertiesArrayInput` via:
//
//          ArtifactInstallPropertiesArray{ ArtifactInstallPropertiesArgs{...} }
type ArtifactInstallPropertiesArrayInput interface {
	pulumi.Input

	ToArtifactInstallPropertiesArrayOutput() ArtifactInstallPropertiesArrayOutput
	ToArtifactInstallPropertiesArrayOutputWithContext(context.Context) ArtifactInstallPropertiesArrayOutput
}

type ArtifactInstallPropertiesArray []ArtifactInstallPropertiesInput

func (ArtifactInstallPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactInstallProperties)(nil)).Elem()
}

func (i ArtifactInstallPropertiesArray) ToArtifactInstallPropertiesArrayOutput() ArtifactInstallPropertiesArrayOutput {
	return i.ToArtifactInstallPropertiesArrayOutputWithContext(context.Background())
}

func (i ArtifactInstallPropertiesArray) ToArtifactInstallPropertiesArrayOutputWithContext(ctx context.Context) ArtifactInstallPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactInstallPropertiesArrayOutput)
}

// Properties of an artifact.
type ArtifactInstallPropertiesOutput struct{ *pulumi.OutputState }

func (ArtifactInstallPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactInstallProperties)(nil)).Elem()
}

func (o ArtifactInstallPropertiesOutput) ToArtifactInstallPropertiesOutput() ArtifactInstallPropertiesOutput {
	return o
}

func (o ArtifactInstallPropertiesOutput) ToArtifactInstallPropertiesOutputWithContext(ctx context.Context) ArtifactInstallPropertiesOutput {
	return o
}

// The artifact's identifier.
func (o ArtifactInstallPropertiesOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallProperties) *string { return v.ArtifactId }).(pulumi.StringPtrOutput)
}

// The parameters of the artifact.
func (o ArtifactInstallPropertiesOutput) Parameters() ArtifactParameterPropertiesArrayOutput {
	return o.ApplyT(func(v ArtifactInstallProperties) []ArtifactParameterProperties { return v.Parameters }).(ArtifactParameterPropertiesArrayOutput)
}

type ArtifactInstallPropertiesArrayOutput struct{ *pulumi.OutputState }

func (ArtifactInstallPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactInstallProperties)(nil)).Elem()
}

func (o ArtifactInstallPropertiesArrayOutput) ToArtifactInstallPropertiesArrayOutput() ArtifactInstallPropertiesArrayOutput {
	return o
}

func (o ArtifactInstallPropertiesArrayOutput) ToArtifactInstallPropertiesArrayOutputWithContext(ctx context.Context) ArtifactInstallPropertiesArrayOutput {
	return o
}

func (o ArtifactInstallPropertiesArrayOutput) Index(i pulumi.IntInput) ArtifactInstallPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArtifactInstallProperties {
		return vs[0].([]ArtifactInstallProperties)[vs[1].(int)]
	}).(ArtifactInstallPropertiesOutput)
}

// Properties of an artifact.
type ArtifactInstallPropertiesResponse struct {
	// The artifact's identifier.
	ArtifactId *string `pulumi:"artifactId"`
	// The parameters of the artifact.
	Parameters []ArtifactParameterPropertiesResponse `pulumi:"parameters"`
}

// ArtifactInstallPropertiesResponseInput is an input type that accepts ArtifactInstallPropertiesResponseArgs and ArtifactInstallPropertiesResponseOutput values.
// You can construct a concrete instance of `ArtifactInstallPropertiesResponseInput` via:
//
//          ArtifactInstallPropertiesResponseArgs{...}
type ArtifactInstallPropertiesResponseInput interface {
	pulumi.Input

	ToArtifactInstallPropertiesResponseOutput() ArtifactInstallPropertiesResponseOutput
	ToArtifactInstallPropertiesResponseOutputWithContext(context.Context) ArtifactInstallPropertiesResponseOutput
}

// Properties of an artifact.
type ArtifactInstallPropertiesResponseArgs struct {
	// The artifact's identifier.
	ArtifactId pulumi.StringPtrInput `pulumi:"artifactId"`
	// The parameters of the artifact.
	Parameters ArtifactParameterPropertiesResponseArrayInput `pulumi:"parameters"`
}

func (ArtifactInstallPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactInstallPropertiesResponse)(nil)).Elem()
}

func (i ArtifactInstallPropertiesResponseArgs) ToArtifactInstallPropertiesResponseOutput() ArtifactInstallPropertiesResponseOutput {
	return i.ToArtifactInstallPropertiesResponseOutputWithContext(context.Background())
}

func (i ArtifactInstallPropertiesResponseArgs) ToArtifactInstallPropertiesResponseOutputWithContext(ctx context.Context) ArtifactInstallPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactInstallPropertiesResponseOutput)
}

// ArtifactInstallPropertiesResponseArrayInput is an input type that accepts ArtifactInstallPropertiesResponseArray and ArtifactInstallPropertiesResponseArrayOutput values.
// You can construct a concrete instance of `ArtifactInstallPropertiesResponseArrayInput` via:
//
//          ArtifactInstallPropertiesResponseArray{ ArtifactInstallPropertiesResponseArgs{...} }
type ArtifactInstallPropertiesResponseArrayInput interface {
	pulumi.Input

	ToArtifactInstallPropertiesResponseArrayOutput() ArtifactInstallPropertiesResponseArrayOutput
	ToArtifactInstallPropertiesResponseArrayOutputWithContext(context.Context) ArtifactInstallPropertiesResponseArrayOutput
}

type ArtifactInstallPropertiesResponseArray []ArtifactInstallPropertiesResponseInput

func (ArtifactInstallPropertiesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactInstallPropertiesResponse)(nil)).Elem()
}

func (i ArtifactInstallPropertiesResponseArray) ToArtifactInstallPropertiesResponseArrayOutput() ArtifactInstallPropertiesResponseArrayOutput {
	return i.ToArtifactInstallPropertiesResponseArrayOutputWithContext(context.Background())
}

func (i ArtifactInstallPropertiesResponseArray) ToArtifactInstallPropertiesResponseArrayOutputWithContext(ctx context.Context) ArtifactInstallPropertiesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactInstallPropertiesResponseArrayOutput)
}

// Properties of an artifact.
type ArtifactInstallPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ArtifactInstallPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactInstallPropertiesResponse)(nil)).Elem()
}

func (o ArtifactInstallPropertiesResponseOutput) ToArtifactInstallPropertiesResponseOutput() ArtifactInstallPropertiesResponseOutput {
	return o
}

func (o ArtifactInstallPropertiesResponseOutput) ToArtifactInstallPropertiesResponseOutputWithContext(ctx context.Context) ArtifactInstallPropertiesResponseOutput {
	return o
}

// The artifact's identifier.
func (o ArtifactInstallPropertiesResponseOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactInstallPropertiesResponse) *string { return v.ArtifactId }).(pulumi.StringPtrOutput)
}

// The parameters of the artifact.
func (o ArtifactInstallPropertiesResponseOutput) Parameters() ArtifactParameterPropertiesResponseArrayOutput {
	return o.ApplyT(func(v ArtifactInstallPropertiesResponse) []ArtifactParameterPropertiesResponse { return v.Parameters }).(ArtifactParameterPropertiesResponseArrayOutput)
}

type ArtifactInstallPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (ArtifactInstallPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactInstallPropertiesResponse)(nil)).Elem()
}

func (o ArtifactInstallPropertiesResponseArrayOutput) ToArtifactInstallPropertiesResponseArrayOutput() ArtifactInstallPropertiesResponseArrayOutput {
	return o
}

func (o ArtifactInstallPropertiesResponseArrayOutput) ToArtifactInstallPropertiesResponseArrayOutputWithContext(ctx context.Context) ArtifactInstallPropertiesResponseArrayOutput {
	return o
}

func (o ArtifactInstallPropertiesResponseArrayOutput) Index(i pulumi.IntInput) ArtifactInstallPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArtifactInstallPropertiesResponse {
		return vs[0].([]ArtifactInstallPropertiesResponse)[vs[1].(int)]
	}).(ArtifactInstallPropertiesResponseOutput)
}

// Properties of an artifact parameter.
type ArtifactParameterProperties struct {
	// The name of the artifact parameter.
	Name *string `pulumi:"name"`
	// The value of the artifact parameter.
	Value *string `pulumi:"value"`
}

// ArtifactParameterPropertiesInput is an input type that accepts ArtifactParameterPropertiesArgs and ArtifactParameterPropertiesOutput values.
// You can construct a concrete instance of `ArtifactParameterPropertiesInput` via:
//
//          ArtifactParameterPropertiesArgs{...}
type ArtifactParameterPropertiesInput interface {
	pulumi.Input

	ToArtifactParameterPropertiesOutput() ArtifactParameterPropertiesOutput
	ToArtifactParameterPropertiesOutputWithContext(context.Context) ArtifactParameterPropertiesOutput
}

// Properties of an artifact parameter.
type ArtifactParameterPropertiesArgs struct {
	// The name of the artifact parameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the artifact parameter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ArtifactParameterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactParameterProperties)(nil)).Elem()
}

func (i ArtifactParameterPropertiesArgs) ToArtifactParameterPropertiesOutput() ArtifactParameterPropertiesOutput {
	return i.ToArtifactParameterPropertiesOutputWithContext(context.Background())
}

func (i ArtifactParameterPropertiesArgs) ToArtifactParameterPropertiesOutputWithContext(ctx context.Context) ArtifactParameterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactParameterPropertiesOutput)
}

// ArtifactParameterPropertiesArrayInput is an input type that accepts ArtifactParameterPropertiesArray and ArtifactParameterPropertiesArrayOutput values.
// You can construct a concrete instance of `ArtifactParameterPropertiesArrayInput` via:
//
//          ArtifactParameterPropertiesArray{ ArtifactParameterPropertiesArgs{...} }
type ArtifactParameterPropertiesArrayInput interface {
	pulumi.Input

	ToArtifactParameterPropertiesArrayOutput() ArtifactParameterPropertiesArrayOutput
	ToArtifactParameterPropertiesArrayOutputWithContext(context.Context) ArtifactParameterPropertiesArrayOutput
}

type ArtifactParameterPropertiesArray []ArtifactParameterPropertiesInput

func (ArtifactParameterPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactParameterProperties)(nil)).Elem()
}

func (i ArtifactParameterPropertiesArray) ToArtifactParameterPropertiesArrayOutput() ArtifactParameterPropertiesArrayOutput {
	return i.ToArtifactParameterPropertiesArrayOutputWithContext(context.Background())
}

func (i ArtifactParameterPropertiesArray) ToArtifactParameterPropertiesArrayOutputWithContext(ctx context.Context) ArtifactParameterPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactParameterPropertiesArrayOutput)
}

// Properties of an artifact parameter.
type ArtifactParameterPropertiesOutput struct{ *pulumi.OutputState }

func (ArtifactParameterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactParameterProperties)(nil)).Elem()
}

func (o ArtifactParameterPropertiesOutput) ToArtifactParameterPropertiesOutput() ArtifactParameterPropertiesOutput {
	return o
}

func (o ArtifactParameterPropertiesOutput) ToArtifactParameterPropertiesOutputWithContext(ctx context.Context) ArtifactParameterPropertiesOutput {
	return o
}

// The name of the artifact parameter.
func (o ArtifactParameterPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactParameterProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the artifact parameter.
func (o ArtifactParameterPropertiesOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactParameterProperties) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ArtifactParameterPropertiesArrayOutput struct{ *pulumi.OutputState }

func (ArtifactParameterPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactParameterProperties)(nil)).Elem()
}

func (o ArtifactParameterPropertiesArrayOutput) ToArtifactParameterPropertiesArrayOutput() ArtifactParameterPropertiesArrayOutput {
	return o
}

func (o ArtifactParameterPropertiesArrayOutput) ToArtifactParameterPropertiesArrayOutputWithContext(ctx context.Context) ArtifactParameterPropertiesArrayOutput {
	return o
}

func (o ArtifactParameterPropertiesArrayOutput) Index(i pulumi.IntInput) ArtifactParameterPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArtifactParameterProperties {
		return vs[0].([]ArtifactParameterProperties)[vs[1].(int)]
	}).(ArtifactParameterPropertiesOutput)
}

// Properties of an artifact parameter.
type ArtifactParameterPropertiesResponse struct {
	// The name of the artifact parameter.
	Name *string `pulumi:"name"`
	// The value of the artifact parameter.
	Value *string `pulumi:"value"`
}

// ArtifactParameterPropertiesResponseInput is an input type that accepts ArtifactParameterPropertiesResponseArgs and ArtifactParameterPropertiesResponseOutput values.
// You can construct a concrete instance of `ArtifactParameterPropertiesResponseInput` via:
//
//          ArtifactParameterPropertiesResponseArgs{...}
type ArtifactParameterPropertiesResponseInput interface {
	pulumi.Input

	ToArtifactParameterPropertiesResponseOutput() ArtifactParameterPropertiesResponseOutput
	ToArtifactParameterPropertiesResponseOutputWithContext(context.Context) ArtifactParameterPropertiesResponseOutput
}

// Properties of an artifact parameter.
type ArtifactParameterPropertiesResponseArgs struct {
	// The name of the artifact parameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the artifact parameter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ArtifactParameterPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactParameterPropertiesResponse)(nil)).Elem()
}

func (i ArtifactParameterPropertiesResponseArgs) ToArtifactParameterPropertiesResponseOutput() ArtifactParameterPropertiesResponseOutput {
	return i.ToArtifactParameterPropertiesResponseOutputWithContext(context.Background())
}

func (i ArtifactParameterPropertiesResponseArgs) ToArtifactParameterPropertiesResponseOutputWithContext(ctx context.Context) ArtifactParameterPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactParameterPropertiesResponseOutput)
}

// ArtifactParameterPropertiesResponseArrayInput is an input type that accepts ArtifactParameterPropertiesResponseArray and ArtifactParameterPropertiesResponseArrayOutput values.
// You can construct a concrete instance of `ArtifactParameterPropertiesResponseArrayInput` via:
//
//          ArtifactParameterPropertiesResponseArray{ ArtifactParameterPropertiesResponseArgs{...} }
type ArtifactParameterPropertiesResponseArrayInput interface {
	pulumi.Input

	ToArtifactParameterPropertiesResponseArrayOutput() ArtifactParameterPropertiesResponseArrayOutput
	ToArtifactParameterPropertiesResponseArrayOutputWithContext(context.Context) ArtifactParameterPropertiesResponseArrayOutput
}

type ArtifactParameterPropertiesResponseArray []ArtifactParameterPropertiesResponseInput

func (ArtifactParameterPropertiesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactParameterPropertiesResponse)(nil)).Elem()
}

func (i ArtifactParameterPropertiesResponseArray) ToArtifactParameterPropertiesResponseArrayOutput() ArtifactParameterPropertiesResponseArrayOutput {
	return i.ToArtifactParameterPropertiesResponseArrayOutputWithContext(context.Background())
}

func (i ArtifactParameterPropertiesResponseArray) ToArtifactParameterPropertiesResponseArrayOutputWithContext(ctx context.Context) ArtifactParameterPropertiesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactParameterPropertiesResponseArrayOutput)
}

// Properties of an artifact parameter.
type ArtifactParameterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ArtifactParameterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactParameterPropertiesResponse)(nil)).Elem()
}

func (o ArtifactParameterPropertiesResponseOutput) ToArtifactParameterPropertiesResponseOutput() ArtifactParameterPropertiesResponseOutput {
	return o
}

func (o ArtifactParameterPropertiesResponseOutput) ToArtifactParameterPropertiesResponseOutputWithContext(ctx context.Context) ArtifactParameterPropertiesResponseOutput {
	return o
}

// The name of the artifact parameter.
func (o ArtifactParameterPropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactParameterPropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the artifact parameter.
func (o ArtifactParameterPropertiesResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactParameterPropertiesResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ArtifactParameterPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (ArtifactParameterPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArtifactParameterPropertiesResponse)(nil)).Elem()
}

func (o ArtifactParameterPropertiesResponseArrayOutput) ToArtifactParameterPropertiesResponseArrayOutput() ArtifactParameterPropertiesResponseArrayOutput {
	return o
}

func (o ArtifactParameterPropertiesResponseArrayOutput) ToArtifactParameterPropertiesResponseArrayOutputWithContext(ctx context.Context) ArtifactParameterPropertiesResponseArrayOutput {
	return o
}

func (o ArtifactParameterPropertiesResponseArrayOutput) Index(i pulumi.IntInput) ArtifactParameterPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArtifactParameterPropertiesResponse {
		return vs[0].([]ArtifactParameterPropertiesResponse)[vs[1].(int)]
	}).(ArtifactParameterPropertiesResponseOutput)
}

// Properties for creating a custom image from a VHD.
type CustomImagePropertiesCustom struct {
	// The image name.
	ImageName *string `pulumi:"imageName"`
	// Indicates whether sysprep has been run on the VHD.
	SysPrep *bool `pulumi:"sysPrep"`
}

// CustomImagePropertiesCustomInput is an input type that accepts CustomImagePropertiesCustomArgs and CustomImagePropertiesCustomOutput values.
// You can construct a concrete instance of `CustomImagePropertiesCustomInput` via:
//
//          CustomImagePropertiesCustomArgs{...}
type CustomImagePropertiesCustomInput interface {
	pulumi.Input

	ToCustomImagePropertiesCustomOutput() CustomImagePropertiesCustomOutput
	ToCustomImagePropertiesCustomOutputWithContext(context.Context) CustomImagePropertiesCustomOutput
}

// Properties for creating a custom image from a VHD.
type CustomImagePropertiesCustomArgs struct {
	// The image name.
	ImageName pulumi.StringPtrInput `pulumi:"imageName"`
	// Indicates whether sysprep has been run on the VHD.
	SysPrep pulumi.BoolPtrInput `pulumi:"sysPrep"`
}

func (CustomImagePropertiesCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesCustom)(nil)).Elem()
}

func (i CustomImagePropertiesCustomArgs) ToCustomImagePropertiesCustomOutput() CustomImagePropertiesCustomOutput {
	return i.ToCustomImagePropertiesCustomOutputWithContext(context.Background())
}

func (i CustomImagePropertiesCustomArgs) ToCustomImagePropertiesCustomOutputWithContext(ctx context.Context) CustomImagePropertiesCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesCustomOutput)
}

func (i CustomImagePropertiesCustomArgs) ToCustomImagePropertiesCustomPtrOutput() CustomImagePropertiesCustomPtrOutput {
	return i.ToCustomImagePropertiesCustomPtrOutputWithContext(context.Background())
}

func (i CustomImagePropertiesCustomArgs) ToCustomImagePropertiesCustomPtrOutputWithContext(ctx context.Context) CustomImagePropertiesCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesCustomOutput).ToCustomImagePropertiesCustomPtrOutputWithContext(ctx)
}

// CustomImagePropertiesCustomPtrInput is an input type that accepts CustomImagePropertiesCustomArgs, CustomImagePropertiesCustomPtr and CustomImagePropertiesCustomPtrOutput values.
// You can construct a concrete instance of `CustomImagePropertiesCustomPtrInput` via:
//
//          CustomImagePropertiesCustomArgs{...}
//
//  or:
//
//          nil
type CustomImagePropertiesCustomPtrInput interface {
	pulumi.Input

	ToCustomImagePropertiesCustomPtrOutput() CustomImagePropertiesCustomPtrOutput
	ToCustomImagePropertiesCustomPtrOutputWithContext(context.Context) CustomImagePropertiesCustomPtrOutput
}

type customImagePropertiesCustomPtrType CustomImagePropertiesCustomArgs

func CustomImagePropertiesCustomPtr(v *CustomImagePropertiesCustomArgs) CustomImagePropertiesCustomPtrInput {
	return (*customImagePropertiesCustomPtrType)(v)
}

func (*customImagePropertiesCustomPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesCustom)(nil)).Elem()
}

func (i *customImagePropertiesCustomPtrType) ToCustomImagePropertiesCustomPtrOutput() CustomImagePropertiesCustomPtrOutput {
	return i.ToCustomImagePropertiesCustomPtrOutputWithContext(context.Background())
}

func (i *customImagePropertiesCustomPtrType) ToCustomImagePropertiesCustomPtrOutputWithContext(ctx context.Context) CustomImagePropertiesCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesCustomPtrOutput)
}

// Properties for creating a custom image from a VHD.
type CustomImagePropertiesCustomOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesCustom)(nil)).Elem()
}

func (o CustomImagePropertiesCustomOutput) ToCustomImagePropertiesCustomOutput() CustomImagePropertiesCustomOutput {
	return o
}

func (o CustomImagePropertiesCustomOutput) ToCustomImagePropertiesCustomOutputWithContext(ctx context.Context) CustomImagePropertiesCustomOutput {
	return o
}

func (o CustomImagePropertiesCustomOutput) ToCustomImagePropertiesCustomPtrOutput() CustomImagePropertiesCustomPtrOutput {
	return o.ToCustomImagePropertiesCustomPtrOutputWithContext(context.Background())
}

func (o CustomImagePropertiesCustomOutput) ToCustomImagePropertiesCustomPtrOutputWithContext(ctx context.Context) CustomImagePropertiesCustomPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesCustom) *CustomImagePropertiesCustom {
		return &v
	}).(CustomImagePropertiesCustomPtrOutput)
}

// The image name.
func (o CustomImagePropertiesCustomOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesCustom) *string { return v.ImageName }).(pulumi.StringPtrOutput)
}

// Indicates whether sysprep has been run on the VHD.
func (o CustomImagePropertiesCustomOutput) SysPrep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesCustom) *bool { return v.SysPrep }).(pulumi.BoolPtrOutput)
}

type CustomImagePropertiesCustomPtrOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesCustomPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesCustom)(nil)).Elem()
}

func (o CustomImagePropertiesCustomPtrOutput) ToCustomImagePropertiesCustomPtrOutput() CustomImagePropertiesCustomPtrOutput {
	return o
}

func (o CustomImagePropertiesCustomPtrOutput) ToCustomImagePropertiesCustomPtrOutputWithContext(ctx context.Context) CustomImagePropertiesCustomPtrOutput {
	return o
}

func (o CustomImagePropertiesCustomPtrOutput) Elem() CustomImagePropertiesCustomOutput {
	return o.ApplyT(func(v *CustomImagePropertiesCustom) CustomImagePropertiesCustom { return *v }).(CustomImagePropertiesCustomOutput)
}

// The image name.
func (o CustomImagePropertiesCustomPtrOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesCustom) *string {
		if v == nil {
			return nil
		}
		return v.ImageName
	}).(pulumi.StringPtrOutput)
}

// Indicates whether sysprep has been run on the VHD.
func (o CustomImagePropertiesCustomPtrOutput) SysPrep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesCustom) *bool {
		if v == nil {
			return nil
		}
		return v.SysPrep
	}).(pulumi.BoolPtrOutput)
}

// Properties for creating a custom image from a VHD.
type CustomImagePropertiesCustomResponse struct {
	// The image name.
	ImageName *string `pulumi:"imageName"`
	// Indicates whether sysprep has been run on the VHD.
	SysPrep *bool `pulumi:"sysPrep"`
}

// CustomImagePropertiesCustomResponseInput is an input type that accepts CustomImagePropertiesCustomResponseArgs and CustomImagePropertiesCustomResponseOutput values.
// You can construct a concrete instance of `CustomImagePropertiesCustomResponseInput` via:
//
//          CustomImagePropertiesCustomResponseArgs{...}
type CustomImagePropertiesCustomResponseInput interface {
	pulumi.Input

	ToCustomImagePropertiesCustomResponseOutput() CustomImagePropertiesCustomResponseOutput
	ToCustomImagePropertiesCustomResponseOutputWithContext(context.Context) CustomImagePropertiesCustomResponseOutput
}

// Properties for creating a custom image from a VHD.
type CustomImagePropertiesCustomResponseArgs struct {
	// The image name.
	ImageName pulumi.StringPtrInput `pulumi:"imageName"`
	// Indicates whether sysprep has been run on the VHD.
	SysPrep pulumi.BoolPtrInput `pulumi:"sysPrep"`
}

func (CustomImagePropertiesCustomResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesCustomResponse)(nil)).Elem()
}

func (i CustomImagePropertiesCustomResponseArgs) ToCustomImagePropertiesCustomResponseOutput() CustomImagePropertiesCustomResponseOutput {
	return i.ToCustomImagePropertiesCustomResponseOutputWithContext(context.Background())
}

func (i CustomImagePropertiesCustomResponseArgs) ToCustomImagePropertiesCustomResponseOutputWithContext(ctx context.Context) CustomImagePropertiesCustomResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesCustomResponseOutput)
}

func (i CustomImagePropertiesCustomResponseArgs) ToCustomImagePropertiesCustomResponsePtrOutput() CustomImagePropertiesCustomResponsePtrOutput {
	return i.ToCustomImagePropertiesCustomResponsePtrOutputWithContext(context.Background())
}

func (i CustomImagePropertiesCustomResponseArgs) ToCustomImagePropertiesCustomResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesCustomResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesCustomResponseOutput).ToCustomImagePropertiesCustomResponsePtrOutputWithContext(ctx)
}

// CustomImagePropertiesCustomResponsePtrInput is an input type that accepts CustomImagePropertiesCustomResponseArgs, CustomImagePropertiesCustomResponsePtr and CustomImagePropertiesCustomResponsePtrOutput values.
// You can construct a concrete instance of `CustomImagePropertiesCustomResponsePtrInput` via:
//
//          CustomImagePropertiesCustomResponseArgs{...}
//
//  or:
//
//          nil
type CustomImagePropertiesCustomResponsePtrInput interface {
	pulumi.Input

	ToCustomImagePropertiesCustomResponsePtrOutput() CustomImagePropertiesCustomResponsePtrOutput
	ToCustomImagePropertiesCustomResponsePtrOutputWithContext(context.Context) CustomImagePropertiesCustomResponsePtrOutput
}

type customImagePropertiesCustomResponsePtrType CustomImagePropertiesCustomResponseArgs

func CustomImagePropertiesCustomResponsePtr(v *CustomImagePropertiesCustomResponseArgs) CustomImagePropertiesCustomResponsePtrInput {
	return (*customImagePropertiesCustomResponsePtrType)(v)
}

func (*customImagePropertiesCustomResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesCustomResponse)(nil)).Elem()
}

func (i *customImagePropertiesCustomResponsePtrType) ToCustomImagePropertiesCustomResponsePtrOutput() CustomImagePropertiesCustomResponsePtrOutput {
	return i.ToCustomImagePropertiesCustomResponsePtrOutputWithContext(context.Background())
}

func (i *customImagePropertiesCustomResponsePtrType) ToCustomImagePropertiesCustomResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesCustomResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesCustomResponsePtrOutput)
}

// Properties for creating a custom image from a VHD.
type CustomImagePropertiesCustomResponseOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesCustomResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesCustomResponse)(nil)).Elem()
}

func (o CustomImagePropertiesCustomResponseOutput) ToCustomImagePropertiesCustomResponseOutput() CustomImagePropertiesCustomResponseOutput {
	return o
}

func (o CustomImagePropertiesCustomResponseOutput) ToCustomImagePropertiesCustomResponseOutputWithContext(ctx context.Context) CustomImagePropertiesCustomResponseOutput {
	return o
}

func (o CustomImagePropertiesCustomResponseOutput) ToCustomImagePropertiesCustomResponsePtrOutput() CustomImagePropertiesCustomResponsePtrOutput {
	return o.ToCustomImagePropertiesCustomResponsePtrOutputWithContext(context.Background())
}

func (o CustomImagePropertiesCustomResponseOutput) ToCustomImagePropertiesCustomResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesCustomResponsePtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesCustomResponse) *CustomImagePropertiesCustomResponse {
		return &v
	}).(CustomImagePropertiesCustomResponsePtrOutput)
}

// The image name.
func (o CustomImagePropertiesCustomResponseOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesCustomResponse) *string { return v.ImageName }).(pulumi.StringPtrOutput)
}

// Indicates whether sysprep has been run on the VHD.
func (o CustomImagePropertiesCustomResponseOutput) SysPrep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesCustomResponse) *bool { return v.SysPrep }).(pulumi.BoolPtrOutput)
}

type CustomImagePropertiesCustomResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesCustomResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesCustomResponse)(nil)).Elem()
}

func (o CustomImagePropertiesCustomResponsePtrOutput) ToCustomImagePropertiesCustomResponsePtrOutput() CustomImagePropertiesCustomResponsePtrOutput {
	return o
}

func (o CustomImagePropertiesCustomResponsePtrOutput) ToCustomImagePropertiesCustomResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesCustomResponsePtrOutput {
	return o
}

func (o CustomImagePropertiesCustomResponsePtrOutput) Elem() CustomImagePropertiesCustomResponseOutput {
	return o.ApplyT(func(v *CustomImagePropertiesCustomResponse) CustomImagePropertiesCustomResponse { return *v }).(CustomImagePropertiesCustomResponseOutput)
}

// The image name.
func (o CustomImagePropertiesCustomResponsePtrOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesCustomResponse) *string {
		if v == nil {
			return nil
		}
		return v.ImageName
	}).(pulumi.StringPtrOutput)
}

// Indicates whether sysprep has been run on the VHD.
func (o CustomImagePropertiesCustomResponsePtrOutput) SysPrep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesCustomResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SysPrep
	}).(pulumi.BoolPtrOutput)
}

// Properties for creating a custom image from a virtual machine.
type CustomImagePropertiesFromVm struct {
	// The Linux OS information of the VM.
	LinuxOsInfo *LinuxOsInfo `pulumi:"linuxOsInfo"`
	// The source vm identifier.
	SourceVmId *string `pulumi:"sourceVmId"`
	// Indicates whether sysprep has been run on the VHD.
	SysPrep *bool `pulumi:"sysPrep"`
	// The Windows OS information of the VM.
	WindowsOsInfo *WindowsOsInfo `pulumi:"windowsOsInfo"`
}

// CustomImagePropertiesFromVmInput is an input type that accepts CustomImagePropertiesFromVmArgs and CustomImagePropertiesFromVmOutput values.
// You can construct a concrete instance of `CustomImagePropertiesFromVmInput` via:
//
//          CustomImagePropertiesFromVmArgs{...}
type CustomImagePropertiesFromVmInput interface {
	pulumi.Input

	ToCustomImagePropertiesFromVmOutput() CustomImagePropertiesFromVmOutput
	ToCustomImagePropertiesFromVmOutputWithContext(context.Context) CustomImagePropertiesFromVmOutput
}

// Properties for creating a custom image from a virtual machine.
type CustomImagePropertiesFromVmArgs struct {
	// The Linux OS information of the VM.
	LinuxOsInfo LinuxOsInfoPtrInput `pulumi:"linuxOsInfo"`
	// The source vm identifier.
	SourceVmId pulumi.StringPtrInput `pulumi:"sourceVmId"`
	// Indicates whether sysprep has been run on the VHD.
	SysPrep pulumi.BoolPtrInput `pulumi:"sysPrep"`
	// The Windows OS information of the VM.
	WindowsOsInfo WindowsOsInfoPtrInput `pulumi:"windowsOsInfo"`
}

func (CustomImagePropertiesFromVmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesFromVm)(nil)).Elem()
}

func (i CustomImagePropertiesFromVmArgs) ToCustomImagePropertiesFromVmOutput() CustomImagePropertiesFromVmOutput {
	return i.ToCustomImagePropertiesFromVmOutputWithContext(context.Background())
}

func (i CustomImagePropertiesFromVmArgs) ToCustomImagePropertiesFromVmOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromVmOutput)
}

func (i CustomImagePropertiesFromVmArgs) ToCustomImagePropertiesFromVmPtrOutput() CustomImagePropertiesFromVmPtrOutput {
	return i.ToCustomImagePropertiesFromVmPtrOutputWithContext(context.Background())
}

func (i CustomImagePropertiesFromVmArgs) ToCustomImagePropertiesFromVmPtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromVmOutput).ToCustomImagePropertiesFromVmPtrOutputWithContext(ctx)
}

// CustomImagePropertiesFromVmPtrInput is an input type that accepts CustomImagePropertiesFromVmArgs, CustomImagePropertiesFromVmPtr and CustomImagePropertiesFromVmPtrOutput values.
// You can construct a concrete instance of `CustomImagePropertiesFromVmPtrInput` via:
//
//          CustomImagePropertiesFromVmArgs{...}
//
//  or:
//
//          nil
type CustomImagePropertiesFromVmPtrInput interface {
	pulumi.Input

	ToCustomImagePropertiesFromVmPtrOutput() CustomImagePropertiesFromVmPtrOutput
	ToCustomImagePropertiesFromVmPtrOutputWithContext(context.Context) CustomImagePropertiesFromVmPtrOutput
}

type customImagePropertiesFromVmPtrType CustomImagePropertiesFromVmArgs

func CustomImagePropertiesFromVmPtr(v *CustomImagePropertiesFromVmArgs) CustomImagePropertiesFromVmPtrInput {
	return (*customImagePropertiesFromVmPtrType)(v)
}

func (*customImagePropertiesFromVmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesFromVm)(nil)).Elem()
}

func (i *customImagePropertiesFromVmPtrType) ToCustomImagePropertiesFromVmPtrOutput() CustomImagePropertiesFromVmPtrOutput {
	return i.ToCustomImagePropertiesFromVmPtrOutputWithContext(context.Background())
}

func (i *customImagePropertiesFromVmPtrType) ToCustomImagePropertiesFromVmPtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromVmPtrOutput)
}

// Properties for creating a custom image from a virtual machine.
type CustomImagePropertiesFromVmOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesFromVmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesFromVm)(nil)).Elem()
}

func (o CustomImagePropertiesFromVmOutput) ToCustomImagePropertiesFromVmOutput() CustomImagePropertiesFromVmOutput {
	return o
}

func (o CustomImagePropertiesFromVmOutput) ToCustomImagePropertiesFromVmOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmOutput {
	return o
}

func (o CustomImagePropertiesFromVmOutput) ToCustomImagePropertiesFromVmPtrOutput() CustomImagePropertiesFromVmPtrOutput {
	return o.ToCustomImagePropertiesFromVmPtrOutputWithContext(context.Background())
}

func (o CustomImagePropertiesFromVmOutput) ToCustomImagePropertiesFromVmPtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVm) *CustomImagePropertiesFromVm {
		return &v
	}).(CustomImagePropertiesFromVmPtrOutput)
}

// The Linux OS information of the VM.
func (o CustomImagePropertiesFromVmOutput) LinuxOsInfo() LinuxOsInfoPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVm) *LinuxOsInfo { return v.LinuxOsInfo }).(LinuxOsInfoPtrOutput)
}

// The source vm identifier.
func (o CustomImagePropertiesFromVmOutput) SourceVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVm) *string { return v.SourceVmId }).(pulumi.StringPtrOutput)
}

// Indicates whether sysprep has been run on the VHD.
func (o CustomImagePropertiesFromVmOutput) SysPrep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVm) *bool { return v.SysPrep }).(pulumi.BoolPtrOutput)
}

// The Windows OS information of the VM.
func (o CustomImagePropertiesFromVmOutput) WindowsOsInfo() WindowsOsInfoPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVm) *WindowsOsInfo { return v.WindowsOsInfo }).(WindowsOsInfoPtrOutput)
}

type CustomImagePropertiesFromVmPtrOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesFromVmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesFromVm)(nil)).Elem()
}

func (o CustomImagePropertiesFromVmPtrOutput) ToCustomImagePropertiesFromVmPtrOutput() CustomImagePropertiesFromVmPtrOutput {
	return o
}

func (o CustomImagePropertiesFromVmPtrOutput) ToCustomImagePropertiesFromVmPtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmPtrOutput {
	return o
}

func (o CustomImagePropertiesFromVmPtrOutput) Elem() CustomImagePropertiesFromVmOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVm) CustomImagePropertiesFromVm { return *v }).(CustomImagePropertiesFromVmOutput)
}

// The Linux OS information of the VM.
func (o CustomImagePropertiesFromVmPtrOutput) LinuxOsInfo() LinuxOsInfoPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVm) *LinuxOsInfo {
		if v == nil {
			return nil
		}
		return v.LinuxOsInfo
	}).(LinuxOsInfoPtrOutput)
}

// The source vm identifier.
func (o CustomImagePropertiesFromVmPtrOutput) SourceVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVm) *string {
		if v == nil {
			return nil
		}
		return v.SourceVmId
	}).(pulumi.StringPtrOutput)
}

// Indicates whether sysprep has been run on the VHD.
func (o CustomImagePropertiesFromVmPtrOutput) SysPrep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVm) *bool {
		if v == nil {
			return nil
		}
		return v.SysPrep
	}).(pulumi.BoolPtrOutput)
}

// The Windows OS information of the VM.
func (o CustomImagePropertiesFromVmPtrOutput) WindowsOsInfo() WindowsOsInfoPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVm) *WindowsOsInfo {
		if v == nil {
			return nil
		}
		return v.WindowsOsInfo
	}).(WindowsOsInfoPtrOutput)
}

// Properties for creating a custom image from a virtual machine.
type CustomImagePropertiesFromVmResponse struct {
	// The Linux OS information of the VM.
	LinuxOsInfo *LinuxOsInfoResponse `pulumi:"linuxOsInfo"`
	// The source vm identifier.
	SourceVmId *string `pulumi:"sourceVmId"`
	// Indicates whether sysprep has been run on the VHD.
	SysPrep *bool `pulumi:"sysPrep"`
	// The Windows OS information of the VM.
	WindowsOsInfo *WindowsOsInfoResponse `pulumi:"windowsOsInfo"`
}

// CustomImagePropertiesFromVmResponseInput is an input type that accepts CustomImagePropertiesFromVmResponseArgs and CustomImagePropertiesFromVmResponseOutput values.
// You can construct a concrete instance of `CustomImagePropertiesFromVmResponseInput` via:
//
//          CustomImagePropertiesFromVmResponseArgs{...}
type CustomImagePropertiesFromVmResponseInput interface {
	pulumi.Input

	ToCustomImagePropertiesFromVmResponseOutput() CustomImagePropertiesFromVmResponseOutput
	ToCustomImagePropertiesFromVmResponseOutputWithContext(context.Context) CustomImagePropertiesFromVmResponseOutput
}

// Properties for creating a custom image from a virtual machine.
type CustomImagePropertiesFromVmResponseArgs struct {
	// The Linux OS information of the VM.
	LinuxOsInfo LinuxOsInfoResponsePtrInput `pulumi:"linuxOsInfo"`
	// The source vm identifier.
	SourceVmId pulumi.StringPtrInput `pulumi:"sourceVmId"`
	// Indicates whether sysprep has been run on the VHD.
	SysPrep pulumi.BoolPtrInput `pulumi:"sysPrep"`
	// The Windows OS information of the VM.
	WindowsOsInfo WindowsOsInfoResponsePtrInput `pulumi:"windowsOsInfo"`
}

func (CustomImagePropertiesFromVmResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesFromVmResponse)(nil)).Elem()
}

func (i CustomImagePropertiesFromVmResponseArgs) ToCustomImagePropertiesFromVmResponseOutput() CustomImagePropertiesFromVmResponseOutput {
	return i.ToCustomImagePropertiesFromVmResponseOutputWithContext(context.Background())
}

func (i CustomImagePropertiesFromVmResponseArgs) ToCustomImagePropertiesFromVmResponseOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromVmResponseOutput)
}

func (i CustomImagePropertiesFromVmResponseArgs) ToCustomImagePropertiesFromVmResponsePtrOutput() CustomImagePropertiesFromVmResponsePtrOutput {
	return i.ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(context.Background())
}

func (i CustomImagePropertiesFromVmResponseArgs) ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromVmResponseOutput).ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(ctx)
}

// CustomImagePropertiesFromVmResponsePtrInput is an input type that accepts CustomImagePropertiesFromVmResponseArgs, CustomImagePropertiesFromVmResponsePtr and CustomImagePropertiesFromVmResponsePtrOutput values.
// You can construct a concrete instance of `CustomImagePropertiesFromVmResponsePtrInput` via:
//
//          CustomImagePropertiesFromVmResponseArgs{...}
//
//  or:
//
//          nil
type CustomImagePropertiesFromVmResponsePtrInput interface {
	pulumi.Input

	ToCustomImagePropertiesFromVmResponsePtrOutput() CustomImagePropertiesFromVmResponsePtrOutput
	ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(context.Context) CustomImagePropertiesFromVmResponsePtrOutput
}

type customImagePropertiesFromVmResponsePtrType CustomImagePropertiesFromVmResponseArgs

func CustomImagePropertiesFromVmResponsePtr(v *CustomImagePropertiesFromVmResponseArgs) CustomImagePropertiesFromVmResponsePtrInput {
	return (*customImagePropertiesFromVmResponsePtrType)(v)
}

func (*customImagePropertiesFromVmResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesFromVmResponse)(nil)).Elem()
}

func (i *customImagePropertiesFromVmResponsePtrType) ToCustomImagePropertiesFromVmResponsePtrOutput() CustomImagePropertiesFromVmResponsePtrOutput {
	return i.ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(context.Background())
}

func (i *customImagePropertiesFromVmResponsePtrType) ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImagePropertiesFromVmResponsePtrOutput)
}

// Properties for creating a custom image from a virtual machine.
type CustomImagePropertiesFromVmResponseOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesFromVmResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomImagePropertiesFromVmResponse)(nil)).Elem()
}

func (o CustomImagePropertiesFromVmResponseOutput) ToCustomImagePropertiesFromVmResponseOutput() CustomImagePropertiesFromVmResponseOutput {
	return o
}

func (o CustomImagePropertiesFromVmResponseOutput) ToCustomImagePropertiesFromVmResponseOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmResponseOutput {
	return o
}

func (o CustomImagePropertiesFromVmResponseOutput) ToCustomImagePropertiesFromVmResponsePtrOutput() CustomImagePropertiesFromVmResponsePtrOutput {
	return o.ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(context.Background())
}

func (o CustomImagePropertiesFromVmResponseOutput) ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmResponsePtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVmResponse) *CustomImagePropertiesFromVmResponse {
		return &v
	}).(CustomImagePropertiesFromVmResponsePtrOutput)
}

// The Linux OS information of the VM.
func (o CustomImagePropertiesFromVmResponseOutput) LinuxOsInfo() LinuxOsInfoResponsePtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVmResponse) *LinuxOsInfoResponse { return v.LinuxOsInfo }).(LinuxOsInfoResponsePtrOutput)
}

// The source vm identifier.
func (o CustomImagePropertiesFromVmResponseOutput) SourceVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVmResponse) *string { return v.SourceVmId }).(pulumi.StringPtrOutput)
}

// Indicates whether sysprep has been run on the VHD.
func (o CustomImagePropertiesFromVmResponseOutput) SysPrep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVmResponse) *bool { return v.SysPrep }).(pulumi.BoolPtrOutput)
}

// The Windows OS information of the VM.
func (o CustomImagePropertiesFromVmResponseOutput) WindowsOsInfo() WindowsOsInfoResponsePtrOutput {
	return o.ApplyT(func(v CustomImagePropertiesFromVmResponse) *WindowsOsInfoResponse { return v.WindowsOsInfo }).(WindowsOsInfoResponsePtrOutput)
}

type CustomImagePropertiesFromVmResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomImagePropertiesFromVmResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImagePropertiesFromVmResponse)(nil)).Elem()
}

func (o CustomImagePropertiesFromVmResponsePtrOutput) ToCustomImagePropertiesFromVmResponsePtrOutput() CustomImagePropertiesFromVmResponsePtrOutput {
	return o
}

func (o CustomImagePropertiesFromVmResponsePtrOutput) ToCustomImagePropertiesFromVmResponsePtrOutputWithContext(ctx context.Context) CustomImagePropertiesFromVmResponsePtrOutput {
	return o
}

func (o CustomImagePropertiesFromVmResponsePtrOutput) Elem() CustomImagePropertiesFromVmResponseOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVmResponse) CustomImagePropertiesFromVmResponse { return *v }).(CustomImagePropertiesFromVmResponseOutput)
}

// The Linux OS information of the VM.
func (o CustomImagePropertiesFromVmResponsePtrOutput) LinuxOsInfo() LinuxOsInfoResponsePtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVmResponse) *LinuxOsInfoResponse {
		if v == nil {
			return nil
		}
		return v.LinuxOsInfo
	}).(LinuxOsInfoResponsePtrOutput)
}

// The source vm identifier.
func (o CustomImagePropertiesFromVmResponsePtrOutput) SourceVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVmResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceVmId
	}).(pulumi.StringPtrOutput)
}

// Indicates whether sysprep has been run on the VHD.
func (o CustomImagePropertiesFromVmResponsePtrOutput) SysPrep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVmResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SysPrep
	}).(pulumi.BoolPtrOutput)
}

// The Windows OS information of the VM.
func (o CustomImagePropertiesFromVmResponsePtrOutput) WindowsOsInfo() WindowsOsInfoResponsePtrOutput {
	return o.ApplyT(func(v *CustomImagePropertiesFromVmResponse) *WindowsOsInfoResponse {
		if v == nil {
			return nil
		}
		return v.WindowsOsInfo
	}).(WindowsOsInfoResponsePtrOutput)
}

// Properties of a daily schedule.
type DayDetails struct {
	Time *string `pulumi:"time"`
}

// DayDetailsInput is an input type that accepts DayDetailsArgs and DayDetailsOutput values.
// You can construct a concrete instance of `DayDetailsInput` via:
//
//          DayDetailsArgs{...}
type DayDetailsInput interface {
	pulumi.Input

	ToDayDetailsOutput() DayDetailsOutput
	ToDayDetailsOutputWithContext(context.Context) DayDetailsOutput
}

// Properties of a daily schedule.
type DayDetailsArgs struct {
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (DayDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DayDetails)(nil)).Elem()
}

func (i DayDetailsArgs) ToDayDetailsOutput() DayDetailsOutput {
	return i.ToDayDetailsOutputWithContext(context.Background())
}

func (i DayDetailsArgs) ToDayDetailsOutputWithContext(ctx context.Context) DayDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayDetailsOutput)
}

func (i DayDetailsArgs) ToDayDetailsPtrOutput() DayDetailsPtrOutput {
	return i.ToDayDetailsPtrOutputWithContext(context.Background())
}

func (i DayDetailsArgs) ToDayDetailsPtrOutputWithContext(ctx context.Context) DayDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayDetailsOutput).ToDayDetailsPtrOutputWithContext(ctx)
}

// DayDetailsPtrInput is an input type that accepts DayDetailsArgs, DayDetailsPtr and DayDetailsPtrOutput values.
// You can construct a concrete instance of `DayDetailsPtrInput` via:
//
//          DayDetailsArgs{...}
//
//  or:
//
//          nil
type DayDetailsPtrInput interface {
	pulumi.Input

	ToDayDetailsPtrOutput() DayDetailsPtrOutput
	ToDayDetailsPtrOutputWithContext(context.Context) DayDetailsPtrOutput
}

type dayDetailsPtrType DayDetailsArgs

func DayDetailsPtr(v *DayDetailsArgs) DayDetailsPtrInput {
	return (*dayDetailsPtrType)(v)
}

func (*dayDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DayDetails)(nil)).Elem()
}

func (i *dayDetailsPtrType) ToDayDetailsPtrOutput() DayDetailsPtrOutput {
	return i.ToDayDetailsPtrOutputWithContext(context.Background())
}

func (i *dayDetailsPtrType) ToDayDetailsPtrOutputWithContext(ctx context.Context) DayDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayDetailsPtrOutput)
}

// Properties of a daily schedule.
type DayDetailsOutput struct{ *pulumi.OutputState }

func (DayDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DayDetails)(nil)).Elem()
}

func (o DayDetailsOutput) ToDayDetailsOutput() DayDetailsOutput {
	return o
}

func (o DayDetailsOutput) ToDayDetailsOutputWithContext(ctx context.Context) DayDetailsOutput {
	return o
}

func (o DayDetailsOutput) ToDayDetailsPtrOutput() DayDetailsPtrOutput {
	return o.ToDayDetailsPtrOutputWithContext(context.Background())
}

func (o DayDetailsOutput) ToDayDetailsPtrOutputWithContext(ctx context.Context) DayDetailsPtrOutput {
	return o.ApplyT(func(v DayDetails) *DayDetails {
		return &v
	}).(DayDetailsPtrOutput)
}
func (o DayDetailsOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DayDetails) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type DayDetailsPtrOutput struct{ *pulumi.OutputState }

func (DayDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DayDetails)(nil)).Elem()
}

func (o DayDetailsPtrOutput) ToDayDetailsPtrOutput() DayDetailsPtrOutput {
	return o
}

func (o DayDetailsPtrOutput) ToDayDetailsPtrOutputWithContext(ctx context.Context) DayDetailsPtrOutput {
	return o
}

func (o DayDetailsPtrOutput) Elem() DayDetailsOutput {
	return o.ApplyT(func(v *DayDetails) DayDetails { return *v }).(DayDetailsOutput)
}

func (o DayDetailsPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DayDetails) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// Properties of a daily schedule.
type DayDetailsResponse struct {
	Time *string `pulumi:"time"`
}

// DayDetailsResponseInput is an input type that accepts DayDetailsResponseArgs and DayDetailsResponseOutput values.
// You can construct a concrete instance of `DayDetailsResponseInput` via:
//
//          DayDetailsResponseArgs{...}
type DayDetailsResponseInput interface {
	pulumi.Input

	ToDayDetailsResponseOutput() DayDetailsResponseOutput
	ToDayDetailsResponseOutputWithContext(context.Context) DayDetailsResponseOutput
}

// Properties of a daily schedule.
type DayDetailsResponseArgs struct {
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (DayDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DayDetailsResponse)(nil)).Elem()
}

func (i DayDetailsResponseArgs) ToDayDetailsResponseOutput() DayDetailsResponseOutput {
	return i.ToDayDetailsResponseOutputWithContext(context.Background())
}

func (i DayDetailsResponseArgs) ToDayDetailsResponseOutputWithContext(ctx context.Context) DayDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayDetailsResponseOutput)
}

func (i DayDetailsResponseArgs) ToDayDetailsResponsePtrOutput() DayDetailsResponsePtrOutput {
	return i.ToDayDetailsResponsePtrOutputWithContext(context.Background())
}

func (i DayDetailsResponseArgs) ToDayDetailsResponsePtrOutputWithContext(ctx context.Context) DayDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayDetailsResponseOutput).ToDayDetailsResponsePtrOutputWithContext(ctx)
}

// DayDetailsResponsePtrInput is an input type that accepts DayDetailsResponseArgs, DayDetailsResponsePtr and DayDetailsResponsePtrOutput values.
// You can construct a concrete instance of `DayDetailsResponsePtrInput` via:
//
//          DayDetailsResponseArgs{...}
//
//  or:
//
//          nil
type DayDetailsResponsePtrInput interface {
	pulumi.Input

	ToDayDetailsResponsePtrOutput() DayDetailsResponsePtrOutput
	ToDayDetailsResponsePtrOutputWithContext(context.Context) DayDetailsResponsePtrOutput
}

type dayDetailsResponsePtrType DayDetailsResponseArgs

func DayDetailsResponsePtr(v *DayDetailsResponseArgs) DayDetailsResponsePtrInput {
	return (*dayDetailsResponsePtrType)(v)
}

func (*dayDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DayDetailsResponse)(nil)).Elem()
}

func (i *dayDetailsResponsePtrType) ToDayDetailsResponsePtrOutput() DayDetailsResponsePtrOutput {
	return i.ToDayDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *dayDetailsResponsePtrType) ToDayDetailsResponsePtrOutputWithContext(ctx context.Context) DayDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayDetailsResponsePtrOutput)
}

// Properties of a daily schedule.
type DayDetailsResponseOutput struct{ *pulumi.OutputState }

func (DayDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DayDetailsResponse)(nil)).Elem()
}

func (o DayDetailsResponseOutput) ToDayDetailsResponseOutput() DayDetailsResponseOutput {
	return o
}

func (o DayDetailsResponseOutput) ToDayDetailsResponseOutputWithContext(ctx context.Context) DayDetailsResponseOutput {
	return o
}

func (o DayDetailsResponseOutput) ToDayDetailsResponsePtrOutput() DayDetailsResponsePtrOutput {
	return o.ToDayDetailsResponsePtrOutputWithContext(context.Background())
}

func (o DayDetailsResponseOutput) ToDayDetailsResponsePtrOutputWithContext(ctx context.Context) DayDetailsResponsePtrOutput {
	return o.ApplyT(func(v DayDetailsResponse) *DayDetailsResponse {
		return &v
	}).(DayDetailsResponsePtrOutput)
}
func (o DayDetailsResponseOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DayDetailsResponse) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type DayDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (DayDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DayDetailsResponse)(nil)).Elem()
}

func (o DayDetailsResponsePtrOutput) ToDayDetailsResponsePtrOutput() DayDetailsResponsePtrOutput {
	return o
}

func (o DayDetailsResponsePtrOutput) ToDayDetailsResponsePtrOutputWithContext(ctx context.Context) DayDetailsResponsePtrOutput {
	return o
}

func (o DayDetailsResponsePtrOutput) Elem() DayDetailsResponseOutput {
	return o.ApplyT(func(v *DayDetailsResponse) DayDetailsResponse { return *v }).(DayDetailsResponseOutput)
}

func (o DayDetailsResponsePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DayDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// Information about a VM from which a formula is to be created.
type FormulaPropertiesFromVm struct {
	// The identifier of the VM from which a formula is to be created.
	LabVmId *string `pulumi:"labVmId"`
}

// FormulaPropertiesFromVmInput is an input type that accepts FormulaPropertiesFromVmArgs and FormulaPropertiesFromVmOutput values.
// You can construct a concrete instance of `FormulaPropertiesFromVmInput` via:
//
//          FormulaPropertiesFromVmArgs{...}
type FormulaPropertiesFromVmInput interface {
	pulumi.Input

	ToFormulaPropertiesFromVmOutput() FormulaPropertiesFromVmOutput
	ToFormulaPropertiesFromVmOutputWithContext(context.Context) FormulaPropertiesFromVmOutput
}

// Information about a VM from which a formula is to be created.
type FormulaPropertiesFromVmArgs struct {
	// The identifier of the VM from which a formula is to be created.
	LabVmId pulumi.StringPtrInput `pulumi:"labVmId"`
}

func (FormulaPropertiesFromVmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FormulaPropertiesFromVm)(nil)).Elem()
}

func (i FormulaPropertiesFromVmArgs) ToFormulaPropertiesFromVmOutput() FormulaPropertiesFromVmOutput {
	return i.ToFormulaPropertiesFromVmOutputWithContext(context.Background())
}

func (i FormulaPropertiesFromVmArgs) ToFormulaPropertiesFromVmOutputWithContext(ctx context.Context) FormulaPropertiesFromVmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormulaPropertiesFromVmOutput)
}

func (i FormulaPropertiesFromVmArgs) ToFormulaPropertiesFromVmPtrOutput() FormulaPropertiesFromVmPtrOutput {
	return i.ToFormulaPropertiesFromVmPtrOutputWithContext(context.Background())
}

func (i FormulaPropertiesFromVmArgs) ToFormulaPropertiesFromVmPtrOutputWithContext(ctx context.Context) FormulaPropertiesFromVmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormulaPropertiesFromVmOutput).ToFormulaPropertiesFromVmPtrOutputWithContext(ctx)
}

// FormulaPropertiesFromVmPtrInput is an input type that accepts FormulaPropertiesFromVmArgs, FormulaPropertiesFromVmPtr and FormulaPropertiesFromVmPtrOutput values.
// You can construct a concrete instance of `FormulaPropertiesFromVmPtrInput` via:
//
//          FormulaPropertiesFromVmArgs{...}
//
//  or:
//
//          nil
type FormulaPropertiesFromVmPtrInput interface {
	pulumi.Input

	ToFormulaPropertiesFromVmPtrOutput() FormulaPropertiesFromVmPtrOutput
	ToFormulaPropertiesFromVmPtrOutputWithContext(context.Context) FormulaPropertiesFromVmPtrOutput
}

type formulaPropertiesFromVmPtrType FormulaPropertiesFromVmArgs

func FormulaPropertiesFromVmPtr(v *FormulaPropertiesFromVmArgs) FormulaPropertiesFromVmPtrInput {
	return (*formulaPropertiesFromVmPtrType)(v)
}

func (*formulaPropertiesFromVmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FormulaPropertiesFromVm)(nil)).Elem()
}

func (i *formulaPropertiesFromVmPtrType) ToFormulaPropertiesFromVmPtrOutput() FormulaPropertiesFromVmPtrOutput {
	return i.ToFormulaPropertiesFromVmPtrOutputWithContext(context.Background())
}

func (i *formulaPropertiesFromVmPtrType) ToFormulaPropertiesFromVmPtrOutputWithContext(ctx context.Context) FormulaPropertiesFromVmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormulaPropertiesFromVmPtrOutput)
}

// Information about a VM from which a formula is to be created.
type FormulaPropertiesFromVmOutput struct{ *pulumi.OutputState }

func (FormulaPropertiesFromVmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FormulaPropertiesFromVm)(nil)).Elem()
}

func (o FormulaPropertiesFromVmOutput) ToFormulaPropertiesFromVmOutput() FormulaPropertiesFromVmOutput {
	return o
}

func (o FormulaPropertiesFromVmOutput) ToFormulaPropertiesFromVmOutputWithContext(ctx context.Context) FormulaPropertiesFromVmOutput {
	return o
}

func (o FormulaPropertiesFromVmOutput) ToFormulaPropertiesFromVmPtrOutput() FormulaPropertiesFromVmPtrOutput {
	return o.ToFormulaPropertiesFromVmPtrOutputWithContext(context.Background())
}

func (o FormulaPropertiesFromVmOutput) ToFormulaPropertiesFromVmPtrOutputWithContext(ctx context.Context) FormulaPropertiesFromVmPtrOutput {
	return o.ApplyT(func(v FormulaPropertiesFromVm) *FormulaPropertiesFromVm {
		return &v
	}).(FormulaPropertiesFromVmPtrOutput)
}

// The identifier of the VM from which a formula is to be created.
func (o FormulaPropertiesFromVmOutput) LabVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FormulaPropertiesFromVm) *string { return v.LabVmId }).(pulumi.StringPtrOutput)
}

type FormulaPropertiesFromVmPtrOutput struct{ *pulumi.OutputState }

func (FormulaPropertiesFromVmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FormulaPropertiesFromVm)(nil)).Elem()
}

func (o FormulaPropertiesFromVmPtrOutput) ToFormulaPropertiesFromVmPtrOutput() FormulaPropertiesFromVmPtrOutput {
	return o
}

func (o FormulaPropertiesFromVmPtrOutput) ToFormulaPropertiesFromVmPtrOutputWithContext(ctx context.Context) FormulaPropertiesFromVmPtrOutput {
	return o
}

func (o FormulaPropertiesFromVmPtrOutput) Elem() FormulaPropertiesFromVmOutput {
	return o.ApplyT(func(v *FormulaPropertiesFromVm) FormulaPropertiesFromVm { return *v }).(FormulaPropertiesFromVmOutput)
}

// The identifier of the VM from which a formula is to be created.
func (o FormulaPropertiesFromVmPtrOutput) LabVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FormulaPropertiesFromVm) *string {
		if v == nil {
			return nil
		}
		return v.LabVmId
	}).(pulumi.StringPtrOutput)
}

// Information about a VM from which a formula is to be created.
type FormulaPropertiesFromVmResponse struct {
	// The identifier of the VM from which a formula is to be created.
	LabVmId *string `pulumi:"labVmId"`
}

// FormulaPropertiesFromVmResponseInput is an input type that accepts FormulaPropertiesFromVmResponseArgs and FormulaPropertiesFromVmResponseOutput values.
// You can construct a concrete instance of `FormulaPropertiesFromVmResponseInput` via:
//
//          FormulaPropertiesFromVmResponseArgs{...}
type FormulaPropertiesFromVmResponseInput interface {
	pulumi.Input

	ToFormulaPropertiesFromVmResponseOutput() FormulaPropertiesFromVmResponseOutput
	ToFormulaPropertiesFromVmResponseOutputWithContext(context.Context) FormulaPropertiesFromVmResponseOutput
}

// Information about a VM from which a formula is to be created.
type FormulaPropertiesFromVmResponseArgs struct {
	// The identifier of the VM from which a formula is to be created.
	LabVmId pulumi.StringPtrInput `pulumi:"labVmId"`
}

func (FormulaPropertiesFromVmResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FormulaPropertiesFromVmResponse)(nil)).Elem()
}

func (i FormulaPropertiesFromVmResponseArgs) ToFormulaPropertiesFromVmResponseOutput() FormulaPropertiesFromVmResponseOutput {
	return i.ToFormulaPropertiesFromVmResponseOutputWithContext(context.Background())
}

func (i FormulaPropertiesFromVmResponseArgs) ToFormulaPropertiesFromVmResponseOutputWithContext(ctx context.Context) FormulaPropertiesFromVmResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormulaPropertiesFromVmResponseOutput)
}

func (i FormulaPropertiesFromVmResponseArgs) ToFormulaPropertiesFromVmResponsePtrOutput() FormulaPropertiesFromVmResponsePtrOutput {
	return i.ToFormulaPropertiesFromVmResponsePtrOutputWithContext(context.Background())
}

func (i FormulaPropertiesFromVmResponseArgs) ToFormulaPropertiesFromVmResponsePtrOutputWithContext(ctx context.Context) FormulaPropertiesFromVmResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormulaPropertiesFromVmResponseOutput).ToFormulaPropertiesFromVmResponsePtrOutputWithContext(ctx)
}

// FormulaPropertiesFromVmResponsePtrInput is an input type that accepts FormulaPropertiesFromVmResponseArgs, FormulaPropertiesFromVmResponsePtr and FormulaPropertiesFromVmResponsePtrOutput values.
// You can construct a concrete instance of `FormulaPropertiesFromVmResponsePtrInput` via:
//
//          FormulaPropertiesFromVmResponseArgs{...}
//
//  or:
//
//          nil
type FormulaPropertiesFromVmResponsePtrInput interface {
	pulumi.Input

	ToFormulaPropertiesFromVmResponsePtrOutput() FormulaPropertiesFromVmResponsePtrOutput
	ToFormulaPropertiesFromVmResponsePtrOutputWithContext(context.Context) FormulaPropertiesFromVmResponsePtrOutput
}

type formulaPropertiesFromVmResponsePtrType FormulaPropertiesFromVmResponseArgs

func FormulaPropertiesFromVmResponsePtr(v *FormulaPropertiesFromVmResponseArgs) FormulaPropertiesFromVmResponsePtrInput {
	return (*formulaPropertiesFromVmResponsePtrType)(v)
}

func (*formulaPropertiesFromVmResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FormulaPropertiesFromVmResponse)(nil)).Elem()
}

func (i *formulaPropertiesFromVmResponsePtrType) ToFormulaPropertiesFromVmResponsePtrOutput() FormulaPropertiesFromVmResponsePtrOutput {
	return i.ToFormulaPropertiesFromVmResponsePtrOutputWithContext(context.Background())
}

func (i *formulaPropertiesFromVmResponsePtrType) ToFormulaPropertiesFromVmResponsePtrOutputWithContext(ctx context.Context) FormulaPropertiesFromVmResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormulaPropertiesFromVmResponsePtrOutput)
}

// Information about a VM from which a formula is to be created.
type FormulaPropertiesFromVmResponseOutput struct{ *pulumi.OutputState }

func (FormulaPropertiesFromVmResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FormulaPropertiesFromVmResponse)(nil)).Elem()
}

func (o FormulaPropertiesFromVmResponseOutput) ToFormulaPropertiesFromVmResponseOutput() FormulaPropertiesFromVmResponseOutput {
	return o
}

func (o FormulaPropertiesFromVmResponseOutput) ToFormulaPropertiesFromVmResponseOutputWithContext(ctx context.Context) FormulaPropertiesFromVmResponseOutput {
	return o
}

func (o FormulaPropertiesFromVmResponseOutput) ToFormulaPropertiesFromVmResponsePtrOutput() FormulaPropertiesFromVmResponsePtrOutput {
	return o.ToFormulaPropertiesFromVmResponsePtrOutputWithContext(context.Background())
}

func (o FormulaPropertiesFromVmResponseOutput) ToFormulaPropertiesFromVmResponsePtrOutputWithContext(ctx context.Context) FormulaPropertiesFromVmResponsePtrOutput {
	return o.ApplyT(func(v FormulaPropertiesFromVmResponse) *FormulaPropertiesFromVmResponse {
		return &v
	}).(FormulaPropertiesFromVmResponsePtrOutput)
}

// The identifier of the VM from which a formula is to be created.
func (o FormulaPropertiesFromVmResponseOutput) LabVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FormulaPropertiesFromVmResponse) *string { return v.LabVmId }).(pulumi.StringPtrOutput)
}

type FormulaPropertiesFromVmResponsePtrOutput struct{ *pulumi.OutputState }

func (FormulaPropertiesFromVmResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FormulaPropertiesFromVmResponse)(nil)).Elem()
}

func (o FormulaPropertiesFromVmResponsePtrOutput) ToFormulaPropertiesFromVmResponsePtrOutput() FormulaPropertiesFromVmResponsePtrOutput {
	return o
}

func (o FormulaPropertiesFromVmResponsePtrOutput) ToFormulaPropertiesFromVmResponsePtrOutputWithContext(ctx context.Context) FormulaPropertiesFromVmResponsePtrOutput {
	return o
}

func (o FormulaPropertiesFromVmResponsePtrOutput) Elem() FormulaPropertiesFromVmResponseOutput {
	return o.ApplyT(func(v *FormulaPropertiesFromVmResponse) FormulaPropertiesFromVmResponse { return *v }).(FormulaPropertiesFromVmResponseOutput)
}

// The identifier of the VM from which a formula is to be created.
func (o FormulaPropertiesFromVmResponsePtrOutput) LabVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FormulaPropertiesFromVmResponse) *string {
		if v == nil {
			return nil
		}
		return v.LabVmId
	}).(pulumi.StringPtrOutput)
}

// The reference information for an Azure Marketplace image.
type GalleryImageReference struct {
	// The offer of the gallery image.
	Offer *string `pulumi:"offer"`
	// The OS type of the gallery image.
	OsType *string `pulumi:"osType"`
	// The publisher of the gallery image.
	Publisher *string `pulumi:"publisher"`
	// The SKU of the gallery image.
	Sku *string `pulumi:"sku"`
	// The version of the gallery image.
	Version *string `pulumi:"version"`
}

// GalleryImageReferenceInput is an input type that accepts GalleryImageReferenceArgs and GalleryImageReferenceOutput values.
// You can construct a concrete instance of `GalleryImageReferenceInput` via:
//
//          GalleryImageReferenceArgs{...}
type GalleryImageReferenceInput interface {
	pulumi.Input

	ToGalleryImageReferenceOutput() GalleryImageReferenceOutput
	ToGalleryImageReferenceOutputWithContext(context.Context) GalleryImageReferenceOutput
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceArgs struct {
	// The offer of the gallery image.
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// The OS type of the gallery image.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The publisher of the gallery image.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// The SKU of the gallery image.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// The version of the gallery image.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GalleryImageReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageReference)(nil)).Elem()
}

func (i GalleryImageReferenceArgs) ToGalleryImageReferenceOutput() GalleryImageReferenceOutput {
	return i.ToGalleryImageReferenceOutputWithContext(context.Background())
}

func (i GalleryImageReferenceArgs) ToGalleryImageReferenceOutputWithContext(ctx context.Context) GalleryImageReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferenceOutput)
}

func (i GalleryImageReferenceArgs) ToGalleryImageReferencePtrOutput() GalleryImageReferencePtrOutput {
	return i.ToGalleryImageReferencePtrOutputWithContext(context.Background())
}

func (i GalleryImageReferenceArgs) ToGalleryImageReferencePtrOutputWithContext(ctx context.Context) GalleryImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferenceOutput).ToGalleryImageReferencePtrOutputWithContext(ctx)
}

// GalleryImageReferencePtrInput is an input type that accepts GalleryImageReferenceArgs, GalleryImageReferencePtr and GalleryImageReferencePtrOutput values.
// You can construct a concrete instance of `GalleryImageReferencePtrInput` via:
//
//          GalleryImageReferenceArgs{...}
//
//  or:
//
//          nil
type GalleryImageReferencePtrInput interface {
	pulumi.Input

	ToGalleryImageReferencePtrOutput() GalleryImageReferencePtrOutput
	ToGalleryImageReferencePtrOutputWithContext(context.Context) GalleryImageReferencePtrOutput
}

type galleryImageReferencePtrType GalleryImageReferenceArgs

func GalleryImageReferencePtr(v *GalleryImageReferenceArgs) GalleryImageReferencePtrInput {
	return (*galleryImageReferencePtrType)(v)
}

func (*galleryImageReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageReference)(nil)).Elem()
}

func (i *galleryImageReferencePtrType) ToGalleryImageReferencePtrOutput() GalleryImageReferencePtrOutput {
	return i.ToGalleryImageReferencePtrOutputWithContext(context.Background())
}

func (i *galleryImageReferencePtrType) ToGalleryImageReferencePtrOutputWithContext(ctx context.Context) GalleryImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferencePtrOutput)
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceOutput struct{ *pulumi.OutputState }

func (GalleryImageReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageReference)(nil)).Elem()
}

func (o GalleryImageReferenceOutput) ToGalleryImageReferenceOutput() GalleryImageReferenceOutput {
	return o
}

func (o GalleryImageReferenceOutput) ToGalleryImageReferenceOutputWithContext(ctx context.Context) GalleryImageReferenceOutput {
	return o
}

func (o GalleryImageReferenceOutput) ToGalleryImageReferencePtrOutput() GalleryImageReferencePtrOutput {
	return o.ToGalleryImageReferencePtrOutputWithContext(context.Background())
}

func (o GalleryImageReferenceOutput) ToGalleryImageReferencePtrOutputWithContext(ctx context.Context) GalleryImageReferencePtrOutput {
	return o.ApplyT(func(v GalleryImageReference) *GalleryImageReference {
		return &v
	}).(GalleryImageReferencePtrOutput)
}

// The offer of the gallery image.
func (o GalleryImageReferenceOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReference) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// The OS type of the gallery image.
func (o GalleryImageReferenceOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReference) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The publisher of the gallery image.
func (o GalleryImageReferenceOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReference) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// The SKU of the gallery image.
func (o GalleryImageReferenceOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReference) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// The version of the gallery image.
func (o GalleryImageReferenceOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReference) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GalleryImageReferencePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageReference)(nil)).Elem()
}

func (o GalleryImageReferencePtrOutput) ToGalleryImageReferencePtrOutput() GalleryImageReferencePtrOutput {
	return o
}

func (o GalleryImageReferencePtrOutput) ToGalleryImageReferencePtrOutputWithContext(ctx context.Context) GalleryImageReferencePtrOutput {
	return o
}

func (o GalleryImageReferencePtrOutput) Elem() GalleryImageReferenceOutput {
	return o.ApplyT(func(v *GalleryImageReference) GalleryImageReference { return *v }).(GalleryImageReferenceOutput)
}

// The offer of the gallery image.
func (o GalleryImageReferencePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Offer
	}).(pulumi.StringPtrOutput)
}

// The OS type of the gallery image.
func (o GalleryImageReferencePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReference) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The publisher of the gallery image.
func (o GalleryImageReferencePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The SKU of the gallery image.
func (o GalleryImageReferencePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// The version of the gallery image.
func (o GalleryImageReferencePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceResponse struct {
	// The offer of the gallery image.
	Offer *string `pulumi:"offer"`
	// The OS type of the gallery image.
	OsType *string `pulumi:"osType"`
	// The publisher of the gallery image.
	Publisher *string `pulumi:"publisher"`
	// The SKU of the gallery image.
	Sku *string `pulumi:"sku"`
	// The version of the gallery image.
	Version *string `pulumi:"version"`
}

// GalleryImageReferenceResponseInput is an input type that accepts GalleryImageReferenceResponseArgs and GalleryImageReferenceResponseOutput values.
// You can construct a concrete instance of `GalleryImageReferenceResponseInput` via:
//
//          GalleryImageReferenceResponseArgs{...}
type GalleryImageReferenceResponseInput interface {
	pulumi.Input

	ToGalleryImageReferenceResponseOutput() GalleryImageReferenceResponseOutput
	ToGalleryImageReferenceResponseOutputWithContext(context.Context) GalleryImageReferenceResponseOutput
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceResponseArgs struct {
	// The offer of the gallery image.
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// The OS type of the gallery image.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The publisher of the gallery image.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// The SKU of the gallery image.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// The version of the gallery image.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GalleryImageReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageReferenceResponse)(nil)).Elem()
}

func (i GalleryImageReferenceResponseArgs) ToGalleryImageReferenceResponseOutput() GalleryImageReferenceResponseOutput {
	return i.ToGalleryImageReferenceResponseOutputWithContext(context.Background())
}

func (i GalleryImageReferenceResponseArgs) ToGalleryImageReferenceResponseOutputWithContext(ctx context.Context) GalleryImageReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferenceResponseOutput)
}

func (i GalleryImageReferenceResponseArgs) ToGalleryImageReferenceResponsePtrOutput() GalleryImageReferenceResponsePtrOutput {
	return i.ToGalleryImageReferenceResponsePtrOutputWithContext(context.Background())
}

func (i GalleryImageReferenceResponseArgs) ToGalleryImageReferenceResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferenceResponseOutput).ToGalleryImageReferenceResponsePtrOutputWithContext(ctx)
}

// GalleryImageReferenceResponsePtrInput is an input type that accepts GalleryImageReferenceResponseArgs, GalleryImageReferenceResponsePtr and GalleryImageReferenceResponsePtrOutput values.
// You can construct a concrete instance of `GalleryImageReferenceResponsePtrInput` via:
//
//          GalleryImageReferenceResponseArgs{...}
//
//  or:
//
//          nil
type GalleryImageReferenceResponsePtrInput interface {
	pulumi.Input

	ToGalleryImageReferenceResponsePtrOutput() GalleryImageReferenceResponsePtrOutput
	ToGalleryImageReferenceResponsePtrOutputWithContext(context.Context) GalleryImageReferenceResponsePtrOutput
}

type galleryImageReferenceResponsePtrType GalleryImageReferenceResponseArgs

func GalleryImageReferenceResponsePtr(v *GalleryImageReferenceResponseArgs) GalleryImageReferenceResponsePtrInput {
	return (*galleryImageReferenceResponsePtrType)(v)
}

func (*galleryImageReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageReferenceResponse)(nil)).Elem()
}

func (i *galleryImageReferenceResponsePtrType) ToGalleryImageReferenceResponsePtrOutput() GalleryImageReferenceResponsePtrOutput {
	return i.ToGalleryImageReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *galleryImageReferenceResponsePtrType) ToGalleryImageReferenceResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferenceResponsePtrOutput)
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageReferenceResponse)(nil)).Elem()
}

func (o GalleryImageReferenceResponseOutput) ToGalleryImageReferenceResponseOutput() GalleryImageReferenceResponseOutput {
	return o
}

func (o GalleryImageReferenceResponseOutput) ToGalleryImageReferenceResponseOutputWithContext(ctx context.Context) GalleryImageReferenceResponseOutput {
	return o
}

func (o GalleryImageReferenceResponseOutput) ToGalleryImageReferenceResponsePtrOutput() GalleryImageReferenceResponsePtrOutput {
	return o.ToGalleryImageReferenceResponsePtrOutputWithContext(context.Background())
}

func (o GalleryImageReferenceResponseOutput) ToGalleryImageReferenceResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *GalleryImageReferenceResponse {
		return &v
	}).(GalleryImageReferenceResponsePtrOutput)
}

// The offer of the gallery image.
func (o GalleryImageReferenceResponseOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// The OS type of the gallery image.
func (o GalleryImageReferenceResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The publisher of the gallery image.
func (o GalleryImageReferenceResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// The SKU of the gallery image.
func (o GalleryImageReferenceResponseOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// The version of the gallery image.
func (o GalleryImageReferenceResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GalleryImageReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageReferenceResponse)(nil)).Elem()
}

func (o GalleryImageReferenceResponsePtrOutput) ToGalleryImageReferenceResponsePtrOutput() GalleryImageReferenceResponsePtrOutput {
	return o
}

func (o GalleryImageReferenceResponsePtrOutput) ToGalleryImageReferenceResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceResponsePtrOutput {
	return o
}

func (o GalleryImageReferenceResponsePtrOutput) Elem() GalleryImageReferenceResponseOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) GalleryImageReferenceResponse { return *v }).(GalleryImageReferenceResponseOutput)
}

// The offer of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Offer
	}).(pulumi.StringPtrOutput)
}

// The OS type of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The publisher of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The SKU of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// The version of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Properties of an hourly schedule.
type HourDetails struct {
	// Minutes of the hour the schedule will run.
	Minute *int `pulumi:"minute"`
}

// HourDetailsInput is an input type that accepts HourDetailsArgs and HourDetailsOutput values.
// You can construct a concrete instance of `HourDetailsInput` via:
//
//          HourDetailsArgs{...}
type HourDetailsInput interface {
	pulumi.Input

	ToHourDetailsOutput() HourDetailsOutput
	ToHourDetailsOutputWithContext(context.Context) HourDetailsOutput
}

// Properties of an hourly schedule.
type HourDetailsArgs struct {
	// Minutes of the hour the schedule will run.
	Minute pulumi.IntPtrInput `pulumi:"minute"`
}

func (HourDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HourDetails)(nil)).Elem()
}

func (i HourDetailsArgs) ToHourDetailsOutput() HourDetailsOutput {
	return i.ToHourDetailsOutputWithContext(context.Background())
}

func (i HourDetailsArgs) ToHourDetailsOutputWithContext(ctx context.Context) HourDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourDetailsOutput)
}

func (i HourDetailsArgs) ToHourDetailsPtrOutput() HourDetailsPtrOutput {
	return i.ToHourDetailsPtrOutputWithContext(context.Background())
}

func (i HourDetailsArgs) ToHourDetailsPtrOutputWithContext(ctx context.Context) HourDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourDetailsOutput).ToHourDetailsPtrOutputWithContext(ctx)
}

// HourDetailsPtrInput is an input type that accepts HourDetailsArgs, HourDetailsPtr and HourDetailsPtrOutput values.
// You can construct a concrete instance of `HourDetailsPtrInput` via:
//
//          HourDetailsArgs{...}
//
//  or:
//
//          nil
type HourDetailsPtrInput interface {
	pulumi.Input

	ToHourDetailsPtrOutput() HourDetailsPtrOutput
	ToHourDetailsPtrOutputWithContext(context.Context) HourDetailsPtrOutput
}

type hourDetailsPtrType HourDetailsArgs

func HourDetailsPtr(v *HourDetailsArgs) HourDetailsPtrInput {
	return (*hourDetailsPtrType)(v)
}

func (*hourDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HourDetails)(nil)).Elem()
}

func (i *hourDetailsPtrType) ToHourDetailsPtrOutput() HourDetailsPtrOutput {
	return i.ToHourDetailsPtrOutputWithContext(context.Background())
}

func (i *hourDetailsPtrType) ToHourDetailsPtrOutputWithContext(ctx context.Context) HourDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourDetailsPtrOutput)
}

// Properties of an hourly schedule.
type HourDetailsOutput struct{ *pulumi.OutputState }

func (HourDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HourDetails)(nil)).Elem()
}

func (o HourDetailsOutput) ToHourDetailsOutput() HourDetailsOutput {
	return o
}

func (o HourDetailsOutput) ToHourDetailsOutputWithContext(ctx context.Context) HourDetailsOutput {
	return o
}

func (o HourDetailsOutput) ToHourDetailsPtrOutput() HourDetailsPtrOutput {
	return o.ToHourDetailsPtrOutputWithContext(context.Background())
}

func (o HourDetailsOutput) ToHourDetailsPtrOutputWithContext(ctx context.Context) HourDetailsPtrOutput {
	return o.ApplyT(func(v HourDetails) *HourDetails {
		return &v
	}).(HourDetailsPtrOutput)
}

// Minutes of the hour the schedule will run.
func (o HourDetailsOutput) Minute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HourDetails) *int { return v.Minute }).(pulumi.IntPtrOutput)
}

type HourDetailsPtrOutput struct{ *pulumi.OutputState }

func (HourDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HourDetails)(nil)).Elem()
}

func (o HourDetailsPtrOutput) ToHourDetailsPtrOutput() HourDetailsPtrOutput {
	return o
}

func (o HourDetailsPtrOutput) ToHourDetailsPtrOutputWithContext(ctx context.Context) HourDetailsPtrOutput {
	return o
}

func (o HourDetailsPtrOutput) Elem() HourDetailsOutput {
	return o.ApplyT(func(v *HourDetails) HourDetails { return *v }).(HourDetailsOutput)
}

// Minutes of the hour the schedule will run.
func (o HourDetailsPtrOutput) Minute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HourDetails) *int {
		if v == nil {
			return nil
		}
		return v.Minute
	}).(pulumi.IntPtrOutput)
}

// Properties of an hourly schedule.
type HourDetailsResponse struct {
	// Minutes of the hour the schedule will run.
	Minute *int `pulumi:"minute"`
}

// HourDetailsResponseInput is an input type that accepts HourDetailsResponseArgs and HourDetailsResponseOutput values.
// You can construct a concrete instance of `HourDetailsResponseInput` via:
//
//          HourDetailsResponseArgs{...}
type HourDetailsResponseInput interface {
	pulumi.Input

	ToHourDetailsResponseOutput() HourDetailsResponseOutput
	ToHourDetailsResponseOutputWithContext(context.Context) HourDetailsResponseOutput
}

// Properties of an hourly schedule.
type HourDetailsResponseArgs struct {
	// Minutes of the hour the schedule will run.
	Minute pulumi.IntPtrInput `pulumi:"minute"`
}

func (HourDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HourDetailsResponse)(nil)).Elem()
}

func (i HourDetailsResponseArgs) ToHourDetailsResponseOutput() HourDetailsResponseOutput {
	return i.ToHourDetailsResponseOutputWithContext(context.Background())
}

func (i HourDetailsResponseArgs) ToHourDetailsResponseOutputWithContext(ctx context.Context) HourDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourDetailsResponseOutput)
}

func (i HourDetailsResponseArgs) ToHourDetailsResponsePtrOutput() HourDetailsResponsePtrOutput {
	return i.ToHourDetailsResponsePtrOutputWithContext(context.Background())
}

func (i HourDetailsResponseArgs) ToHourDetailsResponsePtrOutputWithContext(ctx context.Context) HourDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourDetailsResponseOutput).ToHourDetailsResponsePtrOutputWithContext(ctx)
}

// HourDetailsResponsePtrInput is an input type that accepts HourDetailsResponseArgs, HourDetailsResponsePtr and HourDetailsResponsePtrOutput values.
// You can construct a concrete instance of `HourDetailsResponsePtrInput` via:
//
//          HourDetailsResponseArgs{...}
//
//  or:
//
//          nil
type HourDetailsResponsePtrInput interface {
	pulumi.Input

	ToHourDetailsResponsePtrOutput() HourDetailsResponsePtrOutput
	ToHourDetailsResponsePtrOutputWithContext(context.Context) HourDetailsResponsePtrOutput
}

type hourDetailsResponsePtrType HourDetailsResponseArgs

func HourDetailsResponsePtr(v *HourDetailsResponseArgs) HourDetailsResponsePtrInput {
	return (*hourDetailsResponsePtrType)(v)
}

func (*hourDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HourDetailsResponse)(nil)).Elem()
}

func (i *hourDetailsResponsePtrType) ToHourDetailsResponsePtrOutput() HourDetailsResponsePtrOutput {
	return i.ToHourDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *hourDetailsResponsePtrType) ToHourDetailsResponsePtrOutputWithContext(ctx context.Context) HourDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourDetailsResponsePtrOutput)
}

// Properties of an hourly schedule.
type HourDetailsResponseOutput struct{ *pulumi.OutputState }

func (HourDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HourDetailsResponse)(nil)).Elem()
}

func (o HourDetailsResponseOutput) ToHourDetailsResponseOutput() HourDetailsResponseOutput {
	return o
}

func (o HourDetailsResponseOutput) ToHourDetailsResponseOutputWithContext(ctx context.Context) HourDetailsResponseOutput {
	return o
}

func (o HourDetailsResponseOutput) ToHourDetailsResponsePtrOutput() HourDetailsResponsePtrOutput {
	return o.ToHourDetailsResponsePtrOutputWithContext(context.Background())
}

func (o HourDetailsResponseOutput) ToHourDetailsResponsePtrOutputWithContext(ctx context.Context) HourDetailsResponsePtrOutput {
	return o.ApplyT(func(v HourDetailsResponse) *HourDetailsResponse {
		return &v
	}).(HourDetailsResponsePtrOutput)
}

// Minutes of the hour the schedule will run.
func (o HourDetailsResponseOutput) Minute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HourDetailsResponse) *int { return v.Minute }).(pulumi.IntPtrOutput)
}

type HourDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (HourDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HourDetailsResponse)(nil)).Elem()
}

func (o HourDetailsResponsePtrOutput) ToHourDetailsResponsePtrOutput() HourDetailsResponsePtrOutput {
	return o
}

func (o HourDetailsResponsePtrOutput) ToHourDetailsResponsePtrOutputWithContext(ctx context.Context) HourDetailsResponsePtrOutput {
	return o
}

func (o HourDetailsResponsePtrOutput) Elem() HourDetailsResponseOutput {
	return o.ApplyT(func(v *HourDetailsResponse) HourDetailsResponse { return *v }).(HourDetailsResponseOutput)
}

// Minutes of the hour the schedule will run.
func (o HourDetailsResponsePtrOutput) Minute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HourDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Minute
	}).(pulumi.IntPtrOutput)
}

// Properties of a VHD in the lab.
type LabVhdResponse struct {
	// The absolute URI of the VHD.
	Id *string `pulumi:"id"`
}

// LabVhdResponseInput is an input type that accepts LabVhdResponseArgs and LabVhdResponseOutput values.
// You can construct a concrete instance of `LabVhdResponseInput` via:
//
//          LabVhdResponseArgs{...}
type LabVhdResponseInput interface {
	pulumi.Input

	ToLabVhdResponseOutput() LabVhdResponseOutput
	ToLabVhdResponseOutputWithContext(context.Context) LabVhdResponseOutput
}

// Properties of a VHD in the lab.
type LabVhdResponseArgs struct {
	// The absolute URI of the VHD.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LabVhdResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabVhdResponse)(nil)).Elem()
}

func (i LabVhdResponseArgs) ToLabVhdResponseOutput() LabVhdResponseOutput {
	return i.ToLabVhdResponseOutputWithContext(context.Background())
}

func (i LabVhdResponseArgs) ToLabVhdResponseOutputWithContext(ctx context.Context) LabVhdResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabVhdResponseOutput)
}

// LabVhdResponseArrayInput is an input type that accepts LabVhdResponseArray and LabVhdResponseArrayOutput values.
// You can construct a concrete instance of `LabVhdResponseArrayInput` via:
//
//          LabVhdResponseArray{ LabVhdResponseArgs{...} }
type LabVhdResponseArrayInput interface {
	pulumi.Input

	ToLabVhdResponseArrayOutput() LabVhdResponseArrayOutput
	ToLabVhdResponseArrayOutputWithContext(context.Context) LabVhdResponseArrayOutput
}

type LabVhdResponseArray []LabVhdResponseInput

func (LabVhdResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LabVhdResponse)(nil)).Elem()
}

func (i LabVhdResponseArray) ToLabVhdResponseArrayOutput() LabVhdResponseArrayOutput {
	return i.ToLabVhdResponseArrayOutputWithContext(context.Background())
}

func (i LabVhdResponseArray) ToLabVhdResponseArrayOutputWithContext(ctx context.Context) LabVhdResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabVhdResponseArrayOutput)
}

// Properties of a VHD in the lab.
type LabVhdResponseOutput struct{ *pulumi.OutputState }

func (LabVhdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabVhdResponse)(nil)).Elem()
}

func (o LabVhdResponseOutput) ToLabVhdResponseOutput() LabVhdResponseOutput {
	return o
}

func (o LabVhdResponseOutput) ToLabVhdResponseOutputWithContext(ctx context.Context) LabVhdResponseOutput {
	return o
}

// The absolute URI of the VHD.
func (o LabVhdResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVhdResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LabVhdResponseArrayOutput struct{ *pulumi.OutputState }

func (LabVhdResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LabVhdResponse)(nil)).Elem()
}

func (o LabVhdResponseArrayOutput) ToLabVhdResponseArrayOutput() LabVhdResponseArrayOutput {
	return o
}

func (o LabVhdResponseArrayOutput) ToLabVhdResponseArrayOutputWithContext(ctx context.Context) LabVhdResponseArrayOutput {
	return o
}

func (o LabVhdResponseArrayOutput) Index(i pulumi.IntInput) LabVhdResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LabVhdResponse {
		return vs[0].([]LabVhdResponse)[vs[1].(int)]
	}).(LabVhdResponseOutput)
}

// A virtual machine.
type LabVirtualMachine struct {
	// The artifact deployment status for the virtual machine.
	ArtifactDeploymentStatus *ArtifactDeploymentStatusProperties `pulumi:"artifactDeploymentStatus"`
	// The artifacts to be installed on the virtual machine.
	Artifacts []ArtifactInstallProperties `pulumi:"artifacts"`
	// The resource identifier (Microsoft.Compute) of the virtual machine.
	ComputeId *string `pulumi:"computeId"`
	// The email address of creator of the virtual machine.
	CreatedByUser *string `pulumi:"createdByUser"`
	// The object identifier of the creator of the virtual machine.
	CreatedByUserId *string `pulumi:"createdByUserId"`
	// The custom image identifier of the virtual machine.
	CustomImageId *string `pulumi:"customImageId"`
	// Indicates whether the virtual machine is to be created without a public IP address.
	DisallowPublicIpAddress *bool `pulumi:"disallowPublicIpAddress"`
	// The fully-qualified domain name of the virtual machine.
	Fqdn *string `pulumi:"fqdn"`
	// The Microsoft Azure Marketplace image reference of the virtual machine.
	GalleryImageReference *GalleryImageReference `pulumi:"galleryImageReference"`
	// The identifier of the resource.
	Id *string `pulumi:"id"`
	// A value indicating whether this virtual machine uses an SSH key for authentication.
	IsAuthenticationWithSshKey *bool `pulumi:"isAuthenticationWithSshKey"`
	// The lab subnet name of the virtual machine.
	LabSubnetName *string `pulumi:"labSubnetName"`
	// The lab virtual network identifier of the virtual machine.
	LabVirtualNetworkId *string `pulumi:"labVirtualNetworkId"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The notes of the virtual machine.
	Notes *string `pulumi:"notes"`
	// The OS type of the virtual machine.
	OsType *string `pulumi:"osType"`
	// The object identifier of the owner of the virtual machine.
	OwnerObjectId *string `pulumi:"ownerObjectId"`
	// The password of the virtual machine administrator.
	Password *string `pulumi:"password"`
	// The provisioning status of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The size of the virtual machine.
	Size *string `pulumi:"size"`
	// The SSH key of the virtual machine administrator.
	SshKey *string `pulumi:"sshKey"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type *string `pulumi:"type"`
	// The user name of the virtual machine.
	UserName *string `pulumi:"userName"`
}

// LabVirtualMachineInput is an input type that accepts LabVirtualMachineArgs and LabVirtualMachineOutput values.
// You can construct a concrete instance of `LabVirtualMachineInput` via:
//
//          LabVirtualMachineArgs{...}
type LabVirtualMachineInput interface {
	pulumi.Input

	ToLabVirtualMachineOutput() LabVirtualMachineOutput
	ToLabVirtualMachineOutputWithContext(context.Context) LabVirtualMachineOutput
}

// A virtual machine.
type LabVirtualMachineArgs struct {
	// The artifact deployment status for the virtual machine.
	ArtifactDeploymentStatus ArtifactDeploymentStatusPropertiesPtrInput `pulumi:"artifactDeploymentStatus"`
	// The artifacts to be installed on the virtual machine.
	Artifacts ArtifactInstallPropertiesArrayInput `pulumi:"artifacts"`
	// The resource identifier (Microsoft.Compute) of the virtual machine.
	ComputeId pulumi.StringPtrInput `pulumi:"computeId"`
	// The email address of creator of the virtual machine.
	CreatedByUser pulumi.StringPtrInput `pulumi:"createdByUser"`
	// The object identifier of the creator of the virtual machine.
	CreatedByUserId pulumi.StringPtrInput `pulumi:"createdByUserId"`
	// The custom image identifier of the virtual machine.
	CustomImageId pulumi.StringPtrInput `pulumi:"customImageId"`
	// Indicates whether the virtual machine is to be created without a public IP address.
	DisallowPublicIpAddress pulumi.BoolPtrInput `pulumi:"disallowPublicIpAddress"`
	// The fully-qualified domain name of the virtual machine.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The Microsoft Azure Marketplace image reference of the virtual machine.
	GalleryImageReference GalleryImageReferencePtrInput `pulumi:"galleryImageReference"`
	// The identifier of the resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A value indicating whether this virtual machine uses an SSH key for authentication.
	IsAuthenticationWithSshKey pulumi.BoolPtrInput `pulumi:"isAuthenticationWithSshKey"`
	// The lab subnet name of the virtual machine.
	LabSubnetName pulumi.StringPtrInput `pulumi:"labSubnetName"`
	// The lab virtual network identifier of the virtual machine.
	LabVirtualNetworkId pulumi.StringPtrInput `pulumi:"labVirtualNetworkId"`
	// The location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The notes of the virtual machine.
	Notes pulumi.StringPtrInput `pulumi:"notes"`
	// The OS type of the virtual machine.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The object identifier of the owner of the virtual machine.
	OwnerObjectId pulumi.StringPtrInput `pulumi:"ownerObjectId"`
	// The password of the virtual machine administrator.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The provisioning status of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The size of the virtual machine.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The SSH key of the virtual machine administrator.
	SshKey pulumi.StringPtrInput `pulumi:"sshKey"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The user name of the virtual machine.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (LabVirtualMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabVirtualMachine)(nil)).Elem()
}

func (i LabVirtualMachineArgs) ToLabVirtualMachineOutput() LabVirtualMachineOutput {
	return i.ToLabVirtualMachineOutputWithContext(context.Background())
}

func (i LabVirtualMachineArgs) ToLabVirtualMachineOutputWithContext(ctx context.Context) LabVirtualMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabVirtualMachineOutput)
}

func (i LabVirtualMachineArgs) ToLabVirtualMachinePtrOutput() LabVirtualMachinePtrOutput {
	return i.ToLabVirtualMachinePtrOutputWithContext(context.Background())
}

func (i LabVirtualMachineArgs) ToLabVirtualMachinePtrOutputWithContext(ctx context.Context) LabVirtualMachinePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabVirtualMachineOutput).ToLabVirtualMachinePtrOutputWithContext(ctx)
}

// LabVirtualMachinePtrInput is an input type that accepts LabVirtualMachineArgs, LabVirtualMachinePtr and LabVirtualMachinePtrOutput values.
// You can construct a concrete instance of `LabVirtualMachinePtrInput` via:
//
//          LabVirtualMachineArgs{...}
//
//  or:
//
//          nil
type LabVirtualMachinePtrInput interface {
	pulumi.Input

	ToLabVirtualMachinePtrOutput() LabVirtualMachinePtrOutput
	ToLabVirtualMachinePtrOutputWithContext(context.Context) LabVirtualMachinePtrOutput
}

type labVirtualMachinePtrType LabVirtualMachineArgs

func LabVirtualMachinePtr(v *LabVirtualMachineArgs) LabVirtualMachinePtrInput {
	return (*labVirtualMachinePtrType)(v)
}

func (*labVirtualMachinePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabVirtualMachine)(nil)).Elem()
}

func (i *labVirtualMachinePtrType) ToLabVirtualMachinePtrOutput() LabVirtualMachinePtrOutput {
	return i.ToLabVirtualMachinePtrOutputWithContext(context.Background())
}

func (i *labVirtualMachinePtrType) ToLabVirtualMachinePtrOutputWithContext(ctx context.Context) LabVirtualMachinePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabVirtualMachinePtrOutput)
}

// A virtual machine.
type LabVirtualMachineOutput struct{ *pulumi.OutputState }

func (LabVirtualMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabVirtualMachine)(nil)).Elem()
}

func (o LabVirtualMachineOutput) ToLabVirtualMachineOutput() LabVirtualMachineOutput {
	return o
}

func (o LabVirtualMachineOutput) ToLabVirtualMachineOutputWithContext(ctx context.Context) LabVirtualMachineOutput {
	return o
}

func (o LabVirtualMachineOutput) ToLabVirtualMachinePtrOutput() LabVirtualMachinePtrOutput {
	return o.ToLabVirtualMachinePtrOutputWithContext(context.Background())
}

func (o LabVirtualMachineOutput) ToLabVirtualMachinePtrOutputWithContext(ctx context.Context) LabVirtualMachinePtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *LabVirtualMachine {
		return &v
	}).(LabVirtualMachinePtrOutput)
}

// The artifact deployment status for the virtual machine.
func (o LabVirtualMachineOutput) ArtifactDeploymentStatus() ArtifactDeploymentStatusPropertiesPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *ArtifactDeploymentStatusProperties { return v.ArtifactDeploymentStatus }).(ArtifactDeploymentStatusPropertiesPtrOutput)
}

// The artifacts to be installed on the virtual machine.
func (o LabVirtualMachineOutput) Artifacts() ArtifactInstallPropertiesArrayOutput {
	return o.ApplyT(func(v LabVirtualMachine) []ArtifactInstallProperties { return v.Artifacts }).(ArtifactInstallPropertiesArrayOutput)
}

// The resource identifier (Microsoft.Compute) of the virtual machine.
func (o LabVirtualMachineOutput) ComputeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.ComputeId }).(pulumi.StringPtrOutput)
}

// The email address of creator of the virtual machine.
func (o LabVirtualMachineOutput) CreatedByUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.CreatedByUser }).(pulumi.StringPtrOutput)
}

// The object identifier of the creator of the virtual machine.
func (o LabVirtualMachineOutput) CreatedByUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.CreatedByUserId }).(pulumi.StringPtrOutput)
}

// The custom image identifier of the virtual machine.
func (o LabVirtualMachineOutput) CustomImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.CustomImageId }).(pulumi.StringPtrOutput)
}

// Indicates whether the virtual machine is to be created without a public IP address.
func (o LabVirtualMachineOutput) DisallowPublicIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *bool { return v.DisallowPublicIpAddress }).(pulumi.BoolPtrOutput)
}

// The fully-qualified domain name of the virtual machine.
func (o LabVirtualMachineOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The Microsoft Azure Marketplace image reference of the virtual machine.
func (o LabVirtualMachineOutput) GalleryImageReference() GalleryImageReferencePtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *GalleryImageReference { return v.GalleryImageReference }).(GalleryImageReferencePtrOutput)
}

// The identifier of the resource.
func (o LabVirtualMachineOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A value indicating whether this virtual machine uses an SSH key for authentication.
func (o LabVirtualMachineOutput) IsAuthenticationWithSshKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *bool { return v.IsAuthenticationWithSshKey }).(pulumi.BoolPtrOutput)
}

// The lab subnet name of the virtual machine.
func (o LabVirtualMachineOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.LabSubnetName }).(pulumi.StringPtrOutput)
}

// The lab virtual network identifier of the virtual machine.
func (o LabVirtualMachineOutput) LabVirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.LabVirtualNetworkId }).(pulumi.StringPtrOutput)
}

// The location of the resource.
func (o LabVirtualMachineOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o LabVirtualMachineOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The notes of the virtual machine.
func (o LabVirtualMachineOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

// The OS type of the virtual machine.
func (o LabVirtualMachineOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The object identifier of the owner of the virtual machine.
func (o LabVirtualMachineOutput) OwnerObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.OwnerObjectId }).(pulumi.StringPtrOutput)
}

// The password of the virtual machine administrator.
func (o LabVirtualMachineOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The provisioning status of the resource.
func (o LabVirtualMachineOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The size of the virtual machine.
func (o LabVirtualMachineOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The SSH key of the virtual machine administrator.
func (o LabVirtualMachineOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o LabVirtualMachineOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LabVirtualMachine) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o LabVirtualMachineOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The user name of the virtual machine.
func (o LabVirtualMachineOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachine) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type LabVirtualMachinePtrOutput struct{ *pulumi.OutputState }

func (LabVirtualMachinePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabVirtualMachine)(nil)).Elem()
}

func (o LabVirtualMachinePtrOutput) ToLabVirtualMachinePtrOutput() LabVirtualMachinePtrOutput {
	return o
}

func (o LabVirtualMachinePtrOutput) ToLabVirtualMachinePtrOutputWithContext(ctx context.Context) LabVirtualMachinePtrOutput {
	return o
}

func (o LabVirtualMachinePtrOutput) Elem() LabVirtualMachineOutput {
	return o.ApplyT(func(v *LabVirtualMachine) LabVirtualMachine { return *v }).(LabVirtualMachineOutput)
}

// The artifact deployment status for the virtual machine.
func (o LabVirtualMachinePtrOutput) ArtifactDeploymentStatus() ArtifactDeploymentStatusPropertiesPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *ArtifactDeploymentStatusProperties {
		if v == nil {
			return nil
		}
		return v.ArtifactDeploymentStatus
	}).(ArtifactDeploymentStatusPropertiesPtrOutput)
}

// The artifacts to be installed on the virtual machine.
func (o LabVirtualMachinePtrOutput) Artifacts() ArtifactInstallPropertiesArrayOutput {
	return o.ApplyT(func(v *LabVirtualMachine) []ArtifactInstallProperties {
		if v == nil {
			return nil
		}
		return v.Artifacts
	}).(ArtifactInstallPropertiesArrayOutput)
}

// The resource identifier (Microsoft.Compute) of the virtual machine.
func (o LabVirtualMachinePtrOutput) ComputeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.ComputeId
	}).(pulumi.StringPtrOutput)
}

// The email address of creator of the virtual machine.
func (o LabVirtualMachinePtrOutput) CreatedByUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByUser
	}).(pulumi.StringPtrOutput)
}

// The object identifier of the creator of the virtual machine.
func (o LabVirtualMachinePtrOutput) CreatedByUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByUserId
	}).(pulumi.StringPtrOutput)
}

// The custom image identifier of the virtual machine.
func (o LabVirtualMachinePtrOutput) CustomImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.CustomImageId
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the virtual machine is to be created without a public IP address.
func (o LabVirtualMachinePtrOutput) DisallowPublicIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *bool {
		if v == nil {
			return nil
		}
		return v.DisallowPublicIpAddress
	}).(pulumi.BoolPtrOutput)
}

// The fully-qualified domain name of the virtual machine.
func (o LabVirtualMachinePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The Microsoft Azure Marketplace image reference of the virtual machine.
func (o LabVirtualMachinePtrOutput) GalleryImageReference() GalleryImageReferencePtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *GalleryImageReference {
		if v == nil {
			return nil
		}
		return v.GalleryImageReference
	}).(GalleryImageReferencePtrOutput)
}

// The identifier of the resource.
func (o LabVirtualMachinePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether this virtual machine uses an SSH key for authentication.
func (o LabVirtualMachinePtrOutput) IsAuthenticationWithSshKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *bool {
		if v == nil {
			return nil
		}
		return v.IsAuthenticationWithSshKey
	}).(pulumi.BoolPtrOutput)
}

// The lab subnet name of the virtual machine.
func (o LabVirtualMachinePtrOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.LabSubnetName
	}).(pulumi.StringPtrOutput)
}

// The lab virtual network identifier of the virtual machine.
func (o LabVirtualMachinePtrOutput) LabVirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.LabVirtualNetworkId
	}).(pulumi.StringPtrOutput)
}

// The location of the resource.
func (o LabVirtualMachinePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o LabVirtualMachinePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The notes of the virtual machine.
func (o LabVirtualMachinePtrOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.Notes
	}).(pulumi.StringPtrOutput)
}

// The OS type of the virtual machine.
func (o LabVirtualMachinePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The object identifier of the owner of the virtual machine.
func (o LabVirtualMachinePtrOutput) OwnerObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.OwnerObjectId
	}).(pulumi.StringPtrOutput)
}

// The password of the virtual machine administrator.
func (o LabVirtualMachinePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The provisioning status of the resource.
func (o LabVirtualMachinePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The size of the virtual machine.
func (o LabVirtualMachinePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The SSH key of the virtual machine administrator.
func (o LabVirtualMachinePtrOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.SshKey
	}).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o LabVirtualMachinePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LabVirtualMachine) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o LabVirtualMachinePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The user name of the virtual machine.
func (o LabVirtualMachinePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// A virtual machine.
type LabVirtualMachineResponse struct {
	// The artifact deployment status for the virtual machine.
	ArtifactDeploymentStatus *ArtifactDeploymentStatusPropertiesResponse `pulumi:"artifactDeploymentStatus"`
	// The artifacts to be installed on the virtual machine.
	Artifacts []ArtifactInstallPropertiesResponse `pulumi:"artifacts"`
	// The resource identifier (Microsoft.Compute) of the virtual machine.
	ComputeId *string `pulumi:"computeId"`
	// The email address of creator of the virtual machine.
	CreatedByUser *string `pulumi:"createdByUser"`
	// The object identifier of the creator of the virtual machine.
	CreatedByUserId *string `pulumi:"createdByUserId"`
	// The custom image identifier of the virtual machine.
	CustomImageId *string `pulumi:"customImageId"`
	// Indicates whether the virtual machine is to be created without a public IP address.
	DisallowPublicIpAddress *bool `pulumi:"disallowPublicIpAddress"`
	// The fully-qualified domain name of the virtual machine.
	Fqdn *string `pulumi:"fqdn"`
	// The Microsoft Azure Marketplace image reference of the virtual machine.
	GalleryImageReference *GalleryImageReferenceResponse `pulumi:"galleryImageReference"`
	// The identifier of the resource.
	Id *string `pulumi:"id"`
	// A value indicating whether this virtual machine uses an SSH key for authentication.
	IsAuthenticationWithSshKey *bool `pulumi:"isAuthenticationWithSshKey"`
	// The lab subnet name of the virtual machine.
	LabSubnetName *string `pulumi:"labSubnetName"`
	// The lab virtual network identifier of the virtual machine.
	LabVirtualNetworkId *string `pulumi:"labVirtualNetworkId"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The notes of the virtual machine.
	Notes *string `pulumi:"notes"`
	// The OS type of the virtual machine.
	OsType *string `pulumi:"osType"`
	// The object identifier of the owner of the virtual machine.
	OwnerObjectId *string `pulumi:"ownerObjectId"`
	// The password of the virtual machine administrator.
	Password *string `pulumi:"password"`
	// The provisioning status of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The size of the virtual machine.
	Size *string `pulumi:"size"`
	// The SSH key of the virtual machine administrator.
	SshKey *string `pulumi:"sshKey"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type *string `pulumi:"type"`
	// The user name of the virtual machine.
	UserName *string `pulumi:"userName"`
}

// LabVirtualMachineResponseInput is an input type that accepts LabVirtualMachineResponseArgs and LabVirtualMachineResponseOutput values.
// You can construct a concrete instance of `LabVirtualMachineResponseInput` via:
//
//          LabVirtualMachineResponseArgs{...}
type LabVirtualMachineResponseInput interface {
	pulumi.Input

	ToLabVirtualMachineResponseOutput() LabVirtualMachineResponseOutput
	ToLabVirtualMachineResponseOutputWithContext(context.Context) LabVirtualMachineResponseOutput
}

// A virtual machine.
type LabVirtualMachineResponseArgs struct {
	// The artifact deployment status for the virtual machine.
	ArtifactDeploymentStatus ArtifactDeploymentStatusPropertiesResponsePtrInput `pulumi:"artifactDeploymentStatus"`
	// The artifacts to be installed on the virtual machine.
	Artifacts ArtifactInstallPropertiesResponseArrayInput `pulumi:"artifacts"`
	// The resource identifier (Microsoft.Compute) of the virtual machine.
	ComputeId pulumi.StringPtrInput `pulumi:"computeId"`
	// The email address of creator of the virtual machine.
	CreatedByUser pulumi.StringPtrInput `pulumi:"createdByUser"`
	// The object identifier of the creator of the virtual machine.
	CreatedByUserId pulumi.StringPtrInput `pulumi:"createdByUserId"`
	// The custom image identifier of the virtual machine.
	CustomImageId pulumi.StringPtrInput `pulumi:"customImageId"`
	// Indicates whether the virtual machine is to be created without a public IP address.
	DisallowPublicIpAddress pulumi.BoolPtrInput `pulumi:"disallowPublicIpAddress"`
	// The fully-qualified domain name of the virtual machine.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The Microsoft Azure Marketplace image reference of the virtual machine.
	GalleryImageReference GalleryImageReferenceResponsePtrInput `pulumi:"galleryImageReference"`
	// The identifier of the resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A value indicating whether this virtual machine uses an SSH key for authentication.
	IsAuthenticationWithSshKey pulumi.BoolPtrInput `pulumi:"isAuthenticationWithSshKey"`
	// The lab subnet name of the virtual machine.
	LabSubnetName pulumi.StringPtrInput `pulumi:"labSubnetName"`
	// The lab virtual network identifier of the virtual machine.
	LabVirtualNetworkId pulumi.StringPtrInput `pulumi:"labVirtualNetworkId"`
	// The location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The notes of the virtual machine.
	Notes pulumi.StringPtrInput `pulumi:"notes"`
	// The OS type of the virtual machine.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The object identifier of the owner of the virtual machine.
	OwnerObjectId pulumi.StringPtrInput `pulumi:"ownerObjectId"`
	// The password of the virtual machine administrator.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The provisioning status of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The size of the virtual machine.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The SSH key of the virtual machine administrator.
	SshKey pulumi.StringPtrInput `pulumi:"sshKey"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The user name of the virtual machine.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (LabVirtualMachineResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabVirtualMachineResponse)(nil)).Elem()
}

func (i LabVirtualMachineResponseArgs) ToLabVirtualMachineResponseOutput() LabVirtualMachineResponseOutput {
	return i.ToLabVirtualMachineResponseOutputWithContext(context.Background())
}

func (i LabVirtualMachineResponseArgs) ToLabVirtualMachineResponseOutputWithContext(ctx context.Context) LabVirtualMachineResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabVirtualMachineResponseOutput)
}

func (i LabVirtualMachineResponseArgs) ToLabVirtualMachineResponsePtrOutput() LabVirtualMachineResponsePtrOutput {
	return i.ToLabVirtualMachineResponsePtrOutputWithContext(context.Background())
}

func (i LabVirtualMachineResponseArgs) ToLabVirtualMachineResponsePtrOutputWithContext(ctx context.Context) LabVirtualMachineResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabVirtualMachineResponseOutput).ToLabVirtualMachineResponsePtrOutputWithContext(ctx)
}

// LabVirtualMachineResponsePtrInput is an input type that accepts LabVirtualMachineResponseArgs, LabVirtualMachineResponsePtr and LabVirtualMachineResponsePtrOutput values.
// You can construct a concrete instance of `LabVirtualMachineResponsePtrInput` via:
//
//          LabVirtualMachineResponseArgs{...}
//
//  or:
//
//          nil
type LabVirtualMachineResponsePtrInput interface {
	pulumi.Input

	ToLabVirtualMachineResponsePtrOutput() LabVirtualMachineResponsePtrOutput
	ToLabVirtualMachineResponsePtrOutputWithContext(context.Context) LabVirtualMachineResponsePtrOutput
}

type labVirtualMachineResponsePtrType LabVirtualMachineResponseArgs

func LabVirtualMachineResponsePtr(v *LabVirtualMachineResponseArgs) LabVirtualMachineResponsePtrInput {
	return (*labVirtualMachineResponsePtrType)(v)
}

func (*labVirtualMachineResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabVirtualMachineResponse)(nil)).Elem()
}

func (i *labVirtualMachineResponsePtrType) ToLabVirtualMachineResponsePtrOutput() LabVirtualMachineResponsePtrOutput {
	return i.ToLabVirtualMachineResponsePtrOutputWithContext(context.Background())
}

func (i *labVirtualMachineResponsePtrType) ToLabVirtualMachineResponsePtrOutputWithContext(ctx context.Context) LabVirtualMachineResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabVirtualMachineResponsePtrOutput)
}

// A virtual machine.
type LabVirtualMachineResponseOutput struct{ *pulumi.OutputState }

func (LabVirtualMachineResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabVirtualMachineResponse)(nil)).Elem()
}

func (o LabVirtualMachineResponseOutput) ToLabVirtualMachineResponseOutput() LabVirtualMachineResponseOutput {
	return o
}

func (o LabVirtualMachineResponseOutput) ToLabVirtualMachineResponseOutputWithContext(ctx context.Context) LabVirtualMachineResponseOutput {
	return o
}

func (o LabVirtualMachineResponseOutput) ToLabVirtualMachineResponsePtrOutput() LabVirtualMachineResponsePtrOutput {
	return o.ToLabVirtualMachineResponsePtrOutputWithContext(context.Background())
}

func (o LabVirtualMachineResponseOutput) ToLabVirtualMachineResponsePtrOutputWithContext(ctx context.Context) LabVirtualMachineResponsePtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *LabVirtualMachineResponse {
		return &v
	}).(LabVirtualMachineResponsePtrOutput)
}

// The artifact deployment status for the virtual machine.
func (o LabVirtualMachineResponseOutput) ArtifactDeploymentStatus() ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *ArtifactDeploymentStatusPropertiesResponse {
		return v.ArtifactDeploymentStatus
	}).(ArtifactDeploymentStatusPropertiesResponsePtrOutput)
}

// The artifacts to be installed on the virtual machine.
func (o LabVirtualMachineResponseOutput) Artifacts() ArtifactInstallPropertiesResponseArrayOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) []ArtifactInstallPropertiesResponse { return v.Artifacts }).(ArtifactInstallPropertiesResponseArrayOutput)
}

// The resource identifier (Microsoft.Compute) of the virtual machine.
func (o LabVirtualMachineResponseOutput) ComputeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.ComputeId }).(pulumi.StringPtrOutput)
}

// The email address of creator of the virtual machine.
func (o LabVirtualMachineResponseOutput) CreatedByUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.CreatedByUser }).(pulumi.StringPtrOutput)
}

// The object identifier of the creator of the virtual machine.
func (o LabVirtualMachineResponseOutput) CreatedByUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.CreatedByUserId }).(pulumi.StringPtrOutput)
}

// The custom image identifier of the virtual machine.
func (o LabVirtualMachineResponseOutput) CustomImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.CustomImageId }).(pulumi.StringPtrOutput)
}

// Indicates whether the virtual machine is to be created without a public IP address.
func (o LabVirtualMachineResponseOutput) DisallowPublicIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *bool { return v.DisallowPublicIpAddress }).(pulumi.BoolPtrOutput)
}

// The fully-qualified domain name of the virtual machine.
func (o LabVirtualMachineResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The Microsoft Azure Marketplace image reference of the virtual machine.
func (o LabVirtualMachineResponseOutput) GalleryImageReference() GalleryImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *GalleryImageReferenceResponse { return v.GalleryImageReference }).(GalleryImageReferenceResponsePtrOutput)
}

// The identifier of the resource.
func (o LabVirtualMachineResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A value indicating whether this virtual machine uses an SSH key for authentication.
func (o LabVirtualMachineResponseOutput) IsAuthenticationWithSshKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *bool { return v.IsAuthenticationWithSshKey }).(pulumi.BoolPtrOutput)
}

// The lab subnet name of the virtual machine.
func (o LabVirtualMachineResponseOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.LabSubnetName }).(pulumi.StringPtrOutput)
}

// The lab virtual network identifier of the virtual machine.
func (o LabVirtualMachineResponseOutput) LabVirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.LabVirtualNetworkId }).(pulumi.StringPtrOutput)
}

// The location of the resource.
func (o LabVirtualMachineResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o LabVirtualMachineResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The notes of the virtual machine.
func (o LabVirtualMachineResponseOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

// The OS type of the virtual machine.
func (o LabVirtualMachineResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The object identifier of the owner of the virtual machine.
func (o LabVirtualMachineResponseOutput) OwnerObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.OwnerObjectId }).(pulumi.StringPtrOutput)
}

// The password of the virtual machine administrator.
func (o LabVirtualMachineResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The provisioning status of the resource.
func (o LabVirtualMachineResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The size of the virtual machine.
func (o LabVirtualMachineResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The SSH key of the virtual machine administrator.
func (o LabVirtualMachineResponseOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o LabVirtualMachineResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o LabVirtualMachineResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The user name of the virtual machine.
func (o LabVirtualMachineResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabVirtualMachineResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type LabVirtualMachineResponsePtrOutput struct{ *pulumi.OutputState }

func (LabVirtualMachineResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabVirtualMachineResponse)(nil)).Elem()
}

func (o LabVirtualMachineResponsePtrOutput) ToLabVirtualMachineResponsePtrOutput() LabVirtualMachineResponsePtrOutput {
	return o
}

func (o LabVirtualMachineResponsePtrOutput) ToLabVirtualMachineResponsePtrOutputWithContext(ctx context.Context) LabVirtualMachineResponsePtrOutput {
	return o
}

func (o LabVirtualMachineResponsePtrOutput) Elem() LabVirtualMachineResponseOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) LabVirtualMachineResponse { return *v }).(LabVirtualMachineResponseOutput)
}

// The artifact deployment status for the virtual machine.
func (o LabVirtualMachineResponsePtrOutput) ArtifactDeploymentStatus() ArtifactDeploymentStatusPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *ArtifactDeploymentStatusPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.ArtifactDeploymentStatus
	}).(ArtifactDeploymentStatusPropertiesResponsePtrOutput)
}

// The artifacts to be installed on the virtual machine.
func (o LabVirtualMachineResponsePtrOutput) Artifacts() ArtifactInstallPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) []ArtifactInstallPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Artifacts
	}).(ArtifactInstallPropertiesResponseArrayOutput)
}

// The resource identifier (Microsoft.Compute) of the virtual machine.
func (o LabVirtualMachineResponsePtrOutput) ComputeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.ComputeId
	}).(pulumi.StringPtrOutput)
}

// The email address of creator of the virtual machine.
func (o LabVirtualMachineResponsePtrOutput) CreatedByUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByUser
	}).(pulumi.StringPtrOutput)
}

// The object identifier of the creator of the virtual machine.
func (o LabVirtualMachineResponsePtrOutput) CreatedByUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByUserId
	}).(pulumi.StringPtrOutput)
}

// The custom image identifier of the virtual machine.
func (o LabVirtualMachineResponsePtrOutput) CustomImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomImageId
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the virtual machine is to be created without a public IP address.
func (o LabVirtualMachineResponsePtrOutput) DisallowPublicIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisallowPublicIpAddress
	}).(pulumi.BoolPtrOutput)
}

// The fully-qualified domain name of the virtual machine.
func (o LabVirtualMachineResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The Microsoft Azure Marketplace image reference of the virtual machine.
func (o LabVirtualMachineResponsePtrOutput) GalleryImageReference() GalleryImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *GalleryImageReferenceResponse {
		if v == nil {
			return nil
		}
		return v.GalleryImageReference
	}).(GalleryImageReferenceResponsePtrOutput)
}

// The identifier of the resource.
func (o LabVirtualMachineResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether this virtual machine uses an SSH key for authentication.
func (o LabVirtualMachineResponsePtrOutput) IsAuthenticationWithSshKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsAuthenticationWithSshKey
	}).(pulumi.BoolPtrOutput)
}

// The lab subnet name of the virtual machine.
func (o LabVirtualMachineResponsePtrOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.LabSubnetName
	}).(pulumi.StringPtrOutput)
}

// The lab virtual network identifier of the virtual machine.
func (o LabVirtualMachineResponsePtrOutput) LabVirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.LabVirtualNetworkId
	}).(pulumi.StringPtrOutput)
}

// The location of the resource.
func (o LabVirtualMachineResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o LabVirtualMachineResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The notes of the virtual machine.
func (o LabVirtualMachineResponsePtrOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.Notes
	}).(pulumi.StringPtrOutput)
}

// The OS type of the virtual machine.
func (o LabVirtualMachineResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The object identifier of the owner of the virtual machine.
func (o LabVirtualMachineResponsePtrOutput) OwnerObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.OwnerObjectId
	}).(pulumi.StringPtrOutput)
}

// The password of the virtual machine administrator.
func (o LabVirtualMachineResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The provisioning status of the resource.
func (o LabVirtualMachineResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The size of the virtual machine.
func (o LabVirtualMachineResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The SSH key of the virtual machine administrator.
func (o LabVirtualMachineResponsePtrOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.SshKey
	}).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o LabVirtualMachineResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o LabVirtualMachineResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The user name of the virtual machine.
func (o LabVirtualMachineResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabVirtualMachineResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Information about a Linux OS.
type LinuxOsInfo struct {
	// The state of the Linux OS.
	LinuxOsState *string `pulumi:"linuxOsState"`
}

// LinuxOsInfoInput is an input type that accepts LinuxOsInfoArgs and LinuxOsInfoOutput values.
// You can construct a concrete instance of `LinuxOsInfoInput` via:
//
//          LinuxOsInfoArgs{...}
type LinuxOsInfoInput interface {
	pulumi.Input

	ToLinuxOsInfoOutput() LinuxOsInfoOutput
	ToLinuxOsInfoOutputWithContext(context.Context) LinuxOsInfoOutput
}

// Information about a Linux OS.
type LinuxOsInfoArgs struct {
	// The state of the Linux OS.
	LinuxOsState pulumi.StringPtrInput `pulumi:"linuxOsState"`
}

func (LinuxOsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxOsInfo)(nil)).Elem()
}

func (i LinuxOsInfoArgs) ToLinuxOsInfoOutput() LinuxOsInfoOutput {
	return i.ToLinuxOsInfoOutputWithContext(context.Background())
}

func (i LinuxOsInfoArgs) ToLinuxOsInfoOutputWithContext(ctx context.Context) LinuxOsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOsInfoOutput)
}

func (i LinuxOsInfoArgs) ToLinuxOsInfoPtrOutput() LinuxOsInfoPtrOutput {
	return i.ToLinuxOsInfoPtrOutputWithContext(context.Background())
}

func (i LinuxOsInfoArgs) ToLinuxOsInfoPtrOutputWithContext(ctx context.Context) LinuxOsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOsInfoOutput).ToLinuxOsInfoPtrOutputWithContext(ctx)
}

// LinuxOsInfoPtrInput is an input type that accepts LinuxOsInfoArgs, LinuxOsInfoPtr and LinuxOsInfoPtrOutput values.
// You can construct a concrete instance of `LinuxOsInfoPtrInput` via:
//
//          LinuxOsInfoArgs{...}
//
//  or:
//
//          nil
type LinuxOsInfoPtrInput interface {
	pulumi.Input

	ToLinuxOsInfoPtrOutput() LinuxOsInfoPtrOutput
	ToLinuxOsInfoPtrOutputWithContext(context.Context) LinuxOsInfoPtrOutput
}

type linuxOsInfoPtrType LinuxOsInfoArgs

func LinuxOsInfoPtr(v *LinuxOsInfoArgs) LinuxOsInfoPtrInput {
	return (*linuxOsInfoPtrType)(v)
}

func (*linuxOsInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxOsInfo)(nil)).Elem()
}

func (i *linuxOsInfoPtrType) ToLinuxOsInfoPtrOutput() LinuxOsInfoPtrOutput {
	return i.ToLinuxOsInfoPtrOutputWithContext(context.Background())
}

func (i *linuxOsInfoPtrType) ToLinuxOsInfoPtrOutputWithContext(ctx context.Context) LinuxOsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOsInfoPtrOutput)
}

// Information about a Linux OS.
type LinuxOsInfoOutput struct{ *pulumi.OutputState }

func (LinuxOsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxOsInfo)(nil)).Elem()
}

func (o LinuxOsInfoOutput) ToLinuxOsInfoOutput() LinuxOsInfoOutput {
	return o
}

func (o LinuxOsInfoOutput) ToLinuxOsInfoOutputWithContext(ctx context.Context) LinuxOsInfoOutput {
	return o
}

func (o LinuxOsInfoOutput) ToLinuxOsInfoPtrOutput() LinuxOsInfoPtrOutput {
	return o.ToLinuxOsInfoPtrOutputWithContext(context.Background())
}

func (o LinuxOsInfoOutput) ToLinuxOsInfoPtrOutputWithContext(ctx context.Context) LinuxOsInfoPtrOutput {
	return o.ApplyT(func(v LinuxOsInfo) *LinuxOsInfo {
		return &v
	}).(LinuxOsInfoPtrOutput)
}

// The state of the Linux OS.
func (o LinuxOsInfoOutput) LinuxOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxOsInfo) *string { return v.LinuxOsState }).(pulumi.StringPtrOutput)
}

type LinuxOsInfoPtrOutput struct{ *pulumi.OutputState }

func (LinuxOsInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxOsInfo)(nil)).Elem()
}

func (o LinuxOsInfoPtrOutput) ToLinuxOsInfoPtrOutput() LinuxOsInfoPtrOutput {
	return o
}

func (o LinuxOsInfoPtrOutput) ToLinuxOsInfoPtrOutputWithContext(ctx context.Context) LinuxOsInfoPtrOutput {
	return o
}

func (o LinuxOsInfoPtrOutput) Elem() LinuxOsInfoOutput {
	return o.ApplyT(func(v *LinuxOsInfo) LinuxOsInfo { return *v }).(LinuxOsInfoOutput)
}

// The state of the Linux OS.
func (o LinuxOsInfoPtrOutput) LinuxOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxOsInfo) *string {
		if v == nil {
			return nil
		}
		return v.LinuxOsState
	}).(pulumi.StringPtrOutput)
}

// Information about a Linux OS.
type LinuxOsInfoResponse struct {
	// The state of the Linux OS.
	LinuxOsState *string `pulumi:"linuxOsState"`
}

// LinuxOsInfoResponseInput is an input type that accepts LinuxOsInfoResponseArgs and LinuxOsInfoResponseOutput values.
// You can construct a concrete instance of `LinuxOsInfoResponseInput` via:
//
//          LinuxOsInfoResponseArgs{...}
type LinuxOsInfoResponseInput interface {
	pulumi.Input

	ToLinuxOsInfoResponseOutput() LinuxOsInfoResponseOutput
	ToLinuxOsInfoResponseOutputWithContext(context.Context) LinuxOsInfoResponseOutput
}

// Information about a Linux OS.
type LinuxOsInfoResponseArgs struct {
	// The state of the Linux OS.
	LinuxOsState pulumi.StringPtrInput `pulumi:"linuxOsState"`
}

func (LinuxOsInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxOsInfoResponse)(nil)).Elem()
}

func (i LinuxOsInfoResponseArgs) ToLinuxOsInfoResponseOutput() LinuxOsInfoResponseOutput {
	return i.ToLinuxOsInfoResponseOutputWithContext(context.Background())
}

func (i LinuxOsInfoResponseArgs) ToLinuxOsInfoResponseOutputWithContext(ctx context.Context) LinuxOsInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOsInfoResponseOutput)
}

func (i LinuxOsInfoResponseArgs) ToLinuxOsInfoResponsePtrOutput() LinuxOsInfoResponsePtrOutput {
	return i.ToLinuxOsInfoResponsePtrOutputWithContext(context.Background())
}

func (i LinuxOsInfoResponseArgs) ToLinuxOsInfoResponsePtrOutputWithContext(ctx context.Context) LinuxOsInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOsInfoResponseOutput).ToLinuxOsInfoResponsePtrOutputWithContext(ctx)
}

// LinuxOsInfoResponsePtrInput is an input type that accepts LinuxOsInfoResponseArgs, LinuxOsInfoResponsePtr and LinuxOsInfoResponsePtrOutput values.
// You can construct a concrete instance of `LinuxOsInfoResponsePtrInput` via:
//
//          LinuxOsInfoResponseArgs{...}
//
//  or:
//
//          nil
type LinuxOsInfoResponsePtrInput interface {
	pulumi.Input

	ToLinuxOsInfoResponsePtrOutput() LinuxOsInfoResponsePtrOutput
	ToLinuxOsInfoResponsePtrOutputWithContext(context.Context) LinuxOsInfoResponsePtrOutput
}

type linuxOsInfoResponsePtrType LinuxOsInfoResponseArgs

func LinuxOsInfoResponsePtr(v *LinuxOsInfoResponseArgs) LinuxOsInfoResponsePtrInput {
	return (*linuxOsInfoResponsePtrType)(v)
}

func (*linuxOsInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxOsInfoResponse)(nil)).Elem()
}

func (i *linuxOsInfoResponsePtrType) ToLinuxOsInfoResponsePtrOutput() LinuxOsInfoResponsePtrOutput {
	return i.ToLinuxOsInfoResponsePtrOutputWithContext(context.Background())
}

func (i *linuxOsInfoResponsePtrType) ToLinuxOsInfoResponsePtrOutputWithContext(ctx context.Context) LinuxOsInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOsInfoResponsePtrOutput)
}

// Information about a Linux OS.
type LinuxOsInfoResponseOutput struct{ *pulumi.OutputState }

func (LinuxOsInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxOsInfoResponse)(nil)).Elem()
}

func (o LinuxOsInfoResponseOutput) ToLinuxOsInfoResponseOutput() LinuxOsInfoResponseOutput {
	return o
}

func (o LinuxOsInfoResponseOutput) ToLinuxOsInfoResponseOutputWithContext(ctx context.Context) LinuxOsInfoResponseOutput {
	return o
}

func (o LinuxOsInfoResponseOutput) ToLinuxOsInfoResponsePtrOutput() LinuxOsInfoResponsePtrOutput {
	return o.ToLinuxOsInfoResponsePtrOutputWithContext(context.Background())
}

func (o LinuxOsInfoResponseOutput) ToLinuxOsInfoResponsePtrOutputWithContext(ctx context.Context) LinuxOsInfoResponsePtrOutput {
	return o.ApplyT(func(v LinuxOsInfoResponse) *LinuxOsInfoResponse {
		return &v
	}).(LinuxOsInfoResponsePtrOutput)
}

// The state of the Linux OS.
func (o LinuxOsInfoResponseOutput) LinuxOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxOsInfoResponse) *string { return v.LinuxOsState }).(pulumi.StringPtrOutput)
}

type LinuxOsInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (LinuxOsInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxOsInfoResponse)(nil)).Elem()
}

func (o LinuxOsInfoResponsePtrOutput) ToLinuxOsInfoResponsePtrOutput() LinuxOsInfoResponsePtrOutput {
	return o
}

func (o LinuxOsInfoResponsePtrOutput) ToLinuxOsInfoResponsePtrOutputWithContext(ctx context.Context) LinuxOsInfoResponsePtrOutput {
	return o
}

func (o LinuxOsInfoResponsePtrOutput) Elem() LinuxOsInfoResponseOutput {
	return o.ApplyT(func(v *LinuxOsInfoResponse) LinuxOsInfoResponse { return *v }).(LinuxOsInfoResponseOutput)
}

// The state of the Linux OS.
func (o LinuxOsInfoResponsePtrOutput) LinuxOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxOsInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinuxOsState
	}).(pulumi.StringPtrOutput)
}

type Subnet struct {
	AllowPublicIp *string `pulumi:"allowPublicIp"`
	LabSubnetName *string `pulumi:"labSubnetName"`
	ResourceId    *string `pulumi:"resourceId"`
}

// SubnetInput is an input type that accepts SubnetArgs and SubnetOutput values.
// You can construct a concrete instance of `SubnetInput` via:
//
//          SubnetArgs{...}
type SubnetInput interface {
	pulumi.Input

	ToSubnetOutput() SubnetOutput
	ToSubnetOutputWithContext(context.Context) SubnetOutput
}

type SubnetArgs struct {
	AllowPublicIp pulumi.StringPtrInput `pulumi:"allowPublicIp"`
	LabSubnetName pulumi.StringPtrInput `pulumi:"labSubnetName"`
	ResourceId    pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (SubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Subnet)(nil)).Elem()
}

func (i SubnetArgs) ToSubnetOutput() SubnetOutput {
	return i.ToSubnetOutputWithContext(context.Background())
}

func (i SubnetArgs) ToSubnetOutputWithContext(ctx context.Context) SubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetOutput)
}

// SubnetArrayInput is an input type that accepts SubnetArray and SubnetArrayOutput values.
// You can construct a concrete instance of `SubnetArrayInput` via:
//
//          SubnetArray{ SubnetArgs{...} }
type SubnetArrayInput interface {
	pulumi.Input

	ToSubnetArrayOutput() SubnetArrayOutput
	ToSubnetArrayOutputWithContext(context.Context) SubnetArrayOutput
}

type SubnetArray []SubnetInput

func (SubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Subnet)(nil)).Elem()
}

func (i SubnetArray) ToSubnetArrayOutput() SubnetArrayOutput {
	return i.ToSubnetArrayOutputWithContext(context.Background())
}

func (i SubnetArray) ToSubnetArrayOutputWithContext(ctx context.Context) SubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetArrayOutput)
}

type SubnetOutput struct{ *pulumi.OutputState }

func (SubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Subnet)(nil)).Elem()
}

func (o SubnetOutput) ToSubnetOutput() SubnetOutput {
	return o
}

func (o SubnetOutput) ToSubnetOutputWithContext(ctx context.Context) SubnetOutput {
	return o
}

func (o SubnetOutput) AllowPublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subnet) *string { return v.AllowPublicIp }).(pulumi.StringPtrOutput)
}

func (o SubnetOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subnet) *string { return v.LabSubnetName }).(pulumi.StringPtrOutput)
}

func (o SubnetOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subnet) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type SubnetArrayOutput struct{ *pulumi.OutputState }

func (SubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Subnet)(nil)).Elem()
}

func (o SubnetArrayOutput) ToSubnetArrayOutput() SubnetArrayOutput {
	return o
}

func (o SubnetArrayOutput) ToSubnetArrayOutputWithContext(ctx context.Context) SubnetArrayOutput {
	return o
}

func (o SubnetArrayOutput) Index(i pulumi.IntInput) SubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Subnet {
		return vs[0].([]Subnet)[vs[1].(int)]
	}).(SubnetOutput)
}

// Property overrides on a subnet of a virtual network.
type SubnetOverride struct {
	// The name given to the subnet within the lab.
	LabSubnetName *string `pulumi:"labSubnetName"`
	// The resource identifier of the subnet.
	ResourceId *string `pulumi:"resourceId"`
	// Indicates whether this subnet can be used during virtual machine creation.
	UseInVmCreationPermission *string `pulumi:"useInVmCreationPermission"`
	// Indicates whether public IP addresses can be assigned to virtual machines on this subnet.
	UsePublicIpAddressPermission *string `pulumi:"usePublicIpAddressPermission"`
}

// SubnetOverrideInput is an input type that accepts SubnetOverrideArgs and SubnetOverrideOutput values.
// You can construct a concrete instance of `SubnetOverrideInput` via:
//
//          SubnetOverrideArgs{...}
type SubnetOverrideInput interface {
	pulumi.Input

	ToSubnetOverrideOutput() SubnetOverrideOutput
	ToSubnetOverrideOutputWithContext(context.Context) SubnetOverrideOutput
}

// Property overrides on a subnet of a virtual network.
type SubnetOverrideArgs struct {
	// The name given to the subnet within the lab.
	LabSubnetName pulumi.StringPtrInput `pulumi:"labSubnetName"`
	// The resource identifier of the subnet.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Indicates whether this subnet can be used during virtual machine creation.
	UseInVmCreationPermission pulumi.StringPtrInput `pulumi:"useInVmCreationPermission"`
	// Indicates whether public IP addresses can be assigned to virtual machines on this subnet.
	UsePublicIpAddressPermission pulumi.StringPtrInput `pulumi:"usePublicIpAddressPermission"`
}

func (SubnetOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetOverride)(nil)).Elem()
}

func (i SubnetOverrideArgs) ToSubnetOverrideOutput() SubnetOverrideOutput {
	return i.ToSubnetOverrideOutputWithContext(context.Background())
}

func (i SubnetOverrideArgs) ToSubnetOverrideOutputWithContext(ctx context.Context) SubnetOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetOverrideOutput)
}

// SubnetOverrideArrayInput is an input type that accepts SubnetOverrideArray and SubnetOverrideArrayOutput values.
// You can construct a concrete instance of `SubnetOverrideArrayInput` via:
//
//          SubnetOverrideArray{ SubnetOverrideArgs{...} }
type SubnetOverrideArrayInput interface {
	pulumi.Input

	ToSubnetOverrideArrayOutput() SubnetOverrideArrayOutput
	ToSubnetOverrideArrayOutputWithContext(context.Context) SubnetOverrideArrayOutput
}

type SubnetOverrideArray []SubnetOverrideInput

func (SubnetOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetOverride)(nil)).Elem()
}

func (i SubnetOverrideArray) ToSubnetOverrideArrayOutput() SubnetOverrideArrayOutput {
	return i.ToSubnetOverrideArrayOutputWithContext(context.Background())
}

func (i SubnetOverrideArray) ToSubnetOverrideArrayOutputWithContext(ctx context.Context) SubnetOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetOverrideArrayOutput)
}

// Property overrides on a subnet of a virtual network.
type SubnetOverrideOutput struct{ *pulumi.OutputState }

func (SubnetOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetOverride)(nil)).Elem()
}

func (o SubnetOverrideOutput) ToSubnetOverrideOutput() SubnetOverrideOutput {
	return o
}

func (o SubnetOverrideOutput) ToSubnetOverrideOutputWithContext(ctx context.Context) SubnetOverrideOutput {
	return o
}

// The name given to the subnet within the lab.
func (o SubnetOverrideOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverride) *string { return v.LabSubnetName }).(pulumi.StringPtrOutput)
}

// The resource identifier of the subnet.
func (o SubnetOverrideOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverride) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Indicates whether this subnet can be used during virtual machine creation.
func (o SubnetOverrideOutput) UseInVmCreationPermission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverride) *string { return v.UseInVmCreationPermission }).(pulumi.StringPtrOutput)
}

// Indicates whether public IP addresses can be assigned to virtual machines on this subnet.
func (o SubnetOverrideOutput) UsePublicIpAddressPermission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverride) *string { return v.UsePublicIpAddressPermission }).(pulumi.StringPtrOutput)
}

type SubnetOverrideArrayOutput struct{ *pulumi.OutputState }

func (SubnetOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetOverride)(nil)).Elem()
}

func (o SubnetOverrideArrayOutput) ToSubnetOverrideArrayOutput() SubnetOverrideArrayOutput {
	return o
}

func (o SubnetOverrideArrayOutput) ToSubnetOverrideArrayOutputWithContext(ctx context.Context) SubnetOverrideArrayOutput {
	return o
}

func (o SubnetOverrideArrayOutput) Index(i pulumi.IntInput) SubnetOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetOverride {
		return vs[0].([]SubnetOverride)[vs[1].(int)]
	}).(SubnetOverrideOutput)
}

// Property overrides on a subnet of a virtual network.
type SubnetOverrideResponse struct {
	// The name given to the subnet within the lab.
	LabSubnetName *string `pulumi:"labSubnetName"`
	// The resource identifier of the subnet.
	ResourceId *string `pulumi:"resourceId"`
	// Indicates whether this subnet can be used during virtual machine creation.
	UseInVmCreationPermission *string `pulumi:"useInVmCreationPermission"`
	// Indicates whether public IP addresses can be assigned to virtual machines on this subnet.
	UsePublicIpAddressPermission *string `pulumi:"usePublicIpAddressPermission"`
}

// SubnetOverrideResponseInput is an input type that accepts SubnetOverrideResponseArgs and SubnetOverrideResponseOutput values.
// You can construct a concrete instance of `SubnetOverrideResponseInput` via:
//
//          SubnetOverrideResponseArgs{...}
type SubnetOverrideResponseInput interface {
	pulumi.Input

	ToSubnetOverrideResponseOutput() SubnetOverrideResponseOutput
	ToSubnetOverrideResponseOutputWithContext(context.Context) SubnetOverrideResponseOutput
}

// Property overrides on a subnet of a virtual network.
type SubnetOverrideResponseArgs struct {
	// The name given to the subnet within the lab.
	LabSubnetName pulumi.StringPtrInput `pulumi:"labSubnetName"`
	// The resource identifier of the subnet.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Indicates whether this subnet can be used during virtual machine creation.
	UseInVmCreationPermission pulumi.StringPtrInput `pulumi:"useInVmCreationPermission"`
	// Indicates whether public IP addresses can be assigned to virtual machines on this subnet.
	UsePublicIpAddressPermission pulumi.StringPtrInput `pulumi:"usePublicIpAddressPermission"`
}

func (SubnetOverrideResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetOverrideResponse)(nil)).Elem()
}

func (i SubnetOverrideResponseArgs) ToSubnetOverrideResponseOutput() SubnetOverrideResponseOutput {
	return i.ToSubnetOverrideResponseOutputWithContext(context.Background())
}

func (i SubnetOverrideResponseArgs) ToSubnetOverrideResponseOutputWithContext(ctx context.Context) SubnetOverrideResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetOverrideResponseOutput)
}

// SubnetOverrideResponseArrayInput is an input type that accepts SubnetOverrideResponseArray and SubnetOverrideResponseArrayOutput values.
// You can construct a concrete instance of `SubnetOverrideResponseArrayInput` via:
//
//          SubnetOverrideResponseArray{ SubnetOverrideResponseArgs{...} }
type SubnetOverrideResponseArrayInput interface {
	pulumi.Input

	ToSubnetOverrideResponseArrayOutput() SubnetOverrideResponseArrayOutput
	ToSubnetOverrideResponseArrayOutputWithContext(context.Context) SubnetOverrideResponseArrayOutput
}

type SubnetOverrideResponseArray []SubnetOverrideResponseInput

func (SubnetOverrideResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetOverrideResponse)(nil)).Elem()
}

func (i SubnetOverrideResponseArray) ToSubnetOverrideResponseArrayOutput() SubnetOverrideResponseArrayOutput {
	return i.ToSubnetOverrideResponseArrayOutputWithContext(context.Background())
}

func (i SubnetOverrideResponseArray) ToSubnetOverrideResponseArrayOutputWithContext(ctx context.Context) SubnetOverrideResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetOverrideResponseArrayOutput)
}

// Property overrides on a subnet of a virtual network.
type SubnetOverrideResponseOutput struct{ *pulumi.OutputState }

func (SubnetOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetOverrideResponse)(nil)).Elem()
}

func (o SubnetOverrideResponseOutput) ToSubnetOverrideResponseOutput() SubnetOverrideResponseOutput {
	return o
}

func (o SubnetOverrideResponseOutput) ToSubnetOverrideResponseOutputWithContext(ctx context.Context) SubnetOverrideResponseOutput {
	return o
}

// The name given to the subnet within the lab.
func (o SubnetOverrideResponseOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverrideResponse) *string { return v.LabSubnetName }).(pulumi.StringPtrOutput)
}

// The resource identifier of the subnet.
func (o SubnetOverrideResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverrideResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Indicates whether this subnet can be used during virtual machine creation.
func (o SubnetOverrideResponseOutput) UseInVmCreationPermission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverrideResponse) *string { return v.UseInVmCreationPermission }).(pulumi.StringPtrOutput)
}

// Indicates whether public IP addresses can be assigned to virtual machines on this subnet.
func (o SubnetOverrideResponseOutput) UsePublicIpAddressPermission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetOverrideResponse) *string { return v.UsePublicIpAddressPermission }).(pulumi.StringPtrOutput)
}

type SubnetOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetOverrideResponse)(nil)).Elem()
}

func (o SubnetOverrideResponseArrayOutput) ToSubnetOverrideResponseArrayOutput() SubnetOverrideResponseArrayOutput {
	return o
}

func (o SubnetOverrideResponseArrayOutput) ToSubnetOverrideResponseArrayOutputWithContext(ctx context.Context) SubnetOverrideResponseArrayOutput {
	return o
}

func (o SubnetOverrideResponseArrayOutput) Index(i pulumi.IntInput) SubnetOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetOverrideResponse {
		return vs[0].([]SubnetOverrideResponse)[vs[1].(int)]
	}).(SubnetOverrideResponseOutput)
}

type SubnetResponse struct {
	AllowPublicIp *string `pulumi:"allowPublicIp"`
	LabSubnetName *string `pulumi:"labSubnetName"`
	ResourceId    *string `pulumi:"resourceId"`
}

// SubnetResponseInput is an input type that accepts SubnetResponseArgs and SubnetResponseOutput values.
// You can construct a concrete instance of `SubnetResponseInput` via:
//
//          SubnetResponseArgs{...}
type SubnetResponseInput interface {
	pulumi.Input

	ToSubnetResponseOutput() SubnetResponseOutput
	ToSubnetResponseOutputWithContext(context.Context) SubnetResponseOutput
}

type SubnetResponseArgs struct {
	AllowPublicIp pulumi.StringPtrInput `pulumi:"allowPublicIp"`
	LabSubnetName pulumi.StringPtrInput `pulumi:"labSubnetName"`
	ResourceId    pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (SubnetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (i SubnetResponseArgs) ToSubnetResponseOutput() SubnetResponseOutput {
	return i.ToSubnetResponseOutputWithContext(context.Background())
}

func (i SubnetResponseArgs) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponseOutput)
}

// SubnetResponseArrayInput is an input type that accepts SubnetResponseArray and SubnetResponseArrayOutput values.
// You can construct a concrete instance of `SubnetResponseArrayInput` via:
//
//          SubnetResponseArray{ SubnetResponseArgs{...} }
type SubnetResponseArrayInput interface {
	pulumi.Input

	ToSubnetResponseArrayOutput() SubnetResponseArrayOutput
	ToSubnetResponseArrayOutputWithContext(context.Context) SubnetResponseArrayOutput
}

type SubnetResponseArray []SubnetResponseInput

func (SubnetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (i SubnetResponseArray) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return i.ToSubnetResponseArrayOutputWithContext(context.Background())
}

func (i SubnetResponseArray) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponseArrayOutput)
}

type SubnetResponseOutput struct{ *pulumi.OutputState }

func (SubnetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseOutput) ToSubnetResponseOutput() SubnetResponseOutput {
	return o
}

func (o SubnetResponseOutput) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return o
}

func (o SubnetResponseOutput) AllowPublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.AllowPublicIp }).(pulumi.StringPtrOutput)
}

func (o SubnetResponseOutput) LabSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.LabSubnetName }).(pulumi.StringPtrOutput)
}

func (o SubnetResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type SubnetResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) Index(i pulumi.IntInput) SubnetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetResponse {
		return vs[0].([]SubnetResponse)[vs[1].(int)]
	}).(SubnetResponseOutput)
}

// Properties of a weekly schedule.
type WeekDetails struct {
	// The time of the day.
	Time *string `pulumi:"time"`
	// The days of the week.
	Weekdays []string `pulumi:"weekdays"`
}

// WeekDetailsInput is an input type that accepts WeekDetailsArgs and WeekDetailsOutput values.
// You can construct a concrete instance of `WeekDetailsInput` via:
//
//          WeekDetailsArgs{...}
type WeekDetailsInput interface {
	pulumi.Input

	ToWeekDetailsOutput() WeekDetailsOutput
	ToWeekDetailsOutputWithContext(context.Context) WeekDetailsOutput
}

// Properties of a weekly schedule.
type WeekDetailsArgs struct {
	// The time of the day.
	Time pulumi.StringPtrInput `pulumi:"time"`
	// The days of the week.
	Weekdays pulumi.StringArrayInput `pulumi:"weekdays"`
}

func (WeekDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekDetails)(nil)).Elem()
}

func (i WeekDetailsArgs) ToWeekDetailsOutput() WeekDetailsOutput {
	return i.ToWeekDetailsOutputWithContext(context.Background())
}

func (i WeekDetailsArgs) ToWeekDetailsOutputWithContext(ctx context.Context) WeekDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeekDetailsOutput)
}

func (i WeekDetailsArgs) ToWeekDetailsPtrOutput() WeekDetailsPtrOutput {
	return i.ToWeekDetailsPtrOutputWithContext(context.Background())
}

func (i WeekDetailsArgs) ToWeekDetailsPtrOutputWithContext(ctx context.Context) WeekDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeekDetailsOutput).ToWeekDetailsPtrOutputWithContext(ctx)
}

// WeekDetailsPtrInput is an input type that accepts WeekDetailsArgs, WeekDetailsPtr and WeekDetailsPtrOutput values.
// You can construct a concrete instance of `WeekDetailsPtrInput` via:
//
//          WeekDetailsArgs{...}
//
//  or:
//
//          nil
type WeekDetailsPtrInput interface {
	pulumi.Input

	ToWeekDetailsPtrOutput() WeekDetailsPtrOutput
	ToWeekDetailsPtrOutputWithContext(context.Context) WeekDetailsPtrOutput
}

type weekDetailsPtrType WeekDetailsArgs

func WeekDetailsPtr(v *WeekDetailsArgs) WeekDetailsPtrInput {
	return (*weekDetailsPtrType)(v)
}

func (*weekDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WeekDetails)(nil)).Elem()
}

func (i *weekDetailsPtrType) ToWeekDetailsPtrOutput() WeekDetailsPtrOutput {
	return i.ToWeekDetailsPtrOutputWithContext(context.Background())
}

func (i *weekDetailsPtrType) ToWeekDetailsPtrOutputWithContext(ctx context.Context) WeekDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeekDetailsPtrOutput)
}

// Properties of a weekly schedule.
type WeekDetailsOutput struct{ *pulumi.OutputState }

func (WeekDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekDetails)(nil)).Elem()
}

func (o WeekDetailsOutput) ToWeekDetailsOutput() WeekDetailsOutput {
	return o
}

func (o WeekDetailsOutput) ToWeekDetailsOutputWithContext(ctx context.Context) WeekDetailsOutput {
	return o
}

func (o WeekDetailsOutput) ToWeekDetailsPtrOutput() WeekDetailsPtrOutput {
	return o.ToWeekDetailsPtrOutputWithContext(context.Background())
}

func (o WeekDetailsOutput) ToWeekDetailsPtrOutputWithContext(ctx context.Context) WeekDetailsPtrOutput {
	return o.ApplyT(func(v WeekDetails) *WeekDetails {
		return &v
	}).(WeekDetailsPtrOutput)
}

// The time of the day.
func (o WeekDetailsOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WeekDetails) *string { return v.Time }).(pulumi.StringPtrOutput)
}

// The days of the week.
func (o WeekDetailsOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeekDetails) []string { return v.Weekdays }).(pulumi.StringArrayOutput)
}

type WeekDetailsPtrOutput struct{ *pulumi.OutputState }

func (WeekDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeekDetails)(nil)).Elem()
}

func (o WeekDetailsPtrOutput) ToWeekDetailsPtrOutput() WeekDetailsPtrOutput {
	return o
}

func (o WeekDetailsPtrOutput) ToWeekDetailsPtrOutputWithContext(ctx context.Context) WeekDetailsPtrOutput {
	return o
}

func (o WeekDetailsPtrOutput) Elem() WeekDetailsOutput {
	return o.ApplyT(func(v *WeekDetails) WeekDetails { return *v }).(WeekDetailsOutput)
}

// The time of the day.
func (o WeekDetailsPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WeekDetails) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// The days of the week.
func (o WeekDetailsPtrOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeekDetails) []string {
		if v == nil {
			return nil
		}
		return v.Weekdays
	}).(pulumi.StringArrayOutput)
}

// Properties of a weekly schedule.
type WeekDetailsResponse struct {
	// The time of the day.
	Time *string `pulumi:"time"`
	// The days of the week.
	Weekdays []string `pulumi:"weekdays"`
}

// WeekDetailsResponseInput is an input type that accepts WeekDetailsResponseArgs and WeekDetailsResponseOutput values.
// You can construct a concrete instance of `WeekDetailsResponseInput` via:
//
//          WeekDetailsResponseArgs{...}
type WeekDetailsResponseInput interface {
	pulumi.Input

	ToWeekDetailsResponseOutput() WeekDetailsResponseOutput
	ToWeekDetailsResponseOutputWithContext(context.Context) WeekDetailsResponseOutput
}

// Properties of a weekly schedule.
type WeekDetailsResponseArgs struct {
	// The time of the day.
	Time pulumi.StringPtrInput `pulumi:"time"`
	// The days of the week.
	Weekdays pulumi.StringArrayInput `pulumi:"weekdays"`
}

func (WeekDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekDetailsResponse)(nil)).Elem()
}

func (i WeekDetailsResponseArgs) ToWeekDetailsResponseOutput() WeekDetailsResponseOutput {
	return i.ToWeekDetailsResponseOutputWithContext(context.Background())
}

func (i WeekDetailsResponseArgs) ToWeekDetailsResponseOutputWithContext(ctx context.Context) WeekDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeekDetailsResponseOutput)
}

func (i WeekDetailsResponseArgs) ToWeekDetailsResponsePtrOutput() WeekDetailsResponsePtrOutput {
	return i.ToWeekDetailsResponsePtrOutputWithContext(context.Background())
}

func (i WeekDetailsResponseArgs) ToWeekDetailsResponsePtrOutputWithContext(ctx context.Context) WeekDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeekDetailsResponseOutput).ToWeekDetailsResponsePtrOutputWithContext(ctx)
}

// WeekDetailsResponsePtrInput is an input type that accepts WeekDetailsResponseArgs, WeekDetailsResponsePtr and WeekDetailsResponsePtrOutput values.
// You can construct a concrete instance of `WeekDetailsResponsePtrInput` via:
//
//          WeekDetailsResponseArgs{...}
//
//  or:
//
//          nil
type WeekDetailsResponsePtrInput interface {
	pulumi.Input

	ToWeekDetailsResponsePtrOutput() WeekDetailsResponsePtrOutput
	ToWeekDetailsResponsePtrOutputWithContext(context.Context) WeekDetailsResponsePtrOutput
}

type weekDetailsResponsePtrType WeekDetailsResponseArgs

func WeekDetailsResponsePtr(v *WeekDetailsResponseArgs) WeekDetailsResponsePtrInput {
	return (*weekDetailsResponsePtrType)(v)
}

func (*weekDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WeekDetailsResponse)(nil)).Elem()
}

func (i *weekDetailsResponsePtrType) ToWeekDetailsResponsePtrOutput() WeekDetailsResponsePtrOutput {
	return i.ToWeekDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *weekDetailsResponsePtrType) ToWeekDetailsResponsePtrOutputWithContext(ctx context.Context) WeekDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeekDetailsResponsePtrOutput)
}

// Properties of a weekly schedule.
type WeekDetailsResponseOutput struct{ *pulumi.OutputState }

func (WeekDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekDetailsResponse)(nil)).Elem()
}

func (o WeekDetailsResponseOutput) ToWeekDetailsResponseOutput() WeekDetailsResponseOutput {
	return o
}

func (o WeekDetailsResponseOutput) ToWeekDetailsResponseOutputWithContext(ctx context.Context) WeekDetailsResponseOutput {
	return o
}

func (o WeekDetailsResponseOutput) ToWeekDetailsResponsePtrOutput() WeekDetailsResponsePtrOutput {
	return o.ToWeekDetailsResponsePtrOutputWithContext(context.Background())
}

func (o WeekDetailsResponseOutput) ToWeekDetailsResponsePtrOutputWithContext(ctx context.Context) WeekDetailsResponsePtrOutput {
	return o.ApplyT(func(v WeekDetailsResponse) *WeekDetailsResponse {
		return &v
	}).(WeekDetailsResponsePtrOutput)
}

// The time of the day.
func (o WeekDetailsResponseOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WeekDetailsResponse) *string { return v.Time }).(pulumi.StringPtrOutput)
}

// The days of the week.
func (o WeekDetailsResponseOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeekDetailsResponse) []string { return v.Weekdays }).(pulumi.StringArrayOutput)
}

type WeekDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (WeekDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeekDetailsResponse)(nil)).Elem()
}

func (o WeekDetailsResponsePtrOutput) ToWeekDetailsResponsePtrOutput() WeekDetailsResponsePtrOutput {
	return o
}

func (o WeekDetailsResponsePtrOutput) ToWeekDetailsResponsePtrOutputWithContext(ctx context.Context) WeekDetailsResponsePtrOutput {
	return o
}

func (o WeekDetailsResponsePtrOutput) Elem() WeekDetailsResponseOutput {
	return o.ApplyT(func(v *WeekDetailsResponse) WeekDetailsResponse { return *v }).(WeekDetailsResponseOutput)
}

// The time of the day.
func (o WeekDetailsResponsePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WeekDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// The days of the week.
func (o WeekDetailsResponsePtrOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeekDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.Weekdays
	}).(pulumi.StringArrayOutput)
}

// Information about a Windows OS.
type WindowsOsInfo struct {
	// The state of the Windows OS.
	WindowsOsState *string `pulumi:"windowsOsState"`
}

// WindowsOsInfoInput is an input type that accepts WindowsOsInfoArgs and WindowsOsInfoOutput values.
// You can construct a concrete instance of `WindowsOsInfoInput` via:
//
//          WindowsOsInfoArgs{...}
type WindowsOsInfoInput interface {
	pulumi.Input

	ToWindowsOsInfoOutput() WindowsOsInfoOutput
	ToWindowsOsInfoOutputWithContext(context.Context) WindowsOsInfoOutput
}

// Information about a Windows OS.
type WindowsOsInfoArgs struct {
	// The state of the Windows OS.
	WindowsOsState pulumi.StringPtrInput `pulumi:"windowsOsState"`
}

func (WindowsOsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsOsInfo)(nil)).Elem()
}

func (i WindowsOsInfoArgs) ToWindowsOsInfoOutput() WindowsOsInfoOutput {
	return i.ToWindowsOsInfoOutputWithContext(context.Background())
}

func (i WindowsOsInfoArgs) ToWindowsOsInfoOutputWithContext(ctx context.Context) WindowsOsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsOsInfoOutput)
}

func (i WindowsOsInfoArgs) ToWindowsOsInfoPtrOutput() WindowsOsInfoPtrOutput {
	return i.ToWindowsOsInfoPtrOutputWithContext(context.Background())
}

func (i WindowsOsInfoArgs) ToWindowsOsInfoPtrOutputWithContext(ctx context.Context) WindowsOsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsOsInfoOutput).ToWindowsOsInfoPtrOutputWithContext(ctx)
}

// WindowsOsInfoPtrInput is an input type that accepts WindowsOsInfoArgs, WindowsOsInfoPtr and WindowsOsInfoPtrOutput values.
// You can construct a concrete instance of `WindowsOsInfoPtrInput` via:
//
//          WindowsOsInfoArgs{...}
//
//  or:
//
//          nil
type WindowsOsInfoPtrInput interface {
	pulumi.Input

	ToWindowsOsInfoPtrOutput() WindowsOsInfoPtrOutput
	ToWindowsOsInfoPtrOutputWithContext(context.Context) WindowsOsInfoPtrOutput
}

type windowsOsInfoPtrType WindowsOsInfoArgs

func WindowsOsInfoPtr(v *WindowsOsInfoArgs) WindowsOsInfoPtrInput {
	return (*windowsOsInfoPtrType)(v)
}

func (*windowsOsInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsOsInfo)(nil)).Elem()
}

func (i *windowsOsInfoPtrType) ToWindowsOsInfoPtrOutput() WindowsOsInfoPtrOutput {
	return i.ToWindowsOsInfoPtrOutputWithContext(context.Background())
}

func (i *windowsOsInfoPtrType) ToWindowsOsInfoPtrOutputWithContext(ctx context.Context) WindowsOsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsOsInfoPtrOutput)
}

// Information about a Windows OS.
type WindowsOsInfoOutput struct{ *pulumi.OutputState }

func (WindowsOsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsOsInfo)(nil)).Elem()
}

func (o WindowsOsInfoOutput) ToWindowsOsInfoOutput() WindowsOsInfoOutput {
	return o
}

func (o WindowsOsInfoOutput) ToWindowsOsInfoOutputWithContext(ctx context.Context) WindowsOsInfoOutput {
	return o
}

func (o WindowsOsInfoOutput) ToWindowsOsInfoPtrOutput() WindowsOsInfoPtrOutput {
	return o.ToWindowsOsInfoPtrOutputWithContext(context.Background())
}

func (o WindowsOsInfoOutput) ToWindowsOsInfoPtrOutputWithContext(ctx context.Context) WindowsOsInfoPtrOutput {
	return o.ApplyT(func(v WindowsOsInfo) *WindowsOsInfo {
		return &v
	}).(WindowsOsInfoPtrOutput)
}

// The state of the Windows OS.
func (o WindowsOsInfoOutput) WindowsOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsOsInfo) *string { return v.WindowsOsState }).(pulumi.StringPtrOutput)
}

type WindowsOsInfoPtrOutput struct{ *pulumi.OutputState }

func (WindowsOsInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsOsInfo)(nil)).Elem()
}

func (o WindowsOsInfoPtrOutput) ToWindowsOsInfoPtrOutput() WindowsOsInfoPtrOutput {
	return o
}

func (o WindowsOsInfoPtrOutput) ToWindowsOsInfoPtrOutputWithContext(ctx context.Context) WindowsOsInfoPtrOutput {
	return o
}

func (o WindowsOsInfoPtrOutput) Elem() WindowsOsInfoOutput {
	return o.ApplyT(func(v *WindowsOsInfo) WindowsOsInfo { return *v }).(WindowsOsInfoOutput)
}

// The state of the Windows OS.
func (o WindowsOsInfoPtrOutput) WindowsOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsOsInfo) *string {
		if v == nil {
			return nil
		}
		return v.WindowsOsState
	}).(pulumi.StringPtrOutput)
}

// Information about a Windows OS.
type WindowsOsInfoResponse struct {
	// The state of the Windows OS.
	WindowsOsState *string `pulumi:"windowsOsState"`
}

// WindowsOsInfoResponseInput is an input type that accepts WindowsOsInfoResponseArgs and WindowsOsInfoResponseOutput values.
// You can construct a concrete instance of `WindowsOsInfoResponseInput` via:
//
//          WindowsOsInfoResponseArgs{...}
type WindowsOsInfoResponseInput interface {
	pulumi.Input

	ToWindowsOsInfoResponseOutput() WindowsOsInfoResponseOutput
	ToWindowsOsInfoResponseOutputWithContext(context.Context) WindowsOsInfoResponseOutput
}

// Information about a Windows OS.
type WindowsOsInfoResponseArgs struct {
	// The state of the Windows OS.
	WindowsOsState pulumi.StringPtrInput `pulumi:"windowsOsState"`
}

func (WindowsOsInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsOsInfoResponse)(nil)).Elem()
}

func (i WindowsOsInfoResponseArgs) ToWindowsOsInfoResponseOutput() WindowsOsInfoResponseOutput {
	return i.ToWindowsOsInfoResponseOutputWithContext(context.Background())
}

func (i WindowsOsInfoResponseArgs) ToWindowsOsInfoResponseOutputWithContext(ctx context.Context) WindowsOsInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsOsInfoResponseOutput)
}

func (i WindowsOsInfoResponseArgs) ToWindowsOsInfoResponsePtrOutput() WindowsOsInfoResponsePtrOutput {
	return i.ToWindowsOsInfoResponsePtrOutputWithContext(context.Background())
}

func (i WindowsOsInfoResponseArgs) ToWindowsOsInfoResponsePtrOutputWithContext(ctx context.Context) WindowsOsInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsOsInfoResponseOutput).ToWindowsOsInfoResponsePtrOutputWithContext(ctx)
}

// WindowsOsInfoResponsePtrInput is an input type that accepts WindowsOsInfoResponseArgs, WindowsOsInfoResponsePtr and WindowsOsInfoResponsePtrOutput values.
// You can construct a concrete instance of `WindowsOsInfoResponsePtrInput` via:
//
//          WindowsOsInfoResponseArgs{...}
//
//  or:
//
//          nil
type WindowsOsInfoResponsePtrInput interface {
	pulumi.Input

	ToWindowsOsInfoResponsePtrOutput() WindowsOsInfoResponsePtrOutput
	ToWindowsOsInfoResponsePtrOutputWithContext(context.Context) WindowsOsInfoResponsePtrOutput
}

type windowsOsInfoResponsePtrType WindowsOsInfoResponseArgs

func WindowsOsInfoResponsePtr(v *WindowsOsInfoResponseArgs) WindowsOsInfoResponsePtrInput {
	return (*windowsOsInfoResponsePtrType)(v)
}

func (*windowsOsInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsOsInfoResponse)(nil)).Elem()
}

func (i *windowsOsInfoResponsePtrType) ToWindowsOsInfoResponsePtrOutput() WindowsOsInfoResponsePtrOutput {
	return i.ToWindowsOsInfoResponsePtrOutputWithContext(context.Background())
}

func (i *windowsOsInfoResponsePtrType) ToWindowsOsInfoResponsePtrOutputWithContext(ctx context.Context) WindowsOsInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsOsInfoResponsePtrOutput)
}

// Information about a Windows OS.
type WindowsOsInfoResponseOutput struct{ *pulumi.OutputState }

func (WindowsOsInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsOsInfoResponse)(nil)).Elem()
}

func (o WindowsOsInfoResponseOutput) ToWindowsOsInfoResponseOutput() WindowsOsInfoResponseOutput {
	return o
}

func (o WindowsOsInfoResponseOutput) ToWindowsOsInfoResponseOutputWithContext(ctx context.Context) WindowsOsInfoResponseOutput {
	return o
}

func (o WindowsOsInfoResponseOutput) ToWindowsOsInfoResponsePtrOutput() WindowsOsInfoResponsePtrOutput {
	return o.ToWindowsOsInfoResponsePtrOutputWithContext(context.Background())
}

func (o WindowsOsInfoResponseOutput) ToWindowsOsInfoResponsePtrOutputWithContext(ctx context.Context) WindowsOsInfoResponsePtrOutput {
	return o.ApplyT(func(v WindowsOsInfoResponse) *WindowsOsInfoResponse {
		return &v
	}).(WindowsOsInfoResponsePtrOutput)
}

// The state of the Windows OS.
func (o WindowsOsInfoResponseOutput) WindowsOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsOsInfoResponse) *string { return v.WindowsOsState }).(pulumi.StringPtrOutput)
}

type WindowsOsInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (WindowsOsInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsOsInfoResponse)(nil)).Elem()
}

func (o WindowsOsInfoResponsePtrOutput) ToWindowsOsInfoResponsePtrOutput() WindowsOsInfoResponsePtrOutput {
	return o
}

func (o WindowsOsInfoResponsePtrOutput) ToWindowsOsInfoResponsePtrOutputWithContext(ctx context.Context) WindowsOsInfoResponsePtrOutput {
	return o
}

func (o WindowsOsInfoResponsePtrOutput) Elem() WindowsOsInfoResponseOutput {
	return o.ApplyT(func(v *WindowsOsInfoResponse) WindowsOsInfoResponse { return *v }).(WindowsOsInfoResponseOutput)
}

// The state of the Windows OS.
func (o WindowsOsInfoResponsePtrOutput) WindowsOsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsOsInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.WindowsOsState
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ArtifactDeploymentStatusPropertiesOutput{})
	pulumi.RegisterOutputType(ArtifactDeploymentStatusPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ArtifactDeploymentStatusPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ArtifactDeploymentStatusPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ArtifactInstallPropertiesOutput{})
	pulumi.RegisterOutputType(ArtifactInstallPropertiesArrayOutput{})
	pulumi.RegisterOutputType(ArtifactInstallPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ArtifactInstallPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(ArtifactParameterPropertiesOutput{})
	pulumi.RegisterOutputType(ArtifactParameterPropertiesArrayOutput{})
	pulumi.RegisterOutputType(ArtifactParameterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ArtifactParameterPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesCustomOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesCustomPtrOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesCustomResponseOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesCustomResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesFromVmOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesFromVmPtrOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesFromVmResponseOutput{})
	pulumi.RegisterOutputType(CustomImagePropertiesFromVmResponsePtrOutput{})
	pulumi.RegisterOutputType(DayDetailsOutput{})
	pulumi.RegisterOutputType(DayDetailsPtrOutput{})
	pulumi.RegisterOutputType(DayDetailsResponseOutput{})
	pulumi.RegisterOutputType(DayDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(FormulaPropertiesFromVmOutput{})
	pulumi.RegisterOutputType(FormulaPropertiesFromVmPtrOutput{})
	pulumi.RegisterOutputType(FormulaPropertiesFromVmResponseOutput{})
	pulumi.RegisterOutputType(FormulaPropertiesFromVmResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageReferenceOutput{})
	pulumi.RegisterOutputType(GalleryImageReferencePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageReferenceResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(HourDetailsOutput{})
	pulumi.RegisterOutputType(HourDetailsPtrOutput{})
	pulumi.RegisterOutputType(HourDetailsResponseOutput{})
	pulumi.RegisterOutputType(HourDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(LabVhdResponseOutput{})
	pulumi.RegisterOutputType(LabVhdResponseArrayOutput{})
	pulumi.RegisterOutputType(LabVirtualMachineOutput{})
	pulumi.RegisterOutputType(LabVirtualMachinePtrOutput{})
	pulumi.RegisterOutputType(LabVirtualMachineResponseOutput{})
	pulumi.RegisterOutputType(LabVirtualMachineResponsePtrOutput{})
	pulumi.RegisterOutputType(LinuxOsInfoOutput{})
	pulumi.RegisterOutputType(LinuxOsInfoPtrOutput{})
	pulumi.RegisterOutputType(LinuxOsInfoResponseOutput{})
	pulumi.RegisterOutputType(LinuxOsInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(SubnetOutput{})
	pulumi.RegisterOutputType(SubnetArrayOutput{})
	pulumi.RegisterOutputType(SubnetOverrideOutput{})
	pulumi.RegisterOutputType(SubnetOverrideArrayOutput{})
	pulumi.RegisterOutputType(SubnetOverrideResponseOutput{})
	pulumi.RegisterOutputType(SubnetOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetResponseOutput{})
	pulumi.RegisterOutputType(SubnetResponseArrayOutput{})
	pulumi.RegisterOutputType(WeekDetailsOutput{})
	pulumi.RegisterOutputType(WeekDetailsPtrOutput{})
	pulumi.RegisterOutputType(WeekDetailsResponseOutput{})
	pulumi.RegisterOutputType(WeekDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(WindowsOsInfoOutput{})
	pulumi.RegisterOutputType(WindowsOsInfoPtrOutput{})
	pulumi.RegisterOutputType(WindowsOsInfoResponseOutput{})
	pulumi.RegisterOutputType(WindowsOsInfoResponsePtrOutput{})
}
