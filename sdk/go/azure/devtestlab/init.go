// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package devtestlab

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure-nextgen/sdk/go/azure"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure-nextgen:devtestlab:ArtifactSource":
		r, err = NewArtifactSource(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:devtestlab:CustomImage":
		r, err = NewCustomImage(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:devtestlab:Disk":
		r, err = NewDisk(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:devtestlab:Environment":
		r, err = NewEnvironment(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:devtestlab:Formula":
		r, err = NewFormula(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:devtestlab:GlobalSchedule":
		r, err = NewGlobalSchedule(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:devtestlab:Lab":
		r, err = NewLab(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:devtestlab:NotificationChannel":
		r, err = NewNotificationChannel(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:devtestlab:Policy":
		r, err = NewPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:devtestlab:Schedule":
		r, err = NewSchedule(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:devtestlab:Secret":
		r, err = NewSecret(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:devtestlab:ServiceFabric":
		r, err = NewServiceFabric(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:devtestlab:ServiceFabricSchedule":
		r, err = NewServiceFabricSchedule(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:devtestlab:ServiceRunner":
		r, err = NewServiceRunner(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:devtestlab:User":
		r, err = NewUser(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:devtestlab:VirtualMachine":
		r, err = NewVirtualMachine(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:devtestlab:VirtualMachineSchedule":
		r, err = NewVirtualMachineSchedule(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:devtestlab:VirtualNetwork":
		r, err = NewVirtualNetwork(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := azure.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"azure-nextgen",
		"devtestlab",
		&module{version},
	)
}
