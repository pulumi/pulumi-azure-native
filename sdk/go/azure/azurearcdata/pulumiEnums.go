// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azurearcdata

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The service account provisioning mode for this Active Directory connector.
type AccountProvisioningMode string

const (
	AccountProvisioningModeAutomatic = AccountProvisioningMode("automatic")
	AccountProvisioningModeManual    = AccountProvisioningMode("manual")
)

// The type of the extended location.
type ExtendedLocationTypes string

const (
	ExtendedLocationTypesCustomLocation = ExtendedLocationTypes("CustomLocation")
)

// This field is required to be implemented by the Resource Provider if the service has more than one tier.
type PostgresInstanceSkuTier string

const (
	PostgresInstanceSkuTierHyperscale = PostgresInstanceSkuTier("Hyperscale")
)

func (PostgresInstanceSkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresInstanceSkuTier)(nil)).Elem()
}

func (e PostgresInstanceSkuTier) ToPostgresInstanceSkuTierOutput() PostgresInstanceSkuTierOutput {
	return pulumi.ToOutput(e).(PostgresInstanceSkuTierOutput)
}

func (e PostgresInstanceSkuTier) ToPostgresInstanceSkuTierOutputWithContext(ctx context.Context) PostgresInstanceSkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PostgresInstanceSkuTierOutput)
}

func (e PostgresInstanceSkuTier) ToPostgresInstanceSkuTierPtrOutput() PostgresInstanceSkuTierPtrOutput {
	return e.ToPostgresInstanceSkuTierPtrOutputWithContext(context.Background())
}

func (e PostgresInstanceSkuTier) ToPostgresInstanceSkuTierPtrOutputWithContext(ctx context.Context) PostgresInstanceSkuTierPtrOutput {
	return PostgresInstanceSkuTier(e).ToPostgresInstanceSkuTierOutputWithContext(ctx).ToPostgresInstanceSkuTierPtrOutputWithContext(ctx)
}

func (e PostgresInstanceSkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PostgresInstanceSkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PostgresInstanceSkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PostgresInstanceSkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PostgresInstanceSkuTierOutput struct{ *pulumi.OutputState }

func (PostgresInstanceSkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresInstanceSkuTier)(nil)).Elem()
}

func (o PostgresInstanceSkuTierOutput) ToPostgresInstanceSkuTierOutput() PostgresInstanceSkuTierOutput {
	return o
}

func (o PostgresInstanceSkuTierOutput) ToPostgresInstanceSkuTierOutputWithContext(ctx context.Context) PostgresInstanceSkuTierOutput {
	return o
}

func (o PostgresInstanceSkuTierOutput) ToPostgresInstanceSkuTierPtrOutput() PostgresInstanceSkuTierPtrOutput {
	return o.ToPostgresInstanceSkuTierPtrOutputWithContext(context.Background())
}

func (o PostgresInstanceSkuTierOutput) ToPostgresInstanceSkuTierPtrOutputWithContext(ctx context.Context) PostgresInstanceSkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresInstanceSkuTier) *PostgresInstanceSkuTier {
		return &v
	}).(PostgresInstanceSkuTierPtrOutput)
}

func (o PostgresInstanceSkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PostgresInstanceSkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresInstanceSkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PostgresInstanceSkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresInstanceSkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PostgresInstanceSkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PostgresInstanceSkuTierPtrOutput struct{ *pulumi.OutputState }

func (PostgresInstanceSkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresInstanceSkuTier)(nil)).Elem()
}

func (o PostgresInstanceSkuTierPtrOutput) ToPostgresInstanceSkuTierPtrOutput() PostgresInstanceSkuTierPtrOutput {
	return o
}

func (o PostgresInstanceSkuTierPtrOutput) ToPostgresInstanceSkuTierPtrOutputWithContext(ctx context.Context) PostgresInstanceSkuTierPtrOutput {
	return o
}

func (o PostgresInstanceSkuTierPtrOutput) Elem() PostgresInstanceSkuTierOutput {
	return o.ApplyT(func(v *PostgresInstanceSkuTier) PostgresInstanceSkuTier {
		if v != nil {
			return *v
		}
		var ret PostgresInstanceSkuTier
		return ret
	}).(PostgresInstanceSkuTierOutput)
}

func (o PostgresInstanceSkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PostgresInstanceSkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PostgresInstanceSkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PostgresInstanceSkuTierInput is an input type that accepts PostgresInstanceSkuTierArgs and PostgresInstanceSkuTierOutput values.
// You can construct a concrete instance of `PostgresInstanceSkuTierInput` via:
//
//	PostgresInstanceSkuTierArgs{...}
type PostgresInstanceSkuTierInput interface {
	pulumi.Input

	ToPostgresInstanceSkuTierOutput() PostgresInstanceSkuTierOutput
	ToPostgresInstanceSkuTierOutputWithContext(context.Context) PostgresInstanceSkuTierOutput
}

var postgresInstanceSkuTierPtrType = reflect.TypeOf((**PostgresInstanceSkuTier)(nil)).Elem()

type PostgresInstanceSkuTierPtrInput interface {
	pulumi.Input

	ToPostgresInstanceSkuTierPtrOutput() PostgresInstanceSkuTierPtrOutput
	ToPostgresInstanceSkuTierPtrOutputWithContext(context.Context) PostgresInstanceSkuTierPtrOutput
}

type postgresInstanceSkuTierPtr string

func PostgresInstanceSkuTierPtr(v string) PostgresInstanceSkuTierPtrInput {
	return (*postgresInstanceSkuTierPtr)(&v)
}

func (*postgresInstanceSkuTierPtr) ElementType() reflect.Type {
	return postgresInstanceSkuTierPtrType
}

func (in *postgresInstanceSkuTierPtr) ToPostgresInstanceSkuTierPtrOutput() PostgresInstanceSkuTierPtrOutput {
	return pulumi.ToOutput(in).(PostgresInstanceSkuTierPtrOutput)
}

func (in *postgresInstanceSkuTierPtr) ToPostgresInstanceSkuTierPtrOutputWithContext(ctx context.Context) PostgresInstanceSkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PostgresInstanceSkuTierPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier.
type SqlManagedInstanceSkuTier string

const (
	SqlManagedInstanceSkuTierGeneralPurpose   = SqlManagedInstanceSkuTier("GeneralPurpose")
	SqlManagedInstanceSkuTierBusinessCritical = SqlManagedInstanceSkuTier("BusinessCritical")
)

func (SqlManagedInstanceSkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstanceSkuTier)(nil)).Elem()
}

func (e SqlManagedInstanceSkuTier) ToSqlManagedInstanceSkuTierOutput() SqlManagedInstanceSkuTierOutput {
	return pulumi.ToOutput(e).(SqlManagedInstanceSkuTierOutput)
}

func (e SqlManagedInstanceSkuTier) ToSqlManagedInstanceSkuTierOutputWithContext(ctx context.Context) SqlManagedInstanceSkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SqlManagedInstanceSkuTierOutput)
}

func (e SqlManagedInstanceSkuTier) ToSqlManagedInstanceSkuTierPtrOutput() SqlManagedInstanceSkuTierPtrOutput {
	return e.ToSqlManagedInstanceSkuTierPtrOutputWithContext(context.Background())
}

func (e SqlManagedInstanceSkuTier) ToSqlManagedInstanceSkuTierPtrOutputWithContext(ctx context.Context) SqlManagedInstanceSkuTierPtrOutput {
	return SqlManagedInstanceSkuTier(e).ToSqlManagedInstanceSkuTierOutputWithContext(ctx).ToSqlManagedInstanceSkuTierPtrOutputWithContext(ctx)
}

func (e SqlManagedInstanceSkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SqlManagedInstanceSkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SqlManagedInstanceSkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SqlManagedInstanceSkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SqlManagedInstanceSkuTierOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceSkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlManagedInstanceSkuTier)(nil)).Elem()
}

func (o SqlManagedInstanceSkuTierOutput) ToSqlManagedInstanceSkuTierOutput() SqlManagedInstanceSkuTierOutput {
	return o
}

func (o SqlManagedInstanceSkuTierOutput) ToSqlManagedInstanceSkuTierOutputWithContext(ctx context.Context) SqlManagedInstanceSkuTierOutput {
	return o
}

func (o SqlManagedInstanceSkuTierOutput) ToSqlManagedInstanceSkuTierPtrOutput() SqlManagedInstanceSkuTierPtrOutput {
	return o.ToSqlManagedInstanceSkuTierPtrOutputWithContext(context.Background())
}

func (o SqlManagedInstanceSkuTierOutput) ToSqlManagedInstanceSkuTierPtrOutputWithContext(ctx context.Context) SqlManagedInstanceSkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlManagedInstanceSkuTier) *SqlManagedInstanceSkuTier {
		return &v
	}).(SqlManagedInstanceSkuTierPtrOutput)
}

func (o SqlManagedInstanceSkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SqlManagedInstanceSkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SqlManagedInstanceSkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SqlManagedInstanceSkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SqlManagedInstanceSkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SqlManagedInstanceSkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SqlManagedInstanceSkuTierPtrOutput struct{ *pulumi.OutputState }

func (SqlManagedInstanceSkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlManagedInstanceSkuTier)(nil)).Elem()
}

func (o SqlManagedInstanceSkuTierPtrOutput) ToSqlManagedInstanceSkuTierPtrOutput() SqlManagedInstanceSkuTierPtrOutput {
	return o
}

func (o SqlManagedInstanceSkuTierPtrOutput) ToSqlManagedInstanceSkuTierPtrOutputWithContext(ctx context.Context) SqlManagedInstanceSkuTierPtrOutput {
	return o
}

func (o SqlManagedInstanceSkuTierPtrOutput) Elem() SqlManagedInstanceSkuTierOutput {
	return o.ApplyT(func(v *SqlManagedInstanceSkuTier) SqlManagedInstanceSkuTier {
		if v != nil {
			return *v
		}
		var ret SqlManagedInstanceSkuTier
		return ret
	}).(SqlManagedInstanceSkuTierOutput)
}

func (o SqlManagedInstanceSkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SqlManagedInstanceSkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SqlManagedInstanceSkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SqlManagedInstanceSkuTierInput is an input type that accepts SqlManagedInstanceSkuTierArgs and SqlManagedInstanceSkuTierOutput values.
// You can construct a concrete instance of `SqlManagedInstanceSkuTierInput` via:
//
//	SqlManagedInstanceSkuTierArgs{...}
type SqlManagedInstanceSkuTierInput interface {
	pulumi.Input

	ToSqlManagedInstanceSkuTierOutput() SqlManagedInstanceSkuTierOutput
	ToSqlManagedInstanceSkuTierOutputWithContext(context.Context) SqlManagedInstanceSkuTierOutput
}

var sqlManagedInstanceSkuTierPtrType = reflect.TypeOf((**SqlManagedInstanceSkuTier)(nil)).Elem()

type SqlManagedInstanceSkuTierPtrInput interface {
	pulumi.Input

	ToSqlManagedInstanceSkuTierPtrOutput() SqlManagedInstanceSkuTierPtrOutput
	ToSqlManagedInstanceSkuTierPtrOutputWithContext(context.Context) SqlManagedInstanceSkuTierPtrOutput
}

type sqlManagedInstanceSkuTierPtr string

func SqlManagedInstanceSkuTierPtr(v string) SqlManagedInstanceSkuTierPtrInput {
	return (*sqlManagedInstanceSkuTierPtr)(&v)
}

func (*sqlManagedInstanceSkuTierPtr) ElementType() reflect.Type {
	return sqlManagedInstanceSkuTierPtrType
}

func (in *sqlManagedInstanceSkuTierPtr) ToSqlManagedInstanceSkuTierPtrOutput() SqlManagedInstanceSkuTierPtrOutput {
	return pulumi.ToOutput(in).(SqlManagedInstanceSkuTierPtrOutput)
}

func (in *sqlManagedInstanceSkuTierPtr) ToSqlManagedInstanceSkuTierPtrOutputWithContext(ctx context.Context) SqlManagedInstanceSkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SqlManagedInstanceSkuTierPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PostgresInstanceSkuTierOutput{})
	pulumi.RegisterOutputType(PostgresInstanceSkuTierPtrOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceSkuTierOutput{})
	pulumi.RegisterOutputType(SqlManagedInstanceSkuTierPtrOutput{})
}
