// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210401preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Indicates that either the API key or an access token from Azure Active Directory can be used for authentication.
type DataPlaneAadOrApiKeyAuthOption struct {
	// Describes what response the data plane API of a Search service would send for requests that failed authentication.
	AadAuthFailureMode *AadAuthFailureMode `pulumi:"aadAuthFailureMode"`
}

// DataPlaneAadOrApiKeyAuthOptionInput is an input type that accepts DataPlaneAadOrApiKeyAuthOptionArgs and DataPlaneAadOrApiKeyAuthOptionOutput values.
// You can construct a concrete instance of `DataPlaneAadOrApiKeyAuthOptionInput` via:
//
//	DataPlaneAadOrApiKeyAuthOptionArgs{...}
type DataPlaneAadOrApiKeyAuthOptionInput interface {
	pulumi.Input

	ToDataPlaneAadOrApiKeyAuthOptionOutput() DataPlaneAadOrApiKeyAuthOptionOutput
	ToDataPlaneAadOrApiKeyAuthOptionOutputWithContext(context.Context) DataPlaneAadOrApiKeyAuthOptionOutput
}

// Indicates that either the API key or an access token from Azure Active Directory can be used for authentication.
type DataPlaneAadOrApiKeyAuthOptionArgs struct {
	// Describes what response the data plane API of a Search service would send for requests that failed authentication.
	AadAuthFailureMode AadAuthFailureModePtrInput `pulumi:"aadAuthFailureMode"`
}

func (DataPlaneAadOrApiKeyAuthOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPlaneAadOrApiKeyAuthOption)(nil)).Elem()
}

func (i DataPlaneAadOrApiKeyAuthOptionArgs) ToDataPlaneAadOrApiKeyAuthOptionOutput() DataPlaneAadOrApiKeyAuthOptionOutput {
	return i.ToDataPlaneAadOrApiKeyAuthOptionOutputWithContext(context.Background())
}

func (i DataPlaneAadOrApiKeyAuthOptionArgs) ToDataPlaneAadOrApiKeyAuthOptionOutputWithContext(ctx context.Context) DataPlaneAadOrApiKeyAuthOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataPlaneAadOrApiKeyAuthOptionOutput)
}

func (i DataPlaneAadOrApiKeyAuthOptionArgs) ToDataPlaneAadOrApiKeyAuthOptionPtrOutput() DataPlaneAadOrApiKeyAuthOptionPtrOutput {
	return i.ToDataPlaneAadOrApiKeyAuthOptionPtrOutputWithContext(context.Background())
}

func (i DataPlaneAadOrApiKeyAuthOptionArgs) ToDataPlaneAadOrApiKeyAuthOptionPtrOutputWithContext(ctx context.Context) DataPlaneAadOrApiKeyAuthOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataPlaneAadOrApiKeyAuthOptionOutput).ToDataPlaneAadOrApiKeyAuthOptionPtrOutputWithContext(ctx)
}

// DataPlaneAadOrApiKeyAuthOptionPtrInput is an input type that accepts DataPlaneAadOrApiKeyAuthOptionArgs, DataPlaneAadOrApiKeyAuthOptionPtr and DataPlaneAadOrApiKeyAuthOptionPtrOutput values.
// You can construct a concrete instance of `DataPlaneAadOrApiKeyAuthOptionPtrInput` via:
//
//	        DataPlaneAadOrApiKeyAuthOptionArgs{...}
//
//	or:
//
//	        nil
type DataPlaneAadOrApiKeyAuthOptionPtrInput interface {
	pulumi.Input

	ToDataPlaneAadOrApiKeyAuthOptionPtrOutput() DataPlaneAadOrApiKeyAuthOptionPtrOutput
	ToDataPlaneAadOrApiKeyAuthOptionPtrOutputWithContext(context.Context) DataPlaneAadOrApiKeyAuthOptionPtrOutput
}

type dataPlaneAadOrApiKeyAuthOptionPtrType DataPlaneAadOrApiKeyAuthOptionArgs

func DataPlaneAadOrApiKeyAuthOptionPtr(v *DataPlaneAadOrApiKeyAuthOptionArgs) DataPlaneAadOrApiKeyAuthOptionPtrInput {
	return (*dataPlaneAadOrApiKeyAuthOptionPtrType)(v)
}

func (*dataPlaneAadOrApiKeyAuthOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPlaneAadOrApiKeyAuthOption)(nil)).Elem()
}

func (i *dataPlaneAadOrApiKeyAuthOptionPtrType) ToDataPlaneAadOrApiKeyAuthOptionPtrOutput() DataPlaneAadOrApiKeyAuthOptionPtrOutput {
	return i.ToDataPlaneAadOrApiKeyAuthOptionPtrOutputWithContext(context.Background())
}

func (i *dataPlaneAadOrApiKeyAuthOptionPtrType) ToDataPlaneAadOrApiKeyAuthOptionPtrOutputWithContext(ctx context.Context) DataPlaneAadOrApiKeyAuthOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataPlaneAadOrApiKeyAuthOptionPtrOutput)
}

// Indicates that either the API key or an access token from Azure Active Directory can be used for authentication.
type DataPlaneAadOrApiKeyAuthOptionOutput struct{ *pulumi.OutputState }

func (DataPlaneAadOrApiKeyAuthOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPlaneAadOrApiKeyAuthOption)(nil)).Elem()
}

func (o DataPlaneAadOrApiKeyAuthOptionOutput) ToDataPlaneAadOrApiKeyAuthOptionOutput() DataPlaneAadOrApiKeyAuthOptionOutput {
	return o
}

func (o DataPlaneAadOrApiKeyAuthOptionOutput) ToDataPlaneAadOrApiKeyAuthOptionOutputWithContext(ctx context.Context) DataPlaneAadOrApiKeyAuthOptionOutput {
	return o
}

func (o DataPlaneAadOrApiKeyAuthOptionOutput) ToDataPlaneAadOrApiKeyAuthOptionPtrOutput() DataPlaneAadOrApiKeyAuthOptionPtrOutput {
	return o.ToDataPlaneAadOrApiKeyAuthOptionPtrOutputWithContext(context.Background())
}

func (o DataPlaneAadOrApiKeyAuthOptionOutput) ToDataPlaneAadOrApiKeyAuthOptionPtrOutputWithContext(ctx context.Context) DataPlaneAadOrApiKeyAuthOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataPlaneAadOrApiKeyAuthOption) *DataPlaneAadOrApiKeyAuthOption {
		return &v
	}).(DataPlaneAadOrApiKeyAuthOptionPtrOutput)
}

// Describes what response the data plane API of a Search service would send for requests that failed authentication.
func (o DataPlaneAadOrApiKeyAuthOptionOutput) AadAuthFailureMode() AadAuthFailureModePtrOutput {
	return o.ApplyT(func(v DataPlaneAadOrApiKeyAuthOption) *AadAuthFailureMode { return v.AadAuthFailureMode }).(AadAuthFailureModePtrOutput)
}

type DataPlaneAadOrApiKeyAuthOptionPtrOutput struct{ *pulumi.OutputState }

func (DataPlaneAadOrApiKeyAuthOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPlaneAadOrApiKeyAuthOption)(nil)).Elem()
}

func (o DataPlaneAadOrApiKeyAuthOptionPtrOutput) ToDataPlaneAadOrApiKeyAuthOptionPtrOutput() DataPlaneAadOrApiKeyAuthOptionPtrOutput {
	return o
}

func (o DataPlaneAadOrApiKeyAuthOptionPtrOutput) ToDataPlaneAadOrApiKeyAuthOptionPtrOutputWithContext(ctx context.Context) DataPlaneAadOrApiKeyAuthOptionPtrOutput {
	return o
}

func (o DataPlaneAadOrApiKeyAuthOptionPtrOutput) Elem() DataPlaneAadOrApiKeyAuthOptionOutput {
	return o.ApplyT(func(v *DataPlaneAadOrApiKeyAuthOption) DataPlaneAadOrApiKeyAuthOption {
		if v != nil {
			return *v
		}
		var ret DataPlaneAadOrApiKeyAuthOption
		return ret
	}).(DataPlaneAadOrApiKeyAuthOptionOutput)
}

// Describes what response the data plane API of a Search service would send for requests that failed authentication.
func (o DataPlaneAadOrApiKeyAuthOptionPtrOutput) AadAuthFailureMode() AadAuthFailureModePtrOutput {
	return o.ApplyT(func(v *DataPlaneAadOrApiKeyAuthOption) *AadAuthFailureMode {
		if v == nil {
			return nil
		}
		return v.AadAuthFailureMode
	}).(AadAuthFailureModePtrOutput)
}

// Indicates that either the API key or an access token from Azure Active Directory can be used for authentication.
type DataPlaneAadOrApiKeyAuthOptionResponse struct {
	// Describes what response the data plane API of a Search service would send for requests that failed authentication.
	AadAuthFailureMode *string `pulumi:"aadAuthFailureMode"`
}

// Indicates that either the API key or an access token from Azure Active Directory can be used for authentication.
type DataPlaneAadOrApiKeyAuthOptionResponseOutput struct{ *pulumi.OutputState }

func (DataPlaneAadOrApiKeyAuthOptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPlaneAadOrApiKeyAuthOptionResponse)(nil)).Elem()
}

func (o DataPlaneAadOrApiKeyAuthOptionResponseOutput) ToDataPlaneAadOrApiKeyAuthOptionResponseOutput() DataPlaneAadOrApiKeyAuthOptionResponseOutput {
	return o
}

func (o DataPlaneAadOrApiKeyAuthOptionResponseOutput) ToDataPlaneAadOrApiKeyAuthOptionResponseOutputWithContext(ctx context.Context) DataPlaneAadOrApiKeyAuthOptionResponseOutput {
	return o
}

// Describes what response the data plane API of a Search service would send for requests that failed authentication.
func (o DataPlaneAadOrApiKeyAuthOptionResponseOutput) AadAuthFailureMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataPlaneAadOrApiKeyAuthOptionResponse) *string { return v.AadAuthFailureMode }).(pulumi.StringPtrOutput)
}

type DataPlaneAadOrApiKeyAuthOptionResponsePtrOutput struct{ *pulumi.OutputState }

func (DataPlaneAadOrApiKeyAuthOptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPlaneAadOrApiKeyAuthOptionResponse)(nil)).Elem()
}

func (o DataPlaneAadOrApiKeyAuthOptionResponsePtrOutput) ToDataPlaneAadOrApiKeyAuthOptionResponsePtrOutput() DataPlaneAadOrApiKeyAuthOptionResponsePtrOutput {
	return o
}

func (o DataPlaneAadOrApiKeyAuthOptionResponsePtrOutput) ToDataPlaneAadOrApiKeyAuthOptionResponsePtrOutputWithContext(ctx context.Context) DataPlaneAadOrApiKeyAuthOptionResponsePtrOutput {
	return o
}

func (o DataPlaneAadOrApiKeyAuthOptionResponsePtrOutput) Elem() DataPlaneAadOrApiKeyAuthOptionResponseOutput {
	return o.ApplyT(func(v *DataPlaneAadOrApiKeyAuthOptionResponse) DataPlaneAadOrApiKeyAuthOptionResponse {
		if v != nil {
			return *v
		}
		var ret DataPlaneAadOrApiKeyAuthOptionResponse
		return ret
	}).(DataPlaneAadOrApiKeyAuthOptionResponseOutput)
}

// Describes what response the data plane API of a Search service would send for requests that failed authentication.
func (o DataPlaneAadOrApiKeyAuthOptionResponsePtrOutput) AadAuthFailureMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataPlaneAadOrApiKeyAuthOptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadAuthFailureMode
	}).(pulumi.StringPtrOutput)
}

// Defines the options for how the data plane API of a Search service authenticates requests. This cannot be set if 'disableLocalAuth' is set to true.
type DataPlaneAuthOptions struct {
	// Indicates that either the API key or an access token from Azure Active Directory can be used for authentication.
	AadOrApiKey *DataPlaneAadOrApiKeyAuthOption `pulumi:"aadOrApiKey"`
	// Indicates that only the API key needs to be used for authentication.
	ApiKeyOnly interface{} `pulumi:"apiKeyOnly"`
}

// DataPlaneAuthOptionsInput is an input type that accepts DataPlaneAuthOptionsArgs and DataPlaneAuthOptionsOutput values.
// You can construct a concrete instance of `DataPlaneAuthOptionsInput` via:
//
//	DataPlaneAuthOptionsArgs{...}
type DataPlaneAuthOptionsInput interface {
	pulumi.Input

	ToDataPlaneAuthOptionsOutput() DataPlaneAuthOptionsOutput
	ToDataPlaneAuthOptionsOutputWithContext(context.Context) DataPlaneAuthOptionsOutput
}

// Defines the options for how the data plane API of a Search service authenticates requests. This cannot be set if 'disableLocalAuth' is set to true.
type DataPlaneAuthOptionsArgs struct {
	// Indicates that either the API key or an access token from Azure Active Directory can be used for authentication.
	AadOrApiKey DataPlaneAadOrApiKeyAuthOptionPtrInput `pulumi:"aadOrApiKey"`
	// Indicates that only the API key needs to be used for authentication.
	ApiKeyOnly pulumi.Input `pulumi:"apiKeyOnly"`
}

func (DataPlaneAuthOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPlaneAuthOptions)(nil)).Elem()
}

func (i DataPlaneAuthOptionsArgs) ToDataPlaneAuthOptionsOutput() DataPlaneAuthOptionsOutput {
	return i.ToDataPlaneAuthOptionsOutputWithContext(context.Background())
}

func (i DataPlaneAuthOptionsArgs) ToDataPlaneAuthOptionsOutputWithContext(ctx context.Context) DataPlaneAuthOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataPlaneAuthOptionsOutput)
}

func (i DataPlaneAuthOptionsArgs) ToDataPlaneAuthOptionsPtrOutput() DataPlaneAuthOptionsPtrOutput {
	return i.ToDataPlaneAuthOptionsPtrOutputWithContext(context.Background())
}

func (i DataPlaneAuthOptionsArgs) ToDataPlaneAuthOptionsPtrOutputWithContext(ctx context.Context) DataPlaneAuthOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataPlaneAuthOptionsOutput).ToDataPlaneAuthOptionsPtrOutputWithContext(ctx)
}

// DataPlaneAuthOptionsPtrInput is an input type that accepts DataPlaneAuthOptionsArgs, DataPlaneAuthOptionsPtr and DataPlaneAuthOptionsPtrOutput values.
// You can construct a concrete instance of `DataPlaneAuthOptionsPtrInput` via:
//
//	        DataPlaneAuthOptionsArgs{...}
//
//	or:
//
//	        nil
type DataPlaneAuthOptionsPtrInput interface {
	pulumi.Input

	ToDataPlaneAuthOptionsPtrOutput() DataPlaneAuthOptionsPtrOutput
	ToDataPlaneAuthOptionsPtrOutputWithContext(context.Context) DataPlaneAuthOptionsPtrOutput
}

type dataPlaneAuthOptionsPtrType DataPlaneAuthOptionsArgs

func DataPlaneAuthOptionsPtr(v *DataPlaneAuthOptionsArgs) DataPlaneAuthOptionsPtrInput {
	return (*dataPlaneAuthOptionsPtrType)(v)
}

func (*dataPlaneAuthOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPlaneAuthOptions)(nil)).Elem()
}

func (i *dataPlaneAuthOptionsPtrType) ToDataPlaneAuthOptionsPtrOutput() DataPlaneAuthOptionsPtrOutput {
	return i.ToDataPlaneAuthOptionsPtrOutputWithContext(context.Background())
}

func (i *dataPlaneAuthOptionsPtrType) ToDataPlaneAuthOptionsPtrOutputWithContext(ctx context.Context) DataPlaneAuthOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataPlaneAuthOptionsPtrOutput)
}

// Defines the options for how the data plane API of a Search service authenticates requests. This cannot be set if 'disableLocalAuth' is set to true.
type DataPlaneAuthOptionsOutput struct{ *pulumi.OutputState }

func (DataPlaneAuthOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPlaneAuthOptions)(nil)).Elem()
}

func (o DataPlaneAuthOptionsOutput) ToDataPlaneAuthOptionsOutput() DataPlaneAuthOptionsOutput {
	return o
}

func (o DataPlaneAuthOptionsOutput) ToDataPlaneAuthOptionsOutputWithContext(ctx context.Context) DataPlaneAuthOptionsOutput {
	return o
}

func (o DataPlaneAuthOptionsOutput) ToDataPlaneAuthOptionsPtrOutput() DataPlaneAuthOptionsPtrOutput {
	return o.ToDataPlaneAuthOptionsPtrOutputWithContext(context.Background())
}

func (o DataPlaneAuthOptionsOutput) ToDataPlaneAuthOptionsPtrOutputWithContext(ctx context.Context) DataPlaneAuthOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataPlaneAuthOptions) *DataPlaneAuthOptions {
		return &v
	}).(DataPlaneAuthOptionsPtrOutput)
}

// Indicates that either the API key or an access token from Azure Active Directory can be used for authentication.
func (o DataPlaneAuthOptionsOutput) AadOrApiKey() DataPlaneAadOrApiKeyAuthOptionPtrOutput {
	return o.ApplyT(func(v DataPlaneAuthOptions) *DataPlaneAadOrApiKeyAuthOption { return v.AadOrApiKey }).(DataPlaneAadOrApiKeyAuthOptionPtrOutput)
}

// Indicates that only the API key needs to be used for authentication.
func (o DataPlaneAuthOptionsOutput) ApiKeyOnly() pulumi.AnyOutput {
	return o.ApplyT(func(v DataPlaneAuthOptions) interface{} { return v.ApiKeyOnly }).(pulumi.AnyOutput)
}

type DataPlaneAuthOptionsPtrOutput struct{ *pulumi.OutputState }

func (DataPlaneAuthOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPlaneAuthOptions)(nil)).Elem()
}

func (o DataPlaneAuthOptionsPtrOutput) ToDataPlaneAuthOptionsPtrOutput() DataPlaneAuthOptionsPtrOutput {
	return o
}

func (o DataPlaneAuthOptionsPtrOutput) ToDataPlaneAuthOptionsPtrOutputWithContext(ctx context.Context) DataPlaneAuthOptionsPtrOutput {
	return o
}

func (o DataPlaneAuthOptionsPtrOutput) Elem() DataPlaneAuthOptionsOutput {
	return o.ApplyT(func(v *DataPlaneAuthOptions) DataPlaneAuthOptions {
		if v != nil {
			return *v
		}
		var ret DataPlaneAuthOptions
		return ret
	}).(DataPlaneAuthOptionsOutput)
}

// Indicates that either the API key or an access token from Azure Active Directory can be used for authentication.
func (o DataPlaneAuthOptionsPtrOutput) AadOrApiKey() DataPlaneAadOrApiKeyAuthOptionPtrOutput {
	return o.ApplyT(func(v *DataPlaneAuthOptions) *DataPlaneAadOrApiKeyAuthOption {
		if v == nil {
			return nil
		}
		return v.AadOrApiKey
	}).(DataPlaneAadOrApiKeyAuthOptionPtrOutput)
}

// Indicates that only the API key needs to be used for authentication.
func (o DataPlaneAuthOptionsPtrOutput) ApiKeyOnly() pulumi.AnyOutput {
	return o.ApplyT(func(v *DataPlaneAuthOptions) interface{} {
		if v == nil {
			return nil
		}
		return v.ApiKeyOnly
	}).(pulumi.AnyOutput)
}

// Defines the options for how the data plane API of a Search service authenticates requests. This cannot be set if 'disableLocalAuth' is set to true.
type DataPlaneAuthOptionsResponse struct {
	// Indicates that either the API key or an access token from Azure Active Directory can be used for authentication.
	AadOrApiKey *DataPlaneAadOrApiKeyAuthOptionResponse `pulumi:"aadOrApiKey"`
	// Indicates that only the API key needs to be used for authentication.
	ApiKeyOnly interface{} `pulumi:"apiKeyOnly"`
}

// Defines the options for how the data plane API of a Search service authenticates requests. This cannot be set if 'disableLocalAuth' is set to true.
type DataPlaneAuthOptionsResponseOutput struct{ *pulumi.OutputState }

func (DataPlaneAuthOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPlaneAuthOptionsResponse)(nil)).Elem()
}

func (o DataPlaneAuthOptionsResponseOutput) ToDataPlaneAuthOptionsResponseOutput() DataPlaneAuthOptionsResponseOutput {
	return o
}

func (o DataPlaneAuthOptionsResponseOutput) ToDataPlaneAuthOptionsResponseOutputWithContext(ctx context.Context) DataPlaneAuthOptionsResponseOutput {
	return o
}

// Indicates that either the API key or an access token from Azure Active Directory can be used for authentication.
func (o DataPlaneAuthOptionsResponseOutput) AadOrApiKey() DataPlaneAadOrApiKeyAuthOptionResponsePtrOutput {
	return o.ApplyT(func(v DataPlaneAuthOptionsResponse) *DataPlaneAadOrApiKeyAuthOptionResponse { return v.AadOrApiKey }).(DataPlaneAadOrApiKeyAuthOptionResponsePtrOutput)
}

// Indicates that only the API key needs to be used for authentication.
func (o DataPlaneAuthOptionsResponseOutput) ApiKeyOnly() pulumi.AnyOutput {
	return o.ApplyT(func(v DataPlaneAuthOptionsResponse) interface{} { return v.ApiKeyOnly }).(pulumi.AnyOutput)
}

type DataPlaneAuthOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (DataPlaneAuthOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPlaneAuthOptionsResponse)(nil)).Elem()
}

func (o DataPlaneAuthOptionsResponsePtrOutput) ToDataPlaneAuthOptionsResponsePtrOutput() DataPlaneAuthOptionsResponsePtrOutput {
	return o
}

func (o DataPlaneAuthOptionsResponsePtrOutput) ToDataPlaneAuthOptionsResponsePtrOutputWithContext(ctx context.Context) DataPlaneAuthOptionsResponsePtrOutput {
	return o
}

func (o DataPlaneAuthOptionsResponsePtrOutput) Elem() DataPlaneAuthOptionsResponseOutput {
	return o.ApplyT(func(v *DataPlaneAuthOptionsResponse) DataPlaneAuthOptionsResponse {
		if v != nil {
			return *v
		}
		var ret DataPlaneAuthOptionsResponse
		return ret
	}).(DataPlaneAuthOptionsResponseOutput)
}

// Indicates that either the API key or an access token from Azure Active Directory can be used for authentication.
func (o DataPlaneAuthOptionsResponsePtrOutput) AadOrApiKey() DataPlaneAadOrApiKeyAuthOptionResponsePtrOutput {
	return o.ApplyT(func(v *DataPlaneAuthOptionsResponse) *DataPlaneAadOrApiKeyAuthOptionResponse {
		if v == nil {
			return nil
		}
		return v.AadOrApiKey
	}).(DataPlaneAadOrApiKeyAuthOptionResponsePtrOutput)
}

// Indicates that only the API key needs to be used for authentication.
func (o DataPlaneAuthOptionsResponsePtrOutput) ApiKeyOnly() pulumi.AnyOutput {
	return o.ApplyT(func(v *DataPlaneAuthOptionsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.ApiKeyOnly
	}).(pulumi.AnyOutput)
}

// Describes a policy that determines how resources within the search service are to be encrypted with Customer Managed Keys.
type EncryptionWithCmk struct {
	// Describes how a search service should enforce having one or more non customer encrypted resources.
	Enforcement *SearchEncryptionWithCmk `pulumi:"enforcement"`
}

// EncryptionWithCmkInput is an input type that accepts EncryptionWithCmkArgs and EncryptionWithCmkOutput values.
// You can construct a concrete instance of `EncryptionWithCmkInput` via:
//
//	EncryptionWithCmkArgs{...}
type EncryptionWithCmkInput interface {
	pulumi.Input

	ToEncryptionWithCmkOutput() EncryptionWithCmkOutput
	ToEncryptionWithCmkOutputWithContext(context.Context) EncryptionWithCmkOutput
}

// Describes a policy that determines how resources within the search service are to be encrypted with Customer Managed Keys.
type EncryptionWithCmkArgs struct {
	// Describes how a search service should enforce having one or more non customer encrypted resources.
	Enforcement SearchEncryptionWithCmkPtrInput `pulumi:"enforcement"`
}

func (EncryptionWithCmkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionWithCmk)(nil)).Elem()
}

func (i EncryptionWithCmkArgs) ToEncryptionWithCmkOutput() EncryptionWithCmkOutput {
	return i.ToEncryptionWithCmkOutputWithContext(context.Background())
}

func (i EncryptionWithCmkArgs) ToEncryptionWithCmkOutputWithContext(ctx context.Context) EncryptionWithCmkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionWithCmkOutput)
}

func (i EncryptionWithCmkArgs) ToEncryptionWithCmkPtrOutput() EncryptionWithCmkPtrOutput {
	return i.ToEncryptionWithCmkPtrOutputWithContext(context.Background())
}

func (i EncryptionWithCmkArgs) ToEncryptionWithCmkPtrOutputWithContext(ctx context.Context) EncryptionWithCmkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionWithCmkOutput).ToEncryptionWithCmkPtrOutputWithContext(ctx)
}

// EncryptionWithCmkPtrInput is an input type that accepts EncryptionWithCmkArgs, EncryptionWithCmkPtr and EncryptionWithCmkPtrOutput values.
// You can construct a concrete instance of `EncryptionWithCmkPtrInput` via:
//
//	        EncryptionWithCmkArgs{...}
//
//	or:
//
//	        nil
type EncryptionWithCmkPtrInput interface {
	pulumi.Input

	ToEncryptionWithCmkPtrOutput() EncryptionWithCmkPtrOutput
	ToEncryptionWithCmkPtrOutputWithContext(context.Context) EncryptionWithCmkPtrOutput
}

type encryptionWithCmkPtrType EncryptionWithCmkArgs

func EncryptionWithCmkPtr(v *EncryptionWithCmkArgs) EncryptionWithCmkPtrInput {
	return (*encryptionWithCmkPtrType)(v)
}

func (*encryptionWithCmkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionWithCmk)(nil)).Elem()
}

func (i *encryptionWithCmkPtrType) ToEncryptionWithCmkPtrOutput() EncryptionWithCmkPtrOutput {
	return i.ToEncryptionWithCmkPtrOutputWithContext(context.Background())
}

func (i *encryptionWithCmkPtrType) ToEncryptionWithCmkPtrOutputWithContext(ctx context.Context) EncryptionWithCmkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionWithCmkPtrOutput)
}

// Describes a policy that determines how resources within the search service are to be encrypted with Customer Managed Keys.
type EncryptionWithCmkOutput struct{ *pulumi.OutputState }

func (EncryptionWithCmkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionWithCmk)(nil)).Elem()
}

func (o EncryptionWithCmkOutput) ToEncryptionWithCmkOutput() EncryptionWithCmkOutput {
	return o
}

func (o EncryptionWithCmkOutput) ToEncryptionWithCmkOutputWithContext(ctx context.Context) EncryptionWithCmkOutput {
	return o
}

func (o EncryptionWithCmkOutput) ToEncryptionWithCmkPtrOutput() EncryptionWithCmkPtrOutput {
	return o.ToEncryptionWithCmkPtrOutputWithContext(context.Background())
}

func (o EncryptionWithCmkOutput) ToEncryptionWithCmkPtrOutputWithContext(ctx context.Context) EncryptionWithCmkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionWithCmk) *EncryptionWithCmk {
		return &v
	}).(EncryptionWithCmkPtrOutput)
}

// Describes how a search service should enforce having one or more non customer encrypted resources.
func (o EncryptionWithCmkOutput) Enforcement() SearchEncryptionWithCmkPtrOutput {
	return o.ApplyT(func(v EncryptionWithCmk) *SearchEncryptionWithCmk { return v.Enforcement }).(SearchEncryptionWithCmkPtrOutput)
}

type EncryptionWithCmkPtrOutput struct{ *pulumi.OutputState }

func (EncryptionWithCmkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionWithCmk)(nil)).Elem()
}

func (o EncryptionWithCmkPtrOutput) ToEncryptionWithCmkPtrOutput() EncryptionWithCmkPtrOutput {
	return o
}

func (o EncryptionWithCmkPtrOutput) ToEncryptionWithCmkPtrOutputWithContext(ctx context.Context) EncryptionWithCmkPtrOutput {
	return o
}

func (o EncryptionWithCmkPtrOutput) Elem() EncryptionWithCmkOutput {
	return o.ApplyT(func(v *EncryptionWithCmk) EncryptionWithCmk {
		if v != nil {
			return *v
		}
		var ret EncryptionWithCmk
		return ret
	}).(EncryptionWithCmkOutput)
}

// Describes how a search service should enforce having one or more non customer encrypted resources.
func (o EncryptionWithCmkPtrOutput) Enforcement() SearchEncryptionWithCmkPtrOutput {
	return o.ApplyT(func(v *EncryptionWithCmk) *SearchEncryptionWithCmk {
		if v == nil {
			return nil
		}
		return v.Enforcement
	}).(SearchEncryptionWithCmkPtrOutput)
}

// Describes a policy that determines how resources within the search service are to be encrypted with Customer Managed Keys.
type EncryptionWithCmkResponse struct {
	// Describes whether the search service is compliant or not with respect to having non customer encrypted resources. If a service has more than one non customer encrypted resource and 'Enforcement' is 'enabled' then the service will be marked as 'nonCompliant'.
	EncryptionComplianceStatus string `pulumi:"encryptionComplianceStatus"`
	// Describes how a search service should enforce having one or more non customer encrypted resources.
	Enforcement *string `pulumi:"enforcement"`
}

// Describes a policy that determines how resources within the search service are to be encrypted with Customer Managed Keys.
type EncryptionWithCmkResponseOutput struct{ *pulumi.OutputState }

func (EncryptionWithCmkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionWithCmkResponse)(nil)).Elem()
}

func (o EncryptionWithCmkResponseOutput) ToEncryptionWithCmkResponseOutput() EncryptionWithCmkResponseOutput {
	return o
}

func (o EncryptionWithCmkResponseOutput) ToEncryptionWithCmkResponseOutputWithContext(ctx context.Context) EncryptionWithCmkResponseOutput {
	return o
}

// Describes whether the search service is compliant or not with respect to having non customer encrypted resources. If a service has more than one non customer encrypted resource and 'Enforcement' is 'enabled' then the service will be marked as 'nonCompliant'.
func (o EncryptionWithCmkResponseOutput) EncryptionComplianceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionWithCmkResponse) string { return v.EncryptionComplianceStatus }).(pulumi.StringOutput)
}

// Describes how a search service should enforce having one or more non customer encrypted resources.
func (o EncryptionWithCmkResponseOutput) Enforcement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionWithCmkResponse) *string { return v.Enforcement }).(pulumi.StringPtrOutput)
}

type EncryptionWithCmkResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionWithCmkResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionWithCmkResponse)(nil)).Elem()
}

func (o EncryptionWithCmkResponsePtrOutput) ToEncryptionWithCmkResponsePtrOutput() EncryptionWithCmkResponsePtrOutput {
	return o
}

func (o EncryptionWithCmkResponsePtrOutput) ToEncryptionWithCmkResponsePtrOutputWithContext(ctx context.Context) EncryptionWithCmkResponsePtrOutput {
	return o
}

func (o EncryptionWithCmkResponsePtrOutput) Elem() EncryptionWithCmkResponseOutput {
	return o.ApplyT(func(v *EncryptionWithCmkResponse) EncryptionWithCmkResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionWithCmkResponse
		return ret
	}).(EncryptionWithCmkResponseOutput)
}

// Describes whether the search service is compliant or not with respect to having non customer encrypted resources. If a service has more than one non customer encrypted resource and 'Enforcement' is 'enabled' then the service will be marked as 'nonCompliant'.
func (o EncryptionWithCmkResponsePtrOutput) EncryptionComplianceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionWithCmkResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionComplianceStatus
	}).(pulumi.StringPtrOutput)
}

// Describes how a search service should enforce having one or more non customer encrypted resources.
func (o EncryptionWithCmkResponsePtrOutput) Enforcement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionWithCmkResponse) *string {
		if v == nil {
			return nil
		}
		return v.Enforcement
	}).(pulumi.StringPtrOutput)
}

// Details about the search service identity. A null value indicates that the search service has no identity assigned.
type Identity struct {
	// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an identity created by the system and a set of user assigned identities. The type 'None' will remove all identities from the service.
	Type string `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]interface{} `pulumi:"userAssignedIdentities"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//	IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Details about the search service identity. A null value indicates that the search service has no identity assigned.
type IdentityArgs struct {
	// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an identity created by the system and a set of user assigned identities. The type 'None' will remove all identities from the service.
	Type pulumi.StringInput `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.MapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//	        IdentityArgs{...}
//
//	or:
//
//	        nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Details about the search service identity. A null value indicates that the search service has no identity assigned.
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an identity created by the system and a set of user assigned identities. The type 'None' will remove all identities from the service.
func (o IdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v Identity) string { return v.Type }).(pulumi.StringOutput)
}

// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v Identity) map[string]interface{} { return v.UserAssignedIdentities }).(pulumi.MapOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity {
		if v != nil {
			return *v
		}
		var ret Identity
		return ret
	}).(IdentityOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an identity created by the system and a set of user assigned identities. The type 'None' will remove all identities from the service.
func (o IdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityPtrOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v *Identity) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.MapOutput)
}

// Details about the search service identity. A null value indicates that the search service has no identity assigned.
type IdentityResponse struct {
	// The principal ID of the system-assigned identity of the search service.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system-assigned identity of the search service.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an identity created by the system and a set of user assigned identities. The type 'None' will remove all identities from the service.
	Type string `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]UserAssignedManagedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Details about the search service identity. A null value indicates that the search service has no identity assigned.
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

// The principal ID of the system-assigned identity of the search service.
func (o IdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system-assigned identity of the search service.
func (o IdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an identity created by the system and a set of user assigned identities. The type 'None' will remove all identities from the service.
func (o IdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityResponseOutput) UserAssignedIdentities() UserAssignedManagedIdentityResponseMapOutput {
	return o.ApplyT(func(v IdentityResponse) map[string]UserAssignedManagedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedManagedIdentityResponseMapOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse {
		if v != nil {
			return *v
		}
		var ret IdentityResponse
		return ret
	}).(IdentityResponseOutput)
}

// The principal ID of the system-assigned identity of the search service.
func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system-assigned identity of the search service.
func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an identity created by the system and a set of user assigned identities. The type 'None' will remove all identities from the service.
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedManagedIdentityResponseMapOutput {
	return o.ApplyT(func(v *IdentityResponse) map[string]UserAssignedManagedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedManagedIdentityResponseMapOutput)
}

// The IP restriction rule of the Azure Cognitive Search service.
type IpRule struct {
	// Value corresponding to a single IPv4 address (eg., 123.1.2.3) or an IP range in CIDR format (eg., 123.1.2.3/24) to be allowed.
	Value *string `pulumi:"value"`
}

// IpRuleInput is an input type that accepts IpRuleArgs and IpRuleOutput values.
// You can construct a concrete instance of `IpRuleInput` via:
//
//	IpRuleArgs{...}
type IpRuleInput interface {
	pulumi.Input

	ToIpRuleOutput() IpRuleOutput
	ToIpRuleOutputWithContext(context.Context) IpRuleOutput
}

// The IP restriction rule of the Azure Cognitive Search service.
type IpRuleArgs struct {
	// Value corresponding to a single IPv4 address (eg., 123.1.2.3) or an IP range in CIDR format (eg., 123.1.2.3/24) to be allowed.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IpRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpRule)(nil)).Elem()
}

func (i IpRuleArgs) ToIpRuleOutput() IpRuleOutput {
	return i.ToIpRuleOutputWithContext(context.Background())
}

func (i IpRuleArgs) ToIpRuleOutputWithContext(ctx context.Context) IpRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpRuleOutput)
}

// IpRuleArrayInput is an input type that accepts IpRuleArray and IpRuleArrayOutput values.
// You can construct a concrete instance of `IpRuleArrayInput` via:
//
//	IpRuleArray{ IpRuleArgs{...} }
type IpRuleArrayInput interface {
	pulumi.Input

	ToIpRuleArrayOutput() IpRuleArrayOutput
	ToIpRuleArrayOutputWithContext(context.Context) IpRuleArrayOutput
}

type IpRuleArray []IpRuleInput

func (IpRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpRule)(nil)).Elem()
}

func (i IpRuleArray) ToIpRuleArrayOutput() IpRuleArrayOutput {
	return i.ToIpRuleArrayOutputWithContext(context.Background())
}

func (i IpRuleArray) ToIpRuleArrayOutputWithContext(ctx context.Context) IpRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpRuleArrayOutput)
}

// The IP restriction rule of the Azure Cognitive Search service.
type IpRuleOutput struct{ *pulumi.OutputState }

func (IpRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpRule)(nil)).Elem()
}

func (o IpRuleOutput) ToIpRuleOutput() IpRuleOutput {
	return o
}

func (o IpRuleOutput) ToIpRuleOutputWithContext(ctx context.Context) IpRuleOutput {
	return o
}

// Value corresponding to a single IPv4 address (eg., 123.1.2.3) or an IP range in CIDR format (eg., 123.1.2.3/24) to be allowed.
func (o IpRuleOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpRule) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IpRuleArrayOutput struct{ *pulumi.OutputState }

func (IpRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpRule)(nil)).Elem()
}

func (o IpRuleArrayOutput) ToIpRuleArrayOutput() IpRuleArrayOutput {
	return o
}

func (o IpRuleArrayOutput) ToIpRuleArrayOutputWithContext(ctx context.Context) IpRuleArrayOutput {
	return o
}

func (o IpRuleArrayOutput) Index(i pulumi.IntInput) IpRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpRule {
		return vs[0].([]IpRule)[vs[1].(int)]
	}).(IpRuleOutput)
}

// The IP restriction rule of the Azure Cognitive Search service.
type IpRuleResponse struct {
	// Value corresponding to a single IPv4 address (eg., 123.1.2.3) or an IP range in CIDR format (eg., 123.1.2.3/24) to be allowed.
	Value *string `pulumi:"value"`
}

// The IP restriction rule of the Azure Cognitive Search service.
type IpRuleResponseOutput struct{ *pulumi.OutputState }

func (IpRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpRuleResponse)(nil)).Elem()
}

func (o IpRuleResponseOutput) ToIpRuleResponseOutput() IpRuleResponseOutput {
	return o
}

func (o IpRuleResponseOutput) ToIpRuleResponseOutputWithContext(ctx context.Context) IpRuleResponseOutput {
	return o
}

// Value corresponding to a single IPv4 address (eg., 123.1.2.3) or an IP range in CIDR format (eg., 123.1.2.3/24) to be allowed.
func (o IpRuleResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpRuleResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IpRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (IpRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpRuleResponse)(nil)).Elem()
}

func (o IpRuleResponseArrayOutput) ToIpRuleResponseArrayOutput() IpRuleResponseArrayOutput {
	return o
}

func (o IpRuleResponseArrayOutput) ToIpRuleResponseArrayOutputWithContext(ctx context.Context) IpRuleResponseArrayOutput {
	return o
}

func (o IpRuleResponseArrayOutput) Index(i pulumi.IntInput) IpRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpRuleResponse {
		return vs[0].([]IpRuleResponse)[vs[1].(int)]
	}).(IpRuleResponseOutput)
}

// Network specific rules that determine how the Azure Cognitive Search service may be reached.
type NetworkRuleSet struct {
	// Possible origins of inbound traffic that can bypass the rules defined in the 'ipRules' section.
	Bypass *string `pulumi:"bypass"`
	// A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method.
	IpRules []IpRule `pulumi:"ipRules"`
}

// NetworkRuleSetInput is an input type that accepts NetworkRuleSetArgs and NetworkRuleSetOutput values.
// You can construct a concrete instance of `NetworkRuleSetInput` via:
//
//	NetworkRuleSetArgs{...}
type NetworkRuleSetInput interface {
	pulumi.Input

	ToNetworkRuleSetOutput() NetworkRuleSetOutput
	ToNetworkRuleSetOutputWithContext(context.Context) NetworkRuleSetOutput
}

// Network specific rules that determine how the Azure Cognitive Search service may be reached.
type NetworkRuleSetArgs struct {
	// Possible origins of inbound traffic that can bypass the rules defined in the 'ipRules' section.
	Bypass pulumi.StringPtrInput `pulumi:"bypass"`
	// A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method.
	IpRules IpRuleArrayInput `pulumi:"ipRules"`
}

func (NetworkRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSet)(nil)).Elem()
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetOutput() NetworkRuleSetOutput {
	return i.ToNetworkRuleSetOutputWithContext(context.Background())
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetOutputWithContext(ctx context.Context) NetworkRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetOutput)
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return i.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetOutput).ToNetworkRuleSetPtrOutputWithContext(ctx)
}

// NetworkRuleSetPtrInput is an input type that accepts NetworkRuleSetArgs, NetworkRuleSetPtr and NetworkRuleSetPtrOutput values.
// You can construct a concrete instance of `NetworkRuleSetPtrInput` via:
//
//	        NetworkRuleSetArgs{...}
//
//	or:
//
//	        nil
type NetworkRuleSetPtrInput interface {
	pulumi.Input

	ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput
	ToNetworkRuleSetPtrOutputWithContext(context.Context) NetworkRuleSetPtrOutput
}

type networkRuleSetPtrType NetworkRuleSetArgs

func NetworkRuleSetPtr(v *NetworkRuleSetArgs) NetworkRuleSetPtrInput {
	return (*networkRuleSetPtrType)(v)
}

func (*networkRuleSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSet)(nil)).Elem()
}

func (i *networkRuleSetPtrType) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return i.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i *networkRuleSetPtrType) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetPtrOutput)
}

// Network specific rules that determine how the Azure Cognitive Search service may be reached.
type NetworkRuleSetOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSet)(nil)).Elem()
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetOutput() NetworkRuleSetOutput {
	return o
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetOutputWithContext(ctx context.Context) NetworkRuleSetOutput {
	return o
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return o.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkRuleSet) *NetworkRuleSet {
		return &v
	}).(NetworkRuleSetPtrOutput)
}

// Possible origins of inbound traffic that can bypass the rules defined in the 'ipRules' section.
func (o NetworkRuleSetOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleSet) *string { return v.Bypass }).(pulumi.StringPtrOutput)
}

// A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method.
func (o NetworkRuleSetOutput) IpRules() IpRuleArrayOutput {
	return o.ApplyT(func(v NetworkRuleSet) []IpRule { return v.IpRules }).(IpRuleArrayOutput)
}

type NetworkRuleSetPtrOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSet)(nil)).Elem()
}

func (o NetworkRuleSetPtrOutput) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return o
}

func (o NetworkRuleSetPtrOutput) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return o
}

func (o NetworkRuleSetPtrOutput) Elem() NetworkRuleSetOutput {
	return o.ApplyT(func(v *NetworkRuleSet) NetworkRuleSet {
		if v != nil {
			return *v
		}
		var ret NetworkRuleSet
		return ret
	}).(NetworkRuleSetOutput)
}

// Possible origins of inbound traffic that can bypass the rules defined in the 'ipRules' section.
func (o NetworkRuleSetPtrOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSet) *string {
		if v == nil {
			return nil
		}
		return v.Bypass
	}).(pulumi.StringPtrOutput)
}

// A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method.
func (o NetworkRuleSetPtrOutput) IpRules() IpRuleArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSet) []IpRule {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(IpRuleArrayOutput)
}

// Network specific rules that determine how the Azure Cognitive Search service may be reached.
type NetworkRuleSetResponse struct {
	// Possible origins of inbound traffic that can bypass the rules defined in the 'ipRules' section.
	Bypass *string `pulumi:"bypass"`
	// A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method.
	IpRules []IpRuleResponse `pulumi:"ipRules"`
}

// Network specific rules that determine how the Azure Cognitive Search service may be reached.
type NetworkRuleSetResponseOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSetResponse)(nil)).Elem()
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponseOutput() NetworkRuleSetResponseOutput {
	return o
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponseOutputWithContext(ctx context.Context) NetworkRuleSetResponseOutput {
	return o
}

// Possible origins of inbound traffic that can bypass the rules defined in the 'ipRules' section.
func (o NetworkRuleSetResponseOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) *string { return v.Bypass }).(pulumi.StringPtrOutput)
}

// A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method.
func (o NetworkRuleSetResponseOutput) IpRules() IpRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) []IpRuleResponse { return v.IpRules }).(IpRuleResponseArrayOutput)
}

type NetworkRuleSetResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSetResponse)(nil)).Elem()
}

func (o NetworkRuleSetResponsePtrOutput) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return o
}

func (o NetworkRuleSetResponsePtrOutput) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return o
}

func (o NetworkRuleSetResponsePtrOutput) Elem() NetworkRuleSetResponseOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) NetworkRuleSetResponse {
		if v != nil {
			return *v
		}
		var ret NetworkRuleSetResponse
		return ret
	}).(NetworkRuleSetResponseOutput)
}

// Possible origins of inbound traffic that can bypass the rules defined in the 'ipRules' section.
func (o NetworkRuleSetResponsePtrOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Bypass
	}).(pulumi.StringPtrOutput)
}

// A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method.
func (o NetworkRuleSetResponsePtrOutput) IpRules() IpRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) []IpRuleResponse {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(IpRuleResponseArrayOutput)
}

// Describes the properties of an existing Private Endpoint connection to the Azure Cognitive Search service.
type PrivateEndpointConnectionProperties struct {
	// The private endpoint resource from Microsoft.Network provider.
	PrivateEndpoint *PrivateEndpointConnectionPropertiesPrivateEndpoint `pulumi:"privateEndpoint"`
	// Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint.
	PrivateLinkServiceConnectionState *PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState `pulumi:"privateLinkServiceConnectionState"`
}

// Defaults sets the appropriate defaults for PrivateEndpointConnectionProperties
func (val *PrivateEndpointConnectionProperties) Defaults() *PrivateEndpointConnectionProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.PrivateLinkServiceConnectionState = tmp.PrivateLinkServiceConnectionState.Defaults()

	return &tmp
}

// PrivateEndpointConnectionPropertiesInput is an input type that accepts PrivateEndpointConnectionPropertiesArgs and PrivateEndpointConnectionPropertiesOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesInput` via:
//
//	PrivateEndpointConnectionPropertiesArgs{...}
type PrivateEndpointConnectionPropertiesInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput
	ToPrivateEndpointConnectionPropertiesOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesOutput
}

// Describes the properties of an existing Private Endpoint connection to the Azure Cognitive Search service.
type PrivateEndpointConnectionPropertiesArgs struct {
	// The private endpoint resource from Microsoft.Network provider.
	PrivateEndpoint PrivateEndpointConnectionPropertiesPrivateEndpointPtrInput `pulumi:"privateEndpoint"`
	// Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint.
	PrivateLinkServiceConnectionState PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrInput `pulumi:"privateLinkServiceConnectionState"`
}

// Defaults sets the appropriate defaults for PrivateEndpointConnectionPropertiesArgs
func (val *PrivateEndpointConnectionPropertiesArgs) Defaults() *PrivateEndpointConnectionPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (PrivateEndpointConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput {
	return i.ToPrivateEndpointConnectionPropertiesOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesOutput)
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput {
	return i.ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesOutput).ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx)
}

// PrivateEndpointConnectionPropertiesPtrInput is an input type that accepts PrivateEndpointConnectionPropertiesArgs, PrivateEndpointConnectionPropertiesPtr and PrivateEndpointConnectionPropertiesPtrOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesPtrInput` via:
//
//	        PrivateEndpointConnectionPropertiesArgs{...}
//
//	or:
//
//	        nil
type PrivateEndpointConnectionPropertiesPtrInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput
	ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesPtrOutput
}

type privateEndpointConnectionPropertiesPtrType PrivateEndpointConnectionPropertiesArgs

func PrivateEndpointConnectionPropertiesPtr(v *PrivateEndpointConnectionPropertiesArgs) PrivateEndpointConnectionPropertiesPtrInput {
	return (*privateEndpointConnectionPropertiesPtrType)(v)
}

func (*privateEndpointConnectionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (i *privateEndpointConnectionPropertiesPtrType) ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput {
	return i.ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i *privateEndpointConnectionPropertiesPtrType) ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesPtrOutput)
}

// Describes the properties of an existing Private Endpoint connection to the Azure Cognitive Search service.
type PrivateEndpointConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput {
	return o.ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointConnectionProperties) *PrivateEndpointConnectionProperties {
		return &v
	}).(PrivateEndpointConnectionPropertiesPtrOutput)
}

// The private endpoint resource from Microsoft.Network provider.
func (o PrivateEndpointConnectionPropertiesOutput) PrivateEndpoint() PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionProperties) *PrivateEndpointConnectionPropertiesPrivateEndpoint {
		return v.PrivateEndpoint
	}).(PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput)
}

// Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint.
func (o PrivateEndpointConnectionPropertiesOutput) PrivateLinkServiceConnectionState() PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionProperties) *PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput)
}

type PrivateEndpointConnectionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesPtrOutput) ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesPtrOutput) ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesPtrOutput) Elem() PrivateEndpointConnectionPropertiesOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionProperties) PrivateEndpointConnectionProperties {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointConnectionProperties
		return ret
	}).(PrivateEndpointConnectionPropertiesOutput)
}

// The private endpoint resource from Microsoft.Network provider.
func (o PrivateEndpointConnectionPropertiesPtrOutput) PrivateEndpoint() PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionProperties) *PrivateEndpointConnectionPropertiesPrivateEndpoint {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoint
	}).(PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput)
}

// Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint.
func (o PrivateEndpointConnectionPropertiesPtrOutput) PrivateLinkServiceConnectionState() PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionProperties) *PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceConnectionState
	}).(PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput)
}

// The private endpoint resource from Microsoft.Network provider.
type PrivateEndpointConnectionPropertiesPrivateEndpoint struct {
	// The resource id of the private endpoint resource from Microsoft.Network provider.
	Id *string `pulumi:"id"`
}

// PrivateEndpointConnectionPropertiesPrivateEndpointInput is an input type that accepts PrivateEndpointConnectionPropertiesPrivateEndpointArgs and PrivateEndpointConnectionPropertiesPrivateEndpointOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesPrivateEndpointInput` via:
//
//	PrivateEndpointConnectionPropertiesPrivateEndpointArgs{...}
type PrivateEndpointConnectionPropertiesPrivateEndpointInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesPrivateEndpointOutput() PrivateEndpointConnectionPropertiesPrivateEndpointOutput
	ToPrivateEndpointConnectionPropertiesPrivateEndpointOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesPrivateEndpointOutput
}

// The private endpoint resource from Microsoft.Network provider.
type PrivateEndpointConnectionPropertiesPrivateEndpointArgs struct {
	// The resource id of the private endpoint resource from Microsoft.Network provider.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (PrivateEndpointConnectionPropertiesPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionPropertiesPrivateEndpoint)(nil)).Elem()
}

func (i PrivateEndpointConnectionPropertiesPrivateEndpointArgs) ToPrivateEndpointConnectionPropertiesPrivateEndpointOutput() PrivateEndpointConnectionPropertiesPrivateEndpointOutput {
	return i.ToPrivateEndpointConnectionPropertiesPrivateEndpointOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesPrivateEndpointArgs) ToPrivateEndpointConnectionPropertiesPrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesPrivateEndpointOutput)
}

func (i PrivateEndpointConnectionPropertiesPrivateEndpointArgs) ToPrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput() PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput {
	return i.ToPrivateEndpointConnectionPropertiesPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesPrivateEndpointArgs) ToPrivateEndpointConnectionPropertiesPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesPrivateEndpointOutput).ToPrivateEndpointConnectionPropertiesPrivateEndpointPtrOutputWithContext(ctx)
}

// PrivateEndpointConnectionPropertiesPrivateEndpointPtrInput is an input type that accepts PrivateEndpointConnectionPropertiesPrivateEndpointArgs, PrivateEndpointConnectionPropertiesPrivateEndpointPtr and PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesPrivateEndpointPtrInput` via:
//
//	        PrivateEndpointConnectionPropertiesPrivateEndpointArgs{...}
//
//	or:
//
//	        nil
type PrivateEndpointConnectionPropertiesPrivateEndpointPtrInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput() PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput
	ToPrivateEndpointConnectionPropertiesPrivateEndpointPtrOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput
}

type privateEndpointConnectionPropertiesPrivateEndpointPtrType PrivateEndpointConnectionPropertiesPrivateEndpointArgs

func PrivateEndpointConnectionPropertiesPrivateEndpointPtr(v *PrivateEndpointConnectionPropertiesPrivateEndpointArgs) PrivateEndpointConnectionPropertiesPrivateEndpointPtrInput {
	return (*privateEndpointConnectionPropertiesPrivateEndpointPtrType)(v)
}

func (*privateEndpointConnectionPropertiesPrivateEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionPropertiesPrivateEndpoint)(nil)).Elem()
}

func (i *privateEndpointConnectionPropertiesPrivateEndpointPtrType) ToPrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput() PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput {
	return i.ToPrivateEndpointConnectionPropertiesPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i *privateEndpointConnectionPropertiesPrivateEndpointPtrType) ToPrivateEndpointConnectionPropertiesPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput)
}

// The private endpoint resource from Microsoft.Network provider.
type PrivateEndpointConnectionPropertiesPrivateEndpointOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionPropertiesPrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesPrivateEndpointOutput) ToPrivateEndpointConnectionPropertiesPrivateEndpointOutput() PrivateEndpointConnectionPropertiesPrivateEndpointOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesPrivateEndpointOutput) ToPrivateEndpointConnectionPropertiesPrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPrivateEndpointOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesPrivateEndpointOutput) ToPrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput() PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput {
	return o.ToPrivateEndpointConnectionPropertiesPrivateEndpointPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointConnectionPropertiesPrivateEndpointOutput) ToPrivateEndpointConnectionPropertiesPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointConnectionPropertiesPrivateEndpoint) *PrivateEndpointConnectionPropertiesPrivateEndpoint {
		return &v
	}).(PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput)
}

// The resource id of the private endpoint resource from Microsoft.Network provider.
func (o PrivateEndpointConnectionPropertiesPrivateEndpointOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesPrivateEndpoint) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionPropertiesPrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput) ToPrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput() PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput) ToPrivateEndpointConnectionPropertiesPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput) Elem() PrivateEndpointConnectionPropertiesPrivateEndpointOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesPrivateEndpoint) PrivateEndpointConnectionPropertiesPrivateEndpoint {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointConnectionPropertiesPrivateEndpoint
		return ret
	}).(PrivateEndpointConnectionPropertiesPrivateEndpointOutput)
}

// The resource id of the private endpoint resource from Microsoft.Network provider.
func (o PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesPrivateEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint.
type PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState struct {
	// A description of any extra actions that may be required.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The description for the private link service connection state.
	Description *string `pulumi:"description"`
	// Status of the the private link service connection. Can be Pending, Approved, Rejected, or Disconnected.
	Status *PrivateLinkServiceConnectionStatus `pulumi:"status"`
}

// Defaults sets the appropriate defaults for PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState
func (val *PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState) Defaults() *PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.ActionsRequired) {
		actionsRequired_ := "None"
		tmp.ActionsRequired = &actionsRequired_
	}
	return &tmp
}

// PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateInput is an input type that accepts PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateArgs and PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateInput` via:
//
//	PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateArgs{...}
type PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput() PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput
	ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput
}

// Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint.
type PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateArgs struct {
	// A description of any extra actions that may be required.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The description for the private link service connection state.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Status of the the private link service connection. Can be Pending, Approved, Rejected, or Disconnected.
	Status PrivateLinkServiceConnectionStatusPtrInput `pulumi:"status"`
}

// Defaults sets the appropriate defaults for PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateArgs
func (val *PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateArgs) Defaults() *PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.ActionsRequired) {
		tmp.ActionsRequired = pulumi.StringPtr("None")
	}
	return &tmp
}
func (PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateArgs) ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput() PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateArgs) ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput)
}

func (i PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateArgs) ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput() PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateArgs) ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput).ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx)
}

// PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrInput is an input type that accepts PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateArgs, PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtr and PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrInput` via:
//
//	        PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateArgs{...}
//
//	or:
//
//	        nil
type PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput() PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput
	ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput
}

type privateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrType PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateArgs

func PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtr(v *PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateArgs) PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrInput {
	return (*privateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrType)(v)
}

func (*privateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i *privateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrType) ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput() PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrType) ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput)
}

// Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint.
type PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput) ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput() PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput) ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput) ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput() PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return o.ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput) ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState) *PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState {
		return &v
	}).(PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput)
}

// A description of any extra actions that may be required.
func (o PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState) *string {
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The description for the private link service connection state.
func (o PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState) *string {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Status of the the private link service connection. Can be Pending, Approved, Rejected, or Disconnected.
func (o PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput) Status() PrivateLinkServiceConnectionStatusPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState) *PrivateLinkServiceConnectionStatus {
		return v.Status
	}).(PrivateLinkServiceConnectionStatusPtrOutput)
}

type PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput) ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput() PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput) ToPrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput) Elem() PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState) PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState
		return ret
	}).(PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput)
}

// A description of any extra actions that may be required.
func (o PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The description for the private link service connection state.
func (o PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Status of the the private link service connection. Can be Pending, Approved, Rejected, or Disconnected.
func (o PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput) Status() PrivateLinkServiceConnectionStatusPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState) *PrivateLinkServiceConnectionStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(PrivateLinkServiceConnectionStatusPtrOutput)
}

// Describes the properties of an existing Private Endpoint connection to the Azure Cognitive Search service.
type PrivateEndpointConnectionPropertiesResponse struct {
	// The private endpoint resource from Microsoft.Network provider.
	PrivateEndpoint *PrivateEndpointConnectionPropertiesResponsePrivateEndpoint `pulumi:"privateEndpoint"`
	// Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint.
	PrivateLinkServiceConnectionState *PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState `pulumi:"privateLinkServiceConnectionState"`
}

// Defaults sets the appropriate defaults for PrivateEndpointConnectionPropertiesResponse
func (val *PrivateEndpointConnectionPropertiesResponse) Defaults() *PrivateEndpointConnectionPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.PrivateLinkServiceConnectionState = tmp.PrivateLinkServiceConnectionState.Defaults()

	return &tmp
}

// Describes the properties of an existing Private Endpoint connection to the Azure Cognitive Search service.
type PrivateEndpointConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesResponseOutput) ToPrivateEndpointConnectionPropertiesResponseOutput() PrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponseOutput) ToPrivateEndpointConnectionPropertiesResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

// The private endpoint resource from Microsoft.Network provider.
func (o PrivateEndpointConnectionPropertiesResponseOutput) PrivateEndpoint() PrivateEndpointConnectionPropertiesResponsePrivateEndpointPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) *PrivateEndpointConnectionPropertiesResponsePrivateEndpoint {
		return v.PrivateEndpoint
	}).(PrivateEndpointConnectionPropertiesResponsePrivateEndpointPtrOutput)
}

// Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint.
func (o PrivateEndpointConnectionPropertiesResponseOutput) PrivateLinkServiceConnectionState() PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) *PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput)
}

type PrivateEndpointConnectionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) ToPrivateEndpointConnectionPropertiesResponsePtrOutput() PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) Elem() PrivateEndpointConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponse) PrivateEndpointConnectionPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointConnectionPropertiesResponse
		return ret
	}).(PrivateEndpointConnectionPropertiesResponseOutput)
}

// The private endpoint resource from Microsoft.Network provider.
func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) PrivateEndpoint() PrivateEndpointConnectionPropertiesResponsePrivateEndpointPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponse) *PrivateEndpointConnectionPropertiesResponsePrivateEndpoint {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoint
	}).(PrivateEndpointConnectionPropertiesResponsePrivateEndpointPtrOutput)
}

// Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint.
func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) PrivateLinkServiceConnectionState() PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponse) *PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceConnectionState
	}).(PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput)
}

// The private endpoint resource from Microsoft.Network provider.
type PrivateEndpointConnectionPropertiesResponsePrivateEndpoint struct {
	// The resource id of the private endpoint resource from Microsoft.Network provider.
	Id *string `pulumi:"id"`
}

// The private endpoint resource from Microsoft.Network provider.
type PrivateEndpointConnectionPropertiesResponsePrivateEndpointOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesResponsePrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionPropertiesResponsePrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesResponsePrivateEndpointOutput) ToPrivateEndpointConnectionPropertiesResponsePrivateEndpointOutput() PrivateEndpointConnectionPropertiesResponsePrivateEndpointOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponsePrivateEndpointOutput) ToPrivateEndpointConnectionPropertiesResponsePrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponsePrivateEndpointOutput {
	return o
}

// The resource id of the private endpoint resource from Microsoft.Network provider.
func (o PrivateEndpointConnectionPropertiesResponsePrivateEndpointOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponsePrivateEndpoint) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PrivateEndpointConnectionPropertiesResponsePrivateEndpointPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesResponsePrivateEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionPropertiesResponsePrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesResponsePrivateEndpointPtrOutput) ToPrivateEndpointConnectionPropertiesResponsePrivateEndpointPtrOutput() PrivateEndpointConnectionPropertiesResponsePrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponsePrivateEndpointPtrOutput) ToPrivateEndpointConnectionPropertiesResponsePrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponsePrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponsePrivateEndpointPtrOutput) Elem() PrivateEndpointConnectionPropertiesResponsePrivateEndpointOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponsePrivateEndpoint) PrivateEndpointConnectionPropertiesResponsePrivateEndpoint {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointConnectionPropertiesResponsePrivateEndpoint
		return ret
	}).(PrivateEndpointConnectionPropertiesResponsePrivateEndpointOutput)
}

// The resource id of the private endpoint resource from Microsoft.Network provider.
func (o PrivateEndpointConnectionPropertiesResponsePrivateEndpointPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponsePrivateEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint.
type PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState struct {
	// A description of any extra actions that may be required.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The description for the private link service connection state.
	Description *string `pulumi:"description"`
	// Status of the the private link service connection. Can be Pending, Approved, Rejected, or Disconnected.
	Status *string `pulumi:"status"`
}

// Defaults sets the appropriate defaults for PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState
func (val *PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState) Defaults() *PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.ActionsRequired) {
		actionsRequired_ := "None"
		tmp.ActionsRequired = &actionsRequired_
	}
	return &tmp
}

// Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint.
type PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput) ToPrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput() PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput) ToPrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput {
	return o
}

// A description of any extra actions that may be required.
func (o PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState) *string {
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The description for the private link service connection state.
func (o PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState) *string {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Status of the the private link service connection. Can be Pending, Approved, Rejected, or Disconnected.
func (o PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState) *string {
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput) ToPrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput() PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput) ToPrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput) Elem() PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState) PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState
		return ret
	}).(PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput)
}

// A description of any extra actions that may be required.
func (o PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The description for the private link service connection state.
func (o PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Status of the the private link service connection. Can be Pending, Approved, Rejected, or Disconnected.
func (o PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Describes an existing Private Endpoint connection to the Azure Cognitive Search service.
type PrivateEndpointConnectionResponse struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Describes the properties of an existing Private Endpoint connection to the Azure Cognitive Search service.
	Properties *PrivateEndpointConnectionPropertiesResponse `pulumi:"properties"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for PrivateEndpointConnectionResponse
func (val *PrivateEndpointConnectionResponse) Defaults() *PrivateEndpointConnectionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Properties = tmp.Properties.Defaults()

	return &tmp
}

// Describes an existing Private Endpoint connection to the Azure Cognitive Search service.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Describes the properties of an existing Private Endpoint connection to the Azure Cognitive Search service.
func (o PrivateEndpointConnectionResponseOutput) Properties() PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointConnectionPropertiesResponse {
		return v.Properties
	}).(PrivateEndpointConnectionPropertiesResponsePtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// Describes an API key for a given Azure Cognitive Search service that has permissions for query operations only.
type QueryKeyResponse struct {
	// The value of the query API key.
	Key string `pulumi:"key"`
	// The name of the query API key; may be empty.
	Name string `pulumi:"name"`
}

// Describes an API key for a given Azure Cognitive Search service that has permissions for query operations only.
type QueryKeyResponseOutput struct{ *pulumi.OutputState }

func (QueryKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryKeyResponse)(nil)).Elem()
}

func (o QueryKeyResponseOutput) ToQueryKeyResponseOutput() QueryKeyResponseOutput {
	return o
}

func (o QueryKeyResponseOutput) ToQueryKeyResponseOutputWithContext(ctx context.Context) QueryKeyResponseOutput {
	return o
}

// The value of the query API key.
func (o QueryKeyResponseOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v QueryKeyResponse) string { return v.Key }).(pulumi.StringOutput)
}

// The name of the query API key; may be empty.
func (o QueryKeyResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v QueryKeyResponse) string { return v.Name }).(pulumi.StringOutput)
}

type QueryKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (QueryKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueryKeyResponse)(nil)).Elem()
}

func (o QueryKeyResponseArrayOutput) ToQueryKeyResponseArrayOutput() QueryKeyResponseArrayOutput {
	return o
}

func (o QueryKeyResponseArrayOutput) ToQueryKeyResponseArrayOutputWithContext(ctx context.Context) QueryKeyResponseArrayOutput {
	return o
}

func (o QueryKeyResponseArrayOutput) Index(i pulumi.IntInput) QueryKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QueryKeyResponse {
		return vs[0].([]QueryKeyResponse)[vs[1].(int)]
	}).(QueryKeyResponseOutput)
}

// Describes the properties of an existing Shared Private Link Resource managed by the Azure Cognitive Search service.
type SharedPrivateLinkResourceProperties struct {
	// The group id from the provider of resource the shared private link resource is for.
	GroupId *string `pulumi:"groupId"`
	// The resource id of the resource the shared private link resource is for.
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// The provisioning state of the shared private link resource. Can be Updating, Deleting, Failed, Succeeded, Incomplete or other yet to be documented value.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The request message for requesting approval of the shared private link resource.
	RequestMessage *string `pulumi:"requestMessage"`
	// Optional. Can be used to specify the Azure Resource Manager location of the resource to which a shared private link is to be created. This is only required for those resources whose DNS configuration are regional (such as Azure Kubernetes Service).
	ResourceRegion *string `pulumi:"resourceRegion"`
	// Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected or other yet to be documented value.
	Status *string `pulumi:"status"`
}

// SharedPrivateLinkResourcePropertiesInput is an input type that accepts SharedPrivateLinkResourcePropertiesArgs and SharedPrivateLinkResourcePropertiesOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourcePropertiesInput` via:
//
//	SharedPrivateLinkResourcePropertiesArgs{...}
type SharedPrivateLinkResourcePropertiesInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourcePropertiesOutput() SharedPrivateLinkResourcePropertiesOutput
	ToSharedPrivateLinkResourcePropertiesOutputWithContext(context.Context) SharedPrivateLinkResourcePropertiesOutput
}

// Describes the properties of an existing Shared Private Link Resource managed by the Azure Cognitive Search service.
type SharedPrivateLinkResourcePropertiesArgs struct {
	// The group id from the provider of resource the shared private link resource is for.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// The resource id of the resource the shared private link resource is for.
	PrivateLinkResourceId pulumi.StringPtrInput `pulumi:"privateLinkResourceId"`
	// The provisioning state of the shared private link resource. Can be Updating, Deleting, Failed, Succeeded, Incomplete or other yet to be documented value.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The request message for requesting approval of the shared private link resource.
	RequestMessage pulumi.StringPtrInput `pulumi:"requestMessage"`
	// Optional. Can be used to specify the Azure Resource Manager location of the resource to which a shared private link is to be created. This is only required for those resources whose DNS configuration are regional (such as Azure Kubernetes Service).
	ResourceRegion pulumi.StringPtrInput `pulumi:"resourceRegion"`
	// Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected or other yet to be documented value.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SharedPrivateLinkResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResourceProperties)(nil)).Elem()
}

func (i SharedPrivateLinkResourcePropertiesArgs) ToSharedPrivateLinkResourcePropertiesOutput() SharedPrivateLinkResourcePropertiesOutput {
	return i.ToSharedPrivateLinkResourcePropertiesOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourcePropertiesArgs) ToSharedPrivateLinkResourcePropertiesOutputWithContext(ctx context.Context) SharedPrivateLinkResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourcePropertiesOutput)
}

func (i SharedPrivateLinkResourcePropertiesArgs) ToSharedPrivateLinkResourcePropertiesPtrOutput() SharedPrivateLinkResourcePropertiesPtrOutput {
	return i.ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourcePropertiesArgs) ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(ctx context.Context) SharedPrivateLinkResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourcePropertiesOutput).ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(ctx)
}

// SharedPrivateLinkResourcePropertiesPtrInput is an input type that accepts SharedPrivateLinkResourcePropertiesArgs, SharedPrivateLinkResourcePropertiesPtr and SharedPrivateLinkResourcePropertiesPtrOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourcePropertiesPtrInput` via:
//
//	        SharedPrivateLinkResourcePropertiesArgs{...}
//
//	or:
//
//	        nil
type SharedPrivateLinkResourcePropertiesPtrInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourcePropertiesPtrOutput() SharedPrivateLinkResourcePropertiesPtrOutput
	ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(context.Context) SharedPrivateLinkResourcePropertiesPtrOutput
}

type sharedPrivateLinkResourcePropertiesPtrType SharedPrivateLinkResourcePropertiesArgs

func SharedPrivateLinkResourcePropertiesPtr(v *SharedPrivateLinkResourcePropertiesArgs) SharedPrivateLinkResourcePropertiesPtrInput {
	return (*sharedPrivateLinkResourcePropertiesPtrType)(v)
}

func (*sharedPrivateLinkResourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedPrivateLinkResourceProperties)(nil)).Elem()
}

func (i *sharedPrivateLinkResourcePropertiesPtrType) ToSharedPrivateLinkResourcePropertiesPtrOutput() SharedPrivateLinkResourcePropertiesPtrOutput {
	return i.ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *sharedPrivateLinkResourcePropertiesPtrType) ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(ctx context.Context) SharedPrivateLinkResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourcePropertiesPtrOutput)
}

// Describes the properties of an existing Shared Private Link Resource managed by the Azure Cognitive Search service.
type SharedPrivateLinkResourcePropertiesOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResourceProperties)(nil)).Elem()
}

func (o SharedPrivateLinkResourcePropertiesOutput) ToSharedPrivateLinkResourcePropertiesOutput() SharedPrivateLinkResourcePropertiesOutput {
	return o
}

func (o SharedPrivateLinkResourcePropertiesOutput) ToSharedPrivateLinkResourcePropertiesOutputWithContext(ctx context.Context) SharedPrivateLinkResourcePropertiesOutput {
	return o
}

func (o SharedPrivateLinkResourcePropertiesOutput) ToSharedPrivateLinkResourcePropertiesPtrOutput() SharedPrivateLinkResourcePropertiesPtrOutput {
	return o.ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(context.Background())
}

func (o SharedPrivateLinkResourcePropertiesOutput) ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(ctx context.Context) SharedPrivateLinkResourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SharedPrivateLinkResourceProperties) *SharedPrivateLinkResourceProperties {
		return &v
	}).(SharedPrivateLinkResourcePropertiesPtrOutput)
}

// The group id from the provider of resource the shared private link resource is for.
func (o SharedPrivateLinkResourcePropertiesOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceProperties) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The resource id of the resource the shared private link resource is for.
func (o SharedPrivateLinkResourcePropertiesOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceProperties) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// The provisioning state of the shared private link resource. Can be Updating, Deleting, Failed, Succeeded, Incomplete or other yet to be documented value.
func (o SharedPrivateLinkResourcePropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The request message for requesting approval of the shared private link resource.
func (o SharedPrivateLinkResourcePropertiesOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceProperties) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// Optional. Can be used to specify the Azure Resource Manager location of the resource to which a shared private link is to be created. This is only required for those resources whose DNS configuration are regional (such as Azure Kubernetes Service).
func (o SharedPrivateLinkResourcePropertiesOutput) ResourceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceProperties) *string { return v.ResourceRegion }).(pulumi.StringPtrOutput)
}

// Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected or other yet to be documented value.
func (o SharedPrivateLinkResourcePropertiesOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceProperties) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SharedPrivateLinkResourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedPrivateLinkResourceProperties)(nil)).Elem()
}

func (o SharedPrivateLinkResourcePropertiesPtrOutput) ToSharedPrivateLinkResourcePropertiesPtrOutput() SharedPrivateLinkResourcePropertiesPtrOutput {
	return o
}

func (o SharedPrivateLinkResourcePropertiesPtrOutput) ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(ctx context.Context) SharedPrivateLinkResourcePropertiesPtrOutput {
	return o
}

func (o SharedPrivateLinkResourcePropertiesPtrOutput) Elem() SharedPrivateLinkResourcePropertiesOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourceProperties) SharedPrivateLinkResourceProperties {
		if v != nil {
			return *v
		}
		var ret SharedPrivateLinkResourceProperties
		return ret
	}).(SharedPrivateLinkResourcePropertiesOutput)
}

// The group id from the provider of resource the shared private link resource is for.
func (o SharedPrivateLinkResourcePropertiesPtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.StringPtrOutput)
}

// The resource id of the resource the shared private link resource is for.
func (o SharedPrivateLinkResourcePropertiesPtrOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkResourceId
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the shared private link resource. Can be Updating, Deleting, Failed, Succeeded, Incomplete or other yet to be documented value.
func (o SharedPrivateLinkResourcePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The request message for requesting approval of the shared private link resource.
func (o SharedPrivateLinkResourcePropertiesPtrOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.RequestMessage
	}).(pulumi.StringPtrOutput)
}

// Optional. Can be used to specify the Azure Resource Manager location of the resource to which a shared private link is to be created. This is only required for those resources whose DNS configuration are regional (such as Azure Kubernetes Service).
func (o SharedPrivateLinkResourcePropertiesPtrOutput) ResourceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceRegion
	}).(pulumi.StringPtrOutput)
}

// Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected or other yet to be documented value.
func (o SharedPrivateLinkResourcePropertiesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Describes the properties of an existing Shared Private Link Resource managed by the Azure Cognitive Search service.
type SharedPrivateLinkResourcePropertiesResponse struct {
	// The group id from the provider of resource the shared private link resource is for.
	GroupId *string `pulumi:"groupId"`
	// The resource id of the resource the shared private link resource is for.
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// The provisioning state of the shared private link resource. Can be Updating, Deleting, Failed, Succeeded, Incomplete or other yet to be documented value.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The request message for requesting approval of the shared private link resource.
	RequestMessage *string `pulumi:"requestMessage"`
	// Optional. Can be used to specify the Azure Resource Manager location of the resource to which a shared private link is to be created. This is only required for those resources whose DNS configuration are regional (such as Azure Kubernetes Service).
	ResourceRegion *string `pulumi:"resourceRegion"`
	// Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected or other yet to be documented value.
	Status *string `pulumi:"status"`
}

// Describes the properties of an existing Shared Private Link Resource managed by the Azure Cognitive Search service.
type SharedPrivateLinkResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResourcePropertiesResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourcePropertiesResponseOutput) ToSharedPrivateLinkResourcePropertiesResponseOutput() SharedPrivateLinkResourcePropertiesResponseOutput {
	return o
}

func (o SharedPrivateLinkResourcePropertiesResponseOutput) ToSharedPrivateLinkResourcePropertiesResponseOutputWithContext(ctx context.Context) SharedPrivateLinkResourcePropertiesResponseOutput {
	return o
}

// The group id from the provider of resource the shared private link resource is for.
func (o SharedPrivateLinkResourcePropertiesResponseOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourcePropertiesResponse) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The resource id of the resource the shared private link resource is for.
func (o SharedPrivateLinkResourcePropertiesResponseOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourcePropertiesResponse) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// The provisioning state of the shared private link resource. Can be Updating, Deleting, Failed, Succeeded, Incomplete or other yet to be documented value.
func (o SharedPrivateLinkResourcePropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourcePropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The request message for requesting approval of the shared private link resource.
func (o SharedPrivateLinkResourcePropertiesResponseOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourcePropertiesResponse) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// Optional. Can be used to specify the Azure Resource Manager location of the resource to which a shared private link is to be created. This is only required for those resources whose DNS configuration are regional (such as Azure Kubernetes Service).
func (o SharedPrivateLinkResourcePropertiesResponseOutput) ResourceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourcePropertiesResponse) *string { return v.ResourceRegion }).(pulumi.StringPtrOutput)
}

// Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected or other yet to be documented value.
func (o SharedPrivateLinkResourcePropertiesResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourcePropertiesResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SharedPrivateLinkResourcePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourcePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedPrivateLinkResourcePropertiesResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourcePropertiesResponsePtrOutput) ToSharedPrivateLinkResourcePropertiesResponsePtrOutput() SharedPrivateLinkResourcePropertiesResponsePtrOutput {
	return o
}

func (o SharedPrivateLinkResourcePropertiesResponsePtrOutput) ToSharedPrivateLinkResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) SharedPrivateLinkResourcePropertiesResponsePtrOutput {
	return o
}

func (o SharedPrivateLinkResourcePropertiesResponsePtrOutput) Elem() SharedPrivateLinkResourcePropertiesResponseOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourcePropertiesResponse) SharedPrivateLinkResourcePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret SharedPrivateLinkResourcePropertiesResponse
		return ret
	}).(SharedPrivateLinkResourcePropertiesResponseOutput)
}

// The group id from the provider of resource the shared private link resource is for.
func (o SharedPrivateLinkResourcePropertiesResponsePtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.StringPtrOutput)
}

// The resource id of the resource the shared private link resource is for.
func (o SharedPrivateLinkResourcePropertiesResponsePtrOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkResourceId
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the shared private link resource. Can be Updating, Deleting, Failed, Succeeded, Incomplete or other yet to be documented value.
func (o SharedPrivateLinkResourcePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The request message for requesting approval of the shared private link resource.
func (o SharedPrivateLinkResourcePropertiesResponsePtrOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RequestMessage
	}).(pulumi.StringPtrOutput)
}

// Optional. Can be used to specify the Azure Resource Manager location of the resource to which a shared private link is to be created. This is only required for those resources whose DNS configuration are regional (such as Azure Kubernetes Service).
func (o SharedPrivateLinkResourcePropertiesResponsePtrOutput) ResourceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceRegion
	}).(pulumi.StringPtrOutput)
}

// Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected or other yet to be documented value.
func (o SharedPrivateLinkResourcePropertiesResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Describes a Shared Private Link Resource managed by the Azure Cognitive Search service.
type SharedPrivateLinkResourceResponse struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Describes the properties of a Shared Private Link Resource managed by the Azure Cognitive Search service.
	Properties *SharedPrivateLinkResourcePropertiesResponse `pulumi:"properties"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Describes a Shared Private Link Resource managed by the Azure Cognitive Search service.
type SharedPrivateLinkResourceResponseOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourceResponseOutput) ToSharedPrivateLinkResourceResponseOutput() SharedPrivateLinkResourceResponseOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseOutput) ToSharedPrivateLinkResourceResponseOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseOutput {
	return o
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o SharedPrivateLinkResourceResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o SharedPrivateLinkResourceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Describes the properties of a Shared Private Link Resource managed by the Azure Cognitive Search service.
func (o SharedPrivateLinkResourceResponseOutput) Properties() SharedPrivateLinkResourcePropertiesResponsePtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *SharedPrivateLinkResourcePropertiesResponse {
		return v.Properties
	}).(SharedPrivateLinkResourcePropertiesResponsePtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o SharedPrivateLinkResourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

type SharedPrivateLinkResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourceResponseArrayOutput) ToSharedPrivateLinkResourceResponseArrayOutput() SharedPrivateLinkResourceResponseArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseArrayOutput) ToSharedPrivateLinkResourceResponseArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseArrayOutput) Index(i pulumi.IntInput) SharedPrivateLinkResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedPrivateLinkResourceResponse {
		return vs[0].([]SharedPrivateLinkResourceResponse)[vs[1].(int)]
	}).(SharedPrivateLinkResourceResponseOutput)
}

// Defines the SKU of an Azure Cognitive Search Service, which determines price tier and capacity limits.
type Sku struct {
	// The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'
	Name *string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Defines the SKU of an Azure Cognitive Search Service, which determines price tier and capacity limits.
type SkuArgs struct {
	// The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// Defines the SKU of an Azure Cognitive Search Service, which determines price tier and capacity limits.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Defines the SKU of an Azure Cognitive Search Service, which determines price tier and capacity limits.
type SkuResponse struct {
	// The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'
	Name *string `pulumi:"name"`
}

// Defines the SKU of an Azure Cognitive Search Service, which determines price tier and capacity limits.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The details of the user assigned managed identity assigned to the search service.
type UserAssignedManagedIdentityResponse struct {
	// The client ID of user assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of user assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// The details of the user assigned managed identity assigned to the search service.
type UserAssignedManagedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedManagedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedManagedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedManagedIdentityResponseOutput) ToUserAssignedManagedIdentityResponseOutput() UserAssignedManagedIdentityResponseOutput {
	return o
}

func (o UserAssignedManagedIdentityResponseOutput) ToUserAssignedManagedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedManagedIdentityResponseOutput {
	return o
}

// The client ID of user assigned identity.
func (o UserAssignedManagedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of user assigned identity.
func (o UserAssignedManagedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedManagedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedManagedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedManagedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedManagedIdentityResponseMapOutput) ToUserAssignedManagedIdentityResponseMapOutput() UserAssignedManagedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedManagedIdentityResponseMapOutput) ToUserAssignedManagedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedManagedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedManagedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedManagedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedManagedIdentityResponse {
		return vs[0].(map[string]UserAssignedManagedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedManagedIdentityResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(DataPlaneAadOrApiKeyAuthOptionOutput{})
	pulumi.RegisterOutputType(DataPlaneAadOrApiKeyAuthOptionPtrOutput{})
	pulumi.RegisterOutputType(DataPlaneAadOrApiKeyAuthOptionResponseOutput{})
	pulumi.RegisterOutputType(DataPlaneAadOrApiKeyAuthOptionResponsePtrOutput{})
	pulumi.RegisterOutputType(DataPlaneAuthOptionsOutput{})
	pulumi.RegisterOutputType(DataPlaneAuthOptionsPtrOutput{})
	pulumi.RegisterOutputType(DataPlaneAuthOptionsResponseOutput{})
	pulumi.RegisterOutputType(DataPlaneAuthOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionWithCmkOutput{})
	pulumi.RegisterOutputType(EncryptionWithCmkPtrOutput{})
	pulumi.RegisterOutputType(EncryptionWithCmkResponseOutput{})
	pulumi.RegisterOutputType(EncryptionWithCmkResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(IpRuleOutput{})
	pulumi.RegisterOutputType(IpRuleArrayOutput{})
	pulumi.RegisterOutputType(IpRuleResponseOutput{})
	pulumi.RegisterOutputType(IpRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetPtrOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetResponseOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesPrivateEndpointOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesPrivateEndpointPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesResponsePrivateEndpointOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesResponsePrivateEndpointPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(QueryKeyResponseOutput{})
	pulumi.RegisterOutputType(QueryKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourcePropertiesOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourcePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceResponseOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedManagedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedManagedIdentityResponseMapOutput{})
}
