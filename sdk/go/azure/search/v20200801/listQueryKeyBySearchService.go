// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200801

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Response containing the query API keys for a given Azure Cognitive Search service.
func ListQueryKeyBySearchService(ctx *pulumi.Context, args *ListQueryKeyBySearchServiceArgs, opts ...pulumi.InvokeOption) (*ListQueryKeyBySearchServiceResult, error) {
	var rv ListQueryKeyBySearchServiceResult
	err := ctx.Invoke("azure-native:search/v20200801:listQueryKeyBySearchService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListQueryKeyBySearchServiceArgs struct {
	// The name of the resource group within the current subscription. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Azure Cognitive Search service associated with the specified resource group.
	SearchServiceName string `pulumi:"searchServiceName"`
}

// Response containing the query API keys for a given Azure Cognitive Search service.
type ListQueryKeyBySearchServiceResult struct {
	// Request URL that can be used to query next page of query keys. Returned when the total number of requested query keys exceed maximum page size.
	NextLink string `pulumi:"nextLink"`
	// The query keys for the Azure Cognitive Search service.
	Value []QueryKeyResponse `pulumi:"value"`
}

func ListQueryKeyBySearchServiceOutput(ctx *pulumi.Context, args ListQueryKeyBySearchServiceOutputArgs, opts ...pulumi.InvokeOption) ListQueryKeyBySearchServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListQueryKeyBySearchServiceResult, error) {
			args := v.(ListQueryKeyBySearchServiceArgs)
			r, err := ListQueryKeyBySearchService(ctx, &args, opts...)
			var s ListQueryKeyBySearchServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListQueryKeyBySearchServiceResultOutput)
}

type ListQueryKeyBySearchServiceOutputArgs struct {
	// The name of the resource group within the current subscription. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the Azure Cognitive Search service associated with the specified resource group.
	SearchServiceName pulumi.StringInput `pulumi:"searchServiceName"`
}

func (ListQueryKeyBySearchServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListQueryKeyBySearchServiceArgs)(nil)).Elem()
}

// Response containing the query API keys for a given Azure Cognitive Search service.
type ListQueryKeyBySearchServiceResultOutput struct{ *pulumi.OutputState }

func (ListQueryKeyBySearchServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListQueryKeyBySearchServiceResult)(nil)).Elem()
}

func (o ListQueryKeyBySearchServiceResultOutput) ToListQueryKeyBySearchServiceResultOutput() ListQueryKeyBySearchServiceResultOutput {
	return o
}

func (o ListQueryKeyBySearchServiceResultOutput) ToListQueryKeyBySearchServiceResultOutputWithContext(ctx context.Context) ListQueryKeyBySearchServiceResultOutput {
	return o
}

// Request URL that can be used to query next page of query keys. Returned when the total number of requested query keys exceed maximum page size.
func (o ListQueryKeyBySearchServiceResultOutput) NextLink() pulumi.StringOutput {
	return o.ApplyT(func(v ListQueryKeyBySearchServiceResult) string { return v.NextLink }).(pulumi.StringOutput)
}

// The query keys for the Azure Cognitive Search service.
func (o ListQueryKeyBySearchServiceResultOutput) Value() QueryKeyResponseArrayOutput {
	return o.ApplyT(func(v ListQueryKeyBySearchServiceResult) []QueryKeyResponse { return v.Value }).(QueryKeyResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListQueryKeyBySearchServiceResultOutput{})
}
