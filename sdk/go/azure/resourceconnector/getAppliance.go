// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package resourceconnector

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Appliances definition.
// API Version: 2021-10-31-preview.
func LookupAppliance(ctx *pulumi.Context, args *LookupApplianceArgs, opts ...pulumi.InvokeOption) (*LookupApplianceResult, error) {
	var rv LookupApplianceResult
	err := ctx.Invoke("azure-native:resourceconnector:getAppliance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupApplianceArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Appliances name.
	ResourceName string `pulumi:"resourceName"`
}

// Appliances definition.
type LookupApplianceResult struct {
	// Represents a supported Fabric/Infra. (AKSEdge etc...).
	Distro *string `pulumi:"distro"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// Identity for the resource.
	Identity *IdentityResponse `pulumi:"identity"`
	// Contains infrastructure information about the Appliance
	InfrastructureConfig *AppliancePropertiesResponseInfrastructureConfig `pulumi:"infrastructureConfig"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// Certificates pair used to download MSI certificate from HIS
	PublicKey *string `pulumi:"publicKey"`
	// Applianceâ€™s health and state of connection to on-prem
	Status string `pulumi:"status"`
	// Metadata pertaining to creation and last modification of the resource
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Version of the Appliance
	Version string `pulumi:"version"`
}

// Defaults sets the appropriate defaults for LookupApplianceResult
func (val *LookupApplianceResult) Defaults() *LookupApplianceResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Distro) {
		distro_ := "AKSEdge"
		tmp.Distro = &distro_
	}
	return &tmp
}
