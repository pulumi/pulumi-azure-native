// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20170501

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.
type PoolAllocationMode string

const (
	PoolAllocationModeBatchService     = PoolAllocationMode("BatchService")
	PoolAllocationModeUserSubscription = PoolAllocationMode("UserSubscription")
)

func (PoolAllocationMode) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolAllocationMode)(nil)).Elem()
}

func (e PoolAllocationMode) ToPoolAllocationModeOutput() PoolAllocationModeOutput {
	return pulumi.ToOutput(e).(PoolAllocationModeOutput)
}

func (e PoolAllocationMode) ToPoolAllocationModeOutputWithContext(ctx context.Context) PoolAllocationModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PoolAllocationModeOutput)
}

func (e PoolAllocationMode) ToPoolAllocationModePtrOutput() PoolAllocationModePtrOutput {
	return e.ToPoolAllocationModePtrOutputWithContext(context.Background())
}

func (e PoolAllocationMode) ToPoolAllocationModePtrOutputWithContext(ctx context.Context) PoolAllocationModePtrOutput {
	return PoolAllocationMode(e).ToPoolAllocationModeOutputWithContext(ctx).ToPoolAllocationModePtrOutputWithContext(ctx)
}

func (e PoolAllocationMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PoolAllocationMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PoolAllocationMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PoolAllocationMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PoolAllocationModeOutput struct{ *pulumi.OutputState }

func (PoolAllocationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolAllocationMode)(nil)).Elem()
}

func (o PoolAllocationModeOutput) ToPoolAllocationModeOutput() PoolAllocationModeOutput {
	return o
}

func (o PoolAllocationModeOutput) ToPoolAllocationModeOutputWithContext(ctx context.Context) PoolAllocationModeOutput {
	return o
}

func (o PoolAllocationModeOutput) ToPoolAllocationModePtrOutput() PoolAllocationModePtrOutput {
	return o.ToPoolAllocationModePtrOutputWithContext(context.Background())
}

func (o PoolAllocationModeOutput) ToPoolAllocationModePtrOutputWithContext(ctx context.Context) PoolAllocationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolAllocationMode) *PoolAllocationMode {
		return &v
	}).(PoolAllocationModePtrOutput)
}

func (o PoolAllocationModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PoolAllocationModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PoolAllocationMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PoolAllocationModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PoolAllocationModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PoolAllocationMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PoolAllocationModePtrOutput struct{ *pulumi.OutputState }

func (PoolAllocationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolAllocationMode)(nil)).Elem()
}

func (o PoolAllocationModePtrOutput) ToPoolAllocationModePtrOutput() PoolAllocationModePtrOutput {
	return o
}

func (o PoolAllocationModePtrOutput) ToPoolAllocationModePtrOutputWithContext(ctx context.Context) PoolAllocationModePtrOutput {
	return o
}

func (o PoolAllocationModePtrOutput) Elem() PoolAllocationModeOutput {
	return o.ApplyT(func(v *PoolAllocationMode) PoolAllocationMode {
		if v != nil {
			return *v
		}
		var ret PoolAllocationMode
		return ret
	}).(PoolAllocationModeOutput)
}

func (o PoolAllocationModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PoolAllocationModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PoolAllocationMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PoolAllocationModeInput is an input type that accepts PoolAllocationModeArgs and PoolAllocationModeOutput values.
// You can construct a concrete instance of `PoolAllocationModeInput` via:
//
//	PoolAllocationModeArgs{...}
type PoolAllocationModeInput interface {
	pulumi.Input

	ToPoolAllocationModeOutput() PoolAllocationModeOutput
	ToPoolAllocationModeOutputWithContext(context.Context) PoolAllocationModeOutput
}

var poolAllocationModePtrType = reflect.TypeOf((**PoolAllocationMode)(nil)).Elem()

type PoolAllocationModePtrInput interface {
	pulumi.Input

	ToPoolAllocationModePtrOutput() PoolAllocationModePtrOutput
	ToPoolAllocationModePtrOutputWithContext(context.Context) PoolAllocationModePtrOutput
}

type poolAllocationModePtr string

func PoolAllocationModePtr(v string) PoolAllocationModePtrInput {
	return (*poolAllocationModePtr)(&v)
}

func (*poolAllocationModePtr) ElementType() reflect.Type {
	return poolAllocationModePtrType
}

func (in *poolAllocationModePtr) ToPoolAllocationModePtrOutput() PoolAllocationModePtrOutput {
	return pulumi.ToOutput(in).(PoolAllocationModePtrOutput)
}

func (in *poolAllocationModePtr) ToPoolAllocationModePtrOutputWithContext(ctx context.Context) PoolAllocationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PoolAllocationModePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PoolAllocationModeOutput{})
	pulumi.RegisterOutputType(PoolAllocationModePtrOutput{})
}
