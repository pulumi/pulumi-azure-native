// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170901

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupCertificate(ctx *pulumi.Context, args *LookupCertificateArgs, opts ...pulumi.InvokeOption) (*LookupCertificateResult, error) {
	var rv LookupCertificateResult
	err := ctx.Invoke("azure-nextgen:batch/v20170901:getCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCertificateArgs struct {
	// The name of the Batch account.
	AccountName string `pulumi:"accountName"`
	// The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match the certificate data in the request. For example SHA1-a3d1c5.
	CertificateName string `pulumi:"certificateName"`
	// The name of the resource group that contains the Batch account.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Contains information about a certificate.
type LookupCertificateResult struct {
	// This is only returned when the certificate provisioningState is 'Failed'.
	DeleteCertificateError DeleteCertificateErrorResponse `pulumi:"deleteCertificateError"`
	// The ETag of the resource, used for concurrency statements.
	Etag string `pulumi:"etag"`
	// The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.
	Format *string `pulumi:"format"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The previous provisioned state of the resource
	PreviousProvisioningState               string `pulumi:"previousProvisioningState"`
	PreviousProvisioningStateTransitionTime string `pulumi:"previousProvisioningStateTransitionTime"`
	// Values are:
	//
	//  Succeeded - The certificate is available for use in pools.
	//  Deleting - The user has requested that the certificate be deleted, but the delete operation has not yet completed. You may not reference the certificate when creating or updating pools.
	//  Failed - The user requested that the certificate be deleted, but there are pools that still have references to the certificate, or it is still installed on one or more compute nodes. (The latter can occur if the certificate has been removed from the pool, but the node has not yet restarted. Nodes refresh their certificates only when they restart.) You may use the cancel certificate delete operation to cancel the delete, or the delete certificate operation to retry the delete.
	ProvisioningState               string `pulumi:"provisioningState"`
	ProvisioningStateTransitionTime string `pulumi:"provisioningStateTransitionTime"`
	// The public key of the certificate.
	PublicData string `pulumi:"publicData"`
	// This must match the thumbprint from the name.
	Thumbprint *string `pulumi:"thumbprint"`
	// This must match the first portion of the certificate name. Currently required to be 'SHA1'.
	ThumbprintAlgorithm *string `pulumi:"thumbprintAlgorithm"`
	// The type of the resource.
	Type string `pulumi:"type"`
}
