// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210501preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provisioning token properties. A provisioning token allows for a single instance of Azure Video analyzer IoT edge module to be initialized and authorized to the cloud account. The provisioning token itself is short lived and it is only used for the initial handshake between IoT edge module and the cloud. After the initial handshake, the IoT edge module will agree on a set of authentication keys which will be auto-rotated as long as the module is able to periodically connect to the cloud. A new provisioning token can be generated for the same IoT edge module in case the module state lost or reset.
func ListEdgeModuleProvisioningToken(ctx *pulumi.Context, args *ListEdgeModuleProvisioningTokenArgs, opts ...pulumi.InvokeOption) (*ListEdgeModuleProvisioningTokenResult, error) {
	var rv ListEdgeModuleProvisioningTokenResult
	err := ctx.Invoke("azure-native:videoanalyzer/v20210501preview:listEdgeModuleProvisioningToken", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListEdgeModuleProvisioningTokenArgs struct {
	// The Azure Video Analyzer account name.
	AccountName string `pulumi:"accountName"`
	// The name of the edge module used to create a new provisioning token.
	EdgeModuleName string `pulumi:"edgeModuleName"`
	// The desired expiration date of the registration token. The Azure Video Analyzer IoT edge module must be initialized and connected to the Internet prior to the token expiration date.
	ExpirationDate string `pulumi:"expirationDate"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Provisioning token properties. A provisioning token allows for a single instance of Azure Video analyzer IoT edge module to be initialized and authorized to the cloud account. The provisioning token itself is short lived and it is only used for the initial handshake between IoT edge module and the cloud. After the initial handshake, the IoT edge module will agree on a set of authentication keys which will be auto-rotated as long as the module is able to periodically connect to the cloud. A new provisioning token can be generated for the same IoT edge module in case the module state lost or reset.
type ListEdgeModuleProvisioningTokenResult struct {
	// The expiration date of the registration token. The Azure Video Analyzer IoT edge module must be initialized and connected to the Internet prior to the token expiration date.
	ExpirationDate string `pulumi:"expirationDate"`
	// The token blob to be provided to the Azure Video Analyzer IoT edge module through the Azure IoT Edge module twin properties.
	Token string `pulumi:"token"`
}

func ListEdgeModuleProvisioningTokenOutput(ctx *pulumi.Context, args ListEdgeModuleProvisioningTokenOutputArgs, opts ...pulumi.InvokeOption) ListEdgeModuleProvisioningTokenResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListEdgeModuleProvisioningTokenResult, error) {
			args := v.(ListEdgeModuleProvisioningTokenArgs)
			r, err := ListEdgeModuleProvisioningToken(ctx, &args, opts...)
			var s ListEdgeModuleProvisioningTokenResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListEdgeModuleProvisioningTokenResultOutput)
}

type ListEdgeModuleProvisioningTokenOutputArgs struct {
	// The Azure Video Analyzer account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the edge module used to create a new provisioning token.
	EdgeModuleName pulumi.StringInput `pulumi:"edgeModuleName"`
	// The desired expiration date of the registration token. The Azure Video Analyzer IoT edge module must be initialized and connected to the Internet prior to the token expiration date.
	ExpirationDate pulumi.StringInput `pulumi:"expirationDate"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (ListEdgeModuleProvisioningTokenOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListEdgeModuleProvisioningTokenArgs)(nil)).Elem()
}

// Provisioning token properties. A provisioning token allows for a single instance of Azure Video analyzer IoT edge module to be initialized and authorized to the cloud account. The provisioning token itself is short lived and it is only used for the initial handshake between IoT edge module and the cloud. After the initial handshake, the IoT edge module will agree on a set of authentication keys which will be auto-rotated as long as the module is able to periodically connect to the cloud. A new provisioning token can be generated for the same IoT edge module in case the module state lost or reset.
type ListEdgeModuleProvisioningTokenResultOutput struct{ *pulumi.OutputState }

func (ListEdgeModuleProvisioningTokenResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListEdgeModuleProvisioningTokenResult)(nil)).Elem()
}

func (o ListEdgeModuleProvisioningTokenResultOutput) ToListEdgeModuleProvisioningTokenResultOutput() ListEdgeModuleProvisioningTokenResultOutput {
	return o
}

func (o ListEdgeModuleProvisioningTokenResultOutput) ToListEdgeModuleProvisioningTokenResultOutputWithContext(ctx context.Context) ListEdgeModuleProvisioningTokenResultOutput {
	return o
}

// The expiration date of the registration token. The Azure Video Analyzer IoT edge module must be initialized and connected to the Internet prior to the token expiration date.
func (o ListEdgeModuleProvisioningTokenResultOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v ListEdgeModuleProvisioningTokenResult) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

// The token blob to be provided to the Azure Video Analyzer IoT edge module through the Azure IoT Edge module twin properties.
func (o ListEdgeModuleProvisioningTokenResultOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v ListEdgeModuleProvisioningTokenResult) string { return v.Token }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ListEdgeModuleProvisioningTokenResultOutput{})
}
