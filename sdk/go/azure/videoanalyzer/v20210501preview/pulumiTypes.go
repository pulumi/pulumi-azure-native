// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210501preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccountEncryption struct {
	Identity           *ResourceIdentity   `pulumi:"identity"`
	KeyVaultProperties *KeyVaultProperties `pulumi:"keyVaultProperties"`
	Type               string              `pulumi:"type"`
}

// AccountEncryptionInput is an input type that accepts AccountEncryptionArgs and AccountEncryptionOutput values.
// You can construct a concrete instance of `AccountEncryptionInput` via:
//
//          AccountEncryptionArgs{...}
type AccountEncryptionInput interface {
	pulumi.Input

	ToAccountEncryptionOutput() AccountEncryptionOutput
	ToAccountEncryptionOutputWithContext(context.Context) AccountEncryptionOutput
}

type AccountEncryptionArgs struct {
	Identity           ResourceIdentityPtrInput   `pulumi:"identity"`
	KeyVaultProperties KeyVaultPropertiesPtrInput `pulumi:"keyVaultProperties"`
	Type               pulumi.StringInput         `pulumi:"type"`
}

func (AccountEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountEncryption)(nil)).Elem()
}

func (i AccountEncryptionArgs) ToAccountEncryptionOutput() AccountEncryptionOutput {
	return i.ToAccountEncryptionOutputWithContext(context.Background())
}

func (i AccountEncryptionArgs) ToAccountEncryptionOutputWithContext(ctx context.Context) AccountEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountEncryptionOutput)
}

func (i AccountEncryptionArgs) ToAccountEncryptionPtrOutput() AccountEncryptionPtrOutput {
	return i.ToAccountEncryptionPtrOutputWithContext(context.Background())
}

func (i AccountEncryptionArgs) ToAccountEncryptionPtrOutputWithContext(ctx context.Context) AccountEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountEncryptionOutput).ToAccountEncryptionPtrOutputWithContext(ctx)
}

// AccountEncryptionPtrInput is an input type that accepts AccountEncryptionArgs, AccountEncryptionPtr and AccountEncryptionPtrOutput values.
// You can construct a concrete instance of `AccountEncryptionPtrInput` via:
//
//          AccountEncryptionArgs{...}
//
//  or:
//
//          nil
type AccountEncryptionPtrInput interface {
	pulumi.Input

	ToAccountEncryptionPtrOutput() AccountEncryptionPtrOutput
	ToAccountEncryptionPtrOutputWithContext(context.Context) AccountEncryptionPtrOutput
}

type accountEncryptionPtrType AccountEncryptionArgs

func AccountEncryptionPtr(v *AccountEncryptionArgs) AccountEncryptionPtrInput {
	return (*accountEncryptionPtrType)(v)
}

func (*accountEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountEncryption)(nil)).Elem()
}

func (i *accountEncryptionPtrType) ToAccountEncryptionPtrOutput() AccountEncryptionPtrOutput {
	return i.ToAccountEncryptionPtrOutputWithContext(context.Background())
}

func (i *accountEncryptionPtrType) ToAccountEncryptionPtrOutputWithContext(ctx context.Context) AccountEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountEncryptionPtrOutput)
}

type AccountEncryptionOutput struct{ *pulumi.OutputState }

func (AccountEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountEncryption)(nil)).Elem()
}

func (o AccountEncryptionOutput) ToAccountEncryptionOutput() AccountEncryptionOutput {
	return o
}

func (o AccountEncryptionOutput) ToAccountEncryptionOutputWithContext(ctx context.Context) AccountEncryptionOutput {
	return o
}

func (o AccountEncryptionOutput) ToAccountEncryptionPtrOutput() AccountEncryptionPtrOutput {
	return o.ToAccountEncryptionPtrOutputWithContext(context.Background())
}

func (o AccountEncryptionOutput) ToAccountEncryptionPtrOutputWithContext(ctx context.Context) AccountEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountEncryption) *AccountEncryption {
		return &v
	}).(AccountEncryptionPtrOutput)
}

func (o AccountEncryptionOutput) Identity() ResourceIdentityPtrOutput {
	return o.ApplyT(func(v AccountEncryption) *ResourceIdentity { return v.Identity }).(ResourceIdentityPtrOutput)
}

func (o AccountEncryptionOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v AccountEncryption) *KeyVaultProperties { return v.KeyVaultProperties }).(KeyVaultPropertiesPtrOutput)
}

func (o AccountEncryptionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccountEncryption) string { return v.Type }).(pulumi.StringOutput)
}

type AccountEncryptionPtrOutput struct{ *pulumi.OutputState }

func (AccountEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountEncryption)(nil)).Elem()
}

func (o AccountEncryptionPtrOutput) ToAccountEncryptionPtrOutput() AccountEncryptionPtrOutput {
	return o
}

func (o AccountEncryptionPtrOutput) ToAccountEncryptionPtrOutputWithContext(ctx context.Context) AccountEncryptionPtrOutput {
	return o
}

func (o AccountEncryptionPtrOutput) Elem() AccountEncryptionOutput {
	return o.ApplyT(func(v *AccountEncryption) AccountEncryption {
		if v != nil {
			return *v
		}
		var ret AccountEncryption
		return ret
	}).(AccountEncryptionOutput)
}

func (o AccountEncryptionPtrOutput) Identity() ResourceIdentityPtrOutput {
	return o.ApplyT(func(v *AccountEncryption) *ResourceIdentity {
		if v == nil {
			return nil
		}
		return v.Identity
	}).(ResourceIdentityPtrOutput)
}

func (o AccountEncryptionPtrOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v *AccountEncryption) *KeyVaultProperties {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(KeyVaultPropertiesPtrOutput)
}

func (o AccountEncryptionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountEncryption) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AccountEncryptionResponse struct {
	Identity           *ResourceIdentityResponse   `pulumi:"identity"`
	KeyVaultProperties *KeyVaultPropertiesResponse `pulumi:"keyVaultProperties"`
	Status             string                      `pulumi:"status"`
	Type               string                      `pulumi:"type"`
}

// AccountEncryptionResponseInput is an input type that accepts AccountEncryptionResponseArgs and AccountEncryptionResponseOutput values.
// You can construct a concrete instance of `AccountEncryptionResponseInput` via:
//
//          AccountEncryptionResponseArgs{...}
type AccountEncryptionResponseInput interface {
	pulumi.Input

	ToAccountEncryptionResponseOutput() AccountEncryptionResponseOutput
	ToAccountEncryptionResponseOutputWithContext(context.Context) AccountEncryptionResponseOutput
}

type AccountEncryptionResponseArgs struct {
	Identity           ResourceIdentityResponsePtrInput   `pulumi:"identity"`
	KeyVaultProperties KeyVaultPropertiesResponsePtrInput `pulumi:"keyVaultProperties"`
	Status             pulumi.StringInput                 `pulumi:"status"`
	Type               pulumi.StringInput                 `pulumi:"type"`
}

func (AccountEncryptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountEncryptionResponse)(nil)).Elem()
}

func (i AccountEncryptionResponseArgs) ToAccountEncryptionResponseOutput() AccountEncryptionResponseOutput {
	return i.ToAccountEncryptionResponseOutputWithContext(context.Background())
}

func (i AccountEncryptionResponseArgs) ToAccountEncryptionResponseOutputWithContext(ctx context.Context) AccountEncryptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountEncryptionResponseOutput)
}

func (i AccountEncryptionResponseArgs) ToAccountEncryptionResponsePtrOutput() AccountEncryptionResponsePtrOutput {
	return i.ToAccountEncryptionResponsePtrOutputWithContext(context.Background())
}

func (i AccountEncryptionResponseArgs) ToAccountEncryptionResponsePtrOutputWithContext(ctx context.Context) AccountEncryptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountEncryptionResponseOutput).ToAccountEncryptionResponsePtrOutputWithContext(ctx)
}

// AccountEncryptionResponsePtrInput is an input type that accepts AccountEncryptionResponseArgs, AccountEncryptionResponsePtr and AccountEncryptionResponsePtrOutput values.
// You can construct a concrete instance of `AccountEncryptionResponsePtrInput` via:
//
//          AccountEncryptionResponseArgs{...}
//
//  or:
//
//          nil
type AccountEncryptionResponsePtrInput interface {
	pulumi.Input

	ToAccountEncryptionResponsePtrOutput() AccountEncryptionResponsePtrOutput
	ToAccountEncryptionResponsePtrOutputWithContext(context.Context) AccountEncryptionResponsePtrOutput
}

type accountEncryptionResponsePtrType AccountEncryptionResponseArgs

func AccountEncryptionResponsePtr(v *AccountEncryptionResponseArgs) AccountEncryptionResponsePtrInput {
	return (*accountEncryptionResponsePtrType)(v)
}

func (*accountEncryptionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountEncryptionResponse)(nil)).Elem()
}

func (i *accountEncryptionResponsePtrType) ToAccountEncryptionResponsePtrOutput() AccountEncryptionResponsePtrOutput {
	return i.ToAccountEncryptionResponsePtrOutputWithContext(context.Background())
}

func (i *accountEncryptionResponsePtrType) ToAccountEncryptionResponsePtrOutputWithContext(ctx context.Context) AccountEncryptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountEncryptionResponsePtrOutput)
}

type AccountEncryptionResponseOutput struct{ *pulumi.OutputState }

func (AccountEncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountEncryptionResponse)(nil)).Elem()
}

func (o AccountEncryptionResponseOutput) ToAccountEncryptionResponseOutput() AccountEncryptionResponseOutput {
	return o
}

func (o AccountEncryptionResponseOutput) ToAccountEncryptionResponseOutputWithContext(ctx context.Context) AccountEncryptionResponseOutput {
	return o
}

func (o AccountEncryptionResponseOutput) ToAccountEncryptionResponsePtrOutput() AccountEncryptionResponsePtrOutput {
	return o.ToAccountEncryptionResponsePtrOutputWithContext(context.Background())
}

func (o AccountEncryptionResponseOutput) ToAccountEncryptionResponsePtrOutputWithContext(ctx context.Context) AccountEncryptionResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountEncryptionResponse) *AccountEncryptionResponse {
		return &v
	}).(AccountEncryptionResponsePtrOutput)
}

func (o AccountEncryptionResponseOutput) Identity() ResourceIdentityResponsePtrOutput {
	return o.ApplyT(func(v AccountEncryptionResponse) *ResourceIdentityResponse { return v.Identity }).(ResourceIdentityResponsePtrOutput)
}

func (o AccountEncryptionResponseOutput) KeyVaultProperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AccountEncryptionResponse) *KeyVaultPropertiesResponse { return v.KeyVaultProperties }).(KeyVaultPropertiesResponsePtrOutput)
}

func (o AccountEncryptionResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v AccountEncryptionResponse) string { return v.Status }).(pulumi.StringOutput)
}

func (o AccountEncryptionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccountEncryptionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type AccountEncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (AccountEncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountEncryptionResponse)(nil)).Elem()
}

func (o AccountEncryptionResponsePtrOutput) ToAccountEncryptionResponsePtrOutput() AccountEncryptionResponsePtrOutput {
	return o
}

func (o AccountEncryptionResponsePtrOutput) ToAccountEncryptionResponsePtrOutputWithContext(ctx context.Context) AccountEncryptionResponsePtrOutput {
	return o
}

func (o AccountEncryptionResponsePtrOutput) Elem() AccountEncryptionResponseOutput {
	return o.ApplyT(func(v *AccountEncryptionResponse) AccountEncryptionResponse {
		if v != nil {
			return *v
		}
		var ret AccountEncryptionResponse
		return ret
	}).(AccountEncryptionResponseOutput)
}

func (o AccountEncryptionResponsePtrOutput) Identity() ResourceIdentityResponsePtrOutput {
	return o.ApplyT(func(v *AccountEncryptionResponse) *ResourceIdentityResponse {
		if v == nil {
			return nil
		}
		return v.Identity
	}).(ResourceIdentityResponsePtrOutput)
}

func (o AccountEncryptionResponsePtrOutput) KeyVaultProperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *AccountEncryptionResponse) *KeyVaultPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(KeyVaultPropertiesResponsePtrOutput)
}

func (o AccountEncryptionResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

func (o AccountEncryptionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type EccTokenKey struct {
	Alg  string `pulumi:"alg"`
	Kid  string `pulumi:"kid"`
	Type string `pulumi:"type"`
	X    string `pulumi:"x"`
	Y    string `pulumi:"y"`
}

// EccTokenKeyInput is an input type that accepts EccTokenKeyArgs and EccTokenKeyOutput values.
// You can construct a concrete instance of `EccTokenKeyInput` via:
//
//          EccTokenKeyArgs{...}
type EccTokenKeyInput interface {
	pulumi.Input

	ToEccTokenKeyOutput() EccTokenKeyOutput
	ToEccTokenKeyOutputWithContext(context.Context) EccTokenKeyOutput
}

type EccTokenKeyArgs struct {
	Alg  pulumi.StringInput `pulumi:"alg"`
	Kid  pulumi.StringInput `pulumi:"kid"`
	Type pulumi.StringInput `pulumi:"type"`
	X    pulumi.StringInput `pulumi:"x"`
	Y    pulumi.StringInput `pulumi:"y"`
}

func (EccTokenKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EccTokenKey)(nil)).Elem()
}

func (i EccTokenKeyArgs) ToEccTokenKeyOutput() EccTokenKeyOutput {
	return i.ToEccTokenKeyOutputWithContext(context.Background())
}

func (i EccTokenKeyArgs) ToEccTokenKeyOutputWithContext(ctx context.Context) EccTokenKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EccTokenKeyOutput)
}

type EccTokenKeyOutput struct{ *pulumi.OutputState }

func (EccTokenKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EccTokenKey)(nil)).Elem()
}

func (o EccTokenKeyOutput) ToEccTokenKeyOutput() EccTokenKeyOutput {
	return o
}

func (o EccTokenKeyOutput) ToEccTokenKeyOutputWithContext(ctx context.Context) EccTokenKeyOutput {
	return o
}

func (o EccTokenKeyOutput) Alg() pulumi.StringOutput {
	return o.ApplyT(func(v EccTokenKey) string { return v.Alg }).(pulumi.StringOutput)
}

func (o EccTokenKeyOutput) Kid() pulumi.StringOutput {
	return o.ApplyT(func(v EccTokenKey) string { return v.Kid }).(pulumi.StringOutput)
}

func (o EccTokenKeyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EccTokenKey) string { return v.Type }).(pulumi.StringOutput)
}

func (o EccTokenKeyOutput) X() pulumi.StringOutput {
	return o.ApplyT(func(v EccTokenKey) string { return v.X }).(pulumi.StringOutput)
}

func (o EccTokenKeyOutput) Y() pulumi.StringOutput {
	return o.ApplyT(func(v EccTokenKey) string { return v.Y }).(pulumi.StringOutput)
}

type EccTokenKeyResponse struct {
	Alg  string `pulumi:"alg"`
	Kid  string `pulumi:"kid"`
	Type string `pulumi:"type"`
	X    string `pulumi:"x"`
	Y    string `pulumi:"y"`
}

// EccTokenKeyResponseInput is an input type that accepts EccTokenKeyResponseArgs and EccTokenKeyResponseOutput values.
// You can construct a concrete instance of `EccTokenKeyResponseInput` via:
//
//          EccTokenKeyResponseArgs{...}
type EccTokenKeyResponseInput interface {
	pulumi.Input

	ToEccTokenKeyResponseOutput() EccTokenKeyResponseOutput
	ToEccTokenKeyResponseOutputWithContext(context.Context) EccTokenKeyResponseOutput
}

type EccTokenKeyResponseArgs struct {
	Alg  pulumi.StringInput `pulumi:"alg"`
	Kid  pulumi.StringInput `pulumi:"kid"`
	Type pulumi.StringInput `pulumi:"type"`
	X    pulumi.StringInput `pulumi:"x"`
	Y    pulumi.StringInput `pulumi:"y"`
}

func (EccTokenKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EccTokenKeyResponse)(nil)).Elem()
}

func (i EccTokenKeyResponseArgs) ToEccTokenKeyResponseOutput() EccTokenKeyResponseOutput {
	return i.ToEccTokenKeyResponseOutputWithContext(context.Background())
}

func (i EccTokenKeyResponseArgs) ToEccTokenKeyResponseOutputWithContext(ctx context.Context) EccTokenKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EccTokenKeyResponseOutput)
}

type EccTokenKeyResponseOutput struct{ *pulumi.OutputState }

func (EccTokenKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EccTokenKeyResponse)(nil)).Elem()
}

func (o EccTokenKeyResponseOutput) ToEccTokenKeyResponseOutput() EccTokenKeyResponseOutput {
	return o
}

func (o EccTokenKeyResponseOutput) ToEccTokenKeyResponseOutputWithContext(ctx context.Context) EccTokenKeyResponseOutput {
	return o
}

func (o EccTokenKeyResponseOutput) Alg() pulumi.StringOutput {
	return o.ApplyT(func(v EccTokenKeyResponse) string { return v.Alg }).(pulumi.StringOutput)
}

func (o EccTokenKeyResponseOutput) Kid() pulumi.StringOutput {
	return o.ApplyT(func(v EccTokenKeyResponse) string { return v.Kid }).(pulumi.StringOutput)
}

func (o EccTokenKeyResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EccTokenKeyResponse) string { return v.Type }).(pulumi.StringOutput)
}

func (o EccTokenKeyResponseOutput) X() pulumi.StringOutput {
	return o.ApplyT(func(v EccTokenKeyResponse) string { return v.X }).(pulumi.StringOutput)
}

func (o EccTokenKeyResponseOutput) Y() pulumi.StringOutput {
	return o.ApplyT(func(v EccTokenKeyResponse) string { return v.Y }).(pulumi.StringOutput)
}

type EndpointResponse struct {
	EndpointUrl *string `pulumi:"endpointUrl"`
	Type        string  `pulumi:"type"`
}

// EndpointResponseInput is an input type that accepts EndpointResponseArgs and EndpointResponseOutput values.
// You can construct a concrete instance of `EndpointResponseInput` via:
//
//          EndpointResponseArgs{...}
type EndpointResponseInput interface {
	pulumi.Input

	ToEndpointResponseOutput() EndpointResponseOutput
	ToEndpointResponseOutputWithContext(context.Context) EndpointResponseOutput
}

type EndpointResponseArgs struct {
	EndpointUrl pulumi.StringPtrInput `pulumi:"endpointUrl"`
	Type        pulumi.StringInput    `pulumi:"type"`
}

func (EndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointResponse)(nil)).Elem()
}

func (i EndpointResponseArgs) ToEndpointResponseOutput() EndpointResponseOutput {
	return i.ToEndpointResponseOutputWithContext(context.Background())
}

func (i EndpointResponseArgs) ToEndpointResponseOutputWithContext(ctx context.Context) EndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointResponseOutput)
}

// EndpointResponseArrayInput is an input type that accepts EndpointResponseArray and EndpointResponseArrayOutput values.
// You can construct a concrete instance of `EndpointResponseArrayInput` via:
//
//          EndpointResponseArray{ EndpointResponseArgs{...} }
type EndpointResponseArrayInput interface {
	pulumi.Input

	ToEndpointResponseArrayOutput() EndpointResponseArrayOutput
	ToEndpointResponseArrayOutputWithContext(context.Context) EndpointResponseArrayOutput
}

type EndpointResponseArray []EndpointResponseInput

func (EndpointResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointResponse)(nil)).Elem()
}

func (i EndpointResponseArray) ToEndpointResponseArrayOutput() EndpointResponseArrayOutput {
	return i.ToEndpointResponseArrayOutputWithContext(context.Background())
}

func (i EndpointResponseArray) ToEndpointResponseArrayOutputWithContext(ctx context.Context) EndpointResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointResponseArrayOutput)
}

type EndpointResponseOutput struct{ *pulumi.OutputState }

func (EndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointResponse)(nil)).Elem()
}

func (o EndpointResponseOutput) ToEndpointResponseOutput() EndpointResponseOutput {
	return o
}

func (o EndpointResponseOutput) ToEndpointResponseOutputWithContext(ctx context.Context) EndpointResponseOutput {
	return o
}

func (o EndpointResponseOutput) EndpointUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.EndpointUrl }).(pulumi.StringPtrOutput)
}

func (o EndpointResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointResponse) string { return v.Type }).(pulumi.StringOutput)
}

type EndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (EndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointResponse)(nil)).Elem()
}

func (o EndpointResponseArrayOutput) ToEndpointResponseArrayOutput() EndpointResponseArrayOutput {
	return o
}

func (o EndpointResponseArrayOutput) ToEndpointResponseArrayOutputWithContext(ctx context.Context) EndpointResponseArrayOutput {
	return o
}

func (o EndpointResponseArrayOutput) Index(i pulumi.IntInput) EndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointResponse {
		return vs[0].([]EndpointResponse)[vs[1].(int)]
	}).(EndpointResponseOutput)
}

type JwtAuthentication struct {
	Audiences []string      `pulumi:"audiences"`
	Claims    []TokenClaim  `pulumi:"claims"`
	Issuers   []string      `pulumi:"issuers"`
	Keys      []interface{} `pulumi:"keys"`
	Type      string        `pulumi:"type"`
}

// JwtAuthenticationInput is an input type that accepts JwtAuthenticationArgs and JwtAuthenticationOutput values.
// You can construct a concrete instance of `JwtAuthenticationInput` via:
//
//          JwtAuthenticationArgs{...}
type JwtAuthenticationInput interface {
	pulumi.Input

	ToJwtAuthenticationOutput() JwtAuthenticationOutput
	ToJwtAuthenticationOutputWithContext(context.Context) JwtAuthenticationOutput
}

type JwtAuthenticationArgs struct {
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	Claims    TokenClaimArrayInput    `pulumi:"claims"`
	Issuers   pulumi.StringArrayInput `pulumi:"issuers"`
	Keys      pulumi.ArrayInput       `pulumi:"keys"`
	Type      pulumi.StringInput      `pulumi:"type"`
}

func (JwtAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JwtAuthentication)(nil)).Elem()
}

func (i JwtAuthenticationArgs) ToJwtAuthenticationOutput() JwtAuthenticationOutput {
	return i.ToJwtAuthenticationOutputWithContext(context.Background())
}

func (i JwtAuthenticationArgs) ToJwtAuthenticationOutputWithContext(ctx context.Context) JwtAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JwtAuthenticationOutput)
}

func (i JwtAuthenticationArgs) ToJwtAuthenticationPtrOutput() JwtAuthenticationPtrOutput {
	return i.ToJwtAuthenticationPtrOutputWithContext(context.Background())
}

func (i JwtAuthenticationArgs) ToJwtAuthenticationPtrOutputWithContext(ctx context.Context) JwtAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JwtAuthenticationOutput).ToJwtAuthenticationPtrOutputWithContext(ctx)
}

// JwtAuthenticationPtrInput is an input type that accepts JwtAuthenticationArgs, JwtAuthenticationPtr and JwtAuthenticationPtrOutput values.
// You can construct a concrete instance of `JwtAuthenticationPtrInput` via:
//
//          JwtAuthenticationArgs{...}
//
//  or:
//
//          nil
type JwtAuthenticationPtrInput interface {
	pulumi.Input

	ToJwtAuthenticationPtrOutput() JwtAuthenticationPtrOutput
	ToJwtAuthenticationPtrOutputWithContext(context.Context) JwtAuthenticationPtrOutput
}

type jwtAuthenticationPtrType JwtAuthenticationArgs

func JwtAuthenticationPtr(v *JwtAuthenticationArgs) JwtAuthenticationPtrInput {
	return (*jwtAuthenticationPtrType)(v)
}

func (*jwtAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JwtAuthentication)(nil)).Elem()
}

func (i *jwtAuthenticationPtrType) ToJwtAuthenticationPtrOutput() JwtAuthenticationPtrOutput {
	return i.ToJwtAuthenticationPtrOutputWithContext(context.Background())
}

func (i *jwtAuthenticationPtrType) ToJwtAuthenticationPtrOutputWithContext(ctx context.Context) JwtAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JwtAuthenticationPtrOutput)
}

type JwtAuthenticationOutput struct{ *pulumi.OutputState }

func (JwtAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JwtAuthentication)(nil)).Elem()
}

func (o JwtAuthenticationOutput) ToJwtAuthenticationOutput() JwtAuthenticationOutput {
	return o
}

func (o JwtAuthenticationOutput) ToJwtAuthenticationOutputWithContext(ctx context.Context) JwtAuthenticationOutput {
	return o
}

func (o JwtAuthenticationOutput) ToJwtAuthenticationPtrOutput() JwtAuthenticationPtrOutput {
	return o.ToJwtAuthenticationPtrOutputWithContext(context.Background())
}

func (o JwtAuthenticationOutput) ToJwtAuthenticationPtrOutputWithContext(ctx context.Context) JwtAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JwtAuthentication) *JwtAuthentication {
		return &v
	}).(JwtAuthenticationPtrOutput)
}

func (o JwtAuthenticationOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JwtAuthentication) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

func (o JwtAuthenticationOutput) Claims() TokenClaimArrayOutput {
	return o.ApplyT(func(v JwtAuthentication) []TokenClaim { return v.Claims }).(TokenClaimArrayOutput)
}

func (o JwtAuthenticationOutput) Issuers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JwtAuthentication) []string { return v.Issuers }).(pulumi.StringArrayOutput)
}

func (o JwtAuthenticationOutput) Keys() pulumi.ArrayOutput {
	return o.ApplyT(func(v JwtAuthentication) []interface{} { return v.Keys }).(pulumi.ArrayOutput)
}

func (o JwtAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JwtAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type JwtAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (JwtAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JwtAuthentication)(nil)).Elem()
}

func (o JwtAuthenticationPtrOutput) ToJwtAuthenticationPtrOutput() JwtAuthenticationPtrOutput {
	return o
}

func (o JwtAuthenticationPtrOutput) ToJwtAuthenticationPtrOutputWithContext(ctx context.Context) JwtAuthenticationPtrOutput {
	return o
}

func (o JwtAuthenticationPtrOutput) Elem() JwtAuthenticationOutput {
	return o.ApplyT(func(v *JwtAuthentication) JwtAuthentication {
		if v != nil {
			return *v
		}
		var ret JwtAuthentication
		return ret
	}).(JwtAuthenticationOutput)
}

func (o JwtAuthenticationPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JwtAuthentication) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

func (o JwtAuthenticationPtrOutput) Claims() TokenClaimArrayOutput {
	return o.ApplyT(func(v *JwtAuthentication) []TokenClaim {
		if v == nil {
			return nil
		}
		return v.Claims
	}).(TokenClaimArrayOutput)
}

func (o JwtAuthenticationPtrOutput) Issuers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JwtAuthentication) []string {
		if v == nil {
			return nil
		}
		return v.Issuers
	}).(pulumi.StringArrayOutput)
}

func (o JwtAuthenticationPtrOutput) Keys() pulumi.ArrayOutput {
	return o.ApplyT(func(v *JwtAuthentication) []interface{} {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.ArrayOutput)
}

func (o JwtAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JwtAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type JwtAuthenticationResponse struct {
	Audiences []string             `pulumi:"audiences"`
	Claims    []TokenClaimResponse `pulumi:"claims"`
	Issuers   []string             `pulumi:"issuers"`
	Keys      []interface{}        `pulumi:"keys"`
	Type      string               `pulumi:"type"`
}

// JwtAuthenticationResponseInput is an input type that accepts JwtAuthenticationResponseArgs and JwtAuthenticationResponseOutput values.
// You can construct a concrete instance of `JwtAuthenticationResponseInput` via:
//
//          JwtAuthenticationResponseArgs{...}
type JwtAuthenticationResponseInput interface {
	pulumi.Input

	ToJwtAuthenticationResponseOutput() JwtAuthenticationResponseOutput
	ToJwtAuthenticationResponseOutputWithContext(context.Context) JwtAuthenticationResponseOutput
}

type JwtAuthenticationResponseArgs struct {
	Audiences pulumi.StringArrayInput      `pulumi:"audiences"`
	Claims    TokenClaimResponseArrayInput `pulumi:"claims"`
	Issuers   pulumi.StringArrayInput      `pulumi:"issuers"`
	Keys      pulumi.ArrayInput            `pulumi:"keys"`
	Type      pulumi.StringInput           `pulumi:"type"`
}

func (JwtAuthenticationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JwtAuthenticationResponse)(nil)).Elem()
}

func (i JwtAuthenticationResponseArgs) ToJwtAuthenticationResponseOutput() JwtAuthenticationResponseOutput {
	return i.ToJwtAuthenticationResponseOutputWithContext(context.Background())
}

func (i JwtAuthenticationResponseArgs) ToJwtAuthenticationResponseOutputWithContext(ctx context.Context) JwtAuthenticationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JwtAuthenticationResponseOutput)
}

func (i JwtAuthenticationResponseArgs) ToJwtAuthenticationResponsePtrOutput() JwtAuthenticationResponsePtrOutput {
	return i.ToJwtAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (i JwtAuthenticationResponseArgs) ToJwtAuthenticationResponsePtrOutputWithContext(ctx context.Context) JwtAuthenticationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JwtAuthenticationResponseOutput).ToJwtAuthenticationResponsePtrOutputWithContext(ctx)
}

// JwtAuthenticationResponsePtrInput is an input type that accepts JwtAuthenticationResponseArgs, JwtAuthenticationResponsePtr and JwtAuthenticationResponsePtrOutput values.
// You can construct a concrete instance of `JwtAuthenticationResponsePtrInput` via:
//
//          JwtAuthenticationResponseArgs{...}
//
//  or:
//
//          nil
type JwtAuthenticationResponsePtrInput interface {
	pulumi.Input

	ToJwtAuthenticationResponsePtrOutput() JwtAuthenticationResponsePtrOutput
	ToJwtAuthenticationResponsePtrOutputWithContext(context.Context) JwtAuthenticationResponsePtrOutput
}

type jwtAuthenticationResponsePtrType JwtAuthenticationResponseArgs

func JwtAuthenticationResponsePtr(v *JwtAuthenticationResponseArgs) JwtAuthenticationResponsePtrInput {
	return (*jwtAuthenticationResponsePtrType)(v)
}

func (*jwtAuthenticationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JwtAuthenticationResponse)(nil)).Elem()
}

func (i *jwtAuthenticationResponsePtrType) ToJwtAuthenticationResponsePtrOutput() JwtAuthenticationResponsePtrOutput {
	return i.ToJwtAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (i *jwtAuthenticationResponsePtrType) ToJwtAuthenticationResponsePtrOutputWithContext(ctx context.Context) JwtAuthenticationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JwtAuthenticationResponsePtrOutput)
}

type JwtAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (JwtAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JwtAuthenticationResponse)(nil)).Elem()
}

func (o JwtAuthenticationResponseOutput) ToJwtAuthenticationResponseOutput() JwtAuthenticationResponseOutput {
	return o
}

func (o JwtAuthenticationResponseOutput) ToJwtAuthenticationResponseOutputWithContext(ctx context.Context) JwtAuthenticationResponseOutput {
	return o
}

func (o JwtAuthenticationResponseOutput) ToJwtAuthenticationResponsePtrOutput() JwtAuthenticationResponsePtrOutput {
	return o.ToJwtAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (o JwtAuthenticationResponseOutput) ToJwtAuthenticationResponsePtrOutputWithContext(ctx context.Context) JwtAuthenticationResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JwtAuthenticationResponse) *JwtAuthenticationResponse {
		return &v
	}).(JwtAuthenticationResponsePtrOutput)
}

func (o JwtAuthenticationResponseOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JwtAuthenticationResponse) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

func (o JwtAuthenticationResponseOutput) Claims() TokenClaimResponseArrayOutput {
	return o.ApplyT(func(v JwtAuthenticationResponse) []TokenClaimResponse { return v.Claims }).(TokenClaimResponseArrayOutput)
}

func (o JwtAuthenticationResponseOutput) Issuers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JwtAuthenticationResponse) []string { return v.Issuers }).(pulumi.StringArrayOutput)
}

func (o JwtAuthenticationResponseOutput) Keys() pulumi.ArrayOutput {
	return o.ApplyT(func(v JwtAuthenticationResponse) []interface{} { return v.Keys }).(pulumi.ArrayOutput)
}

func (o JwtAuthenticationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JwtAuthenticationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type JwtAuthenticationResponsePtrOutput struct{ *pulumi.OutputState }

func (JwtAuthenticationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JwtAuthenticationResponse)(nil)).Elem()
}

func (o JwtAuthenticationResponsePtrOutput) ToJwtAuthenticationResponsePtrOutput() JwtAuthenticationResponsePtrOutput {
	return o
}

func (o JwtAuthenticationResponsePtrOutput) ToJwtAuthenticationResponsePtrOutputWithContext(ctx context.Context) JwtAuthenticationResponsePtrOutput {
	return o
}

func (o JwtAuthenticationResponsePtrOutput) Elem() JwtAuthenticationResponseOutput {
	return o.ApplyT(func(v *JwtAuthenticationResponse) JwtAuthenticationResponse {
		if v != nil {
			return *v
		}
		var ret JwtAuthenticationResponse
		return ret
	}).(JwtAuthenticationResponseOutput)
}

func (o JwtAuthenticationResponsePtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JwtAuthenticationResponse) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

func (o JwtAuthenticationResponsePtrOutput) Claims() TokenClaimResponseArrayOutput {
	return o.ApplyT(func(v *JwtAuthenticationResponse) []TokenClaimResponse {
		if v == nil {
			return nil
		}
		return v.Claims
	}).(TokenClaimResponseArrayOutput)
}

func (o JwtAuthenticationResponsePtrOutput) Issuers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JwtAuthenticationResponse) []string {
		if v == nil {
			return nil
		}
		return v.Issuers
	}).(pulumi.StringArrayOutput)
}

func (o JwtAuthenticationResponsePtrOutput) Keys() pulumi.ArrayOutput {
	return o.ApplyT(func(v *JwtAuthenticationResponse) []interface{} {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.ArrayOutput)
}

func (o JwtAuthenticationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JwtAuthenticationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type KeyVaultProperties struct {
	KeyIdentifier string `pulumi:"keyIdentifier"`
}

// KeyVaultPropertiesInput is an input type that accepts KeyVaultPropertiesArgs and KeyVaultPropertiesOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesInput` via:
//
//          KeyVaultPropertiesArgs{...}
type KeyVaultPropertiesInput interface {
	pulumi.Input

	ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput
	ToKeyVaultPropertiesOutputWithContext(context.Context) KeyVaultPropertiesOutput
}

type KeyVaultPropertiesArgs struct {
	KeyIdentifier pulumi.StringInput `pulumi:"keyIdentifier"`
}

func (KeyVaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return i.ToKeyVaultPropertiesOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput)
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput).ToKeyVaultPropertiesPtrOutputWithContext(ctx)
}

// KeyVaultPropertiesPtrInput is an input type that accepts KeyVaultPropertiesArgs, KeyVaultPropertiesPtr and KeyVaultPropertiesPtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesPtrInput` via:
//
//          KeyVaultPropertiesArgs{...}
//
//  or:
//
//          nil
type KeyVaultPropertiesPtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput
	ToKeyVaultPropertiesPtrOutputWithContext(context.Context) KeyVaultPropertiesPtrOutput
}

type keyVaultPropertiesPtrType KeyVaultPropertiesArgs

func KeyVaultPropertiesPtr(v *KeyVaultPropertiesArgs) KeyVaultPropertiesPtrInput {
	return (*keyVaultPropertiesPtrType)(v)
}

func (*keyVaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesPtrOutput)
}

type KeyVaultPropertiesOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyVaultProperties) *KeyVaultProperties {
		return &v
	}).(KeyVaultPropertiesPtrOutput)
}

func (o KeyVaultPropertiesOutput) KeyIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultProperties) string { return v.KeyIdentifier }).(pulumi.StringOutput)
}

type KeyVaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) Elem() KeyVaultPropertiesOutput {
	return o.ApplyT(func(v *KeyVaultProperties) KeyVaultProperties {
		if v != nil {
			return *v
		}
		var ret KeyVaultProperties
		return ret
	}).(KeyVaultPropertiesOutput)
}

func (o KeyVaultPropertiesPtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

type KeyVaultPropertiesResponse struct {
	CurrentKeyIdentifier string `pulumi:"currentKeyIdentifier"`
	KeyIdentifier        string `pulumi:"keyIdentifier"`
}

// KeyVaultPropertiesResponseInput is an input type that accepts KeyVaultPropertiesResponseArgs and KeyVaultPropertiesResponseOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesResponseInput` via:
//
//          KeyVaultPropertiesResponseArgs{...}
type KeyVaultPropertiesResponseInput interface {
	pulumi.Input

	ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput
	ToKeyVaultPropertiesResponseOutputWithContext(context.Context) KeyVaultPropertiesResponseOutput
}

type KeyVaultPropertiesResponseArgs struct {
	CurrentKeyIdentifier pulumi.StringInput `pulumi:"currentKeyIdentifier"`
	KeyIdentifier        pulumi.StringInput `pulumi:"keyIdentifier"`
}

func (KeyVaultPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return i.ToKeyVaultPropertiesResponseOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponseOutput)
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return i.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponseOutput).ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx)
}

// KeyVaultPropertiesResponsePtrInput is an input type that accepts KeyVaultPropertiesResponseArgs, KeyVaultPropertiesResponsePtr and KeyVaultPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesResponsePtrInput` via:
//
//          KeyVaultPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type KeyVaultPropertiesResponsePtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput
	ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Context) KeyVaultPropertiesResponsePtrOutput
}

type keyVaultPropertiesResponsePtrType KeyVaultPropertiesResponseArgs

func KeyVaultPropertiesResponsePtr(v *KeyVaultPropertiesResponseArgs) KeyVaultPropertiesResponsePtrInput {
	return (*keyVaultPropertiesResponsePtrType)(v)
}

func (*keyVaultPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (i *keyVaultPropertiesResponsePtrType) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return i.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesResponsePtrType) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponsePtrOutput)
}

type KeyVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyVaultPropertiesResponse) *KeyVaultPropertiesResponse {
		return &v
	}).(KeyVaultPropertiesResponsePtrOutput)
}

func (o KeyVaultPropertiesResponseOutput) CurrentKeyIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) string { return v.CurrentKeyIdentifier }).(pulumi.StringOutput)
}

func (o KeyVaultPropertiesResponseOutput) KeyIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) string { return v.KeyIdentifier }).(pulumi.StringOutput)
}

type KeyVaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) Elem() KeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) KeyVaultPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret KeyVaultPropertiesResponse
		return ret
	}).(KeyVaultPropertiesResponseOutput)
}

func (o KeyVaultPropertiesResponsePtrOutput) CurrentKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CurrentKeyIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o KeyVaultPropertiesResponsePtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

type ResourceIdentity struct {
	UserAssignedIdentity string `pulumi:"userAssignedIdentity"`
}

// ResourceIdentityInput is an input type that accepts ResourceIdentityArgs and ResourceIdentityOutput values.
// You can construct a concrete instance of `ResourceIdentityInput` via:
//
//          ResourceIdentityArgs{...}
type ResourceIdentityInput interface {
	pulumi.Input

	ToResourceIdentityOutput() ResourceIdentityOutput
	ToResourceIdentityOutputWithContext(context.Context) ResourceIdentityOutput
}

type ResourceIdentityArgs struct {
	UserAssignedIdentity pulumi.StringInput `pulumi:"userAssignedIdentity"`
}

func (ResourceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (i ResourceIdentityArgs) ToResourceIdentityOutput() ResourceIdentityOutput {
	return i.ToResourceIdentityOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput)
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput).ToResourceIdentityPtrOutputWithContext(ctx)
}

// ResourceIdentityPtrInput is an input type that accepts ResourceIdentityArgs, ResourceIdentityPtr and ResourceIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceIdentityPtrInput` via:
//
//          ResourceIdentityArgs{...}
//
//  or:
//
//          nil
type ResourceIdentityPtrInput interface {
	pulumi.Input

	ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput
	ToResourceIdentityPtrOutputWithContext(context.Context) ResourceIdentityPtrOutput
}

type resourceIdentityPtrType ResourceIdentityArgs

func ResourceIdentityPtr(v *ResourceIdentityArgs) ResourceIdentityPtrInput {
	return (*resourceIdentityPtrType)(v)
}

func (*resourceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityPtrOutput)
}

type ResourceIdentityOutput struct{ *pulumi.OutputState }

func (ResourceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityOutput) ToResourceIdentityOutput() ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentity) *ResourceIdentity {
		return &v
	}).(ResourceIdentityPtrOutput)
}

func (o ResourceIdentityOutput) UserAssignedIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentity) string { return v.UserAssignedIdentity }).(pulumi.StringOutput)
}

type ResourceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) Elem() ResourceIdentityOutput {
	return o.ApplyT(func(v *ResourceIdentity) ResourceIdentity {
		if v != nil {
			return *v
		}
		var ret ResourceIdentity
		return ret
	}).(ResourceIdentityOutput)
}

func (o ResourceIdentityPtrOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.UserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

type ResourceIdentityResponse struct {
	UserAssignedIdentity string `pulumi:"userAssignedIdentity"`
}

// ResourceIdentityResponseInput is an input type that accepts ResourceIdentityResponseArgs and ResourceIdentityResponseOutput values.
// You can construct a concrete instance of `ResourceIdentityResponseInput` via:
//
//          ResourceIdentityResponseArgs{...}
type ResourceIdentityResponseInput interface {
	pulumi.Input

	ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput
	ToResourceIdentityResponseOutputWithContext(context.Context) ResourceIdentityResponseOutput
}

type ResourceIdentityResponseArgs struct {
	UserAssignedIdentity pulumi.StringInput `pulumi:"userAssignedIdentity"`
}

func (ResourceIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return i.ToResourceIdentityResponseOutputWithContext(context.Background())
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponseOutput)
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return i.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponseOutput).ToResourceIdentityResponsePtrOutputWithContext(ctx)
}

// ResourceIdentityResponsePtrInput is an input type that accepts ResourceIdentityResponseArgs, ResourceIdentityResponsePtr and ResourceIdentityResponsePtrOutput values.
// You can construct a concrete instance of `ResourceIdentityResponsePtrInput` via:
//
//          ResourceIdentityResponseArgs{...}
//
//  or:
//
//          nil
type ResourceIdentityResponsePtrInput interface {
	pulumi.Input

	ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput
	ToResourceIdentityResponsePtrOutputWithContext(context.Context) ResourceIdentityResponsePtrOutput
}

type resourceIdentityResponsePtrType ResourceIdentityResponseArgs

func ResourceIdentityResponsePtr(v *ResourceIdentityResponseArgs) ResourceIdentityResponsePtrInput {
	return (*resourceIdentityResponsePtrType)(v)
}

func (*resourceIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (i *resourceIdentityResponsePtrType) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return i.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *resourceIdentityResponsePtrType) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponsePtrOutput)
}

type ResourceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentityResponse) *ResourceIdentityResponse {
		return &v
	}).(ResourceIdentityResponsePtrOutput)
}

func (o ResourceIdentityResponseOutput) UserAssignedIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.UserAssignedIdentity }).(pulumi.StringOutput)
}

type ResourceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) Elem() ResourceIdentityResponseOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) ResourceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityResponse
		return ret
	}).(ResourceIdentityResponseOutput)
}

func (o ResourceIdentityResponsePtrOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

type RsaTokenKey struct {
	Alg  string `pulumi:"alg"`
	E    string `pulumi:"e"`
	Kid  string `pulumi:"kid"`
	N    string `pulumi:"n"`
	Type string `pulumi:"type"`
}

// RsaTokenKeyInput is an input type that accepts RsaTokenKeyArgs and RsaTokenKeyOutput values.
// You can construct a concrete instance of `RsaTokenKeyInput` via:
//
//          RsaTokenKeyArgs{...}
type RsaTokenKeyInput interface {
	pulumi.Input

	ToRsaTokenKeyOutput() RsaTokenKeyOutput
	ToRsaTokenKeyOutputWithContext(context.Context) RsaTokenKeyOutput
}

type RsaTokenKeyArgs struct {
	Alg  pulumi.StringInput `pulumi:"alg"`
	E    pulumi.StringInput `pulumi:"e"`
	Kid  pulumi.StringInput `pulumi:"kid"`
	N    pulumi.StringInput `pulumi:"n"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (RsaTokenKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RsaTokenKey)(nil)).Elem()
}

func (i RsaTokenKeyArgs) ToRsaTokenKeyOutput() RsaTokenKeyOutput {
	return i.ToRsaTokenKeyOutputWithContext(context.Background())
}

func (i RsaTokenKeyArgs) ToRsaTokenKeyOutputWithContext(ctx context.Context) RsaTokenKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RsaTokenKeyOutput)
}

type RsaTokenKeyOutput struct{ *pulumi.OutputState }

func (RsaTokenKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RsaTokenKey)(nil)).Elem()
}

func (o RsaTokenKeyOutput) ToRsaTokenKeyOutput() RsaTokenKeyOutput {
	return o
}

func (o RsaTokenKeyOutput) ToRsaTokenKeyOutputWithContext(ctx context.Context) RsaTokenKeyOutput {
	return o
}

func (o RsaTokenKeyOutput) Alg() pulumi.StringOutput {
	return o.ApplyT(func(v RsaTokenKey) string { return v.Alg }).(pulumi.StringOutput)
}

func (o RsaTokenKeyOutput) E() pulumi.StringOutput {
	return o.ApplyT(func(v RsaTokenKey) string { return v.E }).(pulumi.StringOutput)
}

func (o RsaTokenKeyOutput) Kid() pulumi.StringOutput {
	return o.ApplyT(func(v RsaTokenKey) string { return v.Kid }).(pulumi.StringOutput)
}

func (o RsaTokenKeyOutput) N() pulumi.StringOutput {
	return o.ApplyT(func(v RsaTokenKey) string { return v.N }).(pulumi.StringOutput)
}

func (o RsaTokenKeyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RsaTokenKey) string { return v.Type }).(pulumi.StringOutput)
}

type RsaTokenKeyResponse struct {
	Alg  string `pulumi:"alg"`
	E    string `pulumi:"e"`
	Kid  string `pulumi:"kid"`
	N    string `pulumi:"n"`
	Type string `pulumi:"type"`
}

// RsaTokenKeyResponseInput is an input type that accepts RsaTokenKeyResponseArgs and RsaTokenKeyResponseOutput values.
// You can construct a concrete instance of `RsaTokenKeyResponseInput` via:
//
//          RsaTokenKeyResponseArgs{...}
type RsaTokenKeyResponseInput interface {
	pulumi.Input

	ToRsaTokenKeyResponseOutput() RsaTokenKeyResponseOutput
	ToRsaTokenKeyResponseOutputWithContext(context.Context) RsaTokenKeyResponseOutput
}

type RsaTokenKeyResponseArgs struct {
	Alg  pulumi.StringInput `pulumi:"alg"`
	E    pulumi.StringInput `pulumi:"e"`
	Kid  pulumi.StringInput `pulumi:"kid"`
	N    pulumi.StringInput `pulumi:"n"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (RsaTokenKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RsaTokenKeyResponse)(nil)).Elem()
}

func (i RsaTokenKeyResponseArgs) ToRsaTokenKeyResponseOutput() RsaTokenKeyResponseOutput {
	return i.ToRsaTokenKeyResponseOutputWithContext(context.Background())
}

func (i RsaTokenKeyResponseArgs) ToRsaTokenKeyResponseOutputWithContext(ctx context.Context) RsaTokenKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RsaTokenKeyResponseOutput)
}

type RsaTokenKeyResponseOutput struct{ *pulumi.OutputState }

func (RsaTokenKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RsaTokenKeyResponse)(nil)).Elem()
}

func (o RsaTokenKeyResponseOutput) ToRsaTokenKeyResponseOutput() RsaTokenKeyResponseOutput {
	return o
}

func (o RsaTokenKeyResponseOutput) ToRsaTokenKeyResponseOutputWithContext(ctx context.Context) RsaTokenKeyResponseOutput {
	return o
}

func (o RsaTokenKeyResponseOutput) Alg() pulumi.StringOutput {
	return o.ApplyT(func(v RsaTokenKeyResponse) string { return v.Alg }).(pulumi.StringOutput)
}

func (o RsaTokenKeyResponseOutput) E() pulumi.StringOutput {
	return o.ApplyT(func(v RsaTokenKeyResponse) string { return v.E }).(pulumi.StringOutput)
}

func (o RsaTokenKeyResponseOutput) Kid() pulumi.StringOutput {
	return o.ApplyT(func(v RsaTokenKeyResponse) string { return v.Kid }).(pulumi.StringOutput)
}

func (o RsaTokenKeyResponseOutput) N() pulumi.StringOutput {
	return o.ApplyT(func(v RsaTokenKeyResponse) string { return v.N }).(pulumi.StringOutput)
}

func (o RsaTokenKeyResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RsaTokenKeyResponse) string { return v.Type }).(pulumi.StringOutput)
}

type StorageAccount struct {
	Id       *string           `pulumi:"id"`
	Identity *ResourceIdentity `pulumi:"identity"`
}

// StorageAccountInput is an input type that accepts StorageAccountArgs and StorageAccountOutput values.
// You can construct a concrete instance of `StorageAccountInput` via:
//
//          StorageAccountArgs{...}
type StorageAccountInput interface {
	pulumi.Input

	ToStorageAccountOutput() StorageAccountOutput
	ToStorageAccountOutputWithContext(context.Context) StorageAccountOutput
}

type StorageAccountArgs struct {
	Id       pulumi.StringPtrInput    `pulumi:"id"`
	Identity ResourceIdentityPtrInput `pulumi:"identity"`
}

func (StorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccount)(nil)).Elem()
}

func (i StorageAccountArgs) ToStorageAccountOutput() StorageAccountOutput {
	return i.ToStorageAccountOutputWithContext(context.Background())
}

func (i StorageAccountArgs) ToStorageAccountOutputWithContext(ctx context.Context) StorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountOutput)
}

// StorageAccountArrayInput is an input type that accepts StorageAccountArray and StorageAccountArrayOutput values.
// You can construct a concrete instance of `StorageAccountArrayInput` via:
//
//          StorageAccountArray{ StorageAccountArgs{...} }
type StorageAccountArrayInput interface {
	pulumi.Input

	ToStorageAccountArrayOutput() StorageAccountArrayOutput
	ToStorageAccountArrayOutputWithContext(context.Context) StorageAccountArrayOutput
}

type StorageAccountArray []StorageAccountInput

func (StorageAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccount)(nil)).Elem()
}

func (i StorageAccountArray) ToStorageAccountArrayOutput() StorageAccountArrayOutput {
	return i.ToStorageAccountArrayOutputWithContext(context.Background())
}

func (i StorageAccountArray) ToStorageAccountArrayOutputWithContext(ctx context.Context) StorageAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountArrayOutput)
}

type StorageAccountOutput struct{ *pulumi.OutputState }

func (StorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccount)(nil)).Elem()
}

func (o StorageAccountOutput) ToStorageAccountOutput() StorageAccountOutput {
	return o
}

func (o StorageAccountOutput) ToStorageAccountOutputWithContext(ctx context.Context) StorageAccountOutput {
	return o
}

func (o StorageAccountOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccount) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o StorageAccountOutput) Identity() ResourceIdentityPtrOutput {
	return o.ApplyT(func(v StorageAccount) *ResourceIdentity { return v.Identity }).(ResourceIdentityPtrOutput)
}

type StorageAccountArrayOutput struct{ *pulumi.OutputState }

func (StorageAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccount)(nil)).Elem()
}

func (o StorageAccountArrayOutput) ToStorageAccountArrayOutput() StorageAccountArrayOutput {
	return o
}

func (o StorageAccountArrayOutput) ToStorageAccountArrayOutputWithContext(ctx context.Context) StorageAccountArrayOutput {
	return o
}

func (o StorageAccountArrayOutput) Index(i pulumi.IntInput) StorageAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageAccount {
		return vs[0].([]StorageAccount)[vs[1].(int)]
	}).(StorageAccountOutput)
}

type StorageAccountResponse struct {
	Id       *string                   `pulumi:"id"`
	Identity *ResourceIdentityResponse `pulumi:"identity"`
	Status   string                    `pulumi:"status"`
}

// StorageAccountResponseInput is an input type that accepts StorageAccountResponseArgs and StorageAccountResponseOutput values.
// You can construct a concrete instance of `StorageAccountResponseInput` via:
//
//          StorageAccountResponseArgs{...}
type StorageAccountResponseInput interface {
	pulumi.Input

	ToStorageAccountResponseOutput() StorageAccountResponseOutput
	ToStorageAccountResponseOutputWithContext(context.Context) StorageAccountResponseOutput
}

type StorageAccountResponseArgs struct {
	Id       pulumi.StringPtrInput            `pulumi:"id"`
	Identity ResourceIdentityResponsePtrInput `pulumi:"identity"`
	Status   pulumi.StringInput               `pulumi:"status"`
}

func (StorageAccountResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountResponse)(nil)).Elem()
}

func (i StorageAccountResponseArgs) ToStorageAccountResponseOutput() StorageAccountResponseOutput {
	return i.ToStorageAccountResponseOutputWithContext(context.Background())
}

func (i StorageAccountResponseArgs) ToStorageAccountResponseOutputWithContext(ctx context.Context) StorageAccountResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountResponseOutput)
}

// StorageAccountResponseArrayInput is an input type that accepts StorageAccountResponseArray and StorageAccountResponseArrayOutput values.
// You can construct a concrete instance of `StorageAccountResponseArrayInput` via:
//
//          StorageAccountResponseArray{ StorageAccountResponseArgs{...} }
type StorageAccountResponseArrayInput interface {
	pulumi.Input

	ToStorageAccountResponseArrayOutput() StorageAccountResponseArrayOutput
	ToStorageAccountResponseArrayOutputWithContext(context.Context) StorageAccountResponseArrayOutput
}

type StorageAccountResponseArray []StorageAccountResponseInput

func (StorageAccountResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountResponse)(nil)).Elem()
}

func (i StorageAccountResponseArray) ToStorageAccountResponseArrayOutput() StorageAccountResponseArrayOutput {
	return i.ToStorageAccountResponseArrayOutputWithContext(context.Background())
}

func (i StorageAccountResponseArray) ToStorageAccountResponseArrayOutputWithContext(ctx context.Context) StorageAccountResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountResponseArrayOutput)
}

type StorageAccountResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountResponse)(nil)).Elem()
}

func (o StorageAccountResponseOutput) ToStorageAccountResponseOutput() StorageAccountResponseOutput {
	return o
}

func (o StorageAccountResponseOutput) ToStorageAccountResponseOutputWithContext(ctx context.Context) StorageAccountResponseOutput {
	return o
}

func (o StorageAccountResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o StorageAccountResponseOutput) Identity() ResourceIdentityResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountResponse) *ResourceIdentityResponse { return v.Identity }).(ResourceIdentityResponsePtrOutput)
}

func (o StorageAccountResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountResponse) string { return v.Status }).(pulumi.StringOutput)
}

type StorageAccountResponseArrayOutput struct{ *pulumi.OutputState }

func (StorageAccountResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountResponse)(nil)).Elem()
}

func (o StorageAccountResponseArrayOutput) ToStorageAccountResponseArrayOutput() StorageAccountResponseArrayOutput {
	return o
}

func (o StorageAccountResponseArrayOutput) ToStorageAccountResponseArrayOutputWithContext(ctx context.Context) StorageAccountResponseArrayOutput {
	return o
}

func (o StorageAccountResponseArrayOutput) Index(i pulumi.IntInput) StorageAccountResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageAccountResponse {
		return vs[0].([]StorageAccountResponse)[vs[1].(int)]
	}).(StorageAccountResponseOutput)
}

type SystemDataResponse struct {
	CreatedAt          *string `pulumi:"createdAt"`
	CreatedBy          *string `pulumi:"createdBy"`
	CreatedByType      *string `pulumi:"createdByType"`
	LastModifiedAt     *string `pulumi:"lastModifiedAt"`
	LastModifiedBy     *string `pulumi:"lastModifiedBy"`
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// SystemDataResponseInput is an input type that accepts SystemDataResponseArgs and SystemDataResponseOutput values.
// You can construct a concrete instance of `SystemDataResponseInput` via:
//
//          SystemDataResponseArgs{...}
type SystemDataResponseInput interface {
	pulumi.Input

	ToSystemDataResponseOutput() SystemDataResponseOutput
	ToSystemDataResponseOutputWithContext(context.Context) SystemDataResponseOutput
}

type SystemDataResponseArgs struct {
	CreatedAt          pulumi.StringPtrInput `pulumi:"createdAt"`
	CreatedBy          pulumi.StringPtrInput `pulumi:"createdBy"`
	CreatedByType      pulumi.StringPtrInput `pulumi:"createdByType"`
	LastModifiedAt     pulumi.StringPtrInput `pulumi:"lastModifiedAt"`
	LastModifiedBy     pulumi.StringPtrInput `pulumi:"lastModifiedBy"`
	LastModifiedByType pulumi.StringPtrInput `pulumi:"lastModifiedByType"`
}

func (SystemDataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return i.ToSystemDataResponseOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput)
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput).ToSystemDataResponsePtrOutputWithContext(ctx)
}

// SystemDataResponsePtrInput is an input type that accepts SystemDataResponseArgs, SystemDataResponsePtr and SystemDataResponsePtrOutput values.
// You can construct a concrete instance of `SystemDataResponsePtrInput` via:
//
//          SystemDataResponseArgs{...}
//
//  or:
//
//          nil
type SystemDataResponsePtrInput interface {
	pulumi.Input

	ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput
	ToSystemDataResponsePtrOutputWithContext(context.Context) SystemDataResponsePtrOutput
}

type systemDataResponsePtrType SystemDataResponseArgs

func SystemDataResponsePtr(v *SystemDataResponseArgs) SystemDataResponsePtrInput {
	return (*systemDataResponsePtrType)(v)
}

func (*systemDataResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponsePtrOutput)
}

type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemDataResponse) *SystemDataResponse {
		return &v
	}).(SystemDataResponsePtrOutput)
}

func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

type SystemDataResponsePtrOutput struct{ *pulumi.OutputState }

func (SystemDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) Elem() SystemDataResponseOutput {
	return o.ApplyT(func(v *SystemDataResponse) SystemDataResponse {
		if v != nil {
			return *v
		}
		var ret SystemDataResponse
		return ret
	}).(SystemDataResponseOutput)
}

func (o SystemDataResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o SystemDataResponsePtrOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedBy
	}).(pulumi.StringPtrOutput)
}

func (o SystemDataResponsePtrOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByType
	}).(pulumi.StringPtrOutput)
}

func (o SystemDataResponsePtrOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedAt
	}).(pulumi.StringPtrOutput)
}

func (o SystemDataResponsePtrOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedBy
	}).(pulumi.StringPtrOutput)
}

func (o SystemDataResponsePtrOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedByType
	}).(pulumi.StringPtrOutput)
}

type TokenClaim struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// TokenClaimInput is an input type that accepts TokenClaimArgs and TokenClaimOutput values.
// You can construct a concrete instance of `TokenClaimInput` via:
//
//          TokenClaimArgs{...}
type TokenClaimInput interface {
	pulumi.Input

	ToTokenClaimOutput() TokenClaimOutput
	ToTokenClaimOutputWithContext(context.Context) TokenClaimOutput
}

type TokenClaimArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (TokenClaimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenClaim)(nil)).Elem()
}

func (i TokenClaimArgs) ToTokenClaimOutput() TokenClaimOutput {
	return i.ToTokenClaimOutputWithContext(context.Background())
}

func (i TokenClaimArgs) ToTokenClaimOutputWithContext(ctx context.Context) TokenClaimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenClaimOutput)
}

// TokenClaimArrayInput is an input type that accepts TokenClaimArray and TokenClaimArrayOutput values.
// You can construct a concrete instance of `TokenClaimArrayInput` via:
//
//          TokenClaimArray{ TokenClaimArgs{...} }
type TokenClaimArrayInput interface {
	pulumi.Input

	ToTokenClaimArrayOutput() TokenClaimArrayOutput
	ToTokenClaimArrayOutputWithContext(context.Context) TokenClaimArrayOutput
}

type TokenClaimArray []TokenClaimInput

func (TokenClaimArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TokenClaim)(nil)).Elem()
}

func (i TokenClaimArray) ToTokenClaimArrayOutput() TokenClaimArrayOutput {
	return i.ToTokenClaimArrayOutputWithContext(context.Background())
}

func (i TokenClaimArray) ToTokenClaimArrayOutputWithContext(ctx context.Context) TokenClaimArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenClaimArrayOutput)
}

type TokenClaimOutput struct{ *pulumi.OutputState }

func (TokenClaimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenClaim)(nil)).Elem()
}

func (o TokenClaimOutput) ToTokenClaimOutput() TokenClaimOutput {
	return o
}

func (o TokenClaimOutput) ToTokenClaimOutputWithContext(ctx context.Context) TokenClaimOutput {
	return o
}

func (o TokenClaimOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TokenClaim) string { return v.Name }).(pulumi.StringOutput)
}

func (o TokenClaimOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TokenClaim) string { return v.Value }).(pulumi.StringOutput)
}

type TokenClaimArrayOutput struct{ *pulumi.OutputState }

func (TokenClaimArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TokenClaim)(nil)).Elem()
}

func (o TokenClaimArrayOutput) ToTokenClaimArrayOutput() TokenClaimArrayOutput {
	return o
}

func (o TokenClaimArrayOutput) ToTokenClaimArrayOutputWithContext(ctx context.Context) TokenClaimArrayOutput {
	return o
}

func (o TokenClaimArrayOutput) Index(i pulumi.IntInput) TokenClaimOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TokenClaim {
		return vs[0].([]TokenClaim)[vs[1].(int)]
	}).(TokenClaimOutput)
}

type TokenClaimResponse struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// TokenClaimResponseInput is an input type that accepts TokenClaimResponseArgs and TokenClaimResponseOutput values.
// You can construct a concrete instance of `TokenClaimResponseInput` via:
//
//          TokenClaimResponseArgs{...}
type TokenClaimResponseInput interface {
	pulumi.Input

	ToTokenClaimResponseOutput() TokenClaimResponseOutput
	ToTokenClaimResponseOutputWithContext(context.Context) TokenClaimResponseOutput
}

type TokenClaimResponseArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (TokenClaimResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenClaimResponse)(nil)).Elem()
}

func (i TokenClaimResponseArgs) ToTokenClaimResponseOutput() TokenClaimResponseOutput {
	return i.ToTokenClaimResponseOutputWithContext(context.Background())
}

func (i TokenClaimResponseArgs) ToTokenClaimResponseOutputWithContext(ctx context.Context) TokenClaimResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenClaimResponseOutput)
}

// TokenClaimResponseArrayInput is an input type that accepts TokenClaimResponseArray and TokenClaimResponseArrayOutput values.
// You can construct a concrete instance of `TokenClaimResponseArrayInput` via:
//
//          TokenClaimResponseArray{ TokenClaimResponseArgs{...} }
type TokenClaimResponseArrayInput interface {
	pulumi.Input

	ToTokenClaimResponseArrayOutput() TokenClaimResponseArrayOutput
	ToTokenClaimResponseArrayOutputWithContext(context.Context) TokenClaimResponseArrayOutput
}

type TokenClaimResponseArray []TokenClaimResponseInput

func (TokenClaimResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TokenClaimResponse)(nil)).Elem()
}

func (i TokenClaimResponseArray) ToTokenClaimResponseArrayOutput() TokenClaimResponseArrayOutput {
	return i.ToTokenClaimResponseArrayOutputWithContext(context.Background())
}

func (i TokenClaimResponseArray) ToTokenClaimResponseArrayOutputWithContext(ctx context.Context) TokenClaimResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenClaimResponseArrayOutput)
}

type TokenClaimResponseOutput struct{ *pulumi.OutputState }

func (TokenClaimResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenClaimResponse)(nil)).Elem()
}

func (o TokenClaimResponseOutput) ToTokenClaimResponseOutput() TokenClaimResponseOutput {
	return o
}

func (o TokenClaimResponseOutput) ToTokenClaimResponseOutputWithContext(ctx context.Context) TokenClaimResponseOutput {
	return o
}

func (o TokenClaimResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TokenClaimResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o TokenClaimResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TokenClaimResponse) string { return v.Value }).(pulumi.StringOutput)
}

type TokenClaimResponseArrayOutput struct{ *pulumi.OutputState }

func (TokenClaimResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TokenClaimResponse)(nil)).Elem()
}

func (o TokenClaimResponseArrayOutput) ToTokenClaimResponseArrayOutput() TokenClaimResponseArrayOutput {
	return o
}

func (o TokenClaimResponseArrayOutput) ToTokenClaimResponseArrayOutputWithContext(ctx context.Context) TokenClaimResponseArrayOutput {
	return o
}

func (o TokenClaimResponseArrayOutput) Index(i pulumi.IntInput) TokenClaimResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TokenClaimResponse {
		return vs[0].([]TokenClaimResponse)[vs[1].(int)]
	}).(TokenClaimResponseOutput)
}

type UserAssignedManagedIdentityResponse struct {
	ClientId    string `pulumi:"clientId"`
	PrincipalId string `pulumi:"principalId"`
}

// UserAssignedManagedIdentityResponseInput is an input type that accepts UserAssignedManagedIdentityResponseArgs and UserAssignedManagedIdentityResponseOutput values.
// You can construct a concrete instance of `UserAssignedManagedIdentityResponseInput` via:
//
//          UserAssignedManagedIdentityResponseArgs{...}
type UserAssignedManagedIdentityResponseInput interface {
	pulumi.Input

	ToUserAssignedManagedIdentityResponseOutput() UserAssignedManagedIdentityResponseOutput
	ToUserAssignedManagedIdentityResponseOutputWithContext(context.Context) UserAssignedManagedIdentityResponseOutput
}

type UserAssignedManagedIdentityResponseArgs struct {
	ClientId    pulumi.StringInput `pulumi:"clientId"`
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
}

func (UserAssignedManagedIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedManagedIdentityResponse)(nil)).Elem()
}

func (i UserAssignedManagedIdentityResponseArgs) ToUserAssignedManagedIdentityResponseOutput() UserAssignedManagedIdentityResponseOutput {
	return i.ToUserAssignedManagedIdentityResponseOutputWithContext(context.Background())
}

func (i UserAssignedManagedIdentityResponseArgs) ToUserAssignedManagedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedManagedIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedManagedIdentityResponseOutput)
}

// UserAssignedManagedIdentityResponseMapInput is an input type that accepts UserAssignedManagedIdentityResponseMap and UserAssignedManagedIdentityResponseMapOutput values.
// You can construct a concrete instance of `UserAssignedManagedIdentityResponseMapInput` via:
//
//          UserAssignedManagedIdentityResponseMap{ "key": UserAssignedManagedIdentityResponseArgs{...} }
type UserAssignedManagedIdentityResponseMapInput interface {
	pulumi.Input

	ToUserAssignedManagedIdentityResponseMapOutput() UserAssignedManagedIdentityResponseMapOutput
	ToUserAssignedManagedIdentityResponseMapOutputWithContext(context.Context) UserAssignedManagedIdentityResponseMapOutput
}

type UserAssignedManagedIdentityResponseMap map[string]UserAssignedManagedIdentityResponseInput

func (UserAssignedManagedIdentityResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedManagedIdentityResponse)(nil)).Elem()
}

func (i UserAssignedManagedIdentityResponseMap) ToUserAssignedManagedIdentityResponseMapOutput() UserAssignedManagedIdentityResponseMapOutput {
	return i.ToUserAssignedManagedIdentityResponseMapOutputWithContext(context.Background())
}

func (i UserAssignedManagedIdentityResponseMap) ToUserAssignedManagedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedManagedIdentityResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedManagedIdentityResponseMapOutput)
}

type UserAssignedManagedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedManagedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedManagedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedManagedIdentityResponseOutput) ToUserAssignedManagedIdentityResponseOutput() UserAssignedManagedIdentityResponseOutput {
	return o
}

func (o UserAssignedManagedIdentityResponseOutput) ToUserAssignedManagedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedManagedIdentityResponseOutput {
	return o
}

func (o UserAssignedManagedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o UserAssignedManagedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedManagedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedManagedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedManagedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedManagedIdentityResponseMapOutput) ToUserAssignedManagedIdentityResponseMapOutput() UserAssignedManagedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedManagedIdentityResponseMapOutput) ToUserAssignedManagedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedManagedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedManagedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedManagedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedManagedIdentityResponse {
		return vs[0].(map[string]UserAssignedManagedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedManagedIdentityResponseOutput)
}

type VideoAnalyzerIdentity struct {
	Type                   string                 `pulumi:"type"`
	UserAssignedIdentities map[string]interface{} `pulumi:"userAssignedIdentities"`
}

// VideoAnalyzerIdentityInput is an input type that accepts VideoAnalyzerIdentityArgs and VideoAnalyzerIdentityOutput values.
// You can construct a concrete instance of `VideoAnalyzerIdentityInput` via:
//
//          VideoAnalyzerIdentityArgs{...}
type VideoAnalyzerIdentityInput interface {
	pulumi.Input

	ToVideoAnalyzerIdentityOutput() VideoAnalyzerIdentityOutput
	ToVideoAnalyzerIdentityOutputWithContext(context.Context) VideoAnalyzerIdentityOutput
}

type VideoAnalyzerIdentityArgs struct {
	Type                   pulumi.StringInput `pulumi:"type"`
	UserAssignedIdentities pulumi.MapInput    `pulumi:"userAssignedIdentities"`
}

func (VideoAnalyzerIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VideoAnalyzerIdentity)(nil)).Elem()
}

func (i VideoAnalyzerIdentityArgs) ToVideoAnalyzerIdentityOutput() VideoAnalyzerIdentityOutput {
	return i.ToVideoAnalyzerIdentityOutputWithContext(context.Background())
}

func (i VideoAnalyzerIdentityArgs) ToVideoAnalyzerIdentityOutputWithContext(ctx context.Context) VideoAnalyzerIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoAnalyzerIdentityOutput)
}

func (i VideoAnalyzerIdentityArgs) ToVideoAnalyzerIdentityPtrOutput() VideoAnalyzerIdentityPtrOutput {
	return i.ToVideoAnalyzerIdentityPtrOutputWithContext(context.Background())
}

func (i VideoAnalyzerIdentityArgs) ToVideoAnalyzerIdentityPtrOutputWithContext(ctx context.Context) VideoAnalyzerIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoAnalyzerIdentityOutput).ToVideoAnalyzerIdentityPtrOutputWithContext(ctx)
}

// VideoAnalyzerIdentityPtrInput is an input type that accepts VideoAnalyzerIdentityArgs, VideoAnalyzerIdentityPtr and VideoAnalyzerIdentityPtrOutput values.
// You can construct a concrete instance of `VideoAnalyzerIdentityPtrInput` via:
//
//          VideoAnalyzerIdentityArgs{...}
//
//  or:
//
//          nil
type VideoAnalyzerIdentityPtrInput interface {
	pulumi.Input

	ToVideoAnalyzerIdentityPtrOutput() VideoAnalyzerIdentityPtrOutput
	ToVideoAnalyzerIdentityPtrOutputWithContext(context.Context) VideoAnalyzerIdentityPtrOutput
}

type videoAnalyzerIdentityPtrType VideoAnalyzerIdentityArgs

func VideoAnalyzerIdentityPtr(v *VideoAnalyzerIdentityArgs) VideoAnalyzerIdentityPtrInput {
	return (*videoAnalyzerIdentityPtrType)(v)
}

func (*videoAnalyzerIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VideoAnalyzerIdentity)(nil)).Elem()
}

func (i *videoAnalyzerIdentityPtrType) ToVideoAnalyzerIdentityPtrOutput() VideoAnalyzerIdentityPtrOutput {
	return i.ToVideoAnalyzerIdentityPtrOutputWithContext(context.Background())
}

func (i *videoAnalyzerIdentityPtrType) ToVideoAnalyzerIdentityPtrOutputWithContext(ctx context.Context) VideoAnalyzerIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoAnalyzerIdentityPtrOutput)
}

type VideoAnalyzerIdentityOutput struct{ *pulumi.OutputState }

func (VideoAnalyzerIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VideoAnalyzerIdentity)(nil)).Elem()
}

func (o VideoAnalyzerIdentityOutput) ToVideoAnalyzerIdentityOutput() VideoAnalyzerIdentityOutput {
	return o
}

func (o VideoAnalyzerIdentityOutput) ToVideoAnalyzerIdentityOutputWithContext(ctx context.Context) VideoAnalyzerIdentityOutput {
	return o
}

func (o VideoAnalyzerIdentityOutput) ToVideoAnalyzerIdentityPtrOutput() VideoAnalyzerIdentityPtrOutput {
	return o.ToVideoAnalyzerIdentityPtrOutputWithContext(context.Background())
}

func (o VideoAnalyzerIdentityOutput) ToVideoAnalyzerIdentityPtrOutputWithContext(ctx context.Context) VideoAnalyzerIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VideoAnalyzerIdentity) *VideoAnalyzerIdentity {
		return &v
	}).(VideoAnalyzerIdentityPtrOutput)
}

func (o VideoAnalyzerIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VideoAnalyzerIdentity) string { return v.Type }).(pulumi.StringOutput)
}

func (o VideoAnalyzerIdentityOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v VideoAnalyzerIdentity) map[string]interface{} { return v.UserAssignedIdentities }).(pulumi.MapOutput)
}

type VideoAnalyzerIdentityPtrOutput struct{ *pulumi.OutputState }

func (VideoAnalyzerIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VideoAnalyzerIdentity)(nil)).Elem()
}

func (o VideoAnalyzerIdentityPtrOutput) ToVideoAnalyzerIdentityPtrOutput() VideoAnalyzerIdentityPtrOutput {
	return o
}

func (o VideoAnalyzerIdentityPtrOutput) ToVideoAnalyzerIdentityPtrOutputWithContext(ctx context.Context) VideoAnalyzerIdentityPtrOutput {
	return o
}

func (o VideoAnalyzerIdentityPtrOutput) Elem() VideoAnalyzerIdentityOutput {
	return o.ApplyT(func(v *VideoAnalyzerIdentity) VideoAnalyzerIdentity {
		if v != nil {
			return *v
		}
		var ret VideoAnalyzerIdentity
		return ret
	}).(VideoAnalyzerIdentityOutput)
}

func (o VideoAnalyzerIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VideoAnalyzerIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o VideoAnalyzerIdentityPtrOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v *VideoAnalyzerIdentity) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.MapOutput)
}

type VideoAnalyzerIdentityResponse struct {
	Type                   string                                         `pulumi:"type"`
	UserAssignedIdentities map[string]UserAssignedManagedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// VideoAnalyzerIdentityResponseInput is an input type that accepts VideoAnalyzerIdentityResponseArgs and VideoAnalyzerIdentityResponseOutput values.
// You can construct a concrete instance of `VideoAnalyzerIdentityResponseInput` via:
//
//          VideoAnalyzerIdentityResponseArgs{...}
type VideoAnalyzerIdentityResponseInput interface {
	pulumi.Input

	ToVideoAnalyzerIdentityResponseOutput() VideoAnalyzerIdentityResponseOutput
	ToVideoAnalyzerIdentityResponseOutputWithContext(context.Context) VideoAnalyzerIdentityResponseOutput
}

type VideoAnalyzerIdentityResponseArgs struct {
	Type                   pulumi.StringInput                          `pulumi:"type"`
	UserAssignedIdentities UserAssignedManagedIdentityResponseMapInput `pulumi:"userAssignedIdentities"`
}

func (VideoAnalyzerIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VideoAnalyzerIdentityResponse)(nil)).Elem()
}

func (i VideoAnalyzerIdentityResponseArgs) ToVideoAnalyzerIdentityResponseOutput() VideoAnalyzerIdentityResponseOutput {
	return i.ToVideoAnalyzerIdentityResponseOutputWithContext(context.Background())
}

func (i VideoAnalyzerIdentityResponseArgs) ToVideoAnalyzerIdentityResponseOutputWithContext(ctx context.Context) VideoAnalyzerIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoAnalyzerIdentityResponseOutput)
}

func (i VideoAnalyzerIdentityResponseArgs) ToVideoAnalyzerIdentityResponsePtrOutput() VideoAnalyzerIdentityResponsePtrOutput {
	return i.ToVideoAnalyzerIdentityResponsePtrOutputWithContext(context.Background())
}

func (i VideoAnalyzerIdentityResponseArgs) ToVideoAnalyzerIdentityResponsePtrOutputWithContext(ctx context.Context) VideoAnalyzerIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoAnalyzerIdentityResponseOutput).ToVideoAnalyzerIdentityResponsePtrOutputWithContext(ctx)
}

// VideoAnalyzerIdentityResponsePtrInput is an input type that accepts VideoAnalyzerIdentityResponseArgs, VideoAnalyzerIdentityResponsePtr and VideoAnalyzerIdentityResponsePtrOutput values.
// You can construct a concrete instance of `VideoAnalyzerIdentityResponsePtrInput` via:
//
//          VideoAnalyzerIdentityResponseArgs{...}
//
//  or:
//
//          nil
type VideoAnalyzerIdentityResponsePtrInput interface {
	pulumi.Input

	ToVideoAnalyzerIdentityResponsePtrOutput() VideoAnalyzerIdentityResponsePtrOutput
	ToVideoAnalyzerIdentityResponsePtrOutputWithContext(context.Context) VideoAnalyzerIdentityResponsePtrOutput
}

type videoAnalyzerIdentityResponsePtrType VideoAnalyzerIdentityResponseArgs

func VideoAnalyzerIdentityResponsePtr(v *VideoAnalyzerIdentityResponseArgs) VideoAnalyzerIdentityResponsePtrInput {
	return (*videoAnalyzerIdentityResponsePtrType)(v)
}

func (*videoAnalyzerIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VideoAnalyzerIdentityResponse)(nil)).Elem()
}

func (i *videoAnalyzerIdentityResponsePtrType) ToVideoAnalyzerIdentityResponsePtrOutput() VideoAnalyzerIdentityResponsePtrOutput {
	return i.ToVideoAnalyzerIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *videoAnalyzerIdentityResponsePtrType) ToVideoAnalyzerIdentityResponsePtrOutputWithContext(ctx context.Context) VideoAnalyzerIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoAnalyzerIdentityResponsePtrOutput)
}

type VideoAnalyzerIdentityResponseOutput struct{ *pulumi.OutputState }

func (VideoAnalyzerIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VideoAnalyzerIdentityResponse)(nil)).Elem()
}

func (o VideoAnalyzerIdentityResponseOutput) ToVideoAnalyzerIdentityResponseOutput() VideoAnalyzerIdentityResponseOutput {
	return o
}

func (o VideoAnalyzerIdentityResponseOutput) ToVideoAnalyzerIdentityResponseOutputWithContext(ctx context.Context) VideoAnalyzerIdentityResponseOutput {
	return o
}

func (o VideoAnalyzerIdentityResponseOutput) ToVideoAnalyzerIdentityResponsePtrOutput() VideoAnalyzerIdentityResponsePtrOutput {
	return o.ToVideoAnalyzerIdentityResponsePtrOutputWithContext(context.Background())
}

func (o VideoAnalyzerIdentityResponseOutput) ToVideoAnalyzerIdentityResponsePtrOutputWithContext(ctx context.Context) VideoAnalyzerIdentityResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VideoAnalyzerIdentityResponse) *VideoAnalyzerIdentityResponse {
		return &v
	}).(VideoAnalyzerIdentityResponsePtrOutput)
}

func (o VideoAnalyzerIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VideoAnalyzerIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

func (o VideoAnalyzerIdentityResponseOutput) UserAssignedIdentities() UserAssignedManagedIdentityResponseMapOutput {
	return o.ApplyT(func(v VideoAnalyzerIdentityResponse) map[string]UserAssignedManagedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedManagedIdentityResponseMapOutput)
}

type VideoAnalyzerIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (VideoAnalyzerIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VideoAnalyzerIdentityResponse)(nil)).Elem()
}

func (o VideoAnalyzerIdentityResponsePtrOutput) ToVideoAnalyzerIdentityResponsePtrOutput() VideoAnalyzerIdentityResponsePtrOutput {
	return o
}

func (o VideoAnalyzerIdentityResponsePtrOutput) ToVideoAnalyzerIdentityResponsePtrOutputWithContext(ctx context.Context) VideoAnalyzerIdentityResponsePtrOutput {
	return o
}

func (o VideoAnalyzerIdentityResponsePtrOutput) Elem() VideoAnalyzerIdentityResponseOutput {
	return o.ApplyT(func(v *VideoAnalyzerIdentityResponse) VideoAnalyzerIdentityResponse {
		if v != nil {
			return *v
		}
		var ret VideoAnalyzerIdentityResponse
		return ret
	}).(VideoAnalyzerIdentityResponseOutput)
}

func (o VideoAnalyzerIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VideoAnalyzerIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o VideoAnalyzerIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedManagedIdentityResponseMapOutput {
	return o.ApplyT(func(v *VideoAnalyzerIdentityResponse) map[string]UserAssignedManagedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedManagedIdentityResponseMapOutput)
}

type VideoFlagsResponse struct {
	CanStream   bool `pulumi:"canStream"`
	HasData     bool `pulumi:"hasData"`
	IsRecording bool `pulumi:"isRecording"`
}

// VideoFlagsResponseInput is an input type that accepts VideoFlagsResponseArgs and VideoFlagsResponseOutput values.
// You can construct a concrete instance of `VideoFlagsResponseInput` via:
//
//          VideoFlagsResponseArgs{...}
type VideoFlagsResponseInput interface {
	pulumi.Input

	ToVideoFlagsResponseOutput() VideoFlagsResponseOutput
	ToVideoFlagsResponseOutputWithContext(context.Context) VideoFlagsResponseOutput
}

type VideoFlagsResponseArgs struct {
	CanStream   pulumi.BoolInput `pulumi:"canStream"`
	HasData     pulumi.BoolInput `pulumi:"hasData"`
	IsRecording pulumi.BoolInput `pulumi:"isRecording"`
}

func (VideoFlagsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VideoFlagsResponse)(nil)).Elem()
}

func (i VideoFlagsResponseArgs) ToVideoFlagsResponseOutput() VideoFlagsResponseOutput {
	return i.ToVideoFlagsResponseOutputWithContext(context.Background())
}

func (i VideoFlagsResponseArgs) ToVideoFlagsResponseOutputWithContext(ctx context.Context) VideoFlagsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoFlagsResponseOutput)
}

func (i VideoFlagsResponseArgs) ToVideoFlagsResponsePtrOutput() VideoFlagsResponsePtrOutput {
	return i.ToVideoFlagsResponsePtrOutputWithContext(context.Background())
}

func (i VideoFlagsResponseArgs) ToVideoFlagsResponsePtrOutputWithContext(ctx context.Context) VideoFlagsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoFlagsResponseOutput).ToVideoFlagsResponsePtrOutputWithContext(ctx)
}

// VideoFlagsResponsePtrInput is an input type that accepts VideoFlagsResponseArgs, VideoFlagsResponsePtr and VideoFlagsResponsePtrOutput values.
// You can construct a concrete instance of `VideoFlagsResponsePtrInput` via:
//
//          VideoFlagsResponseArgs{...}
//
//  or:
//
//          nil
type VideoFlagsResponsePtrInput interface {
	pulumi.Input

	ToVideoFlagsResponsePtrOutput() VideoFlagsResponsePtrOutput
	ToVideoFlagsResponsePtrOutputWithContext(context.Context) VideoFlagsResponsePtrOutput
}

type videoFlagsResponsePtrType VideoFlagsResponseArgs

func VideoFlagsResponsePtr(v *VideoFlagsResponseArgs) VideoFlagsResponsePtrInput {
	return (*videoFlagsResponsePtrType)(v)
}

func (*videoFlagsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VideoFlagsResponse)(nil)).Elem()
}

func (i *videoFlagsResponsePtrType) ToVideoFlagsResponsePtrOutput() VideoFlagsResponsePtrOutput {
	return i.ToVideoFlagsResponsePtrOutputWithContext(context.Background())
}

func (i *videoFlagsResponsePtrType) ToVideoFlagsResponsePtrOutputWithContext(ctx context.Context) VideoFlagsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoFlagsResponsePtrOutput)
}

type VideoFlagsResponseOutput struct{ *pulumi.OutputState }

func (VideoFlagsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VideoFlagsResponse)(nil)).Elem()
}

func (o VideoFlagsResponseOutput) ToVideoFlagsResponseOutput() VideoFlagsResponseOutput {
	return o
}

func (o VideoFlagsResponseOutput) ToVideoFlagsResponseOutputWithContext(ctx context.Context) VideoFlagsResponseOutput {
	return o
}

func (o VideoFlagsResponseOutput) ToVideoFlagsResponsePtrOutput() VideoFlagsResponsePtrOutput {
	return o.ToVideoFlagsResponsePtrOutputWithContext(context.Background())
}

func (o VideoFlagsResponseOutput) ToVideoFlagsResponsePtrOutputWithContext(ctx context.Context) VideoFlagsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VideoFlagsResponse) *VideoFlagsResponse {
		return &v
	}).(VideoFlagsResponsePtrOutput)
}

func (o VideoFlagsResponseOutput) CanStream() pulumi.BoolOutput {
	return o.ApplyT(func(v VideoFlagsResponse) bool { return v.CanStream }).(pulumi.BoolOutput)
}

func (o VideoFlagsResponseOutput) HasData() pulumi.BoolOutput {
	return o.ApplyT(func(v VideoFlagsResponse) bool { return v.HasData }).(pulumi.BoolOutput)
}

func (o VideoFlagsResponseOutput) IsRecording() pulumi.BoolOutput {
	return o.ApplyT(func(v VideoFlagsResponse) bool { return v.IsRecording }).(pulumi.BoolOutput)
}

type VideoFlagsResponsePtrOutput struct{ *pulumi.OutputState }

func (VideoFlagsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VideoFlagsResponse)(nil)).Elem()
}

func (o VideoFlagsResponsePtrOutput) ToVideoFlagsResponsePtrOutput() VideoFlagsResponsePtrOutput {
	return o
}

func (o VideoFlagsResponsePtrOutput) ToVideoFlagsResponsePtrOutputWithContext(ctx context.Context) VideoFlagsResponsePtrOutput {
	return o
}

func (o VideoFlagsResponsePtrOutput) Elem() VideoFlagsResponseOutput {
	return o.ApplyT(func(v *VideoFlagsResponse) VideoFlagsResponse {
		if v != nil {
			return *v
		}
		var ret VideoFlagsResponse
		return ret
	}).(VideoFlagsResponseOutput)
}

func (o VideoFlagsResponsePtrOutput) CanStream() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VideoFlagsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CanStream
	}).(pulumi.BoolPtrOutput)
}

func (o VideoFlagsResponsePtrOutput) HasData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VideoFlagsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.HasData
	}).(pulumi.BoolPtrOutput)
}

func (o VideoFlagsResponsePtrOutput) IsRecording() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VideoFlagsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsRecording
	}).(pulumi.BoolPtrOutput)
}

type VideoMediaInfoResponse struct {
	SegmentLength string `pulumi:"segmentLength"`
}

// VideoMediaInfoResponseInput is an input type that accepts VideoMediaInfoResponseArgs and VideoMediaInfoResponseOutput values.
// You can construct a concrete instance of `VideoMediaInfoResponseInput` via:
//
//          VideoMediaInfoResponseArgs{...}
type VideoMediaInfoResponseInput interface {
	pulumi.Input

	ToVideoMediaInfoResponseOutput() VideoMediaInfoResponseOutput
	ToVideoMediaInfoResponseOutputWithContext(context.Context) VideoMediaInfoResponseOutput
}

type VideoMediaInfoResponseArgs struct {
	SegmentLength pulumi.StringInput `pulumi:"segmentLength"`
}

func (VideoMediaInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VideoMediaInfoResponse)(nil)).Elem()
}

func (i VideoMediaInfoResponseArgs) ToVideoMediaInfoResponseOutput() VideoMediaInfoResponseOutput {
	return i.ToVideoMediaInfoResponseOutputWithContext(context.Background())
}

func (i VideoMediaInfoResponseArgs) ToVideoMediaInfoResponseOutputWithContext(ctx context.Context) VideoMediaInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoMediaInfoResponseOutput)
}

func (i VideoMediaInfoResponseArgs) ToVideoMediaInfoResponsePtrOutput() VideoMediaInfoResponsePtrOutput {
	return i.ToVideoMediaInfoResponsePtrOutputWithContext(context.Background())
}

func (i VideoMediaInfoResponseArgs) ToVideoMediaInfoResponsePtrOutputWithContext(ctx context.Context) VideoMediaInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoMediaInfoResponseOutput).ToVideoMediaInfoResponsePtrOutputWithContext(ctx)
}

// VideoMediaInfoResponsePtrInput is an input type that accepts VideoMediaInfoResponseArgs, VideoMediaInfoResponsePtr and VideoMediaInfoResponsePtrOutput values.
// You can construct a concrete instance of `VideoMediaInfoResponsePtrInput` via:
//
//          VideoMediaInfoResponseArgs{...}
//
//  or:
//
//          nil
type VideoMediaInfoResponsePtrInput interface {
	pulumi.Input

	ToVideoMediaInfoResponsePtrOutput() VideoMediaInfoResponsePtrOutput
	ToVideoMediaInfoResponsePtrOutputWithContext(context.Context) VideoMediaInfoResponsePtrOutput
}

type videoMediaInfoResponsePtrType VideoMediaInfoResponseArgs

func VideoMediaInfoResponsePtr(v *VideoMediaInfoResponseArgs) VideoMediaInfoResponsePtrInput {
	return (*videoMediaInfoResponsePtrType)(v)
}

func (*videoMediaInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VideoMediaInfoResponse)(nil)).Elem()
}

func (i *videoMediaInfoResponsePtrType) ToVideoMediaInfoResponsePtrOutput() VideoMediaInfoResponsePtrOutput {
	return i.ToVideoMediaInfoResponsePtrOutputWithContext(context.Background())
}

func (i *videoMediaInfoResponsePtrType) ToVideoMediaInfoResponsePtrOutputWithContext(ctx context.Context) VideoMediaInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoMediaInfoResponsePtrOutput)
}

type VideoMediaInfoResponseOutput struct{ *pulumi.OutputState }

func (VideoMediaInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VideoMediaInfoResponse)(nil)).Elem()
}

func (o VideoMediaInfoResponseOutput) ToVideoMediaInfoResponseOutput() VideoMediaInfoResponseOutput {
	return o
}

func (o VideoMediaInfoResponseOutput) ToVideoMediaInfoResponseOutputWithContext(ctx context.Context) VideoMediaInfoResponseOutput {
	return o
}

func (o VideoMediaInfoResponseOutput) ToVideoMediaInfoResponsePtrOutput() VideoMediaInfoResponsePtrOutput {
	return o.ToVideoMediaInfoResponsePtrOutputWithContext(context.Background())
}

func (o VideoMediaInfoResponseOutput) ToVideoMediaInfoResponsePtrOutputWithContext(ctx context.Context) VideoMediaInfoResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VideoMediaInfoResponse) *VideoMediaInfoResponse {
		return &v
	}).(VideoMediaInfoResponsePtrOutput)
}

func (o VideoMediaInfoResponseOutput) SegmentLength() pulumi.StringOutput {
	return o.ApplyT(func(v VideoMediaInfoResponse) string { return v.SegmentLength }).(pulumi.StringOutput)
}

type VideoMediaInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (VideoMediaInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VideoMediaInfoResponse)(nil)).Elem()
}

func (o VideoMediaInfoResponsePtrOutput) ToVideoMediaInfoResponsePtrOutput() VideoMediaInfoResponsePtrOutput {
	return o
}

func (o VideoMediaInfoResponsePtrOutput) ToVideoMediaInfoResponsePtrOutputWithContext(ctx context.Context) VideoMediaInfoResponsePtrOutput {
	return o
}

func (o VideoMediaInfoResponsePtrOutput) Elem() VideoMediaInfoResponseOutput {
	return o.ApplyT(func(v *VideoMediaInfoResponse) VideoMediaInfoResponse {
		if v != nil {
			return *v
		}
		var ret VideoMediaInfoResponse
		return ret
	}).(VideoMediaInfoResponseOutput)
}

func (o VideoMediaInfoResponsePtrOutput) SegmentLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VideoMediaInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SegmentLength
	}).(pulumi.StringPtrOutput)
}

type VideoStreamingResponse struct {
	ArchiveBaseUrl *string `pulumi:"archiveBaseUrl"`
}

// VideoStreamingResponseInput is an input type that accepts VideoStreamingResponseArgs and VideoStreamingResponseOutput values.
// You can construct a concrete instance of `VideoStreamingResponseInput` via:
//
//          VideoStreamingResponseArgs{...}
type VideoStreamingResponseInput interface {
	pulumi.Input

	ToVideoStreamingResponseOutput() VideoStreamingResponseOutput
	ToVideoStreamingResponseOutputWithContext(context.Context) VideoStreamingResponseOutput
}

type VideoStreamingResponseArgs struct {
	ArchiveBaseUrl pulumi.StringPtrInput `pulumi:"archiveBaseUrl"`
}

func (VideoStreamingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VideoStreamingResponse)(nil)).Elem()
}

func (i VideoStreamingResponseArgs) ToVideoStreamingResponseOutput() VideoStreamingResponseOutput {
	return i.ToVideoStreamingResponseOutputWithContext(context.Background())
}

func (i VideoStreamingResponseArgs) ToVideoStreamingResponseOutputWithContext(ctx context.Context) VideoStreamingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoStreamingResponseOutput)
}

func (i VideoStreamingResponseArgs) ToVideoStreamingResponsePtrOutput() VideoStreamingResponsePtrOutput {
	return i.ToVideoStreamingResponsePtrOutputWithContext(context.Background())
}

func (i VideoStreamingResponseArgs) ToVideoStreamingResponsePtrOutputWithContext(ctx context.Context) VideoStreamingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoStreamingResponseOutput).ToVideoStreamingResponsePtrOutputWithContext(ctx)
}

// VideoStreamingResponsePtrInput is an input type that accepts VideoStreamingResponseArgs, VideoStreamingResponsePtr and VideoStreamingResponsePtrOutput values.
// You can construct a concrete instance of `VideoStreamingResponsePtrInput` via:
//
//          VideoStreamingResponseArgs{...}
//
//  or:
//
//          nil
type VideoStreamingResponsePtrInput interface {
	pulumi.Input

	ToVideoStreamingResponsePtrOutput() VideoStreamingResponsePtrOutput
	ToVideoStreamingResponsePtrOutputWithContext(context.Context) VideoStreamingResponsePtrOutput
}

type videoStreamingResponsePtrType VideoStreamingResponseArgs

func VideoStreamingResponsePtr(v *VideoStreamingResponseArgs) VideoStreamingResponsePtrInput {
	return (*videoStreamingResponsePtrType)(v)
}

func (*videoStreamingResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VideoStreamingResponse)(nil)).Elem()
}

func (i *videoStreamingResponsePtrType) ToVideoStreamingResponsePtrOutput() VideoStreamingResponsePtrOutput {
	return i.ToVideoStreamingResponsePtrOutputWithContext(context.Background())
}

func (i *videoStreamingResponsePtrType) ToVideoStreamingResponsePtrOutputWithContext(ctx context.Context) VideoStreamingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoStreamingResponsePtrOutput)
}

type VideoStreamingResponseOutput struct{ *pulumi.OutputState }

func (VideoStreamingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VideoStreamingResponse)(nil)).Elem()
}

func (o VideoStreamingResponseOutput) ToVideoStreamingResponseOutput() VideoStreamingResponseOutput {
	return o
}

func (o VideoStreamingResponseOutput) ToVideoStreamingResponseOutputWithContext(ctx context.Context) VideoStreamingResponseOutput {
	return o
}

func (o VideoStreamingResponseOutput) ToVideoStreamingResponsePtrOutput() VideoStreamingResponsePtrOutput {
	return o.ToVideoStreamingResponsePtrOutputWithContext(context.Background())
}

func (o VideoStreamingResponseOutput) ToVideoStreamingResponsePtrOutputWithContext(ctx context.Context) VideoStreamingResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VideoStreamingResponse) *VideoStreamingResponse {
		return &v
	}).(VideoStreamingResponsePtrOutput)
}

func (o VideoStreamingResponseOutput) ArchiveBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VideoStreamingResponse) *string { return v.ArchiveBaseUrl }).(pulumi.StringPtrOutput)
}

type VideoStreamingResponsePtrOutput struct{ *pulumi.OutputState }

func (VideoStreamingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VideoStreamingResponse)(nil)).Elem()
}

func (o VideoStreamingResponsePtrOutput) ToVideoStreamingResponsePtrOutput() VideoStreamingResponsePtrOutput {
	return o
}

func (o VideoStreamingResponsePtrOutput) ToVideoStreamingResponsePtrOutputWithContext(ctx context.Context) VideoStreamingResponsePtrOutput {
	return o
}

func (o VideoStreamingResponsePtrOutput) Elem() VideoStreamingResponseOutput {
	return o.ApplyT(func(v *VideoStreamingResponse) VideoStreamingResponse {
		if v != nil {
			return *v
		}
		var ret VideoStreamingResponse
		return ret
	}).(VideoStreamingResponseOutput)
}

func (o VideoStreamingResponsePtrOutput) ArchiveBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VideoStreamingResponse) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveBaseUrl
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccountEncryptionOutput{})
	pulumi.RegisterOutputType(AccountEncryptionPtrOutput{})
	pulumi.RegisterOutputType(AccountEncryptionResponseOutput{})
	pulumi.RegisterOutputType(AccountEncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(EccTokenKeyOutput{})
	pulumi.RegisterOutputType(EccTokenKeyResponseOutput{})
	pulumi.RegisterOutputType(EndpointResponseOutput{})
	pulumi.RegisterOutputType(EndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(JwtAuthenticationOutput{})
	pulumi.RegisterOutputType(JwtAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(JwtAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(JwtAuthenticationResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityOutput{})
	pulumi.RegisterOutputType(ResourceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(RsaTokenKeyOutput{})
	pulumi.RegisterOutputType(RsaTokenKeyResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountOutput{})
	pulumi.RegisterOutputType(StorageAccountArrayOutput{})
	pulumi.RegisterOutputType(StorageAccountResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponsePtrOutput{})
	pulumi.RegisterOutputType(TokenClaimOutput{})
	pulumi.RegisterOutputType(TokenClaimArrayOutput{})
	pulumi.RegisterOutputType(TokenClaimResponseOutput{})
	pulumi.RegisterOutputType(TokenClaimResponseArrayOutput{})
	pulumi.RegisterOutputType(UserAssignedManagedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedManagedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(VideoAnalyzerIdentityOutput{})
	pulumi.RegisterOutputType(VideoAnalyzerIdentityPtrOutput{})
	pulumi.RegisterOutputType(VideoAnalyzerIdentityResponseOutput{})
	pulumi.RegisterOutputType(VideoAnalyzerIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(VideoFlagsResponseOutput{})
	pulumi.RegisterOutputType(VideoFlagsResponsePtrOutput{})
	pulumi.RegisterOutputType(VideoMediaInfoResponseOutput{})
	pulumi.RegisterOutputType(VideoMediaInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(VideoStreamingResponseOutput{})
	pulumi.RegisterOutputType(VideoStreamingResponsePtrOutput{})
}
