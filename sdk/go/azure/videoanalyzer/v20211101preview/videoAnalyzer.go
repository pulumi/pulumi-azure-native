// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20211101preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Video Analyzer account.
type VideoAnalyzer struct {
	pulumi.CustomResourceState

	// The account encryption properties.
	Encryption AccountEncryptionResponsePtrOutput `pulumi:"encryption"`
	// The endpoints associated with this resource.
	Endpoints EndpointResponseArrayOutput `pulumi:"endpoints"`
	// The identities associated to the Video Analyzer resource.
	Identity VideoAnalyzerIdentityResponsePtrOutput `pulumi:"identity"`
	// The IoT Hubs for this resource.
	IotHubs IotHubResponseArrayOutput `pulumi:"iotHubs"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Network access control for Video Analyzer.
	NetworkAccessControl NetworkAccessControlResponsePtrOutput `pulumi:"networkAccessControl"`
	// Private Endpoint Connections created under Video Analyzer account.
	PrivateEndpointConnections PrivateEndpointConnectionResponseArrayOutput `pulumi:"privateEndpointConnections"`
	// Provisioning state of the Video Analyzer account.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Whether or not public network access is allowed for resources under the Video Analyzer account.
	PublicNetworkAccess pulumi.StringPtrOutput `pulumi:"publicNetworkAccess"`
	// The storage accounts for this resource.
	StorageAccounts StorageAccountResponseArrayOutput `pulumi:"storageAccounts"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewVideoAnalyzer registers a new resource with the given unique name, arguments, and options.
func NewVideoAnalyzer(ctx *pulumi.Context,
	name string, args *VideoAnalyzerArgs, opts ...pulumi.ResourceOption) (*VideoAnalyzer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.StorageAccounts == nil {
		return nil, errors.New("invalid value for required argument 'StorageAccounts'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:videoanalyzer:VideoAnalyzer"),
		},
		{
			Type: pulumi.String("azure-native:videoanalyzer/v20210501preview:VideoAnalyzer"),
		},
	})
	opts = append(opts, aliases)
	var resource VideoAnalyzer
	err := ctx.RegisterResource("azure-native:videoanalyzer/v20211101preview:VideoAnalyzer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVideoAnalyzer gets an existing VideoAnalyzer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVideoAnalyzer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VideoAnalyzerState, opts ...pulumi.ResourceOption) (*VideoAnalyzer, error) {
	var resource VideoAnalyzer
	err := ctx.ReadResource("azure-native:videoanalyzer/v20211101preview:VideoAnalyzer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VideoAnalyzer resources.
type videoAnalyzerState struct {
}

type VideoAnalyzerState struct {
}

func (VideoAnalyzerState) ElementType() reflect.Type {
	return reflect.TypeOf((*videoAnalyzerState)(nil)).Elem()
}

type videoAnalyzerArgs struct {
	// The Video Analyzer account name.
	AccountName *string `pulumi:"accountName"`
	// The account encryption properties.
	Encryption *AccountEncryption `pulumi:"encryption"`
	// The identities associated to the Video Analyzer resource.
	Identity *VideoAnalyzerIdentity `pulumi:"identity"`
	// The IoT Hubs for this resource.
	IotHubs []IotHub `pulumi:"iotHubs"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Network access control for Video Analyzer.
	NetworkAccessControl *NetworkAccessControl `pulumi:"networkAccessControl"`
	// Whether or not public network access is allowed for resources under the Video Analyzer account.
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The storage accounts for this resource.
	StorageAccounts []StorageAccount `pulumi:"storageAccounts"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a VideoAnalyzer resource.
type VideoAnalyzerArgs struct {
	// The Video Analyzer account name.
	AccountName pulumi.StringPtrInput
	// The account encryption properties.
	Encryption AccountEncryptionPtrInput
	// The identities associated to the Video Analyzer resource.
	Identity VideoAnalyzerIdentityPtrInput
	// The IoT Hubs for this resource.
	IotHubs IotHubArrayInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Network access control for Video Analyzer.
	NetworkAccessControl NetworkAccessControlPtrInput
	// Whether or not public network access is allowed for resources under the Video Analyzer account.
	PublicNetworkAccess pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The storage accounts for this resource.
	StorageAccounts StorageAccountArrayInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (VideoAnalyzerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*videoAnalyzerArgs)(nil)).Elem()
}

type VideoAnalyzerInput interface {
	pulumi.Input

	ToVideoAnalyzerOutput() VideoAnalyzerOutput
	ToVideoAnalyzerOutputWithContext(ctx context.Context) VideoAnalyzerOutput
}

func (*VideoAnalyzer) ElementType() reflect.Type {
	return reflect.TypeOf((**VideoAnalyzer)(nil)).Elem()
}

func (i *VideoAnalyzer) ToVideoAnalyzerOutput() VideoAnalyzerOutput {
	return i.ToVideoAnalyzerOutputWithContext(context.Background())
}

func (i *VideoAnalyzer) ToVideoAnalyzerOutputWithContext(ctx context.Context) VideoAnalyzerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoAnalyzerOutput)
}

type VideoAnalyzerOutput struct{ *pulumi.OutputState }

func (VideoAnalyzerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VideoAnalyzer)(nil)).Elem()
}

func (o VideoAnalyzerOutput) ToVideoAnalyzerOutput() VideoAnalyzerOutput {
	return o
}

func (o VideoAnalyzerOutput) ToVideoAnalyzerOutputWithContext(ctx context.Context) VideoAnalyzerOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(VideoAnalyzerOutput{})
}
