// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package videoanalyzer

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The representation of a single video in a Video Analyzer account.
// API Version: 2021-05-01-preview.
type Video struct {
	pulumi.CustomResourceState

	// Optional video description provided by the user. Value can be up to 2048 characters long.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Video flags contain information about the available video actions and its dynamic properties based on the current video state.
	Flags VideoFlagsResponseOutput `pulumi:"flags"`
	// Contains information about the video and audio content.
	MediaInfo VideoMediaInfoResponseOutput `pulumi:"mediaInfo"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Video streaming holds information about video streaming URLs.
	Streaming VideoStreamingResponseOutput `pulumi:"streaming"`
	// The system metadata relating to this resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Optional video title provided by the user. Value can be up to 256 characters long.
	Title pulumi.StringPtrOutput `pulumi:"title"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewVideo registers a new resource with the given unique name, arguments, and options.
func NewVideo(ctx *pulumi.Context,
	name string, args *VideoArgs, opts ...pulumi.ResourceOption) (*Video, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:videoanalyzer:Video"),
		},
		{
			Type: pulumi.String("azure-native:videoanalyzer/v20210501preview:Video"),
		},
		{
			Type: pulumi.String("azure-nextgen:videoanalyzer/v20210501preview:Video"),
		},
	})
	opts = append(opts, aliases)
	var resource Video
	err := ctx.RegisterResource("azure-native:videoanalyzer:Video", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVideo gets an existing Video resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVideo(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VideoState, opts ...pulumi.ResourceOption) (*Video, error) {
	var resource Video
	err := ctx.ReadResource("azure-native:videoanalyzer:Video", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Video resources.
type videoState struct {
	// Optional video description provided by the user. Value can be up to 2048 characters long.
	Description *string `pulumi:"description"`
	// Video flags contain information about the available video actions and its dynamic properties based on the current video state.
	Flags *VideoFlagsResponse `pulumi:"flags"`
	// Contains information about the video and audio content.
	MediaInfo *VideoMediaInfoResponse `pulumi:"mediaInfo"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// Video streaming holds information about video streaming URLs.
	Streaming *VideoStreamingResponse `pulumi:"streaming"`
	// The system metadata relating to this resource.
	SystemData *SystemDataResponse `pulumi:"systemData"`
	// Optional video title provided by the user. Value can be up to 256 characters long.
	Title *string `pulumi:"title"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `pulumi:"type"`
}

type VideoState struct {
	// Optional video description provided by the user. Value can be up to 2048 characters long.
	Description pulumi.StringPtrInput
	// Video flags contain information about the available video actions and its dynamic properties based on the current video state.
	Flags VideoFlagsResponsePtrInput
	// Contains information about the video and audio content.
	MediaInfo VideoMediaInfoResponsePtrInput
	// The name of the resource
	Name pulumi.StringPtrInput
	// Video streaming holds information about video streaming URLs.
	Streaming VideoStreamingResponsePtrInput
	// The system metadata relating to this resource.
	SystemData SystemDataResponsePtrInput
	// Optional video title provided by the user. Value can be up to 256 characters long.
	Title pulumi.StringPtrInput
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringPtrInput
}

func (VideoState) ElementType() reflect.Type {
	return reflect.TypeOf((*videoState)(nil)).Elem()
}

type videoArgs struct {
	// The Azure Video Analyzer account name.
	AccountName string `pulumi:"accountName"`
	// Optional video description provided by the user. Value can be up to 2048 characters long.
	Description *string `pulumi:"description"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Optional video title provided by the user. Value can be up to 256 characters long.
	Title *string `pulumi:"title"`
	// The name of the video to create or update.
	VideoName *string `pulumi:"videoName"`
}

// The set of arguments for constructing a Video resource.
type VideoArgs struct {
	// The Azure Video Analyzer account name.
	AccountName pulumi.StringInput
	// Optional video description provided by the user. Value can be up to 2048 characters long.
	Description pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Optional video title provided by the user. Value can be up to 256 characters long.
	Title pulumi.StringPtrInput
	// The name of the video to create or update.
	VideoName pulumi.StringPtrInput
}

func (VideoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*videoArgs)(nil)).Elem()
}

type VideoInput interface {
	pulumi.Input

	ToVideoOutput() VideoOutput
	ToVideoOutputWithContext(ctx context.Context) VideoOutput
}

func (*Video) ElementType() reflect.Type {
	return reflect.TypeOf((*Video)(nil))
}

func (i *Video) ToVideoOutput() VideoOutput {
	return i.ToVideoOutputWithContext(context.Background())
}

func (i *Video) ToVideoOutputWithContext(ctx context.Context) VideoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoOutput)
}

type VideoOutput struct {
	*pulumi.OutputState
}

func (VideoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Video)(nil))
}

func (o VideoOutput) ToVideoOutput() VideoOutput {
	return o
}

func (o VideoOutput) ToVideoOutputWithContext(ctx context.Context) VideoOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(VideoOutput{})
}
