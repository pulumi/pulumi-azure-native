// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20160701

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource group information.
//
// Deprecated: Version 2016-07-01 will be removed in v2 of the provider.
type ResourceGroup struct {
	pulumi.CustomResourceState

	// The location of the resource group. It cannot be changed after the resource group has been created. Has to be one of the supported Azure Locations, such as West US, East US, West Europe, East Asia, etc.
	Location pulumi.StringOutput `pulumi:"location"`
	// The Name of the resource group.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// The resource group properties.
	Properties ResourceGroupPropertiesResponseOutput `pulumi:"properties"`
	// The tags attached to the resource group.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewResourceGroup registers a new resource with the given unique name, arguments, and options.
func NewResourceGroup(ctx *pulumi.Context,
	name string, args *ResourceGroupArgs, opts ...pulumi.ResourceOption) (*ResourceGroup, error) {
	if args == nil {
		args = &ResourceGroupArgs{}
	}

	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:resources:ResourceGroup"),
		},
		{
			Type: pulumi.String("azure-native:resources/v20151101:ResourceGroup"),
		},
		{
			Type: pulumi.String("azure-native:resources/v20160201:ResourceGroup"),
		},
		{
			Type: pulumi.String("azure-native:resources/v20160901:ResourceGroup"),
		},
		{
			Type: pulumi.String("azure-native:resources/v20170510:ResourceGroup"),
		},
		{
			Type: pulumi.String("azure-native:resources/v20180201:ResourceGroup"),
		},
		{
			Type: pulumi.String("azure-native:resources/v20180501:ResourceGroup"),
		},
		{
			Type: pulumi.String("azure-native:resources/v20190301:ResourceGroup"),
		},
		{
			Type: pulumi.String("azure-native:resources/v20190501:ResourceGroup"),
		},
		{
			Type: pulumi.String("azure-native:resources/v20190510:ResourceGroup"),
		},
		{
			Type: pulumi.String("azure-native:resources/v20190701:ResourceGroup"),
		},
		{
			Type: pulumi.String("azure-native:resources/v20190801:ResourceGroup"),
		},
		{
			Type: pulumi.String("azure-native:resources/v20191001:ResourceGroup"),
		},
		{
			Type: pulumi.String("azure-native:resources/v20200601:ResourceGroup"),
		},
		{
			Type: pulumi.String("azure-native:resources/v20200801:ResourceGroup"),
		},
		{
			Type: pulumi.String("azure-native:resources/v20201001:ResourceGroup"),
		},
		{
			Type: pulumi.String("azure-native:resources/v20210101:ResourceGroup"),
		},
		{
			Type: pulumi.String("azure-native:resources/v20210401:ResourceGroup"),
		},
	})
	opts = append(opts, aliases)
	var resource ResourceGroup
	err := ctx.RegisterResource("azure-native:resources/v20160701:ResourceGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceGroup gets an existing ResourceGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceGroupState, opts ...pulumi.ResourceOption) (*ResourceGroup, error) {
	var resource ResourceGroup
	err := ctx.ReadResource("azure-native:resources/v20160701:ResourceGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceGroup resources.
type resourceGroupState struct {
}

type ResourceGroupState struct {
}

func (ResourceGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceGroupState)(nil)).Elem()
}

type resourceGroupArgs struct {
	// The location of the resource group. It cannot be changed after the resource group has been created. Has to be one of the supported Azure Locations, such as West US, East US, West Europe, East Asia, etc.
	Location *string `pulumi:"location"`
	// The Name of the resource group.
	Name *string `pulumi:"name"`
	// The name of the resource group to be created or updated.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The tags attached to the resource group.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ResourceGroup resource.
type ResourceGroupArgs struct {
	// The location of the resource group. It cannot be changed after the resource group has been created. Has to be one of the supported Azure Locations, such as West US, East US, West Europe, East Asia, etc.
	Location pulumi.StringPtrInput
	// The Name of the resource group.
	Name pulumi.StringPtrInput
	// The name of the resource group to be created or updated.
	ResourceGroupName pulumi.StringPtrInput
	// The tags attached to the resource group.
	Tags pulumi.StringMapInput
}

func (ResourceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceGroupArgs)(nil)).Elem()
}

type ResourceGroupInput interface {
	pulumi.Input

	ToResourceGroupOutput() ResourceGroupOutput
	ToResourceGroupOutputWithContext(ctx context.Context) ResourceGroupOutput
}

func (*ResourceGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGroup)(nil)).Elem()
}

func (i *ResourceGroup) ToResourceGroupOutput() ResourceGroupOutput {
	return i.ToResourceGroupOutputWithContext(context.Background())
}

func (i *ResourceGroup) ToResourceGroupOutputWithContext(ctx context.Context) ResourceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupOutput)
}

type ResourceGroupOutput struct{ *pulumi.OutputState }

func (ResourceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGroup)(nil)).Elem()
}

func (o ResourceGroupOutput) ToResourceGroupOutput() ResourceGroupOutput {
	return o
}

func (o ResourceGroupOutput) ToResourceGroupOutputWithContext(ctx context.Context) ResourceGroupOutput {
	return o
}

// The location of the resource group. It cannot be changed after the resource group has been created. Has to be one of the supported Azure Locations, such as West US, East US, West Europe, East Asia, etc.
func (o ResourceGroupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceGroup) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The Name of the resource group.
func (o ResourceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceGroup) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource group properties.
func (o ResourceGroupOutput) Properties() ResourceGroupPropertiesResponseOutput {
	return o.ApplyT(func(v *ResourceGroup) ResourceGroupPropertiesResponseOutput { return v.Properties }).(ResourceGroupPropertiesResponseOutput)
}

// The tags attached to the resource group.
func (o ResourceGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ResourceGroup) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(ResourceGroupOutput{})
}
