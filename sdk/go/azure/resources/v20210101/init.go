// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210101

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure-native/sdk/go/azure"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure-native:resources/v20210101:Deployment":
		r = &Deployment{}
	case "azure-native:resources/v20210101:DeploymentAtManagementGroupScope":
		r = &DeploymentAtManagementGroupScope{}
	case "azure-native:resources/v20210101:DeploymentAtScope":
		r = &DeploymentAtScope{}
	case "azure-native:resources/v20210101:DeploymentAtSubscriptionScope":
		r = &DeploymentAtSubscriptionScope{}
	case "azure-native:resources/v20210101:DeploymentAtTenantScope":
		r = &DeploymentAtTenantScope{}
	case "azure-native:resources/v20210101:Resource":
		r = &Resource{}
	case "azure-native:resources/v20210101:ResourceGroup":
		r = &ResourceGroup{}
	case "azure-native:resources/v20210101:TagAtScope":
		r = &TagAtScope{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := azure.PkgVersion()
	if err != nil {
		fmt.Printf("failed to determine package version. defaulting to v1: %v\n", err)
	}
	pulumi.RegisterResourceModule(
		"azure-native",
		"resources/v20210101",
		&module{version},
	)
}
