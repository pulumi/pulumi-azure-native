// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190601preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Template Spec object.
func LookupTemplateSpec(ctx *pulumi.Context, args *LookupTemplateSpecArgs, opts ...pulumi.InvokeOption) (*LookupTemplateSpecResult, error) {
	var rv LookupTemplateSpecResult
	err := ctx.Invoke("azure-native:resources/v20190601preview:getTemplateSpec", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTemplateSpecArgs struct {
	// Allows for expansion of additional Template Spec details in the response. Optional.
	Expand *string `pulumi:"expand"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the Template Spec.
	TemplateSpecName string `pulumi:"templateSpecName"`
}

// Template Spec object.
type LookupTemplateSpecResult struct {
	// Template Spec description.
	Description *string `pulumi:"description"`
	// Template Spec display name.
	DisplayName *string `pulumi:"displayName"`
	// String Id used to locate any resource on Azure.
	Id string `pulumi:"id"`
	// The location of the Template Spec. It cannot be changed after Template Spec creation. It must be one of the supported Azure locations.
	Location string `pulumi:"location"`
	// Name of this resource.
	Name string `pulumi:"name"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Type of this resource.
	Type string `pulumi:"type"`
	// High-level information about the versions within this Template Spec. The keys are the version names. Only populated if the $expand query parameter is set to 'versions'.
	Versions map[string]TemplateSpecVersionInfoResponse `pulumi:"versions"`
}

func LookupTemplateSpecOutput(ctx *pulumi.Context, args LookupTemplateSpecOutputArgs, opts ...pulumi.InvokeOption) LookupTemplateSpecResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTemplateSpecResult, error) {
			args := v.(LookupTemplateSpecArgs)
			r, err := LookupTemplateSpec(ctx, &args, opts...)
			var s LookupTemplateSpecResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTemplateSpecResultOutput)
}

type LookupTemplateSpecOutputArgs struct {
	// Allows for expansion of additional Template Spec details in the response. Optional.
	Expand pulumi.StringPtrInput `pulumi:"expand"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of the Template Spec.
	TemplateSpecName pulumi.StringInput `pulumi:"templateSpecName"`
}

func (LookupTemplateSpecOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTemplateSpecArgs)(nil)).Elem()
}

// Template Spec object.
type LookupTemplateSpecResultOutput struct{ *pulumi.OutputState }

func (LookupTemplateSpecResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTemplateSpecResult)(nil)).Elem()
}

func (o LookupTemplateSpecResultOutput) ToLookupTemplateSpecResultOutput() LookupTemplateSpecResultOutput {
	return o
}

func (o LookupTemplateSpecResultOutput) ToLookupTemplateSpecResultOutputWithContext(ctx context.Context) LookupTemplateSpecResultOutput {
	return o
}

// Template Spec description.
func (o LookupTemplateSpecResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTemplateSpecResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Template Spec display name.
func (o LookupTemplateSpecResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTemplateSpecResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// String Id used to locate any resource on Azure.
func (o LookupTemplateSpecResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateSpecResult) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the Template Spec. It cannot be changed after Template Spec creation. It must be one of the supported Azure locations.
func (o LookupTemplateSpecResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateSpecResult) string { return v.Location }).(pulumi.StringOutput)
}

// Name of this resource.
func (o LookupTemplateSpecResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateSpecResult) string { return v.Name }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupTemplateSpecResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupTemplateSpecResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupTemplateSpecResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupTemplateSpecResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Type of this resource.
func (o LookupTemplateSpecResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTemplateSpecResult) string { return v.Type }).(pulumi.StringOutput)
}

// High-level information about the versions within this Template Spec. The keys are the version names. Only populated if the $expand query parameter is set to 'versions'.
func (o LookupTemplateSpecResultOutput) Versions() TemplateSpecVersionInfoResponseMapOutput {
	return o.ApplyT(func(v LookupTemplateSpecResult) map[string]TemplateSpecVersionInfoResponse { return v.Versions }).(TemplateSpecVersionInfoResponseMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTemplateSpecResultOutput{})
}
